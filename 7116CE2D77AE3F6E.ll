; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/PAQ8p/paq8p.cpp'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/PAQ8p/paq8p.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.ProgramChecker = type { i32, i32, i64 }
%class.Random = type <{ %class.Array, i32, [4 x i8] }>
%class.Array = type { i32, i32, ptr, ptr }
%class.Buf = type { %class.Array.0 }
%class.Array.0 = type { i32, i32, ptr, ptr }
%class.Ilog = type { %class.Array.0 }
%class.Stretch = type { %class.Array.1 }
%class.Array.1 = type { i32, i32, ptr, ptr }
%class.Array.3 = type { i32, i32, ptr, ptr }
%class.SmallStationaryContextMap = type { %class.Array.4, i32, ptr }
%class.Array.4 = type { i32, i32, ptr, ptr }
%class.StateMap = type { i32, i32, %class.Array }
%class.ContextMap = type <{ i32, [4 x i8], %class.Array.5, %class.Array.6, %class.Array.6, %class.Array, %class.Array.6, ptr, i32, [4 x i8] }>
%class.Array.5 = type { i32, i32, ptr, ptr }
%class.Array.6 = type { i32, i32, ptr, ptr }
%class.Array.7 = type { i32, i32, ptr, ptr }
%class.IntBuf = type { %class.Array.3 }
%class.BH = type <{ %class.Array.8, i32, [4 x i8] }>
%class.Array.8 = type { i32, i32, ptr, ptr }
%class.Mixer = type { i32, i32, i32, %class.Array.2, %class.Array.2, %class.Array.3, i32, i32, i32, %class.Array.3, ptr }
%class.Array.2 = type { i32, i32, ptr, ptr }
%class.APM = type { %class.StateMap }
%class.Array.9 = type { i32, i32, ptr, ptr }
%class.RunContextMap = type { %class.BH.10, ptr }
%class.BH.10 = type <{ %class.Array.8, i32, [4 x i8] }>
%class.APM1 = type { i32, i32, %class.Array.4 }
%class.String = type { %class.Array.12 }
%class.Array.12 = type { i32, i32, ptr, ptr }
%"class.ContextMap::E" = type { [7 x i16], i8, [7 x [7 x i8]] }
%struct.HUF = type { i32, i32, i32 }
%struct.DMCNode = type { [2 x i32], i8, [3 x i8] }
%class.Encoder = type { %class.Predictor, i32, ptr, i32, i32, i32, ptr }
%class.Predictor = type { i32 }
%class.Array.13 = type { i32, i32, ptr, ptr }
%class.Array.14 = type { i32, i32, ptr, ptr }

$_ZN6RandomD2Ev = comdat any

$_ZN3BufC2Ei = comdat any

$_ZN3BufD2Ev = comdat any

$_ZN4IlogD2Ev = comdat any

$_ZN5ArrayIhLi0EEC2Ei = comdat any

$_ZN5ArrayIhLi0EED2Ev = comdat any

$_ZN7StretchD2Ev = comdat any

$_ZN5ArrayIiLi0EED2Ev = comdat any

$_ZN5ArrayIsLi16EED2Ev = comdat any

$_ZN5ArrayIiLi0EEC2Ei = comdat any

$_ZN5ArrayIjLi0EEC2Ei = comdat any

$_ZN5ArrayIjLi0EED2Ev = comdat any

$_ZN5ArrayIPhLi0EEC2Ei = comdat any

$_ZN8StateMapD2Ev = comdat any

$_ZN5ArrayIPhLi0EED2Ev = comdat any

$_ZN5ArrayIN10ContextMap1EELi64EED2Ev = comdat any

$_ZN10ContextMap1E3getEt = comdat any

$_ZN25SmallStationaryContextMapC2Ei = comdat any

$_ZN25SmallStationaryContextMapD2Ev = comdat any

$_Z2i4i = comdat any

$_ZN5ArrayI3HUFLi0EEC2Ei = comdat any

$_ZN5ArrayI3HUFLi0EED2Ev = comdat any

$_ZN6IntBufC2Ei = comdat any

$_ZN6IntBufD2Ev = comdat any

$_ZN2BHILi9EEC2Ei = comdat any

$_ZN2BHILi9EED2Ev = comdat any

$_ZN2BHILi9EEixEj = comdat any

$_ZN5Mixer1pEv = comdat any

$_ZN3APM1pEiii = comdat any

$_Z1Xii = comdat any

$_ZN5ArrayI7DMCNodeLi0EEC2Ei = comdat any

$_ZN5ArrayI7DMCNodeLi0EED2Ev = comdat any

$_ZN13RunContextMapC2Ei = comdat any

$_ZN13RunContextMapD2Ev = comdat any

$_ZN4APM1D2Ev = comdat any

$_ZN7Encoder10decompressEv = comdat any

$_ZN7Encoder8compressEi = comdat any

$_ZN6StringC2EPKc = comdat any

$_ZN5ArrayIcLi0EED2Ev = comdat any

$_ZN5ArrayIcLi0EE6resizeEi = comdat any

$_ZN5ArrayIPcLi0EE6resizeEi = comdat any

$_ZN5ArrayIlLi0EE6resizeEi = comdat any

$_ZN2BHILi4EEixEj = comdat any

$_ZN7Encoder4codeEi = comdat any

$_ZN5ArrayIhLi0EE6resizeEi = comdat any

$_ZZN2BHILi4EEixEjE3tmp = comdat any

$_ZZN2BHILi9EEixEjE3tmp = comdat any

@_ZTIPKc = external constant ptr
@programChecker = dso_local local_unnamed_addr global %class.ProgramChecker zeroinitializer, align 8
@rnd = dso_local global %class.Random zeroinitializer, align 8
@__dso_handle = external hidden global i8
@pos = dso_local local_unnamed_addr global i32 0, align 4
@level = dso_local local_unnamed_addr global i32 5, align 4
@y = dso_local local_unnamed_addr global i32 0, align 4
@c0 = dso_local local_unnamed_addr global i32 1, align 4
@c4 = dso_local local_unnamed_addr global i32 0, align 4
@bpos = dso_local local_unnamed_addr global i32 0, align 4
@buf = dso_local global %class.Buf zeroinitializer, align 8
@ilog = dso_local global %class.Ilog zeroinitializer, align 8
@_ZZ6squashiE1t = internal unnamed_addr constant [33 x i32] [i32 1, i32 2, i32 3, i32 6, i32 10, i32 16, i32 27, i32 45, i32 73, i32 120, i32 194, i32 310, i32 488, i32 747, i32 1101, i32 1546, i32 2047, i32 2549, i32 2994, i32 3348, i32 3607, i32 3785, i32 3901, i32 3975, i32 4022, i32 4050, i32 4068, i32 4079, i32 4085, i32 4089, i32 4092, i32 4093, i32 4094], align 16
@stretch = dso_local global %class.Stretch zeroinitializer, align 8
@_ZL11State_table = internal unnamed_addr constant [256 x [4 x i8]] [[4 x i8] c"\01\02\00\00", [4 x i8] c"\03\05\01\00", [4 x i8] c"\04\06\00\01", [4 x i8] c"\07\0A\02\00", [4 x i8] c"\08\0C\01\01", [4 x i8] c"\09\0D\01\01", [4 x i8] c"\0B\0E\00\02", [4 x i8] c"\0F\13\03\00", [4 x i8] c"\10\17\02\01", [4 x i8] c"\11\18\02\01", [4 x i8] c"\12\19\02\01", [4 x i8] c"\14\1B\01\02", [4 x i8] c"\15\1C\01\02", [4 x i8] c"\16\1D\01\02", [4 x i8] c"\1A\1E\00\03", [4 x i8] c"\1F!\04\00", [4 x i8] c" #\03\01", [4 x i8] c" #\03\01", [4 x i8] c" #\03\01", [4 x i8] c" #\03\01", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"$'\01\03", [4 x i8] c"$'\01\03", [4 x i8] c"$'\01\03", [4 x i8] c"$'\01\03", [4 x i8] c"&(\00\04", [4 x i8] c")+\05\00", [4 x i8] c"*-\04\01", [4 x i8] c"*-\04\01", [4 x i8] c",/\03\02", [4 x i8] c",/\03\02", [4 x i8] c".1\02\03", [4 x i8] c".1\02\03", [4 x i8] c"03\01\04", [4 x i8] c"03\01\04", [4 x i8] c"24\00\05", [4 x i8] c"5+\06\00", [4 x i8] c"69\05\01", [4 x i8] c"69\05\01", [4 x i8] c"8;\04\02", [4 x i8] c"8;\04\02", [4 x i8] c":=\03\03", [4 x i8] c":=\03\03", [4 x i8] c"<?\02\04", [4 x i8] c"<?\02\04", [4 x i8] c">A\01\05", [4 x i8] c">A\01\05", [4 x i8] c"2B\00\06", [4 x i8] c"C7\07\00", [4 x i8] c"D9\06\01", [4 x i8] c"D9\06\01", [4 x i8] c"FI\05\02", [4 x i8] c"FI\05\02", [4 x i8] c"HK\04\03", [4 x i8] c"HK\04\03", [4 x i8] c"JM\03\04", [4 x i8] c"JM\03\04", [4 x i8] c"LO\02\05", [4 x i8] c"LO\02\05", [4 x i8] c">Q\01\06", [4 x i8] c">Q\01\06", [4 x i8] c"@R\00\07", [4 x i8] c"SE\08\00", [4 x i8] c"TG\07\01", [4 x i8] c"TG\07\01", [4 x i8] c"VI\06\02", [4 x i8] c"VI\06\02", [4 x i8] c",;\05\03", [4 x i8] c",;\05\03", [4 x i8] c":=\04\04", [4 x i8] c":=\04\04", [4 x i8] c"<1\03\05", [4 x i8] c"<1\03\05", [4 x i8] c"LY\02\06", [4 x i8] c"LY\02\06", [4 x i8] c"N[\01\07", [4 x i8] c"N[\01\07", [4 x i8] c"P\\\00\08", [4 x i8] c"]E\09\00", [4 x i8] c"^W\08\01", [4 x i8] c"^W\08\01", [4 x i8] c"`-\07\02", [4 x i8] c"`-\07\02", [4 x i8] c"0c\02\07", [4 x i8] c"0c\02\07", [4 x i8] c"Xe\01\08", [4 x i8] c"Xe\01\08", [4 x i8] c"Pf\00\09", [4 x i8] c"gE\0A\00", [4 x i8] c"hW\09\01", [4 x i8] c"hW\09\01", [4 x i8] c"j9\08\02", [4 x i8] c"j9\08\02", [4 x i8] c">m\02\08", [4 x i8] c">m\02\08", [4 x i8] c"Xo\01\09", [4 x i8] c"Xo\01\09", [4 x i8] c"Pp\00\0A", [4 x i8] c"qU\0B\00", [4 x i8] c"rW\0A\01", [4 x i8] c"rW\0A\01", [4 x i8] c"t9\09\02", [4 x i8] c"t9\09\02", [4 x i8] c">w\02\09", [4 x i8] c">w\02\09", [4 x i8] c"Xy\01\0A", [4 x i8] c"Xy\01\0A", [4 x i8] c"Zz\00\0B", [4 x i8] c"{U\0C\00", [4 x i8] c"|a\0B\01", [4 x i8] c"|a\0B\01", [4 x i8] c"~9\0A\02", [4 x i8] c"~9\0A\02", [4 x i8] c">\81\02\0A", [4 x i8] c">\81\02\0A", [4 x i8] c"b\83\01\0B", [4 x i8] c"b\83\01\0B", [4 x i8] c"Z\84\00\0C", [4 x i8] c"\85U\0D\00", [4 x i8] c"\86a\0C\01", [4 x i8] c"\86a\0C\01", [4 x i8] c"\889\0B\02", [4 x i8] c"\889\0B\02", [4 x i8] c">\8B\02\0B", [4 x i8] c">\8B\02\0B", [4 x i8] c"b\8D\01\0C", [4 x i8] c"b\8D\01\0C", [4 x i8] c"Z\8E\00\0D", [4 x i8] c"\8F_\0E\00", [4 x i8] c"\90a\0D\01", [4 x i8] c"\90a\0D\01", [4 x i8] c"D9\0C\02", [4 x i8] c"D9\0C\02", [4 x i8] c">Q\02\0C", [4 x i8] c">Q\02\0C", [4 x i8] c"b\93\01\0D", [4 x i8] c"b\93\01\0D", [4 x i8] c"d\94\00\0E", [4 x i8] c"\95_\0F\00", [4 x i8] c"\96k\0E\01", [4 x i8] c"\96k\0E\01", [4 x i8] c"l\97\01\0E", [4 x i8] c"l\97\01\0E", [4 x i8] c"d\98\00\0F", [4 x i8] c"\99_\10\00", [4 x i8] c"\9Ak\0F\01", [4 x i8] c"l\9B\01\0F", [4 x i8] c"d\9C\00\10", [4 x i8] c"\9D_\11\00", [4 x i8] c"\9Ek\10\01", [4 x i8] c"l\9F\01\10", [4 x i8] c"d\A0\00\11", [4 x i8] c"\A1i\12\00", [4 x i8] c"\A2k\11\01", [4 x i8] c"l\A3\01\11", [4 x i8] c"n\A4\00\12", [4 x i8] c"\A5i\13\00", [4 x i8] c"\A6u\12\01", [4 x i8] c"v\A7\01\12", [4 x i8] c"n\A8\00\13", [4 x i8] c"\A9i\14\00", [4 x i8] c"\AAu\13\01", [4 x i8] c"v\AB\01\13", [4 x i8] c"n\AC\00\14", [4 x i8] c"\ADi\15\00", [4 x i8] c"\AEu\14\01", [4 x i8] c"v\AF\01\14", [4 x i8] c"n\B0\00\15", [4 x i8] c"\B1i\16\00", [4 x i8] c"\B2u\15\01", [4 x i8] c"v\B3\01\15", [4 x i8] c"n\B4\00\16", [4 x i8] c"\B5s\17\00", [4 x i8] c"\B6u\16\01", [4 x i8] c"v\B7\01\16", [4 x i8] c"x\B8\00\17", [4 x i8] c"\B9s\18\00", [4 x i8] c"\BA\7F\17\01", [4 x i8] c"\80\BB\01\17", [4 x i8] c"x\BC\00\18", [4 x i8] c"\BDs\19\00", [4 x i8] c"\BE\7F\18\01", [4 x i8] c"\80\BF\01\18", [4 x i8] c"x\C0\00\19", [4 x i8] c"\C1s\1A\00", [4 x i8] c"\C2\7F\19\01", [4 x i8] c"\80\C3\01\19", [4 x i8] c"x\C4\00\1A", [4 x i8] c"\C5s\1B\00", [4 x i8] c"\C6\7F\1A\01", [4 x i8] c"\80\C7\01\1A", [4 x i8] c"x\C8\00\1B", [4 x i8] c"\C9s\1C\00", [4 x i8] c"\CA\7F\1B\01", [4 x i8] c"\80\CB\01\1B", [4 x i8] c"x\CC\00\1C", [4 x i8] c"\CDs\1D\00", [4 x i8] c"\CE\7F\1C\01", [4 x i8] c"\80\CF\01\1C", [4 x i8] c"x\D0\00\1D", [4 x i8] c"\D1}\1E\00", [4 x i8] c"\D2\7F\1D\01", [4 x i8] c"\80\D3\01\1D", [4 x i8] c"\82\D4\00\1E", [4 x i8] c"\D5}\1F\00", [4 x i8] c"\D6\89\1E\01", [4 x i8] c"\8A\D7\01\1E", [4 x i8] c"\82\D8\00\1F", [4 x i8] c"\D9} \00", [4 x i8] c"\DA\89\1F\01", [4 x i8] c"\8A\DB\01\1F", [4 x i8] c"\82\DC\00 ", [4 x i8] c"\DD}!\00", [4 x i8] c"\DE\89 \01", [4 x i8] c"\8A\DF\01 ", [4 x i8] c"\82\E0\00!", [4 x i8] c"\E1}\22\00", [4 x i8] c"\E2\89!\01", [4 x i8] c"\8A\E3\01!", [4 x i8] c"\82\E4\00\22", [4 x i8] c"\E5}#\00", [4 x i8] c"\E6\89\22\01", [4 x i8] c"\8A\E7\01\22", [4 x i8] c"\82\E8\00#", [4 x i8] c"\E9}$\00", [4 x i8] c"\EA\89#\01", [4 x i8] c"\8A\EB\01#", [4 x i8] c"\82\EC\00$", [4 x i8] c"\ED}%\00", [4 x i8] c"\EE\89$\01", [4 x i8] c"\8A\EF\01$", [4 x i8] c"\82\F0\00%", [4 x i8] c"\F1}&\00", [4 x i8] c"\F2\89%\01", [4 x i8] c"\8A\F3\01%", [4 x i8] c"\82\F4\00&", [4 x i8] c"\F5\87'\00", [4 x i8] c"\F6\89&\01", [4 x i8] c"\8A\F7\01&", [4 x i8] c"\8C\F8\00'", [4 x i8] c"\F9\87(\00", [4 x i8] c"\FAE'\01", [4 x i8] c"P\FB\01'", [4 x i8] c"\8C\FC\00(", [4 x i8] c"\F9\87)\00", [4 x i8] c"\FAE(\01", [4 x i8] c"P\FB\01(", [4 x i8] c"\8C\FC\00)", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], align 16
@_ZZ10matchModelR5MixerE1t = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ10matchModelR5MixerE1t = internal global i64 0, align 8
@_ZZ10matchModelR5MixerE1h = internal unnamed_addr global i32 0, align 4
@_ZZ10matchModelR5MixerE3ptr = internal unnamed_addr global i32 0, align 4
@_ZZ10matchModelR5MixerE3len = internal unnamed_addr global i32 0, align 4
@_ZZ10matchModelR5MixerE6result = internal unnamed_addr global i32 0, align 4
@_ZZ10matchModelR5MixerE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ10matchModelR5MixerE4scm1 = internal global i64 0, align 8
@_ZZ8picModelR5MixerE2r0 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE2r1 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE2r2 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE2r3 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE1t = internal global %class.Array.0 zeroinitializer, align 8
@_ZGVZ8picModelR5MixerE1t = internal global i64 0, align 8
@_ZZ8picModelR5MixerE3cxt.0 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE3cxt.1 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE3cxt.2 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE2sm = internal global [3 x %class.StateMap] zeroinitializer, align 16
@_ZGVZ8picModelR5MixerE2sm = internal global i64 0, align 8
@_ZZ9wordModelR5MixerE5word0 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word1 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word2 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word3 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word4 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word5 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5text0 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ9wordModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ9wordModelR5MixerE3nl1 = internal unnamed_addr global i32 -3, align 4
@_ZZ9wordModelR5MixerE2nl = internal unnamed_addr global i32 -2, align 4
@_ZZ11recordModelR5MixerE5cpos1 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5cpos2 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5cpos3 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5cpos4 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5wpos1 = internal unnamed_addr global [65536 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE4rlen = internal unnamed_addr global i32 2, align 4
@_ZZ11recordModelR5MixerE5rlen1 = internal unnamed_addr global i32 3, align 4
@_ZZ11recordModelR5MixerE5rlen2 = internal unnamed_addr global i32 4, align 4
@_ZZ11recordModelR5MixerE7rcount1 = internal unnamed_addr global i32 0, align 4
@_ZZ11recordModelR5MixerE7rcount2 = internal unnamed_addr global i32 0, align 4
@_ZZ11recordModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ11recordModelR5MixerE2cn = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2cn = internal global i64 0, align 8
@_ZZ11recordModelR5MixerE2co = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2co = internal global i64 0, align 8
@_ZZ11recordModelR5MixerE2cp = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2cp = internal global i64 0, align 8
@_ZZ11sparseModelR5MixeriiE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11sparseModelR5MixeriiE2cm = internal global i64 0, align 8
@_ZZ11sparseModelR5MixeriiE4mask = internal unnamed_addr global i32 0, align 4
@_ZZ13distanceModelR5MixerE2cr = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ13distanceModelR5MixerE2cr = internal global i64 0, align 8
@_ZZ13distanceModelR5MixerE5pos00 = internal unnamed_addr global i32 0, align 4
@_ZZ13distanceModelR5MixerE5pos20 = internal unnamed_addr global i32 0, align 4
@_ZZ13distanceModelR5MixerE5posnl = internal unnamed_addr global i32 0, align 4
@_ZZ8bmpModelR5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ8bmpModelR5MixerE3eoi = internal unnamed_addr global i32 0, align 4
@_ZZ8bmpModelR5MixerE4tiff = internal unnamed_addr global i32 0, align 4
@_ZZ8bmpModelR5MixerE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm1 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm2 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm2 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm3 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm3 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm4 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm4 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm5 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm5 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm6 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm6 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm7 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm7 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm8 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm8 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm9 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm9 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE5scm10 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE5scm10 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE2cm = internal global i64 0, align 8
@.str = private unnamed_addr constant [11 x i8] c"BMP %dx%d \00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"TIFF %dx%dx%d \00", align 1
@_ZZ9model8bitR5MixeriE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm1 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm2 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm2 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm3 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm3 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm4 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm4 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm5 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm5 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm6 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm6 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm7 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm7 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE2cm = internal global i64 0, align 8
@_ZZ8pgmModelR5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ8pgmModelR5MixerE3eoi = internal unnamed_addr global i32 0, align 4
@_ZZ8pgmModelR5MixerE3pgm = internal unnamed_addr global i32 0, align 4
@_ZZ8pgmModelR5MixerE7pgm_hdr = internal unnamed_addr global [3 x i32] zeroinitializer, align 4
@_ZZ8pgmModelR5MixerE7pgm_ptr = internal unnamed_addr global i32 0, align 4
@.str.6 = private unnamed_addr constant [10 x i8] c"PGM %dx%d\00", align 1
@_ZZ8pgmModelR5MixerE3col = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE1h = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE3eoi = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE3col = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE4ibmp = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE2w1 = internal unnamed_addr global i32 0, align 4
@.str.7 = private unnamed_addr constant [17 x i8] c"BMP(8-bit) %dx%d\00", align 1
@_ZZ9rgbModel8R5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ9rgbModel8R5MixerE3eoi = internal unnamed_addr global i32 0, align 4
@_ZZ9rgbModel8R5MixerE3col = internal unnamed_addr global i32 0, align 4
@.str.8 = private unnamed_addr constant [17 x i8] c"RGB(8-bit) %dx%d\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"%s:\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c" %02X\00", align 1
@_ZZ9jpegModelR5MixerE4jpeg = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE9next_jpeg = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3app = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3sof = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3sos = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4data = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE2ht = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2ht = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE6htsize = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE8huffcode = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE8huffbits = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE8huffsize = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE2rs = internal unnamed_addr global i32 -1, align 4
@_ZZ9jpegModelR5MixerE6mcupos = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3huf = internal global %class.Array.7 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE3huf = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE7mcusize = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE6hufsel = internal unnamed_addr global [2 x [10 x i32]] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE4hbuf = internal global %class.Array.0 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4hbuf = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE5color = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE5color = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4pred = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4pred = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE5width = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3row = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE6column = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4cbuf = internal global %class.Buf zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4cbuf = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4cpos = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3rs1 = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4ssum = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE5ssum1 = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE5ssum2 = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE5ssum3 = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE5cbuf2 = internal global %class.IntBuf zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE5cbuf2 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE8adv_pred = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE8adv_pred = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4sumu = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4sumu = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4sumv = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4sumv = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2ls = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2ls = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE3lcp = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE3lcp = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4zpos = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4zpos = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE9dqt_state = internal unnamed_addr global i32 -1, align 4
@_ZZ9jpegModelR5MixerE7dqt_end = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4qnum = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4qtab = internal global %class.Array.0 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4qtab = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4qmap = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4qmap = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE3zzu = internal unnamed_addr constant [64 x i8] c"\00\01\00\00\01\02\03\02\01\00\00\01\02\03\04\05\04\03\02\01\00\00\01\02\03\04\05\06\07\06\05\04\03\02\01\00\01\02\03\04\05\06\07\07\06\05\04\03\02\03\04\05\06\07\07\06\05\04\05\06\07\07\06\07", align 16
@_ZZ9jpegModelR5MixerE3zzv = internal unnamed_addr constant [64 x i8] c"\00\00\01\02\01\00\00\01\02\03\04\03\02\01\00\00\01\02\03\04\05\06\05\04\03\02\01\00\00\01\02\03\04\05\06\07\07\06\05\04\03\02\01\02\03\04\05\06\07\07\06\05\04\03\04\05\06\07\07\06\05\06\07\07", align 16
@.str.12 = private unnamed_addr constant [12 x i8] c"JPEG %dx%d \00", align 1
@_ZZ9jpegModelR5MixerE2we = internal unnamed_addr constant [8 x i32] [i32 181, i32 282, i32 353, i32 456, i32 568, i32 671, i32 742, i32 767], align 16
@_ZZ9jpegModelR5MixerE5sumu2 = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE5sumv2 = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE5sumu3 = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE5sumv3 = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE2kx = internal global [32 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE1t = internal global %class.BH zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE1t = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE3cxt = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE3cxt = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2cp = internal global %class.Array.6 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2cp = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2sm = internal global [28 x %class.StateMap] zeroinitializer, align 16
@_ZGVZ9jpegModelR5MixerE2sm = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2m1 = internal global %class.Mixer zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2m1 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2a1 = internal global %class.APM zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2a1 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2a2 = internal global %class.APM zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2a2 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE7hbcount = internal unnamed_addr global i32 2, align 4
@_ZZ8wavModelR5MixerE8channels = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE4bits = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE5bytes = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE3eof = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE1s = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE1K = internal unnamed_addr global i32 0, align 4
@_ZGVZ8wavModelR5MixerE1K = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE2pr = internal unnamed_addr global [4 x [2 x i32]] zeroinitializer, align 16
@_ZZ8wavModelR5MixerE1n = internal unnamed_addr global [2 x i32] zeroinitializer, align 4
@_ZZ8wavModelR5MixerE7counter = internal unnamed_addr global [2 x i32] zeroinitializer, align 4
@_ZZ8wavModelR5MixerE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm1 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm2 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm2 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm3 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm3 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm4 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm4 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm5 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm5 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm6 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm6 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm7 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm7 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm8 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm8 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE2cm = internal global i64 0, align 8
@_ZL1S = internal unnamed_addr global i32 0, align 4
@_ZL1D = internal unnamed_addr global i1 false, align 4
@_ZL5wmode = internal unnamed_addr global i32 0, align 4
@.str.14 = private unnamed_addr constant [12 x i8] c"WAV %ibits/\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"mono \00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"stereo \00", align 1
@_ZZ8exeModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ8exeModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ13indirectModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ13indirectModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ13indirectModelR5MixerE2t1 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ13indirectModelR5MixerE2t2 = internal unnamed_addr global [65536 x i16] zeroinitializer, align 16
@_ZZ8dmcModelR5MixerE3top = internal unnamed_addr global i32 0, align 4
@_ZZ8dmcModelR5MixerE4curr = internal unnamed_addr global i32 0, align 4
@_ZZ8dmcModelR5MixerE1t = internal global %class.Array.9 zeroinitializer, align 8
@_ZGVZ8dmcModelR5MixerE1t = internal global i64 0, align 8
@_ZZ8dmcModelR5MixerE2sm = internal global %class.StateMap zeroinitializer, align 8
@_ZGVZ8dmcModelR5MixerE2sm = internal global i64 0, align 8
@_ZZ8dmcModelR5MixerE9threshold = internal unnamed_addr global i32 256, align 4
@_ZZ13contextModel2vE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE2cm = internal global i64 0, align 8
@_ZZ13contextModel2vE4rcm7 = internal global %class.RunContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE4rcm7 = internal global i64 0, align 8
@_ZZ13contextModel2vE4rcm9 = internal global %class.RunContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE4rcm9 = internal global i64 0, align 8
@_ZZ13contextModel2vE5rcm10 = internal global %class.RunContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE5rcm10 = internal global i64 0, align 8
@_ZZ13contextModel2vE1m = internal global %class.Mixer zeroinitializer, align 8
@_ZGVZ13contextModel2vE1m = internal global i64 0, align 8
@_ZZ13contextModel2vE3cxt.1 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.2 = internal unnamed_addr global i32 0, align 8
@_ZZ13contextModel2vE3cxt.3 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.4 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.5 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.6 = internal unnamed_addr global i32 0, align 8
@_ZZ13contextModel2vE3cxt.7 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.8 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.9 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.10 = internal unnamed_addr global i32 0, align 8
@_ZZ13contextModel2vE3cxt.11 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.12 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.13 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.14 = internal unnamed_addr global i32 0, align 8
@_ZZ13contextModel2vE8filetype = internal unnamed_addr global i32 0, align 4
@_ZZ13contextModel2vE4size = internal unnamed_addr global i32 0, align 4
@_ZZ13contextModel2vE3col = internal unnamed_addr global i32 0, align 4
@_ZZ13contextModel2vE3col_0 = internal unnamed_addr global i32 0, align 4
@_ZZN9Predictor6updateEvE1a = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE1a = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a1 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a1 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a2 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a2 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a3 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a3 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a4 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a4 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a5 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a5 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a6 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a6 = internal global i64 0, align 8
@_ZL2dt = internal unnamed_addr global [1024 x i32] zeroinitializer, align 16
@.str.17 = private unnamed_addr constant [9 x i8] c"%c%c%c%c\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"encode_exe read error\00", align 1
@_ZZ10decode_exeR7EncoderE6offset = internal unnamed_addr global i32 0, align 4
@_ZZ10decode_exeR7EncoderE1q = internal unnamed_addr global i32 0, align 4
@_ZZ10decode_exeR7EncoderE4size = internal unnamed_addr global i32 0, align 4
@_ZZ10decode_exeR7EncoderE5begin = internal unnamed_addr global i32 0, align 4
@_ZZ10decode_exeR7EncoderE1c = internal unnamed_addr global [5 x i8] zeroinitializer, align 4
@.str.19 = private unnamed_addr constant [11 x i8] c"%c%c%c%c%c\00", align 1
@_ZZ6decodeR7EncoderE4type = internal unnamed_addr global i32 0, align 4
@_ZZ6decodeR7EncoderE3len = internal unnamed_addr global i32 0, align 4
@.str.20 = private unnamed_addr constant [17 x i8] c"%12d\08\08\08\08\08\08\08\08\08\08\08\08\00", align 1
@stdout = external local_unnamed_addr global ptr, align 8
@.str.21 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"%s %ld -> \00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"tmpfile\00", align 1
@.str.24 = private unnamed_addr constant [58 x i8] c"Transform fails at %ld, input=%d decoded=%d, skipping...\0A\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"%-12ld\0A\00", align 1
@.str.26 = private unnamed_addr constant [21 x i8] c"Comparing %s %ld -> \00", align 1
@.str.27 = private unnamed_addr constant [34 x i8] c"differ at %d: file=%d archive=%d\0A\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.32 = private unnamed_addr constant [22 x i8] c"Extracting %s %ld -> \00", align 1
@.str.34 = private unnamed_addr constant [20 x i8] c"Skipping %s %ld -> \00", align 1
@_ZZ7getlineP8_IO_FILEE1s = internal global %class.String zeroinitializer, align 8
@_ZGVZ7getlineP8_IO_FILEE1s = internal global i64 0, align 8
@.str.36 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZZ7putsizeR6StringS0_PKciE3blk = internal global [24 x i8] zeroinitializer, align 16
@.str.37 = private unnamed_addr constant [5 x i8] c"%ld\09\00", align 1
@.str.39 = private unnamed_addr constant [39 x i8] c"Valid options are -0 through -9 or -d\0A\00", align 1
@.str.40 = private unnamed_addr constant [645 x i8] c"paq8p archiver (C) 2008, Matt Mahoney et al.\0AFree under GPL, http://www.gnu.org/licenses/gpl.txt\0A\0ATo compress:\0A  paq8p -level file               (compresses to file.paq8p)\0A  paq8p -level archive files...   (creates archive.paq8p)\0A  paq8p file                      (level -%d, pause when done)\0Alevel: -0 = store, -1 -2 -3 = faster (uses 35, 48, 59 MB)\0A-4 -5 -6 -7 -8 = smaller (uses 133, 233, 435, 837, 1643 MB)\0A\0ATo extract or compare:\0A  paq8p -d dir1/archive.paq8p      (extract to dir1)\0A  paq8p -d dir1/archive.paq8p dir2 (extract to dir2)\0A  paq8p archive.paq8p              (extract, pause when done)\0A\0ATo view contents: more < archive.paq8p\0A\0A\00", align 1
@.str.42 = private unnamed_addr constant [28 x i8] c"%s: not found, skipping...\0A\00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"Nothing to compress\0A\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"wb+\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"paq8p -%d\0D\0A%s\1A\00", align 1
@.str.46 = private unnamed_addr constant [37 x i8] c"Creating archive with %d file(s)...\0A\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"rb+\00", align 1
@.str.48 = private unnamed_addr constant [8 x i8] c"paq8p -\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"%s: not a %s file\0A\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"paq8p\00", align 1
@.str.51 = private unnamed_addr constant [40 x i8] c"Extracting %d file(s) from archive -%d\0A\00", align 1
@.str.52 = private unnamed_addr constant [29 x i8] c"%s: header corrupted at %ld\0A\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"%ld -> %ld\0A\00", align 1
@.str.57 = private unnamed_addr constant [14 x i8] c"fork() failed\00", align 1
@.str.58 = private unnamed_addr constant [3 x i8] c"-d\00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1
@_ZZN2BHILi4EEixEjE3tmp = linkonce_odr dso_local local_unnamed_addr global [4 x i8] zeroinitializer, comdat, align 1
@stdin = external local_unnamed_addr global ptr, align 8
@_ZZN2BHILi9EEixEjE3tmp = linkonce_odr dso_local local_unnamed_addr global [9 x i8] zeroinitializer, comdat, align 1
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_paq8p.cpp, ptr null }]
@str = private unnamed_addr constant [14 x i8] c"not extracted\00", align 1
@str.60 = private unnamed_addr constant [13 x i8] c"done        \00", align 1
@str.61 = private unnamed_addr constant [13 x i8] c"identical   \00", align 1
@str.62 = private unnamed_addr constant [15 x i8] c"file is longer\00", align 1
@str.63 = private unnamed_addr constant [49 x i8] c"\0AClose this window or press ENTER to continue...\00", align 1

@_ZN4IlogC1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN4IlogC2Ev
@_ZN7StretchC1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN7StretchC2Ev
@_ZN5MixerD1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN5MixerD2Ev
@_ZN5MixerC1Eiiii = dso_local unnamed_addr alias void (ptr, i32, i32, i32, i32), ptr @_ZN5MixerC2Eiiii
@_ZN4APM1C1Ei = dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN4APM1C2Ei
@_ZN8StateMapC1Ei = dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN8StateMapC2Ei
@_ZN3APMC1Ei = dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN3APMC2Ei
@_ZN10ContextMapC1Eii = dso_local unnamed_addr alias void (ptr, i32, i32), ptr @_ZN10ContextMapC2Eii
@_ZN10ContextMapD1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN10ContextMapD2Ev
@_ZN9PredictorC1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN9PredictorC2Ev
@_ZN7EncoderC1E4ModeP8_IO_FILE = dso_local unnamed_addr alias void (ptr, i32, ptr), ptr @_ZN7EncoderC2E4ModeP8_IO_FILE

; Function Attrs: mustprogress noreturn uwtable
define dso_local void @_Z4quitPKc(ptr noundef %message) local_unnamed_addr #0 {
entry:
  %exception = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr %message, ptr %exception, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable
}

declare ptr @__cxa_allocate_exception(i64) local_unnamed_addr

declare void @__cxa_throw(ptr, ptr, ptr) local_unnamed_addr

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local noundef i32 @_Z6equalsPKcS0_(ptr nocapture noundef readonly %a, ptr nocapture noundef readonly %b) local_unnamed_addr #1 {
entry:
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %a.addr.0 = phi ptr [ %a, %entry ], [ %incdec.ptr, %while.body ]
  %b.addr.0 = phi ptr [ %b, %entry ], [ %incdec.ptr13, %while.body ]
  %0 = load i8, ptr %a.addr.0, align 1, !tbaa !9
  %tobool.not = icmp eq i8 %0, 0
  %.pre = load i8, ptr %b.addr.0, align 1, !tbaa !9
  br i1 %tobool.not, label %while.end, label %land.rhs

land.rhs:                                         ; preds = %while.cond
  %tobool1.not = icmp eq i8 %.pre, 0
  br i1 %tobool1.not, label %while.end, label %while.body

while.body:                                       ; preds = %land.rhs
  %conv = sext i8 %0 to i32
  %1 = add i8 %0, -65
  %or.cond = icmp ult i8 %1, 26
  %add = add nuw nsw i32 %conv, 32
  %spec.select = select i1 %or.cond, i32 %add, i32 %conv
  %conv3 = sext i8 %.pre to i32
  %2 = add i8 %.pre, -65
  %or.cond19 = icmp ult i8 %2, 26
  %add8 = add nuw nsw i32 %conv3, 32
  %c2.0 = select i1 %or.cond19, i32 %add8, i32 %conv3
  %cmp10.not.not = icmp eq i32 %spec.select, %c2.0
  %incdec.ptr = getelementptr inbounds i8, ptr %a.addr.0, i64 1
  %incdec.ptr13 = getelementptr inbounds i8, ptr %b.addr.0, i64 1
  br i1 %cmp10.not.not, label %while.cond, label %return

while.end:                                        ; preds = %land.rhs, %while.cond
  %3 = phi i8 [ %.pre, %while.cond ], [ 0, %land.rhs ]
  %cmp17 = icmp eq i8 %0, %3
  %conv18 = zext i1 %cmp17 to i32
  br label %return

return:                                           ; preds = %while.body, %while.end
  %retval.2 = phi i32 [ %conv18, %while.end ], [ 0, %while.body ]
  ret i32 %retval.2
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN6RandomD2Ev(ptr noundef nonnull align 8 dereferenceable(28) %this) unnamed_addr #3 comdat align 2 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !10
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %2 = shl i32 %0, 2
  %add.i.i = sub i32 %1, %2
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %3 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %3
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN5ArrayIjLi0EED2Ev.exit

if.then.i.i:                                      ; preds = %entry
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIjLi0EED2Ev.exit

_ZN5ArrayIjLi0EED2Ev.exit:                        ; preds = %entry, %if.then.i.i
  %ptr.i = getelementptr inbounds %class.Array, ptr %this, i64 0, i32 2
  %4 = load ptr, ptr %ptr.i, align 8, !tbaa !17
  tail call void @free(ptr noundef %4) #39
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(ptr, ptr, ptr) local_unnamed_addr #4

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN3BufC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %i) unnamed_addr #5 comdat align 2 {
entry:
  %reserved.i.i = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 1
  store i32 %i, ptr %reserved.i.i, align 4, !tbaa !18
  store i32 %i, ptr %this, align 8, !tbaa !20
  %cmp.i.i = icmp slt i32 %i, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %entry
  %ptr.i.i = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i.i, i8 0, i64 16, i1 false)
  br label %_ZN5ArrayIhLi0EEC2Ei.exit

if.end.i.i:                                       ; preds = %entry
  %conv.i.i = zext i32 %i to i64
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i = add nsw i32 %0, %i
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %1
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i

_ZN14ProgramChecker5allocEi.exit.i.i:             ; preds = %if.then.i.i.i, %if.end.i.i
  %call.i.i = tail call noalias ptr @calloc(i64 noundef %conv.i.i, i64 noundef 1) #41
  %ptr5.i.i = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 2
  store ptr %call.i.i, ptr %ptr5.i.i, align 8, !tbaa !21
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.then7.i.i, label %if.end8.i.i

if.then7.i.i:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %exception.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end8.i.i:                                      ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %data10.i.i = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 3
  store ptr %call.i.i, ptr %data10.i.i, align 8, !tbaa !22
  br label %_ZN5ArrayIhLi0EEC2Ei.exit

_ZN5ArrayIhLi0EEC2Ei.exit:                        ; preds = %if.then.i.i, %if.end8.i.i
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN3BufD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #3 comdat align 2 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !20
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = sub i32 %1, %0
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %2 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %2
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN5ArrayIhLi0EED2Ev.exit

if.then.i.i:                                      ; preds = %entry
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIhLi0EED2Ev.exit

_ZN5ArrayIhLi0EED2Ev.exit:                        ; preds = %entry, %if.then.i.i
  %ptr.i = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 2
  %3 = load ptr, ptr %ptr.i, align 8, !tbaa !21
  tail call void @free(ptr noundef %3) #39
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN4IlogD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #3 comdat align 2 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !20
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = sub i32 %1, %0
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %2 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %2
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN5ArrayIhLi0EED2Ev.exit

if.then.i.i:                                      ; preds = %entry
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIhLi0EED2Ev.exit

_ZN5ArrayIhLi0EED2Ev.exit:                        ; preds = %entry, %if.then.i.i
  %ptr.i = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 2
  %3 = load ptr, ptr %ptr.i, align 8, !tbaa !21
  tail call void @free(ptr noundef %3) #39
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN4IlogC2Ev(ptr nocapture noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %reserved.i.i = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 1
  store i32 65536, ptr %reserved.i.i, align 4, !tbaa !18
  store i32 65536, ptr %this, align 8, !tbaa !20
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i = add nsw i32 %0, 65536
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %1
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i

if.then.i.i.i:                                    ; preds = %entry
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i

_ZN14ProgramChecker5allocEi.exit.i.i:             ; preds = %if.then.i.i.i, %entry
  %call.i.i = tail call noalias dereferenceable_or_null(65536) ptr @calloc(i64 noundef 65536, i64 noundef 1) #41
  %ptr5.i.i = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 2
  store ptr %call.i.i, ptr %ptr5.i.i, align 8, !tbaa !21
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.then7.i.i, label %_ZN5ArrayIhLi0EEC2Ei.exit

if.then7.i.i:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %exception.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

_ZN5ArrayIhLi0EEC2Ei.exit:                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %data10.i.i = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 3
  store ptr %call.i.i, ptr %data10.i.i, align 8, !tbaa !22
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  ret void

for.body:                                         ; preds = %for.body, %_ZN5ArrayIhLi0EEC2Ei.exit
  %indvars.iv = phi i64 [ 2, %_ZN5ArrayIhLi0EEC2Ei.exit ], [ %indvars.iv.next.1, %for.body ]
  %x.08 = phi i32 [ 14155776, %_ZN5ArrayIhLi0EEC2Ei.exit ], [ %add.1, %for.body ]
  %indvars.iv.tr = trunc i64 %indvars.iv to i32
  %2 = shl i32 %indvars.iv.tr, 1
  %3 = add nsw i32 %2, -1
  %div.udiv = udiv i32 774541002, %3
  %add = add i32 %div.udiv, %x.08
  %shr = lshr i32 %add, 24
  %conv = trunc i32 %shr to i8
  %4 = load ptr, ptr %data10.i.i, align 8, !tbaa !22
  %arrayidx.i = getelementptr inbounds i8, ptr %4, i64 %indvars.iv
  store i8 %conv, ptr %arrayidx.i, align 1, !tbaa !9
  %indvars.iv.next = or i64 %indvars.iv, 1
  %indvars.iv.tr.1 = trunc i64 %indvars.iv.next to i32
  %5 = shl i32 %indvars.iv.tr.1, 1
  %6 = add nsw i32 %5, -1
  %div.udiv.1 = udiv i32 774541002, %6
  %add.1 = add i32 %div.udiv.1, %add
  %shr.1 = lshr i32 %add.1, 24
  %conv.1 = trunc i32 %shr.1 to i8
  %7 = load ptr, ptr %data10.i.i, align 8, !tbaa !22
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next
  store i8 %conv.1, ptr %arrayidx.i.1, align 1, !tbaa !9
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 65536
  br i1 %exitcond.not.1, label %for.cond.cleanup, label %for.body, !llvm.loop !23
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayIhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %i) unnamed_addr #5 comdat align 2 {
entry:
  %reserved.i = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 1
  store i32 %i, ptr %reserved.i, align 4, !tbaa !18
  store i32 %i, ptr %this, align 8, !tbaa !20
  %cmp.i = icmp slt i32 %i, 1
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %ptr.i = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i, i8 0, i64 16, i1 false)
  br label %_ZN5ArrayIhLi0EE6createEi.exit

if.end.i:                                         ; preds = %entry
  %conv.i = zext i32 %i to i64
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = add nsw i32 %0, %i
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %1
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN14ProgramChecker5allocEi.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i

_ZN14ProgramChecker5allocEi.exit.i:               ; preds = %if.then.i.i, %if.end.i
  %call.i = tail call noalias ptr @calloc(i64 noundef %conv.i, i64 noundef 1) #41
  %ptr5.i = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 2
  store ptr %call.i, ptr %ptr5.i, align 8, !tbaa !21
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then7.i, label %if.end8.i

if.then7.i:                                       ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  %exception.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end8.i:                                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  %data10.i = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 3
  store ptr %call.i, ptr %data10.i, align 8, !tbaa !22
  br label %_ZN5ArrayIhLi0EE6createEi.exit

_ZN5ArrayIhLi0EE6createEi.exit:                   ; preds = %if.then.i, %if.end8.i
  ret void
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !20
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i = sub i32 %1, %0
  store i32 %add.i, ptr @programChecker, align 8, !tbaa !13
  %2 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i = icmp sgt i32 %add.i, %2
  br i1 %cmp.i, label %if.then.i, label %_ZN14ProgramChecker5allocEi.exit

if.then.i:                                        ; preds = %entry
  store i32 %add.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit

_ZN14ProgramChecker5allocEi.exit:                 ; preds = %entry, %if.then.i
  %ptr = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 2
  %3 = load ptr, ptr %ptr, align 8, !tbaa !21
  tail call void @free(ptr noundef %3) #39
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @_Z6squashi(i32 noundef %d) local_unnamed_addr #7 {
entry:
  %cmp = icmp sgt i32 %d, 2047
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp1 = icmp slt i32 %d, -2047
  br i1 %cmp1, label %return, label %if.end3

if.end3:                                          ; preds = %if.end
  %and = and i32 %d, 127
  %shr = ashr i32 %d, 7
  %add = add nsw i32 %shr, 16
  %idxprom = zext i32 %add to i64
  %arrayidx = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %idxprom
  %0 = load i32, ptr %arrayidx, align 4, !tbaa !25
  %sub = sub nuw nsw i32 128, %and
  %mul = mul nsw i32 %0, %sub
  %add4 = add nsw i32 %shr, 17
  %idxprom5 = zext i32 %add4 to i64
  %arrayidx6 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %idxprom5
  %1 = load i32, ptr %arrayidx6, align 4, !tbaa !25
  %mul7 = mul nsw i32 %1, %and
  %add8 = add i32 %mul, 64
  %add9 = add i32 %add8, %mul7
  %shr10 = ashr i32 %add9, 7
  br label %return

return:                                           ; preds = %if.end, %entry, %if.end3
  %retval.0 = phi i32 [ %shr10, %if.end3 ], [ 4095, %entry ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN7StretchD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #3 comdat align 2 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !26
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %2 = shl i32 %0, 1
  %add.i.i = sub i32 %1, %2
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %3 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %3
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN5ArrayIsLi0EED2Ev.exit

if.then.i.i:                                      ; preds = %entry
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIsLi0EED2Ev.exit

_ZN5ArrayIsLi0EED2Ev.exit:                        ; preds = %entry, %if.then.i.i
  %ptr.i = getelementptr inbounds %class.Array.1, ptr %this, i64 0, i32 2
  %4 = load ptr, ptr %ptr.i, align 8, !tbaa !28
  tail call void @free(ptr noundef %4) #39
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN7StretchC2Ev(ptr nocapture noundef nonnull writeonly align 8 dereferenceable(24) %this) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %reserved.i.i = getelementptr inbounds %class.Array.1, ptr %this, i64 0, i32 1
  store i32 4096, ptr %reserved.i.i, align 4, !tbaa !29
  store i32 4096, ptr %this, align 8, !tbaa !26
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i = add nsw i32 %0, 8192
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %1
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i

if.then.i.i.i:                                    ; preds = %entry
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i

_ZN14ProgramChecker5allocEi.exit.i.i:             ; preds = %if.then.i.i.i, %entry
  %call.i.i = tail call noalias dereferenceable_or_null(8192) ptr @calloc(i64 noundef 8192, i64 noundef 1) #41
  %ptr5.i.i = getelementptr inbounds %class.Array.1, ptr %this, i64 0, i32 2
  store ptr %call.i.i, ptr %ptr5.i.i, align 8, !tbaa !28
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.then7.i.i, label %_ZN5ArrayIsLi0EEC2Ei.exit

if.then7.i.i:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %exception.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

_ZN5ArrayIsLi0EEC2Ei.exit:                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %data10.i.i = getelementptr inbounds %class.Array.1, ptr %this, i64 0, i32 3
  store ptr %call.i.i, ptr %data10.i.i, align 8, !tbaa !30
  br label %_Z6squashi.exit

for.cond.cleanup:                                 ; preds = %for.cond.cleanup4
  %arrayidx.i = getelementptr inbounds i16, ptr %call.i.i, i64 4095
  store i16 2047, ptr %arrayidx.i, align 2, !tbaa !31
  ret void

_Z6squashi.exit:                                  ; preds = %_ZN5ArrayIsLi0EEC2Ei.exit, %for.cond.cleanup4
  %pi.030 = phi i32 [ 0, %_ZN5ArrayIsLi0EEC2Ei.exit ], [ %add.pre-phi, %for.cond.cleanup4 ]
  %x.029 = phi i32 [ -2047, %_ZN5ArrayIsLi0EEC2Ei.exit ], [ %inc9, %for.cond.cleanup4 ]
  %and.i = and i32 %x.029, 127
  %shr.i = ashr i32 %x.029, 7
  %add.i = add nsw i32 %shr.i, 16
  %idxprom.i = zext i32 %add.i to i64
  %arrayidx.i23 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %idxprom.i
  %2 = load i32, ptr %arrayidx.i23, align 4, !tbaa !25
  %sub.i = sub nuw nsw i32 128, %and.i
  %mul.i = mul nsw i32 %2, %sub.i
  %add4.i = add nsw i32 %shr.i, 17
  %idxprom5.i = zext i32 %add4.i to i64
  %arrayidx6.i = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %idxprom5.i
  %3 = load i32, ptr %arrayidx6.i, align 4, !tbaa !25
  %mul7.i = mul nsw i32 %3, %and.i
  %add8.i = add i32 %mul.i, 64
  %add9.i = add i32 %add8.i, %mul7.i
  %shr10.i = ashr i32 %add9.i, 7
  %cmp3.not27 = icmp sgt i32 %pi.030, %shr10.i
  br i1 %cmp3.not27, label %_Z6squashi.exit.for.cond.cleanup4_crit_edge, label %for.body5.lr.ph

_Z6squashi.exit.for.cond.cleanup4_crit_edge:      ; preds = %_Z6squashi.exit
  %.pre = add nsw i32 %shr10.i, 1
  br label %for.cond.cleanup4

for.body5.lr.ph:                                  ; preds = %_Z6squashi.exit
  %conv = trunc i32 %x.029 to i16
  %4 = sext i32 %pi.030 to i64
  %5 = add nsw i32 %shr10.i, 1
  %wide.trip.count = sext i32 %5 to i64
  %narrow = add nsw i32 %shr10.i, 1
  %narrow35 = sub nsw i32 %narrow, %pi.030
  %6 = sext i32 %narrow35 to i64
  %min.iters.check = icmp ult i32 %narrow35, 16
  br i1 %min.iters.check, label %for.body5.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body5.lr.ph
  %n.vec = and i64 %6, -16
  %ind.end = add nsw i64 %n.vec, %4
  %broadcast.splatinsert = insertelement <8 x i16> poison, i16 %conv, i64 0
  %broadcast.splat = shufflevector <8 x i16> %broadcast.splatinsert, <8 x i16> poison, <8 x i32> zeroinitializer
  %broadcast.splatinsert33 = insertelement <8 x i16> poison, i16 %conv, i64 0
  %broadcast.splat34 = shufflevector <8 x i16> %broadcast.splatinsert33, <8 x i16> poison, <8 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %index, %4
  %7 = getelementptr inbounds i16, ptr %call.i.i, i64 %offset.idx
  store <8 x i16> %broadcast.splat, ptr %7, align 2, !tbaa !31
  %8 = getelementptr inbounds i16, ptr %7, i64 8
  store <8 x i16> %broadcast.splat34, ptr %8, align 2, !tbaa !31
  %index.next = add nuw i64 %index, 16
  %9 = icmp eq i64 %index.next, %n.vec
  br i1 %9, label %middle.block, label %vector.body, !llvm.loop !33

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %6
  br i1 %cmp.n, label %for.cond.cleanup4, label %for.body5.preheader

for.body5.preheader:                              ; preds = %for.body5.lr.ph, %middle.block
  %indvars.iv.ph = phi i64 [ %4, %for.body5.lr.ph ], [ %ind.end, %middle.block ]
  br label %for.body5

for.cond.cleanup4:                                ; preds = %for.body5, %middle.block, %_Z6squashi.exit.for.cond.cleanup4_crit_edge
  %add.pre-phi = phi i32 [ %.pre, %_Z6squashi.exit.for.cond.cleanup4_crit_edge ], [ %5, %middle.block ], [ %5, %for.body5 ]
  %inc9 = add nsw i32 %x.029, 1
  %exitcond32.not = icmp eq i32 %inc9, 2048
  br i1 %exitcond32.not, label %for.cond.cleanup, label %_Z6squashi.exit, !llvm.loop !36

for.body5:                                        ; preds = %for.body5.preheader, %for.body5
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body5 ], [ %indvars.iv.ph, %for.body5.preheader ]
  %arrayidx.i26 = getelementptr inbounds i16, ptr %call.i.i, i64 %indvars.iv
  store i16 %conv, ptr %arrayidx.i26, align 2, !tbaa !31
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup4, label %for.body5, !llvm.loop !37
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local noundef i32 @_Z11dot_productPsS_i(ptr nocapture noundef readonly %t, ptr nocapture noundef readonly %w, i32 noundef %n) local_unnamed_addr #8 {
entry:
  %add = add nsw i32 %n, 7
  %and = and i32 %add, -8
  %cmp25 = icmp sgt i32 %and, 0
  br i1 %cmp25, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %entry
  %0 = zext i32 %and to i64
  %umax = tail call i64 @llvm.umax.i64(i64 %0, i64 2)
  %1 = add nsw i64 %umax, -1
  %2 = lshr i64 %1, 1
  %3 = add nuw nsw i64 %2, 1
  %min.iters.check = icmp ult i64 %umax, 15
  br i1 %min.iters.check, label %for.body.preheader41, label %vector.ph

vector.ph:                                        ; preds = %for.body.preheader
  %n.vec = and i64 %3, -8
  %ind.end = shl nuw i64 %n.vec, 1
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <4 x i32> [ zeroinitializer, %vector.ph ], [ %25, %vector.body ]
  %vec.phi30 = phi <4 x i32> [ zeroinitializer, %vector.ph ], [ %26, %vector.body ]
  %offset.idx = shl i64 %index, 1
  %4 = or i64 %offset.idx, 8
  %5 = getelementptr inbounds i16, ptr %t, i64 %offset.idx
  %6 = getelementptr inbounds i16, ptr %t, i64 %4
  %wide.vec = load <8 x i16>, ptr %5, align 2, !tbaa !31
  %wide.vec31 = load <8 x i16>, ptr %6, align 2, !tbaa !31
  %strided.vec = shufflevector <8 x i16> %wide.vec, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec32 = shufflevector <8 x i16> %wide.vec31, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec33 = shufflevector <8 x i16> %wide.vec, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %strided.vec34 = shufflevector <8 x i16> %wide.vec31, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %7 = sext <4 x i16> %strided.vec to <4 x i32>
  %8 = sext <4 x i16> %strided.vec32 to <4 x i32>
  %9 = getelementptr inbounds i16, ptr %w, i64 %offset.idx
  %10 = getelementptr inbounds i16, ptr %w, i64 %4
  %wide.vec35 = load <8 x i16>, ptr %9, align 2, !tbaa !31
  %wide.vec36 = load <8 x i16>, ptr %10, align 2, !tbaa !31
  %strided.vec37 = shufflevector <8 x i16> %wide.vec35, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec38 = shufflevector <8 x i16> %wide.vec36, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec39 = shufflevector <8 x i16> %wide.vec35, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %strided.vec40 = shufflevector <8 x i16> %wide.vec36, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %11 = sext <4 x i16> %strided.vec37 to <4 x i32>
  %12 = sext <4 x i16> %strided.vec38 to <4 x i32>
  %13 = mul nsw <4 x i32> %11, %7
  %14 = mul nsw <4 x i32> %12, %8
  %15 = sext <4 x i16> %strided.vec33 to <4 x i32>
  %16 = sext <4 x i16> %strided.vec34 to <4 x i32>
  %17 = sext <4 x i16> %strided.vec39 to <4 x i32>
  %18 = sext <4 x i16> %strided.vec40 to <4 x i32>
  %19 = mul nsw <4 x i32> %17, %15
  %20 = mul nsw <4 x i32> %18, %16
  %21 = add nsw <4 x i32> %19, %13
  %22 = add nsw <4 x i32> %20, %14
  %23 = ashr <4 x i32> %21, <i32 8, i32 8, i32 8, i32 8>
  %24 = ashr <4 x i32> %22, <i32 8, i32 8, i32 8, i32 8>
  %25 = add <4 x i32> %23, %vec.phi
  %26 = add <4 x i32> %24, %vec.phi30
  %index.next = add nuw i64 %index, 8
  %27 = icmp eq i64 %index.next, %n.vec
  br i1 %27, label %middle.block, label %vector.body, !llvm.loop !38

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add <4 x i32> %26, %25
  %28 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %bin.rdx)
  %cmp.n = icmp eq i64 %3, %n.vec
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader41

for.body.preheader41:                             ; preds = %for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %for.body.preheader ], [ %ind.end, %middle.block ]
  %sum.026.ph = phi i32 [ 0, %for.body.preheader ], [ %28, %middle.block ]
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %entry
  %sum.0.lcssa = phi i32 [ 0, %entry ], [ %28, %middle.block ], [ %add14, %for.body ]
  ret i32 %sum.0.lcssa

for.body:                                         ; preds = %for.body.preheader41, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader41 ]
  %sum.026 = phi i32 [ %add14, %for.body ], [ %sum.026.ph, %for.body.preheader41 ]
  %arrayidx = getelementptr inbounds i16, ptr %t, i64 %indvars.iv
  %29 = load i16, ptr %arrayidx, align 2, !tbaa !31
  %conv = sext i16 %29 to i32
  %arrayidx2 = getelementptr inbounds i16, ptr %w, i64 %indvars.iv
  %30 = load i16, ptr %arrayidx2, align 2, !tbaa !31
  %conv3 = sext i16 %30 to i32
  %mul = mul nsw i32 %conv3, %conv
  %31 = or i64 %indvars.iv, 1
  %arrayidx6 = getelementptr inbounds i16, ptr %t, i64 %31
  %32 = load i16, ptr %arrayidx6, align 2, !tbaa !31
  %conv7 = sext i16 %32 to i32
  %arrayidx10 = getelementptr inbounds i16, ptr %w, i64 %31
  %33 = load i16, ptr %arrayidx10, align 2, !tbaa !31
  %conv11 = sext i16 %33 to i32
  %mul12 = mul nsw i32 %conv11, %conv7
  %add13 = add nsw i32 %mul12, %mul
  %shr = ashr i32 %add13, 8
  %add14 = add nsw i32 %shr, %sum.026
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 2
  %cmp = icmp ult i64 %indvars.iv.next, %0
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !39
}

; Function Attrs: mustprogress nofree nosync nounwind memory(argmem: readwrite) uwtable
define dso_local void @_Z5trainPsS_ii(ptr nocapture noundef readonly %t, ptr nocapture noundef %w, i32 noundef %n, i32 noundef %err) local_unnamed_addr #9 {
entry:
  %add = add nsw i32 %n, 7
  %and = and i32 %add, -8
  %cmp24 = icmp sgt i32 %and, 0
  br i1 %cmp24, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %and to i64
  %0 = lshr i32 %add, 3
  %1 = zext i32 %0 to i64
  %2 = shl nuw nsw i64 %1, 4
  %scevgep = getelementptr i8, ptr %w, i64 %2
  %scevgep27 = getelementptr i8, ptr %t, i64 %2
  %bound0 = icmp ugt ptr %scevgep27, %w
  %bound1 = icmp ugt ptr %scevgep, %t
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body, label %vector.ph

vector.ph:                                        ; preds = %for.body.preheader
  %broadcast.splatinsert = insertelement <8 x i32> poison, i32 %err, i64 0
  %broadcast.splat = shufflevector <8 x i32> %broadcast.splatinsert, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %3 = getelementptr inbounds i16, ptr %w, i64 %index
  %wide.load = load <8 x i16>, ptr %3, align 2, !tbaa !31, !alias.scope !40, !noalias !43
  %4 = sext <8 x i16> %wide.load to <8 x i32>
  %5 = getelementptr inbounds i16, ptr %t, i64 %index
  %wide.load28 = load <8 x i16>, ptr %5, align 2, !tbaa !31, !alias.scope !43
  %6 = sext <8 x i16> %wide.load28 to <8 x i32>
  %7 = mul nsw <8 x i32> %broadcast.splat, %6
  %8 = ashr <8 x i32> %7, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %9 = add nsw <8 x i32> %8, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %10 = ashr <8 x i32> %9, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %11 = add nsw <8 x i32> %10, %4
  %12 = tail call <8 x i32> @llvm.smax.v8i32(<8 x i32> %11, <8 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>)
  %13 = tail call <8 x i32> @llvm.smin.v8i32(<8 x i32> %12, <8 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>)
  %14 = trunc <8 x i32> %13 to <8 x i16>
  store <8 x i16> %14, ptr %3, align 2, !tbaa !31, !alias.scope !40, !noalias !43
  %index.next = add nuw i64 %index, 8
  %15 = icmp eq i64 %index.next, %wide.trip.count
  br i1 %15, label %for.cond.cleanup, label %vector.body, !llvm.loop !45

for.cond.cleanup:                                 ; preds = %vector.body, %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr inbounds i16, ptr %w, i64 %indvars.iv
  %16 = load i16, ptr %arrayidx, align 2, !tbaa !31
  %conv = sext i16 %16 to i32
  %arrayidx2 = getelementptr inbounds i16, ptr %t, i64 %indvars.iv
  %17 = load i16, ptr %arrayidx2, align 2, !tbaa !31
  %conv3 = sext i16 %17 to i32
  %mul = mul nsw i32 %conv3, %err
  %shr = ashr i32 %mul, 15
  %add5 = add nsw i32 %shr, 1
  %shr6 = ashr i32 %add5, 1
  %add7 = add nsw i32 %shr6, %conv
  %spec.store.select = tail call i32 @llvm.smax.i32(i32 %add7, i32 -32768)
  %spec.store.select15 = tail call i32 @llvm.smin.i32(i32 %spec.store.select, i32 32767)
  %conv12 = trunc i32 %spec.store.select15 to i16
  store i16 %conv12, ptr %arrayidx, align 2, !tbaa !31
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !46
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN5MixerD2Ev(ptr nocapture noundef nonnull readonly align 8 dereferenceable(136) %this) unnamed_addr #6 align 2 {
entry:
  %mp = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 10
  %0 = load ptr, ptr %mp, align 8, !tbaa !47
  %isnull = icmp eq ptr %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  tail call void @_ZN5MixerD2Ev(ptr noundef nonnull align 8 dereferenceable(136) %0) #39
  tail call void @_ZdlPv(ptr noundef nonnull %0) #42
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  %pr = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 9
  %1 = load i32, ptr %pr, align 8, !tbaa !51
  %2 = load i32, ptr @programChecker, align 8, !tbaa !13
  %3 = shl i32 %1, 2
  %add.i.i = sub i32 %2, %3
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %4 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %4
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN5ArrayIiLi0EED2Ev.exit

if.then.i.i:                                      ; preds = %delete.end
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIiLi0EED2Ev.exit

_ZN5ArrayIiLi0EED2Ev.exit:                        ; preds = %delete.end, %if.then.i.i
  %ptr.i = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 9, i32 2
  %5 = load ptr, ptr %ptr.i, align 8, !tbaa !52
  tail call void @free(ptr noundef %5) #39
  %cxt = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 5
  %6 = load i32, ptr %cxt, align 8, !tbaa !51
  %7 = load i32, ptr @programChecker, align 8, !tbaa !13
  %8 = shl i32 %6, 2
  %add.i.i2 = sub i32 %7, %8
  store i32 %add.i.i2, ptr @programChecker, align 8, !tbaa !13
  %9 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i3 = icmp sgt i32 %add.i.i2, %9
  br i1 %cmp.i.i3, label %if.then.i.i4, label %_ZN5ArrayIiLi0EED2Ev.exit6

if.then.i.i4:                                     ; preds = %_ZN5ArrayIiLi0EED2Ev.exit
  store i32 %add.i.i2, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIiLi0EED2Ev.exit6

_ZN5ArrayIiLi0EED2Ev.exit6:                       ; preds = %_ZN5ArrayIiLi0EED2Ev.exit, %if.then.i.i4
  %ptr.i5 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 5, i32 2
  %10 = load ptr, ptr %ptr.i5, align 8, !tbaa !52
  tail call void @free(ptr noundef %10) #39
  %wx = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 4
  %11 = load i32, ptr %wx, align 8, !tbaa !53
  %mul.i = shl i32 %11, 1
  %12 = load i32, ptr @programChecker, align 8, !tbaa !13
  %reass.sub.i = sub i32 %12, %mul.i
  %add.i.i7 = add i32 %reass.sub.i, -16
  store i32 %add.i.i7, ptr @programChecker, align 8, !tbaa !13
  %13 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i8 = icmp sgt i32 %add.i.i7, %13
  br i1 %cmp.i.i8, label %if.then.i.i9, label %_ZN5ArrayIsLi16EED2Ev.exit

if.then.i.i9:                                     ; preds = %_ZN5ArrayIiLi0EED2Ev.exit6
  store i32 %add.i.i7, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIsLi16EED2Ev.exit

_ZN5ArrayIsLi16EED2Ev.exit:                       ; preds = %_ZN5ArrayIiLi0EED2Ev.exit6, %if.then.i.i9
  %ptr.i10 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 4, i32 2
  %14 = load ptr, ptr %ptr.i10, align 8, !tbaa !54
  tail call void @free(ptr noundef %14) #39
  %tx = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 3
  %15 = load i32, ptr %tx, align 8, !tbaa !53
  %mul.i11 = shl i32 %15, 1
  %16 = load i32, ptr @programChecker, align 8, !tbaa !13
  %reass.sub.i12 = sub i32 %16, %mul.i11
  %add.i.i13 = add i32 %reass.sub.i12, -16
  store i32 %add.i.i13, ptr @programChecker, align 8, !tbaa !13
  %17 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i14 = icmp sgt i32 %add.i.i13, %17
  br i1 %cmp.i.i14, label %if.then.i.i15, label %_ZN5ArrayIsLi16EED2Ev.exit17

if.then.i.i15:                                    ; preds = %_ZN5ArrayIsLi16EED2Ev.exit
  store i32 %add.i.i13, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIsLi16EED2Ev.exit17

_ZN5ArrayIsLi16EED2Ev.exit17:                     ; preds = %_ZN5ArrayIsLi16EED2Ev.exit, %if.then.i.i15
  %ptr.i16 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 3, i32 2
  %18 = load ptr, ptr %ptr.i16, align 8, !tbaa !54
  tail call void @free(ptr noundef %18) #39
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #10

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIiLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !51
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %2 = shl i32 %0, 2
  %add.i = sub i32 %1, %2
  store i32 %add.i, ptr @programChecker, align 8, !tbaa !13
  %3 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i = icmp sgt i32 %add.i, %3
  br i1 %cmp.i, label %if.then.i, label %_ZN14ProgramChecker5allocEi.exit

if.then.i:                                        ; preds = %entry
  store i32 %add.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit

_ZN14ProgramChecker5allocEi.exit:                 ; preds = %entry, %if.then.i
  %ptr = getelementptr inbounds %class.Array.3, ptr %this, i64 0, i32 2
  %4 = load ptr, ptr %ptr, align 8, !tbaa !52
  tail call void @free(ptr noundef %4) #39
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIsLi16EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !53
  %mul = shl i32 %0, 1
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %reass.sub = sub i32 %1, %mul
  %add.i = add i32 %reass.sub, -16
  store i32 %add.i, ptr @programChecker, align 8, !tbaa !13
  %2 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i = icmp sgt i32 %add.i, %2
  br i1 %cmp.i, label %if.then.i, label %_ZN14ProgramChecker5allocEi.exit

if.then.i:                                        ; preds = %entry
  store i32 %add.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit

_ZN14ProgramChecker5allocEi.exit:                 ; preds = %entry, %if.then.i
  %ptr = getelementptr inbounds %class.Array.2, ptr %this, i64 0, i32 2
  %3 = load ptr, ptr %ptr, align 8, !tbaa !54
  tail call void @free(ptr noundef %3) #39
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5MixerC2Eiiii(ptr noundef nonnull align 8 dereferenceable(136) %this, i32 noundef %n, i32 noundef %m, i32 noundef %s, i32 noundef %w) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %add = add nsw i32 %n, 7
  %and = and i32 %add, -8
  store i32 %and, ptr %this, align 8, !tbaa !55
  %M = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 1
  store i32 %m, ptr %M, align 4, !tbaa !56
  %S = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 2
  store i32 %s, ptr %S, align 8, !tbaa !57
  %tx = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 3
  %reserved.i.i = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 3, i32 1
  store i32 %and, ptr %reserved.i.i, align 4, !tbaa !58
  store i32 %and, ptr %tx, align 8, !tbaa !53
  %cmp.i.i = icmp slt i32 %and, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %entry
  %ptr.i.i = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 3, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i.i, i8 0, i64 16, i1 false)
  br label %_ZN5ArrayIsLi16EEC2Ei.exit

if.end.i.i:                                       ; preds = %entry
  %mul.i.i = shl nuw i32 %and, 1
  %add.i.i = add i32 %mul.i.i, 16
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i = add nsw i32 %0, %add.i.i
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %1
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i

_ZN14ProgramChecker5allocEi.exit.i.i:             ; preds = %if.then.i.i.i, %if.end.i.i
  %conv4.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call noalias ptr @calloc(i64 noundef %conv4.i.i, i64 noundef 1) #41
  %ptr5.i.i = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 3, i32 2
  store ptr %call.i.i, ptr %ptr5.i.i, align 8, !tbaa !54
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.then7.i.i, label %if.end8.i.i

if.then7.i.i:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %exception.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end8.i.i:                                      ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %add.ptr.i.i = getelementptr inbounds i8, ptr %call.i.i, i64 16
  %2 = ptrtoint ptr %call.i.i to i64
  %and.i.i = and i64 %2, 15
  %idx.neg.i.i = sub nsw i64 0, %and.i.i
  %add.ptr11.i.i = getelementptr inbounds i8, ptr %add.ptr.i.i, i64 %idx.neg.i.i
  %data12.i.i = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 3, i32 3
  store ptr %add.ptr11.i.i, ptr %data12.i.i, align 8, !tbaa !59
  br label %_ZN5ArrayIsLi16EEC2Ei.exit

_ZN5ArrayIsLi16EEC2Ei.exit:                       ; preds = %if.then.i.i, %if.end8.i.i
  %wx = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 4
  %mul = mul nsw i32 %and, %m
  %reserved.i.i45 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 4, i32 1
  store i32 %mul, ptr %reserved.i.i45, align 4, !tbaa !58
  store i32 %mul, ptr %wx, align 8, !tbaa !53
  %cmp.i.i46 = icmp slt i32 %mul, 1
  br i1 %cmp.i.i46, label %if.then.i.i48, label %if.end.i.i53

if.then.i.i48:                                    ; preds = %_ZN5ArrayIsLi16EEC2Ei.exit
  %ptr.i.i47 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 4, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i.i47, i8 0, i64 16, i1 false)
  br label %invoke.cont

if.end.i.i53:                                     ; preds = %_ZN5ArrayIsLi16EEC2Ei.exit
  %mul.i.i49 = shl nuw i32 %mul, 1
  %add.i.i50 = add i32 %mul.i.i49, 16
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i51 = add nsw i32 %3, %add.i.i50
  store i32 %add.i.i.i51, ptr @programChecker, align 8, !tbaa !13
  %4 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i52 = icmp sgt i32 %add.i.i.i51, %4
  br i1 %cmp.i.i.i52, label %if.then.i.i.i54, label %_ZN14ProgramChecker5allocEi.exit.i.i59

if.then.i.i.i54:                                  ; preds = %if.end.i.i53
  store i32 %add.i.i.i51, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i59

_ZN14ProgramChecker5allocEi.exit.i.i59:           ; preds = %if.then.i.i.i54, %if.end.i.i53
  %conv4.i.i55 = sext i32 %add.i.i50 to i64
  %call.i.i56 = tail call noalias ptr @calloc(i64 noundef %conv4.i.i55, i64 noundef 1) #41
  %ptr5.i.i57 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 4, i32 2
  store ptr %call.i.i56, ptr %ptr5.i.i57, align 8, !tbaa !54
  %tobool.not.i.i58 = icmp eq ptr %call.i.i56, null
  br i1 %tobool.not.i.i58, label %if.then7.i.i61, label %if.end8.i.i67

if.then7.i.i61:                                   ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i59
  %exception.i.i.i60 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i60, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i.i.i60, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc unwind label %lpad

.noexc:                                           ; preds = %if.then7.i.i61
  unreachable

if.end8.i.i67:                                    ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i59
  %add.ptr.i.i62 = getelementptr inbounds i8, ptr %call.i.i56, i64 16
  %5 = ptrtoint ptr %call.i.i56 to i64
  %and.i.i63 = and i64 %5, 15
  %idx.neg.i.i64 = sub nsw i64 0, %and.i.i63
  %add.ptr11.i.i65 = getelementptr inbounds i8, ptr %add.ptr.i.i62, i64 %idx.neg.i.i64
  %data12.i.i66 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 4, i32 3
  store ptr %add.ptr11.i.i65, ptr %data12.i.i66, align 8, !tbaa !59
  br label %invoke.cont

invoke.cont:                                      ; preds = %if.end8.i.i67, %if.then.i.i48
  %6 = phi ptr [ %add.ptr11.i.i65, %if.end8.i.i67 ], [ null, %if.then.i.i48 ]
  %cxt = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 5
  %reserved.i.i69 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 5, i32 1
  store i32 %s, ptr %reserved.i.i69, align 4, !tbaa !60
  store i32 %s, ptr %cxt, align 8, !tbaa !51
  %cmp.i.i70 = icmp slt i32 %s, 1
  br i1 %cmp.i.i70, label %invoke.cont10, label %if.end.i.i76

if.end.i.i76:                                     ; preds = %invoke.cont
  %mul.i.i73 = shl i32 %s, 2
  %7 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i74 = add nsw i32 %7, %mul.i.i73
  store i32 %add.i.i.i74, ptr @programChecker, align 8, !tbaa !13
  %8 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i75 = icmp sgt i32 %add.i.i.i74, %8
  br i1 %cmp.i.i.i75, label %if.then.i.i.i77, label %_ZN14ProgramChecker5allocEi.exit.i.i82

if.then.i.i.i77:                                  ; preds = %if.end.i.i76
  store i32 %add.i.i.i74, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i82

_ZN14ProgramChecker5allocEi.exit.i.i82:           ; preds = %if.then.i.i.i77, %if.end.i.i76
  %9 = phi i32 [ %add.i.i.i74, %if.then.i.i.i77 ], [ %8, %if.end.i.i76 ]
  %conv4.i.i78 = sext i32 %mul.i.i73 to i64
  %call.i.i79 = tail call noalias ptr @calloc(i64 noundef %conv4.i.i78, i64 noundef 1) #41
  %ptr5.i.i80 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 5, i32 2
  store ptr %call.i.i79, ptr %ptr5.i.i80, align 8, !tbaa !52
  %tobool.not.i.i81 = icmp eq ptr %call.i.i79, null
  br i1 %tobool.not.i.i81, label %if.then7.i.i84, label %if.end.i.i94

if.then7.i.i84:                                   ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i82
  %exception.i.i.i83 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i83, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i.i.i83, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc86 unwind label %lpad6

.noexc86:                                         ; preds = %if.then7.i.i84
  unreachable

if.end.i.i94:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i82
  %data10.i.i = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 5, i32 3
  store ptr %call.i.i79, ptr %data10.i.i, align 8, !tbaa !61
  %ncxt = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 6
  store i32 0, ptr %ncxt, align 8, !tbaa !62
  %base = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 7
  store i32 0, ptr %base, align 4, !tbaa !63
  %nx = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 8
  store i32 0, ptr %nx, align 8, !tbaa !64
  %pr = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 9
  %reserved.i.i87 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 9, i32 1
  store i32 %s, ptr %reserved.i.i87, align 4, !tbaa !60
  store i32 %s, ptr %pr, align 8, !tbaa !51
  %add.i.i.i92 = add nsw i32 %add.i.i.i74, %mul.i.i73
  store i32 %add.i.i.i92, ptr @programChecker, align 8, !tbaa !13
  %cmp.i.i.i93 = icmp sgt i32 %add.i.i.i92, %9
  br i1 %cmp.i.i.i93, label %if.then.i.i.i95, label %_ZN14ProgramChecker5allocEi.exit.i.i100

if.then.i.i.i95:                                  ; preds = %if.end.i.i94
  store i32 %add.i.i.i92, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i100

_ZN14ProgramChecker5allocEi.exit.i.i100:          ; preds = %if.then.i.i.i95, %if.end.i.i94
  %call.i.i97 = tail call noalias ptr @calloc(i64 noundef %conv4.i.i78, i64 noundef 1) #41
  %ptr5.i.i98 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 9, i32 2
  store ptr %call.i.i97, ptr %ptr5.i.i98, align 8, !tbaa !52
  %tobool.not.i.i99 = icmp eq ptr %call.i.i97, null
  br i1 %tobool.not.i.i99, label %if.then7.i.i102, label %for.body.lr.ph

if.then7.i.i102:                                  ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i100
  %exception.i.i.i101 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i101, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i.i.i101, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc105 unwind label %lpad9

.noexc105:                                        ; preds = %if.then7.i.i102
  unreachable

invoke.cont10:                                    ; preds = %invoke.cont
  %ptr.i.i71 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 5, i32 2
  %pr117 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 9
  %reserved.i.i87118 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 9, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %ptr.i.i71, i8 0, i64 28, i1 false)
  store i32 %s, ptr %reserved.i.i87118, align 4, !tbaa !60
  store i32 %s, ptr %pr117, align 8, !tbaa !51
  %ptr.i.i89 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 9, i32 2
  %mp = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %ptr.i.i89, i8 0, i64 24, i1 false)
  br label %for.cond15.preheader

for.body.lr.ph:                                   ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i100
  %data10.i.i103 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 9, i32 3
  store ptr %call.i.i97, ptr %data10.i.i103, align 8, !tbaa !61
  %mp131 = getelementptr inbounds %class.Mixer, ptr %this, i64 0, i32 10
  store ptr null, ptr %mp131, align 8, !tbaa !47
  %10 = sext i32 %s to i64
  %smax = tail call i64 @llvm.smax.i64(i64 %10, i64 1)
  %min.iters.check = icmp ult i64 %smax, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph
  %n.vec = and i64 %smax, 9223372036854775800
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %11 = getelementptr inbounds i32, ptr %call.i.i97, i64 %index
  store <4 x i32> <i32 2048, i32 2048, i32 2048, i32 2048>, ptr %11, align 4, !tbaa !25
  %12 = getelementptr inbounds i32, ptr %11, i64 4
  store <4 x i32> <i32 2048, i32 2048, i32 2048, i32 2048>, ptr %12, align 4, !tbaa !25
  %index.next = add nuw i64 %index, 8
  %13 = icmp eq i64 %index.next, %n.vec
  br i1 %13, label %middle.block, label %vector.body, !llvm.loop !65

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %smax, %n.vec
  br i1 %cmp.n, label %for.cond15.preheader, label %for.body.preheader

for.body.preheader:                               ; preds = %for.body.lr.ph, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

for.cond15.preheader:                             ; preds = %for.body, %middle.block, %invoke.cont10
  %mp135 = phi ptr [ %mp, %invoke.cont10 ], [ %mp131, %middle.block ], [ %mp131, %for.body ]
  %pr119133 = phi ptr [ %pr117, %invoke.cont10 ], [ %pr, %middle.block ], [ %pr, %for.body ]
  %cmp19123 = icmp sgt i32 %mul, 0
  br i1 %cmp19123, label %for.body20.lr.ph, label %for.end26

for.body20.lr.ph:                                 ; preds = %for.cond15.preheader
  %conv = trunc i32 %w to i16
  %wide.trip.count = zext i32 %mul to i64
  %min.iters.check139 = icmp ult i32 %mul, 16
  br i1 %min.iters.check139, label %for.body20.preheader, label %vector.ph140

vector.ph140:                                     ; preds = %for.body20.lr.ph
  %n.vec142 = and i64 %wide.trip.count, 4294967280
  %broadcast.splatinsert = insertelement <8 x i16> poison, i16 %conv, i64 0
  %broadcast.splat = shufflevector <8 x i16> %broadcast.splatinsert, <8 x i16> poison, <8 x i32> zeroinitializer
  %broadcast.splatinsert147 = insertelement <8 x i16> poison, i16 %conv, i64 0
  %broadcast.splat148 = shufflevector <8 x i16> %broadcast.splatinsert147, <8 x i16> poison, <8 x i32> zeroinitializer
  br label %vector.body145

vector.body145:                                   ; preds = %vector.body145, %vector.ph140
  %index146 = phi i64 [ 0, %vector.ph140 ], [ %index.next149, %vector.body145 ]
  %14 = getelementptr inbounds i16, ptr %6, i64 %index146
  store <8 x i16> %broadcast.splat, ptr %14, align 2, !tbaa !31
  %15 = getelementptr inbounds i16, ptr %14, i64 8
  store <8 x i16> %broadcast.splat148, ptr %15, align 2, !tbaa !31
  %index.next149 = add nuw i64 %index146, 16
  %16 = icmp eq i64 %index.next149, %n.vec142
  br i1 %16, label %middle.block137, label %vector.body145, !llvm.loop !66

middle.block137:                                  ; preds = %vector.body145
  %cmp.n144 = icmp eq i64 %n.vec142, %wide.trip.count
  br i1 %cmp.n144, label %for.end26, label %for.body20.preheader

for.body20.preheader:                             ; preds = %for.body20.lr.ph, %middle.block137
  %indvars.iv127.ph = phi i64 [ 0, %for.body20.lr.ph ], [ %n.vec142, %middle.block137 ]
  br label %for.body20

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %arrayidx.i = getelementptr inbounds i32, ptr %call.i.i97, i64 %indvars.iv
  store i32 2048, ptr %arrayidx.i, align 4, !tbaa !25
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp = icmp slt i64 %indvars.iv.next, %10
  br i1 %cmp, label %for.body, label %for.cond15.preheader, !llvm.loop !67

lpad:                                             ; preds = %if.then7.i.i61
  %17 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup38

lpad6:                                            ; preds = %if.then7.i.i84
  %18 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup37

lpad9:                                            ; preds = %if.then7.i.i102
  %19 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup36

lpad13:                                           ; preds = %if.then
  %20 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

for.body20:                                       ; preds = %for.body20.preheader, %for.body20
  %indvars.iv127 = phi i64 [ %indvars.iv.next128, %for.body20 ], [ %indvars.iv127.ph, %for.body20.preheader ]
  %arrayidx.i109 = getelementptr inbounds i16, ptr %6, i64 %indvars.iv127
  store i16 %conv, ptr %arrayidx.i109, align 2, !tbaa !31
  %indvars.iv.next128 = add nuw nsw i64 %indvars.iv127, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next128, %wide.trip.count
  br i1 %exitcond.not, label %for.end26, label %for.body20, !llvm.loop !68

for.end26:                                        ; preds = %for.body20, %middle.block137, %for.cond15.preheader
  %cmp28 = icmp sgt i32 %s, 1
  br i1 %cmp28, label %if.then, label %if.end

if.then:                                          ; preds = %for.end26
  %call30 = invoke noalias noundef nonnull dereferenceable(136) ptr @_Znwm(i64 noundef 136) #43
          to label %invoke.cont29 unwind label %lpad13

invoke.cont29:                                    ; preds = %if.then
  invoke void @_ZN5MixerC2Eiiii(ptr noundef nonnull align 8 dereferenceable(136) %call30, i32 noundef %s, i32 noundef 1, i32 noundef 1, i32 noundef 32767)
          to label %invoke.cont33 unwind label %lpad32

invoke.cont33:                                    ; preds = %invoke.cont29
  store ptr %call30, ptr %mp135, align 8, !tbaa !47
  br label %if.end

lpad32:                                           ; preds = %invoke.cont29
  %21 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %call30) #42
  br label %ehcleanup

if.end:                                           ; preds = %invoke.cont33, %for.end26
  ret void

ehcleanup:                                        ; preds = %lpad32, %lpad13
  %.pn = phi { ptr, i32 } [ %21, %lpad32 ], [ %20, %lpad13 ]
  tail call void @_ZN5ArrayIiLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %pr119133) #39
  br label %ehcleanup36

ehcleanup36:                                      ; preds = %ehcleanup, %lpad9
  %.pn.pn = phi { ptr, i32 } [ %.pn, %ehcleanup ], [ %19, %lpad9 ]
  tail call void @_ZN5ArrayIiLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %cxt) #39
  br label %ehcleanup37

ehcleanup37:                                      ; preds = %ehcleanup36, %lpad6
  %.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn, %ehcleanup36 ], [ %18, %lpad6 ]
  tail call void @_ZN5ArrayIsLi16EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %wx) #39
  br label %ehcleanup38

ehcleanup38:                                      ; preds = %ehcleanup37, %lpad
  %.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn, %ehcleanup37 ], [ %17, %lpad ]
  tail call void @_ZN5ArrayIsLi16EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %tx) #39
  resume { ptr, i32 } %.pn.pn.pn.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %i) unnamed_addr #5 comdat align 2 {
entry:
  %reserved.i = getelementptr inbounds %class.Array.3, ptr %this, i64 0, i32 1
  store i32 %i, ptr %reserved.i, align 4, !tbaa !60
  store i32 %i, ptr %this, align 8, !tbaa !51
  %cmp.i = icmp slt i32 %i, 1
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %ptr.i = getelementptr inbounds %class.Array.3, ptr %this, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i, i8 0, i64 16, i1 false)
  br label %_ZN5ArrayIiLi0EE6createEi.exit

if.end.i:                                         ; preds = %entry
  %mul.i = shl i32 %i, 2
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = add nsw i32 %0, %mul.i
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %1
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN14ProgramChecker5allocEi.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i

_ZN14ProgramChecker5allocEi.exit.i:               ; preds = %if.then.i.i, %if.end.i
  %conv4.i = sext i32 %mul.i to i64
  %call.i = tail call noalias ptr @calloc(i64 noundef %conv4.i, i64 noundef 1) #41
  %ptr5.i = getelementptr inbounds %class.Array.3, ptr %this, i64 0, i32 2
  store ptr %call.i, ptr %ptr5.i, align 8, !tbaa !52
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then7.i, label %if.end8.i

if.then7.i:                                       ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  %exception.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end8.i:                                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  %data10.i = getelementptr inbounds %class.Array.3, ptr %this, i64 0, i32 3
  store ptr %call.i, ptr %data10.i, align 8, !tbaa !61
  br label %_ZN5ArrayIiLi0EE6createEi.exit

_ZN5ArrayIiLi0EE6createEi.exit:                   ; preds = %if.then.i, %if.end8.i
  ret void
}

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #11

; Function Attrs: uwtable
define dso_local void @_ZN4APM1C2Ei(ptr nocapture noundef nonnull writeonly align 8 dereferenceable(32) %this, i32 noundef %n) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
entry:
  store i32 0, ptr %this, align 8, !tbaa !69
  %N = getelementptr inbounds %class.APM1, ptr %this, i64 0, i32 1
  store i32 %n, ptr %N, align 4, !tbaa !72
  %t = getelementptr inbounds %class.APM1, ptr %this, i64 0, i32 2
  %mul = mul nsw i32 %n, 33
  %reserved.i.i = getelementptr inbounds %class.APM1, ptr %this, i64 0, i32 2, i32 1
  store i32 %mul, ptr %reserved.i.i, align 4, !tbaa !73
  store i32 %mul, ptr %t, align 8, !tbaa !74
  %cmp.i.i = icmp slt i32 %n, 1
  br i1 %cmp.i.i, label %_ZN5ArrayItLi0EEC2Ei.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %entry
  %mul.i.i = mul i32 %n, 66
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i = add nsw i32 %0, %mul.i.i
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %1
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i

_ZN14ProgramChecker5allocEi.exit.i.i:             ; preds = %if.then.i.i.i, %if.end.i.i
  %conv4.i.i = sext i32 %mul.i.i to i64
  %call.i.i = tail call noalias ptr @calloc(i64 noundef %conv4.i.i, i64 noundef 1) #41
  %ptr5.i.i = getelementptr inbounds %class.APM1, ptr %this, i64 0, i32 2, i32 2
  store ptr %call.i.i, ptr %ptr5.i.i, align 8, !tbaa !75
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.then7.i.i, label %for.cond3.preheader.lr.ph

if.then7.i.i:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %exception.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

_ZN5ArrayItLi0EEC2Ei.exit:                        ; preds = %entry
  %ptr.i.i = getelementptr inbounds %class.APM1, ptr %this, i64 0, i32 2, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i.i, i8 0, i64 16, i1 false)
  br label %for.cond.cleanup

for.cond3.preheader.lr.ph:                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %data10.i.i = getelementptr inbounds %class.APM1, ptr %this, i64 0, i32 2, i32 3
  store ptr %call.i.i, ptr %data10.i.i, align 8, !tbaa !76
  %wide.trip.count = zext i32 %n to i64
  %arrayidx.i30.1 = getelementptr inbounds i16, ptr %call.i.i, i64 1
  %arrayidx.i30.2 = getelementptr inbounds i16, ptr %call.i.i, i64 2
  %arrayidx.i30.3 = getelementptr inbounds i16, ptr %call.i.i, i64 3
  %arrayidx.i30.4 = getelementptr inbounds i16, ptr %call.i.i, i64 4
  %arrayidx.i30.5 = getelementptr inbounds i16, ptr %call.i.i, i64 5
  %arrayidx.i30.6 = getelementptr inbounds i16, ptr %call.i.i, i64 6
  %arrayidx.i30.7 = getelementptr inbounds i16, ptr %call.i.i, i64 7
  %arrayidx.i30.8 = getelementptr inbounds i16, ptr %call.i.i, i64 8
  %arrayidx.i30.9 = getelementptr inbounds i16, ptr %call.i.i, i64 9
  %arrayidx.i30.10 = getelementptr inbounds i16, ptr %call.i.i, i64 10
  %arrayidx.i30.11 = getelementptr inbounds i16, ptr %call.i.i, i64 11
  %arrayidx.i30.12 = getelementptr inbounds i16, ptr %call.i.i, i64 12
  %arrayidx.i30.13 = getelementptr inbounds i16, ptr %call.i.i, i64 13
  %arrayidx.i30.14 = getelementptr inbounds i16, ptr %call.i.i, i64 14
  %arrayidx.i30.15 = getelementptr inbounds i16, ptr %call.i.i, i64 15
  %arrayidx.i30.16 = getelementptr inbounds i16, ptr %call.i.i, i64 16
  %arrayidx.i30.17 = getelementptr inbounds i16, ptr %call.i.i, i64 17
  %arrayidx.i30.18 = getelementptr inbounds i16, ptr %call.i.i, i64 18
  %arrayidx.i30.19 = getelementptr inbounds i16, ptr %call.i.i, i64 19
  %arrayidx.i30.20 = getelementptr inbounds i16, ptr %call.i.i, i64 20
  %arrayidx.i30.21 = getelementptr inbounds i16, ptr %call.i.i, i64 21
  %arrayidx.i30.22 = getelementptr inbounds i16, ptr %call.i.i, i64 22
  %arrayidx.i30.23 = getelementptr inbounds i16, ptr %call.i.i, i64 23
  %arrayidx.i30.24 = getelementptr inbounds i16, ptr %call.i.i, i64 24
  %arrayidx.i30.25 = getelementptr inbounds i16, ptr %call.i.i, i64 25
  %arrayidx.i30.26 = getelementptr inbounds i16, ptr %call.i.i, i64 26
  %arrayidx.i30.27 = getelementptr inbounds i16, ptr %call.i.i, i64 27
  %arrayidx.i30.28 = getelementptr inbounds i16, ptr %call.i.i, i64 28
  %arrayidx.i30.29 = getelementptr inbounds i16, ptr %call.i.i, i64 29
  %arrayidx.i30.30 = getelementptr inbounds i16, ptr %call.i.i, i64 30
  %arrayidx.i30.31 = getelementptr inbounds i16, ptr %call.i.i, i64 31
  %arrayidx.i30.32 = getelementptr inbounds i16, ptr %call.i.i, i64 32
  br label %for.cond3.preheader

for.cond3.preheader:                              ; preds = %for.cond3.preheader.lr.ph, %for.cond.cleanup5
  %indvars.iv45 = phi i64 [ 0, %for.cond3.preheader.lr.ph ], [ %indvars.iv.next46, %for.cond.cleanup5 ]
  %cmp7 = icmp eq i64 %indvars.iv45, 0
  %mul14 = mul i64 %indvars.iv45, 33
  %2 = and i64 %mul14, 4294967295
  br i1 %cmp7, label %for.body6.us.peel.next, label %for.body6.preheader

for.body6.preheader:                              ; preds = %for.cond3.preheader
  %3 = load i16, ptr %call.i.i, align 2, !tbaa !31
  %arrayidx.i33 = getelementptr inbounds i16, ptr %call.i.i, i64 %2
  store i16 %3, ptr %arrayidx.i33, align 2, !tbaa !31
  %4 = load i16, ptr %arrayidx.i30.1, align 2, !tbaa !31
  %5 = add nuw nsw i64 %2, 1
  %arrayidx.i33.1 = getelementptr inbounds i16, ptr %call.i.i, i64 %5
  store i16 %4, ptr %arrayidx.i33.1, align 2, !tbaa !31
  %6 = load i16, ptr %arrayidx.i30.2, align 2, !tbaa !31
  %7 = add nuw nsw i64 %2, 2
  %arrayidx.i33.2 = getelementptr inbounds i16, ptr %call.i.i, i64 %7
  store i16 %6, ptr %arrayidx.i33.2, align 2, !tbaa !31
  %8 = load i16, ptr %arrayidx.i30.3, align 2, !tbaa !31
  %9 = add nuw nsw i64 %2, 3
  %arrayidx.i33.3 = getelementptr inbounds i16, ptr %call.i.i, i64 %9
  store i16 %8, ptr %arrayidx.i33.3, align 2, !tbaa !31
  %10 = load i16, ptr %arrayidx.i30.4, align 2, !tbaa !31
  %11 = add nuw nsw i64 %2, 4
  %arrayidx.i33.4 = getelementptr inbounds i16, ptr %call.i.i, i64 %11
  store i16 %10, ptr %arrayidx.i33.4, align 2, !tbaa !31
  %12 = load i16, ptr %arrayidx.i30.5, align 2, !tbaa !31
  %13 = add nuw nsw i64 %2, 5
  %arrayidx.i33.5 = getelementptr inbounds i16, ptr %call.i.i, i64 %13
  store i16 %12, ptr %arrayidx.i33.5, align 2, !tbaa !31
  %14 = load i16, ptr %arrayidx.i30.6, align 2, !tbaa !31
  %15 = add nuw nsw i64 %2, 6
  %arrayidx.i33.6 = getelementptr inbounds i16, ptr %call.i.i, i64 %15
  store i16 %14, ptr %arrayidx.i33.6, align 2, !tbaa !31
  %16 = load i16, ptr %arrayidx.i30.7, align 2, !tbaa !31
  %17 = add nuw nsw i64 %2, 7
  %arrayidx.i33.7 = getelementptr inbounds i16, ptr %call.i.i, i64 %17
  store i16 %16, ptr %arrayidx.i33.7, align 2, !tbaa !31
  %18 = load i16, ptr %arrayidx.i30.8, align 2, !tbaa !31
  %19 = add nuw nsw i64 %2, 8
  %arrayidx.i33.8 = getelementptr inbounds i16, ptr %call.i.i, i64 %19
  store i16 %18, ptr %arrayidx.i33.8, align 2, !tbaa !31
  %20 = load i16, ptr %arrayidx.i30.9, align 2, !tbaa !31
  %21 = add nuw nsw i64 %2, 9
  %arrayidx.i33.9 = getelementptr inbounds i16, ptr %call.i.i, i64 %21
  store i16 %20, ptr %arrayidx.i33.9, align 2, !tbaa !31
  %22 = load i16, ptr %arrayidx.i30.10, align 2, !tbaa !31
  %23 = add nuw nsw i64 %2, 10
  %arrayidx.i33.10 = getelementptr inbounds i16, ptr %call.i.i, i64 %23
  store i16 %22, ptr %arrayidx.i33.10, align 2, !tbaa !31
  %24 = load i16, ptr %arrayidx.i30.11, align 2, !tbaa !31
  %25 = add nuw nsw i64 %2, 11
  %arrayidx.i33.11 = getelementptr inbounds i16, ptr %call.i.i, i64 %25
  store i16 %24, ptr %arrayidx.i33.11, align 2, !tbaa !31
  %26 = load i16, ptr %arrayidx.i30.12, align 2, !tbaa !31
  %27 = add nuw nsw i64 %2, 12
  %arrayidx.i33.12 = getelementptr inbounds i16, ptr %call.i.i, i64 %27
  store i16 %26, ptr %arrayidx.i33.12, align 2, !tbaa !31
  %28 = load i16, ptr %arrayidx.i30.13, align 2, !tbaa !31
  %29 = add nuw nsw i64 %2, 13
  %arrayidx.i33.13 = getelementptr inbounds i16, ptr %call.i.i, i64 %29
  store i16 %28, ptr %arrayidx.i33.13, align 2, !tbaa !31
  %30 = load i16, ptr %arrayidx.i30.14, align 2, !tbaa !31
  %31 = add nuw nsw i64 %2, 14
  %arrayidx.i33.14 = getelementptr inbounds i16, ptr %call.i.i, i64 %31
  store i16 %30, ptr %arrayidx.i33.14, align 2, !tbaa !31
  %32 = load i16, ptr %arrayidx.i30.15, align 2, !tbaa !31
  %33 = add nuw nsw i64 %2, 15
  %arrayidx.i33.15 = getelementptr inbounds i16, ptr %call.i.i, i64 %33
  store i16 %32, ptr %arrayidx.i33.15, align 2, !tbaa !31
  %34 = load i16, ptr %arrayidx.i30.16, align 2, !tbaa !31
  %35 = add nuw nsw i64 %2, 16
  %arrayidx.i33.16 = getelementptr inbounds i16, ptr %call.i.i, i64 %35
  store i16 %34, ptr %arrayidx.i33.16, align 2, !tbaa !31
  %36 = load i16, ptr %arrayidx.i30.17, align 2, !tbaa !31
  %37 = add nuw nsw i64 %2, 17
  %arrayidx.i33.17 = getelementptr inbounds i16, ptr %call.i.i, i64 %37
  store i16 %36, ptr %arrayidx.i33.17, align 2, !tbaa !31
  %38 = load i16, ptr %arrayidx.i30.18, align 2, !tbaa !31
  %39 = add nuw nsw i64 %2, 18
  %arrayidx.i33.18 = getelementptr inbounds i16, ptr %call.i.i, i64 %39
  store i16 %38, ptr %arrayidx.i33.18, align 2, !tbaa !31
  %40 = load i16, ptr %arrayidx.i30.19, align 2, !tbaa !31
  %41 = add nuw nsw i64 %2, 19
  %arrayidx.i33.19 = getelementptr inbounds i16, ptr %call.i.i, i64 %41
  store i16 %40, ptr %arrayidx.i33.19, align 2, !tbaa !31
  %42 = load i16, ptr %arrayidx.i30.20, align 2, !tbaa !31
  %43 = add nuw nsw i64 %2, 20
  %arrayidx.i33.20 = getelementptr inbounds i16, ptr %call.i.i, i64 %43
  store i16 %42, ptr %arrayidx.i33.20, align 2, !tbaa !31
  %44 = load i16, ptr %arrayidx.i30.21, align 2, !tbaa !31
  %45 = add nuw nsw i64 %2, 21
  %arrayidx.i33.21 = getelementptr inbounds i16, ptr %call.i.i, i64 %45
  store i16 %44, ptr %arrayidx.i33.21, align 2, !tbaa !31
  %46 = load i16, ptr %arrayidx.i30.22, align 2, !tbaa !31
  %47 = add nuw nsw i64 %2, 22
  %arrayidx.i33.22 = getelementptr inbounds i16, ptr %call.i.i, i64 %47
  store i16 %46, ptr %arrayidx.i33.22, align 2, !tbaa !31
  %48 = load i16, ptr %arrayidx.i30.23, align 2, !tbaa !31
  %49 = add nuw nsw i64 %2, 23
  %arrayidx.i33.23 = getelementptr inbounds i16, ptr %call.i.i, i64 %49
  store i16 %48, ptr %arrayidx.i33.23, align 2, !tbaa !31
  %50 = load i16, ptr %arrayidx.i30.24, align 2, !tbaa !31
  %51 = add nuw nsw i64 %2, 24
  %arrayidx.i33.24 = getelementptr inbounds i16, ptr %call.i.i, i64 %51
  store i16 %50, ptr %arrayidx.i33.24, align 2, !tbaa !31
  %52 = load i16, ptr %arrayidx.i30.25, align 2, !tbaa !31
  %53 = add nuw nsw i64 %2, 25
  %arrayidx.i33.25 = getelementptr inbounds i16, ptr %call.i.i, i64 %53
  store i16 %52, ptr %arrayidx.i33.25, align 2, !tbaa !31
  %54 = load i16, ptr %arrayidx.i30.26, align 2, !tbaa !31
  %55 = add nuw nsw i64 %2, 26
  %arrayidx.i33.26 = getelementptr inbounds i16, ptr %call.i.i, i64 %55
  store i16 %54, ptr %arrayidx.i33.26, align 2, !tbaa !31
  %56 = load i16, ptr %arrayidx.i30.27, align 2, !tbaa !31
  %57 = add nuw nsw i64 %2, 27
  %arrayidx.i33.27 = getelementptr inbounds i16, ptr %call.i.i, i64 %57
  store i16 %56, ptr %arrayidx.i33.27, align 2, !tbaa !31
  %58 = load i16, ptr %arrayidx.i30.28, align 2, !tbaa !31
  %59 = add nuw nsw i64 %2, 28
  %arrayidx.i33.28 = getelementptr inbounds i16, ptr %call.i.i, i64 %59
  store i16 %58, ptr %arrayidx.i33.28, align 2, !tbaa !31
  %60 = load i16, ptr %arrayidx.i30.29, align 2, !tbaa !31
  %61 = add nuw nsw i64 %2, 29
  %arrayidx.i33.29 = getelementptr inbounds i16, ptr %call.i.i, i64 %61
  store i16 %60, ptr %arrayidx.i33.29, align 2, !tbaa !31
  %62 = load i16, ptr %arrayidx.i30.30, align 2, !tbaa !31
  %63 = add nuw nsw i64 %2, 30
  %arrayidx.i33.30 = getelementptr inbounds i16, ptr %call.i.i, i64 %63
  store i16 %62, ptr %arrayidx.i33.30, align 2, !tbaa !31
  %64 = load i16, ptr %arrayidx.i30.31, align 2, !tbaa !31
  %65 = add nuw nsw i64 %2, 31
  %arrayidx.i33.31 = getelementptr inbounds i16, ptr %call.i.i, i64 %65
  store i16 %64, ptr %arrayidx.i33.31, align 2, !tbaa !31
  %66 = load i16, ptr %arrayidx.i30.32, align 2, !tbaa !31
  %67 = add nuw nsw i64 %2, 32
  %arrayidx.i33.32 = getelementptr inbounds i16, ptr %call.i.i, i64 %67
  store i16 %66, ptr %arrayidx.i33.32, align 2, !tbaa !31
  br label %for.cond.cleanup5

for.body6.us.peel.next:                           ; preds = %for.cond3.preheader
  %arrayidx.i33.us.peel = getelementptr inbounds i16, ptr %call.i.i, i64 %2
  store i16 0, ptr %arrayidx.i33.us.peel, align 2, !tbaa !31
  br label %for.body6.us

for.body6.us:                                     ; preds = %for.body6.us.peel.next, %_Z6squashi.exit.us
  %indvars.iv = phi i64 [ 1, %for.body6.us.peel.next ], [ %indvars.iv.next, %_Z6squashi.exit.us ]
  %cmp.i.us = icmp ugt i64 %indvars.iv, 31
  br i1 %cmp.i.us, label %_Z6squashi.exit.us, label %if.end3.i.us

if.end3.i.us:                                     ; preds = %for.body6.us
  %indvars.iv.tr = trunc i64 %indvars.iv to i32
  %68 = shl nuw nsw i32 %indvars.iv.tr, 7
  %69 = add nsw i32 %68, -2048
  %shr.i.us = ashr exact i32 %69, 7
  %add.i.us = add nsw i32 %shr.i.us, 16
  %idxprom.i.us = zext i32 %add.i.us to i64
  %arrayidx.i.us = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %idxprom.i.us
  %70 = load i32, ptr %arrayidx.i.us, align 4, !tbaa !25
  br label %_Z6squashi.exit.us

_Z6squashi.exit.us:                               ; preds = %if.end3.i.us, %for.body6.us
  %retval.0.i.us = phi i32 [ %70, %if.end3.i.us ], [ 4095, %for.body6.us ]
  %retval.0.i.us.tr = trunc i32 %retval.0.i.us to i16
  %conv12.us = shl i16 %retval.0.i.us.tr, 4
  %71 = add nuw nsw i64 %indvars.iv, %2
  %arrayidx.i33.us = getelementptr inbounds i16, ptr %call.i.i, i64 %71
  store i16 %conv12.us, ptr %arrayidx.i33.us, align 2, !tbaa !31
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 33
  br i1 %exitcond.not, label %for.cond.cleanup5, label %for.body6.us, !llvm.loop !77

for.cond.cleanup:                                 ; preds = %for.cond.cleanup5, %_ZN5ArrayItLi0EEC2Ei.exit
  ret void

for.cond.cleanup5:                                ; preds = %_Z6squashi.exit.us, %for.body6.preheader
  %indvars.iv.next46 = add nuw nsw i64 %indvars.iv45, 1
  %exitcond48.not = icmp eq i64 %indvars.iv.next46, %wide.trip.count
  br i1 %exitcond48.not, label %for.cond.cleanup, label %for.cond3.preheader, !llvm.loop !79
}

; Function Attrs: uwtable
define dso_local void @_ZN8StateMapC2Ei(ptr nocapture noundef nonnull writeonly align 8 dereferenceable(32) %this, i32 noundef %n) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
entry:
  store i32 %n, ptr %this, align 8, !tbaa !80
  %cxt = getelementptr inbounds %class.StateMap, ptr %this, i64 0, i32 1
  store i32 0, ptr %cxt, align 4, !tbaa !82
  %t = getelementptr inbounds %class.StateMap, ptr %this, i64 0, i32 2
  %reserved.i.i = getelementptr inbounds %class.StateMap, ptr %this, i64 0, i32 2, i32 1
  store i32 %n, ptr %reserved.i.i, align 4, !tbaa !83
  store i32 %n, ptr %t, align 8, !tbaa !10
  %cmp.i.i = icmp slt i32 %n, 1
  br i1 %cmp.i.i, label %_ZN5ArrayIjLi0EEC2Ei.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %entry
  %mul.i.i = shl i32 %n, 2
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i = add nsw i32 %0, %mul.i.i
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %1
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i

_ZN14ProgramChecker5allocEi.exit.i.i:             ; preds = %if.then.i.i.i, %if.end.i.i
  %conv4.i.i = sext i32 %mul.i.i to i64
  %call.i.i = tail call noalias ptr @calloc(i64 noundef %conv4.i.i, i64 noundef 1) #41
  %ptr5.i.i = getelementptr inbounds %class.StateMap, ptr %this, i64 0, i32 2, i32 2
  store ptr %call.i.i, ptr %ptr5.i.i, align 8, !tbaa !17
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.then7.i.i, label %for.body.lr.ph

if.then7.i.i:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %exception.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

_ZN5ArrayIjLi0EEC2Ei.exit:                        ; preds = %entry
  %ptr.i.i = getelementptr inbounds %class.StateMap, ptr %this, i64 0, i32 2, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i.i, i8 0, i64 16, i1 false)
  br label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %data10.i.i = getelementptr inbounds %class.StateMap, ptr %this, i64 0, i32 2, i32 3
  store ptr %call.i.i, ptr %data10.i.i, align 8, !tbaa !84
  %2 = sext i32 %n to i64
  %smax = tail call i64 @llvm.smax.i64(i64 %2, i64 1)
  %min.iters.check = icmp ult i64 %smax, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph
  %n.vec = and i64 %smax, 9223372036854775800
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %3 = getelementptr inbounds i32, ptr %call.i.i, i64 %index
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %3, align 4, !tbaa !25
  %4 = getelementptr inbounds i32, ptr %3, i64 4
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %4, align 4, !tbaa !25
  %index.next = add nuw i64 %index, 8
  %5 = icmp eq i64 %index.next, %n.vec
  br i1 %5, label %middle.block, label %vector.body, !llvm.loop !85

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %smax, %n.vec
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.body.preheader:                               ; preds = %for.body.lr.ph, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %_ZN5ArrayIjLi0EEC2Ei.exit
  ret void

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %arrayidx.i = getelementptr inbounds i32, ptr %call.i.i, i64 %indvars.iv
  store i32 -2147483648, ptr %arrayidx.i, align 4, !tbaa !25
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp = icmp slt i64 %indvars.iv.next, %2
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !86
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayIjLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %i) unnamed_addr #5 comdat align 2 {
entry:
  %reserved.i = getelementptr inbounds %class.Array, ptr %this, i64 0, i32 1
  store i32 %i, ptr %reserved.i, align 4, !tbaa !83
  store i32 %i, ptr %this, align 8, !tbaa !10
  %cmp.i = icmp slt i32 %i, 1
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %ptr.i = getelementptr inbounds %class.Array, ptr %this, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i, i8 0, i64 16, i1 false)
  br label %_ZN5ArrayIjLi0EE6createEi.exit

if.end.i:                                         ; preds = %entry
  %mul.i = shl i32 %i, 2
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = add nsw i32 %0, %mul.i
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %1
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN14ProgramChecker5allocEi.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i

_ZN14ProgramChecker5allocEi.exit.i:               ; preds = %if.then.i.i, %if.end.i
  %conv4.i = sext i32 %mul.i to i64
  %call.i = tail call noalias ptr @calloc(i64 noundef %conv4.i, i64 noundef 1) #41
  %ptr5.i = getelementptr inbounds %class.Array, ptr %this, i64 0, i32 2
  store ptr %call.i, ptr %ptr5.i, align 8, !tbaa !17
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then7.i, label %if.end8.i

if.then7.i:                                       ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  %exception.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end8.i:                                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  %data10.i = getelementptr inbounds %class.Array, ptr %this, i64 0, i32 3
  store ptr %call.i, ptr %data10.i, align 8, !tbaa !84
  br label %_ZN5ArrayIjLi0EE6createEi.exit

_ZN5ArrayIjLi0EE6createEi.exit:                   ; preds = %if.then.i, %if.end8.i
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !10
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %2 = shl i32 %0, 2
  %add.i = sub i32 %1, %2
  store i32 %add.i, ptr @programChecker, align 8, !tbaa !13
  %3 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i = icmp sgt i32 %add.i, %3
  br i1 %cmp.i, label %if.then.i, label %_ZN14ProgramChecker5allocEi.exit

if.then.i:                                        ; preds = %entry
  store i32 %add.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit

_ZN14ProgramChecker5allocEi.exit:                 ; preds = %entry, %if.then.i
  %ptr = getelementptr inbounds %class.Array, ptr %this, i64 0, i32 2
  %4 = load ptr, ptr %ptr, align 8, !tbaa !17
  tail call void @free(ptr noundef %4) #39
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN3APMC2Ei(ptr nocapture noundef nonnull writeonly align 8 dereferenceable(32) %this, i32 noundef %n) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %mul = mul nsw i32 %n, 24
  store i32 %mul, ptr %this, align 8, !tbaa !80
  %cxt.i = getelementptr inbounds %class.StateMap, ptr %this, i64 0, i32 1
  store i32 0, ptr %cxt.i, align 4, !tbaa !82
  %t.i = getelementptr inbounds %class.StateMap, ptr %this, i64 0, i32 2
  %reserved.i.i.i = getelementptr inbounds %class.StateMap, ptr %this, i64 0, i32 2, i32 1
  store i32 %mul, ptr %reserved.i.i.i, align 4, !tbaa !83
  store i32 %mul, ptr %t.i, align 8, !tbaa !10
  %cmp.i.i.i = icmp slt i32 %n, 1
  br i1 %cmp.i.i.i, label %_ZN8StateMapC2Ei.exit.thread, label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %entry
  %mul.i.i.i = mul i32 %n, 96
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i.i = add nsw i32 %0, %mul.i.i.i
  store i32 %add.i.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i.i = icmp sgt i32 %add.i.i.i.i, %1
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.end.i.i.i
  store i32 %add.i.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i.i

_ZN14ProgramChecker5allocEi.exit.i.i.i:           ; preds = %if.then.i.i.i.i, %if.end.i.i.i
  %conv4.i.i.i = sext i32 %mul.i.i.i to i64
  %call.i.i.i = tail call noalias ptr @calloc(i64 noundef %conv4.i.i.i, i64 noundef 1) #41
  %ptr5.i.i.i = getelementptr inbounds %class.StateMap, ptr %this, i64 0, i32 2, i32 2
  store ptr %call.i.i.i, ptr %ptr5.i.i.i, align 8, !tbaa !17
  %tobool.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i.i, label %if.then7.i.i.i, label %for.body.lr.ph.i

if.then7.i.i.i:                                   ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i.i
  %exception.i.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

_ZN8StateMapC2Ei.exit.thread:                     ; preds = %entry
  %ptr.i.i.i = getelementptr inbounds %class.StateMap, ptr %this, i64 0, i32 2, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i.i.i, i8 0, i64 16, i1 false)
  br label %for.cond.cleanup

for.body.lr.ph.i:                                 ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i.i
  %data10.i.i.i = getelementptr inbounds %class.StateMap, ptr %this, i64 0, i32 2, i32 3
  store ptr %call.i.i.i, ptr %data10.i.i.i, align 8, !tbaa !84
  %2 = tail call i32 @llvm.smax.i32(i32 %mul, i32 1)
  %smax = zext i32 %2 to i64
  %min.iters.check = icmp ult i32 %2, 8
  br i1 %min.iters.check, label %for.body.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i
  %n.vec = and i64 %smax, 2147483640
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %3 = getelementptr inbounds i32, ptr %call.i.i.i, i64 %index
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %3, align 4, !tbaa !25
  %4 = getelementptr inbounds i32, ptr %3, i64 4
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %4, align 4, !tbaa !25
  %index.next = add nuw i64 %index, 8
  %5 = icmp eq i64 %index.next, %n.vec
  br i1 %5, label %middle.block, label %vector.body, !llvm.loop !87

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %smax
  br i1 %cmp.n, label %_ZN8StateMapC2Ei.exit, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %for.body.lr.ph.i, %middle.block
  %indvars.iv.i.ph = phi i64 [ 0, %for.body.lr.ph.i ], [ %n.vec, %middle.block ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ %indvars.iv.i.ph, %for.body.i.preheader ]
  %arrayidx.i.i = getelementptr inbounds i32, ptr %call.i.i.i, i64 %indvars.iv.i
  store i32 -2147483648, ptr %arrayidx.i.i, align 4, !tbaa !25
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next.i, %smax
  br i1 %exitcond.not, label %_ZN8StateMapC2Ei.exit, label %for.body.i, !llvm.loop !88

_ZN8StateMapC2Ei.exit:                            ; preds = %for.body.i, %middle.block
  %cmp13 = icmp sgt i32 %n, 0
  br i1 %cmp13, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %_ZN8StateMapC2Ei.exit
  %6 = sext i32 %mul to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %_Z6squashi.exit, %_ZN8StateMapC2Ei.exit.thread, %_ZN8StateMapC2Ei.exit
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %_Z6squashi.exit
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_Z6squashi.exit ]
  %7 = trunc i64 %indvars.iv to i32
  %rem = urem i32 %7, 24
  %mul2 = shl nuw nsw i32 %rem, 13
  %add = or i32 %mul2, 4096
  %cmp.i10 = icmp ugt i32 %add, 196607
  br i1 %cmp.i10, label %_Z6squashi.exit, label %if.end3.i

if.end3.i:                                        ; preds = %for.body
  %div = udiv i32 %add, 48
  %sub = add nsw i32 %div, -2048
  %and.i = and i32 %div, 127
  %shr.i = ashr i32 %sub, 7
  %add.i = add nsw i32 %shr.i, 16
  %idxprom.i = zext i32 %add.i to i64
  %arrayidx.i = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %idxprom.i
  %8 = load i32, ptr %arrayidx.i, align 4, !tbaa !25
  %sub.i = sub nuw nsw i32 128, %and.i
  %mul.i = mul nsw i32 %8, %sub.i
  %add4.i = add nsw i32 %shr.i, 17
  %idxprom5.i = zext i32 %add4.i to i64
  %arrayidx6.i = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %idxprom5.i
  %9 = load i32, ptr %arrayidx6.i, align 4, !tbaa !25
  %mul7.i = mul nsw i32 %9, %and.i
  %add8.i = add i32 %mul.i, 64
  %add9.i = add i32 %add8.i, %mul7.i
  %shr10.i = ashr i32 %add9.i, 7
  br label %_Z6squashi.exit

_Z6squashi.exit:                                  ; preds = %for.body, %if.end3.i
  %retval.0.i = phi i32 [ %shr10.i, %if.end3.i ], [ 4095, %for.body ]
  %shl = shl i32 %retval.0.i, 20
  %add4 = or i32 %shl, 6
  %arrayidx.i12 = getelementptr inbounds i32, ptr %call.i.i.i, i64 %indvars.iv
  store i32 %add4, ptr %arrayidx.i12, align 4, !tbaa !25
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp = icmp slt i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !89
}

; Function Attrs: uwtable
define dso_local void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) %this, i32 noundef %m, i32 noundef %c) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
entry:
  store i32 %c, ptr %this, align 8, !tbaa !90
  %t = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 2
  %shr = ashr i32 %m, 6
  %reserved.i.i = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 2, i32 1
  store i32 %shr, ptr %reserved.i.i, align 4, !tbaa !94
  store i32 %shr, ptr %t, align 8, !tbaa !95
  %cmp.i.i = icmp slt i32 %m, 64
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %entry
  %ptr.i.i = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 2, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i.i, i8 0, i64 16, i1 false)
  br label %_ZN5ArrayIN10ContextMap1EELi64EEC2Ei.exit

if.end.i.i:                                       ; preds = %entry
  %mul.i.i = and i32 %m, -64
  %add.i.i = add nuw i32 %mul.i.i, 64
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i = add nsw i32 %0, %add.i.i
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %1
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i

_ZN14ProgramChecker5allocEi.exit.i.i:             ; preds = %if.then.i.i.i, %if.end.i.i
  %conv4.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call noalias ptr @calloc(i64 noundef %conv4.i.i, i64 noundef 1) #41
  %ptr5.i.i = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 2, i32 2
  store ptr %call.i.i, ptr %ptr5.i.i, align 8, !tbaa !96
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.then7.i.i, label %if.end8.i.i

if.then7.i.i:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %exception.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end8.i.i:                                      ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %add.ptr.i.i = getelementptr inbounds i8, ptr %call.i.i, i64 64
  %2 = ptrtoint ptr %call.i.i to i64
  %and.i.i = and i64 %2, 63
  %idx.neg.i.i = sub nsw i64 0, %and.i.i
  %add.ptr11.i.i = getelementptr inbounds i8, ptr %add.ptr.i.i, i64 %idx.neg.i.i
  %data12.i.i = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 2, i32 3
  store ptr %add.ptr11.i.i, ptr %data12.i.i, align 8, !tbaa !97
  br label %_ZN5ArrayIN10ContextMap1EELi64EEC2Ei.exit

_ZN5ArrayIN10ContextMap1EELi64EEC2Ei.exit:        ; preds = %if.then.i.i, %if.end8.i.i
  %cp = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 3
  %reserved.i.i46 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 3, i32 1
  store i32 %c, ptr %reserved.i.i46, align 4, !tbaa !98
  store i32 %c, ptr %cp, align 8, !tbaa !99
  %cmp.i.i47 = icmp slt i32 %c, 1
  br i1 %cmp.i.i47, label %if.then.i.i105, label %if.end.i.i53

if.end.i.i53:                                     ; preds = %_ZN5ArrayIN10ContextMap1EELi64EEC2Ei.exit
  %mul.i.i50 = shl i32 %c, 3
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i51 = add nsw i32 %3, %mul.i.i50
  store i32 %add.i.i.i51, ptr @programChecker, align 8, !tbaa !13
  %4 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i52 = icmp sgt i32 %add.i.i.i51, %4
  br i1 %cmp.i.i.i52, label %if.then.i.i.i54, label %_ZN14ProgramChecker5allocEi.exit.i.i59

if.then.i.i.i54:                                  ; preds = %if.end.i.i53
  store i32 %add.i.i.i51, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i59

_ZN14ProgramChecker5allocEi.exit.i.i59:           ; preds = %if.then.i.i.i54, %if.end.i.i53
  %5 = phi i32 [ %add.i.i.i51, %if.then.i.i.i54 ], [ %4, %if.end.i.i53 ]
  %conv4.i.i55 = sext i32 %mul.i.i50 to i64
  %call.i.i56 = tail call noalias ptr @calloc(i64 noundef %conv4.i.i55, i64 noundef 1) #41
  %ptr5.i.i57 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 3, i32 2
  store ptr %call.i.i56, ptr %ptr5.i.i57, align 8, !tbaa !100
  %tobool.not.i.i58 = icmp eq ptr %call.i.i56, null
  br i1 %tobool.not.i.i58, label %if.then7.i.i61, label %if.end.i.i70

if.then7.i.i61:                                   ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i59
  %exception.i.i.i60 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i60, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i.i.i60, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc unwind label %lpad

.noexc:                                           ; preds = %if.then7.i.i61
  unreachable

if.end.i.i70:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i59
  %data10.i.i = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 3, i32 3
  store ptr %call.i.i56, ptr %data10.i.i, align 8, !tbaa !101
  %cp0 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 4
  %reserved.i.i63 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 4, i32 1
  store i32 %c, ptr %reserved.i.i63, align 4, !tbaa !98
  store i32 %c, ptr %cp0, align 8, !tbaa !99
  %add.i.i.i68 = add nsw i32 %add.i.i.i51, %mul.i.i50
  store i32 %add.i.i.i68, ptr @programChecker, align 8, !tbaa !13
  %cmp.i.i.i69 = icmp sgt i32 %add.i.i.i68, %5
  br i1 %cmp.i.i.i69, label %if.then.i.i.i71, label %_ZN14ProgramChecker5allocEi.exit.i.i76

if.then.i.i.i71:                                  ; preds = %if.end.i.i70
  store i32 %add.i.i.i68, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i76

_ZN14ProgramChecker5allocEi.exit.i.i76:           ; preds = %if.then.i.i.i71, %if.end.i.i70
  %6 = phi i32 [ %add.i.i.i68, %if.then.i.i.i71 ], [ %5, %if.end.i.i70 ]
  %call.i.i73 = tail call noalias ptr @calloc(i64 noundef %conv4.i.i55, i64 noundef 1) #41
  %ptr5.i.i74 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 4, i32 2
  store ptr %call.i.i73, ptr %ptr5.i.i74, align 8, !tbaa !100
  %tobool.not.i.i75 = icmp eq ptr %call.i.i73, null
  br i1 %tobool.not.i.i75, label %if.then7.i.i78, label %if.end.i.i90

if.then7.i.i78:                                   ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i76
  %exception.i.i.i77 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i77, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i.i.i77, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc81 unwind label %lpad2

.noexc81:                                         ; preds = %if.then7.i.i78
  unreachable

if.end.i.i90:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i76
  %data10.i.i79 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 4, i32 3
  store ptr %call.i.i73, ptr %data10.i.i79, align 8, !tbaa !101
  %cxt = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 5
  %reserved.i.i83 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 5, i32 1
  store i32 %c, ptr %reserved.i.i83, align 4, !tbaa !83
  store i32 %c, ptr %cxt, align 8, !tbaa !10
  %mul.i.i87 = shl i32 %c, 2
  %add.i.i.i88 = add nsw i32 %add.i.i.i68, %mul.i.i87
  store i32 %add.i.i.i88, ptr @programChecker, align 8, !tbaa !13
  %cmp.i.i.i89 = icmp sgt i32 %add.i.i.i88, %6
  br i1 %cmp.i.i.i89, label %if.then.i.i.i91, label %_ZN14ProgramChecker5allocEi.exit.i.i96

if.then.i.i.i91:                                  ; preds = %if.end.i.i90
  store i32 %add.i.i.i88, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i96

_ZN14ProgramChecker5allocEi.exit.i.i96:           ; preds = %if.then.i.i.i91, %if.end.i.i90
  %7 = phi i32 [ %add.i.i.i88, %if.then.i.i.i91 ], [ %6, %if.end.i.i90 ]
  %conv4.i.i92 = sext i32 %mul.i.i87 to i64
  %call.i.i93 = tail call noalias ptr @calloc(i64 noundef %conv4.i.i92, i64 noundef 1) #41
  %ptr5.i.i94 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 5, i32 2
  store ptr %call.i.i93, ptr %ptr5.i.i94, align 8, !tbaa !17
  %tobool.not.i.i95 = icmp eq ptr %call.i.i93, null
  br i1 %tobool.not.i.i95, label %if.then7.i.i98, label %if.end.i.i109

if.then7.i.i98:                                   ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i96
  %exception.i.i.i97 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i97, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i.i.i97, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc101 unwind label %lpad4

.noexc101:                                        ; preds = %if.then7.i.i98
  unreachable

if.then.i.i105:                                   ; preds = %_ZN5ArrayIN10ContextMap1EELi64EEC2Ei.exit
  %ptr.i.i48 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 3, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i.i48, i8 0, i64 16, i1 false)
  %cp0138 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 4
  %reserved.i.i63139 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 4, i32 1
  store i32 %c, ptr %reserved.i.i63139, align 4, !tbaa !98
  store i32 %c, ptr %cp0138, align 8, !tbaa !99
  %ptr.i.i65 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 4, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i.i65, i8 0, i64 16, i1 false)
  %cxt143 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 5
  %reserved.i.i83144 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 5, i32 1
  store i32 %c, ptr %reserved.i.i83144, align 4, !tbaa !83
  store i32 %c, ptr %cxt143, align 8, !tbaa !10
  %ptr.i.i85 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 5, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i.i85, i8 0, i64 16, i1 false)
  %runp152 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 6
  %reserved.i.i102153 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 6, i32 1
  store i32 %c, ptr %reserved.i.i102153, align 4, !tbaa !98
  store i32 %c, ptr %runp152, align 8, !tbaa !99
  %ptr.i.i104 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 6, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i.i104, i8 0, i64 16, i1 false)
  br label %invoke.cont7

if.end.i.i109:                                    ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i96
  %data10.i.i99 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 5, i32 3
  store ptr %call.i.i93, ptr %data10.i.i99, align 8, !tbaa !84
  %runp = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 6
  %reserved.i.i102 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 6, i32 1
  store i32 %c, ptr %reserved.i.i102, align 4, !tbaa !98
  store i32 %c, ptr %runp, align 8, !tbaa !99
  %add.i.i.i107 = add nsw i32 %add.i.i.i88, %mul.i.i50
  store i32 %add.i.i.i107, ptr @programChecker, align 8, !tbaa !13
  %cmp.i.i.i108 = icmp sgt i32 %add.i.i.i107, %7
  br i1 %cmp.i.i.i108, label %if.then.i.i.i110, label %_ZN14ProgramChecker5allocEi.exit.i.i115

if.then.i.i.i110:                                 ; preds = %if.end.i.i109
  store i32 %add.i.i.i107, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i115

_ZN14ProgramChecker5allocEi.exit.i.i115:          ; preds = %if.then.i.i.i110, %if.end.i.i109
  %call.i.i112 = tail call noalias ptr @calloc(i64 noundef %conv4.i.i55, i64 noundef 1) #41
  %ptr5.i.i113 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 6, i32 2
  store ptr %call.i.i112, ptr %ptr5.i.i113, align 8, !tbaa !100
  %tobool.not.i.i114 = icmp eq ptr %call.i.i112, null
  br i1 %tobool.not.i.i114, label %if.then7.i.i117, label %if.end8.i.i119

if.then7.i.i117:                                  ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i115
  %exception.i.i.i116 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i116, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i.i.i116, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc120 unwind label %lpad6

.noexc120:                                        ; preds = %if.then7.i.i117
  unreachable

if.end8.i.i119:                                   ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i115
  %data10.i.i118 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 6, i32 3
  store ptr %call.i.i112, ptr %data10.i.i118, align 8, !tbaa !101
  br label %invoke.cont7

invoke.cont7:                                     ; preds = %if.end8.i.i119, %if.then.i.i105
  %runp160 = phi ptr [ %runp, %if.end8.i.i119 ], [ %runp152, %if.then.i.i105 ]
  %cp0140146158 = phi ptr [ %cp0, %if.end8.i.i119 ], [ %cp0138, %if.then.i.i105 ]
  %cxt148155 = phi ptr [ %cxt, %if.end8.i.i119 ], [ %cxt143, %if.then.i.i105 ]
  %cn = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 8
  store i32 0, ptr %cn, align 8, !tbaa !102
  %conv = sext i32 %c to i64
  %8 = icmp slt i32 %c, 0
  %9 = shl nsw i64 %conv, 5
  %10 = or i64 %9, 8
  %11 = select i1 %8, i64 -1, i64 %10
  %call = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %11) #43
          to label %invoke.cont10 unwind label %lpad9

invoke.cont10:                                    ; preds = %invoke.cont7
  store i64 %conv, ptr %call, align 16
  %12 = getelementptr inbounds i8, ptr %call, i64 8
  %isempty = icmp eq i32 %c, 0
  br i1 %isempty, label %arrayctor.cont.thread, label %new.ctorloop

arrayctor.cont.thread:                            ; preds = %invoke.cont10
  %sm173 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 7
  store ptr %12, ptr %sm173, align 8, !tbaa !103
  br label %for.cond.cleanup

new.ctorloop:                                     ; preds = %invoke.cont10
  %arrayctor.end = getelementptr inbounds %class.StateMap, ptr %12, i64 %conv
  %programChecker.promoted = load i32, ptr @programChecker, align 8, !tbaa !13
  %.promoted = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %arrayctor.loop

arrayctor.loop:                                   ; preds = %for.body.lr.ph.i, %new.ctorloop
  %add.i.i.i.i166 = phi i32 [ %.promoted, %new.ctorloop ], [ %add.i.i.i.i165, %for.body.lr.ph.i ]
  %add.i.i.i.i163 = phi i32 [ %programChecker.promoted, %new.ctorloop ], [ %add.i.i.i.i, %for.body.lr.ph.i ]
  %arrayctor.cur = phi ptr [ %12, %new.ctorloop ], [ %arrayctor.next, %for.body.lr.ph.i ]
  store <4 x i32> <i32 256, i32 0, i32 256, i32 256>, ptr %arrayctor.cur, align 8, !tbaa !25
  %add.i.i.i.i = add nsw i32 %add.i.i.i.i163, 1024
  %cmp.i.i.i.i = icmp sgt i32 %add.i.i.i.i, %add.i.i.i.i166
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %arrayctor.loop
  store i32 %add.i.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i.i

_ZN14ProgramChecker5allocEi.exit.i.i.i:           ; preds = %if.then.i.i.i.i, %arrayctor.loop
  %add.i.i.i.i165 = phi i32 [ %add.i.i.i.i, %if.then.i.i.i.i ], [ %add.i.i.i.i166, %arrayctor.loop ]
  %call.i.i.i = tail call noalias dereferenceable_or_null(1024) ptr @calloc(i64 noundef 1024, i64 noundef 1) #41
  %ptr5.i.i.i = getelementptr inbounds %class.StateMap, ptr %arrayctor.cur, i64 0, i32 2, i32 2
  store ptr %call.i.i.i, ptr %ptr5.i.i.i, align 8, !tbaa !17
  %tobool.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i.i, label %if.then7.i.i.i, label %for.body.lr.ph.i

if.then7.i.i.i:                                   ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i.i
  store i32 %add.i.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %exception.i.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i.i, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc122 unwind label %lpad11

.noexc122:                                        ; preds = %if.then7.i.i.i
  unreachable

for.body.lr.ph.i:                                 ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i.i
  %data10.i.i.i = getelementptr inbounds %class.StateMap, ptr %arrayctor.cur, i64 0, i32 2, i32 3
  store ptr %call.i.i.i, ptr %data10.i.i.i, align 8, !tbaa !84
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %call.i.i.i, align 4, !tbaa !25
  %13 = getelementptr inbounds i32, ptr %call.i.i.i, i64 4
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %13, align 4, !tbaa !25
  %14 = getelementptr inbounds i32, ptr %call.i.i.i, i64 8
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %14, align 4, !tbaa !25
  %15 = getelementptr inbounds i32, ptr %call.i.i.i, i64 12
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %15, align 4, !tbaa !25
  %16 = getelementptr inbounds i32, ptr %call.i.i.i, i64 16
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %16, align 4, !tbaa !25
  %17 = getelementptr inbounds i32, ptr %call.i.i.i, i64 20
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %17, align 4, !tbaa !25
  %18 = getelementptr inbounds i32, ptr %call.i.i.i, i64 24
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %18, align 4, !tbaa !25
  %19 = getelementptr inbounds i32, ptr %call.i.i.i, i64 28
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %19, align 4, !tbaa !25
  %20 = getelementptr inbounds i32, ptr %call.i.i.i, i64 32
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %20, align 4, !tbaa !25
  %21 = getelementptr inbounds i32, ptr %call.i.i.i, i64 36
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %21, align 4, !tbaa !25
  %22 = getelementptr inbounds i32, ptr %call.i.i.i, i64 40
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %22, align 4, !tbaa !25
  %23 = getelementptr inbounds i32, ptr %call.i.i.i, i64 44
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %23, align 4, !tbaa !25
  %24 = getelementptr inbounds i32, ptr %call.i.i.i, i64 48
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %24, align 4, !tbaa !25
  %25 = getelementptr inbounds i32, ptr %call.i.i.i, i64 52
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %25, align 4, !tbaa !25
  %26 = getelementptr inbounds i32, ptr %call.i.i.i, i64 56
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %26, align 4, !tbaa !25
  %27 = getelementptr inbounds i32, ptr %call.i.i.i, i64 60
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %27, align 4, !tbaa !25
  %28 = getelementptr inbounds i32, ptr %call.i.i.i, i64 64
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %28, align 4, !tbaa !25
  %29 = getelementptr inbounds i32, ptr %call.i.i.i, i64 68
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %29, align 4, !tbaa !25
  %30 = getelementptr inbounds i32, ptr %call.i.i.i, i64 72
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %30, align 4, !tbaa !25
  %31 = getelementptr inbounds i32, ptr %call.i.i.i, i64 76
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %31, align 4, !tbaa !25
  %32 = getelementptr inbounds i32, ptr %call.i.i.i, i64 80
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %32, align 4, !tbaa !25
  %33 = getelementptr inbounds i32, ptr %call.i.i.i, i64 84
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %33, align 4, !tbaa !25
  %34 = getelementptr inbounds i32, ptr %call.i.i.i, i64 88
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %34, align 4, !tbaa !25
  %35 = getelementptr inbounds i32, ptr %call.i.i.i, i64 92
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %35, align 4, !tbaa !25
  %36 = getelementptr inbounds i32, ptr %call.i.i.i, i64 96
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %36, align 4, !tbaa !25
  %37 = getelementptr inbounds i32, ptr %call.i.i.i, i64 100
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %37, align 4, !tbaa !25
  %38 = getelementptr inbounds i32, ptr %call.i.i.i, i64 104
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %38, align 4, !tbaa !25
  %39 = getelementptr inbounds i32, ptr %call.i.i.i, i64 108
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %39, align 4, !tbaa !25
  %40 = getelementptr inbounds i32, ptr %call.i.i.i, i64 112
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %40, align 4, !tbaa !25
  %41 = getelementptr inbounds i32, ptr %call.i.i.i, i64 116
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %41, align 4, !tbaa !25
  %42 = getelementptr inbounds i32, ptr %call.i.i.i, i64 120
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %42, align 4, !tbaa !25
  %43 = getelementptr inbounds i32, ptr %call.i.i.i, i64 124
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %43, align 4, !tbaa !25
  %44 = getelementptr inbounds i32, ptr %call.i.i.i, i64 128
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %44, align 4, !tbaa !25
  %45 = getelementptr inbounds i32, ptr %call.i.i.i, i64 132
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %45, align 4, !tbaa !25
  %46 = getelementptr inbounds i32, ptr %call.i.i.i, i64 136
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %46, align 4, !tbaa !25
  %47 = getelementptr inbounds i32, ptr %call.i.i.i, i64 140
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %47, align 4, !tbaa !25
  %48 = getelementptr inbounds i32, ptr %call.i.i.i, i64 144
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %48, align 4, !tbaa !25
  %49 = getelementptr inbounds i32, ptr %call.i.i.i, i64 148
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %49, align 4, !tbaa !25
  %50 = getelementptr inbounds i32, ptr %call.i.i.i, i64 152
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %50, align 4, !tbaa !25
  %51 = getelementptr inbounds i32, ptr %call.i.i.i, i64 156
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %51, align 4, !tbaa !25
  %52 = getelementptr inbounds i32, ptr %call.i.i.i, i64 160
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %52, align 4, !tbaa !25
  %53 = getelementptr inbounds i32, ptr %call.i.i.i, i64 164
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %53, align 4, !tbaa !25
  %54 = getelementptr inbounds i32, ptr %call.i.i.i, i64 168
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %54, align 4, !tbaa !25
  %55 = getelementptr inbounds i32, ptr %call.i.i.i, i64 172
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %55, align 4, !tbaa !25
  %56 = getelementptr inbounds i32, ptr %call.i.i.i, i64 176
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %56, align 4, !tbaa !25
  %57 = getelementptr inbounds i32, ptr %call.i.i.i, i64 180
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %57, align 4, !tbaa !25
  %58 = getelementptr inbounds i32, ptr %call.i.i.i, i64 184
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %58, align 4, !tbaa !25
  %59 = getelementptr inbounds i32, ptr %call.i.i.i, i64 188
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %59, align 4, !tbaa !25
  %60 = getelementptr inbounds i32, ptr %call.i.i.i, i64 192
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %60, align 4, !tbaa !25
  %61 = getelementptr inbounds i32, ptr %call.i.i.i, i64 196
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %61, align 4, !tbaa !25
  %62 = getelementptr inbounds i32, ptr %call.i.i.i, i64 200
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %62, align 4, !tbaa !25
  %63 = getelementptr inbounds i32, ptr %call.i.i.i, i64 204
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %63, align 4, !tbaa !25
  %64 = getelementptr inbounds i32, ptr %call.i.i.i, i64 208
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %64, align 4, !tbaa !25
  %65 = getelementptr inbounds i32, ptr %call.i.i.i, i64 212
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %65, align 4, !tbaa !25
  %66 = getelementptr inbounds i32, ptr %call.i.i.i, i64 216
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %66, align 4, !tbaa !25
  %67 = getelementptr inbounds i32, ptr %call.i.i.i, i64 220
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %67, align 4, !tbaa !25
  %68 = getelementptr inbounds i32, ptr %call.i.i.i, i64 224
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %68, align 4, !tbaa !25
  %69 = getelementptr inbounds i32, ptr %call.i.i.i, i64 228
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %69, align 4, !tbaa !25
  %70 = getelementptr inbounds i32, ptr %call.i.i.i, i64 232
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %70, align 4, !tbaa !25
  %71 = getelementptr inbounds i32, ptr %call.i.i.i, i64 236
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %71, align 4, !tbaa !25
  %72 = getelementptr inbounds i32, ptr %call.i.i.i, i64 240
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %72, align 4, !tbaa !25
  %73 = getelementptr inbounds i32, ptr %call.i.i.i, i64 244
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %73, align 4, !tbaa !25
  %74 = getelementptr inbounds i32, ptr %call.i.i.i, i64 248
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %74, align 4, !tbaa !25
  %75 = getelementptr inbounds i32, ptr %call.i.i.i, i64 252
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %75, align 4, !tbaa !25
  %arrayctor.next = getelementptr inbounds %class.StateMap, ptr %arrayctor.cur, i64 1
  %arrayctor.done = icmp eq ptr %arrayctor.next, %arrayctor.end
  br i1 %arrayctor.done, label %arrayctor.cont, label %arrayctor.loop

arrayctor.cont:                                   ; preds = %for.body.lr.ph.i
  store i32 %add.i.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %sm = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 7
  store ptr %12, ptr %sm, align 8, !tbaa !103
  %cmp167 = icmp sgt i32 %c, 0
  br i1 %cmp167, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %arrayctor.cont
  %data.i = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 2, i32 3
  %data.i123 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 3, i32 3
  %data.i124 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 4, i32 3
  %data.i130 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 6, i32 3
  %wide.trip.count = zext i32 %c to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %76 = icmp eq i32 %c, 1
  br i1 %76, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.1, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  %77 = load ptr, ptr %data.i, align 8, !tbaa !97
  %bh.epil = getelementptr inbounds %"class.ContextMap::E", ptr %77, i64 0, i32 2
  %78 = load ptr, ptr %data.i123, align 8, !tbaa !101
  %arrayidx.i.epil = getelementptr inbounds ptr, ptr %78, i64 %indvars.iv.unr
  store ptr %bh.epil, ptr %arrayidx.i.epil, align 8, !tbaa !5
  %79 = load ptr, ptr %data.i124, align 8, !tbaa !101
  %arrayidx.i126.epil = getelementptr inbounds ptr, ptr %79, i64 %indvars.iv.unr
  store ptr %bh.epil, ptr %arrayidx.i126.epil, align 8, !tbaa !5
  %80 = load ptr, ptr %data.i123, align 8, !tbaa !101
  %arrayidx.i129.epil = getelementptr inbounds ptr, ptr %80, i64 %indvars.iv.unr
  %81 = load ptr, ptr %arrayidx.i129.epil, align 8, !tbaa !5
  %add.ptr.epil = getelementptr inbounds i8, ptr %81, i64 3
  %82 = load ptr, ptr %data.i130, align 8, !tbaa !101
  %arrayidx.i132.epil = getelementptr inbounds ptr, ptr %82, i64 %indvars.iv.unr
  store ptr %add.ptr.epil, ptr %arrayidx.i132.epil, align 8, !tbaa !5
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body.epil, %for.cond.cleanup.loopexit.unr-lcssa, %arrayctor.cont.thread, %arrayctor.cont
  ret void

lpad:                                             ; preds = %if.then7.i.i61
  %83 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup35

lpad2:                                            ; preds = %if.then7.i.i78
  %84 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup34

lpad4:                                            ; preds = %if.then7.i.i98
  %85 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup33

lpad6:                                            ; preds = %if.then7.i.i117
  %86 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup32

lpad9:                                            ; preds = %invoke.cont7
  %87 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad11:                                           ; preds = %if.then7.i.i.i
  %88 = landingpad { ptr, i32 }
          cleanup
  %arraydestroy.isempty = icmp eq ptr %12, %arrayctor.cur
  br i1 %arraydestroy.isempty, label %arraydestroy.done13, label %arraydestroy.body

arraydestroy.body:                                ; preds = %lpad11, %arraydestroy.body
  %arraydestroy.elementPast = phi ptr [ %arraydestroy.element, %arraydestroy.body ], [ %arrayctor.cur, %lpad11 ]
  %arraydestroy.element = getelementptr inbounds %class.StateMap, ptr %arraydestroy.elementPast, i64 -1
  tail call void @_ZN8StateMapD2Ev(ptr noundef nonnull align 8 dereferenceable(32) %arraydestroy.element) #39
  %arraydestroy.done = icmp eq ptr %arraydestroy.element, %12
  br i1 %arraydestroy.done, label %arraydestroy.done13, label %arraydestroy.body

arraydestroy.done13:                              ; preds = %arraydestroy.body, %lpad11
  tail call void @_ZdaPv(ptr noundef nonnull %call) #42
  br label %ehcleanup

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.1, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.1, %for.body ]
  %89 = load ptr, ptr %data.i, align 8, !tbaa !97
  %bh = getelementptr inbounds %"class.ContextMap::E", ptr %89, i64 0, i32 2
  %90 = load ptr, ptr %data.i123, align 8, !tbaa !101
  %arrayidx.i = getelementptr inbounds ptr, ptr %90, i64 %indvars.iv
  store ptr %bh, ptr %arrayidx.i, align 8, !tbaa !5
  %91 = load ptr, ptr %data.i124, align 8, !tbaa !101
  %arrayidx.i126 = getelementptr inbounds ptr, ptr %91, i64 %indvars.iv
  store ptr %bh, ptr %arrayidx.i126, align 8, !tbaa !5
  %92 = load ptr, ptr %data.i123, align 8, !tbaa !101
  %arrayidx.i129 = getelementptr inbounds ptr, ptr %92, i64 %indvars.iv
  %93 = load ptr, ptr %arrayidx.i129, align 8, !tbaa !5
  %add.ptr = getelementptr inbounds i8, ptr %93, i64 3
  %94 = load ptr, ptr %data.i130, align 8, !tbaa !101
  %arrayidx.i132 = getelementptr inbounds ptr, ptr %94, i64 %indvars.iv
  store ptr %add.ptr, ptr %arrayidx.i132, align 8, !tbaa !5
  %indvars.iv.next = or i64 %indvars.iv, 1
  %95 = load ptr, ptr %data.i, align 8, !tbaa !97
  %bh.1 = getelementptr inbounds %"class.ContextMap::E", ptr %95, i64 0, i32 2
  %96 = load ptr, ptr %data.i123, align 8, !tbaa !101
  %arrayidx.i.1 = getelementptr inbounds ptr, ptr %96, i64 %indvars.iv.next
  store ptr %bh.1, ptr %arrayidx.i.1, align 8, !tbaa !5
  %97 = load ptr, ptr %data.i124, align 8, !tbaa !101
  %arrayidx.i126.1 = getelementptr inbounds ptr, ptr %97, i64 %indvars.iv.next
  store ptr %bh.1, ptr %arrayidx.i126.1, align 8, !tbaa !5
  %98 = load ptr, ptr %data.i123, align 8, !tbaa !101
  %arrayidx.i129.1 = getelementptr inbounds ptr, ptr %98, i64 %indvars.iv.next
  %99 = load ptr, ptr %arrayidx.i129.1, align 8, !tbaa !5
  %add.ptr.1 = getelementptr inbounds i8, ptr %99, i64 3
  %100 = load ptr, ptr %data.i130, align 8, !tbaa !101
  %arrayidx.i132.1 = getelementptr inbounds ptr, ptr %100, i64 %indvars.iv.next
  store ptr %add.ptr.1, ptr %arrayidx.i132.1, align 8, !tbaa !5
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body, !llvm.loop !104

ehcleanup:                                        ; preds = %arraydestroy.done13, %lpad9
  %.pn = phi { ptr, i32 } [ %88, %arraydestroy.done13 ], [ %87, %lpad9 ]
  tail call void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %runp160) #39
  br label %ehcleanup32

ehcleanup32:                                      ; preds = %ehcleanup, %lpad6
  %cp0140146157 = phi ptr [ %cp0140146158, %ehcleanup ], [ %cp0, %lpad6 ]
  %cxt148154 = phi ptr [ %cxt148155, %ehcleanup ], [ %cxt, %lpad6 ]
  %.pn.pn = phi { ptr, i32 } [ %.pn, %ehcleanup ], [ %86, %lpad6 ]
  tail call void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %cxt148154) #39
  br label %ehcleanup33

ehcleanup33:                                      ; preds = %ehcleanup32, %lpad4
  %cp0140145 = phi ptr [ %cp0140146157, %ehcleanup32 ], [ %cp0, %lpad4 ]
  %.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn, %ehcleanup32 ], [ %85, %lpad4 ]
  tail call void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %cp0140145) #39
  br label %ehcleanup34

ehcleanup34:                                      ; preds = %ehcleanup33, %lpad2
  %.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn, %ehcleanup33 ], [ %84, %lpad2 ]
  tail call void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %cp) #39
  br label %ehcleanup35

ehcleanup35:                                      ; preds = %ehcleanup34, %lpad
  %.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn, %ehcleanup34 ], [ %83, %lpad ]
  tail call void @_ZN5ArrayIN10ContextMap1EELi64EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %t) #39
  resume { ptr, i32 } %.pn.pn.pn.pn.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayIPhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %i) unnamed_addr #5 comdat align 2 {
entry:
  %reserved.i = getelementptr inbounds %class.Array.6, ptr %this, i64 0, i32 1
  store i32 %i, ptr %reserved.i, align 4, !tbaa !98
  store i32 %i, ptr %this, align 8, !tbaa !99
  %cmp.i = icmp slt i32 %i, 1
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %ptr.i = getelementptr inbounds %class.Array.6, ptr %this, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i, i8 0, i64 16, i1 false)
  br label %_ZN5ArrayIPhLi0EE6createEi.exit

if.end.i:                                         ; preds = %entry
  %mul.i = shl i32 %i, 3
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = add nsw i32 %0, %mul.i
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %1
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN14ProgramChecker5allocEi.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i

_ZN14ProgramChecker5allocEi.exit.i:               ; preds = %if.then.i.i, %if.end.i
  %conv4.i = sext i32 %mul.i to i64
  %call.i = tail call noalias ptr @calloc(i64 noundef %conv4.i, i64 noundef 1) #41
  %ptr5.i = getelementptr inbounds %class.Array.6, ptr %this, i64 0, i32 2
  store ptr %call.i, ptr %ptr5.i, align 8, !tbaa !100
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then7.i, label %if.end8.i

if.then7.i:                                       ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  %exception.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end8.i:                                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  %data10.i = getelementptr inbounds %class.Array.6, ptr %this, i64 0, i32 3
  store ptr %call.i, ptr %data10.i, align 8, !tbaa !101
  br label %_ZN5ArrayIPhLi0EE6createEi.exit

_ZN5ArrayIPhLi0EE6createEi.exit:                  ; preds = %if.then.i, %if.end8.i
  ret void
}

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znam(i64 noundef) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN8StateMapD2Ev(ptr noundef nonnull align 8 dereferenceable(32) %this) unnamed_addr #3 comdat align 2 {
entry:
  %t = getelementptr inbounds %class.StateMap, ptr %this, i64 0, i32 2
  %0 = load i32, ptr %t, align 8, !tbaa !10
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %2 = shl i32 %0, 2
  %add.i.i = sub i32 %1, %2
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %3 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %3
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN5ArrayIjLi0EED2Ev.exit

if.then.i.i:                                      ; preds = %entry
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIjLi0EED2Ev.exit

_ZN5ArrayIjLi0EED2Ev.exit:                        ; preds = %entry, %if.then.i.i
  %ptr.i = getelementptr inbounds %class.StateMap, ptr %this, i64 0, i32 2, i32 2
  %4 = load ptr, ptr %ptr.i, align 8, !tbaa !17
  tail call void @free(ptr noundef %4) #39
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(ptr noundef) local_unnamed_addr #10

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !99
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %2 = shl i32 %0, 3
  %add.i = sub i32 %1, %2
  store i32 %add.i, ptr @programChecker, align 8, !tbaa !13
  %3 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i = icmp sgt i32 %add.i, %3
  br i1 %cmp.i, label %if.then.i, label %_ZN14ProgramChecker5allocEi.exit

if.then.i:                                        ; preds = %entry
  store i32 %add.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit

_ZN14ProgramChecker5allocEi.exit:                 ; preds = %entry, %if.then.i
  %ptr = getelementptr inbounds %class.Array.6, ptr %this, i64 0, i32 2
  %4 = load ptr, ptr %ptr, align 8, !tbaa !100
  tail call void @free(ptr noundef %4) #39
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIN10ContextMap1EELi64EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !95
  %mul = shl i32 %0, 6
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %reass.sub = sub i32 %1, %mul
  %add.i = add i32 %reass.sub, -64
  store i32 %add.i, ptr @programChecker, align 8, !tbaa !13
  %2 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i = icmp sgt i32 %add.i, %2
  br i1 %cmp.i, label %if.then.i, label %_ZN14ProgramChecker5allocEi.exit

if.then.i:                                        ; preds = %entry
  store i32 %add.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit

_ZN14ProgramChecker5allocEi.exit:                 ; preds = %entry, %if.then.i
  %ptr = getelementptr inbounds %class.Array.5, ptr %this, i64 0, i32 2
  %3 = load ptr, ptr %ptr, align 8, !tbaa !96
  tail call void @free(ptr noundef %3) #39
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN10ContextMapD2Ev(ptr nocapture noundef nonnull readonly align 8 dereferenceable(140) %this) unnamed_addr #6 align 2 {
entry:
  %sm = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 7
  %0 = load ptr, ptr %sm, align 8, !tbaa !103
  %isnull = icmp eq ptr %0, null
  br i1 %isnull, label %delete.end3, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %1 = getelementptr inbounds i8, ptr %0, i64 -8
  %2 = load i64, ptr %1, align 8
  %arraydestroy.isempty = icmp eq i64 %2, 0
  br i1 %arraydestroy.isempty, label %arraydestroy.done2, label %arraydestroy.body.preheader

arraydestroy.body.preheader:                      ; preds = %delete.notnull
  %delete.end = getelementptr inbounds %class.StateMap, ptr %0, i64 %2
  br label %arraydestroy.body

arraydestroy.body:                                ; preds = %arraydestroy.body.preheader, %_ZN8StateMapD2Ev.exit
  %arraydestroy.elementPast = phi ptr [ %arraydestroy.element, %_ZN8StateMapD2Ev.exit ], [ %delete.end, %arraydestroy.body.preheader ]
  %arraydestroy.element = getelementptr inbounds %class.StateMap, ptr %arraydestroy.elementPast, i64 -1
  %t.i = getelementptr %class.StateMap, ptr %arraydestroy.elementPast, i64 -1, i32 2
  %3 = load i32, ptr %t.i, align 8, !tbaa !10
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %5 = shl i32 %3, 2
  %add.i.i.i = sub i32 %4, %5
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %6
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN8StateMapD2Ev.exit

if.then.i.i.i:                                    ; preds = %arraydestroy.body
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN8StateMapD2Ev.exit

_ZN8StateMapD2Ev.exit:                            ; preds = %arraydestroy.body, %if.then.i.i.i
  %ptr.i.i = getelementptr %class.StateMap, ptr %arraydestroy.elementPast, i64 -1, i32 2, i32 2
  %7 = load ptr, ptr %ptr.i.i, align 8, !tbaa !17
  tail call void @free(ptr noundef %7) #39
  %arraydestroy.done = icmp eq ptr %arraydestroy.element, %0
  br i1 %arraydestroy.done, label %arraydestroy.done2, label %arraydestroy.body

arraydestroy.done2:                               ; preds = %_ZN8StateMapD2Ev.exit, %delete.notnull
  tail call void @_ZdaPv(ptr noundef nonnull %1) #42
  br label %delete.end3

delete.end3:                                      ; preds = %arraydestroy.done2, %entry
  %runp = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 6
  %8 = load i32, ptr %runp, align 8, !tbaa !99
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = shl i32 %8, 3
  %add.i.i = sub i32 %9, %10
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %11
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN5ArrayIPhLi0EED2Ev.exit

if.then.i.i:                                      ; preds = %delete.end3
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIPhLi0EED2Ev.exit

_ZN5ArrayIPhLi0EED2Ev.exit:                       ; preds = %delete.end3, %if.then.i.i
  %ptr.i = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 6, i32 2
  %12 = load ptr, ptr %ptr.i, align 8, !tbaa !100
  tail call void @free(ptr noundef %12) #39
  %cxt = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 5
  %13 = load i32, ptr %cxt, align 8, !tbaa !10
  %14 = load i32, ptr @programChecker, align 8, !tbaa !13
  %15 = shl i32 %13, 2
  %add.i.i4 = sub i32 %14, %15
  store i32 %add.i.i4, ptr @programChecker, align 8, !tbaa !13
  %16 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i5 = icmp sgt i32 %add.i.i4, %16
  br i1 %cmp.i.i5, label %if.then.i.i6, label %_ZN5ArrayIjLi0EED2Ev.exit

if.then.i.i6:                                     ; preds = %_ZN5ArrayIPhLi0EED2Ev.exit
  store i32 %add.i.i4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIjLi0EED2Ev.exit

_ZN5ArrayIjLi0EED2Ev.exit:                        ; preds = %_ZN5ArrayIPhLi0EED2Ev.exit, %if.then.i.i6
  %ptr.i7 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 5, i32 2
  %17 = load ptr, ptr %ptr.i7, align 8, !tbaa !17
  tail call void @free(ptr noundef %17) #39
  %cp0 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 4
  %18 = load i32, ptr %cp0, align 8, !tbaa !99
  %19 = load i32, ptr @programChecker, align 8, !tbaa !13
  %20 = shl i32 %18, 3
  %add.i.i8 = sub i32 %19, %20
  store i32 %add.i.i8, ptr @programChecker, align 8, !tbaa !13
  %21 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i9 = icmp sgt i32 %add.i.i8, %21
  br i1 %cmp.i.i9, label %if.then.i.i10, label %_ZN5ArrayIPhLi0EED2Ev.exit12

if.then.i.i10:                                    ; preds = %_ZN5ArrayIjLi0EED2Ev.exit
  store i32 %add.i.i8, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIPhLi0EED2Ev.exit12

_ZN5ArrayIPhLi0EED2Ev.exit12:                     ; preds = %_ZN5ArrayIjLi0EED2Ev.exit, %if.then.i.i10
  %ptr.i11 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 4, i32 2
  %22 = load ptr, ptr %ptr.i11, align 8, !tbaa !100
  tail call void @free(ptr noundef %22) #39
  %cp = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 3
  %23 = load i32, ptr %cp, align 8, !tbaa !99
  %24 = load i32, ptr @programChecker, align 8, !tbaa !13
  %25 = shl i32 %23, 3
  %add.i.i13 = sub i32 %24, %25
  store i32 %add.i.i13, ptr @programChecker, align 8, !tbaa !13
  %26 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i14 = icmp sgt i32 %add.i.i13, %26
  br i1 %cmp.i.i14, label %if.then.i.i15, label %_ZN5ArrayIPhLi0EED2Ev.exit17

if.then.i.i15:                                    ; preds = %_ZN5ArrayIPhLi0EED2Ev.exit12
  store i32 %add.i.i13, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIPhLi0EED2Ev.exit17

_ZN5ArrayIPhLi0EED2Ev.exit17:                     ; preds = %_ZN5ArrayIPhLi0EED2Ev.exit12, %if.then.i.i15
  %ptr.i16 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 3, i32 2
  %27 = load ptr, ptr %ptr.i16, align 8, !tbaa !100
  tail call void @free(ptr noundef %27) #39
  %t = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 2
  %28 = load i32, ptr %t, align 8, !tbaa !95
  %mul.i = shl i32 %28, 6
  %29 = load i32, ptr @programChecker, align 8, !tbaa !13
  %reass.sub.i = sub i32 %29, %mul.i
  %add.i.i18 = add i32 %reass.sub.i, -64
  store i32 %add.i.i18, ptr @programChecker, align 8, !tbaa !13
  %30 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i19 = icmp sgt i32 %add.i.i18, %30
  br i1 %cmp.i.i19, label %if.then.i.i20, label %_ZN5ArrayIN10ContextMap1EELi64EED2Ev.exit

if.then.i.i20:                                    ; preds = %_ZN5ArrayIPhLi0EED2Ev.exit17
  store i32 %add.i.i18, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIN10ContextMap1EELi64EED2Ev.exit

_ZN5ArrayIN10ContextMap1EELi64EED2Ev.exit:        ; preds = %_ZN5ArrayIPhLi0EED2Ev.exit17, %if.then.i.i20
  %ptr.i21 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 2, i32 2
  %31 = load ptr, ptr %ptr.i21, align 8, !tbaa !96
  tail call void @free(ptr noundef %31) #39
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr nocapture noundef nonnull align 8 dereferenceable(140) %this, ptr nocapture noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %cc, i32 noundef %bp, i32 noundef %c1, i32 noundef %y1) local_unnamed_addr #12 align 2 {
entry:
  %cn = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 8
  %0 = load i32, ptr %cn, align 8, !tbaa !102
  %cmp538 = icmp sgt i32 %0, 0
  br i1 %cmp538, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %data.i = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 3, i32 3
  %idxprom4 = sext i32 %y1 to i64
  %data.i355 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 6, i32 3
  %t = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 2
  %data.i373 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 5, i32 3
  %data.i376 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 2, i32 3
  %data.i385 = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 4, i32 3
  %and32 = and i32 %cc, 3
  %idx.ext33 = zext i32 %and32 to i64
  %and = and i32 %cc, 1
  %idx.ext = zext i32 %and to i64
  %conv184 = trunc i32 %c1 to i8
  %sub226 = sub nsw i32 8, %bp
  %nx.i480 = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 8
  %data.i.i482 = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 3, i32 3
  %sub238 = sub nsw i32 7, %bp
  %sm = getelementptr inbounds %class.ContextMap, ptr %this, i64 0, i32 7
  %.pre = load ptr, ptr %data.i, align 8, !tbaa !101
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc, %entry
  %result.0.lcssa = phi i32 [ 0, %entry ], [ %result.1, %for.inc ]
  %cmp269 = icmp eq i32 %bp, 7
  br i1 %cmp269, label %if.then270, label %if.end272

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %1 = phi ptr [ %.pre, %for.body.lr.ph ], [ %70, %for.inc ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %result.0540 = phi i32 [ 0, %for.body.lr.ph ], [ %result.1, %for.inc ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv
  %2 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %if.end14, label %if.then

if.then:                                          ; preds = %for.body
  %3 = load i8, ptr %2, align 1, !tbaa !9
  %idxprom = zext i8 %3 to i64
  %arrayidx5 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom, i64 %idxprom4
  %4 = load i8, ptr %arrayidx5, align 1, !tbaa !9
  %cmp6 = icmp ugt i8 %4, -53
  br i1 %cmp6, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %conv = zext i8 %4 to i32
  %5 = load i32, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 1), align 8, !tbaa !105
  %inc.i = add nsw i32 %5, 1
  store i32 %inc.i, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 1), align 8, !tbaa !105
  %sub.i = add i32 %5, 41
  %and.i = and i32 %sub.i, 63
  %6 = load ptr, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 0, i32 3), align 8, !tbaa !84
  %idxprom.i.i = zext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i32, ptr %6, i64 %idxprom.i.i
  %7 = load i32, ptr %arrayidx.i.i, align 4, !tbaa !25
  %sub5.i = add i32 %5, 10
  %and6.i = and i32 %sub5.i, 63
  %idxprom.i13.i = zext i32 %and6.i to i64
  %arrayidx.i14.i = getelementptr inbounds i32, ptr %6, i64 %idxprom.i13.i
  %8 = load i32, ptr %arrayidx.i14.i, align 4, !tbaa !25
  %xor.i = xor i32 %8, %7
  %and10.i = and i32 %inc.i, 63
  %idxprom.i16.i = zext i32 %and10.i to i64
  %arrayidx.i17.i = getelementptr inbounds i32, ptr %6, i64 %idxprom.i16.i
  store i32 %xor.i, ptr %arrayidx.i17.i, align 4, !tbaa !25
  %sub = sub nuw nsw i32 452, %conv
  %shr = lshr i32 %sub, 3
  %shl = shl i32 %xor.i, %shr
  %tobool8.not = icmp eq i32 %shl, 0
  %sub10 = add nsw i8 %4, -4
  %spec.select = select i1 %tobool8.not, i8 %4, i8 %sub10
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %if.then
  %ns.0 = phi i8 [ %4, %if.then ], [ %spec.select, %land.lhs.true ]
  store i8 %ns.0, ptr %2, align 1, !tbaa !9
  br label %if.end14

if.end14:                                         ; preds = %if.end, %for.body
  %9 = load i32, ptr @bpos, align 4, !tbaa !25
  %cmp15 = icmp sgt i32 %9, 1
  br i1 %cmp15, label %land.lhs.true16, label %if.else

land.lhs.true16:                                  ; preds = %if.end14
  %10 = load ptr, ptr %data.i355, align 8, !tbaa !101
  %arrayidx.i357 = getelementptr inbounds ptr, ptr %10, i64 %indvars.iv
  %11 = load ptr, ptr %arrayidx.i357, align 8, !tbaa !5
  %12 = load i8, ptr %11, align 1, !tbaa !9
  %cmp20 = icmp eq i8 %12, 0
  br i1 %cmp20, label %if.end220, label %if.else

if.else:                                          ; preds = %land.lhs.true16, %if.end14
  switch i32 %9, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb
    i32 6, label %sw.bb
    i32 4, label %sw.bb28
    i32 7, label %sw.bb28
    i32 2, label %sw.bb37
    i32 5, label %sw.bb37
  ]

sw.bb:                                            ; preds = %if.else, %if.else, %if.else
  %13 = load ptr, ptr %data.i385, align 8, !tbaa !101
  %arrayidx.i363 = getelementptr inbounds ptr, ptr %13, i64 %indvars.iv
  %14 = load ptr, ptr %arrayidx.i363, align 8, !tbaa !5
  %add.ptr = getelementptr inbounds i8, ptr %14, i64 1
  %add.ptr25 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext
  br label %if.end220

sw.bb28:                                          ; preds = %if.else, %if.else
  %15 = load ptr, ptr %data.i385, align 8, !tbaa !101
  %arrayidx.i369 = getelementptr inbounds ptr, ptr %15, i64 %indvars.iv
  %16 = load ptr, ptr %arrayidx.i369, align 8, !tbaa !5
  %add.ptr31 = getelementptr inbounds i8, ptr %16, i64 3
  %add.ptr34 = getelementptr inbounds i8, ptr %add.ptr31, i64 %idx.ext33
  br label %if.end220

sw.bb37:                                          ; preds = %if.else, %if.else
  %17 = load ptr, ptr %data.i373, align 8, !tbaa !84
  %arrayidx.i375 = getelementptr inbounds i32, ptr %17, i64 %indvars.iv
  %18 = load i32, ptr %arrayidx.i375, align 4, !tbaa !25
  %add = add i32 %18, %cc
  %19 = load i32, ptr %t, align 8, !tbaa !95
  %sub41 = add nsw i32 %19, -1
  %and42 = and i32 %sub41, %add
  %20 = load ptr, ptr %data.i376, align 8, !tbaa !97
  %idxprom.i377 = sext i32 %and42 to i64
  %arrayidx.i378 = getelementptr inbounds %"class.ContextMap::E", ptr %20, i64 %idxprom.i377
  %shr46 = lshr i32 %18, 16
  %conv47 = trunc i32 %shr46 to i16
  %call48 = tail call noundef ptr @_ZN10ContextMap1E3getEt(ptr noundef nonnull align 2 dereferenceable(64) %arrayidx.i378, i16 noundef zeroext %conv47)
  %21 = load ptr, ptr %data.i, align 8, !tbaa !101
  %arrayidx.i384 = getelementptr inbounds ptr, ptr %21, i64 %indvars.iv
  store ptr %call48, ptr %arrayidx.i384, align 8, !tbaa !5
  br label %if.end220

sw.default:                                       ; preds = %if.else
  %22 = load ptr, ptr %data.i373, align 8, !tbaa !84
  %arrayidx.i390 = getelementptr inbounds i32, ptr %22, i64 %indvars.iv
  %23 = load i32, ptr %arrayidx.i390, align 4, !tbaa !25
  %add56 = add i32 %23, %cc
  %24 = load i32, ptr %t, align 8, !tbaa !95
  %sub59 = add nsw i32 %24, -1
  %and60 = and i32 %sub59, %add56
  %25 = load ptr, ptr %data.i376, align 8, !tbaa !97
  %idxprom.i392 = sext i32 %and60 to i64
  %arrayidx.i393 = getelementptr inbounds %"class.ContextMap::E", ptr %25, i64 %idxprom.i392
  %shr64 = lshr i32 %23, 16
  %conv65 = trunc i32 %shr64 to i16
  %call66 = tail call noundef ptr @_ZN10ContextMap1E3getEt(ptr noundef nonnull align 2 dereferenceable(64) %arrayidx.i393, i16 noundef zeroext %conv65)
  %26 = load ptr, ptr %data.i, align 8, !tbaa !101
  %arrayidx.i399 = getelementptr inbounds ptr, ptr %26, i64 %indvars.iv
  store ptr %call66, ptr %arrayidx.i399, align 8, !tbaa !5
  %27 = load ptr, ptr %data.i385, align 8, !tbaa !101
  %arrayidx.i402 = getelementptr inbounds ptr, ptr %27, i64 %indvars.iv
  store ptr %call66, ptr %arrayidx.i402, align 8, !tbaa !5
  %28 = load ptr, ptr %data.i385, align 8, !tbaa !101
  %arrayidx.i405 = getelementptr inbounds ptr, ptr %28, i64 %indvars.iv
  %29 = load ptr, ptr %arrayidx.i405, align 8, !tbaa !5
  %arrayidx73 = getelementptr inbounds i8, ptr %29, i64 3
  %30 = load i8, ptr %arrayidx73, align 1, !tbaa !9
  %cmp75 = icmp eq i8 %30, 2
  br i1 %cmp75, label %if.then76, label %if.end160

if.then76:                                        ; preds = %sw.default
  %arrayidx79 = getelementptr inbounds i8, ptr %29, i64 4
  %31 = load i8, ptr %arrayidx79, align 1, !tbaa !9
  %conv80 = zext i8 %31 to i32
  %add81 = or i32 %conv80, 256
  %32 = load ptr, ptr %data.i373, align 8, !tbaa !84
  %arrayidx.i411 = getelementptr inbounds i32, ptr %32, i64 %indvars.iv
  %33 = load i32, ptr %arrayidx.i411, align 4, !tbaa !25
  %shr85 = lshr i32 %add81, 6
  %add86 = add i32 %shr85, %33
  %34 = load i32, ptr %t, align 8, !tbaa !95
  %sub89 = add nsw i32 %34, -1
  %and90 = and i32 %add86, %sub89
  %35 = load ptr, ptr %data.i376, align 8, !tbaa !97
  %idxprom.i413 = sext i32 %and90 to i64
  %arrayidx.i414 = getelementptr inbounds %"class.ContextMap::E", ptr %35, i64 %idxprom.i413
  %shr94 = lshr i32 %33, 16
  %conv95 = trunc i32 %shr94 to i16
  %call96 = tail call noundef ptr @_ZN10ContextMap1E3getEt(ptr noundef nonnull align 2 dereferenceable(64) %arrayidx.i414, i16 noundef zeroext %conv95)
  %shr97 = lshr i32 %conv80, 5
  %and98 = and i32 %shr97, 1
  %add99 = add nuw nsw i32 %and98, 1
  %conv100 = trunc i32 %add99 to i8
  store i8 %conv100, ptr %call96, align 1, !tbaa !9
  %shr102 = lshr i32 %add81, 4
  %36 = trunc i32 %shr102 to i8
  %37 = and i8 %36, 1
  %conv105 = add nuw nsw i8 %37, 1
  %idxprom109 = zext i32 %add99 to i64
  %arrayidx110 = getelementptr inbounds i8, ptr %call96, i64 %idxprom109
  store i8 %conv105, ptr %arrayidx110, align 1, !tbaa !9
  %shr111 = lshr i32 %add81, 3
  %38 = trunc i32 %shr111 to i8
  %39 = and i8 %38, 1
  %conv114 = add nuw nsw i8 %39, 1
  %and116 = and i32 %shr102, 3
  %add117 = add nuw nsw i32 %and116, 3
  %idxprom118 = zext i32 %add117 to i64
  %arrayidx119 = getelementptr inbounds i8, ptr %call96, i64 %idxprom118
  store i8 %conv114, ptr %arrayidx119, align 1, !tbaa !9
  %40 = load ptr, ptr %data.i373, align 8, !tbaa !84
  %arrayidx.i420 = getelementptr inbounds i32, ptr %40, i64 %indvars.iv
  %41 = load i32, ptr %arrayidx.i420, align 4, !tbaa !25
  %add124 = add i32 %41, %shr111
  %42 = load i32, ptr %t, align 8, !tbaa !95
  %sub127 = add nsw i32 %42, -1
  %and128 = and i32 %sub127, %add124
  %43 = load ptr, ptr %data.i376, align 8, !tbaa !97
  %idxprom.i422 = sext i32 %and128 to i64
  %arrayidx.i423 = getelementptr inbounds %"class.ContextMap::E", ptr %43, i64 %idxprom.i422
  %shr132 = lshr i32 %41, 16
  %conv133 = trunc i32 %shr132 to i16
  %call134 = tail call noundef ptr @_ZN10ContextMap1E3getEt(ptr noundef nonnull align 2 dereferenceable(64) %arrayidx.i423, i16 noundef zeroext %conv133)
  %shr135 = lshr i32 %conv80, 2
  %and136 = and i32 %shr135, 1
  %add137 = add nuw nsw i32 %and136, 1
  %conv138 = trunc i32 %add137 to i8
  store i8 %conv138, ptr %call134, align 1, !tbaa !9
  %shr140 = lshr i32 %add81, 1
  %44 = trunc i32 %shr140 to i8
  %45 = and i8 %44, 1
  %conv143 = add nuw nsw i8 %45, 1
  %idxprom147 = zext i32 %add137 to i64
  %arrayidx148 = getelementptr inbounds i8, ptr %call134, i64 %idxprom147
  store i8 %conv143, ptr %arrayidx148, align 1, !tbaa !9
  %and149 = and i8 %31, 1
  %add150 = add nuw nsw i8 %and149, 1
  %and153 = and i32 %shr140, 3
  %add154 = add nuw nsw i32 %and153, 3
  %idxprom155 = zext i32 %add154 to i64
  %arrayidx156 = getelementptr inbounds i8, ptr %call134, i64 %idxprom155
  store i8 %add150, ptr %arrayidx156, align 1, !tbaa !9
  %46 = load ptr, ptr %data.i385, align 8, !tbaa !101
  %arrayidx.i429 = getelementptr inbounds ptr, ptr %46, i64 %indvars.iv
  %47 = load ptr, ptr %arrayidx.i429, align 8, !tbaa !5
  %arrayidx159 = getelementptr inbounds i8, ptr %47, i64 6
  store i8 0, ptr %arrayidx159, align 1, !tbaa !9
  br label %if.end160

if.end160:                                        ; preds = %if.then76, %sw.default
  %48 = load ptr, ptr %data.i355, align 8, !tbaa !101
  %arrayidx.i432 = getelementptr inbounds ptr, ptr %48, i64 %indvars.iv
  %49 = load ptr, ptr %arrayidx.i432, align 8, !tbaa !5
  %50 = load i8, ptr %49, align 1, !tbaa !9
  %cmp165 = icmp eq i8 %50, 0
  br i1 %cmp165, label %if.then166, label %if.else174

if.then166:                                       ; preds = %if.end160
  store i8 2, ptr %49, align 1, !tbaa !9
  %51 = load ptr, ptr %data.i355, align 8, !tbaa !101
  %arrayidx.i438 = getelementptr inbounds ptr, ptr %51, i64 %indvars.iv
  %52 = load ptr, ptr %arrayidx.i438, align 8, !tbaa !5
  %arrayidx173 = getelementptr inbounds i8, ptr %52, i64 1
  store i8 %conv184, ptr %arrayidx173, align 1, !tbaa !9
  br label %if.end214

if.else174:                                       ; preds = %if.end160
  %arrayidx177 = getelementptr inbounds i8, ptr %49, i64 1
  %53 = load i8, ptr %arrayidx177, align 1, !tbaa !9
  %conv178 = zext i8 %53 to i32
  %cmp179.not = icmp eq i32 %conv178, %c1
  br i1 %cmp179.not, label %if.else188, label %if.then180

if.then180:                                       ; preds = %if.else174
  store i8 1, ptr %49, align 1, !tbaa !9
  %54 = load ptr, ptr %data.i355, align 8, !tbaa !101
  %arrayidx.i447 = getelementptr inbounds ptr, ptr %54, i64 %indvars.iv
  %55 = load ptr, ptr %arrayidx.i447, align 8, !tbaa !5
  %arrayidx187 = getelementptr inbounds i8, ptr %55, i64 1
  store i8 %conv184, ptr %arrayidx187, align 1, !tbaa !9
  br label %if.end214

if.else188:                                       ; preds = %if.else174
  %cmp193 = icmp ult i8 %50, -2
  br i1 %cmp193, label %if.then194, label %if.else201

if.then194:                                       ; preds = %if.else188
  %add199 = add nuw i8 %50, 2
  store i8 %add199, ptr %49, align 1, !tbaa !9
  br label %if.end214

if.else201:                                       ; preds = %if.else188
  %cmp206 = icmp eq i8 %50, -1
  br i1 %cmp206, label %if.then207, label %if.end214

if.then207:                                       ; preds = %if.else201
  store i8 -128, ptr %49, align 1, !tbaa !9
  br label %if.end214

if.end214:                                        ; preds = %if.then180, %if.else201, %if.then207, %if.then194, %if.then166
  %56 = load ptr, ptr %data.i385, align 8, !tbaa !101
  %arrayidx.i462 = getelementptr inbounds ptr, ptr %56, i64 %indvars.iv
  %57 = load ptr, ptr %arrayidx.i462, align 8, !tbaa !5
  %add.ptr217 = getelementptr inbounds i8, ptr %57, i64 3
  br label %if.end220

if.end220:                                        ; preds = %land.lhs.true16, %sw.bb, %sw.bb28, %sw.bb37, %if.end214
  %data.i.sink = phi ptr [ %data.i, %sw.bb ], [ %data.i, %sw.bb28 ], [ %data.i385, %sw.bb37 ], [ %data.i355, %if.end214 ], [ %data.i, %land.lhs.true16 ]
  %add.ptr25.sink = phi ptr [ %add.ptr25, %sw.bb ], [ %add.ptr34, %sw.bb28 ], [ %call48, %sw.bb37 ], [ %add.ptr217, %if.end214 ], [ null, %land.lhs.true16 ]
  %58 = load ptr, ptr %data.i.sink, align 8, !tbaa !101
  %arrayidx.i366 = getelementptr inbounds ptr, ptr %58, i64 %indvars.iv
  store ptr %add.ptr25.sink, ptr %arrayidx.i366, align 8, !tbaa !5
  %59 = load ptr, ptr %data.i355, align 8, !tbaa !101
  %arrayidx.i468 = getelementptr inbounds ptr, ptr %59, i64 %indvars.iv
  %60 = load ptr, ptr %arrayidx.i468, align 8, !tbaa !5
  %arrayidx223 = getelementptr inbounds i8, ptr %60, i64 1
  %61 = load i8, ptr %arrayidx223, align 1, !tbaa !9
  %conv224 = zext i8 %61 to i32
  %add225 = or i32 %conv224, 256
  %shr227 = lshr i32 %add225, %sub226
  %cmp228 = icmp eq i32 %shr227, %cc
  br i1 %cmp228, label %if.then229, label %if.end251

if.then229:                                       ; preds = %if.end220
  %62 = load i8, ptr %60, align 1, !tbaa !9
  %shr239 = lshr i32 %conv224, %sub238
  %and240 = shl nuw nsw i32 %shr239, 1
  %mul = and i32 %and240, 2
  %sub241 = add nuw nsw i32 %mul, 65535
  %63 = zext i8 %62 to i64
  %conv244 = add nuw nsw i64 %63, 1
  %64 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %arrayidx.i.i476 = getelementptr inbounds i8, ptr %64, i64 %conv244
  %65 = load i8, ptr %arrayidx.i.i476, align 1, !tbaa !9
  %conv2.i = zext i8 %65 to i32
  %66 = and i8 %62, 1
  %67 = xor i8 %66, 3
  %add247 = zext i8 %67 to i32
  %shl248 = shl nuw nsw i32 %conv2.i, %add247
  %mul249 = mul nuw nsw i32 %shl248, %sub241
  %conv.i = trunc i32 %mul249 to i16
  br label %if.end251

if.end251:                                        ; preds = %if.end220, %if.then229
  %.sink = phi i16 [ %conv.i, %if.then229 ], [ 0, %if.end220 ]
  %68 = load i32, ptr %nx.i480, align 8, !tbaa !64
  %inc.i481 = add nsw i32 %68, 1
  store i32 %inc.i481, ptr %nx.i480, align 8, !tbaa !64
  %69 = load ptr, ptr %data.i.i482, align 8, !tbaa !59
  %idxprom.i.i483 = sext i32 %68 to i64
  %arrayidx.i.i484 = getelementptr inbounds i16, ptr %69, i64 %idxprom.i.i483
  store i16 %.sink, ptr %arrayidx.i.i484, align 2, !tbaa !31
  %70 = load ptr, ptr %data.i, align 8, !tbaa !101
  %arrayidx.i487 = getelementptr inbounds ptr, ptr %70, i64 %indvars.iv
  %71 = load ptr, ptr %arrayidx.i487, align 8, !tbaa !5
  %tobool254.not = icmp eq ptr %71, null
  br i1 %tobool254.not, label %if.else263, label %if.then255

if.then255:                                       ; preds = %if.end251
  %72 = load i8, ptr %71, align 1, !tbaa !9
  %conv258 = zext i8 %72 to i32
  %73 = load ptr, ptr %sm, align 8, !tbaa !103
  %cxt.i.i.i = getelementptr inbounds %class.StateMap, ptr %73, i64 %indvars.iv, i32 1
  %74 = load i32, ptr %cxt.i.i.i, align 4, !tbaa !82
  %data.i.i.i.i = getelementptr inbounds %class.StateMap, ptr %73, i64 %indvars.iv, i32 2, i32 3
  %75 = load ptr, ptr %data.i.i.i.i, align 8, !tbaa !84
  %idxprom.i.i.i.i = sext i32 %74 to i64
  %arrayidx.i.i.i.i = getelementptr inbounds i32, ptr %75, i64 %idxprom.i.i.i.i
  %76 = load i32, ptr %arrayidx.i.i.i.i, align 4, !tbaa !25
  %and.i.i.i = and i32 %76, 1023
  %cmp.i.i.not.i = icmp eq i32 %and.i.i.i, 1023
  %inc.i.i.i = add i32 %76, 1
  %or.i.i.i = or i32 %76, 1023
  %p0.0.i.i.i = select i1 %cmp.i.i.not.i, i32 %or.i.i.i, i32 %inc.i.i.i
  %shr.i.i.i = lshr i32 %76, 10
  %77 = load i32, ptr @y, align 4, !tbaa !25
  %shl.i.i.i = shl i32 %77, 22
  %sub.i.i.i = sub nsw i32 %shl.i.i.i, %shr.i.i.i
  %shr3.i.i.i = ashr i32 %sub.i.i.i, 3
  %idxprom.i.i.i = zext i32 %and.i.i.i to i64
  %arrayidx4.i.i.i = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %idxprom.i.i.i
  %78 = load i32, ptr %arrayidx4.i.i.i, align 4, !tbaa !25
  %mul.i.i.i = mul nsw i32 %shr3.i.i.i, %78
  %and5.i.i.i = and i32 %mul.i.i.i, -1024
  %add.i.i.i = add i32 %and5.i.i.i, %p0.0.i.i.i
  store i32 %add.i.i.i, ptr %arrayidx.i.i.i.i, align 4, !tbaa !25
  store i32 %conv258, ptr %cxt.i.i.i, align 4, !tbaa !82
  %idxprom.i2.i.i = zext i8 %72 to i64
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %75, i64 %idxprom.i2.i.i
  %79 = load i32, ptr %arrayidx.i.i.i, align 4, !tbaa !25
  %shr.i.i = lshr i32 %79, 20
  %arrayidx1.i = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom.i2.i.i, i64 2
  %80 = load i8, ptr %arrayidx1.i, align 2, !tbaa !9
  %tobool.not.i = icmp eq i8 %80, 0
  %conv.neg.i = sext i1 %tobool.not.i to i32
  %arrayidx4.i = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom.i2.i.i, i64 3
  %81 = load i8, ptr %arrayidx4.i, align 1, !tbaa !9
  %tobool5.not.i = icmp eq i8 %81, 0
  %conv7.neg.i = sext i1 %tobool5.not.i to i32
  %82 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %idxprom.i.i39.i = zext i32 %shr.i.i to i64
  %arrayidx.i.i40.i = getelementptr inbounds i16, ptr %82, i64 %idxprom.i.i39.i
  %83 = load i16, ptr %arrayidx.i.i40.i, align 2, !tbaa !31
  %84 = ashr i16 %83, 2
  %85 = load i32, ptr %nx.i480, align 8, !tbaa !64
  %inc.i.i = add nsw i32 %85, 1
  %idxprom.i.i42.i = sext i32 %85 to i64
  %arrayidx.i.i43.i = getelementptr inbounds i16, ptr %69, i64 %idxprom.i.i42.i
  store i16 %84, ptr %arrayidx.i.i43.i, align 2, !tbaa !31
  %shr10.i = lshr i32 %79, 24
  %sub11.i = xor i32 %shr10.i, 255
  %sub12.i = sub nsw i32 %shr10.i, %sub11.i
  %conv.i44.i = trunc i32 %sub12.i to i16
  %inc.i46.i = add nsw i32 %85, 2
  %idxprom.i.i48.i = sext i32 %inc.i.i to i64
  %arrayidx.i.i49.i = getelementptr inbounds i16, ptr %69, i64 %idxprom.i.i48.i
  store i16 %conv.i44.i, ptr %arrayidx.i.i49.i, align 2, !tbaa !31
  %sub13.i = sub nsw i32 %conv7.neg.i, %conv.neg.i
  %86 = trunc i32 %sub13.i to i16
  %conv.i50.i = mul nsw i16 %84, %86
  %inc.i52.i = add nsw i32 %85, 3
  %idxprom.i.i54.i = sext i32 %inc.i46.i to i64
  %arrayidx.i.i55.i = getelementptr inbounds i16, ptr %69, i64 %idxprom.i.i54.i
  store i16 %conv.i50.i, ptr %arrayidx.i.i55.i, align 2, !tbaa !31
  %and.i491 = and i32 %shr10.i, %conv.neg.i
  %and14.i = and i32 %sub11.i, %conv7.neg.i
  %sub15.i = sub nsw i32 %and.i491, %and14.i
  %conv.i56.i = trunc i32 %sub15.i to i16
  %inc.i58.i = add nsw i32 %85, 4
  %idxprom.i.i60.i = sext i32 %inc.i52.i to i64
  %arrayidx.i.i61.i = getelementptr inbounds i16, ptr %69, i64 %idxprom.i.i60.i
  store i16 %conv.i56.i, ptr %arrayidx.i.i61.i, align 2, !tbaa !31
  %and16.i = and i32 %shr10.i, %conv7.neg.i
  %and17.i = and i32 %sub11.i, %conv.neg.i
  %sub18.i = sub nsw i32 %and16.i, %and17.i
  %conv.i62.i = trunc i32 %sub18.i to i16
  %inc.i64.i = add nsw i32 %85, 5
  store i32 %inc.i64.i, ptr %nx.i480, align 8, !tbaa !64
  %idxprom.i.i66.i = sext i32 %inc.i58.i to i64
  %arrayidx.i.i67.i = getelementptr inbounds i16, ptr %69, i64 %idxprom.i.i66.i
  store i16 %conv.i62.i, ptr %arrayidx.i.i67.i, align 2, !tbaa !31
  %cmp.i = icmp ne i8 %72, 0
  %conv19.i = zext i1 %cmp.i to i32
  %add262 = add nsw i32 %result.0540, %conv19.i
  br label %for.inc

if.else263:                                       ; preds = %if.end251
  %87 = load ptr, ptr %sm, align 8, !tbaa !103
  %cxt.i.i.i492 = getelementptr inbounds %class.StateMap, ptr %87, i64 %indvars.iv, i32 1
  %88 = load i32, ptr %cxt.i.i.i492, align 4, !tbaa !82
  %data.i.i.i.i493 = getelementptr inbounds %class.StateMap, ptr %87, i64 %indvars.iv, i32 2, i32 3
  %89 = load ptr, ptr %data.i.i.i.i493, align 8, !tbaa !84
  %idxprom.i.i.i.i494 = sext i32 %88 to i64
  %arrayidx.i.i.i.i495 = getelementptr inbounds i32, ptr %89, i64 %idxprom.i.i.i.i494
  %90 = load i32, ptr %arrayidx.i.i.i.i495, align 4, !tbaa !25
  %and.i.i.i496 = and i32 %90, 1023
  %cmp.i.i.not.i497 = icmp eq i32 %and.i.i.i496, 1023
  %inc.i.i.i498 = add i32 %90, 1
  %or.i.i.i499 = or i32 %90, 1023
  %p0.0.i.i.i500 = select i1 %cmp.i.i.not.i497, i32 %or.i.i.i499, i32 %inc.i.i.i498
  %shr.i.i.i501 = lshr i32 %90, 10
  %91 = load i32, ptr @y, align 4, !tbaa !25
  %shl.i.i.i502 = shl i32 %91, 22
  %sub.i.i.i503 = sub nsw i32 %shl.i.i.i502, %shr.i.i.i501
  %shr3.i.i.i504 = ashr i32 %sub.i.i.i503, 3
  %idxprom.i.i.i505 = zext i32 %and.i.i.i496 to i64
  %arrayidx4.i.i.i506 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %idxprom.i.i.i505
  %92 = load i32, ptr %arrayidx4.i.i.i506, align 4, !tbaa !25
  %mul.i.i.i507 = mul nsw i32 %shr3.i.i.i504, %92
  %and5.i.i.i508 = and i32 %mul.i.i.i507, -1024
  %add.i.i.i509 = add i32 %and5.i.i.i508, %p0.0.i.i.i500
  store i32 %add.i.i.i509, ptr %arrayidx.i.i.i.i495, align 4, !tbaa !25
  store i32 0, ptr %cxt.i.i.i492, align 4, !tbaa !82
  %93 = load i32, ptr %89, align 4, !tbaa !25
  %shr.i.i510 = lshr i32 %93, 20
  %94 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %idxprom.i.i39.i511 = zext i32 %shr.i.i510 to i64
  %arrayidx.i.i40.i512 = getelementptr inbounds i16, ptr %94, i64 %idxprom.i.i39.i511
  %95 = load i16, ptr %arrayidx.i.i40.i512, align 2, !tbaa !31
  %96 = ashr i16 %95, 2
  %97 = load i32, ptr %nx.i480, align 8, !tbaa !64
  %inc.i.i514 = add nsw i32 %97, 1
  %idxprom.i.i42.i516 = sext i32 %97 to i64
  %arrayidx.i.i43.i517 = getelementptr inbounds i16, ptr %69, i64 %idxprom.i.i42.i516
  store i16 %96, ptr %arrayidx.i.i43.i517, align 2, !tbaa !31
  %98 = lshr i32 %93, 23
  %99 = trunc i32 %98 to i16
  %100 = and i16 %99, 510
  %conv.i44.i521 = add nsw i16 %100, -255
  %idxprom.i.i48.i523 = sext i32 %inc.i.i514 to i64
  %arrayidx.i.i49.i524 = getelementptr inbounds i16, ptr %69, i64 %idxprom.i.i48.i523
  %inc.i64.i535 = add nsw i32 %97, 5
  store i32 %inc.i64.i535, ptr %nx.i480, align 8, !tbaa !64
  %101 = insertelement <4 x i16> <i16 poison, i16 0, i16 poison, i16 poison>, i16 %conv.i44.i521, i64 0
  %102 = shufflevector <4 x i16> %101, <4 x i16> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  store <4 x i16> %102, ptr %arrayidx.i.i49.i524, align 2, !tbaa !31
  br label %for.inc

for.inc:                                          ; preds = %if.then255, %if.else263
  %result.1 = phi i32 [ %add262, %if.then255 ], [ %result.0540, %if.else263 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %103 = load i32, ptr %cn, align 8, !tbaa !102
  %104 = sext i32 %103 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %104
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !107

if.then270:                                       ; preds = %for.cond.cleanup
  store i32 0, ptr %cn, align 8, !tbaa !102
  br label %if.end272

if.end272:                                        ; preds = %if.then270, %for.cond.cleanup
  ret i32 %result.0.lcssa
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr dso_local noundef ptr @_ZN10ContextMap1E3getEt(ptr noundef nonnull align 2 dereferenceable(64) %this, i16 noundef zeroext %ch) local_unnamed_addr #13 comdat align 2 {
entry:
  %last = getelementptr inbounds %"class.ContextMap::E", ptr %this, i64 0, i32 1
  %0 = load i8, ptr %last, align 2, !tbaa !108
  %conv = zext i8 %0 to i32
  %and = and i32 %conv, 15
  %idxprom = zext i32 %and to i64
  %arrayidx = getelementptr inbounds [7 x i16], ptr %this, i64 0, i64 %idxprom
  %1 = load i16, ptr %arrayidx, align 2, !tbaa !31
  %cmp = icmp eq i16 %1, %ch
  br i1 %cmp, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %shr = lshr i32 %conv, 4
  %2 = load i16, ptr %this, align 2, !tbaa !31
  %cmp16 = icmp eq i16 %2, %ch
  br i1 %cmp16, label %cleanup, label %if.end26

if.then:                                          ; preds = %entry
  %arrayidx8 = getelementptr inbounds %"class.ContextMap::E", ptr %this, i64 0, i32 2, i64 %idxprom
  br label %return

if.end26:                                         ; preds = %for.cond.preheader
  %arrayidx13.1 = getelementptr inbounds [7 x i16], ptr %this, i64 0, i64 1
  %3 = load i16, ptr %arrayidx13.1, align 2, !tbaa !31
  %cmp16.1 = icmp eq i16 %3, %ch
  br i1 %cmp16.1, label %cleanup, label %if.end26.1

if.end26.1:                                       ; preds = %if.end26
  %arrayidx13.2 = getelementptr inbounds [7 x i16], ptr %this, i64 0, i64 2
  %4 = load i16, ptr %arrayidx13.2, align 2, !tbaa !31
  %cmp16.2 = icmp eq i16 %4, %ch
  br i1 %cmp16.2, label %cleanup, label %if.end26.2

if.end26.2:                                       ; preds = %if.end26.1
  %arrayidx13.3 = getelementptr inbounds [7 x i16], ptr %this, i64 0, i64 3
  %5 = load i16, ptr %arrayidx13.3, align 2, !tbaa !31
  %cmp16.3 = icmp eq i16 %5, %ch
  br i1 %cmp16.3, label %cleanup, label %if.end26.3

if.end26.3:                                       ; preds = %if.end26.2
  %arrayidx13.4 = getelementptr inbounds [7 x i16], ptr %this, i64 0, i64 4
  %6 = load i16, ptr %arrayidx13.4, align 2, !tbaa !31
  %cmp16.4 = icmp eq i16 %6, %ch
  br i1 %cmp16.4, label %cleanup, label %if.end26.4

if.end26.4:                                       ; preds = %if.end26.3
  %arrayidx13.5 = getelementptr inbounds [7 x i16], ptr %this, i64 0, i64 5
  %7 = load i16, ptr %arrayidx13.5, align 2, !tbaa !31
  %cmp16.5 = icmp eq i16 %7, %ch
  br i1 %cmp16.5, label %cleanup, label %if.end26.5

if.end26.5:                                       ; preds = %if.end26.4
  %arrayidx13.6 = getelementptr inbounds [7 x i16], ptr %this, i64 0, i64 6
  %8 = load i16, ptr %arrayidx13.6, align 2, !tbaa !31
  %cmp16.6 = icmp eq i16 %8, %ch
  br i1 %cmp16.6, label %cleanup, label %if.end26.6

if.end26.6:                                       ; preds = %if.end26.5
  %cmp40.not.5 = icmp eq i32 %shr, 5
  %cmp36.not.5 = icmp eq i32 %and, 5
  %cmp40.not.4 = icmp eq i32 %shr, 4
  %cmp36.not.4 = icmp eq i32 %and, 4
  %cmp40.not.3 = icmp eq i32 %shr, 3
  %cmp36.not.3 = icmp eq i32 %and, 3
  %cmp40.not.2 = icmp eq i32 %shr, 2
  %cmp36.not.2 = icmp eq i32 %and, 2
  %cmp40.not.1 = icmp eq i32 %shr, 1
  %cmp36.not.1 = icmp eq i32 %and, 1
  %cmp40.not = icmp ult i8 %0, 16
  %cmp36.not = icmp eq i32 %and, 0
  %or.cond68 = or i1 %cmp40.not, %cmp36.not
  %arrayidx29 = getelementptr inbounds %"class.ContextMap::E", ptr %this, i64 0, i32 2, i64 0
  %9 = load i8, ptr %arrayidx29, align 1, !tbaa !9
  %conv31 = zext i8 %9 to i32
  %b.1 = select i1 %or.cond68, i32 65535, i32 %conv31
  %arrayidx29.1 = getelementptr inbounds %"class.ContextMap::E", ptr %this, i64 0, i32 2, i64 1
  %10 = load i8, ptr %arrayidx29.1, align 2, !tbaa !9
  %conv31.1 = zext i8 %10 to i32
  %cmp32.1 = icmp ule i32 %b.1, %conv31.1
  %or.cond.1 = or i1 %cmp36.not.1, %cmp32.1
  %or.cond68.1 = or i1 %cmp40.not.1, %or.cond.1
  %b.1.1 = select i1 %or.cond68.1, i32 %b.1, i32 %conv31.1
  %arrayidx29.2 = getelementptr inbounds %"class.ContextMap::E", ptr %this, i64 0, i32 2, i64 2
  %11 = load i8, ptr %arrayidx29.2, align 1, !tbaa !9
  %conv31.2 = zext i8 %11 to i32
  %cmp32.2 = icmp ule i32 %b.1.1, %conv31.2
  %or.cond.2 = or i1 %cmp36.not.2, %cmp32.2
  %or.cond68.2 = or i1 %cmp40.not.2, %or.cond.2
  %b.1.2 = select i1 %or.cond68.2, i32 %b.1.1, i32 %conv31.2
  %arrayidx29.3 = getelementptr inbounds %"class.ContextMap::E", ptr %this, i64 0, i32 2, i64 3
  %12 = load i8, ptr %arrayidx29.3, align 2, !tbaa !9
  %conv31.3 = zext i8 %12 to i32
  %cmp32.3 = icmp ule i32 %b.1.2, %conv31.3
  %or.cond.3 = or i1 %cmp36.not.3, %cmp32.3
  %or.cond68.3 = or i1 %cmp40.not.3, %or.cond.3
  %b.1.3 = select i1 %or.cond68.3, i32 %b.1.2, i32 %conv31.3
  %arrayidx29.4 = getelementptr inbounds %"class.ContextMap::E", ptr %this, i64 0, i32 2, i64 4
  %13 = load i8, ptr %arrayidx29.4, align 1, !tbaa !9
  %conv31.4 = zext i8 %13 to i32
  %cmp32.4 = icmp ule i32 %b.1.3, %conv31.4
  %or.cond.4 = or i1 %cmp36.not.4, %cmp32.4
  %or.cond68.4 = or i1 %cmp40.not.4, %or.cond.4
  %b.1.4 = select i1 %or.cond68.4, i32 %b.1.3, i32 %conv31.4
  %arrayidx29.5 = getelementptr inbounds %"class.ContextMap::E", ptr %this, i64 0, i32 2, i64 5
  %14 = load i8, ptr %arrayidx29.5, align 2, !tbaa !9
  %conv31.5 = zext i8 %14 to i32
  %cmp32.5 = icmp ule i32 %b.1.4, %conv31.5
  %or.cond.5 = or i1 %cmp36.not.5, %cmp32.5
  %or.cond68.5 = or i1 %cmp40.not.5, %or.cond.5
  %not.or.cond68.1 = xor i1 %or.cond68.1, true
  %bi.1.1 = zext i1 %not.or.cond68.1 to i32
  %bi.1.2 = select i1 %or.cond68.2, i32 %bi.1.1, i32 2
  %bi.1.3 = select i1 %or.cond68.3, i32 %bi.1.2, i32 3
  %bi.1.4 = select i1 %or.cond68.4, i32 %bi.1.3, i32 4
  %bi.1.5 = select i1 %or.cond68.5, i32 %bi.1.4, i32 5
  %b.1.5 = select i1 %or.cond68.5, i32 %b.1.4, i32 %conv31.5
  %arrayidx29.6 = getelementptr inbounds %"class.ContextMap::E", ptr %this, i64 0, i32 2, i64 6
  %15 = load i8, ptr %arrayidx29.6, align 1, !tbaa !9
  %conv31.6 = zext i8 %15 to i32
  %cmp32.6 = icmp ule i32 %b.1.5, %conv31.6
  %cmp36.not.6 = icmp eq i32 %and, 6
  %or.cond.6 = or i1 %cmp36.not.6, %cmp32.6
  %cmp40.not.6 = icmp eq i32 %shr, 6
  %or.cond68.6 = or i1 %cmp40.not.6, %or.cond.6
  %bi.1.6 = select i1 %or.cond68.6, i32 %bi.1.5, i32 6
  %16 = trunc i32 %bi.1.6 to i8
  %conv44 = or i8 %16, -16
  store i8 %conv44, ptr %last, align 2, !tbaa !108
  %idxprom47 = zext i32 %bi.1.6 to i64
  %arrayidx48 = getelementptr inbounds [7 x i16], ptr %this, i64 0, i64 %idxprom47
  store i16 %ch, ptr %arrayidx48, align 2, !tbaa !31
  %arrayidx51 = getelementptr inbounds %"class.ContextMap::E", ptr %this, i64 0, i32 2, i64 %idxprom47
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(7) %arrayidx51, i8 0, i64 7, i1 false)
  br label %return

cleanup:                                          ; preds = %if.end26.5, %if.end26.4, %if.end26.3, %if.end26.2, %if.end26.1, %if.end26, %for.cond.preheader
  %i.074.lcssa.wide = phi i64 [ 0, %for.cond.preheader ], [ 1, %if.end26 ], [ 2, %if.end26.1 ], [ 3, %if.end26.2 ], [ 4, %if.end26.3 ], [ 5, %if.end26.4 ], [ 6, %if.end26.5 ]
  %17 = trunc i64 %i.074.lcssa.wide to i8
  %shl = shl i8 %0, 4
  %or = or i8 %shl, %17
  store i8 %or, ptr %last, align 2, !tbaa !108
  %arrayidx24 = getelementptr inbounds %"class.ContextMap::E", ptr %this, i64 0, i32 2, i64 %i.074.lcssa.wide
  br label %return

return:                                           ; preds = %cleanup, %if.end26.6, %if.then
  %retval.2 = phi ptr [ %arrayidx8, %if.then ], [ %arrayidx51, %if.end26.6 ], [ %arrayidx24, %cleanup ]
  ret ptr %retval.2
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z10matchModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %m) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZ10matchModelR5MixerE1t acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !110

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ10matchModelR5MixerE1t) #39
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  %2 = load i32, ptr @level, align 4, !tbaa !25
  %shl = shl i32 65536, %2
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ10matchModelR5MixerE1t, i32 noundef %shl)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init
  %3 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ10matchModelR5MixerE1t, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ10matchModelR5MixerE1t) #39
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %entry
  %4 = load atomic i8, ptr @_ZGVZ10matchModelR5MixerE4scm1 acquire, align 8
  %guard.uninitialized1 = icmp eq i8 %4, 0
  br i1 %guard.uninitialized1, label %init.check2, label %init.end7, !prof !110

init.check2:                                      ; preds = %init.end
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ10matchModelR5MixerE4scm1) #39
  %tobool3.not = icmp eq i32 %5, 0
  br i1 %tobool3.not, label %init.end7, label %init4

init4:                                            ; preds = %init.check2
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ10matchModelR5MixerE4scm1, i32 noundef 131072)
          to label %invoke.cont6 unwind label %lpad5

invoke.cont6:                                     ; preds = %init4
  %6 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ10matchModelR5MixerE4scm1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ10matchModelR5MixerE4scm1) #39
  br label %init.end7

init.end7:                                        ; preds = %invoke.cont6, %init.check2, %init.end
  %7 = load i32, ptr @bpos, align 4, !tbaa !25
  %tobool8.not = icmp eq i32 %7, 0
  br i1 %tobool8.not, label %if.then, label %init.end7.if.end30_crit_edge

init.end7.if.end30_crit_edge:                     ; preds = %init.end7
  %.pre181 = load i32, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  br label %if.end30

if.then:                                          ; preds = %init.end7
  %8 = load i32, ptr @_ZZ10matchModelR5MixerE1h, align 4, !tbaa !25
  %mul9 = mul i32 %8, 7976
  %9 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i = add nsw i32 %9, -1
  %10 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i = add nsw i32 %10, -1
  %and.i = and i32 %sub3.i, %sub.i
  %11 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %11, i64 %idxprom.i.i
  %12 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %conv.i = zext i8 %12 to i32
  %add = or i32 %mul9, 1
  %add10 = add i32 %add, %conv.i
  %13 = load i32, ptr @_ZZ10matchModelR5MixerE1t, align 8, !tbaa !51
  %sub = add nsw i32 %13, -1
  %and = and i32 %add10, %sub
  store i32 %and, ptr @_ZZ10matchModelR5MixerE1h, align 4, !tbaa !25
  %14 = load i32, ptr @_ZZ10matchModelR5MixerE3len, align 4
  %tobool12.not = icmp eq i32 %14, 0
  br i1 %tobool12.not, label %if.else, label %if.then13

if.then13:                                        ; preds = %if.then
  %inc = add nsw i32 %14, 1
  store i32 %inc, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  %15 = load i32, ptr @_ZZ10matchModelR5MixerE3ptr, align 4, !tbaa !25
  %inc14 = add nsw i32 %15, 1
  store i32 %inc14, ptr @_ZZ10matchModelR5MixerE3ptr, align 4, !tbaa !25
  %.pre = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ10matchModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !61
  %.pre182 = sext i32 %and to i64
  br label %if.end28

lpad:                                             ; preds = %init
  %16 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad5:                                            ; preds = %init4
  %17 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

if.else:                                          ; preds = %if.then
  %18 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ10matchModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !61
  %idxprom.i = sext i32 %and to i64
  %arrayidx.i = getelementptr inbounds i32, ptr %18, i64 %idxprom.i
  %19 = load i32, ptr %arrayidx.i, align 4, !tbaa !25
  store i32 %19, ptr @_ZZ10matchModelR5MixerE3ptr, align 4, !tbaa !25
  %tobool16.not = icmp ne i32 %19, 0
  %sub17 = sub nsw i32 %9, %19
  %cmp = icmp slt i32 %sub17, %10
  %or.cond = select i1 %tobool16.not, i1 %cmp, i1 false
  br i1 %or.cond, label %while.cond.preheader, label %if.end28

while.cond.preheader:                             ; preds = %if.else
  %sub.i84170 = add nsw i32 %9, -1
  %and.i86171 = and i32 %sub.i84170, %sub3.i
  %idxprom.i.i87172 = sext i32 %and.i86171 to i64
  %arrayidx.i.i88173 = getelementptr inbounds i8, ptr %11, i64 %idxprom.i.i87172
  %20 = load i8, ptr %arrayidx.i.i88173, align 1, !tbaa !9
  %sub23174 = add i32 %19, -1
  %and.i91175 = and i32 %sub23174, %sub3.i
  %idxprom.i.i92176 = sext i32 %and.i91175 to i64
  %arrayidx.i.i93177 = getelementptr inbounds i8, ptr %11, i64 %idxprom.i.i92176
  %21 = load i8, ptr %arrayidx.i.i93177, align 1, !tbaa !9
  %cmp25178 = icmp eq i8 %20, %21
  br i1 %cmp25178, label %while.body, label %if.end28

while.body:                                       ; preds = %while.cond.preheader, %while.body
  %add20180 = phi i32 [ %add20, %while.body ], [ 1, %while.cond.preheader ]
  %add20 = add nuw nsw i32 %add20180, 1
  %sub.i84 = sub nsw i32 %9, %add20
  %and.i86 = and i32 %sub.i84, %sub3.i
  %idxprom.i.i87 = sext i32 %and.i86 to i64
  %arrayidx.i.i88 = getelementptr inbounds i8, ptr %11, i64 %idxprom.i.i87
  %22 = load i8, ptr %arrayidx.i.i88, align 1, !tbaa !9
  %23 = xor i32 %add20180, -1
  %sub23 = add i32 %19, %23
  %and.i91 = and i32 %sub23, %sub3.i
  %idxprom.i.i92 = sext i32 %and.i91 to i64
  %arrayidx.i.i93 = getelementptr inbounds i8, ptr %11, i64 %idxprom.i.i92
  %24 = load i8, ptr %arrayidx.i.i93, align 1, !tbaa !9
  %cmp25 = icmp eq i8 %22, %24
  %cmp26 = icmp ult i32 %add20180, 65534
  %25 = and i1 %cmp26, %cmp25
  br i1 %25, label %while.body, label %while.cond.if.end28.loopexit_crit_edge, !llvm.loop !111

while.cond.if.end28.loopexit_crit_edge:           ; preds = %while.body
  store i32 %add20180, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  br label %if.end28

if.end28:                                         ; preds = %while.cond.preheader, %while.cond.if.end28.loopexit_crit_edge, %if.else, %if.then13
  %idxprom.i94.pre-phi = phi i64 [ %idxprom.i, %while.cond.preheader ], [ %idxprom.i, %while.cond.if.end28.loopexit_crit_edge ], [ %idxprom.i, %if.else ], [ %.pre182, %if.then13 ]
  %26 = phi i32 [ 0, %while.cond.preheader ], [ %add20180, %while.cond.if.end28.loopexit_crit_edge ], [ 0, %if.else ], [ %inc, %if.then13 ]
  %27 = phi ptr [ %18, %while.cond.preheader ], [ %18, %while.cond.if.end28.loopexit_crit_edge ], [ %18, %if.else ], [ %.pre, %if.then13 ]
  %arrayidx.i95 = getelementptr inbounds i32, ptr %27, i64 %idxprom.i94.pre-phi
  store i32 %9, ptr %arrayidx.i95, align 4, !tbaa !25
  store i32 %26, ptr @_ZZ10matchModelR5MixerE6result, align 4, !tbaa !25
  %28 = load i32, ptr @pos, align 4, !tbaa !25
  %mul.i = shl i32 %28, 8
  %29 = load i32, ptr @_ZZ10matchModelR5MixerE4scm1, align 8, !tbaa !74
  %sub.i96 = add nsw i32 %29, -256
  %and.i97 = and i32 %sub.i96, %mul.i
  store i32 %and.i97, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ10matchModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  br label %if.end30

if.end30:                                         ; preds = %init.end7.if.end30_crit_edge, %if.end28
  %30 = phi i32 [ %.pre181, %init.end7.if.end30_crit_edge ], [ %26, %if.end28 ]
  %tobool31.not = icmp eq i32 %30, 0
  br i1 %tobool31.not, label %if.else71, label %if.then32

if.then32:                                        ; preds = %if.end30
  %31 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i98 = add nsw i32 %31, -1
  %32 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i99 = add nsw i32 %32, -1
  %and.i100 = and i32 %sub3.i99, %sub.i98
  %33 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i101 = sext i32 %and.i100 to i64
  %arrayidx.i.i102 = getelementptr inbounds i8, ptr %33, i64 %idxprom.i.i101
  %34 = load i8, ptr %arrayidx.i.i102, align 1, !tbaa !9
  %35 = load i32, ptr @_ZZ10matchModelR5MixerE3ptr, align 4, !tbaa !25
  %sub34 = add nsw i32 %35, -1
  %and.i105 = and i32 %sub34, %sub3.i99
  %idxprom.i.i106 = sext i32 %and.i105 to i64
  %arrayidx.i.i107 = getelementptr inbounds i8, ptr %33, i64 %idxprom.i.i106
  %36 = load i8, ptr %arrayidx.i.i107, align 1, !tbaa !9
  %cmp37 = icmp eq i8 %34, %36
  br i1 %cmp37, label %land.lhs.true38, label %if.else69

land.lhs.true38:                                  ; preds = %if.then32
  %37 = load i32, ptr @c0, align 4, !tbaa !25
  %and.i109 = and i32 %35, %sub3.i99
  %idxprom.i.i110 = sext i32 %and.i109 to i64
  %arrayidx.i.i111 = getelementptr inbounds i8, ptr %33, i64 %idxprom.i.i110
  %38 = load i8, ptr %arrayidx.i.i111, align 1, !tbaa !9
  %conv40 = zext i8 %38 to i32
  %add41 = or i32 %conv40, 256
  %39 = load i32, ptr @bpos, align 4, !tbaa !25
  %sub42 = sub nsw i32 8, %39
  %shr = lshr i32 %add41, %sub42
  %cmp43 = icmp eq i32 %37, %shr
  br i1 %cmp43, label %if.then44, label %if.else69

if.then44:                                        ; preds = %land.lhs.true38
  %cmp45 = icmp sgt i32 %30, 65534
  br i1 %cmp45, label %if.then46, label %if.end47

if.then46:                                        ; preds = %if.then44
  store i32 65534, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  br label %if.end47

if.end47:                                         ; preds = %if.then46, %if.then44
  %40 = phi i32 [ 65534, %if.then46 ], [ %30, %if.then44 ]
  %sub50 = sub nsw i32 7, %39
  %41 = shl nuw i32 1, %sub50
  %42 = and i32 %41, %conv40
  %tobool53.not = icmp eq i32 %42, 0
  %43 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %44 = and i32 %40, 65535
  %idxprom.i.i127 = zext i32 %44 to i64
  %arrayidx.i.i128 = getelementptr inbounds i8, ptr %43, i64 %idxprom.i.i127
  %45 = load i8, ptr %arrayidx.i.i128, align 1, !tbaa !9
  %conv2.i129 = zext i8 %45 to i16
  %nx.i131 = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 8
  %46 = load i32, ptr %nx.i131, align 8, !tbaa !64
  %inc.i132 = add nsw i32 %46, 1
  %data.i.i133 = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 3, i32 3
  %47 = load ptr, ptr %data.i.i133, align 8, !tbaa !59
  %idxprom.i.i134 = sext i32 %46 to i64
  %arrayidx.i.i135 = getelementptr inbounds i16, ptr %47, i64 %idxprom.i.i134
  %cond.i136 = tail call i32 @llvm.smin.i32(i32 %40, i32 32)
  %48 = trunc i32 %cond.i136 to i16
  %inc.i139 = add nsw i32 %46, 2
  %idxprom.i.i141 = sext i32 %inc.i132 to i64
  %arrayidx.i.i142 = getelementptr inbounds i16, ptr %47, i64 %idxprom.i.i141
  br i1 %tobool53.not, label %if.else60, label %if.then54

if.then54:                                        ; preds = %if.end47
  %shl57 = shl nuw nsw i16 %conv2.i129, 2
  store i16 %shl57, ptr %arrayidx.i.i135, align 2, !tbaa !31
  %conv.i121 = shl i16 %48, 6
  store i32 %inc.i139, ptr %nx.i131, align 8, !tbaa !64
  store i16 %conv.i121, ptr %arrayidx.i.i142, align 2, !tbaa !31
  br label %if.end72

if.else60:                                        ; preds = %if.end47
  %shl63.neg = mul nsw i16 %conv2.i129, -4
  store i16 %shl63.neg, ptr %arrayidx.i.i135, align 2, !tbaa !31
  %conv.i137 = mul i16 %48, -64
  store i32 %inc.i139, ptr %nx.i131, align 8, !tbaa !64
  store i16 %conv.i137, ptr %arrayidx.i.i142, align 2, !tbaa !31
  br label %if.end72

if.else69:                                        ; preds = %land.lhs.true38, %if.then32
  store i32 0, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  %nx.i143 = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 8
  %49 = load i32, ptr %nx.i143, align 8, !tbaa !64
  %inc.i144 = add nsw i32 %49, 1
  %data.i.i145 = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 3, i32 3
  %50 = load ptr, ptr %data.i.i145, align 8, !tbaa !59
  %idxprom.i.i146 = sext i32 %49 to i64
  %arrayidx.i.i147 = getelementptr inbounds i16, ptr %50, i64 %idxprom.i.i146
  store i16 0, ptr %arrayidx.i.i147, align 2, !tbaa !31
  %inc.i149 = add nsw i32 %49, 2
  store i32 %inc.i149, ptr %nx.i143, align 8, !tbaa !64
  %idxprom.i.i151 = sext i32 %inc.i144 to i64
  %arrayidx.i.i152 = getelementptr inbounds i16, ptr %50, i64 %idxprom.i.i151
  store i16 0, ptr %arrayidx.i.i152, align 2, !tbaa !31
  br label %if.end72

if.else71:                                        ; preds = %if.end30
  %nx.i153 = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 8
  %51 = load i32, ptr %nx.i153, align 8, !tbaa !64
  %inc.i154 = add nsw i32 %51, 1
  %data.i.i155 = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 3, i32 3
  %52 = load ptr, ptr %data.i.i155, align 8, !tbaa !59
  %idxprom.i.i156 = sext i32 %51 to i64
  %arrayidx.i.i157 = getelementptr inbounds i16, ptr %52, i64 %idxprom.i.i156
  store i16 0, ptr %arrayidx.i.i157, align 2, !tbaa !31
  %inc.i159 = add nsw i32 %51, 2
  store i32 %inc.i159, ptr %nx.i153, align 8, !tbaa !64
  %idxprom.i.i161 = sext i32 %inc.i154 to i64
  %arrayidx.i.i162 = getelementptr inbounds i16, ptr %52, i64 %idxprom.i.i161
  store i16 0, ptr %arrayidx.i.i162, align 2, !tbaa !31
  br label %if.end72

if.end72:                                         ; preds = %if.else69, %if.else60, %if.then54, %if.else71
  %53 = phi ptr [ %50, %if.else69 ], [ %47, %if.else60 ], [ %47, %if.then54 ], [ %52, %if.else71 ]
  %54 = phi i32 [ %inc.i149, %if.else69 ], [ %inc.i139, %if.else60 ], [ %inc.i139, %if.then54 ], [ %inc.i159, %if.else71 ]
  %55 = load i32, ptr @y, align 4, !tbaa !25
  %shl.i = shl i32 %55, 16
  %56 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ10matchModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %57 = load i16, ptr %56, align 2, !tbaa !31
  %conv.i163 = zext i16 %57 to i32
  %sub.i164 = or i32 %shl.i, 64
  %add.i = sub i32 %sub.i164, %conv.i163
  %58 = lshr i32 %add.i, 7
  %59 = trunc i32 %58 to i16
  %conv7.i = add i16 %57, %59
  store i16 %conv7.i, ptr %56, align 2, !tbaa !31
  %60 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ10matchModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %61 = load i32, ptr @c0, align 4, !tbaa !25
  %add8.i = add nsw i32 %61, %60
  %62 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ10matchModelR5MixerE4scm1, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i165 = sext i32 %add8.i to i64
  %arrayidx.i.i166 = getelementptr inbounds i16, ptr %62, i64 %idxprom.i.i165
  store ptr %arrayidx.i.i166, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ10matchModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %63 = load i16, ptr %arrayidx.i.i166, align 2, !tbaa !31
  %64 = lshr i16 %63, 4
  %65 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %idxprom.i.i.i = zext i16 %64 to i64
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %65, i64 %idxprom.i.i.i
  %66 = load i16, ptr %arrayidx.i.i.i, align 2, !tbaa !31
  %nx.i.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 8
  %inc.i.i = add nsw i32 %54, 1
  store i32 %inc.i.i, ptr %nx.i.i, align 8, !tbaa !64
  %idxprom.i.i15.i = sext i32 %54 to i64
  %arrayidx.i.i16.i = getelementptr inbounds i16, ptr %53, i64 %idxprom.i.i15.i
  store i16 %66, ptr %arrayidx.i.i16.i, align 2, !tbaa !31
  %67 = load i32, ptr @_ZZ10matchModelR5MixerE6result, align 4, !tbaa !25
  ret i32 %67

ehcleanup:                                        ; preds = %lpad5, %lpad
  %_ZGVZ10matchModelR5MixerE4scm1.sink = phi ptr [ @_ZGVZ10matchModelR5MixerE4scm1, %lpad5 ], [ @_ZGVZ10matchModelR5MixerE1t, %lpad ]
  %.pn = phi { ptr, i32 } [ %17, %lpad5 ], [ %16, %lpad ]
  tail call void @__cxa_guard_abort(ptr nonnull %_ZGVZ10matchModelR5MixerE4scm1.sink) #39
  resume { ptr, i32 } %.pn
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(ptr) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_abort(ptr) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(ptr) local_unnamed_addr #4

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef %m) unnamed_addr #5 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %div = sdiv i32 %m, 2
  %reserved.i.i = getelementptr inbounds %class.Array.4, ptr %this, i64 0, i32 1
  store i32 %div, ptr %reserved.i.i, align 4, !tbaa !73
  store i32 %div, ptr %this, align 8, !tbaa !74
  %cmp.i.i = icmp slt i32 %m, 2
  br i1 %cmp.i.i, label %_ZN5ArrayItLi0EEC2Ei.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %entry
  %mul.i.i = shl nuw nsw i32 %div, 1
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i = add nsw i32 %0, %mul.i.i
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %1
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i

_ZN14ProgramChecker5allocEi.exit.i.i:             ; preds = %if.then.i.i.i, %if.end.i.i
  %conv4.i.i = sext i32 %mul.i.i to i64
  %call.i.i = tail call noalias ptr @calloc(i64 noundef %conv4.i.i, i64 noundef 1) #41
  %ptr5.i.i = getelementptr inbounds %class.Array.4, ptr %this, i64 0, i32 2
  store ptr %call.i.i, ptr %ptr5.i.i, align 8, !tbaa !75
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.then7.i.i, label %for.body.lr.ph

if.then7.i.i:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %exception.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

_ZN5ArrayItLi0EEC2Ei.exit:                        ; preds = %entry
  %ptr.i.i = getelementptr inbounds %class.Array.4, ptr %this, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %ptr.i.i, i8 0, i64 20, i1 false)
  br label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %data10.i.i = getelementptr inbounds %class.Array.4, ptr %this, i64 0, i32 3
  store ptr %call.i.i, ptr %data10.i.i, align 8, !tbaa !76
  %cxt17 = getelementptr inbounds %class.SmallStationaryContextMap, ptr %this, i64 0, i32 1
  store i32 0, ptr %cxt17, align 8, !tbaa !112
  %wide.trip.count = zext i32 %div to i64
  %min.iters.check = icmp ult i32 %div, 16
  br i1 %min.iters.check, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph
  %n.vec = and i64 %wide.trip.count, 4294967280
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %2 = getelementptr inbounds i16, ptr %call.i.i, i64 %index
  store <8 x i16> <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, ptr %2, align 2, !tbaa !31
  %3 = getelementptr inbounds i16, ptr %2, i64 8
  store <8 x i16> <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, ptr %3, align 2, !tbaa !31
  %index.next = add nuw i64 %index, 16
  %4 = icmp eq i64 %index.next, %n.vec
  br i1 %4, label %middle.block, label %vector.body, !llvm.loop !115

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.body.preheader:                               ; preds = %for.body.lr.ph, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %_ZN5ArrayItLi0EEC2Ei.exit
  %5 = phi ptr [ null, %_ZN5ArrayItLi0EEC2Ei.exit ], [ %call.i.i, %middle.block ], [ %call.i.i, %for.body ]
  %cp = getelementptr inbounds %class.SmallStationaryContextMap, ptr %this, i64 0, i32 2
  store ptr %5, ptr %cp, align 8, !tbaa !114
  ret void

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %arrayidx.i = getelementptr inbounds i16, ptr %call.i.i, i64 %indvars.iv
  store i16 -32768, ptr %arrayidx.i, align 2, !tbaa !31
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !116
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN25SmallStationaryContextMapD2Ev(ptr noundef nonnull align 8 dereferenceable(40) %this) unnamed_addr #3 comdat align 2 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !74
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %2 = shl i32 %0, 1
  %add.i.i = sub i32 %1, %2
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %3 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %3
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN5ArrayItLi0EED2Ev.exit

if.then.i.i:                                      ; preds = %entry
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayItLi0EED2Ev.exit

_ZN5ArrayItLi0EED2Ev.exit:                        ; preds = %entry, %if.then.i.i
  %ptr.i = getelementptr inbounds %class.Array.4, ptr %this, i64 0, i32 2
  %4 = load ptr, ptr %ptr.i, align 8, !tbaa !75
  tail call void @free(ptr noundef %4) #39
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z8picModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %m) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZ8picModelR5MixerE1t acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !110

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8picModelR5MixerE1t) #39
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  invoke void @_ZN5ArrayIhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ8picModelR5MixerE1t, i32 noundef 66048)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init
  %2 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIhLi0EED2Ev, ptr nonnull @_ZZ8picModelR5MixerE1t, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8picModelR5MixerE1t) #39
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %entry
  %3 = load atomic i8, ptr @_ZGVZ8picModelR5MixerE2sm acquire, align 8
  %guard.uninitialized1 = icmp eq i8 %3, 0
  br i1 %guard.uninitialized1, label %init.check2, label %init.end8, !prof !110

init.check2:                                      ; preds = %init.end
  %4 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8picModelR5MixerE2sm) #39
  %tobool3.not = icmp eq i32 %4, 0
  br i1 %tobool3.not, label %init.end8, label %arrayctor.loop.preheader

arrayctor.loop.preheader:                         ; preds = %init.check2
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ8picModelR5MixerE2sm, i32 noundef 256)
          to label %invoke.cont6 unwind label %lpad5

invoke.cont6:                                     ; preds = %arrayctor.loop.preheader
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1), i32 noundef 256)
          to label %invoke.cont6.1 unwind label %arraydestroy.body.preheader

invoke.cont6.1:                                   ; preds = %invoke.cont6
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2), i32 noundef 256)
          to label %invoke.cont6.2 unwind label %arraydestroy.body.preheader

invoke.cont6.2:                                   ; preds = %invoke.cont6.1
  %5 = tail call i32 @__cxa_atexit(ptr nonnull @__cxx_global_array_dtor, ptr null, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8picModelR5MixerE2sm) #39
  br label %init.end8

init.end8:                                        ; preds = %invoke.cont6.2, %init.check2, %init.end
  %6 = load i32, ptr @_ZZ8picModelR5MixerE3cxt.0, align 4, !tbaa !25
  %7 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ8picModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !22
  %idxprom.i = sext i32 %6 to i64
  %arrayidx.i = getelementptr inbounds i8, ptr %7, i64 %idxprom.i
  %8 = load i8, ptr %arrayidx.i, align 1, !tbaa !9
  %idxprom9 = zext i8 %8 to i64
  %9 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom11 = sext i32 %9 to i64
  %arrayidx12 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom9, i64 %idxprom11
  %10 = load i8, ptr %arrayidx12, align 1, !tbaa !9
  store i8 %10, ptr %arrayidx.i, align 1, !tbaa !9
  %11 = load i32, ptr @_ZZ8picModelR5MixerE3cxt.1, align 4, !tbaa !25
  %12 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ8picModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !22
  %idxprom.i.1 = sext i32 %11 to i64
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %12, i64 %idxprom.i.1
  %13 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !9
  %idxprom9.1 = zext i8 %13 to i64
  %14 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom11.1 = sext i32 %14 to i64
  %arrayidx12.1 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom9.1, i64 %idxprom11.1
  %15 = load i8, ptr %arrayidx12.1, align 1, !tbaa !9
  store i8 %15, ptr %arrayidx.i.1, align 1, !tbaa !9
  %16 = load i32, ptr @_ZZ8picModelR5MixerE3cxt.2, align 4, !tbaa !25
  %17 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ8picModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !22
  %idxprom.i.2 = sext i32 %16 to i64
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %17, i64 %idxprom.i.2
  %18 = load i8, ptr %arrayidx.i.2, align 1, !tbaa !9
  %idxprom9.2 = zext i8 %18 to i64
  %19 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom11.2 = sext i32 %19 to i64
  %arrayidx12.2 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom9.2, i64 %idxprom11.2
  %20 = load i8, ptr %arrayidx12.2, align 1, !tbaa !9
  store i8 %20, ptr %arrayidx.i.2, align 1, !tbaa !9
  %21 = load i32, ptr @_ZZ8picModelR5MixerE2r0, align 4, !tbaa !25
  %22 = load i32, ptr @y, align 4, !tbaa !25
  %reass.add = shl i32 %21, 1
  %add16 = add i32 %22, %reass.add
  store i32 %add16, ptr @_ZZ8picModelR5MixerE2r0, align 4, !tbaa !25
  %23 = load i32, ptr @_ZZ8picModelR5MixerE2r1, align 4, !tbaa !25
  %24 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i = add nsw i32 %24, -215
  %25 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i = add nsw i32 %25, -1
  %and.i = and i32 %sub3.i, %sub.i
  %26 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %26, i64 %idxprom.i.i
  %27 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %conv.i = zext i8 %27 to i32
  %28 = load i32, ptr @bpos, align 4, !tbaa !25
  %sub = sub nsw i32 7, %28
  %shr = lshr i32 %conv.i, %sub
  %and = and i32 %shr, 1
  %reass.add101 = shl i32 %23, 1
  %add19 = or i32 %and, %reass.add101
  store i32 %add19, ptr @_ZZ8picModelR5MixerE2r1, align 4, !tbaa !25
  %29 = load i32, ptr @_ZZ8picModelR5MixerE2r2, align 4, !tbaa !25
  %sub.i80 = add nsw i32 %24, -431
  %and.i82 = and i32 %sub3.i, %sub.i80
  %idxprom.i.i83 = sext i32 %and.i82 to i64
  %arrayidx.i.i84 = getelementptr inbounds i8, ptr %26, i64 %idxprom.i.i83
  %30 = load i8, ptr %arrayidx.i.i84, align 1, !tbaa !9
  %conv.i85 = zext i8 %30 to i32
  %shr22 = lshr i32 %conv.i85, %sub
  %and23 = and i32 %shr22, 1
  %reass.add102 = shl i32 %29, 1
  %add25 = or i32 %and23, %reass.add102
  store i32 %add25, ptr @_ZZ8picModelR5MixerE2r2, align 4, !tbaa !25
  %31 = load i32, ptr @_ZZ8picModelR5MixerE2r3, align 4, !tbaa !25
  %sub.i86 = add nsw i32 %24, -647
  %and.i88 = and i32 %sub3.i, %sub.i86
  %idxprom.i.i89 = sext i32 %and.i88 to i64
  %arrayidx.i.i90 = getelementptr inbounds i8, ptr %26, i64 %idxprom.i.i89
  %32 = load i8, ptr %arrayidx.i.i90, align 1, !tbaa !9
  %conv.i91 = zext i8 %32 to i32
  %shr28 = lshr i32 %conv.i91, %sub
  %and29 = and i32 %shr28, 1
  %reass.add103 = shl i32 %31, 1
  %add31 = or i32 %and29, %reass.add103
  store i32 %add31, ptr @_ZZ8picModelR5MixerE2r3, align 4, !tbaa !25
  %and32 = and i32 %add16, 7
  %shr33 = lshr i32 %reass.add101, 4
  %and34 = and i32 %shr33, 56
  %or = or i32 %and34, %and32
  %shr35 = lshr i32 %reass.add102, 3
  %and36 = and i32 %shr35, 192
  %or37 = or i32 %or, %and36
  store i32 %or37, ptr @_ZZ8picModelR5MixerE3cxt.0, align 4, !tbaa !25
  %and38 = and i32 %22, 1
  %and40 = and i32 %shr33, 62
  %shr42 = lshr i32 %reass.add102, 2
  %and43 = and i32 %shr42, 64
  %and46 = and i32 %31, 128
  %or41 = or i32 %and38, %and40
  %or44 = or i32 %or41, %and43
  %or47 = or i32 %or44, %and46
  %add48 = or i32 %or47, 256
  store i32 %add48, ptr @_ZZ8picModelR5MixerE3cxt.1, align 4, !tbaa !25
  %and49 = and i32 %add16, 63
  %and50 = and i32 %reass.add101, 16382
  %xor = xor i32 %and50, %and49
  %shl = shl i32 %29, 3
  %and51 = and i32 %shl, 32512
  %xor52 = xor i32 %xor, %and51
  %shl53 = shl i32 %31, 6
  %and54 = and i32 %shl53, 63488
  %xor55 = xor i32 %xor52, %and54
  %add56 = add nuw nsw i32 %xor55, 512
  store i32 %add56, ptr @_ZZ8picModelR5MixerE3cxt.2, align 4, !tbaa !25
  %33 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ8picModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !22
  %34 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %nx.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 8
  %data.i.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 3, i32 3
  %35 = load ptr, ptr %data.i.i, align 8, !tbaa !59
  %idxprom.i92 = zext i32 %or37 to i64
  %arrayidx.i93 = getelementptr inbounds i8, ptr %33, i64 %idxprom.i92
  %36 = load i8, ptr %arrayidx.i93, align 1, !tbaa !9
  %conv = zext i8 %36 to i32
  %37 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 0, i32 1), align 4, !tbaa !82
  %38 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 0, i32 2, i32 3), align 8, !tbaa !84
  %idxprom.i.i.i = sext i32 %37 to i64
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %38, i64 %idxprom.i.i.i
  %39 = load i32, ptr %arrayidx.i.i.i, align 4, !tbaa !25
  %and.i.i = and i32 %39, 1023
  %cmp.i.i.not = icmp eq i32 %and.i.i, 1023
  %inc.i.i = add i32 %39, 1
  %or.i.i = or i32 %39, 1023
  %p0.0.i.i = select i1 %cmp.i.i.not, i32 %or.i.i, i32 %inc.i.i
  %shr.i.i = lshr i32 %39, 10
  %shl.i.i = shl i32 %22, 22
  %sub.i.i = sub nsw i32 %shl.i.i, %shr.i.i
  %shr3.i.i = ashr i32 %sub.i.i, 3
  %idxprom.i.i94 = zext i32 %and.i.i to i64
  %arrayidx4.i.i = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %idxprom.i.i94
  %40 = load i32, ptr %arrayidx4.i.i, align 4, !tbaa !25
  %mul.i.i = mul nsw i32 %shr3.i.i, %40
  %and5.i.i = and i32 %mul.i.i, -1024
  %add.i.i = add i32 %and5.i.i, %p0.0.i.i
  store i32 %add.i.i, ptr %arrayidx.i.i.i, align 4, !tbaa !25
  store i32 %conv, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 0, i32 1), align 4, !tbaa !82
  %idxprom.i2.i = zext i8 %36 to i64
  %arrayidx.i.i95 = getelementptr inbounds i32, ptr %38, i64 %idxprom.i2.i
  %41 = load i32, ptr %arrayidx.i.i95, align 4, !tbaa !25
  %shr.i = lshr i32 %41, 20
  %idxprom.i.i96 = zext i32 %shr.i to i64
  %arrayidx.i.i97 = getelementptr inbounds i16, ptr %34, i64 %idxprom.i.i96
  %42 = load i16, ptr %arrayidx.i.i97, align 2, !tbaa !31
  %43 = load i32, ptr %nx.i, align 8, !tbaa !64
  %inc.i = add nsw i32 %43, 1
  store i32 %inc.i, ptr %nx.i, align 8, !tbaa !64
  %idxprom.i.i99 = sext i32 %43 to i64
  %arrayidx.i.i100 = getelementptr inbounds i16, ptr %35, i64 %idxprom.i.i99
  store i16 %42, ptr %arrayidx.i.i100, align 2, !tbaa !31
  %idxprom.i92.1 = zext i32 %add48 to i64
  %arrayidx.i93.1 = getelementptr inbounds i8, ptr %33, i64 %idxprom.i92.1
  %44 = load i8, ptr %arrayidx.i93.1, align 1, !tbaa !9
  %conv.1 = zext i8 %44 to i32
  %45 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1, i32 1), align 4, !tbaa !82
  %46 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1, i32 2, i32 3), align 8, !tbaa !84
  %idxprom.i.i.i.1 = sext i32 %45 to i64
  %arrayidx.i.i.i.1 = getelementptr inbounds i32, ptr %46, i64 %idxprom.i.i.i.1
  %47 = load i32, ptr %arrayidx.i.i.i.1, align 4, !tbaa !25
  %and.i.i.1 = and i32 %47, 1023
  %cmp.i.i.not.1 = icmp eq i32 %and.i.i.1, 1023
  %inc.i.i.1 = add i32 %47, 1
  %or.i.i.1 = or i32 %47, 1023
  %p0.0.i.i.1 = select i1 %cmp.i.i.not.1, i32 %or.i.i.1, i32 %inc.i.i.1
  %shr.i.i.1 = lshr i32 %47, 10
  %48 = load i32, ptr @y, align 4, !tbaa !25
  %shl.i.i.1 = shl i32 %48, 22
  %sub.i.i.1 = sub nsw i32 %shl.i.i.1, %shr.i.i.1
  %shr3.i.i.1 = ashr i32 %sub.i.i.1, 3
  %idxprom.i.i94.1 = zext i32 %and.i.i.1 to i64
  %arrayidx4.i.i.1 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %idxprom.i.i94.1
  %49 = load i32, ptr %arrayidx4.i.i.1, align 4, !tbaa !25
  %mul.i.i.1 = mul nsw i32 %shr3.i.i.1, %49
  %and5.i.i.1 = and i32 %mul.i.i.1, -1024
  %add.i.i.1 = add i32 %and5.i.i.1, %p0.0.i.i.1
  store i32 %add.i.i.1, ptr %arrayidx.i.i.i.1, align 4, !tbaa !25
  store i32 %conv.1, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1, i32 1), align 4, !tbaa !82
  %idxprom.i2.i.1 = zext i8 %44 to i64
  %arrayidx.i.i95.1 = getelementptr inbounds i32, ptr %46, i64 %idxprom.i2.i.1
  %50 = load i32, ptr %arrayidx.i.i95.1, align 4, !tbaa !25
  %shr.i.1 = lshr i32 %50, 20
  %idxprom.i.i96.1 = zext i32 %shr.i.1 to i64
  %arrayidx.i.i97.1 = getelementptr inbounds i16, ptr %34, i64 %idxprom.i.i96.1
  %51 = load i16, ptr %arrayidx.i.i97.1, align 2, !tbaa !31
  %52 = load i32, ptr %nx.i, align 8, !tbaa !64
  %inc.i.1 = add nsw i32 %52, 1
  store i32 %inc.i.1, ptr %nx.i, align 8, !tbaa !64
  %idxprom.i.i99.1 = sext i32 %52 to i64
  %arrayidx.i.i100.1 = getelementptr inbounds i16, ptr %35, i64 %idxprom.i.i99.1
  store i16 %51, ptr %arrayidx.i.i100.1, align 2, !tbaa !31
  %idxprom.i92.2 = zext i32 %add56 to i64
  %arrayidx.i93.2 = getelementptr inbounds i8, ptr %33, i64 %idxprom.i92.2
  %53 = load i8, ptr %arrayidx.i93.2, align 1, !tbaa !9
  %conv.2 = zext i8 %53 to i32
  %54 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2, i32 1), align 4, !tbaa !82
  %55 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2, i32 2, i32 3), align 8, !tbaa !84
  %idxprom.i.i.i.2 = sext i32 %54 to i64
  %arrayidx.i.i.i.2 = getelementptr inbounds i32, ptr %55, i64 %idxprom.i.i.i.2
  %56 = load i32, ptr %arrayidx.i.i.i.2, align 4, !tbaa !25
  %and.i.i.2 = and i32 %56, 1023
  %cmp.i.i.not.2 = icmp eq i32 %and.i.i.2, 1023
  %inc.i.i.2 = add i32 %56, 1
  %or.i.i.2 = or i32 %56, 1023
  %p0.0.i.i.2 = select i1 %cmp.i.i.not.2, i32 %or.i.i.2, i32 %inc.i.i.2
  %shr.i.i.2 = lshr i32 %56, 10
  %57 = load i32, ptr @y, align 4, !tbaa !25
  %shl.i.i.2 = shl i32 %57, 22
  %sub.i.i.2 = sub nsw i32 %shl.i.i.2, %shr.i.i.2
  %shr3.i.i.2 = ashr i32 %sub.i.i.2, 3
  %idxprom.i.i94.2 = zext i32 %and.i.i.2 to i64
  %arrayidx4.i.i.2 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %idxprom.i.i94.2
  %58 = load i32, ptr %arrayidx4.i.i.2, align 4, !tbaa !25
  %mul.i.i.2 = mul nsw i32 %shr3.i.i.2, %58
  %and5.i.i.2 = and i32 %mul.i.i.2, -1024
  %add.i.i.2 = add i32 %and5.i.i.2, %p0.0.i.i.2
  store i32 %add.i.i.2, ptr %arrayidx.i.i.i.2, align 4, !tbaa !25
  store i32 %conv.2, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2, i32 1), align 4, !tbaa !82
  %idxprom.i2.i.2 = zext i8 %53 to i64
  %arrayidx.i.i95.2 = getelementptr inbounds i32, ptr %55, i64 %idxprom.i2.i.2
  %59 = load i32, ptr %arrayidx.i.i95.2, align 4, !tbaa !25
  %shr.i.2 = lshr i32 %59, 20
  %idxprom.i.i96.2 = zext i32 %shr.i.2 to i64
  %arrayidx.i.i97.2 = getelementptr inbounds i16, ptr %34, i64 %idxprom.i.i96.2
  %60 = load i16, ptr %arrayidx.i.i97.2, align 2, !tbaa !31
  %61 = load i32, ptr %nx.i, align 8, !tbaa !64
  %inc.i.2 = add nsw i32 %61, 1
  store i32 %inc.i.2, ptr %nx.i, align 8, !tbaa !64
  %idxprom.i.i99.2 = sext i32 %61 to i64
  %arrayidx.i.i100.2 = getelementptr inbounds i16, ptr %35, i64 %idxprom.i.i99.2
  store i16 %60, ptr %arrayidx.i.i100.2, align 2, !tbaa !31
  ret void

lpad:                                             ; preds = %init
  %62 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad5:                                            ; preds = %arrayctor.loop.preheader
  %lpad.thr_comm.split-lp = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

arraydestroy.body.preheader:                      ; preds = %invoke.cont6.1, %invoke.cont6
  %arrayctor.cur.lcssa.ph = phi ptr [ getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1), %invoke.cont6 ], [ getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2), %invoke.cont6.1 ]
  %lpad.thr_comm = landingpad { ptr, i32 }
          cleanup
  br label %arraydestroy.body

arraydestroy.body:                                ; preds = %arraydestroy.body.preheader, %arraydestroy.body
  %arraydestroy.elementPast = phi ptr [ %arraydestroy.element, %arraydestroy.body ], [ %arrayctor.cur.lcssa.ph, %arraydestroy.body.preheader ]
  %arraydestroy.element = getelementptr inbounds %class.StateMap, ptr %arraydestroy.elementPast, i64 -1
  tail call void @_ZN8StateMapD2Ev(ptr noundef nonnull align 8 dereferenceable(32) %arraydestroy.element) #39
  %arraydestroy.done = icmp eq ptr %arraydestroy.element, @_ZZ8picModelR5MixerE2sm
  br i1 %arraydestroy.done, label %eh.resume, label %arraydestroy.body

eh.resume:                                        ; preds = %arraydestroy.body, %lpad5, %lpad
  %_ZGVZ8picModelR5MixerE2sm.sink = phi ptr [ @_ZGVZ8picModelR5MixerE1t, %lpad ], [ @_ZGVZ8picModelR5MixerE2sm, %lpad5 ], [ @_ZGVZ8picModelR5MixerE2sm, %arraydestroy.body ]
  %.pn = phi { ptr, i32 } [ %62, %lpad ], [ %lpad.thr_comm.split-lp, %lpad5 ], [ %lpad.thr_comm, %arraydestroy.body ]
  tail call void @__cxa_guard_abort(ptr nonnull %_ZGVZ8picModelR5MixerE2sm.sink) #39
  resume { ptr, i32 } %.pn
}

; Function Attrs: mustprogress nounwind willreturn uwtable
define internal void @__cxx_global_array_dtor(ptr nocapture readnone %0) #15 section ".text.startup" {
entry:
  %1 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2, i32 2), align 8, !tbaa !10
  %2 = load i32, ptr @programChecker, align 8, !tbaa !13
  %3 = shl i32 %1, 2
  %add.i.i.i = sub i32 %2, %3
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %4 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %4
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN8StateMapD2Ev.exit

if.then.i.i.i:                                    ; preds = %entry
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN8StateMapD2Ev.exit

_ZN8StateMapD2Ev.exit:                            ; preds = %entry, %if.then.i.i.i
  %5 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2, i32 2, i32 2), align 16, !tbaa !17
  tail call void @free(ptr noundef %5) #39
  %6 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1, i32 2), align 8, !tbaa !10
  %7 = load i32, ptr @programChecker, align 8, !tbaa !13
  %8 = shl i32 %6, 2
  %add.i.i.i.1 = sub i32 %7, %8
  store i32 %add.i.i.i.1, ptr @programChecker, align 8, !tbaa !13
  %9 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i.1 = icmp sgt i32 %add.i.i.i.1, %9
  br i1 %cmp.i.i.i.1, label %if.then.i.i.i.1, label %_ZN8StateMapD2Ev.exit.1

if.then.i.i.i.1:                                  ; preds = %_ZN8StateMapD2Ev.exit
  store i32 %add.i.i.i.1, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN8StateMapD2Ev.exit.1

_ZN8StateMapD2Ev.exit.1:                          ; preds = %if.then.i.i.i.1, %_ZN8StateMapD2Ev.exit
  %10 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1, i32 2, i32 2), align 16, !tbaa !17
  tail call void @free(ptr noundef %10) #39
  %11 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 0, i32 2), align 8, !tbaa !10
  %12 = load i32, ptr @programChecker, align 8, !tbaa !13
  %13 = shl i32 %11, 2
  %add.i.i.i.2 = sub i32 %12, %13
  store i32 %add.i.i.i.2, ptr @programChecker, align 8, !tbaa !13
  %14 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i.2 = icmp sgt i32 %add.i.i.i.2, %14
  br i1 %cmp.i.i.i.2, label %if.then.i.i.i.2, label %_ZN8StateMapD2Ev.exit.2

if.then.i.i.i.2:                                  ; preds = %_ZN8StateMapD2Ev.exit.1
  store i32 %add.i.i.i.2, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN8StateMapD2Ev.exit.2

_ZN8StateMapD2Ev.exit.2:                          ; preds = %if.then.i.i.i.2, %_ZN8StateMapD2Ev.exit.1
  %15 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 0, i32 2, i32 2), align 16, !tbaa !17
  tail call void @free(ptr noundef %15) #39
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z9wordModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %m) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZ9wordModelR5MixerE2cm acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !110

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9wordModelR5MixerE2cm) #39
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  %2 = load i32, ptr @level, align 4, !tbaa !25
  %mul = shl i32 1048576, %2
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ9wordModelR5MixerE2cm, i32 noundef %mul, i32 noundef 20)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init
  %3 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ9wordModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9wordModelR5MixerE2cm) #39
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %entry
  %4 = load i32, ptr @bpos, align 4, !tbaa !25
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end73

if.then:                                          ; preds = %init.end
  %5 = load i32, ptr @c4, align 4, !tbaa !25
  %and = and i32 %5, 255
  %6 = add nsw i32 %and, -65
  %or.cond = icmp ult i32 %6, 26
  %add = add nuw nsw i32 %and, 32
  %spec.select = select i1 %or.cond, i32 %add, i32 %and
  %7 = add nsw i32 %spec.select, -97
  %or.cond76 = icmp ult i32 %7, 26
  %cmp7 = icmp ugt i32 %spec.select, 127
  %or.cond77 = or i1 %cmp7, %or.cond76
  %8 = load i32, ptr @_ZZ9wordModelR5MixerE5word0, align 4, !tbaa !25
  br i1 %or.cond77, label %if.end23.thread, label %if.else

lpad:                                             ; preds = %init
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ9wordModelR5MixerE2cm) #39
  resume { ptr, i32 } %9

if.end23.thread:                                  ; preds = %if.then
  %mul10 = mul i32 %8, 8416
  %add11 = add i32 %mul10, %spec.select
  store i32 %add11, ptr @_ZZ9wordModelR5MixerE5word0, align 4, !tbaa !25
  %10 = load i32, ptr @_ZZ9wordModelR5MixerE5text0, align 4, !tbaa !25
  %mul13 = mul i32 %10, 15952
  %add14 = add i32 %mul13, %spec.select
  store i32 %add14, ptr @_ZZ9wordModelR5MixerE5text0, align 4, !tbaa !25
  br label %if.end26

if.else:                                          ; preds = %if.then
  %tobool15.not = icmp eq i32 %8, 0
  br i1 %tobool15.not, label %if.end23, label %if.then16

if.then16:                                        ; preds = %if.else
  %11 = load i32, ptr @_ZZ9wordModelR5MixerE5word4, align 4, !tbaa !25
  %mul17 = mul i32 %11, 23
  store i32 %mul17, ptr @_ZZ9wordModelR5MixerE5word5, align 4, !tbaa !25
  %12 = load i32, ptr @_ZZ9wordModelR5MixerE5word3, align 4, !tbaa !25
  %mul18 = mul i32 %12, 19
  store i32 %mul18, ptr @_ZZ9wordModelR5MixerE5word4, align 4, !tbaa !25
  %13 = load i32, ptr @_ZZ9wordModelR5MixerE5word2, align 4, !tbaa !25
  %mul19 = mul i32 %13, 17
  store i32 %mul19, ptr @_ZZ9wordModelR5MixerE5word3, align 4, !tbaa !25
  %14 = load i32, ptr @_ZZ9wordModelR5MixerE5word1, align 4, !tbaa !25
  %mul20 = mul i32 %14, 13
  store i32 %mul20, ptr @_ZZ9wordModelR5MixerE5word2, align 4, !tbaa !25
  %mul21 = mul i32 %8, 11
  store i32 %mul21, ptr @_ZZ9wordModelR5MixerE5word1, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9wordModelR5MixerE5word0, align 4, !tbaa !25
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then16
  %cmp24 = icmp eq i32 %spec.select, 10
  br i1 %cmp24, label %if.then25, label %if.end26

if.then25:                                        ; preds = %if.end23
  %15 = load i32, ptr @_ZZ9wordModelR5MixerE2nl, align 4, !tbaa !25
  store i32 %15, ptr @_ZZ9wordModelR5MixerE3nl1, align 4, !tbaa !25
  %16 = load i32, ptr @pos, align 4, !tbaa !25
  %sub = add nsw i32 %16, -1
  store i32 %sub, ptr @_ZZ9wordModelR5MixerE2nl, align 4, !tbaa !25
  br label %if.end26

if.end26:                                         ; preds = %if.end23.thread, %if.then25, %if.end23
  %17 = phi i32 [ %add11, %if.end23.thread ], [ 0, %if.then25 ], [ 0, %if.end23 ]
  %18 = load i32, ptr @pos, align 4, !tbaa !25
  %19 = load i32, ptr @_ZZ9wordModelR5MixerE2nl, align 4, !tbaa !25
  %sub27 = sub nsw i32 %18, %19
  %cond.i = tail call i32 @llvm.smin.i32(i32 %sub27, i32 255)
  %20 = load i32, ptr @_ZZ9wordModelR5MixerE3nl1, align 4, !tbaa !25
  %add28 = add nsw i32 %cond.i, %20
  %21 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i = add nsw i32 %21, -1
  %and.i = and i32 %sub.i, %add28
  %22 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %22, i64 %idxprom.i.i
  %23 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %conv = zext i8 %23 to i32
  %mul30 = mul i32 %17, 271
  %sub.i98 = add nsw i32 %18, -1
  %and.i99 = and i32 %sub.i, %sub.i98
  %idxprom.i.i100 = sext i32 %and.i99 to i64
  %arrayidx.i.i101 = getelementptr inbounds i8, ptr %22, i64 %idxprom.i.i100
  %24 = load i8, ptr %arrayidx.i.i101, align 1, !tbaa !9
  %conv.i = zext i8 %24 to i32
  %add32 = add i32 %mul30, %conv.i
  %25 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i = add nsw i32 %25, 1
  store i32 %inc.i, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i = mul i32 %add32, 987654323
  %add.i = add i32 %mul.i, %25
  %or.i = tail call i32 @llvm.fshl.i32(i32 %add.i, i32 %add.i, i32 16)
  %mul2.i = mul i32 %or.i, 123456791
  %add3.i = add i32 %mul2.i, %25
  %26 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %idxprom.i.i102 = sext i32 %25 to i64
  %arrayidx.i.i103 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i102
  store i32 %add3.i, ptr %arrayidx.i.i103, align 4, !tbaa !25
  %27 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i104 = add nsw i32 %27, 1
  store i32 %inc.i104, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i105 = mul i32 %17, 987654323
  %add.i106 = add i32 %27, %mul.i105
  %or.i107 = tail call i32 @llvm.fshl.i32(i32 %add.i106, i32 %add.i106, i32 16)
  %mul2.i108 = mul i32 %or.i107, 123456791
  %add3.i109 = add i32 %mul2.i108, %27
  %idxprom.i.i110 = sext i32 %27 to i64
  %arrayidx.i.i111 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i110
  store i32 %add3.i109, ptr %arrayidx.i.i111, align 4, !tbaa !25
  %28 = load i32, ptr @_ZZ9wordModelR5MixerE5word1, align 4, !tbaa !25
  %add33 = add i32 %28, %add32
  %29 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i112 = add nsw i32 %29, 1
  store i32 %inc.i112, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i113 = mul i32 %add33, 987654323
  %add.i114 = add i32 %mul.i113, %29
  %or.i115 = tail call i32 @llvm.fshl.i32(i32 %add.i114, i32 %add.i114, i32 16)
  %mul2.i116 = mul i32 %or.i115, 123456791
  %add3.i117 = add i32 %mul2.i116, %29
  %idxprom.i.i118 = sext i32 %29 to i64
  %arrayidx.i.i119 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i118
  store i32 %add3.i117, ptr %arrayidx.i.i119, align 4, !tbaa !25
  %mul34 = mul i32 %28, 31
  %add35 = add i32 %mul34, %17
  %30 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i120 = add nsw i32 %30, 1
  store i32 %inc.i120, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i121 = mul i32 %add35, 987654323
  %add.i122 = add i32 %30, %mul.i121
  %or.i123 = tail call i32 @llvm.fshl.i32(i32 %add.i122, i32 %add.i122, i32 16)
  %mul2.i124 = mul i32 %or.i123, 123456791
  %add3.i125 = add i32 %mul2.i124, %30
  %idxprom.i.i126 = sext i32 %30 to i64
  %arrayidx.i.i127 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i126
  store i32 %add3.i125, ptr %arrayidx.i.i127, align 4, !tbaa !25
  %31 = load i32, ptr @_ZZ9wordModelR5MixerE5word2, align 4, !tbaa !25
  %mul37 = mul i32 %31, 29
  %add38 = add i32 %mul37, %add33
  %32 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i128 = add nsw i32 %32, 1
  store i32 %inc.i128, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i129 = mul i32 %add38, 987654323
  %add.i130 = add i32 %mul.i129, %32
  %or.i131 = tail call i32 @llvm.fshl.i32(i32 %add.i130, i32 %add.i130, i32 16)
  %mul2.i132 = mul i32 %or.i131, 123456791
  %add3.i133 = add i32 %mul2.i132, %32
  %idxprom.i.i134 = sext i32 %32 to i64
  %arrayidx.i.i135 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i134
  store i32 %add3.i133, ptr %arrayidx.i.i135, align 4, !tbaa !25
  %33 = load i32, ptr @_ZZ9wordModelR5MixerE5text0, align 4, !tbaa !25
  %and39 = and i32 %33, 16777215
  %34 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i136 = add nsw i32 %34, 1
  store i32 %inc.i136, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i137 = mul i32 %and39, 987654323
  %add.i138 = add i32 %mul.i137, %34
  %or.i139 = tail call i32 @llvm.fshl.i32(i32 %add.i138, i32 %add.i138, i32 16)
  %mul2.i140 = mul i32 %or.i139, 123456791
  %add3.i141 = add i32 %mul2.i140, %34
  %idxprom.i.i142 = sext i32 %34 to i64
  %arrayidx.i.i143 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i142
  store i32 %add3.i141, ptr %arrayidx.i.i143, align 4, !tbaa !25
  %and40 = and i32 %33, 1048575
  %35 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i144 = add nsw i32 %35, 1
  store i32 %inc.i144, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i145 = mul i32 %and40, 987654323
  %add.i146 = add i32 %35, %mul.i145
  %or.i147 = tail call i32 @llvm.fshl.i32(i32 %add.i146, i32 %add.i146, i32 16)
  %mul2.i148 = mul i32 %or.i147, 123456791
  %add3.i149 = add i32 %mul2.i148, %35
  %idxprom.i.i150 = sext i32 %35 to i64
  %arrayidx.i.i151 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i150
  store i32 %add3.i149, ptr %arrayidx.i.i151, align 4, !tbaa !25
  %add41 = add i32 %31, %add32
  %36 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i152 = add nsw i32 %36, 1
  store i32 %inc.i152, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i153 = mul i32 %add41, 987654323
  %add.i154 = add i32 %36, %mul.i153
  %or.i155 = tail call i32 @llvm.fshl.i32(i32 %add.i154, i32 %add.i154, i32 16)
  %mul2.i156 = mul i32 %or.i155, 123456791
  %add3.i157 = add i32 %mul2.i156, %36
  %idxprom.i.i158 = sext i32 %36 to i64
  %arrayidx.i.i159 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i158
  store i32 %add3.i157, ptr %arrayidx.i.i159, align 4, !tbaa !25
  %37 = load i32, ptr @_ZZ9wordModelR5MixerE5word3, align 4, !tbaa !25
  %add42 = add i32 %37, %add32
  %38 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i160 = add nsw i32 %38, 1
  store i32 %inc.i160, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i161 = mul i32 %add42, 987654323
  %add.i162 = add i32 %mul.i161, %38
  %or.i163 = tail call i32 @llvm.fshl.i32(i32 %add.i162, i32 %add.i162, i32 16)
  %mul2.i164 = mul i32 %or.i163, 123456791
  %add3.i165 = add i32 %mul2.i164, %38
  %idxprom.i.i166 = sext i32 %38 to i64
  %arrayidx.i.i167 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i166
  store i32 %add3.i165, ptr %arrayidx.i.i167, align 4, !tbaa !25
  %39 = load i32, ptr @_ZZ9wordModelR5MixerE5word4, align 4, !tbaa !25
  %add43 = add i32 %39, %add32
  %40 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i168 = add nsw i32 %40, 1
  store i32 %inc.i168, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i169 = mul i32 %add43, 987654323
  %add.i170 = add i32 %mul.i169, %40
  %or.i171 = tail call i32 @llvm.fshl.i32(i32 %add.i170, i32 %add.i170, i32 16)
  %mul2.i172 = mul i32 %or.i171, 123456791
  %add3.i173 = add i32 %mul2.i172, %40
  %idxprom.i.i174 = sext i32 %40 to i64
  %arrayidx.i.i175 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i174
  store i32 %add3.i173, ptr %arrayidx.i.i175, align 4, !tbaa !25
  %41 = load i32, ptr @_ZZ9wordModelR5MixerE5word5, align 4, !tbaa !25
  %add44 = add i32 %41, %add32
  %42 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i176 = add nsw i32 %42, 1
  store i32 %inc.i176, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i177 = mul i32 %add44, 987654323
  %add.i178 = add i32 %mul.i177, %42
  %or.i179 = tail call i32 @llvm.fshl.i32(i32 %add.i178, i32 %add.i178, i32 16)
  %mul2.i180 = mul i32 %or.i179, 123456791
  %add3.i181 = add i32 %mul2.i180, %42
  %idxprom.i.i182 = sext i32 %42 to i64
  %arrayidx.i.i183 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i182
  store i32 %add3.i181, ptr %arrayidx.i.i183, align 4, !tbaa !25
  %43 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i184 = add nsw i32 %43, -1
  %44 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i185 = add nsw i32 %44, -1
  %and.i186 = and i32 %sub3.i185, %sub.i184
  %idxprom.i.i187 = sext i32 %and.i186 to i64
  %arrayidx.i.i188 = getelementptr inbounds i8, ptr %22, i64 %idxprom.i.i187
  %45 = load i8, ptr %arrayidx.i.i188, align 1, !tbaa !9
  %conv.i189 = zext i8 %45 to i32
  %sub.i190 = add nsw i32 %43, -3
  %and.i192 = and i32 %sub3.i185, %sub.i190
  %idxprom.i.i193 = sext i32 %and.i192 to i64
  %arrayidx.i.i194 = getelementptr inbounds i8, ptr %22, i64 %idxprom.i.i193
  %46 = load i8, ptr %arrayidx.i.i194, align 1, !tbaa !9
  %conv.i195 = zext i8 %46 to i32
  %shl47 = shl nuw nsw i32 %conv.i195, 8
  %or = or i32 %shl47, %conv.i189
  %sub.i196 = add nsw i32 %43, -5
  %and.i198 = and i32 %sub3.i185, %sub.i196
  %idxprom.i.i199 = sext i32 %and.i198 to i64
  %arrayidx.i.i200 = getelementptr inbounds i8, ptr %22, i64 %idxprom.i.i199
  %47 = load i8, ptr %arrayidx.i.i200, align 1, !tbaa !9
  %conv.i201 = zext i8 %47 to i32
  %shl49 = shl nuw nsw i32 %conv.i201, 16
  %or50 = or i32 %or, %shl49
  %48 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i202 = add nsw i32 %48, 1
  store i32 %inc.i202, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i203 = mul i32 %or50, 987654323
  %add.i204 = add i32 %mul.i203, %48
  %or.i205 = tail call i32 @llvm.fshl.i32(i32 %add.i204, i32 %add.i204, i32 16)
  %mul2.i206 = mul i32 %or.i205, 123456791
  %add3.i207 = add i32 %mul2.i206, %48
  %idxprom.i.i208 = sext i32 %48 to i64
  %arrayidx.i.i209 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i208
  store i32 %add3.i207, ptr %arrayidx.i.i209, align 4, !tbaa !25
  %49 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i210 = add nsw i32 %49, -2
  %50 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i211 = add nsw i32 %50, -1
  %and.i212 = and i32 %sub3.i211, %sub.i210
  %idxprom.i.i213 = sext i32 %and.i212 to i64
  %arrayidx.i.i214 = getelementptr inbounds i8, ptr %22, i64 %idxprom.i.i213
  %51 = load i8, ptr %arrayidx.i.i214, align 1, !tbaa !9
  %conv.i215 = zext i8 %51 to i32
  %sub.i216 = add nsw i32 %49, -4
  %and.i218 = and i32 %sub3.i211, %sub.i216
  %idxprom.i.i219 = sext i32 %and.i218 to i64
  %arrayidx.i.i220 = getelementptr inbounds i8, ptr %22, i64 %idxprom.i.i219
  %52 = load i8, ptr %arrayidx.i.i220, align 1, !tbaa !9
  %conv.i221 = zext i8 %52 to i32
  %shl53 = shl nuw nsw i32 %conv.i221, 8
  %or54 = or i32 %shl53, %conv.i215
  %sub.i222 = add nsw i32 %49, -6
  %and.i224 = and i32 %sub3.i211, %sub.i222
  %idxprom.i.i225 = sext i32 %and.i224 to i64
  %arrayidx.i.i226 = getelementptr inbounds i8, ptr %22, i64 %idxprom.i.i225
  %53 = load i8, ptr %arrayidx.i.i226, align 1, !tbaa !9
  %conv.i227 = zext i8 %53 to i32
  %shl56 = shl nuw nsw i32 %conv.i227, 16
  %or57 = or i32 %or54, %shl56
  %54 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i228 = add nsw i32 %54, 1
  store i32 %inc.i228, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i229 = mul i32 %or57, 987654323
  %add.i230 = add i32 %mul.i229, %54
  %or.i231 = tail call i32 @llvm.fshl.i32(i32 %add.i230, i32 %add.i230, i32 16)
  %mul2.i232 = mul i32 %or.i231, 123456791
  %add3.i233 = add i32 %mul2.i232, %54
  %idxprom.i.i234 = sext i32 %54 to i64
  %arrayidx.i.i235 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i234
  store i32 %add3.i233, ptr %arrayidx.i.i235, align 4, !tbaa !25
  %add59 = add i32 %37, %add33
  %55 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i236 = add nsw i32 %55, 1
  store i32 %inc.i236, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i237 = mul i32 %add59, 987654323
  %add.i238 = add i32 %55, %mul.i237
  %or.i239 = tail call i32 @llvm.fshl.i32(i32 %add.i238, i32 %add.i238, i32 16)
  %mul2.i240 = mul i32 %or.i239, 123456791
  %add3.i241 = add i32 %mul2.i240, %55
  %idxprom.i.i242 = sext i32 %55 to i64
  %arrayidx.i.i243 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i242
  store i32 %add3.i241, ptr %arrayidx.i.i243, align 4, !tbaa !25
  %add61 = add i32 %37, %add41
  %56 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i244 = add nsw i32 %56, 1
  store i32 %inc.i244, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i245 = mul i32 %add61, 987654323
  %add.i246 = add i32 %56, %mul.i245
  %or.i247 = tail call i32 @llvm.fshl.i32(i32 %add.i246, i32 %add.i246, i32 16)
  %mul2.i248 = mul i32 %or.i247, 123456791
  %add3.i249 = add i32 %mul2.i248, %56
  %idxprom.i.i250 = sext i32 %56 to i64
  %arrayidx.i.i251 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i250
  store i32 %add3.i249, ptr %arrayidx.i.i251, align 4, !tbaa !25
  %shl62 = shl i32 %cond.i, 16
  %57 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i252 = add nsw i32 %57, -1
  %58 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i253 = add nsw i32 %58, -1
  %and.i254 = and i32 %sub3.i253, %sub.i252
  %idxprom.i.i255 = sext i32 %and.i254 to i64
  %arrayidx.i.i256 = getelementptr inbounds i8, ptr %22, i64 %idxprom.i.i255
  %59 = load i8, ptr %arrayidx.i.i256, align 1, !tbaa !9
  %conv.i257 = zext i8 %59 to i32
  %shl64 = shl nuw nsw i32 %conv.i257, 8
  %or65 = or i32 %shl64, %shl62
  %or66 = or i32 %or65, %conv
  %60 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i258 = add nsw i32 %60, 1
  store i32 %inc.i258, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i259 = mul i32 %or66, 987654323
  %add.i260 = add i32 %mul.i259, %60
  %or.i261 = tail call i32 @llvm.fshl.i32(i32 %add.i260, i32 %add.i260, i32 16)
  %mul2.i262 = mul i32 %or.i261, 123456791
  %add3.i263 = add i32 %mul2.i262, %60
  %idxprom.i.i264 = sext i32 %60 to i64
  %arrayidx.i.i265 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i264
  store i32 %add3.i263, ptr %arrayidx.i.i265, align 4, !tbaa !25
  %61 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i266 = add nsw i32 %61, -1
  %62 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i267 = add nsw i32 %62, -1
  %and.i268 = and i32 %sub3.i267, %sub.i266
  %idxprom.i.i269 = sext i32 %and.i268 to i64
  %arrayidx.i.i270 = getelementptr inbounds i8, ptr %22, i64 %idxprom.i.i269
  %63 = load i8, ptr %arrayidx.i.i270, align 1, !tbaa !9
  %conv.i271 = zext i8 %63 to i32
  %shl68 = shl nuw nsw i32 %conv.i271, 8
  %or69 = or i32 %shl68, %conv
  %64 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i272 = add nsw i32 %64, 1
  store i32 %inc.i272, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i273 = mul i32 %or69, 987654323
  %add.i274 = add i32 %mul.i273, %64
  %or.i275 = tail call i32 @llvm.fshl.i32(i32 %add.i274, i32 %add.i274, i32 16)
  %mul2.i276 = mul i32 %or.i275, 123456791
  %add3.i277 = add i32 %mul2.i276, %64
  %idxprom.i.i278 = sext i32 %64 to i64
  %arrayidx.i.i279 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i278
  store i32 %add3.i277, ptr %arrayidx.i.i279, align 4, !tbaa !25
  %shl70 = shl i32 %cond.i, 8
  %65 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i280 = add nsw i32 %65, -1
  %66 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i281 = add nsw i32 %66, -1
  %and.i282 = and i32 %sub3.i281, %sub.i280
  %idxprom.i.i283 = sext i32 %and.i282 to i64
  %arrayidx.i.i284 = getelementptr inbounds i8, ptr %22, i64 %idxprom.i.i283
  %67 = load i8, ptr %arrayidx.i.i284, align 1, !tbaa !9
  %conv.i285 = zext i8 %67 to i32
  %or72 = or i32 %shl70, %conv.i285
  %68 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i286 = add nsw i32 %68, 1
  store i32 %inc.i286, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i287 = mul i32 %or72, 987654323
  %add.i288 = add i32 %mul.i287, %68
  %or.i289 = tail call i32 @llvm.fshl.i32(i32 %add.i288, i32 %add.i288, i32 16)
  %mul2.i290 = mul i32 %or.i289, 123456791
  %add3.i291 = add i32 %mul2.i290, %68
  %idxprom.i.i292 = sext i32 %68 to i64
  %arrayidx.i.i293 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i292
  store i32 %add3.i291, ptr %arrayidx.i.i293, align 4, !tbaa !25
  %69 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i294 = add nsw i32 %69, 1
  store i32 %inc.i294, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i295 = mul i32 %cond.i, 987654323
  %add.i296 = add i32 %69, %mul.i295
  %or.i297 = tail call i32 @llvm.fshl.i32(i32 %add.i296, i32 %add.i296, i32 16)
  %mul2.i298 = mul i32 %or.i297, 123456791
  %add3.i299 = add i32 %mul2.i298, %69
  %idxprom.i.i300 = sext i32 %69 to i64
  %arrayidx.i.i301 = getelementptr inbounds i32, ptr %26, i64 %idxprom.i.i300
  store i32 %add3.i299, ptr %arrayidx.i.i301, align 4, !tbaa !25
  %.pre = load i32, ptr @bpos, align 4, !tbaa !25
  br label %if.end73

if.end73:                                         ; preds = %if.end26, %init.end
  %70 = phi i32 [ %.pre, %if.end26 ], [ %4, %init.end ]
  %71 = load i32, ptr @c0, align 4, !tbaa !25
  %72 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i = add nsw i32 %72, -1
  %73 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i = add nsw i32 %73, -1
  %and.i.i = and i32 %sub3.i.i, %sub.i.i
  %74 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i = sext i32 %and.i.i to i64
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %74, i64 %idxprom.i.i.i
  %75 = load i8, ptr %arrayidx.i.i.i, align 1, !tbaa !9
  %conv.i.i = zext i8 %75 to i32
  %76 = load i32, ptr @y, align 4, !tbaa !25
  %call2.i = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ9wordModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %71, i32 noundef %70, i32 noundef %conv.i.i, i32 noundef %76)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z11recordModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %m) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZ11recordModelR5MixerE2cm acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !110

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11recordModelR5MixerE2cm) #39
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cm, i32 noundef 32768, i32 noundef 3)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init
  %2 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11recordModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11recordModelR5MixerE2cm) #39
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %entry
  %3 = load atomic i8, ptr @_ZGVZ11recordModelR5MixerE2cn acquire, align 8
  %guard.uninitialized1 = icmp eq i8 %3, 0
  br i1 %guard.uninitialized1, label %init.check2, label %init.end7, !prof !110

init.check2:                                      ; preds = %init.end
  %4 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11recordModelR5MixerE2cn) #39
  %tobool3.not = icmp eq i32 %4, 0
  br i1 %tobool3.not, label %init.end7, label %init4

init4:                                            ; preds = %init.check2
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cn, i32 noundef 16384, i32 noundef 3)
          to label %invoke.cont6 unwind label %lpad5

invoke.cont6:                                     ; preds = %init4
  %5 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11recordModelR5MixerE2cn, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11recordModelR5MixerE2cn) #39
  br label %init.end7

init.end7:                                        ; preds = %invoke.cont6, %init.check2, %init.end
  %6 = load atomic i8, ptr @_ZGVZ11recordModelR5MixerE2co acquire, align 8
  %guard.uninitialized8 = icmp eq i8 %6, 0
  br i1 %guard.uninitialized8, label %init.check9, label %init.end14, !prof !110

init.check9:                                      ; preds = %init.end7
  %7 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11recordModelR5MixerE2co) #39
  %tobool10.not = icmp eq i32 %7, 0
  br i1 %tobool10.not, label %init.end14, label %init11

init11:                                           ; preds = %init.check9
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2co, i32 noundef 65536, i32 noundef 3)
          to label %invoke.cont13 unwind label %lpad12

invoke.cont13:                                    ; preds = %init11
  %8 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11recordModelR5MixerE2co, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11recordModelR5MixerE2co) #39
  br label %init.end14

init.end14:                                       ; preds = %invoke.cont13, %init.check9, %init.end7
  %9 = load atomic i8, ptr @_ZGVZ11recordModelR5MixerE2cp acquire, align 8
  %guard.uninitialized15 = icmp eq i8 %9, 0
  br i1 %guard.uninitialized15, label %init.check16, label %init.end21, !prof !110

init.check16:                                     ; preds = %init.end14
  %10 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11recordModelR5MixerE2cp) #39
  %tobool17.not = icmp eq i32 %10, 0
  br i1 %tobool17.not, label %init.end21, label %init18

init18:                                           ; preds = %init.check16
  %11 = load i32, ptr @level, align 4, !tbaa !25
  %shl = shl i32 65536, %11
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cp, i32 noundef %shl, i32 noundef 3)
          to label %invoke.cont20 unwind label %lpad19

invoke.cont20:                                    ; preds = %init18
  %12 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11recordModelR5MixerE2cp, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11recordModelR5MixerE2cp) #39
  br label %init.end21

init.end21:                                       ; preds = %invoke.cont20, %init.check16, %init.end14
  %13 = load i32, ptr @bpos, align 4, !tbaa !25
  %tobool22.not = icmp eq i32 %13, 0
  br i1 %tobool22.not, label %if.then, label %init.end21.if.end151_crit_edge

init.end21.if.end151_crit_edge:                   ; preds = %init.end21
  %.pre404 = load i32, ptr @pos, align 4, !tbaa !25
  br label %if.end151

if.then:                                          ; preds = %init.end21
  %14 = load i32, ptr @c4, align 4, !tbaa !25
  %and = and i32 %14, 65535
  %and23 = and i32 %14, 255
  %shr = lshr i32 %and, 8
  %15 = load i32, ptr @pos, align 4, !tbaa !25
  %idxprom = zext i32 %and23 to i64
  %arrayidx = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos1, i64 0, i64 %idxprom
  %16 = load i32, ptr %arrayidx, align 4, !tbaa !25
  %sub = sub nsw i32 %15, %16
  %cmp = icmp sgt i32 %sub, 1
  br i1 %cmp, label %land.lhs.true, label %if.end64thread-pre-split

land.lhs.true:                                    ; preds = %if.then
  %arrayidx27 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos2, i64 0, i64 %idxprom
  %17 = load i32, ptr %arrayidx27, align 4, !tbaa !25
  %sub28 = sub nsw i32 %16, %17
  %cmp29 = icmp eq i32 %sub, %sub28
  br i1 %cmp29, label %land.lhs.true30, label %if.end64thread-pre-split

land.lhs.true30:                                  ; preds = %land.lhs.true
  %arrayidx34 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos3, i64 0, i64 %idxprom
  %18 = load i32, ptr %arrayidx34, align 4, !tbaa !25
  %sub35 = sub nsw i32 %17, %18
  %cmp36 = icmp eq i32 %sub, %sub35
  br i1 %cmp36, label %land.lhs.true37, label %if.end64thread-pre-split

land.lhs.true37:                                  ; preds = %land.lhs.true30
  %arrayidx41 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos4, i64 0, i64 %idxprom
  %19 = load i32, ptr %arrayidx41, align 4, !tbaa !25
  %sub42 = sub nsw i32 %18, %19
  %cmp43 = icmp eq i32 %sub, %sub42
  br i1 %cmp43, label %land.lhs.true44, label %if.end64thread-pre-split

land.lhs.true44:                                  ; preds = %land.lhs.true37
  %cmp45 = icmp ugt i32 %sub, 15
  br i1 %cmp45, label %if.then52, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true44
  %mul = mul nuw nsw i32 %sub, 5
  %add.neg = xor i32 %mul, -1
  %sub.i = add i32 %15, %add.neg
  %20 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i = add nsw i32 %20, -1
  %and.i = and i32 %sub3.i, %sub.i
  %21 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %21, i64 %idxprom.i.i
  %22 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %23 = trunc i32 %14 to i8
  %cmp46 = icmp eq i8 %22, %23
  br i1 %cmp46, label %land.lhs.true47, label %if.end64thread-pre-split

land.lhs.true47:                                  ; preds = %lor.lhs.false
  %mul48 = mul nuw nsw i32 %sub, 6
  %add49.neg = xor i32 %mul48, -1
  %sub.i197 = add i32 %15, %add49.neg
  %and.i199 = and i32 %sub3.i, %sub.i197
  %idxprom.i.i200 = sext i32 %and.i199 to i64
  %arrayidx.i.i201 = getelementptr inbounds i8, ptr %21, i64 %idxprom.i.i200
  %24 = load i8, ptr %arrayidx.i.i201, align 1, !tbaa !9
  %cmp51 = icmp eq i8 %24, %22
  br i1 %cmp51, label %if.then52, label %if.end64thread-pre-split

if.then52:                                        ; preds = %land.lhs.true47, %land.lhs.true44
  %25 = load i32, ptr @_ZZ11recordModelR5MixerE5rlen1, align 4, !tbaa !25
  %cmp53 = icmp eq i32 %sub, %25
  br i1 %cmp53, label %if.then54, label %if.else

if.then54:                                        ; preds = %if.then52
  %26 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  %inc = add nsw i32 %26, 1
  store i32 %inc, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  br label %if.end64

lpad:                                             ; preds = %init
  %27 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad5:                                            ; preds = %init4
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad12:                                           ; preds = %init11
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad19:                                           ; preds = %init18
  %30 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

if.else:                                          ; preds = %if.then52
  %31 = load i32, ptr @_ZZ11recordModelR5MixerE5rlen2, align 4, !tbaa !25
  %cmp55 = icmp eq i32 %sub, %31
  br i1 %cmp55, label %if.then56, label %if.else58

if.then56:                                        ; preds = %if.else
  %32 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !25
  %inc57 = add nsw i32 %32, 1
  br label %if.end64thread-pre-split.sink.split

if.else58:                                        ; preds = %if.else
  %33 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  %34 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !25
  %cmp59 = icmp sgt i32 %33, %34
  br i1 %cmp59, label %if.then60, label %if.end64.thread

if.then60:                                        ; preds = %if.else58
  store i32 %sub, ptr @_ZZ11recordModelR5MixerE5rlen2, align 4, !tbaa !25
  br label %if.end64thread-pre-split.sink.split

if.end64.thread:                                  ; preds = %if.else58
  store i32 %sub, ptr @_ZZ11recordModelR5MixerE5rlen1, align 4, !tbaa !25
  store i32 1, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  br label %if.end69

if.end64thread-pre-split.sink.split:              ; preds = %if.then60, %if.then56
  %inc57.sink = phi i32 [ %inc57, %if.then56 ], [ 1, %if.then60 ]
  store i32 %inc57.sink, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !25
  br label %if.end64thread-pre-split

if.end64thread-pre-split:                         ; preds = %if.end64thread-pre-split.sink.split, %if.then, %land.lhs.true, %land.lhs.true30, %land.lhs.true37, %lor.lhs.false, %land.lhs.true47
  %.pr = load i32, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  br label %if.end64

if.end64:                                         ; preds = %if.end64thread-pre-split, %if.then54
  %35 = phi i32 [ %.pr, %if.end64thread-pre-split ], [ %inc, %if.then54 ]
  %cmp65 = icmp sgt i32 %35, 15
  br i1 %cmp65, label %land.lhs.true66, label %if.end69thread-pre-split403

land.lhs.true66:                                  ; preds = %if.end64
  %36 = load i32, ptr @_ZZ11recordModelR5MixerE4rlen, align 4, !tbaa !25
  %37 = load i32, ptr @_ZZ11recordModelR5MixerE5rlen1, align 4, !tbaa !25
  %cmp67.not = icmp eq i32 %36, %37
  br i1 %cmp67.not, label %if.end69thread-pre-split403, label %if.end74.sink.split

if.end69thread-pre-split403:                      ; preds = %if.end64, %land.lhs.true66
  %.pr401.pr = load i32, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !25
  br label %if.end69

if.end69:                                         ; preds = %if.end69thread-pre-split403, %if.end64.thread
  %.pr401 = phi i32 [ %.pr401.pr, %if.end69thread-pre-split403 ], [ %34, %if.end64.thread ]
  %cmp70 = icmp sgt i32 %.pr401, 15
  br i1 %cmp70, label %land.lhs.true71, label %if.end74

land.lhs.true71:                                  ; preds = %if.end69
  %38 = load i32, ptr @_ZZ11recordModelR5MixerE4rlen, align 4, !tbaa !25
  %39 = load i32, ptr @_ZZ11recordModelR5MixerE5rlen2, align 4, !tbaa !25
  %cmp72.not = icmp eq i32 %38, %39
  br i1 %cmp72.not, label %if.end74, label %if.end74.sink.split

if.end74.sink.split:                              ; preds = %land.lhs.true71, %land.lhs.true66
  %.sink = phi i32 [ %37, %land.lhs.true66 ], [ %39, %land.lhs.true71 ]
  store i32 %.sink, ptr @_ZZ11recordModelR5MixerE4rlen, align 4, !tbaa !25
  store i32 0, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !25
  store i32 0, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  br label %if.end74

if.end74:                                         ; preds = %if.end74.sink.split, %land.lhs.true71, %if.end69
  %shl75 = shl nuw nsw i32 %and23, 8
  %cond.i = tail call i32 @llvm.smin.i32(i32 %sub, i32 255)
  %div = sdiv i32 %cond.i, 4
  %or = or i32 %div, %shl75
  %40 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i = add nsw i32 %40, 1
  store i32 %inc.i, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i = mul i32 %or, 987654323
  %add.i = add i32 %40, %mul.i
  %or.i = tail call i32 @llvm.fshl.i32(i32 %add.i, i32 %add.i, i32 16)
  %mul2.i = mul i32 %or.i, 123456791
  %add3.i = add i32 %mul2.i, %40
  %41 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %idxprom.i.i203 = sext i32 %40 to i64
  %arrayidx.i.i204 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i203
  store i32 %add3.i, ptr %arrayidx.i.i204, align 4, !tbaa !25
  %shl80 = shl nuw nsw i32 %and, 9
  %42 = load i32, ptr @pos, align 4, !tbaa !25
  %idxprom81 = zext i32 %and to i64
  %arrayidx82 = getelementptr inbounds [65536 x i32], ptr @_ZZ11recordModelR5MixerE5wpos1, i64 0, i64 %idxprom81
  %43 = load i32, ptr %arrayidx82, align 4, !tbaa !25
  %sub83 = sub nsw i32 %42, %43
  %cmp.i = icmp ugt i32 %sub83, 16777215
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.end74
  %shr.i = lshr i32 %sub83, 16
  %conv.i205 = zext i32 %shr.i to i64
  %44 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %44, i64 %conv.i205
  %45 = load i8, ptr %arrayidx.i.i.i, align 1, !tbaa !9
  %conv2.i.i = zext i8 %45 to i32
  %add.i206 = or i32 %conv2.i.i, 256
  br label %_Z4llogj.exit

if.else.i:                                        ; preds = %if.end74
  %cmp1.i = icmp ugt i32 %sub83, 65535
  br i1 %cmp1.i, label %if.then2.i, label %if.else7.i

if.then2.i:                                       ; preds = %if.else.i
  %shr3.i = lshr i32 %sub83, 8
  %46 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i14.i = zext i32 %shr3.i to i64
  %arrayidx.i.i15.i = getelementptr inbounds i8, ptr %46, i64 %idxprom.i.i14.i
  %47 = load i8, ptr %arrayidx.i.i15.i, align 1, !tbaa !9
  %conv2.i16.i = zext i8 %47 to i32
  %add6.i = add nuw nsw i32 %conv2.i16.i, 128
  br label %_Z4llogj.exit

if.else7.i:                                       ; preds = %if.else.i
  %48 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i17.i = zext i32 %sub83 to i64
  %arrayidx.i.i18.i = getelementptr inbounds i8, ptr %48, i64 %idxprom.i.i17.i
  %49 = load i8, ptr %arrayidx.i.i18.i, align 1, !tbaa !9
  %conv2.i19.i = zext i8 %49 to i32
  br label %_Z4llogj.exit

_Z4llogj.exit:                                    ; preds = %if.then.i, %if.then2.i, %if.else7.i
  %retval.0.i = phi i32 [ %add.i206, %if.then.i ], [ %add6.i, %if.then2.i ], [ %conv2.i19.i, %if.else7.i ]
  %shr85 = lshr i32 %retval.0.i, 2
  %or86 = or i32 %shr85, %shl80
  %50 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i207 = add nsw i32 %50, 1
  store i32 %inc.i207, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i208 = mul i32 %or86, 987654323
  %add.i209 = add i32 %mul.i208, %50
  %or.i210 = tail call i32 @llvm.fshl.i32(i32 %add.i209, i32 %add.i209, i32 16)
  %mul2.i211 = mul i32 %or.i210, 123456791
  %add3.i212 = add i32 %mul2.i211, %50
  %idxprom.i.i213 = sext i32 %50 to i64
  %arrayidx.i.i214 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i213
  store i32 %add3.i212, ptr %arrayidx.i.i214, align 4, !tbaa !25
  %51 = load i32, ptr @_ZZ11recordModelR5MixerE4rlen, align 4, !tbaa !25
  %52 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i215 = sub nsw i32 %52, %51
  %53 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i216 = add nsw i32 %53, -1
  %and.i217 = and i32 %sub3.i216, %sub.i215
  %54 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i218 = sext i32 %and.i217 to i64
  %arrayidx.i.i219 = getelementptr inbounds i8, ptr %54, i64 %idxprom.i.i218
  %55 = load i8, ptr %arrayidx.i.i219, align 1, !tbaa !9
  %conv.i220 = zext i8 %55 to i32
  %shl88 = shl nuw nsw i32 %conv.i220, 10
  %mul90 = shl nuw nsw i32 %51, 1
  %sub.i221 = sub nsw i32 %52, %mul90
  %and.i223 = and i32 %sub3.i216, %sub.i221
  %idxprom.i.i224 = sext i32 %and.i223 to i64
  %arrayidx.i.i225 = getelementptr inbounds i8, ptr %54, i64 %idxprom.i.i224
  %56 = load i8, ptr %arrayidx.i.i225, align 1, !tbaa !9
  %conv.i226 = zext i8 %56 to i32
  %shl92 = shl nuw nsw i32 %conv.i226, 18
  %57 = or i32 %shl88, %shl92
  %or93 = or i32 %57, %51
  %58 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i227 = add nsw i32 %58, 1
  store i32 %inc.i227, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i228 = mul i32 %or93, 987654323
  %add.i229 = add i32 %mul.i228, %58
  %or.i230 = tail call i32 @llvm.fshl.i32(i32 %add.i229, i32 %add.i229, i32 16)
  %mul2.i231 = mul i32 %or.i230, 123456791
  %add3.i232 = add i32 %mul2.i231, %58
  %idxprom.i.i233 = sext i32 %58 to i64
  %arrayidx.i.i234 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i233
  store i32 %add3.i232, ptr %arrayidx.i.i234, align 4, !tbaa !25
  %shl94 = shl i32 %51, 8
  %or95 = or i32 %shl94, %and
  %59 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %inc.i235 = add nsw i32 %59, 1
  store i32 %inc.i235, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %mul.i236 = mul i32 %or95, 987654323
  %add.i237 = add i32 %59, %mul.i236
  %or.i238 = tail call i32 @llvm.fshl.i32(i32 %add.i237, i32 %add.i237, i32 16)
  %mul2.i239 = mul i32 %or.i238, 123456791
  %add3.i240 = add i32 %mul2.i239, %59
  %60 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %idxprom.i.i241 = sext i32 %59 to i64
  %arrayidx.i.i242 = getelementptr inbounds i32, ptr %60, i64 %idxprom.i.i241
  store i32 %add3.i240, ptr %arrayidx.i.i242, align 4, !tbaa !25
  %shl96 = shl i32 %51, 16
  %or97 = or i32 %shl96, %shr
  %61 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %inc.i243 = add nsw i32 %61, 1
  store i32 %inc.i243, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %mul.i244 = mul i32 %or97, 987654323
  %add.i245 = add i32 %61, %mul.i244
  %or.i246 = tail call i32 @llvm.fshl.i32(i32 %add.i245, i32 %add.i245, i32 16)
  %mul2.i247 = mul i32 %or.i246, 123456791
  %add3.i248 = add i32 %mul2.i247, %61
  %idxprom.i.i249 = sext i32 %61 to i64
  %arrayidx.i.i250 = getelementptr inbounds i32, ptr %60, i64 %idxprom.i.i249
  store i32 %add3.i248, ptr %arrayidx.i.i250, align 4, !tbaa !25
  %or99 = or i32 %shl94, %and23
  %62 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %inc.i251 = add nsw i32 %62, 1
  store i32 %inc.i251, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %mul.i252 = mul i32 %or99, 987654323
  %add.i253 = add i32 %62, %mul.i252
  %or.i254 = tail call i32 @llvm.fshl.i32(i32 %add.i253, i32 %add.i253, i32 16)
  %mul2.i255 = mul i32 %or.i254, 123456791
  %add3.i256 = add i32 %mul2.i255, %62
  %idxprom.i.i257 = sext i32 %62 to i64
  %arrayidx.i.i258 = getelementptr inbounds i32, ptr %60, i64 %idxprom.i.i257
  store i32 %add3.i256, ptr %arrayidx.i.i258, align 4, !tbaa !25
  %63 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i259 = add nsw i32 %63, -1
  %64 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i260 = add nsw i32 %64, -1
  %and.i261 = and i32 %sub3.i260, %sub.i259
  %idxprom.i.i262 = sext i32 %and.i261 to i64
  %arrayidx.i.i263 = getelementptr inbounds i8, ptr %54, i64 %idxprom.i.i262
  %65 = load i8, ptr %arrayidx.i.i263, align 1, !tbaa !9
  %conv.i264 = zext i8 %65 to i32
  %shl101 = shl nuw nsw i32 %conv.i264, 8
  %idxprom103 = zext i8 %65 to i64
  %arrayidx104 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos1, i64 0, i64 %idxprom103
  %66 = load i32, ptr %arrayidx104, align 4, !tbaa !25
  %sub105 = sub nsw i32 %63, %66
  %cond.i271 = tail call i32 @llvm.smin.i32(i32 %sub105, i32 255)
  %or107 = or i32 %cond.i271, %shl101
  %67 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %inc.i272 = add nsw i32 %67, 1
  store i32 %inc.i272, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %mul.i273 = mul i32 %or107, 987654323
  %add.i274 = add i32 %mul.i273, %67
  %or.i275 = tail call i32 @llvm.fshl.i32(i32 %add.i274, i32 %add.i274, i32 16)
  %mul2.i276 = mul i32 %or.i275, 123456791
  %add3.i277 = add i32 %mul2.i276, %67
  %68 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %idxprom.i.i278 = sext i32 %67 to i64
  %arrayidx.i.i279 = getelementptr inbounds i32, ptr %68, i64 %idxprom.i.i278
  store i32 %add3.i277, ptr %arrayidx.i.i279, align 4, !tbaa !25
  %69 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i280 = add nsw i32 %69, -1
  %70 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i281 = add nsw i32 %70, -1
  %and.i282 = and i32 %sub3.i281, %sub.i280
  %idxprom.i.i283 = sext i32 %and.i282 to i64
  %arrayidx.i.i284 = getelementptr inbounds i8, ptr %54, i64 %idxprom.i.i283
  %71 = load i8, ptr %arrayidx.i.i284, align 1, !tbaa !9
  %conv.i285 = zext i8 %71 to i32
  %shl109 = shl nuw nsw i32 %conv.i285, 17
  %sub.i286 = add nsw i32 %69, -2
  %and.i288 = and i32 %sub3.i281, %sub.i286
  %idxprom.i.i289 = sext i32 %and.i288 to i64
  %arrayidx.i.i290 = getelementptr inbounds i8, ptr %54, i64 %idxprom.i.i289
  %72 = load i8, ptr %arrayidx.i.i290, align 1, !tbaa !9
  %conv.i291 = zext i8 %72 to i32
  %shl111 = shl nuw nsw i32 %conv.i291, 9
  %or112 = or i32 %shl111, %shl109
  %sub115 = sub nsw i32 %69, %43
  %cmp.i292 = icmp ugt i32 %sub115, 16777215
  br i1 %cmp.i292, label %if.then.i298, label %if.else.i300

if.then.i298:                                     ; preds = %_Z4llogj.exit
  %shr.i293 = lshr i32 %sub115, 16
  %conv.i294 = zext i32 %shr.i293 to i64
  %73 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %arrayidx.i.i.i295 = getelementptr inbounds i8, ptr %73, i64 %conv.i294
  %74 = load i8, ptr %arrayidx.i.i.i295, align 1, !tbaa !9
  %conv2.i.i296 = zext i8 %74 to i32
  %add.i297 = or i32 %conv2.i.i296, 256
  br label %_Z4llogj.exit312

if.else.i300:                                     ; preds = %_Z4llogj.exit
  %cmp1.i299 = icmp ugt i32 %sub115, 65535
  br i1 %cmp1.i299, label %if.then2.i306, label %if.else7.i310

if.then2.i306:                                    ; preds = %if.else.i300
  %shr3.i301 = lshr i32 %sub115, 8
  %75 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i14.i302 = zext i32 %shr3.i301 to i64
  %arrayidx.i.i15.i303 = getelementptr inbounds i8, ptr %75, i64 %idxprom.i.i14.i302
  %76 = load i8, ptr %arrayidx.i.i15.i303, align 1, !tbaa !9
  %conv2.i16.i304 = zext i8 %76 to i32
  %add6.i305 = add nuw nsw i32 %conv2.i16.i304, 128
  br label %_Z4llogj.exit312

if.else7.i310:                                    ; preds = %if.else.i300
  %77 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i17.i307 = zext i32 %sub115 to i64
  %arrayidx.i.i18.i308 = getelementptr inbounds i8, ptr %77, i64 %idxprom.i.i17.i307
  %78 = load i8, ptr %arrayidx.i.i18.i308, align 1, !tbaa !9
  %conv2.i19.i309 = zext i8 %78 to i32
  br label %_Z4llogj.exit312

_Z4llogj.exit312:                                 ; preds = %if.then.i298, %if.then2.i306, %if.else7.i310
  %retval.0.i311 = phi i32 [ %add.i297, %if.then.i298 ], [ %add6.i305, %if.then2.i306 ], [ %conv2.i19.i309, %if.else7.i310 ]
  %shr117 = lshr i32 %retval.0.i311, 2
  %or118 = or i32 %or112, %shr117
  %79 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %inc.i313 = add nsw i32 %79, 1
  store i32 %inc.i313, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %mul.i314 = mul i32 %or118, 987654323
  %add.i315 = add i32 %mul.i314, %79
  %or.i316 = tail call i32 @llvm.fshl.i32(i32 %add.i315, i32 %add.i315, i32 16)
  %mul2.i317 = mul i32 %or.i316, 123456791
  %add3.i318 = add i32 %mul2.i317, %79
  %idxprom.i.i319 = sext i32 %79 to i64
  %arrayidx.i.i320 = getelementptr inbounds i32, ptr %68, i64 %idxprom.i.i319
  store i32 %add3.i318, ptr %arrayidx.i.i320, align 4, !tbaa !25
  %80 = load i32, ptr @pos, align 4, !tbaa !25
  %rem = srem i32 %80, %51
  %sub.i321 = add nsw i32 %80, -1
  %81 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i322 = add nsw i32 %81, -1
  %and.i323 = and i32 %sub3.i322, %sub.i321
  %idxprom.i.i324 = sext i32 %and.i323 to i64
  %arrayidx.i.i325 = getelementptr inbounds i8, ptr %54, i64 %idxprom.i.i324
  %82 = load i8, ptr %arrayidx.i.i325, align 1, !tbaa !9
  %conv.i326 = zext i8 %82 to i32
  %shl120 = shl nuw nsw i32 %conv.i326, 8
  %sub.i327 = sub nsw i32 %80, %51
  %and.i329 = and i32 %sub3.i322, %sub.i327
  %idxprom.i.i330 = sext i32 %and.i329 to i64
  %arrayidx.i.i331 = getelementptr inbounds i8, ptr %54, i64 %idxprom.i.i330
  %83 = load i8, ptr %arrayidx.i.i331, align 1, !tbaa !9
  %conv.i332 = zext i8 %83 to i32
  %or122 = or i32 %shl120, %conv.i332
  %84 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %inc.i333 = add nsw i32 %84, 1
  store i32 %inc.i333, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %mul.i334 = mul i32 %or122, 987654323
  %add.i335 = add i32 %mul.i334, %84
  %or.i336 = tail call i32 @llvm.fshl.i32(i32 %add.i335, i32 %add.i335, i32 16)
  %mul2.i337 = mul i32 %or.i336, 123456791
  %add3.i338 = add i32 %mul2.i337, %84
  %idxprom.i.i339 = sext i32 %84 to i64
  %arrayidx.i.i340 = getelementptr inbounds i32, ptr %68, i64 %idxprom.i.i339
  store i32 %add3.i338, ptr %arrayidx.i.i340, align 4, !tbaa !25
  %85 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i341 = sub nsw i32 %85, %51
  %86 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i342 = add nsw i32 %86, -1
  %and.i343 = and i32 %sub3.i342, %sub.i341
  %idxprom.i.i344 = sext i32 %and.i343 to i64
  %arrayidx.i.i345 = getelementptr inbounds i8, ptr %54, i64 %idxprom.i.i344
  %87 = load i8, ptr %arrayidx.i.i345, align 1, !tbaa !9
  %conv.i346 = zext i8 %87 to i32
  %shl124 = shl nuw nsw i32 %conv.i346, 10
  %shl126 = shl i32 %rem, 18
  %88 = or i32 %51, %shl124
  %or127 = or i32 %88, %shl126
  %89 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %inc.i347 = add nsw i32 %89, 1
  store i32 %inc.i347, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %mul.i348 = mul i32 %or127, 987654323
  %add.i349 = add i32 %mul.i348, %89
  %or.i350 = tail call i32 @llvm.fshl.i32(i32 %add.i349, i32 %add.i349, i32 16)
  %mul2.i351 = mul i32 %or.i350, 123456791
  %add3.i352 = add i32 %mul2.i351, %89
  %90 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %idxprom.i.i353 = sext i32 %89 to i64
  %arrayidx.i.i354 = getelementptr inbounds i32, ptr %90, i64 %idxprom.i.i353
  store i32 %add3.i352, ptr %arrayidx.i.i354, align 4, !tbaa !25
  %91 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i355 = add nsw i32 %91, -1
  %92 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i356 = add nsw i32 %92, -1
  %and.i357 = and i32 %sub3.i356, %sub.i355
  %idxprom.i.i358 = sext i32 %and.i357 to i64
  %arrayidx.i.i359 = getelementptr inbounds i8, ptr %54, i64 %idxprom.i.i358
  %93 = load i8, ptr %arrayidx.i.i359, align 1, !tbaa !9
  %conv.i360 = zext i8 %93 to i32
  %shl129 = shl nuw nsw i32 %conv.i360, 10
  %94 = or i32 %51, %shl129
  %or132 = or i32 %94, %shl126
  %95 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %inc.i361 = add nsw i32 %95, 1
  store i32 %inc.i361, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %mul.i362 = mul i32 %or132, 987654323
  %add.i363 = add i32 %mul.i362, %95
  %or.i364 = tail call i32 @llvm.fshl.i32(i32 %add.i363, i32 %add.i363, i32 16)
  %mul2.i365 = mul i32 %or.i364, 123456791
  %add3.i366 = add i32 %mul2.i365, %95
  %idxprom.i.i367 = sext i32 %95 to i64
  %arrayidx.i.i368 = getelementptr inbounds i32, ptr %90, i64 %idxprom.i.i367
  store i32 %add3.i366, ptr %arrayidx.i.i368, align 4, !tbaa !25
  %shl133 = shl i32 %51, 12
  %or134 = or i32 %rem, %shl133
  %96 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %inc.i369 = add nsw i32 %96, 1
  store i32 %inc.i369, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %mul.i370 = mul i32 %or134, 987654323
  %add.i371 = add i32 %96, %mul.i370
  %or.i372 = tail call i32 @llvm.fshl.i32(i32 %add.i371, i32 %add.i371, i32 16)
  %mul2.i373 = mul i32 %or.i372, 123456791
  %add3.i374 = add i32 %mul2.i373, %96
  %idxprom.i.i375 = sext i32 %96 to i64
  %arrayidx.i.i376 = getelementptr inbounds i32, ptr %90, i64 %idxprom.i.i375
  store i32 %add3.i374, ptr %arrayidx.i.i376, align 4, !tbaa !25
  %arrayidx136 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos3, i64 0, i64 %idxprom
  %97 = load i32, ptr %arrayidx136, align 4, !tbaa !25
  %arrayidx138 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos4, i64 0, i64 %idxprom
  store i32 %97, ptr %arrayidx138, align 4, !tbaa !25
  %arrayidx140 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos2, i64 0, i64 %idxprom
  %98 = load i32, ptr %arrayidx140, align 4, !tbaa !25
  store i32 %98, ptr %arrayidx136, align 4, !tbaa !25
  store i32 %16, ptr %arrayidx140, align 4, !tbaa !25
  %99 = load i32, ptr @pos, align 4, !tbaa !25
  store i32 %99, ptr %arrayidx, align 4, !tbaa !25
  store i32 %99, ptr %arrayidx82, align 4, !tbaa !25
  %.pre = load i32, ptr @bpos, align 4, !tbaa !25
  br label %if.end151

if.end151:                                        ; preds = %init.end21.if.end151_crit_edge, %_Z4llogj.exit312
  %100 = phi i32 [ %99, %_Z4llogj.exit312 ], [ %.pre404, %init.end21.if.end151_crit_edge ]
  %101 = phi i32 [ %.pre, %_Z4llogj.exit312 ], [ %13, %init.end21.if.end151_crit_edge ]
  %102 = load i32, ptr @c0, align 4, !tbaa !25
  %sub.i.i = add nsw i32 %100, -1
  %103 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i = add nsw i32 %103, -1
  %and.i.i = and i32 %sub3.i.i, %sub.i.i
  %104 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i = sext i32 %and.i.i to i64
  %arrayidx.i.i.i377 = getelementptr inbounds i8, ptr %104, i64 %idxprom.i.i.i
  %105 = load i8, ptr %arrayidx.i.i.i377, align 1, !tbaa !9
  %conv.i.i = zext i8 %105 to i32
  %106 = load i32, ptr @y, align 4, !tbaa !25
  %call2.i = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %102, i32 noundef %101, i32 noundef %conv.i.i, i32 noundef %106)
  %107 = load i32, ptr @c0, align 4, !tbaa !25
  %108 = load i32, ptr @bpos, align 4, !tbaa !25
  %109 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i378 = add nsw i32 %109, -1
  %110 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i379 = add nsw i32 %110, -1
  %and.i.i380 = and i32 %sub3.i.i379, %sub.i.i378
  %111 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i381 = sext i32 %and.i.i380 to i64
  %arrayidx.i.i.i382 = getelementptr inbounds i8, ptr %111, i64 %idxprom.i.i.i381
  %112 = load i8, ptr %arrayidx.i.i.i382, align 1, !tbaa !9
  %conv.i.i383 = zext i8 %112 to i32
  %113 = load i32, ptr @y, align 4, !tbaa !25
  %call2.i384 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cn, ptr noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %107, i32 noundef %108, i32 noundef %conv.i.i383, i32 noundef %113)
  %114 = load i32, ptr @c0, align 4, !tbaa !25
  %115 = load i32, ptr @bpos, align 4, !tbaa !25
  %116 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i385 = add nsw i32 %116, -1
  %117 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i386 = add nsw i32 %117, -1
  %and.i.i387 = and i32 %sub3.i.i386, %sub.i.i385
  %118 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i388 = sext i32 %and.i.i387 to i64
  %arrayidx.i.i.i389 = getelementptr inbounds i8, ptr %118, i64 %idxprom.i.i.i388
  %119 = load i8, ptr %arrayidx.i.i.i389, align 1, !tbaa !9
  %conv.i.i390 = zext i8 %119 to i32
  %120 = load i32, ptr @y, align 4, !tbaa !25
  %call2.i391 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2co, ptr noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %114, i32 noundef %115, i32 noundef %conv.i.i390, i32 noundef %120)
  %121 = load i32, ptr @c0, align 4, !tbaa !25
  %122 = load i32, ptr @bpos, align 4, !tbaa !25
  %123 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i392 = add nsw i32 %123, -1
  %124 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i393 = add nsw i32 %124, -1
  %and.i.i394 = and i32 %sub3.i.i393, %sub.i.i392
  %125 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i395 = sext i32 %and.i.i394 to i64
  %arrayidx.i.i.i396 = getelementptr inbounds i8, ptr %125, i64 %idxprom.i.i.i395
  %126 = load i8, ptr %arrayidx.i.i.i396, align 1, !tbaa !9
  %conv.i.i397 = zext i8 %126 to i32
  %127 = load i32, ptr @y, align 4, !tbaa !25
  %call2.i398 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cp, ptr noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %121, i32 noundef %122, i32 noundef %conv.i.i397, i32 noundef %127)
  ret void

eh.resume:                                        ; preds = %lpad19, %lpad12, %lpad5, %lpad
  %_ZGVZ11recordModelR5MixerE2cp.sink = phi ptr [ @_ZGVZ11recordModelR5MixerE2cp, %lpad19 ], [ @_ZGVZ11recordModelR5MixerE2co, %lpad12 ], [ @_ZGVZ11recordModelR5MixerE2cn, %lpad5 ], [ @_ZGVZ11recordModelR5MixerE2cm, %lpad ]
  %.pn = phi { ptr, i32 } [ %30, %lpad19 ], [ %29, %lpad12 ], [ %28, %lpad5 ], [ %27, %lpad ]
  tail call void @__cxa_guard_abort(ptr nonnull %_ZGVZ11recordModelR5MixerE2cp.sink) #39
  resume { ptr, i32 } %.pn
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z11sparseModelR5Mixerii(ptr nocapture noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %seenbefore, i32 noundef %howmany) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZ11sparseModelR5MixeriiE2cm acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !110

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11sparseModelR5MixeriiE2cm) #39
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  %2 = load i32, ptr @level, align 4, !tbaa !25
  %mul = shl i32 131072, %2
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11sparseModelR5MixeriiE2cm, i32 noundef %mul, i32 noundef 48)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init
  %3 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11sparseModelR5MixeriiE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11sparseModelR5MixeriiE2cm) #39
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %entry
  %4 = load i32, ptr @bpos, align 4, !tbaa !25
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end94

if.then:                                          ; preds = %init.end
  %5 = load i32, ptr @c4, align 4, !tbaa !25
  %and = and i32 %5, 15790320
  %6 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i = add nsw i32 %6, 1
  store i32 %inc.i, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i = mul i32 %and, 987654323
  %add.i = add i32 %mul.i, %6
  %or.i = tail call i32 @llvm.fshl.i32(i32 %add.i, i32 %add.i, i32 16)
  %mul2.i = mul i32 %or.i, 123456791
  %add3.i = add i32 %mul2.i, %6
  %7 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %idxprom.i.i = sext i32 %6 to i64
  %arrayidx.i.i = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i
  store i32 %add3.i, ptr %arrayidx.i.i, align 4, !tbaa !25
  %8 = load i32, ptr @c4, align 4, !tbaa !25
  %and1 = and i32 %8, -252645136
  %9 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i104 = add nsw i32 %9, 1
  store i32 %inc.i104, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %10 = mul i32 %and1, 987654323
  %mul.i105 = add i32 %9, 987654323
  %add.i106 = add i32 %mul.i105, %10
  %or.i107 = tail call i32 @llvm.fshl.i32(i32 %add.i106, i32 %add.i106, i32 16)
  %mul2.i108 = mul i32 %or.i107, 123456791
  %add3.i109 = add i32 %mul2.i108, %9
  %idxprom.i.i110 = sext i32 %9 to i64
  %arrayidx.i.i111 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i110
  store i32 %add3.i109, ptr %arrayidx.i.i111, align 4, !tbaa !25
  %11 = load i32, ptr @c4, align 4, !tbaa !25
  %and2 = and i32 %11, 16316664
  %12 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i112 = add nsw i32 %12, 1
  store i32 %inc.i112, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %13 = mul i32 %and2, 987654323
  %mul.i113 = add i32 %12, 1975308646
  %add.i114 = add i32 %mul.i113, %13
  %or.i115 = tail call i32 @llvm.fshl.i32(i32 %add.i114, i32 %add.i114, i32 16)
  %mul2.i116 = mul i32 %or.i115, 123456791
  %add3.i117 = add i32 %mul2.i116, %12
  %idxprom.i.i118 = sext i32 %12 to i64
  %arrayidx.i.i119 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i118
  store i32 %add3.i117, ptr %arrayidx.i.i119, align 4, !tbaa !25
  %14 = load i32, ptr @c4, align 4, !tbaa !25
  %and4 = and i32 %14, -117901064
  %15 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i120 = add nsw i32 %15, 1
  store i32 %inc.i120, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %16 = mul i32 %and4, 987654323
  %mul.i121 = add i32 %15, -1332004327
  %add.i122 = add i32 %mul.i121, %16
  %or.i123 = tail call i32 @llvm.fshl.i32(i32 %add.i122, i32 %add.i122, i32 16)
  %mul2.i124 = mul i32 %or.i123, 123456791
  %add3.i125 = add i32 %mul2.i124, %15
  %idxprom.i.i126 = sext i32 %15 to i64
  %arrayidx.i.i127 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i126
  store i32 %add3.i125, ptr %arrayidx.i.i127, align 4, !tbaa !25
  %17 = load i32, ptr @c4, align 4, !tbaa !25
  %and6 = and i32 %17, 14737632
  %18 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i128 = add nsw i32 %18, 1
  store i32 %inc.i128, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %19 = mul i32 %and6, 987654323
  %mul.i129 = add i32 %18, -344350004
  %add.i130 = add i32 %mul.i129, %19
  %or.i131 = tail call i32 @llvm.fshl.i32(i32 %add.i130, i32 %add.i130, i32 16)
  %mul2.i132 = mul i32 %or.i131, 123456791
  %add3.i133 = add i32 %mul2.i132, %18
  %idxprom.i.i134 = sext i32 %18 to i64
  %arrayidx.i.i135 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i134
  store i32 %add3.i133, ptr %arrayidx.i.i135, align 4, !tbaa !25
  %20 = load i32, ptr @c4, align 4, !tbaa !25
  %and8 = and i32 %20, -522133280
  %21 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i136 = add nsw i32 %21, 1
  store i32 %inc.i136, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %22 = mul i32 %and8, 987654323
  %mul.i137 = add i32 %21, 643304319
  %add.i138 = add i32 %mul.i137, %22
  %or.i139 = tail call i32 @llvm.fshl.i32(i32 %add.i138, i32 %add.i138, i32 16)
  %mul2.i140 = mul i32 %or.i139, 123456791
  %add3.i141 = add i32 %mul2.i140, %21
  %idxprom.i.i142 = sext i32 %21 to i64
  %arrayidx.i.i143 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i142
  store i32 %add3.i141, ptr %arrayidx.i.i143, align 4, !tbaa !25
  %23 = load i32, ptr @c4, align 4, !tbaa !25
  %and10 = and i32 %23, 15790335
  %24 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i144 = add nsw i32 %24, 1
  store i32 %inc.i144, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %25 = mul i32 %and10, 987654323
  %mul.i145 = add i32 %24, 1630958642
  %add.i146 = add i32 %mul.i145, %25
  %or.i147 = tail call i32 @llvm.fshl.i32(i32 %add.i146, i32 %add.i146, i32 16)
  %mul2.i148 = mul i32 %or.i147, 123456791
  %add3.i149 = add i32 %mul2.i148, %24
  %idxprom.i.i150 = sext i32 %24 to i64
  %arrayidx.i.i151 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i150
  store i32 %add3.i149, ptr %arrayidx.i.i151, align 4, !tbaa !25
  %26 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i152 = add nsw i32 %26, 1
  store i32 %inc.i152, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i153 = mul i32 %seenbefore, 987654323
  %add.i154 = add i32 %26, %mul.i153
  %or.i155 = tail call i32 @llvm.fshl.i32(i32 %add.i154, i32 %add.i154, i32 16)
  %mul2.i156 = mul i32 %or.i155, 123456791
  %add3.i157 = add i32 %mul2.i156, %26
  %idxprom.i.i158 = sext i32 %26 to i64
  %arrayidx.i.i159 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i158
  store i32 %add3.i157, ptr %arrayidx.i.i159, align 4, !tbaa !25
  %27 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i160 = add nsw i32 %27, 1
  store i32 %inc.i160, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i161 = mul i32 %howmany, 987654323
  %add.i162 = add i32 %27, %mul.i161
  %or.i163 = tail call i32 @llvm.fshl.i32(i32 %add.i162, i32 %add.i162, i32 16)
  %mul2.i164 = mul i32 %or.i163, 123456791
  %add3.i165 = add i32 %mul2.i164, %27
  %idxprom.i.i166 = sext i32 %27 to i64
  %arrayidx.i.i167 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i166
  store i32 %add3.i165, ptr %arrayidx.i.i167, align 4, !tbaa !25
  %28 = load i32, ptr @c4, align 4, !tbaa !25
  %and12 = and i32 %28, 16711935
  %29 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i168 = add nsw i32 %29, 1
  store i32 %inc.i168, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i169 = mul i32 %and12, 987654323
  %add.i170 = add i32 %mul.i169, %29
  %or.i171 = tail call i32 @llvm.fshl.i32(i32 %add.i170, i32 %add.i170, i32 16)
  %mul2.i172 = mul i32 %or.i171, 123456791
  %add3.i173 = add i32 %mul2.i172, %29
  %idxprom.i.i174 = sext i32 %29 to i64
  %arrayidx.i.i175 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i174
  store i32 %add3.i173, ptr %arrayidx.i.i175, align 4, !tbaa !25
  %30 = load i32, ptr @c4, align 4, !tbaa !25
  %and13 = and i32 %30, -16776961
  %31 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i176 = add nsw i32 %31, 1
  store i32 %inc.i176, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i177 = mul i32 %and13, 987654323
  %add.i178 = add i32 %mul.i177, %31
  %or.i179 = tail call i32 @llvm.fshl.i32(i32 %add.i178, i32 %add.i178, i32 16)
  %mul2.i180 = mul i32 %or.i179, 123456791
  %add3.i181 = add i32 %mul2.i180, %31
  %idxprom.i.i182 = sext i32 %31 to i64
  %arrayidx.i.i183 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i182
  store i32 %add3.i181, ptr %arrayidx.i.i183, align 4, !tbaa !25
  %32 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i = add nsw i32 %32, -1
  %33 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i = add nsw i32 %33, -1
  %and.i = and i32 %sub3.i, %sub.i
  %34 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i184 = sext i32 %and.i to i64
  %arrayidx.i.i185 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i184
  %35 = load i8, ptr %arrayidx.i.i185, align 1, !tbaa !9
  %conv.i = zext i8 %35 to i32
  %sub.i186 = add nsw i32 %32, -5
  %and.i188 = and i32 %sub3.i, %sub.i186
  %idxprom.i.i189 = sext i32 %and.i188 to i64
  %arrayidx.i.i190 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i189
  %36 = load i8, ptr %arrayidx.i.i190, align 1, !tbaa !9
  %conv.i191 = zext i8 %36 to i32
  %shl15 = shl nuw nsw i32 %conv.i191, 8
  %or = or i32 %shl15, %conv.i
  %37 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i192 = add nsw i32 %37, 1
  store i32 %inc.i192, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i193 = mul i32 %or, 987654323
  %add.i194 = add i32 %mul.i193, %37
  %or.i195 = tail call i32 @llvm.fshl.i32(i32 %add.i194, i32 %add.i194, i32 16)
  %mul2.i196 = mul i32 %or.i195, 123456791
  %add3.i197 = add i32 %mul2.i196, %37
  %idxprom.i.i198 = sext i32 %37 to i64
  %arrayidx.i.i199 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i198
  store i32 %add3.i197, ptr %arrayidx.i.i199, align 4, !tbaa !25
  %38 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i200 = add nsw i32 %38, -1
  %39 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i201 = add nsw i32 %39, -1
  %and.i202 = and i32 %sub3.i201, %sub.i200
  %idxprom.i.i203 = sext i32 %and.i202 to i64
  %arrayidx.i.i204 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i203
  %40 = load i8, ptr %arrayidx.i.i204, align 1, !tbaa !9
  %conv.i205 = zext i8 %40 to i32
  %sub.i206 = add nsw i32 %38, -6
  %and.i208 = and i32 %sub3.i201, %sub.i206
  %idxprom.i.i209 = sext i32 %and.i208 to i64
  %arrayidx.i.i210 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i209
  %41 = load i8, ptr %arrayidx.i.i210, align 1, !tbaa !9
  %conv.i211 = zext i8 %41 to i32
  %shl18 = shl nuw nsw i32 %conv.i211, 8
  %or19 = or i32 %shl18, %conv.i205
  %42 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i212 = add nsw i32 %42, 1
  store i32 %inc.i212, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i213 = mul i32 %or19, 987654323
  %add.i214 = add i32 %mul.i213, %42
  %or.i215 = tail call i32 @llvm.fshl.i32(i32 %add.i214, i32 %add.i214, i32 16)
  %mul2.i216 = mul i32 %or.i215, 123456791
  %add3.i217 = add i32 %mul2.i216, %42
  %idxprom.i.i218 = sext i32 %42 to i64
  %arrayidx.i.i219 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i218
  store i32 %add3.i217, ptr %arrayidx.i.i219, align 4, !tbaa !25
  %43 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i220 = add nsw i32 %43, -3
  %44 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i221 = add nsw i32 %44, -1
  %and.i222 = and i32 %sub3.i221, %sub.i220
  %idxprom.i.i223 = sext i32 %and.i222 to i64
  %arrayidx.i.i224 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i223
  %45 = load i8, ptr %arrayidx.i.i224, align 1, !tbaa !9
  %conv.i225 = zext i8 %45 to i32
  %sub.i226 = add nsw i32 %43, -6
  %and.i228 = and i32 %sub3.i221, %sub.i226
  %idxprom.i.i229 = sext i32 %and.i228 to i64
  %arrayidx.i.i230 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i229
  %46 = load i8, ptr %arrayidx.i.i230, align 1, !tbaa !9
  %conv.i231 = zext i8 %46 to i32
  %shl22 = shl nuw nsw i32 %conv.i231, 8
  %or23 = or i32 %shl22, %conv.i225
  %47 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i232 = add nsw i32 %47, 1
  store i32 %inc.i232, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i233 = mul i32 %or23, 987654323
  %add.i234 = add i32 %mul.i233, %47
  %or.i235 = tail call i32 @llvm.fshl.i32(i32 %add.i234, i32 %add.i234, i32 16)
  %mul2.i236 = mul i32 %or.i235, 123456791
  %add3.i237 = add i32 %mul2.i236, %47
  %idxprom.i.i238 = sext i32 %47 to i64
  %arrayidx.i.i239 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i238
  store i32 %add3.i237, ptr %arrayidx.i.i239, align 4, !tbaa !25
  %48 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i240 = add nsw i32 %48, -4
  %49 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i241 = add nsw i32 %49, -1
  %and.i242 = and i32 %sub3.i241, %sub.i240
  %idxprom.i.i243 = sext i32 %and.i242 to i64
  %arrayidx.i.i244 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i243
  %50 = load i8, ptr %arrayidx.i.i244, align 1, !tbaa !9
  %conv.i245 = zext i8 %50 to i32
  %sub.i246 = add nsw i32 %48, -8
  %and.i248 = and i32 %sub3.i241, %sub.i246
  %idxprom.i.i249 = sext i32 %and.i248 to i64
  %arrayidx.i.i250 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i249
  %51 = load i8, ptr %arrayidx.i.i250, align 1, !tbaa !9
  %conv.i251 = zext i8 %51 to i32
  %shl26 = shl nuw nsw i32 %conv.i251, 8
  %or27 = or i32 %shl26, %conv.i245
  %52 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i252 = add nsw i32 %52, 1
  store i32 %inc.i252, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i253 = mul i32 %or27, 987654323
  %add.i254 = add i32 %mul.i253, %52
  %or.i255 = tail call i32 @llvm.fshl.i32(i32 %add.i254, i32 %add.i254, i32 16)
  %mul2.i256 = mul i32 %or.i255, 123456791
  %add3.i257 = add i32 %mul2.i256, %52
  %idxprom.i.i258 = sext i32 %52 to i64
  %arrayidx.i.i259 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i258
  store i32 %add3.i257, ptr %arrayidx.i.i259, align 4, !tbaa !25
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  %53 = load i32, ptr @c4, align 4, !tbaa !25
  %and44 = and i32 %53, 1
  %tobool45.not = icmp eq i32 %and44, 0
  br i1 %tobool45.not, label %if.end78, label %if.then46

lpad:                                             ; preds = %init
  %54 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ11sparseModelR5MixeriiE2cm) #39
  resume { ptr, i32 } %54

for.body:                                         ; preds = %if.then, %for.body
  %i.0.neg365 = phi i32 [ -1, %if.then ], [ %i.0.neg, %for.body ]
  %i.0364 = phi i32 [ 1, %if.then ], [ %add29, %for.body ]
  %add29 = add nuw nsw i32 %i.0364, 1
  %55 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i260 = sub nsw i32 %55, %add29
  %56 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i261 = add nsw i32 %56, -1
  %and.i262 = and i32 %sub3.i261, %sub.i260
  %idxprom.i.i263 = sext i32 %and.i262 to i64
  %arrayidx.i.i264 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i263
  %57 = load i8, ptr %arrayidx.i.i264, align 1, !tbaa !9
  %conv.i265 = zext i8 %57 to i32
  %shl31 = shl nuw nsw i32 %conv.i265, 8
  %add32.neg = add nsw i32 %i.0.neg365, -2
  %sub.i266 = add i32 %add32.neg, %55
  %and.i268 = and i32 %sub3.i261, %sub.i266
  %idxprom.i.i269 = sext i32 %and.i268 to i64
  %arrayidx.i.i270 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i269
  %58 = load i8, ptr %arrayidx.i.i270, align 1, !tbaa !9
  %conv.i271 = zext i8 %58 to i32
  %or34 = or i32 %shl31, %conv.i271
  %59 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i272 = add nsw i32 %59, 1
  store i32 %inc.i272, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i273 = mul i32 %or34, 987654323
  %add.i274 = add i32 %mul.i273, %59
  %or.i275 = tail call i32 @llvm.fshl.i32(i32 %add.i274, i32 %add.i274, i32 16)
  %mul2.i276 = mul i32 %or.i275, 123456791
  %add3.i277 = add i32 %mul2.i276, %59
  %idxprom.i.i278 = sext i32 %59 to i64
  %arrayidx.i.i279 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i278
  store i32 %add3.i277, ptr %arrayidx.i.i279, align 4, !tbaa !25
  %60 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i280 = sub nsw i32 %60, %add29
  %61 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i281 = add nsw i32 %61, -1
  %and.i282 = and i32 %sub3.i281, %sub.i280
  %idxprom.i.i283 = sext i32 %and.i282 to i64
  %arrayidx.i.i284 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i283
  %62 = load i8, ptr %arrayidx.i.i284, align 1, !tbaa !9
  %conv.i285 = zext i8 %62 to i32
  %shl37 = shl nuw nsw i32 %conv.i285, 8
  %add38.neg = add nsw i32 %i.0.neg365, -3
  %sub.i286 = add i32 %add38.neg, %60
  %and.i288 = and i32 %sub3.i281, %sub.i286
  %idxprom.i.i289 = sext i32 %and.i288 to i64
  %arrayidx.i.i290 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i289
  %63 = load i8, ptr %arrayidx.i.i290, align 1, !tbaa !9
  %conv.i291 = zext i8 %63 to i32
  %or40 = or i32 %shl37, %conv.i291
  %64 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i292 = add nsw i32 %64, 1
  store i32 %inc.i292, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i293 = mul i32 %or40, 987654323
  %add.i294 = add i32 %mul.i293, %64
  %or.i295 = tail call i32 @llvm.fshl.i32(i32 %add.i294, i32 %add.i294, i32 16)
  %mul2.i296 = mul i32 %or.i295, 123456791
  %add3.i297 = add i32 %mul2.i296, %64
  %idxprom.i.i298 = sext i32 %64 to i64
  %arrayidx.i.i299 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i298
  store i32 %add3.i297, ptr %arrayidx.i.i299, align 4, !tbaa !25
  %65 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i300 = sub nsw i32 %65, %i.0364
  %66 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i301 = add nsw i32 %66, -1
  %and.i302 = and i32 %sub3.i301, %sub.i300
  %idxprom.i.i303 = sext i32 %and.i302 to i64
  %arrayidx.i.i304 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i303
  %67 = load i8, ptr %arrayidx.i.i304, align 1, !tbaa !9
  %conv.i305 = zext i8 %67 to i32
  %shl42 = shl nuw nsw i32 %conv.i305, 8
  %or43 = or i32 %shl42, %seenbefore
  %68 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i306 = add nsw i32 %68, 1
  store i32 %inc.i306, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i307 = mul i32 %or43, 987654323
  %add.i308 = add i32 %mul.i307, %68
  %or.i309 = tail call i32 @llvm.fshl.i32(i32 %add.i308, i32 %add.i308, i32 16)
  %mul2.i310 = mul i32 %or.i309, 123456791
  %add3.i311 = add i32 %mul2.i310, %68
  %idxprom.i.i312 = sext i32 %68 to i64
  %arrayidx.i.i313 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i312
  store i32 %add3.i311, ptr %arrayidx.i.i313, align 4, !tbaa !25
  %i.0.neg = xor i32 %i.0364, -1
  %exitcond.not = icmp eq i32 %add29, 8
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !117

if.then46:                                        ; preds = %for.cond.cleanup
  %and47 = and i32 %53, 255
  %call48 = tail call i32 @isalpha(i32 noundef %and47) #44
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %if.else, label %if.end78

if.else:                                          ; preds = %if.then46
  %call52 = tail call i32 @ispunct(i32 noundef %and47) #44
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %if.else55, label %if.end78

if.else55:                                        ; preds = %if.else
  %call57 = tail call i32 @isspace(i32 noundef %and47) #44
  %tobool58.not = icmp eq i32 %call57, 0
  %spec.select = select i1 %tobool58.not, i32 4, i32 3
  br label %if.end78

if.end78:                                         ; preds = %if.else55, %if.else, %if.then46, %for.cond.cleanup
  %fl.0 = phi i32 [ 0, %for.cond.cleanup ], [ 1, %if.then46 ], [ 2, %if.else ], [ %spec.select, %if.else55 ]
  %69 = load i32, ptr @_ZZ11sparseModelR5MixeriiE4mask, align 4, !tbaa !25
  %shl79 = shl i32 %69, 3
  %or80 = or i32 %shl79, %fl.0
  store i32 %or80, ptr @_ZZ11sparseModelR5MixeriiE4mask, align 4, !tbaa !25
  %70 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i314 = add nsw i32 %70, 1
  store i32 %inc.i314, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i315 = mul i32 %or80, 987654323
  %add.i316 = add i32 %mul.i315, %70
  %or.i317 = tail call i32 @llvm.fshl.i32(i32 %add.i316, i32 %add.i316, i32 16)
  %mul2.i318 = mul i32 %or.i317, 123456791
  %add3.i319 = add i32 %mul2.i318, %70
  %idxprom.i.i320 = sext i32 %70 to i64
  %arrayidx.i.i321 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i320
  store i32 %add3.i319, ptr %arrayidx.i.i321, align 4, !tbaa !25
  %shl81 = shl i32 %or80, 8
  %71 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i322 = add nsw i32 %71, -1
  %72 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i323 = add nsw i32 %72, -1
  %and.i324 = and i32 %sub3.i323, %sub.i322
  %idxprom.i.i325 = sext i32 %and.i324 to i64
  %arrayidx.i.i326 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i325
  %73 = load i8, ptr %arrayidx.i.i326, align 1, !tbaa !9
  %conv.i327 = zext i8 %73 to i32
  %or83 = or i32 %shl81, %conv.i327
  %74 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i328 = add nsw i32 %74, 1
  store i32 %inc.i328, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i329 = mul i32 %or83, 987654323
  %add.i330 = add i32 %mul.i329, %74
  %or.i331 = tail call i32 @llvm.fshl.i32(i32 %add.i330, i32 %add.i330, i32 16)
  %mul2.i332 = mul i32 %or.i331, 123456791
  %add3.i333 = add i32 %mul2.i332, %74
  %idxprom.i.i334 = sext i32 %74 to i64
  %arrayidx.i.i335 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i334
  store i32 %add3.i333, ptr %arrayidx.i.i335, align 4, !tbaa !25
  %shl84 = shl i32 %or80, 17
  %75 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i336 = add nsw i32 %75, -2
  %76 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i337 = add nsw i32 %76, -1
  %and.i338 = and i32 %sub3.i337, %sub.i336
  %idxprom.i.i339 = sext i32 %and.i338 to i64
  %arrayidx.i.i340 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i339
  %77 = load i8, ptr %arrayidx.i.i340, align 1, !tbaa !9
  %conv.i341 = zext i8 %77 to i32
  %shl86 = shl nuw nsw i32 %conv.i341, 8
  %or87 = or i32 %shl86, %shl84
  %sub.i342 = add nsw i32 %75, -3
  %and.i344 = and i32 %sub3.i337, %sub.i342
  %idxprom.i.i345 = sext i32 %and.i344 to i64
  %arrayidx.i.i346 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i345
  %78 = load i8, ptr %arrayidx.i.i346, align 1, !tbaa !9
  %conv.i347 = zext i8 %78 to i32
  %or89 = or i32 %or87, %conv.i347
  %79 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i348 = add nsw i32 %79, 1
  store i32 %inc.i348, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i349 = mul i32 %or89, 987654323
  %add.i350 = add i32 %mul.i349, %79
  %or.i351 = tail call i32 @llvm.fshl.i32(i32 %add.i350, i32 %add.i350, i32 16)
  %mul2.i352 = mul i32 %or.i351, 123456791
  %add3.i353 = add i32 %mul2.i352, %79
  %idxprom.i.i354 = sext i32 %79 to i64
  %arrayidx.i.i355 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i354
  store i32 %add3.i353, ptr %arrayidx.i.i355, align 4, !tbaa !25
  %and90 = and i32 %or80, 511
  %80 = load i32, ptr @c4, align 4, !tbaa !25
  %and91 = shl i32 %80, 9
  %shl92 = and i32 %and91, -505290752
  %or93 = or i32 %shl92, %and90
  %81 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i356 = add nsw i32 %81, 1
  store i32 %inc.i356, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i357 = mul i32 %or93, 987654323
  %add.i358 = add i32 %mul.i357, %81
  %or.i359 = tail call i32 @llvm.fshl.i32(i32 %add.i358, i32 %add.i358, i32 16)
  %mul2.i360 = mul i32 %or.i359, 123456791
  %add3.i361 = add i32 %mul2.i360, %81
  %idxprom.i.i362 = sext i32 %81 to i64
  %arrayidx.i.i363 = getelementptr inbounds i32, ptr %7, i64 %idxprom.i.i362
  store i32 %add3.i361, ptr %arrayidx.i.i363, align 4, !tbaa !25
  %.pre = load i32, ptr @bpos, align 4, !tbaa !25
  br label %if.end94

if.end94:                                         ; preds = %if.end78, %init.end
  %82 = phi i32 [ %.pre, %if.end78 ], [ %4, %init.end ]
  %83 = load i32, ptr @c0, align 4, !tbaa !25
  %84 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i = add nsw i32 %84, -1
  %85 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i = add nsw i32 %85, -1
  %and.i.i = and i32 %sub3.i.i, %sub.i.i
  %86 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i = sext i32 %and.i.i to i64
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %86, i64 %idxprom.i.i.i
  %87 = load i8, ptr %arrayidx.i.i.i, align 1, !tbaa !9
  %conv.i.i = zext i8 %87 to i32
  %88 = load i32, ptr @y, align 4, !tbaa !25
  %call2.i = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11sparseModelR5MixeriiE2cm, ptr noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %83, i32 noundef %82, i32 noundef %conv.i.i, i32 noundef %88)
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare i32 @isalpha(i32 noundef) local_unnamed_addr #16

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare i32 @ispunct(i32 noundef) local_unnamed_addr #16

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare i32 @isspace(i32 noundef) local_unnamed_addr #16

; Function Attrs: mustprogress uwtable
define dso_local void @_Z13distanceModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %m) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZ13distanceModelR5MixerE2cr acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !110

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13distanceModelR5MixerE2cr) #39
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  %2 = load i32, ptr @level, align 4, !tbaa !25
  %shl = shl i32 65536, %2
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13distanceModelR5MixerE2cr, i32 noundef %shl, i32 noundef 3)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init
  %3 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ13distanceModelR5MixerE2cr, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13distanceModelR5MixerE2cr) #39
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %entry
  %4 = load i32, ptr @bpos, align 4, !tbaa !25
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end21

if.then:                                          ; preds = %init.end
  %5 = load i32, ptr @c4, align 4, !tbaa !25
  %trunc = trunc i32 %5 to i8
  switch i8 %trunc, label %if.then.if.end11_crit_edge [
    i8 0, label %if.then2
    i8 32, label %if.then4
    i8 -1, label %if.then10
    i8 13, label %if.then10
    i8 10, label %if.then10
  ]

if.then.if.end11_crit_edge:                       ; preds = %if.then
  %.pre = load i32, ptr @pos, align 4, !tbaa !25
  br label %if.end11

if.then2:                                         ; preds = %if.then
  %6 = load i32, ptr @pos, align 4, !tbaa !25
  store i32 %6, ptr @_ZZ13distanceModelR5MixerE5pos00, align 4, !tbaa !25
  br label %if.end11

lpad:                                             ; preds = %init
  %7 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ13distanceModelR5MixerE2cr) #39
  resume { ptr, i32 } %7

if.then4:                                         ; preds = %if.then
  %8 = load i32, ptr @pos, align 4, !tbaa !25
  store i32 %8, ptr @_ZZ13distanceModelR5MixerE5pos20, align 4, !tbaa !25
  br label %if.end11

if.then10:                                        ; preds = %if.then, %if.then, %if.then
  %9 = load i32, ptr @pos, align 4, !tbaa !25
  store i32 %9, ptr @_ZZ13distanceModelR5MixerE5posnl, align 4, !tbaa !25
  br label %if.end11

if.end11:                                         ; preds = %if.then.if.end11_crit_edge, %if.then4, %if.then2, %if.then10
  %10 = phi i32 [ %.pre, %if.then.if.end11_crit_edge ], [ %8, %if.then4 ], [ %6, %if.then2 ], [ %9, %if.then10 ]
  %11 = load i32, ptr @_ZZ13distanceModelR5MixerE5pos00, align 4, !tbaa !25
  %sub = sub nsw i32 %10, %11
  %cond.i = tail call i32 @llvm.smin.i32(i32 %sub, i32 255)
  %and = shl i32 %5, 8
  %shl12 = and i32 %and, 65280
  %or = or i32 %cond.i, %shl12
  %12 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %inc.i = add nsw i32 %12, 1
  store i32 %inc.i, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %mul.i = mul i32 %or, 987654323
  %add.i = add i32 %mul.i, %12
  %or.i = tail call i32 @llvm.fshl.i32(i32 %add.i, i32 %add.i, i32 16)
  %mul2.i = mul i32 %or.i, 123456791
  %add3.i = add i32 %mul2.i, %12
  %13 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %idxprom.i.i = sext i32 %12 to i64
  %arrayidx.i.i = getelementptr inbounds i32, ptr %13, i64 %idxprom.i.i
  store i32 %add3.i, ptr %arrayidx.i.i, align 4, !tbaa !25
  %14 = load i32, ptr @pos, align 4, !tbaa !25
  %15 = load i32, ptr @_ZZ13distanceModelR5MixerE5pos20, align 4, !tbaa !25
  %sub13 = sub nsw i32 %14, %15
  %cond.i32 = tail call i32 @llvm.smin.i32(i32 %sub13, i32 255)
  %or16 = or i32 %cond.i32, %shl12
  %16 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %inc.i33 = add nsw i32 %16, 1
  store i32 %inc.i33, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %mul.i34 = mul i32 %or16, 987654323
  %add.i35 = add i32 %mul.i34, %16
  %or.i36 = tail call i32 @llvm.fshl.i32(i32 %add.i35, i32 %add.i35, i32 16)
  %mul2.i37 = mul i32 %or.i36, 123456791
  %add3.i38 = add i32 %mul2.i37, %16
  %idxprom.i.i39 = sext i32 %16 to i64
  %arrayidx.i.i40 = getelementptr inbounds i32, ptr %13, i64 %idxprom.i.i39
  store i32 %add3.i38, ptr %arrayidx.i.i40, align 4, !tbaa !25
  %17 = load i32, ptr @pos, align 4, !tbaa !25
  %18 = load i32, ptr @_ZZ13distanceModelR5MixerE5posnl, align 4, !tbaa !25
  %sub17 = sub nsw i32 %17, %18
  %cond.i41 = tail call i32 @llvm.smin.i32(i32 %sub17, i32 255)
  %add = add nuw nsw i32 %shl12, 234567
  %or20 = or i32 %cond.i41, %add
  %19 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %inc.i42 = add nsw i32 %19, 1
  store i32 %inc.i42, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %mul.i43 = mul i32 %or20, 987654323
  %add.i44 = add i32 %mul.i43, %19
  %or.i45 = tail call i32 @llvm.fshl.i32(i32 %add.i44, i32 %add.i44, i32 16)
  %mul2.i46 = mul i32 %or.i45, 123456791
  %add3.i47 = add i32 %mul2.i46, %19
  %idxprom.i.i48 = sext i32 %19 to i64
  %arrayidx.i.i49 = getelementptr inbounds i32, ptr %13, i64 %idxprom.i.i48
  store i32 %add3.i47, ptr %arrayidx.i.i49, align 4, !tbaa !25
  %.pre50 = load i32, ptr @bpos, align 4, !tbaa !25
  br label %if.end21

if.end21:                                         ; preds = %if.end11, %init.end
  %20 = phi i32 [ %.pre50, %if.end11 ], [ %4, %init.end ]
  %21 = load i32, ptr @c0, align 4, !tbaa !25
  %22 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i = add nsw i32 %22, -1
  %23 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i = add nsw i32 %23, -1
  %and.i.i = and i32 %sub3.i.i, %sub.i.i
  %24 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i = sext i32 %and.i.i to i64
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %24, i64 %idxprom.i.i.i
  %25 = load i8, ptr %arrayidx.i.i.i, align 1, !tbaa !9
  %conv.i.i = zext i8 %25 to i32
  %26 = load i32, ptr @y, align 4, !tbaa !25
  %call2.i = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13distanceModelR5MixerE2cr, ptr noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %21, i32 noundef %20, i32 noundef %conv.i.i, i32 noundef %26)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z8bmpModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %m) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm1 acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !110

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm1) #39
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm1, i32 noundef 131072)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init
  %2 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm1) #39
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %entry
  %3 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm2 acquire, align 8
  %guard.uninitialized1 = icmp eq i8 %3, 0
  br i1 %guard.uninitialized1, label %init.check2, label %init.end7, !prof !110

init.check2:                                      ; preds = %init.end
  %4 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm2) #39
  %tobool3.not = icmp eq i32 %4, 0
  br i1 %tobool3.not, label %init.end7, label %init4

init4:                                            ; preds = %init.check2
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm2, i32 noundef 131072)
          to label %invoke.cont6 unwind label %lpad5

invoke.cont6:                                     ; preds = %init4
  %5 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm2) #39
  br label %init.end7

init.end7:                                        ; preds = %invoke.cont6, %init.check2, %init.end
  %6 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm3 acquire, align 8
  %guard.uninitialized8 = icmp eq i8 %6, 0
  br i1 %guard.uninitialized8, label %init.check9, label %init.end14, !prof !110

init.check9:                                      ; preds = %init.end7
  %7 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm3) #39
  %tobool10.not = icmp eq i32 %7, 0
  br i1 %tobool10.not, label %init.end14, label %init11

init11:                                           ; preds = %init.check9
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm3, i32 noundef 131072)
          to label %invoke.cont13 unwind label %lpad12

invoke.cont13:                                    ; preds = %init11
  %8 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm3, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm3) #39
  br label %init.end14

init.end14:                                       ; preds = %invoke.cont13, %init.check9, %init.end7
  %9 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm4 acquire, align 8
  %guard.uninitialized15 = icmp eq i8 %9, 0
  br i1 %guard.uninitialized15, label %init.check16, label %init.end21, !prof !110

init.check16:                                     ; preds = %init.end14
  %10 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm4) #39
  %tobool17.not = icmp eq i32 %10, 0
  br i1 %tobool17.not, label %init.end21, label %init18

init18:                                           ; preds = %init.check16
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm4, i32 noundef 131072)
          to label %invoke.cont20 unwind label %lpad19

invoke.cont20:                                    ; preds = %init18
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm4, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm4) #39
  br label %init.end21

init.end21:                                       ; preds = %invoke.cont20, %init.check16, %init.end14
  %12 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm5 acquire, align 8
  %guard.uninitialized22 = icmp eq i8 %12, 0
  br i1 %guard.uninitialized22, label %init.check23, label %init.end28, !prof !110

init.check23:                                     ; preds = %init.end21
  %13 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm5) #39
  %tobool24.not = icmp eq i32 %13, 0
  br i1 %tobool24.not, label %init.end28, label %init25

init25:                                           ; preds = %init.check23
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm5, i32 noundef 131072)
          to label %invoke.cont27 unwind label %lpad26

invoke.cont27:                                    ; preds = %init25
  %14 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm5, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm5) #39
  br label %init.end28

init.end28:                                       ; preds = %invoke.cont27, %init.check23, %init.end21
  %15 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm6 acquire, align 8
  %guard.uninitialized29 = icmp eq i8 %15, 0
  br i1 %guard.uninitialized29, label %init.check30, label %init.end35, !prof !110

init.check30:                                     ; preds = %init.end28
  %16 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm6) #39
  %tobool31.not = icmp eq i32 %16, 0
  br i1 %tobool31.not, label %init.end35, label %init32

init32:                                           ; preds = %init.check30
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm6, i32 noundef 131072)
          to label %invoke.cont34 unwind label %lpad33

invoke.cont34:                                    ; preds = %init32
  %17 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm6, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm6) #39
  br label %init.end35

init.end35:                                       ; preds = %invoke.cont34, %init.check30, %init.end28
  %18 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm7 acquire, align 8
  %guard.uninitialized36 = icmp eq i8 %18, 0
  br i1 %guard.uninitialized36, label %init.check37, label %init.end42, !prof !110

init.check37:                                     ; preds = %init.end35
  %19 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm7) #39
  %tobool38.not = icmp eq i32 %19, 0
  br i1 %tobool38.not, label %init.end42, label %init39

init39:                                           ; preds = %init.check37
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm7, i32 noundef 131072)
          to label %invoke.cont41 unwind label %lpad40

invoke.cont41:                                    ; preds = %init39
  %20 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm7, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm7) #39
  br label %init.end42

init.end42:                                       ; preds = %invoke.cont41, %init.check37, %init.end35
  %21 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm8 acquire, align 8
  %guard.uninitialized43 = icmp eq i8 %21, 0
  br i1 %guard.uninitialized43, label %init.check44, label %init.end49, !prof !110

init.check44:                                     ; preds = %init.end42
  %22 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm8) #39
  %tobool45.not = icmp eq i32 %22, 0
  br i1 %tobool45.not, label %init.end49, label %init46

init46:                                           ; preds = %init.check44
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm8, i32 noundef 131072)
          to label %invoke.cont48 unwind label %lpad47

invoke.cont48:                                    ; preds = %init46
  %23 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm8, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm8) #39
  br label %init.end49

init.end49:                                       ; preds = %invoke.cont48, %init.check44, %init.end42
  %24 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm9 acquire, align 8
  %guard.uninitialized50 = icmp eq i8 %24, 0
  br i1 %guard.uninitialized50, label %init.check51, label %init.end56, !prof !110

init.check51:                                     ; preds = %init.end49
  %25 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm9) #39
  %tobool52.not = icmp eq i32 %25, 0
  br i1 %tobool52.not, label %init.end56, label %init53

init53:                                           ; preds = %init.check51
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm9, i32 noundef 262144)
          to label %invoke.cont55 unwind label %lpad54

invoke.cont55:                                    ; preds = %init53
  %26 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm9, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm9) #39
  br label %init.end56

init.end56:                                       ; preds = %invoke.cont55, %init.check51, %init.end49
  %27 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE5scm10 acquire, align 8
  %guard.uninitialized57 = icmp eq i8 %27, 0
  br i1 %guard.uninitialized57, label %init.check58, label %init.end63, !prof !110

init.check58:                                     ; preds = %init.end56
  %28 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE5scm10) #39
  %tobool59.not = icmp eq i32 %28, 0
  br i1 %tobool59.not, label %init.end63, label %init60

init60:                                           ; preds = %init.check58
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE5scm10, i32 noundef 131072)
          to label %invoke.cont62 unwind label %lpad61

invoke.cont62:                                    ; preds = %init60
  %29 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE5scm10, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE5scm10) #39
  br label %init.end63

init.end63:                                       ; preds = %invoke.cont62, %init.check58, %init.end56
  %30 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE2cm acquire, align 8
  %guard.uninitialized64 = icmp eq i8 %30, 0
  br i1 %guard.uninitialized64, label %init.check65, label %init.end70, !prof !110

init.check65:                                     ; preds = %init.end63
  %31 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE2cm) #39
  %tobool66.not = icmp eq i32 %31, 0
  br i1 %tobool66.not, label %init.end70, label %init67

init67:                                           ; preds = %init.check65
  %32 = load i32, ptr @level, align 4, !tbaa !25
  %mul = shl i32 262144, %32
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8bmpModelR5MixerE2cm, i32 noundef %mul, i32 noundef 13)
          to label %invoke.cont69 unwind label %lpad68

invoke.cont69:                                    ; preds = %init67
  %33 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE2cm) #39
  br label %init.end70

init.end70:                                       ; preds = %invoke.cont69, %init.check65, %init.end63
  %34 = load i32, ptr @bpos, align 4, !tbaa !25
  %tobool71.not = icmp eq i32 %34, 0
  br i1 %tobool71.not, label %land.lhs.true, label %if.end172

land.lhs.true:                                    ; preds = %init.end70
  %35 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i = add nsw i32 %35, -54
  %36 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i = add nsw i32 %36, -1
  %and.i = and i32 %sub3.i, %sub.i
  %37 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %37, i64 %idxprom.i.i
  %38 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %cmp = icmp eq i8 %38, 66
  br i1 %cmp, label %land.lhs.true72, label %if.end94

land.lhs.true72:                                  ; preds = %land.lhs.true
  %sub.i402 = add nsw i32 %35, -53
  %and.i404 = and i32 %sub3.i, %sub.i402
  %idxprom.i.i405 = sext i32 %and.i404 to i64
  %arrayidx.i.i406 = getelementptr inbounds i8, ptr %37, i64 %idxprom.i.i405
  %39 = load i8, ptr %arrayidx.i.i406, align 1, !tbaa !9
  %cmp74 = icmp eq i8 %39, 77
  br i1 %cmp74, label %land.lhs.true75, label %if.end94

land.lhs.true75:                                  ; preds = %land.lhs.true72
  %sub.i.i = add i32 %35, -44
  %and.i.i = and i32 %sub3.i, %sub.i.i
  %idxprom.i.i.i = sext i32 %and.i.i to i64
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %37, i64 %idxprom.i.i.i
  %40 = load i8, ptr %arrayidx.i.i.i, align 1, !tbaa !9
  %conv.i.i = zext i8 %40 to i32
  %sub.i13.i = add i32 %35, -43
  %and.i15.i = and i32 %sub3.i, %sub.i13.i
  %idxprom.i.i16.i = sext i32 %and.i15.i to i64
  %arrayidx.i.i17.i = getelementptr inbounds i8, ptr %37, i64 %idxprom.i.i16.i
  %41 = load i8, ptr %arrayidx.i.i17.i, align 1, !tbaa !9
  %conv.i18.i = zext i8 %41 to i32
  %mul.i = shl nuw nsw i32 %conv.i18.i, 8
  %add.i = or i32 %mul.i, %conv.i.i
  %sub.i19.i = add i32 %35, -42
  %and.i21.i = and i32 %sub3.i, %sub.i19.i
  %idxprom.i.i22.i = sext i32 %and.i21.i to i64
  %arrayidx.i.i23.i = getelementptr inbounds i8, ptr %37, i64 %idxprom.i.i22.i
  %42 = load i8, ptr %arrayidx.i.i23.i, align 1, !tbaa !9
  %conv.i24.i = zext i8 %42 to i32
  %mul4.i = shl nuw nsw i32 %conv.i24.i, 16
  %add5.i = or i32 %add.i, %mul4.i
  %sub.i25.i = add i32 %35, -41
  %and.i27.i = and i32 %sub3.i, %sub.i25.i
  %idxprom.i.i28.i = sext i32 %and.i27.i to i64
  %arrayidx.i.i29.i = getelementptr inbounds i8, ptr %37, i64 %idxprom.i.i28.i
  %43 = load i8, ptr %arrayidx.i.i29.i, align 1, !tbaa !9
  %conv.i30.i = zext i8 %43 to i32
  %mul8.i = shl nuw nsw i32 %conv.i30.i, 24
  %add9.i = or i32 %add5.i, %mul8.i
  %cmp77 = icmp eq i32 %add9.i, 54
  br i1 %cmp77, label %land.lhs.true78, label %if.end94

land.lhs.true78:                                  ; preds = %land.lhs.true75
  %sub.i.i408 = add i32 %35, -40
  %and.i.i410 = and i32 %sub3.i, %sub.i.i408
  %idxprom.i.i.i411 = sext i32 %and.i.i410 to i64
  %arrayidx.i.i.i412 = getelementptr inbounds i8, ptr %37, i64 %idxprom.i.i.i411
  %44 = load i8, ptr %arrayidx.i.i.i412, align 1, !tbaa !9
  %conv.i.i413 = zext i8 %44 to i32
  %sub.i13.i414 = add i32 %35, -39
  %and.i15.i415 = and i32 %sub3.i, %sub.i13.i414
  %idxprom.i.i16.i416 = sext i32 %and.i15.i415 to i64
  %arrayidx.i.i17.i417 = getelementptr inbounds i8, ptr %37, i64 %idxprom.i.i16.i416
  %45 = load i8, ptr %arrayidx.i.i17.i417, align 1, !tbaa !9
  %conv.i18.i418 = zext i8 %45 to i32
  %mul.i419 = shl nuw nsw i32 %conv.i18.i418, 8
  %add.i420 = or i32 %mul.i419, %conv.i.i413
  %sub.i19.i421 = add i32 %35, -38
  %and.i21.i422 = and i32 %sub3.i, %sub.i19.i421
  %idxprom.i.i22.i423 = sext i32 %and.i21.i422 to i64
  %arrayidx.i.i23.i424 = getelementptr inbounds i8, ptr %37, i64 %idxprom.i.i22.i423
  %46 = load i8, ptr %arrayidx.i.i23.i424, align 1, !tbaa !9
  %conv.i24.i425 = zext i8 %46 to i32
  %mul4.i426 = shl nuw nsw i32 %conv.i24.i425, 16
  %add5.i427 = or i32 %add.i420, %mul4.i426
  %sub.i25.i428 = add i32 %35, -37
  %and.i27.i429 = and i32 %sub3.i, %sub.i25.i428
  %idxprom.i.i28.i430 = sext i32 %and.i27.i429 to i64
  %arrayidx.i.i29.i431 = getelementptr inbounds i8, ptr %37, i64 %idxprom.i.i28.i430
  %47 = load i8, ptr %arrayidx.i.i29.i431, align 1, !tbaa !9
  %conv.i30.i432 = zext i8 %47 to i32
  %mul8.i433 = shl nuw nsw i32 %conv.i30.i432, 24
  %add9.i434 = or i32 %add5.i427, %mul8.i433
  %cmp80 = icmp eq i32 %add9.i434, 40
  br i1 %cmp80, label %land.lhs.true81, label %if.end94

land.lhs.true81:                                  ; preds = %land.lhs.true78
  %sub.i.i435 = add i32 %35, -24
  %and.i.i437 = and i32 %sub3.i, %sub.i.i435
  %idxprom.i.i.i438 = sext i32 %and.i.i437 to i64
  %arrayidx.i.i.i439 = getelementptr inbounds i8, ptr %37, i64 %idxprom.i.i.i438
  %48 = load i8, ptr %arrayidx.i.i.i439, align 1, !tbaa !9
  %conv.i.i440 = zext i8 %48 to i32
  %sub.i13.i441 = add i32 %35, -23
  %and.i15.i442 = and i32 %sub3.i, %sub.i13.i441
  %idxprom.i.i16.i443 = sext i32 %and.i15.i442 to i64
  %arrayidx.i.i17.i444 = getelementptr inbounds i8, ptr %37, i64 %idxprom.i.i16.i443
  %49 = load i8, ptr %arrayidx.i.i17.i444, align 1, !tbaa !9
  %conv.i18.i445 = zext i8 %49 to i32
  %mul.i446 = shl nuw nsw i32 %conv.i18.i445, 8
  %add.i447 = or i32 %mul.i446, %conv.i.i440
  %sub.i19.i448 = add i32 %35, -22
  %and.i21.i449 = and i32 %sub3.i, %sub.i19.i448
  %idxprom.i.i22.i450 = sext i32 %and.i21.i449 to i64
  %arrayidx.i.i23.i451 = getelementptr inbounds i8, ptr %37, i64 %idxprom.i.i22.i450
  %50 = load i8, ptr %arrayidx.i.i23.i451, align 1, !tbaa !9
  %conv.i24.i452 = zext i8 %50 to i32
  %mul4.i453 = shl nuw nsw i32 %conv.i24.i452, 16
  %add5.i454 = or i32 %add.i447, %mul4.i453
  %sub.i25.i455 = add i32 %35, -21
  %and.i27.i456 = and i32 %sub3.i, %sub.i25.i455
  %idxprom.i.i28.i457 = sext i32 %and.i27.i456 to i64
  %arrayidx.i.i29.i458 = getelementptr inbounds i8, ptr %37, i64 %idxprom.i.i28.i457
  %51 = load i8, ptr %arrayidx.i.i29.i458, align 1, !tbaa !9
  %conv.i30.i459 = zext i8 %51 to i32
  %mul8.i460 = shl nuw nsw i32 %conv.i30.i459, 24
  %add9.i461 = or i32 %add5.i454, %mul8.i460
  %cmp83 = icmp eq i32 %add9.i461, 0
  br i1 %cmp83, label %if.then, label %if.end94

if.then:                                          ; preds = %land.lhs.true81
  %call84 = tail call noundef i32 @_Z2i4i(i32 noundef 36)
  %add = add i32 %call84, 3
  %and = and i32 %add, -4
  %mul85 = mul i32 %and, 3
  store i32 %mul85, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  %call86 = tail call noundef i32 @_Z2i4i(i32 noundef 32)
  %52 = load i32, ptr @pos, align 4, !tbaa !25
  store i32 %52, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !25
  %53 = load i32, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  %cmp87 = icmp slt i32 %53, 196608
  %cmp89 = icmp slt i32 %call86, 65536
  %or.cond = and i1 %cmp89, %cmp87
  br i1 %or.cond, label %if.then90, label %if.end94

if.then90:                                        ; preds = %if.then
  %mul91 = mul nsw i32 %53, %call86
  %add92 = add nsw i32 %mul91, %52
  store i32 %add92, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !25
  %div = sdiv i32 %53, 3
  %call93 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str, i32 noundef %div, i32 noundef %call86)
  br label %if.end94

lpad:                                             ; preds = %init
  %54 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad5:                                            ; preds = %init4
  %55 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad12:                                           ; preds = %init11
  %56 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad19:                                           ; preds = %init18
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad26:                                           ; preds = %init25
  %58 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad33:                                           ; preds = %init32
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad40:                                           ; preds = %init39
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad47:                                           ; preds = %init46
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad54:                                           ; preds = %init53
  %62 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad61:                                           ; preds = %init60
  %63 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad68:                                           ; preds = %init67
  %64 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

if.end94:                                         ; preds = %if.then, %if.then90, %land.lhs.true81, %land.lhs.true78, %land.lhs.true75, %land.lhs.true72, %land.lhs.true
  %.pr = load i32, ptr @bpos, align 4, !tbaa !25
  %tobool95.not = icmp eq i32 %.pr, 0
  br i1 %tobool95.not, label %if.then96, label %if.end172

if.then96:                                        ; preds = %if.end94
  %65 = load i32, ptr @c4, align 4
  %cmp97 = icmp eq i32 %65, 1229531648
  %66 = load i32, ptr @pos, align 4, !tbaa !25
  br i1 %cmp97, label %if.then98, label %if.then96.if.end99_crit_edge

if.then96.if.end99_crit_edge:                     ; preds = %if.then96
  %.pre1360 = load i32, ptr @_ZZ8bmpModelR5MixerE4tiff, align 4, !tbaa !25
  br label %if.end99

if.then98:                                        ; preds = %if.then96
  store i32 %66, ptr @_ZZ8bmpModelR5MixerE4tiff, align 4, !tbaa !25
  br label %if.end99

if.end99:                                         ; preds = %if.then96.if.end99_crit_edge, %if.then98
  %67 = phi i32 [ %.pre1360, %if.then96.if.end99_crit_edge ], [ %66, %if.then98 ]
  %sub = sub i32 %66, %67
  %cmp100 = icmp eq i32 %sub, 4
  %cmp102 = icmp ne i32 %65, 134217728
  %or.cond330 = and i1 %cmp102, %cmp100
  br i1 %or.cond330, label %if.end104.thread, label %if.end104

if.end104.thread:                                 ; preds = %if.end99
  store i32 0, ptr @_ZZ8bmpModelR5MixerE4tiff, align 4, !tbaa !25
  br label %if.end172

if.end104:                                        ; preds = %if.end99
  %tobool105.not = icmp ne i32 %67, 0
  %sub107 = sub i32 %66, %67
  %cmp108 = icmp eq i32 %sub107, 200
  %or.cond1338 = and i1 %tobool105.not, %cmp108
  br i1 %or.cond1338, label %if.then109, label %if.end172

if.then109:                                       ; preds = %if.end104
  %sub.i.i462 = add i32 %66, -196
  %68 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i463 = add nsw i32 %68, -1
  %and.i.i464 = and i32 %sub3.i.i463, %sub.i.i462
  %69 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i465 = sext i32 %and.i.i464 to i64
  %arrayidx.i.i.i466 = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i.i465
  %70 = load i8, ptr %arrayidx.i.i.i466, align 1, !tbaa !9
  %sub.i3.i = add i32 %66, -195
  %and.i5.i = and i32 %sub3.i.i463, %sub.i3.i
  %idxprom.i.i6.i = sext i32 %and.i5.i to i64
  %arrayidx.i.i7.i = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i6.i
  %71 = load i8, ptr %arrayidx.i.i7.i, align 1, !tbaa !9
  store i32 0, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  %add114 = add i32 %67, 6
  %sub115 = add nsw i32 %66, -12
  %cmp1161342 = icmp slt i32 %add114, %sub115
  br i1 %cmp1161342, label %land.rhs.lr.ph, label %if.end165

land.rhs.lr.ph:                                   ; preds = %if.then109
  %conv.i8.i = zext i8 %71 to i32
  %mul.i468 = shl nuw nsw i32 %conv.i8.i, 8
  %conv.i.i467 = zext i8 %70 to i32
  %add.i469 = or i32 %mul.i468, %conv.i.i467
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.lr.ph, %if.end146
  %dirsize.01348 = phi i32 [ %add.i469, %land.rhs.lr.ph ], [ %dec, %if.end146 ]
  %bpp.01347 = phi i32 [ 0, %land.rhs.lr.ph ], [ %bpp.1, %if.end146 ]
  %compression.01346 = phi i32 [ 0, %land.rhs.lr.ph ], [ %compression.2, %if.end146 ]
  %width.01345 = phi i32 [ 0, %land.rhs.lr.ph ], [ %width.2, %if.end146 ]
  %height113.01344 = phi i32 [ 0, %land.rhs.lr.ph ], [ %height113.2, %if.end146 ]
  %i.01343 = phi i32 [ %add114, %land.rhs.lr.ph ], [ %add147, %if.end146 ]
  %dec = add nsw i32 %dirsize.01348, -1
  %cmp117 = icmp sgt i32 %dirsize.01348, 1
  br i1 %cmp117, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %land.rhs, %if.end146
  %height113.0.lcssa = phi i32 [ %height113.01344, %land.rhs ], [ %height113.2, %if.end146 ]
  %width.0.lcssa = phi i32 [ %width.01345, %land.rhs ], [ %width.2, %if.end146 ]
  %compression.0.lcssa = phi i32 [ %compression.01346, %land.rhs ], [ %compression.2, %if.end146 ]
  %bpp.0.lcssa = phi i32 [ %bpp.01347, %land.rhs ], [ %bpp.1, %if.end146 ]
  %cmp148 = icmp sgt i32 %width.0.lcssa, 0
  %cmp150 = icmp sgt i32 %height113.0.lcssa, 0
  %or.cond333 = select i1 %cmp148, i1 %cmp150, i1 false
  br i1 %or.cond333, label %land.lhs.true151, label %if.end165

for.body:                                         ; preds = %land.rhs
  %sub.i.i483 = add i32 %i.01343, 2
  %and.i.i485 = and i32 %sub.i.i483, %sub3.i.i463
  %idxprom.i.i.i486 = sext i32 %and.i.i485 to i64
  %arrayidx.i.i.i487 = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i.i486
  %72 = load i8, ptr %arrayidx.i.i.i487, align 1, !tbaa !9
  %conv.i.i488 = zext i8 %72 to i32
  %sub.i3.i489 = add i32 %i.01343, 3
  %and.i5.i490 = and i32 %sub.i3.i489, %sub3.i.i463
  %idxprom.i.i6.i491 = sext i32 %and.i5.i490 to i64
  %arrayidx.i.i7.i492 = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i6.i491
  %73 = load i8, ptr %arrayidx.i.i7.i492, align 1, !tbaa !9
  %conv.i8.i493 = zext i8 %73 to i32
  %mul.i494 = shl nuw nsw i32 %conv.i8.i493, 8
  %add.i495 = or i32 %mul.i494, %conv.i.i488
  %sub.i.i496 = add i32 %i.01343, 4
  %and.i.i498 = and i32 %sub.i.i496, %sub3.i.i463
  %idxprom.i.i.i499 = sext i32 %and.i.i498 to i64
  %arrayidx.i.i.i500 = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i.i499
  %74 = load i8, ptr %arrayidx.i.i.i500, align 1, !tbaa !9
  %conv.i.i501 = zext i8 %74 to i32
  %sub.i13.i502 = add i32 %i.01343, 5
  %and.i15.i503 = and i32 %sub.i13.i502, %sub3.i.i463
  %idxprom.i.i16.i504 = sext i32 %and.i15.i503 to i64
  %arrayidx.i.i17.i505 = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i16.i504
  %75 = load i8, ptr %arrayidx.i.i17.i505, align 1, !tbaa !9
  %conv.i18.i506 = zext i8 %75 to i32
  %mul.i507 = shl nuw nsw i32 %conv.i18.i506, 8
  %add.i508 = or i32 %mul.i507, %conv.i.i501
  %sub.i19.i509 = add i32 %i.01343, 6
  %and.i21.i510 = and i32 %sub.i19.i509, %sub3.i.i463
  %idxprom.i.i22.i511 = sext i32 %and.i21.i510 to i64
  %arrayidx.i.i23.i512 = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i22.i511
  %76 = load i8, ptr %arrayidx.i.i23.i512, align 1, !tbaa !9
  %conv.i24.i513 = zext i8 %76 to i32
  %mul4.i514 = shl nuw nsw i32 %conv.i24.i513, 16
  %add5.i515 = or i32 %add.i508, %mul4.i514
  %sub.i25.i516 = add i32 %i.01343, 7
  %and.i27.i517 = and i32 %sub.i25.i516, %sub3.i.i463
  %idxprom.i.i28.i518 = sext i32 %and.i27.i517 to i64
  %arrayidx.i.i29.i519 = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i28.i518
  %77 = load i8, ptr %arrayidx.i.i29.i519, align 1, !tbaa !9
  %conv.i30.i520 = zext i8 %77 to i32
  %mul8.i521 = shl nuw nsw i32 %conv.i30.i520, 24
  %add9.i522 = or i32 %add5.i515, %mul8.i521
  %78 = add nsw i32 %add.i495, -3
  %or.cond331 = icmp ult i32 %78, 2
  %cmp132 = icmp eq i32 %add9.i522, 1
  %or.cond332 = select i1 %or.cond331, i1 %cmp132, i1 false
  br i1 %or.cond332, label %if.then133, label %if.end146

if.then133:                                       ; preds = %for.body
  %sub.i13.i529 = add i32 %i.01343, 9
  %and.i15.i530 = and i32 %sub.i13.i529, %sub3.i.i463
  %idxprom.i.i16.i531 = sext i32 %and.i15.i530 to i64
  %arrayidx.i.i17.i532 = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i16.i531
  %79 = load i8, ptr %arrayidx.i.i17.i532, align 1, !tbaa !9
  %conv.i18.i533 = zext i8 %79 to i32
  %mul.i534 = shl nuw nsw i32 %conv.i18.i533, 8
  %sub.i.i523 = add i32 %i.01343, 8
  %and.i.i525 = and i32 %sub.i.i523, %sub3.i.i463
  %idxprom.i.i.i526 = sext i32 %and.i.i525 to i64
  %arrayidx.i.i.i527 = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i.i526
  %80 = load i8, ptr %arrayidx.i.i.i527, align 1, !tbaa !9
  %conv.i.i528 = zext i8 %80 to i32
  %add.i535 = or i32 %mul.i534, %conv.i.i528
  %sub.i19.i536 = add i32 %i.01343, 10
  %and.i21.i537 = and i32 %sub.i19.i536, %sub3.i.i463
  %idxprom.i.i22.i538 = sext i32 %and.i21.i537 to i64
  %arrayidx.i.i23.i539 = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i22.i538
  %81 = load i8, ptr %arrayidx.i.i23.i539, align 1, !tbaa !9
  %conv.i24.i540 = zext i8 %81 to i32
  %mul4.i541 = shl nuw nsw i32 %conv.i24.i540, 16
  %add5.i542 = or i32 %add.i535, %mul4.i541
  %sub.i25.i543 = add i32 %i.01343, 11
  %and.i27.i544 = and i32 %sub.i25.i543, %sub3.i.i463
  %idxprom.i.i28.i545 = sext i32 %and.i27.i544 to i64
  %arrayidx.i.i29.i546 = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i28.i545
  %82 = load i8, ptr %arrayidx.i.i29.i546, align 1, !tbaa !9
  %conv.i30.i547 = zext i8 %82 to i32
  %mul8.i548 = shl nuw nsw i32 %conv.i30.i547, 24
  %add9.i549 = or i32 %add5.i542, %mul8.i548
  %sub.i3.i476 = add nsw i32 %i.01343, 1
  %and.i5.i477 = and i32 %sub.i3.i476, %sub3.i.i463
  %idxprom.i.i6.i478 = sext i32 %and.i5.i477 to i64
  %arrayidx.i.i7.i479 = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i6.i478
  %83 = load i8, ptr %arrayidx.i.i7.i479, align 1, !tbaa !9
  %conv.i8.i480 = zext i8 %83 to i32
  %mul.i481 = shl nuw nsw i32 %conv.i8.i480, 8
  %and.i.i472 = and i32 %i.01343, %sub3.i.i463
  %idxprom.i.i.i473 = sext i32 %and.i.i472 to i64
  %arrayidx.i.i.i474 = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i.i473
  %84 = load i8, ptr %arrayidx.i.i.i474, align 1, !tbaa !9
  %conv.i.i475 = zext i8 %84 to i32
  %add.i482 = or i32 %mul.i481, %conv.i.i475
  %cmp134 = icmp eq i32 %add.i482, 256
  %spec.select = select i1 %cmp134, i32 %add9.i549, i32 %width.01345
  %cmp137 = icmp eq i32 %add.i482, 257
  %height113.1 = select i1 %cmp137, i32 %add9.i549, i32 %height113.01344
  %cmp140 = icmp eq i32 %add.i482, 259
  %compression.1 = select i1 %cmp140, i32 %add9.i549, i32 %compression.01346
  %cmp143 = icmp eq i32 %add.i482, 277
  %spec.select1340 = select i1 %cmp143, i32 %add9.i549, i32 %bpp.01347
  br label %if.end146

if.end146:                                        ; preds = %if.then133, %for.body
  %height113.2 = phi i32 [ %height113.01344, %for.body ], [ %height113.1, %if.then133 ]
  %width.2 = phi i32 [ %width.01345, %for.body ], [ %spec.select, %if.then133 ]
  %compression.2 = phi i32 [ %compression.01346, %for.body ], [ %compression.1, %if.then133 ]
  %bpp.1 = phi i32 [ %bpp.01347, %for.body ], [ %spec.select1340, %if.then133 ]
  %add147 = add nsw i32 %i.01343, 12
  %cmp116 = icmp slt i32 %add147, %sub115
  br i1 %cmp116, label %land.rhs, label %for.cond.cleanup, !llvm.loop !118

land.lhs.true151:                                 ; preds = %for.cond.cleanup
  %mul152 = mul nsw i32 %width.0.lcssa, %height113.0.lcssa
  %cmp153 = icmp sgt i32 %mul152, 50
  %cmp155 = icmp eq i32 %compression.0.lcssa, 1
  %or.cond334 = select i1 %cmp153, i1 %cmp155, i1 false
  %85 = and i32 %bpp.0.lcssa, -3
  %or.cond335 = icmp eq i32 %85, 1
  %or.cond1339 = select i1 %or.cond334, i1 %or.cond335, i1 false
  br i1 %or.cond1339, label %if.then160, label %if.end165

if.then160:                                       ; preds = %land.lhs.true151
  %mul162 = mul nsw i32 %bpp.0.lcssa, %mul152
  %add163 = add i32 %mul162, %67
  store i32 %add163, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !25
  %mul164 = mul nsw i32 %bpp.0.lcssa, %width.0.lcssa
  store i32 %mul164, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  br label %if.end165

if.end165:                                        ; preds = %if.then109, %if.then160, %land.lhs.true151, %for.cond.cleanup
  %bpp.0.lcssa1376 = phi i32 [ %bpp.0.lcssa, %if.then160 ], [ %bpp.0.lcssa, %land.lhs.true151 ], [ %bpp.0.lcssa, %for.cond.cleanup ], [ 0, %if.then109 ]
  %width.0.lcssa1375 = phi i32 [ %width.0.lcssa, %if.then160 ], [ %width.0.lcssa, %land.lhs.true151 ], [ %width.0.lcssa, %for.cond.cleanup ], [ 0, %if.then109 ]
  %height113.0.lcssa1374 = phi i32 [ %height113.0.lcssa, %if.then160 ], [ %height113.0.lcssa, %land.lhs.true151 ], [ %height113.0.lcssa, %for.cond.cleanup ], [ 0, %if.then109 ]
  %86 = load i32, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !25
  %cmp166 = icmp sgt i32 %86, %66
  br i1 %cmp166, label %if.then167, label %if.else169

if.then167:                                       ; preds = %if.end165
  %call168 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.5, i32 noundef %width.0.lcssa1375, i32 noundef %height113.0.lcssa1374, i32 noundef %bpp.0.lcssa1376)
  br label %if.end172

if.else169:                                       ; preds = %if.end165
  store i32 0, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  store i32 0, ptr @_ZZ8bmpModelR5MixerE4tiff, align 4, !tbaa !25
  br label %if.end172

if.end172:                                        ; preds = %if.end104.thread, %init.end70, %if.then167, %if.else169, %if.end104, %if.end94
  %87 = load i32, ptr @pos, align 4, !tbaa !25
  %88 = load i32, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !25
  %cmp173 = icmp sgt i32 %87, %88
  br i1 %cmp173, label %if.then174, label %if.end175

if.then174:                                       ; preds = %if.end172
  store i32 0, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  br label %cleanup

if.end175:                                        ; preds = %if.end172
  %89 = load i32, ptr @bpos, align 4, !tbaa !25
  %tobool176.not = icmp eq i32 %89, 0
  br i1 %tobool176.not, label %if.then177, label %if.end175.if.end327_crit_edge

if.end175.if.end327_crit_edge:                    ; preds = %if.end175
  %.pre1361 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %.pre1362 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm4, i64 0, i32 1), align 8, !tbaa !112
  br label %if.end327

if.then177:                                       ; preds = %if.end175
  %rem = srem i32 %87, 3
  %sub.i550 = add nsw i32 %87, -3
  %90 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i551 = add nsw i32 %90, -1
  %and.i552 = and i32 %sub3.i551, %sub.i550
  %91 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i553 = sext i32 %and.i552 to i64
  %arrayidx.i.i554 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i553
  %92 = load i8, ptr %arrayidx.i.i554, align 1, !tbaa !9
  %conv.i555 = zext i8 %92 to i32
  %93 = load i32, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  %sub179 = add nsw i32 %93, -3
  %sub.i556 = sub nsw i32 %87, %sub179
  %and.i558 = and i32 %sub.i556, %sub3.i551
  %idxprom.i.i559 = sext i32 %and.i558 to i64
  %arrayidx.i.i560 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i559
  %94 = load i8, ptr %arrayidx.i.i560, align 1, !tbaa !9
  %conv.i561 = zext i8 %94 to i32
  %add181 = add nuw nsw i32 %conv.i561, %conv.i555
  %sub.i562 = sub nsw i32 %87, %93
  %and.i564 = and i32 %sub.i562, %sub3.i551
  %idxprom.i.i565 = sext i32 %and.i564 to i64
  %arrayidx.i.i566 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i565
  %95 = load i8, ptr %arrayidx.i.i566, align 1, !tbaa !9
  %conv.i567 = zext i8 %95 to i32
  %add183 = add nuw nsw i32 %add181, %conv.i567
  %add184 = add nsw i32 %93, 3
  %sub.i568 = sub nsw i32 %87, %add184
  %and.i570 = and i32 %sub.i568, %sub3.i551
  %idxprom.i.i571 = sext i32 %and.i570 to i64
  %arrayidx.i.i572 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i571
  %96 = load i8, ptr %arrayidx.i.i572, align 1, !tbaa !9
  %conv.i573 = zext i8 %96 to i32
  %add186 = add nuw nsw i32 %add183, %conv.i573
  %mul.i580 = mul nuw nsw i32 %conv.i555, %conv.i555
  %mul.i587 = mul nuw nsw i32 %conv.i561, %conv.i561
  %add190 = add nuw nsw i32 %mul.i587, %mul.i580
  %mul.i594 = mul nuw nsw i32 %conv.i567, %conv.i567
  %add192 = add nuw nsw i32 %add190, %mul.i594
  %mul.i601 = mul nuw nsw i32 %conv.i573, %conv.i573
  %add195 = add nuw nsw i32 %add192, %mul.i601
  %mul196 = mul nuw nsw i32 %add186, %add186
  %div1971334 = lshr i32 %mul196, 2
  %sub198 = sub nsw i32 %add195, %div1971334
  %97 = lshr i32 %sub198, 2
  %shr199 = lshr i32 %add186, 2
  %98 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %99 = and i32 %97, 65535
  %idxprom.i.i602 = zext i32 %99 to i64
  %arrayidx.i.i603 = getelementptr inbounds i8, ptr %98, i64 %idxprom.i.i602
  %100 = load i8, ptr %arrayidx.i.i603, align 1, !tbaa !9
  %conv2.i = zext i8 %100 to i32
  %mul1.i = mul i32 %conv.i555, 30005491
  %mul2.i = mul nsw i32 %rem, 50004239
  %add3.i = add nsw i32 %mul2.i, 19995673
  %add7.i = add i32 %add3.i, %mul1.i
  %shr.i = lshr i32 %add7.i, 9
  %shr10.i = lshr i32 %conv.i555, 3
  %shr12.i = lshr i32 %rem, 4
  %101 = xor i32 %shr10.i, %shr.i
  %102 = xor i32 %101, %shr12.i
  %103 = xor i32 %102, %add7.i
  %xor17.i = xor i32 %103, 67108864
  %104 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i = add nsw i32 %104, 1
  store i32 %inc.i, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i612 = mul i32 %xor17.i, 987654323
  %add.i613 = add i32 %mul.i612, %104
  %or.i = tail call i32 @llvm.fshl.i32(i32 %add.i613, i32 %add.i613, i32 16)
  %mul2.i614 = mul i32 %or.i, 123456791
  %add3.i615 = add i32 %mul2.i614, %104
  %105 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %idxprom.i.i616 = sext i32 %104 to i64
  %arrayidx.i.i617 = getelementptr inbounds i32, ptr %105, i64 %idxprom.i.i616
  store i32 %add3.i615, ptr %arrayidx.i.i617, align 4, !tbaa !25
  %106 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i618 = add nsw i32 %106, -3
  %107 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i619 = add nsw i32 %107, -1
  %and.i620 = and i32 %sub3.i619, %sub.i618
  %idxprom.i.i621 = sext i32 %and.i620 to i64
  %arrayidx.i.i622 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i621
  %108 = load i8, ptr %arrayidx.i.i622, align 1, !tbaa !9
  %conv.i623 = zext i8 %108 to i32
  %sub.i624 = add nsw i32 %106, -1
  %and.i626 = and i32 %sub3.i619, %sub.i624
  %idxprom.i.i627 = sext i32 %and.i626 to i64
  %arrayidx.i.i628 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i627
  %109 = load i8, ptr %arrayidx.i.i628, align 1, !tbaa !9
  %conv.i629 = zext i8 %109 to i32
  %mul1.i630 = mul i32 %conv.i623, 30005491
  %mul2.i632 = mul i32 %conv.i629, 50004239
  %mul4.i634 = mul nsw i32 %rem, 70004807
  %add3.i633 = add nsw i32 %mul4.i634, 290003459
  %add5.i635 = add i32 %add3.i633, %mul1.i630
  %add7.i636 = add i32 %add5.i635, %mul2.i632
  %shr.i637 = lshr i32 %add7.i636, 9
  %shr10.i638 = lshr i32 %conv.i623, 3
  %shr12.i639 = lshr i32 %conv.i629, 4
  %shr14.i = lshr i32 %rem, 5
  %110 = xor i32 %shr10.i638, %shr12.i639
  %111 = xor i32 %110, %shr.i637
  %112 = xor i32 %111, %shr14.i
  %113 = xor i32 %112, %add7.i636
  %xor17.i640 = xor i32 %113, 67108863
  %114 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i641 = add nsw i32 %114, 1
  store i32 %inc.i641, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i642 = mul i32 %xor17.i640, 987654323
  %add.i643 = add i32 %mul.i642, %114
  %or.i644 = tail call i32 @llvm.fshl.i32(i32 %add.i643, i32 %add.i643, i32 16)
  %mul2.i645 = mul i32 %or.i644, 123456791
  %add3.i646 = add i32 %mul2.i645, %114
  %idxprom.i.i647 = sext i32 %114 to i64
  %arrayidx.i.i648 = getelementptr inbounds i32, ptr %105, i64 %idxprom.i.i647
  store i32 %add3.i646, ptr %arrayidx.i.i648, align 4, !tbaa !25
  %115 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i649 = add nsw i32 %115, -3
  %116 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i650 = add nsw i32 %116, -1
  %and.i651 = and i32 %sub3.i650, %sub.i649
  %idxprom.i.i652 = sext i32 %and.i651 to i64
  %arrayidx.i.i653 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i652
  %117 = load i8, ptr %arrayidx.i.i653, align 1, !tbaa !9
  %conv.i654 = zext i8 %117 to i32
  %sub.i655 = add nsw i32 %115, -1
  %and.i657 = and i32 %sub3.i650, %sub.i655
  %idxprom.i.i658 = sext i32 %and.i657 to i64
  %arrayidx.i.i659 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i658
  %118 = load i8, ptr %arrayidx.i.i659, align 1, !tbaa !9
  %119 = lshr i8 %118, 2
  %shr211 = zext i8 %119 to i32
  %sub.i661 = add nsw i32 %115, -2
  %and.i663 = and i32 %sub3.i650, %sub.i661
  %idxprom.i.i664 = sext i32 %and.i663 to i64
  %arrayidx.i.i665 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i664
  %120 = load i8, ptr %arrayidx.i.i665, align 1, !tbaa !9
  %121 = lshr i8 %120, 6
  %shr213 = zext i8 %121 to i32
  %mul1.i667 = mul i32 %conv.i654, 30005491
  %mul2.i669 = mul nuw i32 %shr211, 50004239
  %mul4.i671 = mul nuw nsw i32 %shr213, 70004807
  %mul6.i = mul nsw i32 %rem, 110002499
  %add.i668 = add nsw i32 %mul6.i, 600008937
  %add3.i670 = add i32 %add.i668, %mul1.i667
  %add5.i672 = add i32 %add3.i670, %mul2.i669
  %add7.i673 = add i32 %add5.i672, %mul4.i671
  %shr.i674 = lshr i32 %add7.i673, 9
  %shr10.i675 = lshr i32 %conv.i654, 3
  %shr12.i676 = lshr i32 %shr211, 4
  %shr16.i = lshr i32 %rem, 6
  %122 = xor i32 %shr10.i675, %shr12.i676
  %123 = xor i32 %122, %shr.i674
  %124 = xor i32 %123, %shr16.i
  %xor17.i678 = xor i32 %124, %add7.i673
  %125 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i679 = add nsw i32 %125, 1
  store i32 %inc.i679, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i680 = mul i32 %xor17.i678, 987654323
  %add.i681 = add i32 %mul.i680, %125
  %or.i682 = tail call i32 @llvm.fshl.i32(i32 %add.i681, i32 %add.i681, i32 16)
  %mul2.i683 = mul i32 %or.i682, 123456791
  %add3.i684 = add i32 %mul2.i683, %125
  %idxprom.i.i685 = sext i32 %125 to i64
  %arrayidx.i.i686 = getelementptr inbounds i32, ptr %105, i64 %idxprom.i.i685
  store i32 %add3.i684, ptr %arrayidx.i.i686, align 4, !tbaa !25
  %126 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i687 = sub nsw i32 %126, %93
  %127 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i688 = add nsw i32 %127, -1
  %and.i689 = and i32 %sub3.i688, %sub.i687
  %idxprom.i.i690 = sext i32 %and.i689 to i64
  %arrayidx.i.i691 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i690
  %128 = load i8, ptr %arrayidx.i.i691, align 1, !tbaa !9
  %conv.i692 = zext i8 %128 to i32
  %mul1.i693 = mul i32 %conv.i692, 30005491
  %add3.i696 = add nsw i32 %mul2.i, 620004610
  %add7.i698 = add i32 %add3.i696, %mul1.i693
  %shr.i699 = lshr i32 %add7.i698, 9
  %shr10.i700 = lshr i32 %conv.i692, 3
  %129 = xor i32 %shr10.i700, %shr.i699
  %130 = xor i32 %129, %shr12.i
  %131 = xor i32 %130, %add7.i698
  %xor17.i702 = xor i32 %131, 67108865
  %132 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i703 = add nsw i32 %132, 1
  store i32 %inc.i703, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i704 = mul i32 %xor17.i702, 987654323
  %add.i705 = add i32 %mul.i704, %132
  %or.i706 = tail call i32 @llvm.fshl.i32(i32 %add.i705, i32 %add.i705, i32 16)
  %mul2.i707 = mul i32 %or.i706, 123456791
  %add3.i708 = add i32 %mul2.i707, %132
  %idxprom.i.i709 = sext i32 %132 to i64
  %arrayidx.i.i710 = getelementptr inbounds i32, ptr %105, i64 %idxprom.i.i709
  store i32 %add3.i708, ptr %arrayidx.i.i710, align 4, !tbaa !25
  %133 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i711 = sub nsw i32 %133, %93
  %134 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i712 = add nsw i32 %134, -1
  %and.i713 = and i32 %sub3.i712, %sub.i711
  %idxprom.i.i714 = sext i32 %and.i713 to i64
  %arrayidx.i.i715 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i714
  %135 = load i8, ptr %arrayidx.i.i715, align 1, !tbaa !9
  %conv.i716 = zext i8 %135 to i32
  %sub.i717 = add nsw i32 %133, -1
  %and.i719 = and i32 %sub3.i712, %sub.i717
  %idxprom.i.i720 = sext i32 %and.i719 to i64
  %arrayidx.i.i721 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i720
  %136 = load i8, ptr %arrayidx.i.i721, align 1, !tbaa !9
  %conv.i722 = zext i8 %136 to i32
  %mul1.i723 = mul i32 %conv.i716, 30005491
  %mul2.i725 = mul i32 %conv.i722, 50004239
  %add3.i726 = add nsw i32 %mul4.i634, 890012396
  %add5.i728 = add i32 %add3.i726, %mul1.i723
  %add7.i729 = add i32 %add5.i728, %mul2.i725
  %shr.i730 = lshr i32 %add7.i729, 9
  %shr10.i731 = lshr i32 %conv.i716, 3
  %shr12.i732 = lshr i32 %conv.i722, 4
  %137 = xor i32 %shr10.i731, %shr12.i732
  %138 = xor i32 %137, %shr.i730
  %139 = xor i32 %138, %shr14.i
  %140 = xor i32 %139, %add7.i729
  %xor17.i734 = xor i32 %140, 67108862
  %141 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i735 = add nsw i32 %141, 1
  store i32 %inc.i735, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i736 = mul i32 %xor17.i734, 987654323
  %add.i737 = add i32 %mul.i736, %141
  %or.i738 = tail call i32 @llvm.fshl.i32(i32 %add.i737, i32 %add.i737, i32 16)
  %mul2.i739 = mul i32 %or.i738, 123456791
  %add3.i740 = add i32 %mul2.i739, %141
  %idxprom.i.i741 = sext i32 %141 to i64
  %arrayidx.i.i742 = getelementptr inbounds i32, ptr %105, i64 %idxprom.i.i741
  store i32 %add3.i740, ptr %arrayidx.i.i742, align 4, !tbaa !25
  %142 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i743 = sub nsw i32 %142, %93
  %143 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i744 = add nsw i32 %143, -1
  %and.i745 = and i32 %sub3.i744, %sub.i743
  %idxprom.i.i746 = sext i32 %and.i745 to i64
  %arrayidx.i.i747 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i746
  %144 = load i8, ptr %arrayidx.i.i747, align 1, !tbaa !9
  %conv.i748 = zext i8 %144 to i32
  %sub.i749 = add nsw i32 %142, -1
  %and.i751 = and i32 %sub3.i744, %sub.i749
  %idxprom.i.i752 = sext i32 %and.i751 to i64
  %arrayidx.i.i753 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i752
  %145 = load i8, ptr %arrayidx.i.i753, align 1, !tbaa !9
  %146 = lshr i8 %145, 2
  %shr225 = zext i8 %146 to i32
  %sub.i755 = add nsw i32 %142, -2
  %and.i757 = and i32 %sub3.i744, %sub.i755
  %idxprom.i.i758 = sext i32 %and.i757 to i64
  %arrayidx.i.i759 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i758
  %147 = load i8, ptr %arrayidx.i.i759, align 1, !tbaa !9
  %148 = lshr i8 %147, 6
  %shr227 = zext i8 %148 to i32
  %mul1.i761 = mul i32 %conv.i748, 30005491
  %mul2.i763 = mul nuw i32 %shr225, 50004239
  %mul4.i765 = mul nuw nsw i32 %shr227, 70004807
  %add.i762 = add nsw i32 %mul6.i, 1200017874
  %add3.i764 = add i32 %add.i762, %mul1.i761
  %add5.i766 = add i32 %add3.i764, %mul2.i763
  %add7.i768 = add i32 %add5.i766, %mul4.i765
  %shr.i769 = lshr i32 %add7.i768, 9
  %shr10.i770 = lshr i32 %conv.i748, 3
  %shr12.i771 = lshr i32 %shr225, 4
  %149 = xor i32 %shr10.i770, %shr12.i771
  %150 = xor i32 %149, %shr.i769
  %151 = xor i32 %150, %shr16.i
  %152 = xor i32 %151, %add7.i768
  %xor17.i774 = xor i32 %152, 1
  %153 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i775 = add nsw i32 %153, 1
  store i32 %inc.i775, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i776 = mul i32 %xor17.i774, 987654323
  %add.i777 = add i32 %mul.i776, %153
  %or.i778 = tail call i32 @llvm.fshl.i32(i32 %add.i777, i32 %add.i777, i32 16)
  %mul2.i779 = mul i32 %or.i778, 123456791
  %add3.i780 = add i32 %mul2.i779, %153
  %idxprom.i.i781 = sext i32 %153 to i64
  %arrayidx.i.i782 = getelementptr inbounds i32, ptr %105, i64 %idxprom.i.i781
  store i32 %add3.i780, ptr %arrayidx.i.i782, align 4, !tbaa !25
  %154 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i783 = add nsw i32 %154, -3
  %155 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i784 = add nsw i32 %155, -1
  %and.i785 = and i32 %sub3.i784, %sub.i783
  %idxprom.i.i786 = sext i32 %and.i785 to i64
  %arrayidx.i.i787 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i786
  %156 = load i8, ptr %arrayidx.i.i787, align 1, !tbaa !9
  %conv.i788 = zext i8 %156 to i32
  %sub.i789 = sub nsw i32 %154, %93
  %and.i791 = and i32 %sub3.i784, %sub.i789
  %idxprom.i.i792 = sext i32 %and.i791 to i64
  %arrayidx.i.i793 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i792
  %157 = load i8, ptr %arrayidx.i.i793, align 1, !tbaa !9
  %conv.i794 = zext i8 %157 to i32
  %add232 = add nuw nsw i32 %conv.i794, %conv.i788
  %shr233 = lshr i32 %add232, 3
  %sub.i795 = add nsw i32 %154, -1
  %and.i797 = and i32 %sub3.i784, %sub.i795
  %idxprom.i.i798 = sext i32 %and.i797 to i64
  %arrayidx.i.i799 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i798
  %158 = load i8, ptr %arrayidx.i.i799, align 1, !tbaa !9
  %159 = lshr i8 %158, 5
  %shr235 = zext i8 %159 to i32
  %sub.i801 = add nsw i32 %154, -2
  %and.i803 = and i32 %sub3.i784, %sub.i801
  %idxprom.i.i804 = sext i32 %and.i803 to i64
  %arrayidx.i.i805 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i804
  %160 = load i8, ptr %arrayidx.i.i805, align 1, !tbaa !9
  %161 = lshr i8 %160, 5
  %shr237 = zext i8 %161 to i32
  %mul1.i807 = mul nuw nsw i32 %shr233, 30005491
  %mul2.i809 = mul nuw nsw i32 %shr235, 50004239
  %mul4.i811 = mul nuw nsw i32 %shr237, 70004807
  %add.i808 = add nsw i32 %mul6.i, 1400020853
  %add3.i810 = add nuw i32 %add.i808, %mul1.i807
  %add5.i812 = add nuw i32 %add3.i810, %mul2.i809
  %add7.i814 = add i32 %add5.i812, %mul4.i811
  %shr.i815 = lshr i32 %add7.i814, 9
  %shr10.i8161335 = xor i32 %add232, %rem
  %162 = lshr i32 %shr10.i8161335, 6
  %163 = xor i32 %162, %shr.i815
  %164 = xor i32 %163, %add7.i814
  %xor17.i820 = xor i32 %164, 1
  %165 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i821 = add nsw i32 %165, 1
  store i32 %inc.i821, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i822 = mul i32 %xor17.i820, 987654323
  %add.i823 = add i32 %mul.i822, %165
  %or.i824 = tail call i32 @llvm.fshl.i32(i32 %add.i823, i32 %add.i823, i32 16)
  %mul2.i825 = mul i32 %or.i824, 123456791
  %add3.i826 = add i32 %mul2.i825, %165
  %idxprom.i.i827 = sext i32 %165 to i64
  %arrayidx.i.i828 = getelementptr inbounds i32, ptr %105, i64 %idxprom.i.i827
  store i32 %add3.i826, ptr %arrayidx.i.i828, align 4, !tbaa !25
  %166 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i829 = add nsw i32 %166, -1
  %167 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i830 = add nsw i32 %167, -1
  %and.i831 = and i32 %sub3.i830, %sub.i829
  %idxprom.i.i832 = sext i32 %and.i831 to i64
  %arrayidx.i.i833 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i832
  %168 = load i8, ptr %arrayidx.i.i833, align 1, !tbaa !9
  %conv.i834 = zext i8 %168 to i32
  %sub.i835 = add nsw i32 %166, -2
  %and.i837 = and i32 %sub3.i830, %sub.i835
  %idxprom.i.i838 = sext i32 %and.i837 to i64
  %arrayidx.i.i839 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i838
  %169 = load i8, ptr %arrayidx.i.i839, align 1, !tbaa !9
  %conv.i840 = zext i8 %169 to i32
  %mul1.i841 = mul i32 %conv.i834, 30005491
  %mul2.i843 = mul i32 %conv.i840, 50004239
  %add3.i844 = add nsw i32 %mul4.i634, 1490021333
  %add5.i846 = add i32 %add3.i844, %mul1.i841
  %add7.i847 = add i32 %add5.i846, %mul2.i843
  %shr.i848 = lshr i32 %add7.i847, 9
  %shr10.i849 = lshr i32 %conv.i834, 3
  %shr12.i850 = lshr i32 %conv.i840, 4
  %170 = xor i32 %shr10.i849, %shr12.i850
  %171 = xor i32 %170, %shr.i848
  %172 = xor i32 %171, %shr14.i
  %173 = xor i32 %172, %add7.i847
  %xor17.i852 = xor i32 %173, 67108861
  %174 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i853 = add nsw i32 %174, 1
  store i32 %inc.i853, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i854 = mul i32 %xor17.i852, 987654323
  %add.i855 = add i32 %mul.i854, %174
  %or.i856 = tail call i32 @llvm.fshl.i32(i32 %add.i855, i32 %add.i855, i32 16)
  %mul2.i857 = mul i32 %or.i856, 123456791
  %add3.i858 = add i32 %mul2.i857, %174
  %idxprom.i.i859 = sext i32 %174 to i64
  %arrayidx.i.i860 = getelementptr inbounds i32, ptr %105, i64 %idxprom.i.i859
  store i32 %add3.i858, ptr %arrayidx.i.i860, align 4, !tbaa !25
  %175 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i861 = add nsw i32 %175, -3
  %176 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i862 = add nsw i32 %176, -1
  %and.i863 = and i32 %sub3.i862, %sub.i861
  %idxprom.i.i864 = sext i32 %and.i863 to i64
  %arrayidx.i.i865 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i864
  %177 = load i8, ptr %arrayidx.i.i865, align 1, !tbaa !9
  %conv.i866 = zext i8 %177 to i32
  %sub.i867 = add nsw i32 %175, -1
  %and.i869 = and i32 %sub3.i862, %sub.i867
  %idxprom.i.i870 = sext i32 %and.i869 to i64
  %arrayidx.i.i871 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i870
  %178 = load i8, ptr %arrayidx.i.i871, align 1, !tbaa !9
  %conv.i872 = zext i8 %178 to i32
  %sub.i873 = add nsw i32 %175, -4
  %and.i875 = and i32 %sub3.i862, %sub.i873
  %idxprom.i.i876 = sext i32 %and.i875 to i64
  %arrayidx.i.i877 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i876
  %179 = load i8, ptr %arrayidx.i.i877, align 1, !tbaa !9
  %conv.i878 = zext i8 %179 to i32
  %sub247 = sub nsw i32 %conv.i872, %conv.i878
  %mul1.i879 = mul i32 %conv.i866, 30005491
  %mul2.i881 = mul i32 %sub247, 50004239
  %add3.i882 = add nsw i32 %mul4.i634, 1690024312
  %add5.i884 = add i32 %add3.i882, %mul1.i879
  %add7.i885 = add i32 %add5.i884, %mul2.i881
  %shr.i886 = lshr i32 %add7.i885, 9
  %shr10.i887 = lshr i32 %conv.i866, 3
  %shr12.i888 = lshr i32 %sub247, 4
  %180 = xor i32 %shr10.i887, %shr12.i888
  %181 = xor i32 %180, %shr.i886
  %182 = xor i32 %181, %shr14.i
  %183 = xor i32 %182, %add7.i885
  %xor17.i890 = xor i32 %183, 67108861
  %184 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i891 = add nsw i32 %184, 1
  store i32 %inc.i891, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i892 = mul i32 %xor17.i890, 987654323
  %add.i893 = add i32 %mul.i892, %184
  %or.i894 = tail call i32 @llvm.fshl.i32(i32 %add.i893, i32 %add.i893, i32 16)
  %mul2.i895 = mul i32 %or.i894, 123456791
  %add3.i896 = add i32 %mul2.i895, %184
  %idxprom.i.i897 = sext i32 %184 to i64
  %arrayidx.i.i898 = getelementptr inbounds i32, ptr %105, i64 %idxprom.i.i897
  store i32 %add3.i896, ptr %arrayidx.i.i898, align 4, !tbaa !25
  %185 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i899 = add nsw i32 %185, -3
  %186 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i900 = add nsw i32 %186, -1
  %and.i901 = and i32 %sub3.i900, %sub.i899
  %idxprom.i.i902 = sext i32 %and.i901 to i64
  %arrayidx.i.i903 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i902
  %187 = load i8, ptr %arrayidx.i.i903, align 1, !tbaa !9
  %conv.i904 = zext i8 %187 to i32
  %sub.i905 = add nsw i32 %185, -1
  %and.i907 = and i32 %sub3.i900, %sub.i905
  %idxprom.i.i908 = sext i32 %and.i907 to i64
  %arrayidx.i.i909 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i908
  %188 = load i8, ptr %arrayidx.i.i909, align 1, !tbaa !9
  %conv.i910 = zext i8 %188 to i32
  %add252 = add nuw nsw i32 %conv.i910, %conv.i904
  %sub.i911 = add nsw i32 %185, -4
  %and.i913 = and i32 %sub3.i900, %sub.i911
  %idxprom.i.i914 = sext i32 %and.i913 to i64
  %arrayidx.i.i915 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i914
  %189 = load i8, ptr %arrayidx.i.i915, align 1, !tbaa !9
  %conv.i916 = zext i8 %189 to i32
  %sub254 = sub nsw i32 %add252, %conv.i916
  %mul1.i917 = mul i32 %sub254, 30005491
  %add3.i920 = add nsw i32 %mul2.i, 1820022484
  %add7.i922 = add i32 %add3.i920, %mul1.i917
  %shr.i923 = lshr i32 %add7.i922, 9
  %shr10.i924 = lshr i32 %sub254, 3
  %190 = xor i32 %shr10.i924, %shr.i923
  %191 = xor i32 %190, %shr12.i
  %192 = xor i32 %191, %add7.i922
  %xor17.i926 = xor i32 %192, 67108866
  %193 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i927 = add nsw i32 %193, 1
  store i32 %inc.i927, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i928 = mul i32 %xor17.i926, 987654323
  %add.i929 = add i32 %mul.i928, %193
  %or.i930 = tail call i32 @llvm.fshl.i32(i32 %add.i929, i32 %add.i929, i32 16)
  %mul2.i931 = mul i32 %or.i930, 123456791
  %add3.i932 = add i32 %mul2.i931, %193
  %idxprom.i.i933 = sext i32 %193 to i64
  %arrayidx.i.i934 = getelementptr inbounds i32, ptr %105, i64 %idxprom.i.i933
  store i32 %add3.i932, ptr %arrayidx.i.i934, align 4, !tbaa !25
  %194 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i935 = sub nsw i32 %194, %93
  %195 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i936 = add nsw i32 %195, -1
  %and.i937 = and i32 %sub3.i936, %sub.i935
  %idxprom.i.i938 = sext i32 %and.i937 to i64
  %arrayidx.i.i939 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i938
  %196 = load i8, ptr %arrayidx.i.i939, align 1, !tbaa !9
  %conv.i940 = zext i8 %196 to i32
  %sub.i941 = add nsw i32 %194, -1
  %and.i943 = and i32 %sub3.i936, %sub.i941
  %idxprom.i.i944 = sext i32 %and.i943 to i64
  %arrayidx.i.i945 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i944
  %197 = load i8, ptr %arrayidx.i.i945, align 1, !tbaa !9
  %conv.i946 = zext i8 %197 to i32
  %add259 = add nsw i32 %93, 1
  %sub.i947 = sub nsw i32 %194, %add259
  %and.i949 = and i32 %sub3.i936, %sub.i947
  %idxprom.i.i950 = sext i32 %and.i949 to i64
  %arrayidx.i.i951 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i950
  %198 = load i8, ptr %arrayidx.i.i951, align 1, !tbaa !9
  %conv.i952 = zext i8 %198 to i32
  %sub261 = sub nsw i32 %conv.i946, %conv.i952
  %mul1.i953 = mul i32 %conv.i940, 30005491
  %mul2.i955 = mul i32 %sub261, 50004239
  %add3.i956 = add i32 %mul4.i634, 2090030270
  %add5.i958 = add i32 %add3.i956, %mul1.i953
  %add7.i959 = add i32 %add5.i958, %mul2.i955
  %shr.i960 = lshr i32 %add7.i959, 9
  %shr10.i961 = lshr i32 %conv.i940, 3
  %shr12.i962 = lshr i32 %sub261, 4
  %199 = xor i32 %shr10.i961, %shr12.i962
  %200 = xor i32 %199, %shr.i960
  %201 = xor i32 %200, %shr14.i
  %202 = xor i32 %201, %add7.i959
  %xor17.i964 = xor i32 %202, 67108861
  %203 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i965 = add nsw i32 %203, 1
  store i32 %inc.i965, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i966 = mul i32 %xor17.i964, 987654323
  %add.i967 = add i32 %mul.i966, %203
  %or.i968 = tail call i32 @llvm.fshl.i32(i32 %add.i967, i32 %add.i967, i32 16)
  %mul2.i969 = mul i32 %or.i968, 123456791
  %add3.i970 = add i32 %mul2.i969, %203
  %idxprom.i.i971 = sext i32 %203 to i64
  %arrayidx.i.i972 = getelementptr inbounds i32, ptr %105, i64 %idxprom.i.i971
  store i32 %add3.i970, ptr %arrayidx.i.i972, align 4, !tbaa !25
  %204 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i973 = sub nsw i32 %204, %93
  %205 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i974 = add nsw i32 %205, -1
  %and.i975 = and i32 %sub3.i974, %sub.i973
  %idxprom.i.i976 = sext i32 %and.i975 to i64
  %arrayidx.i.i977 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i976
  %206 = load i8, ptr %arrayidx.i.i977, align 1, !tbaa !9
  %conv.i978 = zext i8 %206 to i32
  %sub.i979 = add nsw i32 %204, -1
  %and.i981 = and i32 %sub3.i974, %sub.i979
  %idxprom.i.i982 = sext i32 %and.i981 to i64
  %arrayidx.i.i983 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i982
  %207 = load i8, ptr %arrayidx.i.i983, align 1, !tbaa !9
  %conv.i984 = zext i8 %207 to i32
  %add266 = add nuw nsw i32 %conv.i984, %conv.i978
  %sub.i985 = sub nsw i32 %204, %add259
  %and.i987 = and i32 %sub3.i974, %sub.i985
  %idxprom.i.i988 = sext i32 %and.i987 to i64
  %arrayidx.i.i989 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i988
  %208 = load i8, ptr %arrayidx.i.i989, align 1, !tbaa !9
  %conv.i990 = zext i8 %208 to i32
  %sub269 = sub nsw i32 %add266, %conv.i990
  %mul1.i991 = mul i32 %sub269, 30005491
  %add3.i994 = add i32 %mul2.i, -2074938854
  %add7.i996 = add i32 %add3.i994, %mul1.i991
  %shr.i997 = lshr i32 %add7.i996, 9
  %shr10.i998 = lshr i32 %sub269, 3
  %209 = xor i32 %shr10.i998, %shr.i997
  %210 = xor i32 %209, %shr12.i
  %211 = xor i32 %210, %add7.i996
  %xor17.i1000 = xor i32 %211, 67108867
  %212 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1001 = add nsw i32 %212, 1
  store i32 %inc.i1001, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1002 = mul i32 %xor17.i1000, 987654323
  %add.i1003 = add i32 %mul.i1002, %212
  %or.i1004 = tail call i32 @llvm.fshl.i32(i32 %add.i1003, i32 %add.i1003, i32 16)
  %mul2.i1005 = mul i32 %or.i1004, 123456791
  %add3.i1006 = add i32 %mul2.i1005, %212
  %idxprom.i.i1007 = sext i32 %212 to i64
  %arrayidx.i.i1008 = getelementptr inbounds i32, ptr %105, i64 %idxprom.i.i1007
  store i32 %add3.i1006, ptr %arrayidx.i.i1008, align 4, !tbaa !25
  %shr272 = lshr i32 %conv2.i, 5
  %mul1.i1009 = mul i32 %shr199, 30005491
  %mul2.i1011 = mul nuw nsw i32 %shr272, 50004239
  %add3.i1012 = add nsw i32 %mul4.i634, -1804931068
  %add5.i1014 = add i32 %add3.i1012, %mul1.i1009
  %add7.i1015 = add i32 %add5.i1014, %mul2.i1011
  %shr.i1016 = lshr i32 %add7.i1015, 9
  %shr10.i10171336 = xor i32 %add186, %rem
  %213 = lshr i32 %shr10.i10171336, 5
  %214 = xor i32 %213, %shr.i1016
  %215 = xor i32 %214, %add7.i1015
  %xor17.i1020 = xor i32 %215, 67108860
  %216 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1021 = add nsw i32 %216, 1
  store i32 %inc.i1021, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1022 = mul i32 %xor17.i1020, 987654323
  %add.i1023 = add i32 %216, %mul.i1022
  %or.i1024 = tail call i32 @llvm.fshl.i32(i32 %add.i1023, i32 %add.i1023, i32 16)
  %mul2.i1025 = mul i32 %or.i1024, 123456791
  %add3.i1026 = add i32 %mul2.i1025, %216
  %idxprom.i.i1027 = sext i32 %216 to i64
  %arrayidx.i.i1028 = getelementptr inbounds i32, ptr %105, i64 %idxprom.i.i1027
  store i32 %add3.i1026, ptr %arrayidx.i.i1028, align 4, !tbaa !25
  %217 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1029 = add nsw i32 %217, -3
  %218 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1030 = add nsw i32 %218, -1
  %and.i1031 = and i32 %sub3.i1030, %sub.i1029
  %idxprom.i.i1032 = sext i32 %and.i1031 to i64
  %arrayidx.i.i1033 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i1032
  %219 = load i8, ptr %arrayidx.i.i1033, align 1, !tbaa !9
  %conv.i1034 = zext i8 %219 to i32
  %sub.i1035 = sub i32 %217, %93
  %and.i1037 = and i32 %sub3.i1030, %sub.i1035
  %idxprom.i.i1038 = sext i32 %and.i1037 to i64
  %arrayidx.i.i1039 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i1038
  %220 = load i8, ptr %arrayidx.i.i1039, align 1, !tbaa !9
  %conv.i1040 = zext i8 %220 to i32
  %add276 = add nuw nsw i32 %conv.i1040, %conv.i1034
  %sub.i1041 = sub nsw i32 %217, %add184
  %and.i1043 = and i32 %sub3.i1030, %sub.i1041
  %idxprom.i.i1044 = sext i32 %and.i1043 to i64
  %arrayidx.i.i1045 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i1044
  %221 = load i8, ptr %arrayidx.i.i1045, align 1, !tbaa !9
  %conv.i1046 = zext i8 %221 to i32
  %sub279 = sub nsw i32 %add276, %conv.i1046
  %mul.i1047 = shl nsw i32 %sub279, 8
  %222 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm1, align 8, !tbaa !74
  %sub.i1048 = add nsw i32 %222, -256
  %and.i1049 = and i32 %mul.i1047, %sub.i1048
  store i32 %and.i1049, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %223 = load i8, ptr %arrayidx.i.i1033, align 1, !tbaa !9
  %conv.i1055 = zext i8 %223 to i32
  %sub.i1056 = sub nsw i32 %217, %sub179
  %and.i1058 = and i32 %sub3.i1030, %sub.i1056
  %idxprom.i.i1059 = sext i32 %and.i1058 to i64
  %arrayidx.i.i1060 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i1059
  %224 = load i8, ptr %arrayidx.i.i1060, align 1, !tbaa !9
  %conv.i1061 = zext i8 %224 to i32
  %add283 = add nuw nsw i32 %conv.i1061, %conv.i1055
  %225 = load i8, ptr %arrayidx.i.i1039, align 1, !tbaa !9
  %conv.i1067 = zext i8 %225 to i32
  %sub285 = sub nsw i32 %add283, %conv.i1067
  %mul.i1068 = shl nsw i32 %sub285, 8
  %226 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm2, align 8, !tbaa !74
  %sub.i1069 = add nsw i32 %226, -256
  %and.i1070 = and i32 %mul.i1068, %sub.i1069
  store i32 %and.i1070, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %227 = load i8, ptr %arrayidx.i.i1033, align 1, !tbaa !9
  %conv.i1076 = zext i8 %227 to i32
  %sub.i1077 = add nsw i32 %217, -6
  %and.i1079 = and i32 %sub3.i1030, %sub.i1077
  %idxprom.i.i1080 = sext i32 %and.i1079 to i64
  %arrayidx.i.i1081 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i1080
  %228 = load i8, ptr %arrayidx.i.i1081, align 1, !tbaa !9
  %conv.i1082 = zext i8 %228 to i32
  %229 = shl nuw nsw i32 %conv.i1076, 9
  %230 = shl nuw nsw i32 %conv.i1082, 8
  %mul.i1083 = sub nsw i32 %229, %230
  %231 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm3, align 8, !tbaa !74
  %sub.i1084 = add nsw i32 %231, -256
  %and.i1085 = and i32 %mul.i1083, %sub.i1084
  store i32 %and.i1085, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %232 = load i8, ptr %arrayidx.i.i1039, align 1, !tbaa !9
  %conv.i1091 = zext i8 %232 to i32
  %mul292 = shl nsw i32 %93, 1
  %sub.i1092 = sub i32 %217, %mul292
  %and.i1094 = and i32 %sub3.i1030, %sub.i1092
  %idxprom.i.i1095 = sext i32 %and.i1094 to i64
  %arrayidx.i.i1096 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i1095
  %233 = load i8, ptr %arrayidx.i.i1096, align 1, !tbaa !9
  %conv.i1097 = zext i8 %233 to i32
  %234 = shl nuw nsw i32 %conv.i1091, 9
  %235 = shl nuw nsw i32 %conv.i1097, 8
  %mul.i1098 = sub nsw i32 %234, %235
  %236 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm4, align 8, !tbaa !74
  %sub.i1099 = add nsw i32 %236, -256
  %and.i1100 = and i32 %mul.i1098, %sub.i1099
  store i32 %and.i1100, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm4, i64 0, i32 1), align 8, !tbaa !112
  %237 = load i8, ptr %arrayidx.i.i1045, align 1, !tbaa !9
  %conv.i1106 = zext i8 %237 to i32
  %sub.i1107 = add i32 %sub.i1092, -6
  %and.i1109 = and i32 %sub3.i1030, %sub.i1107
  %idxprom.i.i1110 = sext i32 %and.i1109 to i64
  %arrayidx.i.i1111 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i1110
  %238 = load i8, ptr %arrayidx.i.i1111, align 1, !tbaa !9
  %conv.i1112 = zext i8 %238 to i32
  %239 = shl nuw nsw i32 %conv.i1106, 9
  %240 = shl nuw nsw i32 %conv.i1112, 8
  %mul.i1113 = sub nsw i32 %239, %240
  %241 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm5, align 8, !tbaa !74
  %sub.i1114 = add nsw i32 %241, -256
  %and.i1115 = and i32 %mul.i1113, %sub.i1114
  store i32 %and.i1115, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %242 = load i8, ptr %arrayidx.i.i1060, align 1, !tbaa !9
  %conv.i1121 = zext i8 %242 to i32
  %sub.i1122 = add i32 %sub.i1092, 6
  %and.i1124 = and i32 %sub3.i1030, %sub.i1122
  %idxprom.i.i1125 = sext i32 %and.i1124 to i64
  %arrayidx.i.i1126 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i1125
  %243 = load i8, ptr %arrayidx.i.i1126, align 1, !tbaa !9
  %conv.i1127 = zext i8 %243 to i32
  %244 = shl nuw nsw i32 %conv.i1121, 9
  %245 = shl nuw nsw i32 %conv.i1127, 8
  %mul.i1128 = sub nsw i32 %244, %245
  %246 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm6, align 8, !tbaa !74
  %sub.i1129 = add nsw i32 %246, -256
  %and.i1130 = and i32 %mul.i1128, %sub.i1129
  store i32 %and.i1130, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm6, i64 0, i32 1), align 8, !tbaa !112
  %247 = load i8, ptr %arrayidx.i.i1060, align 1, !tbaa !9
  %conv.i1136 = zext i8 %247 to i32
  %sub.i1137 = add nsw i32 %217, -1
  %and.i1139 = and i32 %sub3.i1030, %sub.i1137
  %idxprom.i.i1140 = sext i32 %and.i1139 to i64
  %arrayidx.i.i1141 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i1140
  %248 = load i8, ptr %arrayidx.i.i1141, align 1, !tbaa !9
  %conv.i1142 = zext i8 %248 to i32
  %add312 = add nuw nsw i32 %conv.i1142, %conv.i1136
  %sub.i1143 = add i32 %sub.i1035, 2
  %and.i1145 = and i32 %sub3.i1030, %sub.i1143
  %idxprom.i.i1146 = sext i32 %and.i1145 to i64
  %arrayidx.i.i1147 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i1146
  %249 = load i8, ptr %arrayidx.i.i1147, align 1, !tbaa !9
  %conv.i1148 = zext i8 %249 to i32
  %sub315 = sub nsw i32 %add312, %conv.i1148
  %mul.i1149 = shl nsw i32 %sub315, 8
  %250 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm7, align 8, !tbaa !74
  %sub.i1150 = add nsw i32 %250, -256
  %and.i1151 = and i32 %mul.i1149, %sub.i1150
  store i32 %and.i1151, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm7, i64 0, i32 1), align 8, !tbaa !112
  %251 = load i8, ptr %arrayidx.i.i1039, align 1, !tbaa !9
  %conv.i1157 = zext i8 %251 to i32
  %252 = load i8, ptr %arrayidx.i.i1060, align 1, !tbaa !9
  %conv.i1163 = zext i8 %252 to i32
  %add319 = add nuw nsw i32 %conv.i1163, %conv.i1157
  %sub.i1164 = add i32 %sub.i1092, 3
  %and.i1166 = and i32 %sub3.i1030, %sub.i1164
  %idxprom.i.i1167 = sext i32 %and.i1166 to i64
  %arrayidx.i.i1168 = getelementptr inbounds i8, ptr %91, i64 %idxprom.i.i1167
  %253 = load i8, ptr %arrayidx.i.i1168, align 1, !tbaa !9
  %conv.i1169 = zext i8 %253 to i32
  %sub323 = sub nsw i32 %add319, %conv.i1169
  %mul.i1170 = shl nsw i32 %sub323, 8
  %254 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm8, align 8, !tbaa !74
  %sub.i1171 = add nsw i32 %254, -256
  %and.i1172 = and i32 %mul.i1170, %sub.i1171
  store i32 %and.i1172, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm8, i64 0, i32 1), align 8, !tbaa !112
  %shr324 = lshr i32 %add186, 3
  %shl325 = shl nuw nsw i32 %conv2.i, 1
  %and326 = and i32 %shl325, 384
  %or = or i32 %and326, %shr324
  %mul.i1173 = shl nuw nsw i32 %or, 8
  %255 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm9, align 8, !tbaa !74
  %sub.i1174 = add i32 %255, 2147483392
  %and.i1175 = and i32 %sub.i1174, %mul.i1173
  store i32 %and.i1175, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm9, i64 0, i32 1), align 8, !tbaa !112
  br label %if.end327

if.end327:                                        ; preds = %if.end175.if.end327_crit_edge, %if.then177
  %256 = phi i32 [ %.pre1362, %if.end175.if.end327_crit_edge ], [ %and.i1100, %if.then177 ]
  %257 = phi i32 [ %.pre1361, %if.end175.if.end327_crit_edge ], [ %and.i1085, %if.then177 ]
  %258 = load i32, ptr @y, align 4, !tbaa !25
  %shl.i = shl i32 %258, 16
  %259 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %260 = load i16, ptr %259, align 2, !tbaa !31
  %conv.i1176 = zext i16 %260 to i32
  %sub.i1177 = or i32 %shl.i, 64
  %add.i1178 = sub i32 %sub.i1177, %conv.i1176
  %261 = lshr i32 %add.i1178, 7
  %262 = trunc i32 %261 to i16
  %conv7.i = add i16 %260, %262
  store i16 %conv7.i, ptr %259, align 2, !tbaa !31
  %263 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %264 = load i32, ptr @c0, align 4, !tbaa !25
  %add8.i = add nsw i32 %264, %263
  %265 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm1, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1180 = sext i32 %add8.i to i64
  %arrayidx.i.i1181 = getelementptr inbounds i16, ptr %265, i64 %idxprom.i.i1180
  store ptr %arrayidx.i.i1181, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %266 = load i16, ptr %arrayidx.i.i1181, align 2, !tbaa !31
  %267 = lshr i16 %266, 4
  %268 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %idxprom.i.i.i1182 = zext i16 %267 to i64
  %arrayidx.i.i.i1183 = getelementptr inbounds i16, ptr %268, i64 %idxprom.i.i.i1182
  %269 = load i16, ptr %arrayidx.i.i.i1183, align 2, !tbaa !31
  %nx.i.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 8
  %270 = load i32, ptr %nx.i.i, align 8, !tbaa !64
  %inc.i.i = add nsw i32 %270, 1
  %data.i.i.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 3, i32 3
  %271 = load ptr, ptr %data.i.i.i, align 8, !tbaa !59
  %idxprom.i.i15.i = sext i32 %270 to i64
  %arrayidx.i.i16.i = getelementptr inbounds i16, ptr %271, i64 %idxprom.i.i15.i
  store i16 %269, ptr %arrayidx.i.i16.i, align 2, !tbaa !31
  %272 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %273 = load i16, ptr %272, align 2, !tbaa !31
  %conv.i1185 = zext i16 %273 to i32
  %add.i1187 = sub i32 %sub.i1177, %conv.i1185
  %274 = lshr i32 %add.i1187, 7
  %275 = trunc i32 %274 to i16
  %conv7.i1189 = add i16 %273, %275
  store i16 %conv7.i1189, ptr %272, align 2, !tbaa !31
  %276 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %add8.i1190 = add nsw i32 %276, %264
  %277 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm2, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1191 = sext i32 %add8.i1190 to i64
  %arrayidx.i.i1192 = getelementptr inbounds i16, ptr %277, i64 %idxprom.i.i1191
  store ptr %arrayidx.i.i1192, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %278 = load i16, ptr %arrayidx.i.i1192, align 2, !tbaa !31
  %279 = lshr i16 %278, 4
  %idxprom.i.i.i1193 = zext i16 %279 to i64
  %arrayidx.i.i.i1194 = getelementptr inbounds i16, ptr %268, i64 %idxprom.i.i.i1193
  %280 = load i16, ptr %arrayidx.i.i.i1194, align 2, !tbaa !31
  %inc.i.i1196 = add nsw i32 %270, 2
  %idxprom.i.i15.i1198 = sext i32 %inc.i.i to i64
  %arrayidx.i.i16.i1199 = getelementptr inbounds i16, ptr %271, i64 %idxprom.i.i15.i1198
  store i16 %280, ptr %arrayidx.i.i16.i1199, align 2, !tbaa !31
  %281 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %282 = load i16, ptr %281, align 2, !tbaa !31
  %conv.i1201 = zext i16 %282 to i32
  %add.i1203 = sub i32 %sub.i1177, %conv.i1201
  %283 = lshr i32 %add.i1203, 7
  %284 = trunc i32 %283 to i16
  %conv7.i1205 = add i16 %282, %284
  store i16 %conv7.i1205, ptr %281, align 2, !tbaa !31
  %add8.i1206 = add nsw i32 %257, %264
  %285 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm3, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1207 = sext i32 %add8.i1206 to i64
  %arrayidx.i.i1208 = getelementptr inbounds i16, ptr %285, i64 %idxprom.i.i1207
  store ptr %arrayidx.i.i1208, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %286 = load i16, ptr %arrayidx.i.i1208, align 2, !tbaa !31
  %287 = lshr i16 %286, 4
  %idxprom.i.i.i1209 = zext i16 %287 to i64
  %arrayidx.i.i.i1210 = getelementptr inbounds i16, ptr %268, i64 %idxprom.i.i.i1209
  %288 = load i16, ptr %arrayidx.i.i.i1210, align 2, !tbaa !31
  %inc.i.i1212 = add nsw i32 %270, 3
  %idxprom.i.i15.i1214 = sext i32 %inc.i.i1196 to i64
  %arrayidx.i.i16.i1215 = getelementptr inbounds i16, ptr %271, i64 %idxprom.i.i15.i1214
  store i16 %288, ptr %arrayidx.i.i16.i1215, align 2, !tbaa !31
  %289 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %290 = load i16, ptr %289, align 2, !tbaa !31
  %conv.i1217 = zext i16 %290 to i32
  %add.i1219 = sub i32 %sub.i1177, %conv.i1217
  %291 = lshr i32 %add.i1219, 7
  %292 = trunc i32 %291 to i16
  %conv7.i1221 = add i16 %290, %292
  store i16 %conv7.i1221, ptr %289, align 2, !tbaa !31
  %add8.i1222 = add nsw i32 %256, %264
  %293 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm4, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1223 = sext i32 %add8.i1222 to i64
  %arrayidx.i.i1224 = getelementptr inbounds i16, ptr %293, i64 %idxprom.i.i1223
  store ptr %arrayidx.i.i1224, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %294 = load i16, ptr %arrayidx.i.i1224, align 2, !tbaa !31
  %295 = lshr i16 %294, 4
  %idxprom.i.i.i1225 = zext i16 %295 to i64
  %arrayidx.i.i.i1226 = getelementptr inbounds i16, ptr %268, i64 %idxprom.i.i.i1225
  %296 = load i16, ptr %arrayidx.i.i.i1226, align 2, !tbaa !31
  %inc.i.i1228 = add nsw i32 %270, 4
  %idxprom.i.i15.i1230 = sext i32 %inc.i.i1212 to i64
  %arrayidx.i.i16.i1231 = getelementptr inbounds i16, ptr %271, i64 %idxprom.i.i15.i1230
  store i16 %296, ptr %arrayidx.i.i16.i1231, align 2, !tbaa !31
  %297 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %298 = load i16, ptr %297, align 2, !tbaa !31
  %conv.i1233 = zext i16 %298 to i32
  %add.i1235 = sub i32 %sub.i1177, %conv.i1233
  %299 = lshr i32 %add.i1235, 7
  %300 = trunc i32 %299 to i16
  %conv7.i1237 = add i16 %298, %300
  store i16 %conv7.i1237, ptr %297, align 2, !tbaa !31
  %301 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %add8.i1238 = add nsw i32 %301, %264
  %302 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm5, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1239 = sext i32 %add8.i1238 to i64
  %arrayidx.i.i1240 = getelementptr inbounds i16, ptr %302, i64 %idxprom.i.i1239
  store ptr %arrayidx.i.i1240, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %303 = load i16, ptr %arrayidx.i.i1240, align 2, !tbaa !31
  %304 = lshr i16 %303, 4
  %idxprom.i.i.i1241 = zext i16 %304 to i64
  %arrayidx.i.i.i1242 = getelementptr inbounds i16, ptr %268, i64 %idxprom.i.i.i1241
  %305 = load i16, ptr %arrayidx.i.i.i1242, align 2, !tbaa !31
  %inc.i.i1244 = add nsw i32 %270, 5
  %idxprom.i.i15.i1246 = sext i32 %inc.i.i1228 to i64
  %arrayidx.i.i16.i1247 = getelementptr inbounds i16, ptr %271, i64 %idxprom.i.i15.i1246
  store i16 %305, ptr %arrayidx.i.i16.i1247, align 2, !tbaa !31
  %306 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %307 = load i16, ptr %306, align 2, !tbaa !31
  %conv.i1249 = zext i16 %307 to i32
  %add.i1251 = sub i32 %sub.i1177, %conv.i1249
  %308 = lshr i32 %add.i1251, 7
  %309 = trunc i32 %308 to i16
  %conv7.i1253 = add i16 %307, %309
  store i16 %conv7.i1253, ptr %306, align 2, !tbaa !31
  %310 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm6, i64 0, i32 1), align 8, !tbaa !112
  %add8.i1254 = add nsw i32 %310, %264
  %311 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm6, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1255 = sext i32 %add8.i1254 to i64
  %arrayidx.i.i1256 = getelementptr inbounds i16, ptr %311, i64 %idxprom.i.i1255
  store ptr %arrayidx.i.i1256, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %312 = load i16, ptr %arrayidx.i.i1256, align 2, !tbaa !31
  %313 = lshr i16 %312, 4
  %idxprom.i.i.i1257 = zext i16 %313 to i64
  %arrayidx.i.i.i1258 = getelementptr inbounds i16, ptr %268, i64 %idxprom.i.i.i1257
  %314 = load i16, ptr %arrayidx.i.i.i1258, align 2, !tbaa !31
  %inc.i.i1260 = add nsw i32 %270, 6
  %idxprom.i.i15.i1262 = sext i32 %inc.i.i1244 to i64
  %arrayidx.i.i16.i1263 = getelementptr inbounds i16, ptr %271, i64 %idxprom.i.i15.i1262
  store i16 %314, ptr %arrayidx.i.i16.i1263, align 2, !tbaa !31
  %315 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %316 = load i16, ptr %315, align 2, !tbaa !31
  %conv.i1265 = zext i16 %316 to i32
  %add.i1267 = sub i32 %sub.i1177, %conv.i1265
  %317 = lshr i32 %add.i1267, 7
  %318 = trunc i32 %317 to i16
  %conv7.i1269 = add i16 %316, %318
  store i16 %conv7.i1269, ptr %315, align 2, !tbaa !31
  %319 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm7, i64 0, i32 1), align 8, !tbaa !112
  %add8.i1270 = add nsw i32 %319, %264
  %320 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm7, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1271 = sext i32 %add8.i1270 to i64
  %arrayidx.i.i1272 = getelementptr inbounds i16, ptr %320, i64 %idxprom.i.i1271
  store ptr %arrayidx.i.i1272, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %321 = load i16, ptr %arrayidx.i.i1272, align 2, !tbaa !31
  %322 = lshr i16 %321, 4
  %idxprom.i.i.i1273 = zext i16 %322 to i64
  %arrayidx.i.i.i1274 = getelementptr inbounds i16, ptr %268, i64 %idxprom.i.i.i1273
  %323 = load i16, ptr %arrayidx.i.i.i1274, align 2, !tbaa !31
  %inc.i.i1276 = add nsw i32 %270, 7
  %idxprom.i.i15.i1278 = sext i32 %inc.i.i1260 to i64
  %arrayidx.i.i16.i1279 = getelementptr inbounds i16, ptr %271, i64 %idxprom.i.i15.i1278
  store i16 %323, ptr %arrayidx.i.i16.i1279, align 2, !tbaa !31
  %324 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm8, i64 0, i32 2), align 8, !tbaa !114
  %325 = load i16, ptr %324, align 2, !tbaa !31
  %conv.i1281 = zext i16 %325 to i32
  %add.i1283 = sub i32 %sub.i1177, %conv.i1281
  %326 = lshr i32 %add.i1283, 7
  %327 = trunc i32 %326 to i16
  %conv7.i1285 = add i16 %325, %327
  store i16 %conv7.i1285, ptr %324, align 2, !tbaa !31
  %328 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm8, i64 0, i32 1), align 8, !tbaa !112
  %add8.i1286 = add nsw i32 %328, %264
  %329 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm8, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1287 = sext i32 %add8.i1286 to i64
  %arrayidx.i.i1288 = getelementptr inbounds i16, ptr %329, i64 %idxprom.i.i1287
  store ptr %arrayidx.i.i1288, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm8, i64 0, i32 2), align 8, !tbaa !114
  %330 = load i16, ptr %arrayidx.i.i1288, align 2, !tbaa !31
  %331 = lshr i16 %330, 4
  %idxprom.i.i.i1289 = zext i16 %331 to i64
  %arrayidx.i.i.i1290 = getelementptr inbounds i16, ptr %268, i64 %idxprom.i.i.i1289
  %332 = load i16, ptr %arrayidx.i.i.i1290, align 2, !tbaa !31
  %inc.i.i1292 = add nsw i32 %270, 8
  %idxprom.i.i15.i1294 = sext i32 %inc.i.i1276 to i64
  %arrayidx.i.i16.i1295 = getelementptr inbounds i16, ptr %271, i64 %idxprom.i.i15.i1294
  store i16 %332, ptr %arrayidx.i.i16.i1295, align 2, !tbaa !31
  %333 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm9, i64 0, i32 2), align 8, !tbaa !114
  %334 = load i16, ptr %333, align 2, !tbaa !31
  %conv.i1297 = zext i16 %334 to i32
  %add.i1299 = sub i32 %sub.i1177, %conv.i1297
  %335 = lshr i32 %add.i1299, 7
  %336 = trunc i32 %335 to i16
  %conv7.i1301 = add i16 %334, %336
  store i16 %conv7.i1301, ptr %333, align 2, !tbaa !31
  %337 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm9, i64 0, i32 1), align 8, !tbaa !112
  %add8.i1302 = add nsw i32 %337, %264
  %338 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm9, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1303 = sext i32 %add8.i1302 to i64
  %arrayidx.i.i1304 = getelementptr inbounds i16, ptr %338, i64 %idxprom.i.i1303
  store ptr %arrayidx.i.i1304, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm9, i64 0, i32 2), align 8, !tbaa !114
  %339 = load i16, ptr %arrayidx.i.i1304, align 2, !tbaa !31
  %340 = lshr i16 %339, 4
  %idxprom.i.i.i1305 = zext i16 %340 to i64
  %arrayidx.i.i.i1306 = getelementptr inbounds i16, ptr %268, i64 %idxprom.i.i.i1305
  %341 = load i16, ptr %arrayidx.i.i.i1306, align 2, !tbaa !31
  %inc.i.i1308 = add nsw i32 %270, 9
  %idxprom.i.i15.i1310 = sext i32 %inc.i.i1292 to i64
  %arrayidx.i.i16.i1311 = getelementptr inbounds i16, ptr %271, i64 %idxprom.i.i15.i1310
  store i16 %341, ptr %arrayidx.i.i16.i1311, align 2, !tbaa !31
  %342 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE5scm10, i64 0, i32 2), align 8, !tbaa !114
  %343 = load i16, ptr %342, align 2, !tbaa !31
  %conv.i1313 = zext i16 %343 to i32
  %add.i1315 = sub i32 %sub.i1177, %conv.i1313
  %344 = lshr i32 %add.i1315, 7
  %345 = trunc i32 %344 to i16
  %conv7.i1317 = add i16 %343, %345
  store i16 %conv7.i1317, ptr %342, align 2, !tbaa !31
  %346 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE5scm10, i64 0, i32 1), align 8, !tbaa !112
  %add8.i1318 = add nsw i32 %346, %264
  %347 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE5scm10, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1319 = sext i32 %add8.i1318 to i64
  %arrayidx.i.i1320 = getelementptr inbounds i16, ptr %347, i64 %idxprom.i.i1319
  store ptr %arrayidx.i.i1320, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE5scm10, i64 0, i32 2), align 8, !tbaa !114
  %348 = load i16, ptr %arrayidx.i.i1320, align 2, !tbaa !31
  %349 = lshr i16 %348, 4
  %idxprom.i.i.i1321 = zext i16 %349 to i64
  %arrayidx.i.i.i1322 = getelementptr inbounds i16, ptr %268, i64 %idxprom.i.i.i1321
  %350 = load i16, ptr %arrayidx.i.i.i1322, align 2, !tbaa !31
  %inc.i.i1324 = add nsw i32 %270, 10
  store i32 %inc.i.i1324, ptr %nx.i.i, align 8, !tbaa !64
  %idxprom.i.i15.i1326 = sext i32 %inc.i.i1308 to i64
  %arrayidx.i.i16.i1327 = getelementptr inbounds i16, ptr %271, i64 %idxprom.i.i15.i1326
  store i16 %350, ptr %arrayidx.i.i16.i1327, align 2, !tbaa !31
  %351 = load i32, ptr @bpos, align 4, !tbaa !25
  %352 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i1328 = add nsw i32 %352, -1
  %353 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i1329 = add nsw i32 %353, -1
  %and.i.i1330 = and i32 %sub3.i.i1329, %sub.i.i1328
  %354 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i1331 = sext i32 %and.i.i1330 to i64
  %arrayidx.i.i.i1332 = getelementptr inbounds i8, ptr %354, i64 %idxprom.i.i.i1331
  %355 = load i8, ptr %arrayidx.i.i.i1332, align 1, !tbaa !9
  %conv.i.i1333 = zext i8 %355 to i32
  %call2.i = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8bmpModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %264, i32 noundef %351, i32 noundef %conv.i.i1333, i32 noundef %258)
  %356 = load i32, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  br label %cleanup

cleanup:                                          ; preds = %if.end327, %if.then174
  %retval.0 = phi i32 [ 0, %if.then174 ], [ %356, %if.end327 ]
  ret i32 %retval.0

ehcleanup:                                        ; preds = %lpad68, %lpad61, %lpad54, %lpad47, %lpad40, %lpad33, %lpad26, %lpad19, %lpad12, %lpad5, %lpad
  %_ZGVZ8bmpModelR5MixerE2cm.sink = phi ptr [ @_ZGVZ8bmpModelR5MixerE2cm, %lpad68 ], [ @_ZGVZ8bmpModelR5MixerE5scm10, %lpad61 ], [ @_ZGVZ8bmpModelR5MixerE4scm9, %lpad54 ], [ @_ZGVZ8bmpModelR5MixerE4scm8, %lpad47 ], [ @_ZGVZ8bmpModelR5MixerE4scm7, %lpad40 ], [ @_ZGVZ8bmpModelR5MixerE4scm6, %lpad33 ], [ @_ZGVZ8bmpModelR5MixerE4scm5, %lpad26 ], [ @_ZGVZ8bmpModelR5MixerE4scm4, %lpad19 ], [ @_ZGVZ8bmpModelR5MixerE4scm3, %lpad12 ], [ @_ZGVZ8bmpModelR5MixerE4scm2, %lpad5 ], [ @_ZGVZ8bmpModelR5MixerE4scm1, %lpad ]
  %.pn = phi { ptr, i32 } [ %64, %lpad68 ], [ %63, %lpad61 ], [ %62, %lpad54 ], [ %61, %lpad47 ], [ %60, %lpad40 ], [ %59, %lpad33 ], [ %58, %lpad26 ], [ %57, %lpad19 ], [ %56, %lpad12 ], [ %55, %lpad5 ], [ %54, %lpad ]
  tail call void @__cxa_guard_abort(ptr nonnull %_ZGVZ8bmpModelR5MixerE2cm.sink) #39
  resume { ptr, i32 } %.pn
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_Z2i4i(i32 noundef %i) local_unnamed_addr #17 comdat {
entry:
  %0 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i = sub i32 %0, %i
  %1 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i = add nsw i32 %1, -1
  %and.i = and i32 %sub3.i, %sub.i
  %2 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %2, i64 %idxprom.i.i
  %3 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %conv.i = zext i8 %3 to i32
  %sub.i13 = add i32 %sub.i, 1
  %and.i15 = and i32 %sub3.i, %sub.i13
  %idxprom.i.i16 = sext i32 %and.i15 to i64
  %arrayidx.i.i17 = getelementptr inbounds i8, ptr %2, i64 %idxprom.i.i16
  %4 = load i8, ptr %arrayidx.i.i17, align 1, !tbaa !9
  %conv.i18 = zext i8 %4 to i32
  %mul = shl nuw nsw i32 %conv.i18, 8
  %add = or i32 %mul, %conv.i
  %sub.i19 = add i32 %sub.i, 2
  %and.i21 = and i32 %sub3.i, %sub.i19
  %idxprom.i.i22 = sext i32 %and.i21 to i64
  %arrayidx.i.i23 = getelementptr inbounds i8, ptr %2, i64 %idxprom.i.i22
  %5 = load i8, ptr %arrayidx.i.i23, align 1, !tbaa !9
  %conv.i24 = zext i8 %5 to i32
  %mul4 = shl nuw nsw i32 %conv.i24, 16
  %add5 = or i32 %add, %mul4
  %sub.i25 = add i32 %sub.i, 3
  %and.i27 = and i32 %sub3.i, %sub.i25
  %idxprom.i.i28 = sext i32 %and.i27 to i64
  %arrayidx.i.i29 = getelementptr inbounds i8, ptr %2, i64 %idxprom.i.i28
  %6 = load i8, ptr %arrayidx.i.i29, align 1, !tbaa !9
  %conv.i30 = zext i8 %6 to i32
  %mul8 = shl nuw nsw i32 %conv.i30, 24
  %add9 = or i32 %add5, %mul8
  ret i32 %add9
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define dso_local void @_Z9model8bitR5Mixeri(ptr nocapture noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %w) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm1 acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !110

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm1) #39
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm1, i32 noundef 131072)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init
  %2 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm1) #39
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %entry
  %3 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm2 acquire, align 8
  %guard.uninitialized1 = icmp eq i8 %3, 0
  br i1 %guard.uninitialized1, label %init.check2, label %init.end7, !prof !110

init.check2:                                      ; preds = %init.end
  %4 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm2) #39
  %tobool3.not = icmp eq i32 %4, 0
  br i1 %tobool3.not, label %init.end7, label %init4

init4:                                            ; preds = %init.check2
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm2, i32 noundef 131072)
          to label %invoke.cont6 unwind label %lpad5

invoke.cont6:                                     ; preds = %init4
  %5 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm2) #39
  br label %init.end7

init.end7:                                        ; preds = %invoke.cont6, %init.check2, %init.end
  %6 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm3 acquire, align 8
  %guard.uninitialized8 = icmp eq i8 %6, 0
  br i1 %guard.uninitialized8, label %init.check9, label %init.end14, !prof !110

init.check9:                                      ; preds = %init.end7
  %7 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm3) #39
  %tobool10.not = icmp eq i32 %7, 0
  br i1 %tobool10.not, label %init.end14, label %init11

init11:                                           ; preds = %init.check9
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm3, i32 noundef 131072)
          to label %invoke.cont13 unwind label %lpad12

invoke.cont13:                                    ; preds = %init11
  %8 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm3, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm3) #39
  br label %init.end14

init.end14:                                       ; preds = %invoke.cont13, %init.check9, %init.end7
  %9 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm4 acquire, align 8
  %guard.uninitialized15 = icmp eq i8 %9, 0
  br i1 %guard.uninitialized15, label %init.check16, label %init.end21, !prof !110

init.check16:                                     ; preds = %init.end14
  %10 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm4) #39
  %tobool17.not = icmp eq i32 %10, 0
  br i1 %tobool17.not, label %init.end21, label %init18

init18:                                           ; preds = %init.check16
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm4, i32 noundef 131072)
          to label %invoke.cont20 unwind label %lpad19

invoke.cont20:                                    ; preds = %init18
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm4, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm4) #39
  br label %init.end21

init.end21:                                       ; preds = %invoke.cont20, %init.check16, %init.end14
  %12 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm5 acquire, align 8
  %guard.uninitialized22 = icmp eq i8 %12, 0
  br i1 %guard.uninitialized22, label %init.check23, label %init.end28, !prof !110

init.check23:                                     ; preds = %init.end21
  %13 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm5) #39
  %tobool24.not = icmp eq i32 %13, 0
  br i1 %tobool24.not, label %init.end28, label %init25

init25:                                           ; preds = %init.check23
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm5, i32 noundef 131072)
          to label %invoke.cont27 unwind label %lpad26

invoke.cont27:                                    ; preds = %init25
  %14 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm5, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm5) #39
  br label %init.end28

init.end28:                                       ; preds = %invoke.cont27, %init.check23, %init.end21
  %15 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm6 acquire, align 8
  %guard.uninitialized29 = icmp eq i8 %15, 0
  br i1 %guard.uninitialized29, label %init.check30, label %init.end35, !prof !110

init.check30:                                     ; preds = %init.end28
  %16 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm6) #39
  %tobool31.not = icmp eq i32 %16, 0
  br i1 %tobool31.not, label %init.end35, label %init32

init32:                                           ; preds = %init.check30
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm6, i32 noundef 262144)
          to label %invoke.cont34 unwind label %lpad33

invoke.cont34:                                    ; preds = %init32
  %17 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm6, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm6) #39
  br label %init.end35

init.end35:                                       ; preds = %invoke.cont34, %init.check30, %init.end28
  %18 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm7 acquire, align 8
  %guard.uninitialized36 = icmp eq i8 %18, 0
  br i1 %guard.uninitialized36, label %init.check37, label %init.end42, !prof !110

init.check37:                                     ; preds = %init.end35
  %19 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm7) #39
  %tobool38.not = icmp eq i32 %19, 0
  br i1 %tobool38.not, label %init.end42, label %init39

init39:                                           ; preds = %init.check37
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm7, i32 noundef 131072)
          to label %invoke.cont41 unwind label %lpad40

invoke.cont41:                                    ; preds = %init39
  %20 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm7, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm7) #39
  br label %init.end42

init.end42:                                       ; preds = %invoke.cont41, %init.check37, %init.end35
  %21 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE2cm acquire, align 8
  %guard.uninitialized43 = icmp eq i8 %21, 0
  br i1 %guard.uninitialized43, label %init.check44, label %init.end49, !prof !110

init.check44:                                     ; preds = %init.end42
  %22 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE2cm) #39
  %tobool45.not = icmp eq i32 %22, 0
  br i1 %tobool45.not, label %init.end49, label %init46

init46:                                           ; preds = %init.check44
  %23 = load i32, ptr @level, align 4, !tbaa !25
  %mul = shl i32 262144, %23
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ9model8bitR5MixeriE2cm, i32 noundef %mul, i32 noundef 32)
          to label %invoke.cont48 unwind label %lpad47

invoke.cont48:                                    ; preds = %init46
  %24 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE2cm) #39
  br label %init.end49

init.end49:                                       ; preds = %invoke.cont48, %init.check44, %init.end42
  %25 = load i32, ptr @bpos, align 4, !tbaa !25
  %tobool50.not = icmp eq i32 %25, 0
  br i1 %tobool50.not, label %if.then, label %init.end49.if.end_crit_edge

init.end49.if.end_crit_edge:                      ; preds = %init.end49
  %.pre = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %.pre1858 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %.pre1859 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %.pre1860 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm4, i64 0, i32 1), align 8, !tbaa !112
  br label %if.end

if.then:                                          ; preds = %init.end49
  %26 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i = add nsw i32 %26, -1
  %27 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i = add nsw i32 %27, -1
  %and.i = and i32 %sub3.i, %sub.i
  %28 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i
  %29 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %conv.i = zext i8 %29 to i32
  %sub = add nsw i32 %w, -1
  %sub.i518 = sub nsw i32 %26, %sub
  %and.i520 = and i32 %sub3.i, %sub.i518
  %idxprom.i.i521 = sext i32 %and.i520 to i64
  %arrayidx.i.i522 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i521
  %30 = load i8, ptr %arrayidx.i.i522, align 1, !tbaa !9
  %conv.i523 = zext i8 %30 to i32
  %add = add nuw nsw i32 %conv.i523, %conv.i
  %sub.i524 = sub nsw i32 %26, %w
  %and.i526 = and i32 %sub3.i, %sub.i524
  %idxprom.i.i527 = sext i32 %and.i526 to i64
  %arrayidx.i.i528 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i527
  %31 = load i8, ptr %arrayidx.i.i528, align 1, !tbaa !9
  %conv.i529 = zext i8 %31 to i32
  %add53 = add nuw nsw i32 %add, %conv.i529
  %add54 = add nsw i32 %w, 1
  %sub.i530 = sub nsw i32 %26, %add54
  %and.i532 = and i32 %sub3.i, %sub.i530
  %idxprom.i.i533 = sext i32 %and.i532 to i64
  %arrayidx.i.i534 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i533
  %32 = load i8, ptr %arrayidx.i.i534, align 1, !tbaa !9
  %conv.i535 = zext i8 %32 to i32
  %add56 = add nuw nsw i32 %add53, %conv.i535
  %mul.i = mul nuw nsw i32 %conv.i, %conv.i
  %mul.i542 = mul nuw nsw i32 %conv.i523, %conv.i523
  %add60 = add nuw nsw i32 %mul.i542, %mul.i
  %mul.i549 = mul nuw nsw i32 %conv.i529, %conv.i529
  %add62 = add nuw nsw i32 %add60, %mul.i549
  %mul.i556 = mul nuw nsw i32 %conv.i535, %conv.i535
  %add65 = add nuw nsw i32 %add62, %mul.i556
  %mul66 = mul nuw nsw i32 %add56, %add56
  %div1855 = lshr i32 %mul66, 2
  %sub67 = sub nsw i32 %add65, %div1855
  %33 = lshr i32 %sub67, 2
  %shr68 = lshr i32 %add56, 3
  %34 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %35 = and i32 %33, 65535
  %idxprom.i.i557 = zext i32 %35 to i64
  %arrayidx.i.i558 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i557
  %36 = load i8, ptr %arrayidx.i.i558, align 1, !tbaa !9
  %conv2.i = zext i8 %36 to i32
  %shr71 = lshr i32 %conv.i, 2
  %shr73 = lshr i32 %conv.i529, 2
  %mul1.i = mul nuw nsw i32 %shr71, 30005491
  %mul2.i = mul nuw i32 %shr73, 50004239
  %add3.i = add nuw nsw i32 %mul1.i, 19995673
  %add7.i = add i32 %add3.i, %mul2.i
  %shr.i = lshr i32 %add7.i, 9
  %shr10.i = lshr i32 %conv.i, 5
  %shr12.i = lshr i32 %conv.i529, 6
  %37 = xor i32 %shr12.i, %shr10.i
  %38 = or i32 %37, 67108864
  %39 = xor i32 %38, %shr.i
  %xor17.i = xor i32 %39, %add7.i
  %40 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i = add nsw i32 %40, 1
  store i32 %inc.i, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i571 = mul i32 %xor17.i, 987654323
  %add.i572 = add i32 %mul.i571, %40
  %or.i = tail call i32 @llvm.fshl.i32(i32 %add.i572, i32 %add.i572, i32 16)
  %mul2.i573 = mul i32 %or.i, 123456791
  %add3.i574 = add i32 %mul2.i573, %40
  %41 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %idxprom.i.i575 = sext i32 %40 to i64
  %arrayidx.i.i576 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i575
  store i32 %add3.i574, ptr %arrayidx.i.i576, align 4, !tbaa !25
  %42 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i577 = add nsw i32 %42, -1
  %43 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i578 = add nsw i32 %43, -1
  %and.i579 = and i32 %sub3.i578, %sub.i577
  %idxprom.i.i580 = sext i32 %and.i579 to i64
  %arrayidx.i.i581 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i580
  %44 = load i8, ptr %arrayidx.i.i581, align 1, !tbaa !9
  %45 = lshr i8 %44, 2
  %shr77 = zext i8 %45 to i32
  %sub.i583 = add nsw i32 %42, -2
  %and.i585 = and i32 %sub3.i578, %sub.i583
  %idxprom.i.i586 = sext i32 %and.i585 to i64
  %arrayidx.i.i587 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i586
  %46 = load i8, ptr %arrayidx.i.i587, align 1, !tbaa !9
  %47 = lshr i8 %46, 2
  %shr79 = zext i8 %47 to i32
  %mul1.i589 = mul nuw nsw i32 %shr77, 30005491
  %mul2.i591 = mul nuw i32 %shr79, 50004239
  %add3.i592 = add nuw nsw i32 %mul1.i589, 219998652
  %add7.i594 = add i32 %add3.i592, %mul2.i591
  %shr.i595 = lshr i32 %add7.i594, 9
  %shr10.i596 = lshr i32 %shr77, 3
  %shr12.i597 = lshr i32 %shr79, 4
  %48 = xor i32 %shr12.i597, %shr10.i596
  %49 = or i32 %48, 67108864
  %50 = xor i32 %shr.i595, %49
  %xor17.i598 = xor i32 %50, %add7.i594
  %51 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i599 = add nsw i32 %51, 1
  store i32 %inc.i599, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i600 = mul i32 %xor17.i598, 987654323
  %add.i601 = add i32 %mul.i600, %51
  %or.i602 = tail call i32 @llvm.fshl.i32(i32 %add.i601, i32 %add.i601, i32 16)
  %mul2.i603 = mul i32 %or.i602, 123456791
  %add3.i604 = add i32 %mul2.i603, %51
  %idxprom.i.i605 = sext i32 %51 to i64
  %arrayidx.i.i606 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i605
  store i32 %add3.i604, ptr %arrayidx.i.i606, align 4, !tbaa !25
  %52 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i607 = sub nsw i32 %52, %w
  %53 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i608 = add nsw i32 %53, -1
  %and.i609 = and i32 %sub3.i608, %sub.i607
  %idxprom.i.i610 = sext i32 %and.i609 to i64
  %arrayidx.i.i611 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i610
  %54 = load i8, ptr %arrayidx.i.i611, align 1, !tbaa !9
  %55 = lshr i8 %54, 2
  %shr83 = zext i8 %55 to i32
  %mul84 = shl nsw i32 %w, 1
  %sub.i613 = sub nsw i32 %52, %mul84
  %and.i615 = and i32 %sub3.i608, %sub.i613
  %idxprom.i.i616 = sext i32 %and.i615 to i64
  %arrayidx.i.i617 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i616
  %56 = load i8, ptr %arrayidx.i.i617, align 1, !tbaa !9
  %57 = lshr i8 %56, 2
  %shr86 = zext i8 %57 to i32
  %mul1.i619 = mul nuw nsw i32 %shr83, 30005491
  %mul2.i621 = mul nuw i32 %shr86, 50004239
  %add3.i622 = add nuw i32 %mul1.i619, 420001631
  %add7.i624 = add i32 %add3.i622, %mul2.i621
  %shr.i625 = lshr i32 %add7.i624, 9
  %shr10.i626 = lshr i32 %shr83, 3
  %shr12.i627 = lshr i32 %shr86, 4
  %58 = xor i32 %shr12.i627, %shr10.i626
  %59 = or i32 %58, 67108864
  %60 = xor i32 %shr.i625, %59
  %xor17.i628 = xor i32 %60, %add7.i624
  %61 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i629 = add nsw i32 %61, 1
  store i32 %inc.i629, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i630 = mul i32 %xor17.i628, 987654323
  %add.i631 = add i32 %mul.i630, %61
  %or.i632 = tail call i32 @llvm.fshl.i32(i32 %add.i631, i32 %add.i631, i32 16)
  %mul2.i633 = mul i32 %or.i632, 123456791
  %add3.i634 = add i32 %mul2.i633, %61
  %idxprom.i.i635 = sext i32 %61 to i64
  %arrayidx.i.i636 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i635
  store i32 %add3.i634, ptr %arrayidx.i.i636, align 4, !tbaa !25
  %62 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i637 = add nsw i32 %62, -1
  %63 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i638 = add nsw i32 %63, -1
  %and.i639 = and i32 %sub3.i638, %sub.i637
  %idxprom.i.i640 = sext i32 %and.i639 to i64
  %arrayidx.i.i641 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i640
  %64 = load i8, ptr %arrayidx.i.i641, align 1, !tbaa !9
  %65 = lshr i8 %64, 2
  %shr90 = zext i8 %65 to i32
  %sub.i643 = sub nsw i32 %62, %sub
  %and.i645 = and i32 %sub3.i638, %sub.i643
  %idxprom.i.i646 = sext i32 %and.i645 to i64
  %arrayidx.i.i647 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i646
  %66 = load i8, ptr %arrayidx.i.i647, align 1, !tbaa !9
  %67 = lshr i8 %66, 2
  %shr93 = zext i8 %67 to i32
  %mul1.i649 = mul nuw nsw i32 %shr90, 30005491
  %mul2.i651 = mul nuw i32 %shr93, 50004239
  %add3.i652 = add nuw i32 %mul1.i649, 620004610
  %add7.i654 = add i32 %add3.i652, %mul2.i651
  %shr.i655 = lshr i32 %add7.i654, 9
  %shr10.i656 = lshr i32 %shr90, 3
  %shr12.i657 = lshr i32 %shr93, 4
  %68 = xor i32 %shr10.i656, %shr12.i657
  %69 = xor i32 %68, %shr.i655
  %70 = xor i32 %69, %add7.i654
  %xor17.i658 = xor i32 %70, 67108865
  %71 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i659 = add nsw i32 %71, 1
  store i32 %inc.i659, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i660 = mul i32 %xor17.i658, 987654323
  %add.i661 = add i32 %mul.i660, %71
  %or.i662 = tail call i32 @llvm.fshl.i32(i32 %add.i661, i32 %add.i661, i32 16)
  %mul2.i663 = mul i32 %or.i662, 123456791
  %add3.i664 = add i32 %mul2.i663, %71
  %idxprom.i.i665 = sext i32 %71 to i64
  %arrayidx.i.i666 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i665
  store i32 %add3.i664, ptr %arrayidx.i.i666, align 4, !tbaa !25
  %72 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i667 = sub nsw i32 %72, %w
  %73 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i668 = add nsw i32 %73, -1
  %and.i669 = and i32 %sub3.i668, %sub.i667
  %idxprom.i.i670 = sext i32 %and.i669 to i64
  %arrayidx.i.i671 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i670
  %74 = load i8, ptr %arrayidx.i.i671, align 1, !tbaa !9
  %75 = lshr i8 %74, 2
  %shr97 = zext i8 %75 to i32
  %sub.i673 = sub nsw i32 %72, %add54
  %and.i675 = and i32 %sub3.i668, %sub.i673
  %idxprom.i.i676 = sext i32 %and.i675 to i64
  %arrayidx.i.i677 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i676
  %76 = load i8, ptr %arrayidx.i.i677, align 1, !tbaa !9
  %77 = lshr i8 %76, 2
  %shr100 = zext i8 %77 to i32
  %mul1.i679 = mul nuw nsw i32 %shr97, 30005491
  %mul2.i681 = mul nuw i32 %shr100, 50004239
  %add3.i682 = add nuw i32 %mul1.i679, 820007589
  %add7.i684 = add i32 %add3.i682, %mul2.i681
  %shr.i685 = lshr i32 %add7.i684, 9
  %shr10.i686 = lshr i32 %shr97, 3
  %shr12.i687 = lshr i32 %shr100, 4
  %78 = xor i32 %shr10.i686, %shr12.i687
  %79 = xor i32 %78, %shr.i685
  %80 = xor i32 %79, %add7.i684
  %xor17.i688 = xor i32 %80, 67108865
  %81 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i689 = add nsw i32 %81, 1
  store i32 %inc.i689, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i690 = mul i32 %xor17.i688, 987654323
  %add.i691 = add i32 %mul.i690, %81
  %or.i692 = tail call i32 @llvm.fshl.i32(i32 %add.i691, i32 %add.i691, i32 16)
  %mul2.i693 = mul i32 %or.i692, 123456791
  %add3.i694 = add i32 %mul2.i693, %81
  %idxprom.i.i695 = sext i32 %81 to i64
  %arrayidx.i.i696 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i695
  store i32 %add3.i694, ptr %arrayidx.i.i696, align 4, !tbaa !25
  %82 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i697 = sub nsw i32 %82, %add54
  %83 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i698 = add nsw i32 %83, -1
  %and.i699 = and i32 %sub3.i698, %sub.i697
  %idxprom.i.i700 = sext i32 %and.i699 to i64
  %arrayidx.i.i701 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i700
  %84 = load i8, ptr %arrayidx.i.i701, align 1, !tbaa !9
  %85 = lshr i8 %84, 2
  %shr105 = zext i8 %85 to i32
  %add106 = add nsw i32 %w, 2
  %sub.i703 = sub nsw i32 %82, %add106
  %and.i705 = and i32 %sub3.i698, %sub.i703
  %idxprom.i.i706 = sext i32 %and.i705 to i64
  %arrayidx.i.i707 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i706
  %86 = load i8, ptr %arrayidx.i.i707, align 1, !tbaa !9
  %87 = lshr i8 %86, 2
  %shr108 = zext i8 %87 to i32
  %mul1.i709 = mul nuw nsw i32 %shr105, 30005491
  %mul2.i711 = mul nuw i32 %shr108, 50004239
  %add3.i712 = add nuw i32 %mul1.i709, 1020010568
  %add7.i714 = add i32 %add3.i712, %mul2.i711
  %shr.i715 = lshr i32 %add7.i714, 9
  %shr10.i716 = lshr i32 %shr105, 3
  %shr12.i717 = lshr i32 %shr108, 4
  %88 = xor i32 %shr10.i716, %shr12.i717
  %89 = xor i32 %88, %shr.i715
  %90 = xor i32 %89, %add7.i714
  %xor17.i718 = xor i32 %90, 67108865
  %91 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i719 = add nsw i32 %91, 1
  store i32 %inc.i719, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i720 = mul i32 %xor17.i718, 987654323
  %add.i721 = add i32 %mul.i720, %91
  %or.i722 = tail call i32 @llvm.fshl.i32(i32 %add.i721, i32 %add.i721, i32 16)
  %mul2.i723 = mul i32 %or.i722, 123456791
  %add3.i724 = add i32 %mul2.i723, %91
  %idxprom.i.i725 = sext i32 %91 to i64
  %arrayidx.i.i726 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i725
  store i32 %add3.i724, ptr %arrayidx.i.i726, align 4, !tbaa !25
  %92 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i727 = sub nsw i32 %92, %add54
  %93 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i728 = add nsw i32 %93, -1
  %and.i729 = and i32 %sub3.i728, %sub.i727
  %idxprom.i.i730 = sext i32 %and.i729 to i64
  %arrayidx.i.i731 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i730
  %94 = load i8, ptr %arrayidx.i.i731, align 1, !tbaa !9
  %95 = lshr i8 %94, 2
  %shr113 = zext i8 %95 to i32
  %add115 = add nsw i32 %mul84, 2
  %sub.i733 = sub nsw i32 %92, %add115
  %and.i735 = and i32 %sub3.i728, %sub.i733
  %idxprom.i.i736 = sext i32 %and.i735 to i64
  %arrayidx.i.i737 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i736
  %96 = load i8, ptr %arrayidx.i.i737, align 1, !tbaa !9
  %97 = lshr i8 %96, 2
  %shr117 = zext i8 %97 to i32
  %mul1.i739 = mul nuw nsw i32 %shr113, 30005491
  %mul2.i741 = mul nuw i32 %shr117, 50004239
  %add3.i742 = add nuw i32 %mul1.i739, 1220013547
  %add7.i744 = add i32 %add3.i742, %mul2.i741
  %shr.i745 = lshr i32 %add7.i744, 9
  %shr10.i746 = lshr i32 %shr113, 3
  %shr12.i747 = lshr i32 %shr117, 4
  %98 = xor i32 %shr10.i746, %shr12.i747
  %99 = xor i32 %98, %shr.i745
  %100 = xor i32 %99, %add7.i744
  %xor17.i748 = xor i32 %100, 67108865
  %101 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i749 = add nsw i32 %101, 1
  store i32 %inc.i749, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i750 = mul i32 %xor17.i748, 987654323
  %add.i751 = add i32 %mul.i750, %101
  %or.i752 = tail call i32 @llvm.fshl.i32(i32 %add.i751, i32 %add.i751, i32 16)
  %mul2.i753 = mul i32 %or.i752, 123456791
  %add3.i754 = add i32 %mul2.i753, %101
  %idxprom.i.i755 = sext i32 %101 to i64
  %arrayidx.i.i756 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i755
  store i32 %add3.i754, ptr %arrayidx.i.i756, align 4, !tbaa !25
  %102 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i757 = sub nsw i32 %102, %sub
  %103 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i758 = add nsw i32 %103, -1
  %and.i759 = and i32 %sub3.i758, %sub.i757
  %idxprom.i.i760 = sext i32 %and.i759 to i64
  %arrayidx.i.i761 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i760
  %104 = load i8, ptr %arrayidx.i.i761, align 1, !tbaa !9
  %105 = lshr i8 %104, 2
  %shr122 = zext i8 %105 to i32
  %sub124 = add nsw i32 %mul84, -2
  %sub.i763 = sub nsw i32 %102, %sub124
  %and.i765 = and i32 %sub3.i758, %sub.i763
  %idxprom.i.i766 = sext i32 %and.i765 to i64
  %arrayidx.i.i767 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i766
  %106 = load i8, ptr %arrayidx.i.i767, align 1, !tbaa !9
  %107 = lshr i8 %106, 2
  %shr126 = zext i8 %107 to i32
  %mul1.i769 = mul nuw nsw i32 %shr122, 30005491
  %mul2.i771 = mul nuw i32 %shr126, 50004239
  %add3.i772 = add nuw i32 %mul1.i769, 1420016526
  %add7.i774 = add i32 %add3.i772, %mul2.i771
  %shr.i775 = lshr i32 %add7.i774, 9
  %shr10.i776 = lshr i32 %shr122, 3
  %shr12.i777 = lshr i32 %shr126, 4
  %108 = xor i32 %shr10.i776, %shr12.i777
  %109 = xor i32 %108, %shr.i775
  %110 = xor i32 %109, %add7.i774
  %xor17.i778 = xor i32 %110, 67108866
  %111 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i779 = add nsw i32 %111, 1
  store i32 %inc.i779, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i780 = mul i32 %xor17.i778, 987654323
  %add.i781 = add i32 %mul.i780, %111
  %or.i782 = tail call i32 @llvm.fshl.i32(i32 %add.i781, i32 %add.i781, i32 16)
  %mul2.i783 = mul i32 %or.i782, 123456791
  %add3.i784 = add i32 %mul2.i783, %111
  %idxprom.i.i785 = sext i32 %111 to i64
  %arrayidx.i.i786 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i785
  store i32 %add3.i784, ptr %arrayidx.i.i786, align 4, !tbaa !25
  %112 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i787 = add nsw i32 %112, -1
  %113 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i788 = add nsw i32 %113, -1
  %and.i789 = and i32 %sub3.i788, %sub.i787
  %idxprom.i.i790 = sext i32 %and.i789 to i64
  %arrayidx.i.i791 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i790
  %114 = load i8, ptr %arrayidx.i.i791, align 1, !tbaa !9
  %conv.i792 = zext i8 %114 to i32
  %sub.i793 = sub nsw i32 %112, %w
  %and.i795 = and i32 %sub3.i788, %sub.i793
  %idxprom.i.i796 = sext i32 %and.i795 to i64
  %arrayidx.i.i797 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i796
  %115 = load i8, ptr %arrayidx.i.i797, align 1, !tbaa !9
  %conv.i798 = zext i8 %115 to i32
  %add131 = add nuw nsw i32 %conv.i798, %conv.i792
  %shr132 = lshr i32 %add131, 1
  %mul1.i799 = mul i32 %shr132, 30005491
  %add7.i803 = add i32 %mul1.i799, 1570015266
  %shr.i804 = lshr i32 %add7.i803, 9
  %shr10.i805 = lshr i32 %add131, 4
  %116 = xor i32 %shr10.i805, %shr.i804
  %117 = xor i32 %116, %add7.i803
  %xor17.i806 = xor i32 %117, 201326589
  %118 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i807 = add nsw i32 %118, 1
  store i32 %inc.i807, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i808 = mul i32 %xor17.i806, 987654323
  %add.i809 = add i32 %mul.i808, %118
  %or.i810 = tail call i32 @llvm.fshl.i32(i32 %add.i809, i32 %add.i809, i32 16)
  %mul2.i811 = mul i32 %or.i810, 123456791
  %add3.i812 = add i32 %mul2.i811, %118
  %idxprom.i.i813 = sext i32 %118 to i64
  %arrayidx.i.i814 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i813
  store i32 %add3.i812, ptr %arrayidx.i.i814, align 4, !tbaa !25
  %119 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i815 = add nsw i32 %119, -1
  %120 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i816 = add nsw i32 %120, -1
  %and.i817 = and i32 %sub3.i816, %sub.i815
  %idxprom.i.i818 = sext i32 %and.i817 to i64
  %arrayidx.i.i819 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i818
  %121 = load i8, ptr %arrayidx.i.i819, align 1, !tbaa !9
  %conv.i820 = zext i8 %121 to i32
  %sub.i821 = add nsw i32 %119, -2
  %and.i823 = and i32 %sub3.i816, %sub.i821
  %idxprom.i.i824 = sext i32 %and.i823 to i64
  %arrayidx.i.i825 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i824
  %122 = load i8, ptr %arrayidx.i.i825, align 1, !tbaa !9
  %conv.i826 = zext i8 %122 to i32
  %add137 = add nuw nsw i32 %conv.i826, %conv.i820
  %shr138 = lshr i32 %add137, 1
  %mul1.i827 = mul i32 %shr138, 30005491
  %add7.i831 = add i32 %mul1.i827, 1770018245
  %shr.i832 = lshr i32 %add7.i831, 9
  %shr10.i833 = lshr i32 %add137, 4
  %123 = xor i32 %shr10.i833, %shr.i832
  %124 = xor i32 %123, %add7.i831
  %xor17.i834 = xor i32 %124, 201326589
  %125 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i835 = add nsw i32 %125, 1
  store i32 %inc.i835, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i836 = mul i32 %xor17.i834, 987654323
  %add.i837 = add i32 %mul.i836, %125
  %or.i838 = tail call i32 @llvm.fshl.i32(i32 %add.i837, i32 %add.i837, i32 16)
  %mul2.i839 = mul i32 %or.i838, 123456791
  %add3.i840 = add i32 %mul2.i839, %125
  %idxprom.i.i841 = sext i32 %125 to i64
  %arrayidx.i.i842 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i841
  store i32 %add3.i840, ptr %arrayidx.i.i842, align 4, !tbaa !25
  %126 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i843 = sub nsw i32 %126, %w
  %127 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i844 = add nsw i32 %127, -1
  %and.i845 = and i32 %sub3.i844, %sub.i843
  %idxprom.i.i846 = sext i32 %and.i845 to i64
  %arrayidx.i.i847 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i846
  %128 = load i8, ptr %arrayidx.i.i847, align 1, !tbaa !9
  %conv.i848 = zext i8 %128 to i32
  %sub.i849 = sub nsw i32 %126, %mul84
  %and.i851 = and i32 %sub3.i844, %sub.i849
  %idxprom.i.i852 = sext i32 %and.i851 to i64
  %arrayidx.i.i853 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i852
  %129 = load i8, ptr %arrayidx.i.i853, align 1, !tbaa !9
  %conv.i854 = zext i8 %129 to i32
  %add144 = add nuw nsw i32 %conv.i854, %conv.i848
  %shr145 = lshr i32 %add144, 1
  %mul1.i855 = mul i32 %shr145, 30005491
  %add7.i859 = add i32 %mul1.i855, 1970021224
  %shr.i860 = lshr i32 %add7.i859, 9
  %shr10.i861 = lshr i32 %add144, 4
  %130 = xor i32 %shr10.i861, %shr.i860
  %131 = xor i32 %130, %add7.i859
  %xor17.i862 = xor i32 %131, 201326589
  %132 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i863 = add nsw i32 %132, 1
  store i32 %inc.i863, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i864 = mul i32 %xor17.i862, 987654323
  %add.i865 = add i32 %mul.i864, %132
  %or.i866 = tail call i32 @llvm.fshl.i32(i32 %add.i865, i32 %add.i865, i32 16)
  %mul2.i867 = mul i32 %or.i866, 123456791
  %add3.i868 = add i32 %mul2.i867, %132
  %idxprom.i.i869 = sext i32 %132 to i64
  %arrayidx.i.i870 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i869
  store i32 %add3.i868, ptr %arrayidx.i.i870, align 4, !tbaa !25
  %133 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i871 = add nsw i32 %133, -1
  %134 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i872 = add nsw i32 %134, -1
  %and.i873 = and i32 %sub3.i872, %sub.i871
  %idxprom.i.i874 = sext i32 %and.i873 to i64
  %arrayidx.i.i875 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i874
  %135 = load i8, ptr %arrayidx.i.i875, align 1, !tbaa !9
  %conv.i876 = zext i8 %135 to i32
  %sub.i877 = sub nsw i32 %133, %sub
  %and.i879 = and i32 %sub3.i872, %sub.i877
  %idxprom.i.i880 = sext i32 %and.i879 to i64
  %arrayidx.i.i881 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i880
  %136 = load i8, ptr %arrayidx.i.i881, align 1, !tbaa !9
  %conv.i882 = zext i8 %136 to i32
  %add151 = add nuw nsw i32 %conv.i882, %conv.i876
  %shr152 = lshr i32 %add151, 1
  %mul1.i883 = mul i32 %shr152, 30005491
  %add7.i887 = add i32 %mul1.i883, -2124943093
  %shr.i888 = lshr i32 %add7.i887, 9
  %shr10.i889 = lshr i32 %add151, 4
  %137 = xor i32 %shr10.i889, %shr.i888
  %138 = xor i32 %137, %add7.i887
  %xor17.i890 = xor i32 %138, 201326588
  %139 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i891 = add nsw i32 %139, 1
  store i32 %inc.i891, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i892 = mul i32 %xor17.i890, 987654323
  %add.i893 = add i32 %mul.i892, %139
  %or.i894 = tail call i32 @llvm.fshl.i32(i32 %add.i893, i32 %add.i893, i32 16)
  %mul2.i895 = mul i32 %or.i894, 123456791
  %add3.i896 = add i32 %mul2.i895, %139
  %idxprom.i.i897 = sext i32 %139 to i64
  %arrayidx.i.i898 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i897
  store i32 %add3.i896, ptr %arrayidx.i.i898, align 4, !tbaa !25
  %140 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i899 = sub nsw i32 %140, %w
  %141 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i900 = add nsw i32 %141, -1
  %and.i901 = and i32 %sub3.i900, %sub.i899
  %idxprom.i.i902 = sext i32 %and.i901 to i64
  %arrayidx.i.i903 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i902
  %142 = load i8, ptr %arrayidx.i.i903, align 1, !tbaa !9
  %conv.i904 = zext i8 %142 to i32
  %sub.i905 = sub nsw i32 %140, %add54
  %and.i907 = and i32 %sub3.i900, %sub.i905
  %idxprom.i.i908 = sext i32 %and.i907 to i64
  %arrayidx.i.i909 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i908
  %143 = load i8, ptr %arrayidx.i.i909, align 1, !tbaa !9
  %conv.i910 = zext i8 %143 to i32
  %add158 = add nuw nsw i32 %conv.i910, %conv.i904
  %shr159 = lshr i32 %add158, 1
  %mul1.i911 = mul i32 %shr159, 30005491
  %add7.i915 = add i32 %mul1.i911, -1924940114
  %shr.i916 = lshr i32 %add7.i915, 9
  %shr10.i917 = lshr i32 %add158, 4
  %144 = xor i32 %shr10.i917, %shr.i916
  %145 = xor i32 %144, %add7.i915
  %xor17.i918 = xor i32 %145, 201326588
  %146 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i919 = add nsw i32 %146, 1
  store i32 %inc.i919, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i920 = mul i32 %xor17.i918, 987654323
  %add.i921 = add i32 %mul.i920, %146
  %or.i922 = tail call i32 @llvm.fshl.i32(i32 %add.i921, i32 %add.i921, i32 16)
  %mul2.i923 = mul i32 %or.i922, 123456791
  %add3.i924 = add i32 %mul2.i923, %146
  %idxprom.i.i925 = sext i32 %146 to i64
  %arrayidx.i.i926 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i925
  store i32 %add3.i924, ptr %arrayidx.i.i926, align 4, !tbaa !25
  %147 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i927 = sub nsw i32 %147, %add54
  %148 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i928 = add nsw i32 %148, -1
  %and.i929 = and i32 %sub3.i928, %sub.i927
  %idxprom.i.i930 = sext i32 %and.i929 to i64
  %arrayidx.i.i931 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i930
  %149 = load i8, ptr %arrayidx.i.i931, align 1, !tbaa !9
  %conv.i932 = zext i8 %149 to i32
  %sub.i933 = sub nsw i32 %147, %add106
  %and.i935 = and i32 %sub3.i928, %sub.i933
  %idxprom.i.i936 = sext i32 %and.i935 to i64
  %arrayidx.i.i937 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i936
  %150 = load i8, ptr %arrayidx.i.i937, align 1, !tbaa !9
  %conv.i938 = zext i8 %150 to i32
  %add166 = add nuw nsw i32 %conv.i938, %conv.i932
  %shr167 = lshr i32 %add166, 1
  %mul1.i939 = mul i32 %shr167, 30005491
  %add7.i943 = add i32 %mul1.i939, -1724937135
  %shr.i944 = lshr i32 %add7.i943, 9
  %shr10.i945 = lshr i32 %add166, 4
  %151 = xor i32 %shr10.i945, %shr.i944
  %152 = xor i32 %151, %add7.i943
  %xor17.i946 = xor i32 %152, 201326588
  %153 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i947 = add nsw i32 %153, 1
  store i32 %inc.i947, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i948 = mul i32 %xor17.i946, 987654323
  %add.i949 = add i32 %mul.i948, %153
  %or.i950 = tail call i32 @llvm.fshl.i32(i32 %add.i949, i32 %add.i949, i32 16)
  %mul2.i951 = mul i32 %or.i950, 123456791
  %add3.i952 = add i32 %mul2.i951, %153
  %idxprom.i.i953 = sext i32 %153 to i64
  %arrayidx.i.i954 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i953
  store i32 %add3.i952, ptr %arrayidx.i.i954, align 4, !tbaa !25
  %154 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i955 = sub nsw i32 %154, %add54
  %155 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i956 = add nsw i32 %155, -1
  %and.i957 = and i32 %sub3.i956, %sub.i955
  %idxprom.i.i958 = sext i32 %and.i957 to i64
  %arrayidx.i.i959 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i958
  %156 = load i8, ptr %arrayidx.i.i959, align 1, !tbaa !9
  %conv.i960 = zext i8 %156 to i32
  %sub.i961 = sub nsw i32 %154, %add115
  %and.i963 = and i32 %sub3.i956, %sub.i961
  %idxprom.i.i964 = sext i32 %and.i963 to i64
  %arrayidx.i.i965 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i964
  %157 = load i8, ptr %arrayidx.i.i965, align 1, !tbaa !9
  %conv.i966 = zext i8 %157 to i32
  %add175 = add nuw nsw i32 %conv.i966, %conv.i960
  %shr176 = lshr i32 %add175, 1
  %mul1.i967 = mul i32 %shr176, 30005491
  %add7.i971 = add i32 %mul1.i967, -1524934156
  %shr.i972 = lshr i32 %add7.i971, 9
  %shr10.i973 = lshr i32 %add175, 4
  %158 = xor i32 %shr10.i973, %shr.i972
  %159 = xor i32 %158, %add7.i971
  %xor17.i974 = xor i32 %159, 201326588
  %160 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i975 = add nsw i32 %160, 1
  store i32 %inc.i975, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i976 = mul i32 %xor17.i974, 987654323
  %add.i977 = add i32 %mul.i976, %160
  %or.i978 = tail call i32 @llvm.fshl.i32(i32 %add.i977, i32 %add.i977, i32 16)
  %mul2.i979 = mul i32 %or.i978, 123456791
  %add3.i980 = add i32 %mul2.i979, %160
  %idxprom.i.i981 = sext i32 %160 to i64
  %arrayidx.i.i982 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i981
  store i32 %add3.i980, ptr %arrayidx.i.i982, align 4, !tbaa !25
  %161 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i983 = sub nsw i32 %161, %sub
  %162 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i984 = add nsw i32 %162, -1
  %and.i985 = and i32 %sub3.i984, %sub.i983
  %idxprom.i.i986 = sext i32 %and.i985 to i64
  %arrayidx.i.i987 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i986
  %163 = load i8, ptr %arrayidx.i.i987, align 1, !tbaa !9
  %conv.i988 = zext i8 %163 to i32
  %sub.i989 = sub nsw i32 %161, %sub124
  %and.i991 = and i32 %sub3.i984, %sub.i989
  %idxprom.i.i992 = sext i32 %and.i991 to i64
  %arrayidx.i.i993 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i992
  %164 = load i8, ptr %arrayidx.i.i993, align 1, !tbaa !9
  %conv.i994 = zext i8 %164 to i32
  %add184 = add nuw nsw i32 %conv.i994, %conv.i988
  %shr185 = lshr i32 %add184, 1
  %mul1.i995 = mul i32 %shr185, 30005491
  %add7.i999 = add i32 %mul1.i995, -1324931177
  %shr.i1000 = lshr i32 %add7.i999, 9
  %shr10.i1001 = lshr i32 %add184, 4
  %165 = xor i32 %shr10.i1001, %shr.i1000
  %166 = xor i32 %165, %add7.i999
  %xor17.i1002 = xor i32 %166, 201326587
  %167 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1003 = add nsw i32 %167, 1
  store i32 %inc.i1003, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1004 = mul i32 %xor17.i1002, 987654323
  %add.i1005 = add i32 %mul.i1004, %167
  %or.i1006 = tail call i32 @llvm.fshl.i32(i32 %add.i1005, i32 %add.i1005, i32 16)
  %mul2.i1007 = mul i32 %or.i1006, 123456791
  %add3.i1008 = add i32 %mul2.i1007, %167
  %idxprom.i.i1009 = sext i32 %167 to i64
  %arrayidx.i.i1010 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1009
  store i32 %add3.i1008, ptr %arrayidx.i.i1010, align 4, !tbaa !25
  %168 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1011 = sub nsw i32 %168, %w
  %169 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1012 = add nsw i32 %169, -1
  %and.i1013 = and i32 %sub3.i1012, %sub.i1011
  %idxprom.i.i1014 = sext i32 %and.i1013 to i64
  %arrayidx.i.i1015 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1014
  %170 = load i8, ptr %arrayidx.i.i1015, align 1, !tbaa !9
  %171 = lshr i8 %170, 2
  %shr189 = zext i8 %171 to i32
  %sub.i1017 = add nsw i32 %168, -1
  %and.i1019 = and i32 %sub3.i1012, %sub.i1017
  %idxprom.i.i1020 = sext i32 %and.i1019 to i64
  %arrayidx.i.i1021 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1020
  %172 = load i8, ptr %arrayidx.i.i1021, align 1, !tbaa !9
  %173 = lshr i8 %172, 2
  %shr191 = zext i8 %173 to i32
  %sub.i1023 = sub nsw i32 %168, %sub
  %and.i1025 = and i32 %sub3.i1012, %sub.i1023
  %idxprom.i.i1026 = sext i32 %and.i1025 to i64
  %arrayidx.i.i1027 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1026
  %174 = load i8, ptr %arrayidx.i.i1027, align 1, !tbaa !9
  %175 = lshr i8 %174, 2
  %shr194 = zext i8 %175 to i32
  %mul1.i1029 = mul nuw nsw i32 %shr189, 30005491
  %mul2.i1031 = mul nuw i32 %shr191, 50004239
  %mul4.i = mul i32 %shr194, 70004807
  %add3.i1032 = add nsw i32 %mul1.i1029, -1004919152
  %add5.i1033 = add i32 %add3.i1032, %mul2.i1031
  %add7.i1034 = add i32 %add5.i1033, %mul4.i
  %shr.i1035 = lshr i32 %add7.i1034, 9
  %shr10.i1036 = lshr i32 %shr189, 3
  %shr12.i1037 = lshr i32 %shr191, 4
  %shr14.i = lshr i32 %shr194, 5
  %176 = xor i32 %shr10.i1036, %shr12.i1037
  %177 = xor i32 %176, %shr14.i
  %178 = xor i32 %177, %shr.i1035
  %179 = xor i32 %178, %add7.i1034
  %xor17.i1038 = xor i32 %179, 67108859
  %180 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1039 = add nsw i32 %180, 1
  store i32 %inc.i1039, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1040 = mul i32 %xor17.i1038, 987654323
  %add.i1041 = add i32 %mul.i1040, %180
  %or.i1042 = tail call i32 @llvm.fshl.i32(i32 %add.i1041, i32 %add.i1041, i32 16)
  %mul2.i1043 = mul i32 %or.i1042, 123456791
  %add3.i1044 = add i32 %mul2.i1043, %180
  %idxprom.i.i1045 = sext i32 %180 to i64
  %arrayidx.i.i1046 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1045
  store i32 %add3.i1044, ptr %arrayidx.i.i1046, align 4, !tbaa !25
  %181 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1047 = sub nsw i32 %181, %sub
  %182 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1048 = add nsw i32 %182, -1
  %and.i1049 = and i32 %sub3.i1048, %sub.i1047
  %idxprom.i.i1050 = sext i32 %and.i1049 to i64
  %arrayidx.i.i1051 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1050
  %183 = load i8, ptr %arrayidx.i.i1051, align 1, !tbaa !9
  %184 = lshr i8 %183, 2
  %shr199 = zext i8 %184 to i32
  %sub.i1053 = sub nsw i32 %181, %w
  %and.i1055 = and i32 %sub3.i1048, %sub.i1053
  %idxprom.i.i1056 = sext i32 %and.i1055 to i64
  %arrayidx.i.i1057 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1056
  %185 = load i8, ptr %arrayidx.i.i1057, align 1, !tbaa !9
  %186 = lshr i8 %185, 2
  %shr201 = zext i8 %186 to i32
  %sub.i1059 = sub nsw i32 %181, %add54
  %and.i1061 = and i32 %sub3.i1048, %sub.i1059
  %idxprom.i.i1062 = sext i32 %and.i1061 to i64
  %arrayidx.i.i1063 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1062
  %187 = load i8, ptr %arrayidx.i.i1063, align 1, !tbaa !9
  %188 = lshr i8 %187, 2
  %shr204 = zext i8 %188 to i32
  %mul1.i1065 = mul nuw nsw i32 %shr199, 30005491
  %mul2.i1067 = mul nuw i32 %shr201, 50004239
  %mul4.i1069 = mul i32 %shr204, 70004807
  %add3.i1068 = add nsw i32 %mul1.i1065, -804916173
  %add5.i1070 = add i32 %add3.i1068, %mul2.i1067
  %add7.i1071 = add i32 %add5.i1070, %mul4.i1069
  %shr.i1072 = lshr i32 %add7.i1071, 9
  %shr10.i1073 = lshr i32 %shr199, 3
  %shr12.i1074 = lshr i32 %shr201, 4
  %shr14.i1075 = lshr i32 %shr204, 5
  %189 = xor i32 %shr10.i1073, %shr12.i1074
  %190 = xor i32 %189, %shr14.i1075
  %191 = xor i32 %190, %shr.i1072
  %192 = xor i32 %191, %add7.i1071
  %xor17.i1076 = xor i32 %192, 67108859
  %193 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1077 = add nsw i32 %193, 1
  store i32 %inc.i1077, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1078 = mul i32 %xor17.i1076, 987654323
  %add.i1079 = add i32 %mul.i1078, %193
  %or.i1080 = tail call i32 @llvm.fshl.i32(i32 %add.i1079, i32 %add.i1079, i32 16)
  %mul2.i1081 = mul i32 %or.i1080, 123456791
  %add3.i1082 = add i32 %mul2.i1081, %193
  %idxprom.i.i1083 = sext i32 %193 to i64
  %arrayidx.i.i1084 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1083
  store i32 %add3.i1082, ptr %arrayidx.i.i1084, align 4, !tbaa !25
  %194 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1085 = add nsw i32 %194, -1
  %195 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1086 = add nsw i32 %195, -1
  %and.i1087 = and i32 %sub3.i1086, %sub.i1085
  %idxprom.i.i1088 = sext i32 %and.i1087 to i64
  %arrayidx.i.i1089 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1088
  %196 = load i8, ptr %arrayidx.i.i1089, align 1, !tbaa !9
  %197 = lshr i8 %196, 2
  %shr208 = zext i8 %197 to i32
  %sub.i1091 = sub nsw i32 %194, %sub
  %and.i1093 = and i32 %sub3.i1086, %sub.i1091
  %idxprom.i.i1094 = sext i32 %and.i1093 to i64
  %arrayidx.i.i1095 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1094
  %198 = load i8, ptr %arrayidx.i.i1095, align 1, !tbaa !9
  %199 = lshr i8 %198, 2
  %shr211 = zext i8 %199 to i32
  %reass.sub = sub i32 %194, %mul84
  %sub.i1097 = add i32 %reass.sub, 1
  %and.i1099 = and i32 %sub3.i1086, %sub.i1097
  %idxprom.i.i1100 = sext i32 %and.i1099 to i64
  %arrayidx.i.i1101 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1100
  %200 = load i8, ptr %arrayidx.i.i1101, align 1, !tbaa !9
  %201 = lshr i8 %200, 2
  %shr215 = zext i8 %201 to i32
  %mul1.i1103 = mul nuw nsw i32 %shr208, 30005491
  %mul2.i1105 = mul nuw i32 %shr211, 50004239
  %mul4.i1107 = mul i32 %shr215, 70004807
  %add3.i1106 = add nsw i32 %mul1.i1103, -604913194
  %add5.i1108 = add i32 %add3.i1106, %mul2.i1105
  %add7.i1109 = add i32 %add5.i1108, %mul4.i1107
  %shr.i1110 = lshr i32 %add7.i1109, 9
  %shr10.i1111 = lshr i32 %shr208, 3
  %shr12.i1112 = lshr i32 %shr211, 4
  %shr14.i1113 = lshr i32 %shr215, 5
  %202 = xor i32 %shr10.i1111, %shr12.i1112
  %203 = xor i32 %202, %shr14.i1113
  %204 = xor i32 %203, %shr.i1110
  %205 = xor i32 %204, %add7.i1109
  %xor17.i1114 = xor i32 %205, 67108859
  %206 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1115 = add nsw i32 %206, 1
  store i32 %inc.i1115, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1116 = mul i32 %xor17.i1114, 987654323
  %add.i1117 = add i32 %mul.i1116, %206
  %or.i1118 = tail call i32 @llvm.fshl.i32(i32 %add.i1117, i32 %add.i1117, i32 16)
  %mul2.i1119 = mul i32 %or.i1118, 123456791
  %add3.i1120 = add i32 %mul2.i1119, %206
  %idxprom.i.i1121 = sext i32 %206 to i64
  %arrayidx.i.i1122 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1121
  store i32 %add3.i1120, ptr %arrayidx.i.i1122, align 4, !tbaa !25
  %207 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1123 = add nsw i32 %207, -3
  %208 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1124 = add nsw i32 %208, -1
  %and.i1125 = and i32 %sub3.i1124, %sub.i1123
  %idxprom.i.i1126 = sext i32 %and.i1125 to i64
  %arrayidx.i.i1127 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1126
  %209 = load i8, ptr %arrayidx.i.i1127, align 1, !tbaa !9
  %conv.i1128 = zext i8 %209 to i32
  %sub.i1129 = sub nsw i32 %207, %w
  %and.i1131 = and i32 %sub3.i1124, %sub.i1129
  %idxprom.i.i1132 = sext i32 %and.i1131 to i64
  %arrayidx.i.i1133 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1132
  %210 = load i8, ptr %arrayidx.i.i1133, align 1, !tbaa !9
  %conv.i1134 = zext i8 %210 to i32
  %add220 = add nuw nsw i32 %conv.i1134, %conv.i1128
  %shr221 = lshr i32 %add220, 1
  %sub.i1135 = add nsw i32 %207, -1
  %and.i1137 = and i32 %sub3.i1124, %sub.i1135
  %idxprom.i.i1138 = sext i32 %and.i1137 to i64
  %arrayidx.i.i1139 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1138
  %211 = load i8, ptr %arrayidx.i.i1139, align 1, !tbaa !9
  %212 = lshr i8 %211, 2
  %shr223 = zext i8 %212 to i32
  %sub.i1141 = add nsw i32 %207, -2
  %and.i1143 = and i32 %sub3.i1124, %sub.i1141
  %idxprom.i.i1144 = sext i32 %and.i1143 to i64
  %arrayidx.i.i1145 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1144
  %213 = load i8, ptr %arrayidx.i.i1145, align 1, !tbaa !9
  %214 = lshr i8 %213, 2
  %shr225 = zext i8 %214 to i32
  %mul1.i1147 = mul i32 %shr221, 30005491
  %mul2.i1149 = mul nuw i32 %shr223, 50004239
  %mul4.i1151 = mul i32 %shr225, 70004807
  %add3.i1150 = add i32 %mul1.i1147, -404910215
  %add5.i1152 = add i32 %add3.i1150, %mul2.i1149
  %add7.i1153 = add i32 %add5.i1152, %mul4.i1151
  %shr.i1154 = lshr i32 %add7.i1153, 9
  %shr14.i1157 = lshr i32 %shr225, 5
  %shr10.i11551856 = xor i32 %add220, %shr223
  %215 = lshr i32 %shr10.i11551856, 4
  %216 = or i32 %shr14.i1157, 67108858
  %217 = xor i32 %216, %215
  %218 = xor i32 %217, %shr.i1154
  %xor17.i1158 = xor i32 %218, %add7.i1153
  %219 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1159 = add nsw i32 %219, 1
  store i32 %inc.i1159, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1160 = mul i32 %xor17.i1158, 987654323
  %add.i1161 = add i32 %mul.i1160, %219
  %or.i1162 = tail call i32 @llvm.fshl.i32(i32 %add.i1161, i32 %add.i1161, i32 16)
  %mul2.i1163 = mul i32 %or.i1162, 123456791
  %add3.i1164 = add i32 %mul2.i1163, %219
  %idxprom.i.i1165 = sext i32 %219 to i64
  %arrayidx.i.i1166 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1165
  store i32 %add3.i1164, ptr %arrayidx.i.i1166, align 4, !tbaa !25
  %220 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1167 = add nsw i32 %220, -2
  %221 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1168 = add nsw i32 %221, -1
  %and.i1169 = and i32 %sub3.i1168, %sub.i1167
  %idxprom.i.i1170 = sext i32 %and.i1169 to i64
  %arrayidx.i.i1171 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1170
  %222 = load i8, ptr %arrayidx.i.i1171, align 1, !tbaa !9
  %conv.i1172 = zext i8 %222 to i32
  %sub.i1173 = add nsw i32 %220, -1
  %and.i1175 = and i32 %sub3.i1168, %sub.i1173
  %idxprom.i.i1176 = sext i32 %and.i1175 to i64
  %arrayidx.i.i1177 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1176
  %223 = load i8, ptr %arrayidx.i.i1177, align 1, !tbaa !9
  %conv.i1178 = zext i8 %223 to i32
  %add230 = add nuw nsw i32 %conv.i1178, %conv.i1172
  %shr231 = lshr i32 %add230, 1
  %sub.i1179 = sub nsw i32 %220, %w
  %and.i1181 = and i32 %sub3.i1168, %sub.i1179
  %idxprom.i.i1182 = sext i32 %and.i1181 to i64
  %arrayidx.i.i1183 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1182
  %224 = load i8, ptr %arrayidx.i.i1183, align 1, !tbaa !9
  %conv.i1184 = zext i8 %224 to i32
  %sub.i1185 = sub nsw i32 %220, %mul84
  %and.i1187 = and i32 %sub3.i1168, %sub.i1185
  %idxprom.i.i1188 = sext i32 %and.i1187 to i64
  %arrayidx.i.i1189 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1188
  %225 = load i8, ptr %arrayidx.i.i1189, align 1, !tbaa !9
  %conv.i1190 = zext i8 %225 to i32
  %add235 = add nuw nsw i32 %conv.i1190, %conv.i1184
  %shr236 = lshr i32 %add235, 1
  %sub.i1191 = sub nsw i32 %220, %sub
  %and.i1193 = and i32 %sub3.i1168, %sub.i1191
  %idxprom.i.i1194 = sext i32 %and.i1193 to i64
  %arrayidx.i.i1195 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1194
  %226 = load i8, ptr %arrayidx.i.i1195, align 1, !tbaa !9
  %227 = lshr i8 %226, 2
  %shr239 = zext i8 %227 to i32
  %mul1.i1197 = mul i32 %shr231, 30005491
  %mul2.i1199 = mul i32 %shr236, 50004239
  %mul4.i1201 = mul i32 %shr239, 70004807
  %add3.i1200 = add i32 %mul1.i1197, -204907236
  %add5.i1202 = add i32 %add3.i1200, %mul2.i1199
  %add7.i1203 = add i32 %add5.i1202, %mul4.i1201
  %shr.i1204 = lshr i32 %add7.i1203, 9
  %shr10.i1205 = lshr i32 %add230, 4
  %shr12.i1206 = lshr i32 %add235, 5
  %shr14.i1207 = lshr i32 %shr239, 5
  %228 = xor i32 %shr10.i1205, %shr12.i1206
  %229 = xor i32 %228, %shr14.i1207
  %230 = xor i32 %229, %shr.i1204
  %231 = xor i32 %230, %add7.i1203
  %xor17.i1208 = xor i32 %231, 67108858
  %232 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1209 = add nsw i32 %232, 1
  store i32 %inc.i1209, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1210 = mul i32 %xor17.i1208, 987654323
  %add.i1211 = add i32 %mul.i1210, %232
  %or.i1212 = tail call i32 @llvm.fshl.i32(i32 %add.i1211, i32 %add.i1211, i32 16)
  %mul2.i1213 = mul i32 %or.i1212, 123456791
  %add3.i1214 = add i32 %mul2.i1213, %232
  %idxprom.i.i1215 = sext i32 %232 to i64
  %arrayidx.i.i1216 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1215
  store i32 %add3.i1214, ptr %arrayidx.i.i1216, align 4, !tbaa !25
  %233 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1217 = add nsw i32 %233, -2
  %234 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1218 = add nsw i32 %234, -1
  %and.i1219 = and i32 %sub3.i1218, %sub.i1217
  %idxprom.i.i1220 = sext i32 %and.i1219 to i64
  %arrayidx.i.i1221 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1220
  %235 = load i8, ptr %arrayidx.i.i1221, align 1, !tbaa !9
  %conv.i1222 = zext i8 %235 to i32
  %sub.i1223 = add nsw i32 %233, -1
  %and.i1225 = and i32 %sub3.i1218, %sub.i1223
  %idxprom.i.i1226 = sext i32 %and.i1225 to i64
  %arrayidx.i.i1227 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1226
  %236 = load i8, ptr %arrayidx.i.i1227, align 1, !tbaa !9
  %conv.i1228 = zext i8 %236 to i32
  %add244 = add nuw nsw i32 %conv.i1228, %conv.i1222
  %shr245 = lshr i32 %add244, 2
  %sub.i1229 = sub nsw i32 %233, %sub
  %and.i1231 = and i32 %sub3.i1218, %sub.i1229
  %idxprom.i.i1232 = sext i32 %and.i1231 to i64
  %arrayidx.i.i1233 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1232
  %237 = load i8, ptr %arrayidx.i.i1233, align 1, !tbaa !9
  %conv.i1234 = zext i8 %237 to i32
  %sub.i1235 = sub nsw i32 %233, %w
  %and.i1237 = and i32 %sub3.i1218, %sub.i1235
  %idxprom.i.i1238 = sext i32 %and.i1237 to i64
  %arrayidx.i.i1239 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1238
  %238 = load i8, ptr %arrayidx.i.i1239, align 1, !tbaa !9
  %conv.i1240 = zext i8 %238 to i32
  %add249 = add nuw nsw i32 %conv.i1240, %conv.i1234
  %shr250 = lshr i32 %add249, 2
  %mul1.i1241 = mul nuw i32 %shr245, 30005491
  %mul2.i1243 = mul i32 %shr250, 50004239
  %add3.i1244 = add i32 %mul1.i1241, -74909064
  %add7.i1246 = add i32 %add3.i1244, %mul2.i1243
  %shr.i1247 = lshr i32 %add7.i1246, 9
  %shr10.i1248 = lshr i32 %add244, 5
  %shr12.i1249 = lshr i32 %add249, 6
  %239 = xor i32 %shr10.i1248, %shr12.i1249
  %240 = xor i32 %239, %shr.i1247
  %241 = xor i32 %240, %add7.i1246
  %xor17.i1250 = xor i32 %241, 67108869
  %242 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1251 = add nsw i32 %242, 1
  store i32 %inc.i1251, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1252 = mul i32 %xor17.i1250, 987654323
  %add.i1253 = add i32 %mul.i1252, %242
  %or.i1254 = tail call i32 @llvm.fshl.i32(i32 %add.i1253, i32 %add.i1253, i32 16)
  %mul2.i1255 = mul i32 %or.i1254, 123456791
  %add3.i1256 = add i32 %mul2.i1255, %242
  %idxprom.i.i1257 = sext i32 %242 to i64
  %arrayidx.i.i1258 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1257
  store i32 %add3.i1256, ptr %arrayidx.i.i1258, align 4, !tbaa !25
  %243 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1259 = add nsw i32 %243, -2
  %244 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1260 = add nsw i32 %244, -1
  %and.i1261 = and i32 %sub3.i1260, %sub.i1259
  %idxprom.i.i1262 = sext i32 %and.i1261 to i64
  %arrayidx.i.i1263 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1262
  %245 = load i8, ptr %arrayidx.i.i1263, align 1, !tbaa !9
  %conv.i1264 = zext i8 %245 to i32
  %sub.i1265 = add nsw i32 %243, -1
  %and.i1267 = and i32 %sub3.i1260, %sub.i1265
  %idxprom.i.i1268 = sext i32 %and.i1267 to i64
  %arrayidx.i.i1269 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1268
  %246 = load i8, ptr %arrayidx.i.i1269, align 1, !tbaa !9
  %conv.i1270 = zext i8 %246 to i32
  %add255 = add nuw nsw i32 %conv.i1270, %conv.i1264
  %shr256 = lshr i32 %add255, 1
  %sub.i1271 = sub nsw i32 %243, %w
  %and.i1273 = and i32 %sub3.i1260, %sub.i1271
  %idxprom.i.i1274 = sext i32 %and.i1273 to i64
  %arrayidx.i.i1275 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1274
  %247 = load i8, ptr %arrayidx.i.i1275, align 1, !tbaa !9
  %conv.i1276 = zext i8 %247 to i32
  %sub.i1277 = sub nsw i32 %243, %mul84
  %and.i1279 = and i32 %sub3.i1260, %sub.i1277
  %idxprom.i.i1280 = sext i32 %and.i1279 to i64
  %arrayidx.i.i1281 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1280
  %248 = load i8, ptr %arrayidx.i.i1281, align 1, !tbaa !9
  %conv.i1282 = zext i8 %248 to i32
  %add260 = add nuw nsw i32 %conv.i1282, %conv.i1276
  %shr261 = lshr i32 %add260, 1
  %mul1.i1283 = mul i32 %shr256, 30005491
  %mul2.i1285 = mul i32 %shr261, 50004239
  %add3.i1286 = add i32 %mul1.i1283, 125093915
  %add7.i1288 = add i32 %add3.i1286, %mul2.i1285
  %shr.i1289 = lshr i32 %add7.i1288, 9
  %shr10.i1290 = lshr i32 %add255, 4
  %shr12.i1291 = lshr i32 %add260, 5
  %249 = xor i32 %shr10.i1290, %shr12.i1291
  %250 = xor i32 %249, %shr.i1289
  %251 = xor i32 %250, %add7.i1288
  %xor17.i1292 = xor i32 %251, 67108869
  %252 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1293 = add nsw i32 %252, 1
  store i32 %inc.i1293, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1294 = mul i32 %xor17.i1292, 987654323
  %add.i1295 = add i32 %mul.i1294, %252
  %or.i1296 = tail call i32 @llvm.fshl.i32(i32 %add.i1295, i32 %add.i1295, i32 16)
  %mul2.i1297 = mul i32 %or.i1296, 123456791
  %add3.i1298 = add i32 %mul2.i1297, %252
  %idxprom.i.i1299 = sext i32 %252 to i64
  %arrayidx.i.i1300 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1299
  store i32 %add3.i1298, ptr %arrayidx.i.i1300, align 4, !tbaa !25
  %253 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1301 = add nsw i32 %253, -2
  %254 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1302 = add nsw i32 %254, -1
  %and.i1303 = and i32 %sub3.i1302, %sub.i1301
  %idxprom.i.i1304 = sext i32 %and.i1303 to i64
  %arrayidx.i.i1305 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1304
  %255 = load i8, ptr %arrayidx.i.i1305, align 1, !tbaa !9
  %conv.i1306 = zext i8 %255 to i32
  %sub.i1307 = add nsw i32 %253, -1
  %and.i1309 = and i32 %sub3.i1302, %sub.i1307
  %idxprom.i.i1310 = sext i32 %and.i1309 to i64
  %arrayidx.i.i1311 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1310
  %256 = load i8, ptr %arrayidx.i.i1311, align 1, !tbaa !9
  %conv.i1312 = zext i8 %256 to i32
  %add266 = add nuw nsw i32 %conv.i1312, %conv.i1306
  %shr267 = lshr i32 %add266, 1
  %sub.i1313 = sub nsw i32 %253, %sub
  %and.i1315 = and i32 %sub3.i1302, %sub.i1313
  %idxprom.i.i1316 = sext i32 %and.i1315 to i64
  %arrayidx.i.i1317 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1316
  %257 = load i8, ptr %arrayidx.i.i1317, align 1, !tbaa !9
  %conv.i1318 = zext i8 %257 to i32
  %sub.i1319 = sub nsw i32 %253, %sub124
  %and.i1321 = and i32 %sub3.i1302, %sub.i1319
  %idxprom.i.i1322 = sext i32 %and.i1321 to i64
  %arrayidx.i.i1323 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1322
  %258 = load i8, ptr %arrayidx.i.i1323, align 1, !tbaa !9
  %conv.i1324 = zext i8 %258 to i32
  %add273 = add nuw nsw i32 %conv.i1324, %conv.i1318
  %shr274 = lshr i32 %add273, 1
  %mul1.i1325 = mul i32 %shr267, 30005491
  %mul2.i1327 = mul i32 %shr274, 50004239
  %add3.i1328 = add i32 %mul1.i1325, 325096894
  %add7.i1330 = add i32 %add3.i1328, %mul2.i1327
  %shr.i1331 = lshr i32 %add7.i1330, 9
  %shr10.i1332 = lshr i32 %add266, 4
  %shr12.i1333 = lshr i32 %add273, 5
  %259 = xor i32 %shr10.i1332, %shr12.i1333
  %260 = xor i32 %259, %shr.i1331
  %261 = xor i32 %260, %add7.i1330
  %xor17.i1334 = xor i32 %261, 67108870
  %262 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1335 = add nsw i32 %262, 1
  store i32 %inc.i1335, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1336 = mul i32 %xor17.i1334, 987654323
  %add.i1337 = add i32 %mul.i1336, %262
  %or.i1338 = tail call i32 @llvm.fshl.i32(i32 %add.i1337, i32 %add.i1337, i32 16)
  %mul2.i1339 = mul i32 %or.i1338, 123456791
  %add3.i1340 = add i32 %mul2.i1339, %262
  %idxprom.i.i1341 = sext i32 %262 to i64
  %arrayidx.i.i1342 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1341
  store i32 %add3.i1340, ptr %arrayidx.i.i1342, align 4, !tbaa !25
  %263 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1343 = add nsw i32 %263, -2
  %264 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1344 = add nsw i32 %264, -1
  %and.i1345 = and i32 %sub3.i1344, %sub.i1343
  %idxprom.i.i1346 = sext i32 %and.i1345 to i64
  %arrayidx.i.i1347 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1346
  %265 = load i8, ptr %arrayidx.i.i1347, align 1, !tbaa !9
  %conv.i1348 = zext i8 %265 to i32
  %sub.i1349 = add nsw i32 %263, -1
  %and.i1351 = and i32 %sub3.i1344, %sub.i1349
  %idxprom.i.i1352 = sext i32 %and.i1351 to i64
  %arrayidx.i.i1353 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1352
  %266 = load i8, ptr %arrayidx.i.i1353, align 1, !tbaa !9
  %conv.i1354 = zext i8 %266 to i32
  %add279 = add nuw nsw i32 %conv.i1354, %conv.i1348
  %shr280 = lshr i32 %add279, 1
  %sub.i1355 = sub nsw i32 %263, %add54
  %and.i1357 = and i32 %sub3.i1344, %sub.i1355
  %idxprom.i.i1358 = sext i32 %and.i1357 to i64
  %arrayidx.i.i1359 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1358
  %267 = load i8, ptr %arrayidx.i.i1359, align 1, !tbaa !9
  %conv.i1360 = zext i8 %267 to i32
  %sub.i1361 = sub nsw i32 %263, %add115
  %and.i1363 = and i32 %sub3.i1344, %sub.i1361
  %idxprom.i.i1364 = sext i32 %and.i1363 to i64
  %arrayidx.i.i1365 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1364
  %268 = load i8, ptr %arrayidx.i.i1365, align 1, !tbaa !9
  %conv.i1366 = zext i8 %268 to i32
  %add286 = add nuw nsw i32 %conv.i1366, %conv.i1360
  %shr287 = lshr i32 %add286, 1
  %mul1.i1367 = mul i32 %shr280, 30005491
  %mul2.i1369 = mul i32 %shr287, 50004239
  %add3.i1370 = add i32 %mul1.i1367, 525099873
  %add7.i1372 = add i32 %add3.i1370, %mul2.i1369
  %shr.i1373 = lshr i32 %add7.i1372, 9
  %shr10.i1374 = lshr i32 %add279, 4
  %shr12.i1375 = lshr i32 %add286, 5
  %269 = xor i32 %shr10.i1374, %shr12.i1375
  %270 = xor i32 %269, %shr.i1373
  %271 = xor i32 %270, %add7.i1372
  %xor17.i1376 = xor i32 %271, 67108870
  %272 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1377 = add nsw i32 %272, 1
  store i32 %inc.i1377, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1378 = mul i32 %xor17.i1376, 987654323
  %add.i1379 = add i32 %mul.i1378, %272
  %or.i1380 = tail call i32 @llvm.fshl.i32(i32 %add.i1379, i32 %add.i1379, i32 16)
  %mul2.i1381 = mul i32 %or.i1380, 123456791
  %add3.i1382 = add i32 %mul2.i1381, %272
  %idxprom.i.i1383 = sext i32 %272 to i64
  %arrayidx.i.i1384 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1383
  store i32 %add3.i1382, ptr %arrayidx.i.i1384, align 4, !tbaa !25
  %273 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1385 = sub nsw i32 %273, %w
  %274 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1386 = add nsw i32 %274, -1
  %and.i1387 = and i32 %sub3.i1386, %sub.i1385
  %idxprom.i.i1388 = sext i32 %and.i1387 to i64
  %arrayidx.i.i1389 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1388
  %275 = load i8, ptr %arrayidx.i.i1389, align 1, !tbaa !9
  %conv.i1390 = zext i8 %275 to i32
  %sub.i1391 = sub nsw i32 %273, %mul84
  %and.i1393 = and i32 %sub3.i1386, %sub.i1391
  %idxprom.i.i1394 = sext i32 %and.i1393 to i64
  %arrayidx.i.i1395 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1394
  %276 = load i8, ptr %arrayidx.i.i1395, align 1, !tbaa !9
  %conv.i1396 = zext i8 %276 to i32
  %add293 = add nuw nsw i32 %conv.i1396, %conv.i1390
  %shr294 = lshr i32 %add293, 1
  %sub.i1397 = sub nsw i32 %273, %sub
  %and.i1399 = and i32 %sub3.i1386, %sub.i1397
  %idxprom.i.i1400 = sext i32 %and.i1399 to i64
  %arrayidx.i.i1401 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1400
  %277 = load i8, ptr %arrayidx.i.i1401, align 1, !tbaa !9
  %conv.i1402 = zext i8 %277 to i32
  %sub.i1403 = sub nsw i32 %273, %add115
  %and.i1405 = and i32 %sub3.i1386, %sub.i1403
  %idxprom.i.i1406 = sext i32 %and.i1405 to i64
  %arrayidx.i.i1407 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1406
  %278 = load i8, ptr %arrayidx.i.i1407, align 1, !tbaa !9
  %conv.i1408 = zext i8 %278 to i32
  %add300 = add nuw nsw i32 %conv.i1408, %conv.i1402
  %shr301 = lshr i32 %add300, 1
  %mul1.i1409 = mul i32 %shr294, 30005491
  %mul2.i1411 = mul i32 %shr301, 50004239
  %add3.i1412 = add i32 %mul1.i1409, 725102852
  %add7.i1414 = add i32 %add3.i1412, %mul2.i1411
  %shr.i1415 = lshr i32 %add7.i1414, 9
  %shr10.i1416 = lshr i32 %add293, 4
  %shr12.i1417 = lshr i32 %add300, 5
  %279 = xor i32 %shr10.i1416, %shr12.i1417
  %280 = xor i32 %279, %shr.i1415
  %281 = xor i32 %280, %add7.i1414
  %xor17.i1418 = xor i32 %281, 67108870
  %282 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1419 = add nsw i32 %282, 1
  store i32 %inc.i1419, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1420 = mul i32 %xor17.i1418, 987654323
  %add.i1421 = add i32 %mul.i1420, %282
  %or.i1422 = tail call i32 @llvm.fshl.i32(i32 %add.i1421, i32 %add.i1421, i32 16)
  %mul2.i1423 = mul i32 %or.i1422, 123456791
  %add3.i1424 = add i32 %mul2.i1423, %282
  %idxprom.i.i1425 = sext i32 %282 to i64
  %arrayidx.i.i1426 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1425
  store i32 %add3.i1424, ptr %arrayidx.i.i1426, align 4, !tbaa !25
  %283 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1427 = sub nsw i32 %283, %sub
  %284 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1428 = add nsw i32 %284, -1
  %and.i1429 = and i32 %sub3.i1428, %sub.i1427
  %idxprom.i.i1430 = sext i32 %and.i1429 to i64
  %arrayidx.i.i1431 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1430
  %285 = load i8, ptr %arrayidx.i.i1431, align 1, !tbaa !9
  %conv.i1432 = zext i8 %285 to i32
  %sub.i1433 = sub nsw i32 %283, %w
  %and.i1435 = and i32 %sub3.i1428, %sub.i1433
  %idxprom.i.i1436 = sext i32 %and.i1435 to i64
  %arrayidx.i.i1437 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1436
  %286 = load i8, ptr %arrayidx.i.i1437, align 1, !tbaa !9
  %conv.i1438 = zext i8 %286 to i32
  %add307 = add nuw nsw i32 %conv.i1438, %conv.i1432
  %shr308 = lshr i32 %add307, 1
  %sub.i1445 = sub nsw i32 %283, %add54
  %and.i1447 = and i32 %sub3.i1428, %sub.i1445
  %idxprom.i.i1448 = sext i32 %and.i1447 to i64
  %arrayidx.i.i1449 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1448
  %287 = load i8, ptr %arrayidx.i.i1449, align 1, !tbaa !9
  %conv.i1450 = zext i8 %287 to i32
  %add312 = add nuw nsw i32 %conv.i1450, %conv.i1438
  %shr313 = lshr i32 %add312, 1
  %mul1.i1451 = mul i32 %shr308, 30005491
  %mul2.i1453 = mul i32 %shr313, 50004239
  %add3.i1454 = add i32 %mul1.i1451, 925105831
  %add7.i1456 = add i32 %add3.i1454, %mul2.i1453
  %shr.i1457 = lshr i32 %add7.i1456, 9
  %shr10.i1458 = lshr i32 %add307, 4
  %shr12.i1459 = lshr i32 %add312, 5
  %288 = xor i32 %shr10.i1458, %shr12.i1459
  %289 = xor i32 %288, %shr.i1457
  %290 = xor i32 %289, %add7.i1456
  %xor17.i1460 = xor i32 %290, 67108870
  %291 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1461 = add nsw i32 %291, 1
  store i32 %inc.i1461, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1462 = mul i32 %xor17.i1460, 987654323
  %add.i1463 = add i32 %mul.i1462, %291
  %or.i1464 = tail call i32 @llvm.fshl.i32(i32 %add.i1463, i32 %add.i1463, i32 16)
  %mul2.i1465 = mul i32 %or.i1464, 123456791
  %add3.i1466 = add i32 %mul2.i1465, %291
  %idxprom.i.i1467 = sext i32 %291 to i64
  %arrayidx.i.i1468 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1467
  store i32 %add3.i1466, ptr %arrayidx.i.i1468, align 4, !tbaa !25
  %292 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1469 = add nsw i32 %292, -1
  %293 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1470 = add nsw i32 %293, -1
  %and.i1471 = and i32 %sub3.i1470, %sub.i1469
  %idxprom.i.i1472 = sext i32 %and.i1471 to i64
  %arrayidx.i.i1473 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1472
  %294 = load i8, ptr %arrayidx.i.i1473, align 1, !tbaa !9
  %conv.i1474 = zext i8 %294 to i32
  %sub.i1475 = sub nsw i32 %292, %sub
  %and.i1477 = and i32 %sub3.i1470, %sub.i1475
  %idxprom.i.i1478 = sext i32 %and.i1477 to i64
  %arrayidx.i.i1479 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1478
  %295 = load i8, ptr %arrayidx.i.i1479, align 1, !tbaa !9
  %conv.i1480 = zext i8 %295 to i32
  %add319 = add nuw nsw i32 %conv.i1480, %conv.i1474
  %shr320 = lshr i32 %add319, 1
  %sub.i1481 = sub nsw i32 %292, %w
  %and.i1483 = and i32 %sub3.i1470, %sub.i1481
  %idxprom.i.i1484 = sext i32 %and.i1483 to i64
  %arrayidx.i.i1485 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1484
  %296 = load i8, ptr %arrayidx.i.i1485, align 1, !tbaa !9
  %conv.i1486 = zext i8 %296 to i32
  %sub.i1487 = sub nsw i32 %292, %mul84
  %and.i1489 = and i32 %sub3.i1470, %sub.i1487
  %idxprom.i.i1490 = sext i32 %and.i1489 to i64
  %arrayidx.i.i1491 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1490
  %297 = load i8, ptr %arrayidx.i.i1491, align 1, !tbaa !9
  %conv.i1492 = zext i8 %297 to i32
  %add324 = add nuw nsw i32 %conv.i1492, %conv.i1486
  %shr325 = lshr i32 %add324, 1
  %mul1.i1493 = mul i32 %shr320, 30005491
  %mul2.i1495 = mul i32 %shr325, 50004239
  %add3.i1496 = add i32 %mul1.i1493, 1125108810
  %add7.i1498 = add i32 %add3.i1496, %mul2.i1495
  %shr.i1499 = lshr i32 %add7.i1498, 9
  %shr10.i1500 = lshr i32 %add319, 4
  %shr12.i1501 = lshr i32 %add324, 5
  %298 = xor i32 %shr10.i1500, %shr12.i1501
  %299 = xor i32 %298, %shr.i1499
  %300 = xor i32 %299, %add7.i1498
  %xor17.i1502 = xor i32 %300, 67108871
  %301 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1503 = add nsw i32 %301, 1
  store i32 %inc.i1503, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1504 = mul i32 %xor17.i1502, 987654323
  %add.i1505 = add i32 %mul.i1504, %301
  %or.i1506 = tail call i32 @llvm.fshl.i32(i32 %add.i1505, i32 %add.i1505, i32 16)
  %mul2.i1507 = mul i32 %or.i1506, 123456791
  %add3.i1508 = add i32 %mul2.i1507, %301
  %idxprom.i.i1509 = sext i32 %301 to i64
  %arrayidx.i.i1510 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1509
  store i32 %add3.i1508, ptr %arrayidx.i.i1510, align 4, !tbaa !25
  %302 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1511 = add nsw i32 %302, -1
  %303 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1512 = add nsw i32 %303, -1
  %and.i1513 = and i32 %sub3.i1512, %sub.i1511
  %idxprom.i.i1514 = sext i32 %and.i1513 to i64
  %arrayidx.i.i1515 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1514
  %304 = load i8, ptr %arrayidx.i.i1515, align 1, !tbaa !9
  %conv.i1516 = zext i8 %304 to i32
  %sub.i1517 = sub nsw i32 %302, %sub
  %and.i1519 = and i32 %sub3.i1512, %sub.i1517
  %idxprom.i.i1520 = sext i32 %and.i1519 to i64
  %arrayidx.i.i1521 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1520
  %305 = load i8, ptr %arrayidx.i.i1521, align 1, !tbaa !9
  %conv.i1522 = zext i8 %305 to i32
  %add331 = add nuw nsw i32 %conv.i1522, %conv.i1516
  %shr332 = lshr i32 %add331, 2
  %sub.i1523 = sub nsw i32 %302, %w
  %and.i1525 = and i32 %sub3.i1512, %sub.i1523
  %idxprom.i.i1526 = sext i32 %and.i1525 to i64
  %arrayidx.i.i1527 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1526
  %306 = load i8, ptr %arrayidx.i.i1527, align 1, !tbaa !9
  %conv.i1528 = zext i8 %306 to i32
  %sub.i1529 = sub nsw i32 %302, %add54
  %and.i1531 = and i32 %sub3.i1512, %sub.i1529
  %idxprom.i.i1532 = sext i32 %and.i1531 to i64
  %arrayidx.i.i1533 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1532
  %307 = load i8, ptr %arrayidx.i.i1533, align 1, !tbaa !9
  %conv.i1534 = zext i8 %307 to i32
  %add336 = add nuw nsw i32 %conv.i1534, %conv.i1528
  %shr337 = lshr i32 %add336, 2
  %mul1.i1535 = mul nuw i32 %shr332, 30005491
  %mul2.i1537 = mul i32 %shr337, 50004239
  %add3.i1538 = add i32 %mul1.i1535, 1325111789
  %add7.i1540 = add i32 %add3.i1538, %mul2.i1537
  %shr.i1541 = lshr i32 %add7.i1540, 9
  %shr10.i1542 = lshr i32 %add331, 5
  %shr12.i1543 = lshr i32 %add336, 6
  %308 = xor i32 %shr10.i1542, %shr12.i1543
  %309 = xor i32 %308, %shr.i1541
  %310 = xor i32 %309, %add7.i1540
  %xor17.i1544 = xor i32 %310, 67108871
  %311 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1545 = add nsw i32 %311, 1
  store i32 %inc.i1545, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1546 = mul i32 %xor17.i1544, 987654323
  %add.i1547 = add i32 %mul.i1546, %311
  %or.i1548 = tail call i32 @llvm.fshl.i32(i32 %add.i1547, i32 %add.i1547, i32 16)
  %mul2.i1549 = mul i32 %or.i1548, 123456791
  %add3.i1550 = add i32 %mul2.i1549, %311
  %idxprom.i.i1551 = sext i32 %311 to i64
  %arrayidx.i.i1552 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1551
  store i32 %add3.i1550, ptr %arrayidx.i.i1552, align 4, !tbaa !25
  %312 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1553 = add nsw i32 %312, -1
  %313 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1554 = add nsw i32 %313, -1
  %and.i1555 = and i32 %sub3.i1554, %sub.i1553
  %idxprom.i.i1556 = sext i32 %and.i1555 to i64
  %arrayidx.i.i1557 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1556
  %314 = load i8, ptr %arrayidx.i.i1557, align 1, !tbaa !9
  %conv.i1558 = zext i8 %314 to i32
  %sub.i1559 = sub nsw i32 %312, %sub
  %and.i1561 = and i32 %sub3.i1554, %sub.i1559
  %idxprom.i.i1562 = sext i32 %and.i1561 to i64
  %arrayidx.i.i1563 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1562
  %315 = load i8, ptr %arrayidx.i.i1563, align 1, !tbaa !9
  %conv.i1564 = zext i8 %315 to i32
  %sub343 = sub nsw i32 %conv.i1558, %conv.i1564
  %shr344 = ashr i32 %sub343, 1
  %sub.i1565 = sub nsw i32 %312, %w
  %and.i1567 = and i32 %sub3.i1554, %sub.i1565
  %idxprom.i.i1568 = sext i32 %and.i1567 to i64
  %arrayidx.i.i1569 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1568
  %316 = load i8, ptr %arrayidx.i.i1569, align 1, !tbaa !9
  %conv.i1570 = zext i8 %316 to i32
  %add346 = add nsw i32 %shr344, %conv.i1570
  %shr347 = ashr i32 %add346, 2
  %mul1.i1571 = mul i32 %shr347, 30005491
  %add7.i1575 = add i32 %mul1.i1571, 1475110529
  %shr.i1576 = lshr i32 %add7.i1575, 9
  %shr10.i1577 = lshr i32 %shr347, 3
  %317 = xor i32 %shr10.i1577, %shr.i1576
  %318 = xor i32 %317, %add7.i1575
  %xor17.i1578 = xor i32 %318, 201326584
  %319 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1579 = add nsw i32 %319, 1
  store i32 %inc.i1579, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1580 = mul i32 %xor17.i1578, 987654323
  %add.i1581 = add i32 %mul.i1580, %319
  %or.i1582 = tail call i32 @llvm.fshl.i32(i32 %add.i1581, i32 %add.i1581, i32 16)
  %mul2.i1583 = mul i32 %or.i1582, 123456791
  %add3.i1584 = add i32 %mul2.i1583, %319
  %idxprom.i.i1585 = sext i32 %319 to i64
  %arrayidx.i.i1586 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1585
  store i32 %add3.i1584, ptr %arrayidx.i.i1586, align 4, !tbaa !25
  %320 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1587 = sub nsw i32 %320, %sub
  %321 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1588 = add nsw i32 %321, -1
  %and.i1589 = and i32 %sub3.i1588, %sub.i1587
  %idxprom.i.i1590 = sext i32 %and.i1589 to i64
  %arrayidx.i.i1591 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1590
  %322 = load i8, ptr %arrayidx.i.i1591, align 1, !tbaa !9
  %conv.i1592 = zext i8 %322 to i32
  %sub.i1593 = sub nsw i32 %320, %w
  %and.i1595 = and i32 %sub3.i1588, %sub.i1593
  %idxprom.i.i1596 = sext i32 %and.i1595 to i64
  %arrayidx.i.i1597 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1596
  %323 = load i8, ptr %arrayidx.i.i1597, align 1, !tbaa !9
  %conv.i1598 = zext i8 %323 to i32
  %sub353 = sub nsw i32 %conv.i1592, %conv.i1598
  %shr354 = ashr i32 %sub353, 1
  %sub.i1599 = add nsw i32 %320, -1
  %and.i1601 = and i32 %sub3.i1588, %sub.i1599
  %idxprom.i.i1602 = sext i32 %and.i1601 to i64
  %arrayidx.i.i1603 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1602
  %324 = load i8, ptr %arrayidx.i.i1603, align 1, !tbaa !9
  %conv.i1604 = zext i8 %324 to i32
  %add356 = add nsw i32 %shr354, %conv.i1604
  %shr357 = ashr i32 %add356, 2
  %mul1.i1605 = mul i32 %shr357, 30005491
  %add7.i1609 = add i32 %mul1.i1605, 1675113508
  %shr.i1610 = lshr i32 %add7.i1609, 9
  %shr10.i1611 = lshr i32 %shr357, 3
  %325 = xor i32 %shr10.i1611, %shr.i1610
  %326 = xor i32 %325, %add7.i1609
  %xor17.i1612 = xor i32 %326, 201326584
  %327 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1613 = add nsw i32 %327, 1
  store i32 %inc.i1613, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1614 = mul i32 %xor17.i1612, 987654323
  %add.i1615 = add i32 %mul.i1614, %327
  %or.i1616 = tail call i32 @llvm.fshl.i32(i32 %add.i1615, i32 %add.i1615, i32 16)
  %mul2.i1617 = mul i32 %or.i1616, 123456791
  %add3.i1618 = add i32 %mul2.i1617, %327
  %idxprom.i.i1619 = sext i32 %327 to i64
  %arrayidx.i.i1620 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1619
  store i32 %add3.i1618, ptr %arrayidx.i.i1620, align 4, !tbaa !25
  %328 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1621 = add nsw i32 %328, -1
  %329 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1622 = add nsw i32 %329, -1
  %and.i1623 = and i32 %sub3.i1622, %sub.i1621
  %idxprom.i.i1624 = sext i32 %and.i1623 to i64
  %arrayidx.i.i1625 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1624
  %330 = load i8, ptr %arrayidx.i.i1625, align 1, !tbaa !9
  %conv.i1626 = zext i8 %330 to i32
  %sub.i1627 = sub nsw i32 %328, %sub
  %and.i1629 = and i32 %sub3.i1622, %sub.i1627
  %idxprom.i.i1630 = sext i32 %and.i1629 to i64
  %arrayidx.i.i1631 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1630
  %331 = load i8, ptr %arrayidx.i.i1631, align 1, !tbaa !9
  %conv.i1632 = zext i8 %331 to i32
  %add364 = sub nsw i32 %conv.i1632, %conv.i1626
  %sub.i1633 = sub nsw i32 %328, %w
  %and.i1635 = and i32 %sub3.i1622, %sub.i1633
  %idxprom.i.i1636 = sext i32 %and.i1635 to i64
  %arrayidx.i.i1637 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1636
  %332 = load i8, ptr %arrayidx.i.i1637, align 1, !tbaa !9
  %conv.i1638 = zext i8 %332 to i32
  %add366 = add nsw i32 %add364, %conv.i1638
  %shr367 = ashr i32 %add366, 2
  %mul1.i1639 = mul i32 %shr367, 30005491
  %add7.i1643 = add i32 %mul1.i1639, 1875116487
  %shr.i1644 = lshr i32 %add7.i1643, 9
  %shr10.i1645 = lshr i32 %shr367, 3
  %333 = xor i32 %shr10.i1645, %shr.i1644
  %334 = xor i32 %333, %add7.i1643
  %xor17.i1646 = xor i32 %334, 201326583
  %335 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1647 = add nsw i32 %335, 1
  store i32 %inc.i1647, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1648 = mul i32 %xor17.i1646, 987654323
  %add.i1649 = add i32 %mul.i1648, %335
  %or.i1650 = tail call i32 @llvm.fshl.i32(i32 %add.i1649, i32 %add.i1649, i32 16)
  %mul2.i1651 = mul i32 %or.i1650, 123456791
  %add3.i1652 = add i32 %mul2.i1651, %335
  %idxprom.i.i1653 = sext i32 %335 to i64
  %arrayidx.i.i1654 = getelementptr inbounds i32, ptr %41, i64 %idxprom.i.i1653
  store i32 %add3.i1652, ptr %arrayidx.i.i1654, align 4, !tbaa !25
  %336 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1655 = add nsw i32 %336, -1
  %337 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1656 = add nsw i32 %337, -1
  %and.i1657 = and i32 %sub3.i1656, %sub.i1655
  %idxprom.i.i1658 = sext i32 %and.i1657 to i64
  %arrayidx.i.i1659 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1658
  %338 = load i8, ptr %arrayidx.i.i1659, align 1, !tbaa !9
  %conv.i1660 = zext i8 %338 to i32
  %sub.i1661 = sub nsw i32 %336, %w
  %and.i1663 = and i32 %sub3.i1656, %sub.i1661
  %idxprom.i.i1664 = sext i32 %and.i1663 to i64
  %arrayidx.i.i1665 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1664
  %339 = load i8, ptr %arrayidx.i.i1665, align 1, !tbaa !9
  %conv.i1666 = zext i8 %339 to i32
  %add371 = add nuw nsw i32 %conv.i1666, %conv.i1660
  %340 = shl nuw nsw i32 %add371, 7
  %341 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm1, align 8, !tbaa !74
  %sub.i1668 = add i32 %341, 65280
  %mul.i1667 = and i32 %sub.i1668, 65280
  %and.i1669 = and i32 %mul.i1667, %340
  store i32 %and.i1669, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %342 = load i8, ptr %arrayidx.i.i1659, align 1, !tbaa !9
  %conv.i1675 = zext i8 %342 to i32
  %343 = load i8, ptr %arrayidx.i.i1665, align 1, !tbaa !9
  %conv.i1681 = zext i8 %343 to i32
  %add375 = add nuw nsw i32 %conv.i1681, %conv.i1675
  %sub.i1682 = sub nsw i32 %336, %add54
  %and.i1684 = and i32 %sub3.i1656, %sub.i1682
  %idxprom.i.i1685 = sext i32 %and.i1684 to i64
  %arrayidx.i.i1686 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1685
  %344 = load i8, ptr %arrayidx.i.i1686, align 1, !tbaa !9
  %conv.i1687 = zext i8 %344 to i32
  %sub378 = sub nsw i32 %add375, %conv.i1687
  %345 = shl nsw i32 %sub378, 7
  %346 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm2, align 8, !tbaa !74
  %347 = and i32 %346, -256
  %mul.i1688 = add nsw i32 %347, -256
  %and.i1690 = and i32 %mul.i1688, %345
  store i32 %and.i1690, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %348 = load i8, ptr %arrayidx.i.i1659, align 1, !tbaa !9
  %conv.i1696 = zext i8 %348 to i32
  %sub.i1697 = add nsw i32 %336, -2
  %and.i1699 = and i32 %sub3.i1656, %sub.i1697
  %idxprom.i.i1700 = sext i32 %and.i1699 to i64
  %arrayidx.i.i1701 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1700
  %349 = load i8, ptr %arrayidx.i.i1701, align 1, !tbaa !9
  %conv.i1702 = zext i8 %349 to i32
  %350 = shl nuw nsw i32 %conv.i1696, 8
  %351 = shl nuw nsw i32 %conv.i1702, 7
  %352 = sub nsw i32 %350, %351
  %353 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm3, align 8, !tbaa !74
  %354 = and i32 %353, -256
  %mul.i1703 = add nsw i32 %354, -256
  %and.i1705 = and i32 %mul.i1703, %352
  store i32 %and.i1705, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %355 = load i8, ptr %arrayidx.i.i1665, align 1, !tbaa !9
  %conv.i1711 = zext i8 %355 to i32
  %sub.i1712 = sub nsw i32 %336, %mul84
  %and.i1714 = and i32 %sub3.i1656, %sub.i1712
  %idxprom.i.i1715 = sext i32 %and.i1714 to i64
  %arrayidx.i.i1716 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1715
  %356 = load i8, ptr %arrayidx.i.i1716, align 1, !tbaa !9
  %conv.i1717 = zext i8 %356 to i32
  %357 = shl nuw nsw i32 %conv.i1711, 8
  %358 = shl nuw nsw i32 %conv.i1717, 7
  %359 = sub nsw i32 %357, %358
  %360 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm4, align 8, !tbaa !74
  %361 = and i32 %360, -256
  %mul.i1718 = add nsw i32 %361, -256
  %and.i1720 = and i32 %mul.i1718, %359
  store i32 %and.i1720, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm4, i64 0, i32 1), align 8, !tbaa !112
  %362 = load i8, ptr %arrayidx.i.i1659, align 1, !tbaa !9
  %conv.i1726 = zext i8 %362 to i32
  %363 = load i8, ptr %arrayidx.i.i1665, align 1, !tbaa !9
  %conv.i1732 = zext i8 %363 to i32
  %add393 = add nuw nsw i32 %conv.i1732, %conv.i1726
  %sub.i1733 = sub nsw i32 %336, %sub
  %and.i1735 = and i32 %sub3.i1656, %sub.i1733
  %idxprom.i.i1736 = sext i32 %and.i1735 to i64
  %arrayidx.i.i1737 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i.i1736
  %364 = load i8, ptr %arrayidx.i.i1737, align 1, !tbaa !9
  %conv.i1738 = zext i8 %364 to i32
  %sub396 = sub nsw i32 %add393, %conv.i1738
  %365 = shl nsw i32 %sub396, 7
  %366 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm5, align 8, !tbaa !74
  %367 = and i32 %366, -256
  %mul.i1739 = add nsw i32 %367, -256
  %and.i1741 = and i32 %mul.i1739, %365
  store i32 %and.i1741, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %shl399 = shl nuw nsw i32 %conv2.i, 1
  %and = and i32 %shl399, 384
  %or = or i32 %and, %shr68
  %mul.i1742 = shl nuw nsw i32 %or, 8
  %368 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm6, align 8, !tbaa !74
  %sub.i1743 = add i32 %368, 2147483392
  %and.i1744 = and i32 %sub.i1743, %mul.i1742
  store i32 %and.i1744, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm6, i64 0, i32 1), align 8, !tbaa !112
  br label %if.end

lpad:                                             ; preds = %init
  %369 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad5:                                            ; preds = %init4
  %370 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad12:                                           ; preds = %init11
  %371 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad19:                                           ; preds = %init18
  %372 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad26:                                           ; preds = %init25
  %373 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad33:                                           ; preds = %init32
  %374 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad40:                                           ; preds = %init39
  %375 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad47:                                           ; preds = %init46
  %376 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

if.end:                                           ; preds = %init.end49.if.end_crit_edge, %if.then
  %377 = phi i32 [ %.pre1860, %init.end49.if.end_crit_edge ], [ %and.i1720, %if.then ]
  %378 = phi i32 [ %.pre1859, %init.end49.if.end_crit_edge ], [ %and.i1705, %if.then ]
  %379 = phi i32 [ %.pre1858, %init.end49.if.end_crit_edge ], [ %and.i1690, %if.then ]
  %380 = phi i32 [ %.pre, %init.end49.if.end_crit_edge ], [ %and.i1669, %if.then ]
  %381 = load i32, ptr @y, align 4, !tbaa !25
  %shl.i = shl i32 %381, 16
  %382 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %383 = load i16, ptr %382, align 2, !tbaa !31
  %conv.i1745 = zext i16 %383 to i32
  %sub.i1746 = or i32 %shl.i, 64
  %add.i1747 = sub i32 %sub.i1746, %conv.i1745
  %384 = lshr i32 %add.i1747, 7
  %385 = trunc i32 %384 to i16
  %conv7.i = add i16 %383, %385
  store i16 %conv7.i, ptr %382, align 2, !tbaa !31
  %386 = load i32, ptr @c0, align 4, !tbaa !25
  %add8.i = add nsw i32 %386, %380
  %387 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm1, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1749 = sext i32 %add8.i to i64
  %arrayidx.i.i1750 = getelementptr inbounds i16, ptr %387, i64 %idxprom.i.i1749
  store ptr %arrayidx.i.i1750, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %388 = load i16, ptr %arrayidx.i.i1750, align 2, !tbaa !31
  %389 = lshr i16 %388, 4
  %390 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %idxprom.i.i.i1751 = zext i16 %389 to i64
  %arrayidx.i.i.i1752 = getelementptr inbounds i16, ptr %390, i64 %idxprom.i.i.i1751
  %391 = load i16, ptr %arrayidx.i.i.i1752, align 2, !tbaa !31
  %nx.i.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 8
  %392 = load i32, ptr %nx.i.i, align 8, !tbaa !64
  %inc.i.i = add nsw i32 %392, 1
  %data.i.i.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 3, i32 3
  %393 = load ptr, ptr %data.i.i.i, align 8, !tbaa !59
  %idxprom.i.i15.i = sext i32 %392 to i64
  %arrayidx.i.i16.i = getelementptr inbounds i16, ptr %393, i64 %idxprom.i.i15.i
  store i16 %391, ptr %arrayidx.i.i16.i, align 2, !tbaa !31
  %394 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %395 = load i16, ptr %394, align 2, !tbaa !31
  %conv.i1754 = zext i16 %395 to i32
  %add.i1756 = sub i32 %sub.i1746, %conv.i1754
  %396 = lshr i32 %add.i1756, 7
  %397 = trunc i32 %396 to i16
  %conv7.i1758 = add i16 %395, %397
  store i16 %conv7.i1758, ptr %394, align 2, !tbaa !31
  %add8.i1759 = add nsw i32 %379, %386
  %398 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm2, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1760 = sext i32 %add8.i1759 to i64
  %arrayidx.i.i1761 = getelementptr inbounds i16, ptr %398, i64 %idxprom.i.i1760
  store ptr %arrayidx.i.i1761, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %399 = load i16, ptr %arrayidx.i.i1761, align 2, !tbaa !31
  %400 = lshr i16 %399, 4
  %idxprom.i.i.i1762 = zext i16 %400 to i64
  %arrayidx.i.i.i1763 = getelementptr inbounds i16, ptr %390, i64 %idxprom.i.i.i1762
  %401 = load i16, ptr %arrayidx.i.i.i1763, align 2, !tbaa !31
  %inc.i.i1765 = add nsw i32 %392, 2
  %idxprom.i.i15.i1767 = sext i32 %inc.i.i to i64
  %arrayidx.i.i16.i1768 = getelementptr inbounds i16, ptr %393, i64 %idxprom.i.i15.i1767
  store i16 %401, ptr %arrayidx.i.i16.i1768, align 2, !tbaa !31
  %402 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %403 = load i16, ptr %402, align 2, !tbaa !31
  %conv.i1770 = zext i16 %403 to i32
  %add.i1772 = sub i32 %sub.i1746, %conv.i1770
  %404 = lshr i32 %add.i1772, 7
  %405 = trunc i32 %404 to i16
  %conv7.i1774 = add i16 %403, %405
  store i16 %conv7.i1774, ptr %402, align 2, !tbaa !31
  %add8.i1775 = add nsw i32 %378, %386
  %406 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm3, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1776 = sext i32 %add8.i1775 to i64
  %arrayidx.i.i1777 = getelementptr inbounds i16, ptr %406, i64 %idxprom.i.i1776
  store ptr %arrayidx.i.i1777, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %407 = load i16, ptr %arrayidx.i.i1777, align 2, !tbaa !31
  %408 = lshr i16 %407, 4
  %idxprom.i.i.i1778 = zext i16 %408 to i64
  %arrayidx.i.i.i1779 = getelementptr inbounds i16, ptr %390, i64 %idxprom.i.i.i1778
  %409 = load i16, ptr %arrayidx.i.i.i1779, align 2, !tbaa !31
  %inc.i.i1781 = add nsw i32 %392, 3
  %idxprom.i.i15.i1783 = sext i32 %inc.i.i1765 to i64
  %arrayidx.i.i16.i1784 = getelementptr inbounds i16, ptr %393, i64 %idxprom.i.i15.i1783
  store i16 %409, ptr %arrayidx.i.i16.i1784, align 2, !tbaa !31
  %410 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %411 = load i16, ptr %410, align 2, !tbaa !31
  %conv.i1786 = zext i16 %411 to i32
  %add.i1788 = sub i32 %sub.i1746, %conv.i1786
  %412 = lshr i32 %add.i1788, 7
  %413 = trunc i32 %412 to i16
  %conv7.i1790 = add i16 %411, %413
  store i16 %conv7.i1790, ptr %410, align 2, !tbaa !31
  %add8.i1791 = add nsw i32 %377, %386
  %414 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm4, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1792 = sext i32 %add8.i1791 to i64
  %arrayidx.i.i1793 = getelementptr inbounds i16, ptr %414, i64 %idxprom.i.i1792
  store ptr %arrayidx.i.i1793, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %415 = load i16, ptr %arrayidx.i.i1793, align 2, !tbaa !31
  %416 = lshr i16 %415, 4
  %idxprom.i.i.i1794 = zext i16 %416 to i64
  %arrayidx.i.i.i1795 = getelementptr inbounds i16, ptr %390, i64 %idxprom.i.i.i1794
  %417 = load i16, ptr %arrayidx.i.i.i1795, align 2, !tbaa !31
  %inc.i.i1797 = add nsw i32 %392, 4
  %idxprom.i.i15.i1799 = sext i32 %inc.i.i1781 to i64
  %arrayidx.i.i16.i1800 = getelementptr inbounds i16, ptr %393, i64 %idxprom.i.i15.i1799
  store i16 %417, ptr %arrayidx.i.i16.i1800, align 2, !tbaa !31
  %418 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %419 = load i16, ptr %418, align 2, !tbaa !31
  %conv.i1802 = zext i16 %419 to i32
  %add.i1804 = sub i32 %sub.i1746, %conv.i1802
  %420 = lshr i32 %add.i1804, 7
  %421 = trunc i32 %420 to i16
  %conv7.i1806 = add i16 %419, %421
  store i16 %conv7.i1806, ptr %418, align 2, !tbaa !31
  %422 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %add8.i1807 = add nsw i32 %422, %386
  %423 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm5, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1808 = sext i32 %add8.i1807 to i64
  %arrayidx.i.i1809 = getelementptr inbounds i16, ptr %423, i64 %idxprom.i.i1808
  store ptr %arrayidx.i.i1809, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %424 = load i16, ptr %arrayidx.i.i1809, align 2, !tbaa !31
  %425 = lshr i16 %424, 4
  %idxprom.i.i.i1810 = zext i16 %425 to i64
  %arrayidx.i.i.i1811 = getelementptr inbounds i16, ptr %390, i64 %idxprom.i.i.i1810
  %426 = load i16, ptr %arrayidx.i.i.i1811, align 2, !tbaa !31
  %inc.i.i1813 = add nsw i32 %392, 5
  %idxprom.i.i15.i1815 = sext i32 %inc.i.i1797 to i64
  %arrayidx.i.i16.i1816 = getelementptr inbounds i16, ptr %393, i64 %idxprom.i.i15.i1815
  store i16 %426, ptr %arrayidx.i.i16.i1816, align 2, !tbaa !31
  %427 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %428 = load i16, ptr %427, align 2, !tbaa !31
  %conv.i1818 = zext i16 %428 to i32
  %add.i1820 = sub i32 %sub.i1746, %conv.i1818
  %429 = lshr i32 %add.i1820, 7
  %430 = trunc i32 %429 to i16
  %conv7.i1822 = add i16 %428, %430
  store i16 %conv7.i1822, ptr %427, align 2, !tbaa !31
  %431 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm6, i64 0, i32 1), align 8, !tbaa !112
  %add8.i1823 = add nsw i32 %431, %386
  %432 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm6, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1824 = sext i32 %add8.i1823 to i64
  %arrayidx.i.i1825 = getelementptr inbounds i16, ptr %432, i64 %idxprom.i.i1824
  store ptr %arrayidx.i.i1825, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %433 = load i16, ptr %arrayidx.i.i1825, align 2, !tbaa !31
  %434 = lshr i16 %433, 4
  %idxprom.i.i.i1826 = zext i16 %434 to i64
  %arrayidx.i.i.i1827 = getelementptr inbounds i16, ptr %390, i64 %idxprom.i.i.i1826
  %435 = load i16, ptr %arrayidx.i.i.i1827, align 2, !tbaa !31
  %inc.i.i1829 = add nsw i32 %392, 6
  %idxprom.i.i15.i1831 = sext i32 %inc.i.i1813 to i64
  %arrayidx.i.i16.i1832 = getelementptr inbounds i16, ptr %393, i64 %idxprom.i.i15.i1831
  store i16 %435, ptr %arrayidx.i.i16.i1832, align 2, !tbaa !31
  %436 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %437 = load i16, ptr %436, align 2, !tbaa !31
  %conv.i1834 = zext i16 %437 to i32
  %add.i1836 = sub i32 %sub.i1746, %conv.i1834
  %438 = lshr i32 %add.i1836, 7
  %439 = trunc i32 %438 to i16
  %conv7.i1838 = add i16 %437, %439
  store i16 %conv7.i1838, ptr %436, align 2, !tbaa !31
  %440 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm7, i64 0, i32 1), align 8, !tbaa !112
  %add8.i1839 = add nsw i32 %440, %386
  %441 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm7, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i1840 = sext i32 %add8.i1839 to i64
  %arrayidx.i.i1841 = getelementptr inbounds i16, ptr %441, i64 %idxprom.i.i1840
  store ptr %arrayidx.i.i1841, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %442 = load i16, ptr %arrayidx.i.i1841, align 2, !tbaa !31
  %443 = lshr i16 %442, 4
  %idxprom.i.i.i1842 = zext i16 %443 to i64
  %arrayidx.i.i.i1843 = getelementptr inbounds i16, ptr %390, i64 %idxprom.i.i.i1842
  %444 = load i16, ptr %arrayidx.i.i.i1843, align 2, !tbaa !31
  %inc.i.i1845 = add nsw i32 %392, 7
  store i32 %inc.i.i1845, ptr %nx.i.i, align 8, !tbaa !64
  %idxprom.i.i15.i1847 = sext i32 %inc.i.i1829 to i64
  %arrayidx.i.i16.i1848 = getelementptr inbounds i16, ptr %393, i64 %idxprom.i.i15.i1847
  store i16 %444, ptr %arrayidx.i.i16.i1848, align 2, !tbaa !31
  %445 = load i32, ptr @bpos, align 4, !tbaa !25
  %446 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i1849 = add nsw i32 %446, -1
  %447 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i1850 = add nsw i32 %447, -1
  %and.i.i1851 = and i32 %sub3.i.i1850, %sub.i.i1849
  %448 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i1852 = sext i32 %and.i.i1851 to i64
  %arrayidx.i.i.i1853 = getelementptr inbounds i8, ptr %448, i64 %idxprom.i.i.i1852
  %449 = load i8, ptr %arrayidx.i.i.i1853, align 1, !tbaa !9
  %conv.i.i1854 = zext i8 %449 to i32
  %call2.i = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ9model8bitR5MixeriE2cm, ptr noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %386, i32 noundef %445, i32 noundef %conv.i.i1854, i32 noundef %381)
  ret void

ehcleanup:                                        ; preds = %lpad47, %lpad40, %lpad33, %lpad26, %lpad19, %lpad12, %lpad5, %lpad
  %_ZGVZ9model8bitR5MixeriE2cm.sink = phi ptr [ @_ZGVZ9model8bitR5MixeriE2cm, %lpad47 ], [ @_ZGVZ9model8bitR5MixeriE4scm7, %lpad40 ], [ @_ZGVZ9model8bitR5MixeriE4scm6, %lpad33 ], [ @_ZGVZ9model8bitR5MixeriE4scm5, %lpad26 ], [ @_ZGVZ9model8bitR5MixeriE4scm4, %lpad19 ], [ @_ZGVZ9model8bitR5MixeriE4scm3, %lpad12 ], [ @_ZGVZ9model8bitR5MixeriE4scm2, %lpad5 ], [ @_ZGVZ9model8bitR5MixeriE4scm1, %lpad ]
  %.pn = phi { ptr, i32 } [ %376, %lpad47 ], [ %375, %lpad40 ], [ %374, %lpad33 ], [ %373, %lpad26 ], [ %372, %lpad19 ], [ %371, %lpad12 ], [ %370, %lpad5 ], [ %369, %lpad ]
  tail call void @__cxa_guard_abort(ptr nonnull %_ZGVZ9model8bitR5MixeriE2cm.sink) #39
  resume { ptr, i32 } %.pn
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z8pgmModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %m) local_unnamed_addr #14 {
entry:
  %v_buf = alloca [32 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %v_buf) #39
  %0 = load i32, ptr @bpos, align 4, !tbaa !25
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.then, label %if.end111

if.then:                                          ; preds = %entry
  %1 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i = add nsw i32 %1, -3
  %2 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i = add nsw i32 %2, -1
  %and.i = and i32 %sub3.i, %sub.i
  %3 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i
  %4 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %cmp = icmp eq i8 %4, 80
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then
  %sub.i156 = add nsw i32 %1, -2
  %and.i158 = and i32 %sub3.i, %sub.i156
  %idxprom.i.i159 = sext i32 %and.i158 to i64
  %arrayidx.i.i160 = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i159
  %5 = load i8, ptr %arrayidx.i.i160, align 1, !tbaa !9
  %cmp2 = icmp eq i8 %5, 53
  br i1 %cmp2, label %land.lhs.true3, label %if.else

land.lhs.true3:                                   ; preds = %land.lhs.true
  %sub.i162 = add nsw i32 %1, -1
  %and.i164 = and i32 %sub3.i, %sub.i162
  %idxprom.i.i165 = sext i32 %and.i164 to i64
  %arrayidx.i.i166 = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i165
  %6 = load i8, ptr %arrayidx.i.i166, align 1, !tbaa !9
  switch i8 %6, label %if.else [
    i8 32, label %if.then14
    i8 9, label %if.then14
    i8 10, label %if.then14
    i8 13, label %if.then14
  ]

if.then14:                                        ; preds = %land.lhs.true3, %land.lhs.true3, %land.lhs.true3, %land.lhs.true3
  store i32 %1, ptr @_ZZ8pgmModelR5MixerE3pgm, align 4, !tbaa !25
  store i32 0, ptr @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4, !tbaa !25
  store i32 0, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !25
  br label %cleanup122

if.else:                                          ; preds = %land.lhs.true3, %land.lhs.true, %if.then
  %7 = load i32, ptr @_ZZ8pgmModelR5MixerE3pgm, align 4, !tbaa !25
  %tobool15 = icmp ne i32 %7, 0
  %8 = load i32, ptr @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4
  %cmp17 = icmp ne i32 %8, 3
  %or.cond = select i1 %tobool15, i1 %cmp17, i1 false
  br i1 %or.cond, label %for.cond.preheader, label %if.end111

for.cond.preheader:                               ; preds = %if.else
  %sub312 = add nsw i32 %1, -1
  %cmp19313 = icmp slt i32 %7, %sub312
  %cmp20314 = icmp slt i32 %8, 3
  %9 = select i1 %cmp19313, i1 %cmp20314, i1 false
  br i1 %9, label %while.cond.preheader, label %if.end111

while.cond.preheader:                             ; preds = %for.cond.preheader, %for.inc
  %10 = phi i32 [ %18, %for.inc ], [ %1, %for.cond.preheader ]
  %.pr331 = phi i32 [ %.pr, %for.inc ], [ %8, %for.cond.preheader ]
  %11 = phi ptr [ %19, %for.inc ], [ %3, %for.cond.preheader ]
  %12 = phi i32 [ %20, %for.inc ], [ %2, %for.cond.preheader ]
  %sub316 = phi i32 [ %sub, %for.inc ], [ %sub312, %for.cond.preheader ]
  %i.0315 = phi i32 [ %inc97, %for.inc ], [ %7, %for.cond.preheader ]
  %sub3.i187 = add nsw i32 %12, -1
  %smax = tail call i32 @llvm.smax.i32(i32 %i.0315, i32 %sub316)
  br label %while.cond

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %i.1 = phi i32 [ %inc, %while.body ], [ %i.0315, %while.cond.preheader ]
  %and.i188 = and i32 %sub3.i187, %i.1
  %idxprom.i.i189 = sext i32 %and.i188 to i64
  %arrayidx.i.i190 = getelementptr inbounds i8, ptr %11, i64 %idxprom.i.i189
  %13 = load i8, ptr %arrayidx.i.i190, align 1, !tbaa !9
  switch i8 %13, label %do.body58 [
    i8 32, label %land.rhs35
    i8 9, label %land.rhs35
    i8 10, label %land.rhs35
    i8 13, label %land.rhs35
    i8 35, label %do.body
  ]

land.rhs35:                                       ; preds = %while.cond, %while.cond, %while.cond, %while.cond
  %exitcond.not = icmp eq i32 %i.1, %smax
  br i1 %exitcond.not, label %cleanup, label %while.body

while.body:                                       ; preds = %land.rhs35
  %inc = add i32 %i.1, 1
  br label %while.cond, !llvm.loop !119

do.body:                                          ; preds = %while.cond, %land.rhs53
  %i.2 = phi i32 [ %inc45, %land.rhs53 ], [ %i.1, %while.cond ]
  %inc45 = add nsw i32 %i.2, 1
  %and.i218 = and i32 %inc45, %sub3.i187
  %idxprom.i.i219 = sext i32 %and.i218 to i64
  %arrayidx.i.i220 = getelementptr inbounds i8, ptr %11, i64 %idxprom.i.i219
  %14 = load i8, ptr %arrayidx.i.i220, align 1, !tbaa !9
  switch i8 %14, label %land.rhs53 [
    i8 10, label %for.inc
    i8 13, label %for.inc
  ]

land.rhs53:                                       ; preds = %do.body
  %cmp55 = icmp slt i32 %inc45, %sub316
  br i1 %cmp55, label %do.body, label %for.inc, !llvm.loop !120

do.body58:                                        ; preds = %while.cond, %land.lhs.true82
  %indvars.iv = phi i64 [ %indvars.iv.next, %land.lhs.true82 ], [ 0, %while.cond ]
  %i.3 = phi i32 [ %inc63, %land.lhs.true82 ], [ %i.1, %while.cond ]
  %and.i230 = and i32 %i.3, %sub3.i187
  %idxprom.i.i231 = sext i32 %and.i230 to i64
  %arrayidx.i.i232 = getelementptr inbounds i8, ptr %11, i64 %idxprom.i.i231
  %15 = load i8, ptr %arrayidx.i.i232, align 1, !tbaa !9
  %arrayidx = getelementptr inbounds [32 x i8], ptr %v_buf, i64 0, i64 %indvars.iv
  store i8 %15, ptr %arrayidx, align 1, !tbaa !9
  %inc63 = add nsw i32 %i.3, 1
  %and.i236 = and i32 %inc63, %sub3.i187
  %idxprom.i.i237 = sext i32 %and.i236 to i64
  %arrayidx.i.i238 = getelementptr inbounds i8, ptr %11, i64 %idxprom.i.i237
  %16 = load i8, ptr %arrayidx.i.i238, align 1, !tbaa !9
  switch i8 %16, label %land.lhs.true82 [
    i8 32, label %if.then90
    i8 9, label %if.then90
    i8 10, label %if.then90
    i8 13, label %if.then90
  ]

land.lhs.true82:                                  ; preds = %do.body58
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp84 = icmp slt i32 %inc63, %sub316
  %cmp86 = icmp ult i64 %indvars.iv, 31
  %or.cond128 = and i1 %cmp86, %cmp84
  br i1 %or.cond128, label %do.body58, label %for.inc, !llvm.loop !121

if.then90:                                        ; preds = %do.body58, %do.body58, %do.body58, %do.body58
  %call.i = call i64 @strtol(ptr nocapture noundef nonnull %v_buf, ptr noundef null, i32 noundef 10) #39
  %conv.i258 = trunc i64 %call.i to i32
  %17 = load i32, ptr @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4, !tbaa !25
  %inc92 = add nsw i32 %17, 1
  store i32 %inc92, ptr @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4, !tbaa !25
  %idxprom93 = sext i32 %17 to i64
  %arrayidx94 = getelementptr inbounds [3 x i32], ptr @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 %idxprom93
  store i32 %conv.i258, ptr %arrayidx94, align 4, !tbaa !25
  store i32 %inc63, ptr @_ZZ8pgmModelR5MixerE3pgm, align 4, !tbaa !25
  %.pre = load i32, ptr @buf, align 8, !tbaa !20
  %.pre329 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %.pre333 = load i32, ptr @pos, align 4, !tbaa !25
  br label %for.inc

for.inc:                                          ; preds = %do.body, %do.body, %land.rhs53, %land.lhs.true82, %if.then90
  %18 = phi i32 [ %.pre333, %if.then90 ], [ %10, %land.lhs.true82 ], [ %10, %land.rhs53 ], [ %10, %do.body ], [ %10, %do.body ]
  %.pr = phi i32 [ %inc92, %if.then90 ], [ %.pr331, %land.lhs.true82 ], [ %.pr331, %land.rhs53 ], [ %.pr331, %do.body ], [ %.pr331, %do.body ]
  %19 = phi ptr [ %.pre329, %if.then90 ], [ %11, %land.lhs.true82 ], [ %11, %land.rhs53 ], [ %11, %do.body ], [ %11, %do.body ]
  %20 = phi i32 [ %.pre, %if.then90 ], [ %12, %land.lhs.true82 ], [ %12, %land.rhs53 ], [ %12, %do.body ], [ %12, %do.body ]
  %i.4 = phi i32 [ %inc63, %if.then90 ], [ %inc63, %land.lhs.true82 ], [ %inc45, %land.rhs53 ], [ %inc45, %do.body ], [ %inc45, %do.body ]
  %inc97 = add nsw i32 %i.4, 1
  %sub = add nsw i32 %18, -1
  %cmp19 = icmp slt i32 %inc97, %sub
  %cmp20 = icmp slt i32 %.pr, 3
  %21 = select i1 %cmp19, i1 %cmp20, i1 false
  br i1 %21, label %while.cond.preheader, label %cleanup, !llvm.loop !122

cleanup:                                          ; preds = %for.inc, %land.rhs35
  %22 = phi i32 [ %.pr331, %land.rhs35 ], [ %.pr, %for.inc ]
  %23 = phi i32 [ %10, %land.rhs35 ], [ %18, %for.inc ]
  %cmp98 = icmp eq i32 %22, 3
  br i1 %cmp98, label %if.then99, label %if.end111

if.then99:                                        ; preds = %cleanup
  %24 = load i32, ptr getelementptr inbounds ([3 x i32], ptr @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 2), align 4, !tbaa !25
  %cmp100 = icmp eq i32 %24, 255
  %25 = load i32, ptr @_ZZ8pgmModelR5MixerE7pgm_hdr, align 4
  %cmp102 = icmp sgt i32 %25, 0
  %or.cond126 = select i1 %cmp100, i1 %cmp102, i1 false
  %26 = load i32, ptr getelementptr inbounds ([3 x i32], ptr @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 1), align 4
  %cmp104 = icmp sgt i32 %26, 0
  %or.cond127 = select i1 %or.cond126, i1 %cmp104, i1 false
  br i1 %or.cond127, label %if.then105, label %if.end111

if.then105:                                       ; preds = %if.then99
  store i32 %25, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !25
  %mul = mul nsw i32 %26, %25
  %add = add nsw i32 %mul, %23
  store i32 %add, ptr @_ZZ8pgmModelR5MixerE3eoi, align 4, !tbaa !25
  %call106 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.6, i32 noundef %25, i32 noundef %26)
  br label %if.end111

if.end111:                                        ; preds = %for.cond.preheader, %cleanup, %if.then105, %if.then99, %if.else, %entry
  %27 = load i32, ptr @pos, align 4, !tbaa !25
  %28 = load i32, ptr @_ZZ8pgmModelR5MixerE3eoi, align 4, !tbaa !25
  %cmp112 = icmp sgt i32 %27, %28
  br i1 %cmp112, label %if.then113, label %if.end114

if.then113:                                       ; preds = %if.end111
  store i32 0, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !25
  br label %cleanup122

if.end114:                                        ; preds = %if.end111
  %29 = load i32, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !25
  tail call void @_Z9model8bitR5Mixeri(ptr noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %29)
  %30 = load i32, ptr @_ZZ8pgmModelR5MixerE3col, align 4, !tbaa !25
  %inc115 = add nsw i32 %30, 1
  %cmp116 = icmp sgt i32 %30, 6
  %spec.store.select = select i1 %cmp116, i32 0, i32 %inc115
  store i32 %spec.store.select, ptr @_ZZ8pgmModelR5MixerE3col, align 4
  %base.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 7
  %31 = load i32, ptr %base.i, align 4, !tbaa !63
  %add.i = add nsw i32 %31, 2
  %ncxt.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 6
  %32 = load i32, ptr %ncxt.i, align 8, !tbaa !62
  %inc.i = add nsw i32 %32, 1
  store i32 %inc.i, ptr %ncxt.i, align 8, !tbaa !62
  %data.i.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 5, i32 3
  %33 = load ptr, ptr %data.i.i, align 8, !tbaa !61
  %idxprom.i.i259 = sext i32 %32 to i64
  %arrayidx.i.i260 = getelementptr inbounds i32, ptr %33, i64 %idxprom.i.i259
  store i32 %add.i, ptr %arrayidx.i.i260, align 4, !tbaa !25
  %34 = load i32, ptr %base.i, align 4, !tbaa !63
  %add3.i = add nsw i32 %34, 8
  store i32 %add3.i, ptr %base.i, align 4, !tbaa !63
  %add.i262 = add nsw i32 %add3.i, %spec.store.select
  %35 = load i32, ptr %ncxt.i, align 8, !tbaa !62
  %inc.i264 = add nsw i32 %35, 1
  store i32 %inc.i264, ptr %ncxt.i, align 8, !tbaa !62
  %idxprom.i.i266 = sext i32 %35 to i64
  %arrayidx.i.i267 = getelementptr inbounds i32, ptr %33, i64 %idxprom.i.i266
  store i32 %add.i262, ptr %arrayidx.i.i267, align 4, !tbaa !25
  %36 = load i32, ptr %base.i, align 4, !tbaa !63
  %add3.i268 = add nsw i32 %36, 8
  store i32 %add3.i268, ptr %base.i, align 4, !tbaa !63
  %37 = load i32, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !25
  %38 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i269 = sub nsw i32 %38, %37
  %39 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i270 = add nsw i32 %39, -1
  %and.i271 = and i32 %sub3.i270, %sub.i269
  %40 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i272 = sext i32 %and.i271 to i64
  %arrayidx.i.i273 = getelementptr inbounds i8, ptr %40, i64 %idxprom.i.i272
  %41 = load i8, ptr %arrayidx.i.i273, align 1, !tbaa !9
  %conv.i274 = zext i8 %41 to i32
  %sub.i275 = add nsw i32 %38, -1
  %and.i277 = and i32 %sub3.i270, %sub.i275
  %idxprom.i.i278 = sext i32 %and.i277 to i64
  %arrayidx.i.i279 = getelementptr inbounds i8, ptr %40, i64 %idxprom.i.i278
  %42 = load i8, ptr %arrayidx.i.i279, align 1, !tbaa !9
  %conv.i280 = zext i8 %42 to i32
  %add121 = add nuw nsw i32 %conv.i280, %conv.i274
  %shr = lshr i32 %add121, 4
  %add.i282 = add nsw i32 %shr, %add3.i268
  %43 = load i32, ptr %ncxt.i, align 8, !tbaa !62
  %inc.i284 = add nsw i32 %43, 1
  store i32 %inc.i284, ptr %ncxt.i, align 8, !tbaa !62
  %idxprom.i.i286 = sext i32 %43 to i64
  %arrayidx.i.i287 = getelementptr inbounds i32, ptr %33, i64 %idxprom.i.i286
  store i32 %add.i282, ptr %arrayidx.i.i287, align 4, !tbaa !25
  %44 = load i32, ptr %base.i, align 4, !tbaa !63
  %add3.i288 = add nsw i32 %44, 32
  store i32 %add3.i288, ptr %base.i, align 4, !tbaa !63
  %45 = load i32, ptr @c0, align 4, !tbaa !25
  %add.i290 = add nsw i32 %45, %add3.i288
  %46 = load i32, ptr %ncxt.i, align 8, !tbaa !62
  %inc.i292 = add nsw i32 %46, 1
  store i32 %inc.i292, ptr %ncxt.i, align 8, !tbaa !62
  %idxprom.i.i294 = sext i32 %46 to i64
  %arrayidx.i.i295 = getelementptr inbounds i32, ptr %33, i64 %idxprom.i.i294
  store i32 %add.i290, ptr %arrayidx.i.i295, align 4, !tbaa !25
  %47 = load i32, ptr %base.i, align 4, !tbaa !63
  %add3.i296 = add nsw i32 %47, 256
  store i32 %add3.i296, ptr %base.i, align 4, !tbaa !63
  br label %cleanup122

cleanup122:                                       ; preds = %if.end114, %if.then113, %if.then14
  %retval.0 = phi i32 [ 0, %if.then113 ], [ %37, %if.end114 ], [ 0, %if.then14 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %v_buf) #39
  ret i32 %retval.0
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z9bmpModel8R5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %m) local_unnamed_addr #14 {
entry:
  %0 = load i32, ptr @bpos, align 4, !tbaa !25
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end19

if.then:                                          ; preds = %entry
  %1 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i = add i32 %1, -44
  %2 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i = add nsw i32 %2, -1
  %and.i.i = and i32 %sub3.i.i, %sub.i.i
  %3 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i = sext i32 %and.i.i to i64
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i.i
  %4 = load i8, ptr %arrayidx.i.i.i, align 1, !tbaa !9
  %conv.i.i = zext i8 %4 to i32
  %sub.i13.i = add i32 %1, -43
  %and.i15.i = and i32 %sub3.i.i, %sub.i13.i
  %idxprom.i.i16.i = sext i32 %and.i15.i to i64
  %arrayidx.i.i17.i = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i16.i
  %5 = load i8, ptr %arrayidx.i.i17.i, align 1, !tbaa !9
  %conv.i18.i = zext i8 %5 to i32
  %mul.i = shl nuw nsw i32 %conv.i18.i, 8
  %add.i = or i32 %mul.i, %conv.i.i
  %sub.i19.i = add i32 %1, -42
  %and.i21.i = and i32 %sub3.i.i, %sub.i19.i
  %idxprom.i.i22.i = sext i32 %and.i21.i to i64
  %arrayidx.i.i23.i = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i22.i
  %6 = load i8, ptr %arrayidx.i.i23.i, align 1, !tbaa !9
  %conv.i24.i = zext i8 %6 to i32
  %mul4.i = shl nuw nsw i32 %conv.i24.i, 16
  %add5.i = or i32 %add.i, %mul4.i
  %sub.i25.i = add i32 %1, -41
  %and.i27.i = and i32 %sub3.i.i, %sub.i25.i
  %idxprom.i.i28.i = sext i32 %and.i27.i to i64
  %arrayidx.i.i29.i = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i28.i
  %7 = load i8, ptr %arrayidx.i.i29.i, align 1, !tbaa !9
  %conv.i30.i = zext i8 %7 to i32
  %mul8.i = shl nuw nsw i32 %conv.i30.i, 24
  %add9.i = or i32 %add5.i, %mul8.i
  %cmp1 = icmp ult i32 %add9.i, 1079
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %sub.i.i33 = add i32 %1, -40
  %and.i.i35 = and i32 %sub3.i.i, %sub.i.i33
  %idxprom.i.i.i36 = sext i32 %and.i.i35 to i64
  %arrayidx.i.i.i37 = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i.i36
  %8 = load i8, ptr %arrayidx.i.i.i37, align 1, !tbaa !9
  %conv.i.i38 = zext i8 %8 to i32
  %sub.i13.i39 = add i32 %1, -39
  %and.i15.i40 = and i32 %sub3.i.i, %sub.i13.i39
  %idxprom.i.i16.i41 = sext i32 %and.i15.i40 to i64
  %arrayidx.i.i17.i42 = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i16.i41
  %9 = load i8, ptr %arrayidx.i.i17.i42, align 1, !tbaa !9
  %conv.i18.i43 = zext i8 %9 to i32
  %mul.i44 = shl nuw nsw i32 %conv.i18.i43, 8
  %add.i45 = or i32 %mul.i44, %conv.i.i38
  %sub.i19.i46 = add i32 %1, -38
  %and.i21.i47 = and i32 %sub3.i.i, %sub.i19.i46
  %idxprom.i.i22.i48 = sext i32 %and.i21.i47 to i64
  %arrayidx.i.i23.i49 = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i22.i48
  %10 = load i8, ptr %arrayidx.i.i23.i49, align 1, !tbaa !9
  %conv.i24.i50 = zext i8 %10 to i32
  %mul4.i51 = shl nuw nsw i32 %conv.i24.i50, 16
  %add5.i52 = or i32 %add.i45, %mul4.i51
  %sub.i25.i53 = add i32 %1, -37
  %and.i27.i54 = and i32 %sub3.i.i, %sub.i25.i53
  %idxprom.i.i28.i55 = sext i32 %and.i27.i54 to i64
  %arrayidx.i.i29.i56 = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i28.i55
  %11 = load i8, ptr %arrayidx.i.i29.i56, align 1, !tbaa !9
  %conv.i30.i57 = zext i8 %11 to i32
  %mul8.i58 = shl nuw nsw i32 %conv.i30.i57, 24
  %add9.i59 = or i32 %add5.i52, %mul8.i58
  %cmp3 = icmp eq i32 %add9.i59, 40
  br i1 %cmp3, label %land.lhs.true4, label %if.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %sub.i.i60 = add i32 %1, -24
  %and.i.i62 = and i32 %sub3.i.i, %sub.i.i60
  %idxprom.i.i.i63 = sext i32 %and.i.i62 to i64
  %arrayidx.i.i.i64 = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i.i63
  %12 = load i8, ptr %arrayidx.i.i.i64, align 1, !tbaa !9
  %conv.i.i65 = zext i8 %12 to i32
  %sub.i13.i66 = add i32 %1, -23
  %and.i15.i67 = and i32 %sub3.i.i, %sub.i13.i66
  %idxprom.i.i16.i68 = sext i32 %and.i15.i67 to i64
  %arrayidx.i.i17.i69 = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i16.i68
  %13 = load i8, ptr %arrayidx.i.i17.i69, align 1, !tbaa !9
  %conv.i18.i70 = zext i8 %13 to i32
  %mul.i71 = shl nuw nsw i32 %conv.i18.i70, 8
  %add.i72 = or i32 %mul.i71, %conv.i.i65
  %sub.i19.i73 = add i32 %1, -22
  %and.i21.i74 = and i32 %sub3.i.i, %sub.i19.i73
  %idxprom.i.i22.i75 = sext i32 %and.i21.i74 to i64
  %arrayidx.i.i23.i76 = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i22.i75
  %14 = load i8, ptr %arrayidx.i.i23.i76, align 1, !tbaa !9
  %conv.i24.i77 = zext i8 %14 to i32
  %mul4.i78 = shl nuw nsw i32 %conv.i24.i77, 16
  %add5.i79 = or i32 %add.i72, %mul4.i78
  %sub.i25.i80 = add i32 %1, -21
  %and.i27.i81 = and i32 %sub3.i.i, %sub.i25.i80
  %idxprom.i.i28.i82 = sext i32 %and.i27.i81 to i64
  %arrayidx.i.i29.i83 = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i28.i82
  %15 = load i8, ptr %arrayidx.i.i29.i83, align 1, !tbaa !9
  %conv.i30.i84 = zext i8 %15 to i32
  %mul8.i85 = shl nuw nsw i32 %conv.i30.i84, 24
  %add9.i86 = or i32 %add5.i79, %mul8.i85
  %cmp6 = icmp eq i32 %add9.i86, 0
  br i1 %cmp6, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %land.lhs.true4
  %sub.i = add nsw i32 %1, -26
  %and.i = and i32 %sub3.i.i, %sub.i
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i
  %16 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %cmp9 = icmp eq i8 %16, 8
  br i1 %cmp9, label %if.then10, label %if.end

if.then10:                                        ; preds = %land.lhs.true7
  %call11 = tail call noundef i32 @_Z2i4i(i32 noundef 36)
  store i32 %call11, ptr @_ZZ9bmpModel8R5MixerE2w1, align 4, !tbaa !25
  %call12 = tail call noundef i32 @_Z2i4i(i32 noundef 32)
  store i32 %call12, ptr @_ZZ9bmpModel8R5MixerE1h, align 4, !tbaa !25
  %17 = load i32, ptr @pos, align 4, !tbaa !25
  %call13 = tail call noundef i32 @_Z2i4i(i32 noundef 44)
  %add = add i32 %17, -54
  %sub = add i32 %add, %call13
  store i32 %sub, ptr @_ZZ9bmpModel8R5MixerE4ibmp, align 4, !tbaa !25
  %.pre = load i32, ptr @pos, align 4, !tbaa !25
  br label %if.end

if.end:                                           ; preds = %if.then10, %land.lhs.true7, %land.lhs.true4, %land.lhs.true, %if.then
  %18 = phi i32 [ %.pre, %if.then10 ], [ %1, %land.lhs.true7 ], [ %1, %land.lhs.true4 ], [ %1, %land.lhs.true ], [ %1, %if.then ]
  %19 = load i32, ptr @_ZZ9bmpModel8R5MixerE4ibmp, align 4, !tbaa !25
  %cmp14 = icmp eq i32 %19, %18
  br i1 %cmp14, label %if.then15, label %if.end19

if.then15:                                        ; preds = %if.end
  %20 = load i32, ptr @_ZZ9bmpModel8R5MixerE2w1, align 4, !tbaa !25
  store i32 %20, ptr @_ZZ9bmpModel8R5MixerE1w, align 4, !tbaa !25
  %21 = load i32, ptr @_ZZ9bmpModel8R5MixerE1h, align 4, !tbaa !25
  %mul = mul nsw i32 %21, %20
  %add16 = add nsw i32 %mul, %18
  store i32 %add16, ptr @_ZZ9bmpModel8R5MixerE3eoi, align 4, !tbaa !25
  %call17 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.7, i32 noundef %20, i32 noundef %21)
  store i32 0, ptr @_ZZ9bmpModel8R5MixerE4ibmp, align 4, !tbaa !25
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then15, %entry
  %22 = load i32, ptr @pos, align 4, !tbaa !25
  %23 = load i32, ptr @_ZZ9bmpModel8R5MixerE3eoi, align 4, !tbaa !25
  %cmp20 = icmp sgt i32 %22, %23
  br i1 %cmp20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.end19
  store i32 0, ptr @_ZZ9bmpModel8R5MixerE1w, align 4, !tbaa !25
  br label %return

if.end22:                                         ; preds = %if.end19
  %24 = load i32, ptr @_ZZ9bmpModel8R5MixerE1w, align 4, !tbaa !25
  tail call void @_Z9model8bitR5Mixeri(ptr noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %24)
  %25 = load i32, ptr @_ZZ9bmpModel8R5MixerE3col, align 4, !tbaa !25
  %inc = add nsw i32 %25, 1
  %cmp23 = icmp sgt i32 %25, 6
  %spec.store.select = select i1 %cmp23, i32 0, i32 %inc
  store i32 %spec.store.select, ptr @_ZZ9bmpModel8R5MixerE3col, align 4
  %base.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 7
  %26 = load i32, ptr %base.i, align 4, !tbaa !63
  %add.i87 = add nsw i32 %26, 2
  %ncxt.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 6
  %27 = load i32, ptr %ncxt.i, align 8, !tbaa !62
  %inc.i = add nsw i32 %27, 1
  store i32 %inc.i, ptr %ncxt.i, align 8, !tbaa !62
  %data.i.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 5, i32 3
  %28 = load ptr, ptr %data.i.i, align 8, !tbaa !61
  %idxprom.i.i88 = sext i32 %27 to i64
  %arrayidx.i.i89 = getelementptr inbounds i32, ptr %28, i64 %idxprom.i.i88
  store i32 %add.i87, ptr %arrayidx.i.i89, align 4, !tbaa !25
  %29 = load i32, ptr %base.i, align 4, !tbaa !63
  %add3.i = add nsw i32 %29, 8
  store i32 %add3.i, ptr %base.i, align 4, !tbaa !63
  %add.i91 = add nsw i32 %add3.i, %spec.store.select
  %30 = load i32, ptr %ncxt.i, align 8, !tbaa !62
  %inc.i93 = add nsw i32 %30, 1
  store i32 %inc.i93, ptr %ncxt.i, align 8, !tbaa !62
  %idxprom.i.i95 = sext i32 %30 to i64
  %arrayidx.i.i96 = getelementptr inbounds i32, ptr %28, i64 %idxprom.i.i95
  store i32 %add.i91, ptr %arrayidx.i.i96, align 4, !tbaa !25
  %31 = load i32, ptr %base.i, align 4, !tbaa !63
  %add3.i97 = add nsw i32 %31, 8
  store i32 %add3.i97, ptr %base.i, align 4, !tbaa !63
  %32 = load i32, ptr @_ZZ9bmpModel8R5MixerE1w, align 4, !tbaa !25
  %33 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i98 = sub nsw i32 %33, %32
  %34 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i99 = add nsw i32 %34, -1
  %and.i100 = and i32 %sub3.i99, %sub.i98
  %35 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i101 = sext i32 %and.i100 to i64
  %arrayidx.i.i102 = getelementptr inbounds i8, ptr %35, i64 %idxprom.i.i101
  %36 = load i8, ptr %arrayidx.i.i102, align 1, !tbaa !9
  %conv.i103 = zext i8 %36 to i32
  %sub.i104 = add nsw i32 %33, -1
  %and.i106 = and i32 %sub3.i99, %sub.i104
  %idxprom.i.i107 = sext i32 %and.i106 to i64
  %arrayidx.i.i108 = getelementptr inbounds i8, ptr %35, i64 %idxprom.i.i107
  %37 = load i8, ptr %arrayidx.i.i108, align 1, !tbaa !9
  %conv.i109 = zext i8 %37 to i32
  %add28 = add nuw nsw i32 %conv.i109, %conv.i103
  %shr = lshr i32 %add28, 4
  %add.i111 = add nsw i32 %shr, %add3.i97
  %38 = load i32, ptr %ncxt.i, align 8, !tbaa !62
  %inc.i113 = add nsw i32 %38, 1
  store i32 %inc.i113, ptr %ncxt.i, align 8, !tbaa !62
  %idxprom.i.i115 = sext i32 %38 to i64
  %arrayidx.i.i116 = getelementptr inbounds i32, ptr %28, i64 %idxprom.i.i115
  store i32 %add.i111, ptr %arrayidx.i.i116, align 4, !tbaa !25
  %39 = load i32, ptr %base.i, align 4, !tbaa !63
  %add3.i117 = add nsw i32 %39, 32
  store i32 %add3.i117, ptr %base.i, align 4, !tbaa !63
  %40 = load i32, ptr @c0, align 4, !tbaa !25
  %add.i119 = add nsw i32 %40, %add3.i117
  %41 = load i32, ptr %ncxt.i, align 8, !tbaa !62
  %inc.i121 = add nsw i32 %41, 1
  store i32 %inc.i121, ptr %ncxt.i, align 8, !tbaa !62
  %idxprom.i.i123 = sext i32 %41 to i64
  %arrayidx.i.i124 = getelementptr inbounds i32, ptr %28, i64 %idxprom.i.i123
  store i32 %add.i119, ptr %arrayidx.i.i124, align 4, !tbaa !25
  %42 = load i32, ptr %base.i, align 4, !tbaa !63
  %add3.i125 = add nsw i32 %42, 256
  store i32 %add3.i125, ptr %base.i, align 4, !tbaa !63
  br label %return

return:                                           ; preds = %if.end22, %if.then21
  %retval.0 = phi i32 [ 0, %if.then21 ], [ %32, %if.end22 ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z9rgbModel8R5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %m) local_unnamed_addr #14 {
entry:
  %0 = load i32, ptr @bpos, align 4, !tbaa !25
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end22

if.then:                                          ; preds = %entry
  %1 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i = add nsw i32 %1, -507
  %2 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i = add nsw i32 %2, -1
  %and.i = and i32 %sub3.i, %sub.i
  %3 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i
  %4 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %cmp1 = icmp eq i8 %4, 1
  br i1 %cmp1, label %land.lhs.true, label %if.end22

land.lhs.true:                                    ; preds = %if.then
  %sub.i37 = add nsw i32 %1, -506
  %and.i39 = and i32 %sub3.i, %sub.i37
  %idxprom.i.i40 = sext i32 %and.i39 to i64
  %arrayidx.i.i41 = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i40
  %5 = load i8, ptr %arrayidx.i.i41, align 1, !tbaa !9
  %cmp3 = icmp eq i8 %5, -38
  br i1 %cmp3, label %land.lhs.true4, label %if.end22

land.lhs.true4:                                   ; preds = %land.lhs.true
  %sub.i43 = add nsw i32 %1, -505
  %and.i45 = and i32 %sub3.i, %sub.i43
  %idxprom.i.i46 = sext i32 %and.i45 to i64
  %arrayidx.i.i47 = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i46
  %6 = load i8, ptr %arrayidx.i.i47, align 1, !tbaa !9
  %cmp6 = icmp eq i8 %6, 0
  br i1 %cmp6, label %land.lhs.true7, label %if.end22

land.lhs.true7:                                   ; preds = %land.lhs.true4
  %sub.i.i = add i32 %1, -496
  %and.i.i = and i32 %sub3.i, %sub.i.i
  %idxprom.i.i.i = sext i32 %and.i.i to i64
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i.i
  %7 = load i8, ptr %arrayidx.i.i.i, align 1, !tbaa !9
  %conv.i.i = zext i8 %7 to i32
  %sub.i3.i = add i32 %1, -495
  %and.i5.i = and i32 %sub3.i, %sub.i3.i
  %idxprom.i.i6.i = sext i32 %and.i5.i to i64
  %arrayidx.i.i7.i = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i6.i
  %8 = load i8, ptr %arrayidx.i.i7.i, align 1, !tbaa !9
  %conv.i8.i = zext i8 %8 to i32
  %mul.i = shl nuw nsw i32 %conv.i8.i, 8
  %add.i = or i32 %mul.i, %conv.i.i
  %cmp9 = icmp eq i32 %add.i, 1
  br i1 %cmp9, label %if.then10, label %if.end22

if.then10:                                        ; preds = %land.lhs.true7
  %sub.i49 = add nsw i32 %1, -501
  %and.i51 = and i32 %sub3.i, %sub.i49
  %idxprom.i.i52 = sext i32 %and.i51 to i64
  %arrayidx.i.i53 = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i52
  %9 = load i8, ptr %arrayidx.i.i53, align 1, !tbaa !9
  %conv.i54 = zext i8 %9 to i32
  %mul = shl nuw nsw i32 %conv.i54, 8
  %sub.i55 = add nsw i32 %1, -500
  %and.i57 = and i32 %sub3.i, %sub.i55
  %idxprom.i.i58 = sext i32 %and.i57 to i64
  %arrayidx.i.i59 = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i58
  %10 = load i8, ptr %arrayidx.i.i59, align 1, !tbaa !9
  %conv.i60 = zext i8 %10 to i32
  %or = or i32 %mul, %conv.i60
  store i32 %or, ptr @_ZZ9rgbModel8R5MixerE1w, align 4, !tbaa !25
  %sub.i61 = add nsw i32 %1, -499
  %and.i63 = and i32 %sub3.i, %sub.i61
  %idxprom.i.i64 = sext i32 %and.i63 to i64
  %arrayidx.i.i65 = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i64
  %11 = load i8, ptr %arrayidx.i.i65, align 1, !tbaa !9
  %conv.i66 = zext i8 %11 to i32
  %mul16 = shl nuw nsw i32 %conv.i66, 8
  %sub.i67 = add nsw i32 %1, -498
  %and.i69 = and i32 %sub3.i, %sub.i67
  %idxprom.i.i70 = sext i32 %and.i69 to i64
  %arrayidx.i.i71 = getelementptr inbounds i8, ptr %3, i64 %idxprom.i.i70
  %12 = load i8, ptr %arrayidx.i.i71, align 1, !tbaa !9
  %conv.i72 = zext i8 %12 to i32
  %or19 = or i32 %mul16, %conv.i72
  %mul20 = mul nuw nsw i32 %or19, %or
  %add = add nsw i32 %mul20, %1
  store i32 %add, ptr @_ZZ9rgbModel8R5MixerE3eoi, align 4, !tbaa !25
  %call21 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.8, i32 noundef %or, i32 noundef %or19)
  br label %if.end22

if.end22:                                         ; preds = %if.then, %land.lhs.true, %land.lhs.true4, %land.lhs.true7, %if.then10, %entry
  %13 = load i32, ptr @pos, align 4, !tbaa !25
  %14 = load i32, ptr @_ZZ9rgbModel8R5MixerE3eoi, align 4, !tbaa !25
  %cmp23 = icmp sgt i32 %13, %14
  br i1 %cmp23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.end22
  store i32 0, ptr @_ZZ9rgbModel8R5MixerE1w, align 4, !tbaa !25
  br label %cleanup

if.end25:                                         ; preds = %if.end22
  %15 = load i32, ptr @_ZZ9rgbModel8R5MixerE1w, align 4, !tbaa !25
  tail call void @_Z9model8bitR5Mixeri(ptr noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %15)
  %16 = load i32, ptr @_ZZ9rgbModel8R5MixerE3col, align 4, !tbaa !25
  %inc = add nsw i32 %16, 1
  %cmp26 = icmp sgt i32 %16, 6
  %spec.store.select = select i1 %cmp26, i32 0, i32 %inc
  store i32 %spec.store.select, ptr @_ZZ9rgbModel8R5MixerE3col, align 4
  %base.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 7
  %17 = load i32, ptr %base.i, align 4, !tbaa !63
  %add.i73 = add nsw i32 %17, 2
  %ncxt.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 6
  %18 = load i32, ptr %ncxt.i, align 8, !tbaa !62
  %inc.i = add nsw i32 %18, 1
  store i32 %inc.i, ptr %ncxt.i, align 8, !tbaa !62
  %data.i.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 5, i32 3
  %19 = load ptr, ptr %data.i.i, align 8, !tbaa !61
  %idxprom.i.i74 = sext i32 %18 to i64
  %arrayidx.i.i75 = getelementptr inbounds i32, ptr %19, i64 %idxprom.i.i74
  store i32 %add.i73, ptr %arrayidx.i.i75, align 4, !tbaa !25
  %20 = load i32, ptr %base.i, align 4, !tbaa !63
  %add3.i = add nsw i32 %20, 8
  store i32 %add3.i, ptr %base.i, align 4, !tbaa !63
  %add.i77 = add nsw i32 %add3.i, %spec.store.select
  %21 = load i32, ptr %ncxt.i, align 8, !tbaa !62
  %inc.i79 = add nsw i32 %21, 1
  store i32 %inc.i79, ptr %ncxt.i, align 8, !tbaa !62
  %idxprom.i.i81 = sext i32 %21 to i64
  %arrayidx.i.i82 = getelementptr inbounds i32, ptr %19, i64 %idxprom.i.i81
  store i32 %add.i77, ptr %arrayidx.i.i82, align 4, !tbaa !25
  %22 = load i32, ptr %base.i, align 4, !tbaa !63
  %add3.i83 = add nsw i32 %22, 8
  store i32 %add3.i83, ptr %base.i, align 4, !tbaa !63
  %23 = load i32, ptr @_ZZ9rgbModel8R5MixerE1w, align 4, !tbaa !25
  %24 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i84 = sub nsw i32 %24, %23
  %25 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i85 = add nsw i32 %25, -1
  %and.i86 = and i32 %sub3.i85, %sub.i84
  %26 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i87 = sext i32 %and.i86 to i64
  %arrayidx.i.i88 = getelementptr inbounds i8, ptr %26, i64 %idxprom.i.i87
  %27 = load i8, ptr %arrayidx.i.i88, align 1, !tbaa !9
  %conv.i89 = zext i8 %27 to i32
  %sub.i90 = add nsw i32 %24, -1
  %and.i92 = and i32 %sub3.i85, %sub.i90
  %idxprom.i.i93 = sext i32 %and.i92 to i64
  %arrayidx.i.i94 = getelementptr inbounds i8, ptr %26, i64 %idxprom.i.i93
  %28 = load i8, ptr %arrayidx.i.i94, align 1, !tbaa !9
  %conv.i95 = zext i8 %28 to i32
  %add31 = add nuw nsw i32 %conv.i95, %conv.i89
  %shr = lshr i32 %add31, 4
  %add.i97 = add nsw i32 %shr, %add3.i83
  %29 = load i32, ptr %ncxt.i, align 8, !tbaa !62
  %inc.i99 = add nsw i32 %29, 1
  store i32 %inc.i99, ptr %ncxt.i, align 8, !tbaa !62
  %idxprom.i.i101 = sext i32 %29 to i64
  %arrayidx.i.i102 = getelementptr inbounds i32, ptr %19, i64 %idxprom.i.i101
  store i32 %add.i97, ptr %arrayidx.i.i102, align 4, !tbaa !25
  %30 = load i32, ptr %base.i, align 4, !tbaa !63
  %add3.i103 = add nsw i32 %30, 32
  store i32 %add3.i103, ptr %base.i, align 4, !tbaa !63
  %31 = load i32, ptr @c0, align 4, !tbaa !25
  %add.i105 = add nsw i32 %31, %add3.i103
  %32 = load i32, ptr %ncxt.i, align 8, !tbaa !62
  %inc.i107 = add nsw i32 %32, 1
  store i32 %inc.i107, ptr %ncxt.i, align 8, !tbaa !62
  %idxprom.i.i109 = sext i32 %32 to i64
  %arrayidx.i.i110 = getelementptr inbounds i32, ptr %19, i64 %idxprom.i.i109
  store i32 %add.i105, ptr %arrayidx.i.i110, align 4, !tbaa !25
  %33 = load i32, ptr %base.i, align 4, !tbaa !63
  %add3.i111 = add nsw i32 %33, 256
  store i32 %add3.i111, ptr %base.i, align 4, !tbaa !63
  br label %cleanup

cleanup:                                          ; preds = %if.end25, %if.then24
  %retval.0 = phi i32 [ 0, %if.then24 ], [ %23, %if.end25 ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z4dumpPKci(ptr noundef %msg, i32 noundef %p) local_unnamed_addr #19 {
entry:
  %call = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.9, ptr noundef %msg)
  %add = add nsw i32 %p, 2
  %0 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i = add nsw i32 %0, -1
  %and.i = and i32 %sub.i, %add
  %1 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %1, i64 %idxprom.i.i
  %2 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %conv = zext i8 %2 to i32
  %mul = shl nuw nsw i32 %conv, 8
  %add2 = add nsw i32 %p, 3
  %and.i17 = and i32 %sub.i, %add2
  %idxprom.i.i18 = sext i32 %and.i17 to i64
  %arrayidx.i.i19 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i.i18
  %3 = load i8, ptr %arrayidx.i.i19, align 1, !tbaa !9
  %conv4 = zext i8 %3 to i32
  %add5 = or i32 %mul, %conv4
  %4 = add nuw nsw i32 %add5, 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  %putchar = tail call i32 @putchar(i32 10)
  ret void

for.body:                                         ; preds = %entry, %for.body
  %i.024 = phi i32 [ 0, %entry ], [ %inc, %for.body ]
  %add7 = add nsw i32 %i.024, %p
  %5 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i20 = add nsw i32 %5, -1
  %and.i21 = and i32 %sub.i20, %add7
  %6 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i22 = sext i32 %and.i21 to i64
  %arrayidx.i.i23 = getelementptr inbounds i8, ptr %6, i64 %idxprom.i.i22
  %7 = load i8, ptr %arrayidx.i.i23, align 1, !tbaa !9
  %conv9 = zext i8 %7 to i32
  %call10 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.10, i32 noundef %conv9)
  %inc = add nuw nsw i32 %i.024, 1
  %exitcond.not = icmp eq i32 %i.024, %4
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !123
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_Z8update_kiiRiS_(i32 noundef %v1, i32 noundef %v2, ptr nocapture noundef nonnull align 4 dereferenceable(4) %k1, ptr nocapture noundef nonnull align 4 dereferenceable(4) %k2) local_unnamed_addr #20 {
entry:
  %0 = load i32, ptr %k1, align 4, !tbaa !25
  %sub = add nsw i32 %0, -1
  %mul = mul nsw i32 %sub, %v1
  %sub2 = sub i32 9, %0
  %mul3 = mul nsw i32 %sub2, %v2
  %add = add nsw i32 %mul, %mul3
  %call = tail call i32 @llvm.abs.i32(i32 %add, i1 true)
  %div65 = lshr i32 %call, 3
  %mul5 = mul nsw i32 %0, %v1
  %sub7 = sub nsw i32 8, %0
  %mul8 = mul nsw i32 %sub7, %v2
  %add9 = add nsw i32 %mul8, %mul5
  %call10 = tail call i32 @llvm.abs.i32(i32 %add9, i1 true)
  %div1166 = lshr i32 %call10, 3
  %add12 = add nsw i32 %0, 1
  %mul13 = mul nsw i32 %add12, %v1
  %sub15 = sub i32 7, %0
  %mul16 = mul nsw i32 %sub15, %v2
  %add17 = add nsw i32 %mul13, %mul16
  %call18 = tail call i32 @llvm.abs.i32(i32 %add17, i1 true)
  %div1967 = lshr i32 %call18, 3
  switch i32 %0, label %if.end22.fold.split [
    i32 0, label %if.end26
    i32 8, label %if.end22
  ]

if.end22.fold.split:                              ; preds = %entry
  br label %if.end22

if.end22:                                         ; preds = %entry, %if.end22.fold.split
  %c.0 = phi i32 [ %div1967, %if.end22.fold.split ], [ %div1166, %entry ]
  %cmp23 = icmp ult i32 %div65, %div1166
  %cmp24 = icmp ult i32 %div65, %c.0
  %or.cond = select i1 %cmp23, i1 %cmp24, i1 false
  br i1 %or.cond, label %if.then25, label %if.end26

if.then25:                                        ; preds = %if.end22
  %1 = load i32, ptr %k2, align 4, !tbaa !25
  %dec = add nsw i32 %1, -1
  store i32 %dec, ptr %k2, align 4, !tbaa !25
  br label %if.end26

if.end26:                                         ; preds = %entry, %if.then25, %if.end22
  %c.075 = phi i32 [ %c.0, %if.then25 ], [ %c.0, %if.end22 ], [ %div1967, %entry ]
  %a.074 = phi i32 [ %div65, %if.then25 ], [ %div65, %if.end22 ], [ %div1166, %entry ]
  %cmp27 = icmp ult i32 %c.075, %a.074
  %cmp29 = icmp ult i32 %c.075, %div1166
  %or.cond68 = select i1 %cmp27, i1 %cmp29, i1 false
  %2 = load i32, ptr %k2, align 4, !tbaa !25
  br i1 %or.cond68, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.end26
  %inc = add nsw i32 %2, 1
  store i32 %inc, ptr %k2, align 4, !tbaa !25
  br label %if.end31

if.end31:                                         ; preds = %if.end26, %if.then30
  %.pr76 = phi i32 [ %inc, %if.then30 ], [ %2, %if.end26 ]
  %cmp32 = icmp slt i32 %.pr76, -2
  br i1 %cmp32, label %if.end39.sink.split, label %if.end35

if.end35:                                         ; preds = %if.end31
  %cmp36 = icmp sgt i32 %.pr76, 2
  br i1 %cmp36, label %if.end39.sink.split, label %if.end39

if.end39.sink.split:                              ; preds = %if.end35, %if.end31
  %.sink78 = phi i32 [ -1, %if.end31 ], [ 1, %if.end35 ]
  %3 = load i32, ptr %k1, align 4, !tbaa !25
  %dec34 = add nsw i32 %3, %.sink78
  store i32 %dec34, ptr %k1, align 4, !tbaa !25
  store i32 0, ptr %k2, align 4, !tbaa !25
  br label %if.end39

if.end39:                                         ; preds = %if.end39.sink.split, %if.end35
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z9jpegModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %m) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2ht acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !110

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2ht) #39
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE2ht, i32 noundef 8)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init
  %2 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2ht, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2ht) #39
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %entry
  %3 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE3huf acquire, align 8
  %guard.uninitialized1 = icmp eq i8 %3, 0
  br i1 %guard.uninitialized1, label %init.check2, label %init.end7, !prof !110

init.check2:                                      ; preds = %init.end
  %4 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE3huf) #39
  %tobool3.not = icmp eq i32 %4, 0
  br i1 %tobool3.not, label %init.end7, label %init4

init4:                                            ; preds = %init.check2
  invoke void @_ZN5ArrayI3HUFLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE3huf, i32 noundef 128)
          to label %invoke.cont6 unwind label %lpad5

invoke.cont6:                                     ; preds = %init4
  %5 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayI3HUFLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE3huf, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE3huf) #39
  br label %init.end7

init.end7:                                        ; preds = %invoke.cont6, %init.check2, %init.end
  %6 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4hbuf acquire, align 8
  %guard.uninitialized8 = icmp eq i8 %6, 0
  br i1 %guard.uninitialized8, label %init.check9, label %init.end14, !prof !110

init.check9:                                      ; preds = %init.end7
  %7 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4hbuf) #39
  %tobool10.not = icmp eq i32 %7, 0
  br i1 %tobool10.not, label %init.end14, label %init11

init11:                                           ; preds = %init.check9
  invoke void @_ZN5ArrayIhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4hbuf, i32 noundef 2048)
          to label %invoke.cont13 unwind label %lpad12

invoke.cont13:                                    ; preds = %init11
  %8 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIhLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4hbuf, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4hbuf) #39
  br label %init.end14

init.end14:                                       ; preds = %invoke.cont13, %init.check9, %init.end7
  %9 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE5color acquire, align 8
  %guard.uninitialized15 = icmp eq i8 %9, 0
  br i1 %guard.uninitialized15, label %init.check16, label %init.end21, !prof !110

init.check16:                                     ; preds = %init.end14
  %10 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE5color) #39
  %tobool17.not = icmp eq i32 %10, 0
  br i1 %tobool17.not, label %init.end21, label %init18

init18:                                           ; preds = %init.check16
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE5color, i32 noundef 10)
          to label %invoke.cont20 unwind label %lpad19

invoke.cont20:                                    ; preds = %init18
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE5color, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE5color) #39
  br label %init.end21

init.end21:                                       ; preds = %invoke.cont20, %init.check16, %init.end14
  %12 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4pred acquire, align 8
  %guard.uninitialized22 = icmp eq i8 %12, 0
  br i1 %guard.uninitialized22, label %init.check23, label %init.end28, !prof !110

init.check23:                                     ; preds = %init.end21
  %13 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4pred) #39
  %tobool24.not = icmp eq i32 %13, 0
  br i1 %tobool24.not, label %init.end28, label %init25

init25:                                           ; preds = %init.check23
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4pred, i32 noundef 4)
          to label %invoke.cont27 unwind label %lpad26

invoke.cont27:                                    ; preds = %init25
  %14 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4pred, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4pred) #39
  br label %init.end28

init.end28:                                       ; preds = %invoke.cont27, %init.check23, %init.end21
  %15 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4cbuf acquire, align 8
  %guard.uninitialized29 = icmp eq i8 %15, 0
  br i1 %guard.uninitialized29, label %init.check30, label %init.end35, !prof !110

init.check30:                                     ; preds = %init.end28
  %16 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4cbuf) #39
  %tobool31.not = icmp eq i32 %16, 0
  br i1 %tobool31.not, label %init.end35, label %init32

init32:                                           ; preds = %init.check30
  invoke void @_ZN3BufC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4cbuf, i32 noundef 131072)
          to label %invoke.cont34 unwind label %lpad33

invoke.cont34:                                    ; preds = %init32
  %17 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN3BufD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4cbuf, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4cbuf) #39
  br label %init.end35

init.end35:                                       ; preds = %invoke.cont34, %init.check30, %init.end28
  %18 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE5cbuf2 acquire, align 8
  %guard.uninitialized36 = icmp eq i8 %18, 0
  br i1 %guard.uninitialized36, label %init.check37, label %init.end42, !prof !110

init.check37:                                     ; preds = %init.end35
  %19 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE5cbuf2) #39
  %tobool38.not = icmp eq i32 %19, 0
  br i1 %tobool38.not, label %init.end42, label %init39

init39:                                           ; preds = %init.check37
  invoke void @_ZN6IntBufC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE5cbuf2, i32 noundef 131072)
          to label %invoke.cont41 unwind label %lpad40

invoke.cont41:                                    ; preds = %init39
  %20 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN6IntBufD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE5cbuf2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE5cbuf2) #39
  br label %init.end42

init.end42:                                       ; preds = %invoke.cont41, %init.check37, %init.end35
  %21 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE8adv_pred acquire, align 8
  %guard.uninitialized43 = icmp eq i8 %21, 0
  br i1 %guard.uninitialized43, label %init.check44, label %init.end49, !prof !110

init.check44:                                     ; preds = %init.end42
  %22 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE8adv_pred) #39
  %tobool45.not = icmp eq i32 %22, 0
  br i1 %tobool45.not, label %init.end49, label %init46

init46:                                           ; preds = %init.check44
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE8adv_pred, i32 noundef 7)
          to label %invoke.cont48 unwind label %lpad47

invoke.cont48:                                    ; preds = %init46
  %23 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE8adv_pred, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE8adv_pred) #39
  br label %init.end49

init.end49:                                       ; preds = %invoke.cont48, %init.check44, %init.end42
  %24 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4sumu acquire, align 8
  %guard.uninitialized50 = icmp eq i8 %24, 0
  br i1 %guard.uninitialized50, label %init.check51, label %init.end56, !prof !110

init.check51:                                     ; preds = %init.end49
  %25 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4sumu) #39
  %tobool52.not = icmp eq i32 %25, 0
  br i1 %tobool52.not, label %init.end56, label %init53

init53:                                           ; preds = %init.check51
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4sumu, i32 noundef 8)
          to label %invoke.cont55 unwind label %lpad54

invoke.cont55:                                    ; preds = %init53
  %26 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4sumu, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4sumu) #39
  br label %init.end56

init.end56:                                       ; preds = %invoke.cont55, %init.check51, %init.end49
  %27 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4sumv acquire, align 8
  %guard.uninitialized57 = icmp eq i8 %27, 0
  br i1 %guard.uninitialized57, label %init.check58, label %init.end63, !prof !110

init.check58:                                     ; preds = %init.end56
  %28 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4sumv) #39
  %tobool59.not = icmp eq i32 %28, 0
  br i1 %tobool59.not, label %init.end63, label %init60

init60:                                           ; preds = %init.check58
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4sumv, i32 noundef 8)
          to label %invoke.cont62 unwind label %lpad61

invoke.cont62:                                    ; preds = %init60
  %29 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4sumv, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4sumv) #39
  br label %init.end63

init.end63:                                       ; preds = %invoke.cont62, %init.check58, %init.end56
  %30 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2ls acquire, align 8
  %guard.uninitialized64 = icmp eq i8 %30, 0
  br i1 %guard.uninitialized64, label %init.check65, label %init.end70, !prof !110

init.check65:                                     ; preds = %init.end63
  %31 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2ls) #39
  %tobool66.not = icmp eq i32 %31, 0
  br i1 %tobool66.not, label %init.end70, label %init67

init67:                                           ; preds = %init.check65
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE2ls, i32 noundef 10)
          to label %invoke.cont69 unwind label %lpad68

invoke.cont69:                                    ; preds = %init67
  %32 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2ls, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2ls) #39
  br label %init.end70

init.end70:                                       ; preds = %invoke.cont69, %init.check65, %init.end63
  %33 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE3lcp acquire, align 8
  %guard.uninitialized71 = icmp eq i8 %33, 0
  br i1 %guard.uninitialized71, label %init.check72, label %init.end77, !prof !110

init.check72:                                     ; preds = %init.end70
  %34 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE3lcp) #39
  %tobool73.not = icmp eq i32 %34, 0
  br i1 %tobool73.not, label %init.end77, label %init74

init74:                                           ; preds = %init.check72
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE3lcp, i32 noundef 4)
          to label %invoke.cont76 unwind label %lpad75

invoke.cont76:                                    ; preds = %init74
  %35 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE3lcp, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE3lcp) #39
  br label %init.end77

init.end77:                                       ; preds = %invoke.cont76, %init.check72, %init.end70
  %36 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4zpos acquire, align 8
  %guard.uninitialized78 = icmp eq i8 %36, 0
  br i1 %guard.uninitialized78, label %init.check79, label %init.end84, !prof !110

init.check79:                                     ; preds = %init.end77
  %37 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4zpos) #39
  %tobool80.not = icmp eq i32 %37, 0
  br i1 %tobool80.not, label %init.end84, label %init81

init81:                                           ; preds = %init.check79
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4zpos, i32 noundef 64)
          to label %invoke.cont83 unwind label %lpad82

invoke.cont83:                                    ; preds = %init81
  %38 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4zpos, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4zpos) #39
  br label %init.end84

init.end84:                                       ; preds = %invoke.cont83, %init.check79, %init.end77
  %39 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4qtab acquire, align 8
  %guard.uninitialized85 = icmp eq i8 %39, 0
  br i1 %guard.uninitialized85, label %init.check86, label %init.end91, !prof !110

init.check86:                                     ; preds = %init.end84
  %40 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4qtab) #39
  %tobool87.not = icmp eq i32 %40, 0
  br i1 %tobool87.not, label %init.end91, label %init88

init88:                                           ; preds = %init.check86
  invoke void @_ZN5ArrayIhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4qtab, i32 noundef 256)
          to label %invoke.cont90 unwind label %lpad89

invoke.cont90:                                    ; preds = %init88
  %41 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIhLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4qtab, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4qtab) #39
  br label %init.end91

init.end91:                                       ; preds = %invoke.cont90, %init.check86, %init.end84
  %42 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4qmap acquire, align 8
  %guard.uninitialized92 = icmp eq i8 %42, 0
  br i1 %guard.uninitialized92, label %init.check93, label %init.end98, !prof !110

init.check93:                                     ; preds = %init.end91
  %43 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4qmap) #39
  %tobool94.not = icmp eq i32 %43, 0
  br i1 %tobool94.not, label %init.end98, label %init95

init95:                                           ; preds = %init.check93
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4qmap, i32 noundef 10)
          to label %invoke.cont97 unwind label %lpad96

invoke.cont97:                                    ; preds = %init95
  %44 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4qmap, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4qmap) #39
  br label %init.end98

init.end98:                                       ; preds = %invoke.cont97, %init.check93, %init.end91
  %45 = load i32, ptr @bpos, align 4, !tbaa !25
  %tobool99.not = icmp eq i32 %45, 0
  %46 = load i32, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4
  br i1 %tobool99.not, label %if.end103, label %if.end

lpad:                                             ; preds = %init
  %47 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad5:                                            ; preds = %init4
  %48 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad12:                                           ; preds = %init11
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad19:                                           ; preds = %init18
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad26:                                           ; preds = %init25
  %51 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad33:                                           ; preds = %init32
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad40:                                           ; preds = %init39
  %53 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad47:                                           ; preds = %init46
  %54 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad54:                                           ; preds = %init53
  %55 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad61:                                           ; preds = %init60
  %56 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad68:                                           ; preds = %init67
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad75:                                           ; preds = %init74
  %58 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad82:                                           ; preds = %init81
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad89:                                           ; preds = %init88
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad96:                                           ; preds = %init95
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

if.end:                                           ; preds = %init.end98
  %tobool101.not = icmp eq i32 %46, 0
  br i1 %tobool101.not, label %if.then102, label %if.end108.thread

if.then102:                                       ; preds = %if.end
  %62 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end103:                                        ; preds = %init.end98
  %cmp = icmp sgt i32 %46, 1
  %conv = zext i1 %cmp to i32
  store i32 %conv, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  %tobool1013184.not = icmp eq i32 %46, 0
  %63 = load i32, ptr @_ZZ9jpegModelR5MixerE3app, align 4
  %cmp106 = icmp sgt i32 %63, 0
  br i1 %cmp106, label %if.then107, label %if.end108

if.then107:                                       ; preds = %if.end103
  %dec = add nsw i32 %63, -1
  store i32 %dec, ptr @_ZZ9jpegModelR5MixerE3app, align 4, !tbaa !25
  br label %if.end108

if.end108:                                        ; preds = %if.then107, %if.end103
  %64 = phi i32 [ %dec, %if.then107 ], [ %63, %if.end103 ]
  %cmp109 = icmp sgt i32 %64, 0
  br i1 %cmp109, label %if.then110, label %if.end111

if.end108.thread:                                 ; preds = %if.end
  %65 = load i32, ptr @_ZZ9jpegModelR5MixerE3app, align 4
  %cmp1093462 = icmp sgt i32 %65, 0
  br i1 %cmp1093462, label %if.then110, label %if.end111.if.end273_crit_edge

if.then110:                                       ; preds = %if.end108.thread, %if.end108
  %66 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end111:                                        ; preds = %if.end108
  br i1 %tobool99.not, label %if.then113, label %if.end111.if.end273_crit_edge

if.end111.if.end273_crit_edge:                    ; preds = %if.end108.thread, %if.end111
  %.pre3435 = load i32, ptr @_ZZ9jpegModelR5MixerE4data, align 4, !tbaa !25
  br label %if.end273

if.then113:                                       ; preds = %if.end111
  br i1 %tobool1013184.not, label %land.lhs.true115, label %if.end134

land.lhs.true115:                                 ; preds = %if.then113
  %67 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i = add nsw i32 %67, -4
  %68 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i = add nsw i32 %68, -1
  %and.i = and i32 %sub3.i, %sub.i
  %69 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i
  %70 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %cmp116 = icmp eq i8 %70, -1
  br i1 %cmp116, label %land.lhs.true117, label %if.end134

land.lhs.true117:                                 ; preds = %land.lhs.true115
  %sub.i2142 = add nsw i32 %67, -3
  %and.i2144 = and i32 %sub3.i, %sub.i2142
  %idxprom.i.i2145 = sext i32 %and.i2144 to i64
  %arrayidx.i.i2146 = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i2145
  %71 = load i8, ptr %arrayidx.i.i2146, align 1, !tbaa !9
  %cmp119 = icmp eq i8 %71, -40
  br i1 %cmp119, label %land.lhs.true120, label %if.end134

land.lhs.true120:                                 ; preds = %land.lhs.true117
  %sub.i2148 = add nsw i32 %67, -2
  %and.i2150 = and i32 %sub3.i, %sub.i2148
  %idxprom.i.i2151 = sext i32 %and.i2150 to i64
  %arrayidx.i.i2152 = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i2151
  %72 = load i8, ptr %arrayidx.i.i2152, align 1, !tbaa !9
  %cmp122 = icmp eq i8 %72, -1
  br i1 %cmp122, label %land.lhs.true123, label %if.end134

land.lhs.true123:                                 ; preds = %land.lhs.true120
  %sub.i2154 = add nsw i32 %67, -1
  %and.i2156 = and i32 %sub3.i, %sub.i2154
  %idxprom.i.i2157 = sext i32 %and.i2156 to i64
  %arrayidx.i.i2158 = getelementptr inbounds i8, ptr %69, i64 %idxprom.i.i2157
  %73 = load i8, ptr %arrayidx.i.i2158, align 1, !tbaa !9
  %.mask = and i8 %73, -16
  %cmp125 = icmp eq i8 %.mask, -32
  br i1 %cmp125, label %if.end134.thread, label %if.end134

if.end134:                                        ; preds = %land.lhs.true123, %land.lhs.true120, %land.lhs.true117, %land.lhs.true115, %if.then113
  %tobool135 = icmp ne i32 %46, 0
  %74 = load i32, ptr @_ZZ9jpegModelR5MixerE4data, align 4
  %tobool137 = icmp ne i32 %74, 0
  %or.cond1731 = select i1 %tobool135, i1 %tobool137, i1 false
  br i1 %or.cond1731, label %land.lhs.true138, label %if.end152

if.end134.thread:                                 ; preds = %land.lhs.true123
  store i32 1, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4data, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6htsize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE3sof, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE3sos, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE3app, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  store i32 -1, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  %75 = load ptr, ptr getelementptr inbounds (%class.Array.7, ptr @_ZZ9jpegModelR5MixerE3huf, i64 0, i32 3), align 8, !tbaa !124
  %76 = load i32, ptr @_ZZ9jpegModelR5MixerE3huf, align 8, !tbaa !126
  %conv129 = sext i32 %76 to i64
  %mul = mul nsw i64 %conv129, 12
  tail call void @llvm.memset.p0.i64(ptr align 4 %75, i8 0, i64 %mul, i1 false)
  %77 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4pred, i64 0, i32 3), align 8, !tbaa !61
  %78 = load i32, ptr @_ZZ9jpegModelR5MixerE4pred, align 8, !tbaa !51
  %conv132 = sext i32 %78 to i64
  %mul133 = shl nsw i64 %conv132, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %77, i8 0, i64 %mul133, i1 false)
  %79 = load i32, ptr @_ZZ9jpegModelR5MixerE4data, align 4
  %tobool1373469.not = icmp eq i32 %79, 0
  br i1 %tobool1373469.not, label %if.end155, label %land.lhs.true138

land.lhs.true138:                                 ; preds = %if.end134.thread, %if.end134
  %80 = phi i32 [ %79, %if.end134.thread ], [ %74, %if.end134 ]
  %81 = phi i32 [ 0, %if.end134.thread ], [ %64, %if.end134 ]
  %82 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i2160 = add nsw i32 %82, -2
  %83 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i2161 = add nsw i32 %83, -1
  %and.i2162 = and i32 %sub3.i2161, %sub.i2160
  %84 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i2163 = sext i32 %and.i2162 to i64
  %arrayidx.i.i2164 = getelementptr inbounds i8, ptr %84, i64 %idxprom.i.i2163
  %85 = load i8, ptr %arrayidx.i.i2164, align 1, !tbaa !9
  %cmp140 = icmp eq i8 %85, -1
  br i1 %cmp140, label %land.lhs.true141, label %if.end155

land.lhs.true141:                                 ; preds = %land.lhs.true138
  %sub.i2166 = add nsw i32 %82, -1
  %and.i2168 = and i32 %sub3.i2161, %sub.i2166
  %idxprom.i.i2169 = sext i32 %and.i2168 to i64
  %arrayidx.i.i2170 = getelementptr inbounds i8, ptr %84, i64 %idxprom.i.i2169
  %86 = load i8, ptr %arrayidx.i.i2170, align 1, !tbaa !9
  %tobool143.not = icmp eq i8 %86, 0
  %87 = and i8 %86, -8
  %cmp146.not = icmp eq i8 %87, -48
  %or.cond3169 = or i1 %tobool143.not, %cmp146.not
  br i1 %or.cond3169, label %if.end155, label %if.then147

if.then147:                                       ; preds = %land.lhs.true141
  %cmp149 = icmp eq i8 %86, -39
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  br i1 %cmp149, label %if.then154, label %if.then150

if.then150:                                       ; preds = %if.then147
  %88 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end152:                                        ; preds = %if.end134
  %tobool153.not = icmp eq i32 %46, 0
  br i1 %tobool153.not, label %if.then154, label %if.end155

if.then154:                                       ; preds = %if.then147, %if.end152
  %89 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end155:                                        ; preds = %land.lhs.true138, %land.lhs.true141, %if.end134.thread, %if.end152
  %90 = phi i32 [ %74, %if.end152 ], [ 0, %if.end134.thread ], [ %80, %land.lhs.true141 ], [ %80, %land.lhs.true138 ]
  %91 = phi i32 [ %64, %if.end152 ], [ 0, %if.end134.thread ], [ %81, %land.lhs.true141 ], [ %81, %land.lhs.true138 ]
  %92 = or i32 %90, %91
  %or.cond1732.not = icmp eq i32 %92, 0
  %93 = load i32, ptr @pos, align 4, !tbaa !25
  br i1 %or.cond1732.not, label %land.lhs.true159, label %if.end155.if.end173_crit_edge

if.end155.if.end173_crit_edge:                    ; preds = %if.end155
  %.pre3428 = load i32, ptr @buf, align 8, !tbaa !20
  %.pre3429 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %.pre3447 = add nsw i32 %.pre3428, -1
  br label %if.end173

land.lhs.true159:                                 ; preds = %if.end155
  %sub.i2184 = add nsw i32 %93, -4
  %94 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i2185 = add nsw i32 %94, -1
  %and.i2186 = and i32 %sub3.i2185, %sub.i2184
  %95 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i2187 = sext i32 %and.i2186 to i64
  %arrayidx.i.i2188 = getelementptr inbounds i8, ptr %95, i64 %idxprom.i.i2187
  %96 = load i8, ptr %arrayidx.i.i2188, align 1, !tbaa !9
  %cmp161 = icmp eq i8 %96, -1
  br i1 %cmp161, label %land.lhs.true162, label %if.end173

land.lhs.true162:                                 ; preds = %land.lhs.true159
  %sub.i2190 = add nsw i32 %93, -3
  %and.i2192 = and i32 %sub3.i2185, %sub.i2190
  %idxprom.i.i2193 = sext i32 %and.i2192 to i64
  %arrayidx.i.i2194 = getelementptr inbounds i8, ptr %95, i64 %idxprom.i.i2193
  %97 = load i8, ptr %arrayidx.i.i2194, align 1, !tbaa !9
  %98 = and i8 %97, -16
  %cmp165 = icmp eq i8 %98, -32
  %cmp167 = icmp eq i8 %97, -2
  %or.cond3170 = or i1 %cmp167, %cmp165
  br i1 %or.cond3170, label %if.then168, label %if.end173

if.then168:                                       ; preds = %land.lhs.true162
  %sub.i2202 = add nsw i32 %93, -2
  %and.i2204 = and i32 %sub3.i2185, %sub.i2202
  %idxprom.i.i2205 = sext i32 %and.i2204 to i64
  %arrayidx.i.i2206 = getelementptr inbounds i8, ptr %95, i64 %idxprom.i.i2205
  %99 = load i8, ptr %arrayidx.i.i2206, align 1, !tbaa !9
  %conv.i2207 = zext i8 %99 to i32
  %mul170 = shl nuw nsw i32 %conv.i2207, 8
  %sub.i2208 = add nsw i32 %93, -1
  %and.i2210 = and i32 %sub3.i2185, %sub.i2208
  %idxprom.i.i2211 = sext i32 %and.i2210 to i64
  %arrayidx.i.i2212 = getelementptr inbounds i8, ptr %95, i64 %idxprom.i.i2211
  %100 = load i8, ptr %arrayidx.i.i2212, align 1, !tbaa !9
  %conv.i2213 = zext i8 %100 to i32
  %add = or i32 %mul170, %conv.i2213
  %add172 = add nuw nsw i32 %add, 2
  store i32 %add172, ptr @_ZZ9jpegModelR5MixerE3app, align 4, !tbaa !25
  br label %if.end173

if.end173:                                        ; preds = %if.end155.if.end173_crit_edge, %land.lhs.true162, %if.then168, %land.lhs.true159
  %sub3.i2215.pre-phi = phi i32 [ %.pre3447, %if.end155.if.end173_crit_edge ], [ %sub3.i2185, %land.lhs.true162 ], [ %sub3.i2185, %if.then168 ], [ %sub3.i2185, %land.lhs.true159 ]
  %101 = phi ptr [ %.pre3429, %if.end155.if.end173_crit_edge ], [ %95, %land.lhs.true162 ], [ %95, %if.then168 ], [ %95, %land.lhs.true159 ]
  %sub.i2214 = add nsw i32 %93, -5
  %and.i2216 = and i32 %sub3.i2215.pre-phi, %sub.i2214
  %idxprom.i.i2217 = sext i32 %and.i2216 to i64
  %arrayidx.i.i2218 = getelementptr inbounds i8, ptr %101, i64 %idxprom.i.i2217
  %102 = load i8, ptr %arrayidx.i.i2218, align 1, !tbaa !9
  %cmp175 = icmp eq i8 %102, -1
  %sub.i2220 = add nsw i32 %93, -4
  %and.i2222 = and i32 %sub3.i2215.pre-phi, %sub.i2220
  %idxprom.i.i2223 = sext i32 %and.i2222 to i64
  br i1 %cmp175, label %land.lhs.true176, label %if.end198

land.lhs.true176:                                 ; preds = %if.end173
  %arrayidx.i.i2224 = getelementptr inbounds i8, ptr %101, i64 %idxprom.i.i2223
  %103 = load i8, ptr %arrayidx.i.i2224, align 1, !tbaa !9
  %cmp178 = icmp eq i8 %103, -38
  br i1 %cmp178, label %if.then179, label %if.end198

if.then179:                                       ; preds = %land.lhs.true176
  %sub.i2226 = add i32 %93, -3
  %and.i2228 = and i32 %sub3.i2215.pre-phi, %sub.i2226
  %idxprom.i.i2229 = sext i32 %and.i2228 to i64
  %arrayidx.i.i2230 = getelementptr inbounds i8, ptr %101, i64 %idxprom.i.i2229
  %104 = load i8, ptr %arrayidx.i.i2230, align 1, !tbaa !9
  %conv.i2231 = zext i8 %104 to i32
  %mul181 = shl nuw nsw i32 %conv.i2231, 8
  %sub.i2232 = add nsw i32 %93, -2
  %and.i2234 = and i32 %sub3.i2215.pre-phi, %sub.i2232
  %idxprom.i.i2235 = sext i32 %and.i2234 to i64
  %arrayidx.i.i2236 = getelementptr inbounds i8, ptr %101, i64 %idxprom.i.i2235
  %105 = load i8, ptr %arrayidx.i.i2236, align 1, !tbaa !9
  %conv.i2237 = zext i8 %105 to i32
  %add183 = or i32 %mul181, %conv.i2237
  %sub.i2238 = add nsw i32 %93, -1
  %and.i2240 = and i32 %sub3.i2215.pre-phi, %sub.i2238
  %idxprom.i.i2241 = sext i32 %and.i2240 to i64
  %arrayidx.i.i2242 = getelementptr inbounds i8, ptr %101, i64 %idxprom.i.i2241
  %106 = load i8, ptr %arrayidx.i.i2242, align 1, !tbaa !9
  %conv.i2243 = zext i8 %106 to i32
  %mul185 = shl nuw nsw i32 %conv.i2243, 1
  %add186 = add nuw nsw i32 %mul185, 6
  %cmp187 = icmp eq i32 %add183, %add186
  %107 = add i8 %106, -1
  %108 = icmp ult i8 %107, 4
  %or.cond3172 = and i1 %108, %cmp187
  br i1 %or.cond3172, label %if.then194, label %if.end198

if.then194:                                       ; preds = %if.then179
  store i32 %sub.i2214, ptr @_ZZ9jpegModelR5MixerE3sos, align 4, !tbaa !25
  %add196 = add i32 %sub.i2226, %add183
  store i32 %add196, ptr @_ZZ9jpegModelR5MixerE4data, align 4, !tbaa !25
  store i32 2, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  br label %if.end198

if.end198:                                        ; preds = %if.end173, %if.then179, %if.then194, %land.lhs.true176
  %109 = phi i32 [ %90, %if.then179 ], [ %add196, %if.then194 ], [ %90, %land.lhs.true176 ], [ %90, %if.end173 ]
  %arrayidx.i.i2260 = getelementptr inbounds i8, ptr %101, i64 %idxprom.i.i2223
  %110 = load i8, ptr %arrayidx.i.i2260, align 1, !tbaa !9
  %cmp200 = icmp eq i8 %110, -1
  br i1 %cmp200, label %land.lhs.true201, label %if.end209

land.lhs.true201:                                 ; preds = %if.end198
  %sub.i2262 = add nsw i32 %93, -3
  %and.i2264 = and i32 %sub3.i2215.pre-phi, %sub.i2262
  %idxprom.i.i2265 = sext i32 %and.i2264 to i64
  %arrayidx.i.i2266 = getelementptr inbounds i8, ptr %101, i64 %idxprom.i.i2265
  %111 = load i8, ptr %arrayidx.i.i2266, align 1, !tbaa !9
  %cmp203 = icmp eq i8 %111, -60
  %112 = load i32, ptr @_ZZ9jpegModelR5MixerE6htsize, align 4
  %cmp205 = icmp slt i32 %112, 8
  %or.cond1733 = select i1 %cmp203, i1 %cmp205, i1 false
  br i1 %or.cond1733, label %if.then206, label %if.end209

if.then206:                                       ; preds = %land.lhs.true201
  %inc = add nuw nsw i32 %112, 1
  store i32 %inc, ptr @_ZZ9jpegModelR5MixerE6htsize, align 4, !tbaa !25
  %113 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ht, i64 0, i32 3), align 8, !tbaa !61
  %idxprom.i = sext i32 %112 to i64
  %arrayidx.i = getelementptr inbounds i32, ptr %113, i64 %idxprom.i
  store i32 %sub.i2220, ptr %arrayidx.i, align 4, !tbaa !25
  %.pre3430 = load i32, ptr @pos, align 4, !tbaa !25
  %.pre3431 = load i32, ptr @buf, align 8, !tbaa !20
  %.pre3448 = add nsw i32 %.pre3430, -4
  %.pre3449 = add nsw i32 %.pre3431, -1
  %.pre3450 = and i32 %.pre3449, %.pre3448
  %.pre3451 = sext i32 %.pre3450 to i64
  br label %if.end209

if.end209:                                        ; preds = %if.then206, %land.lhs.true201, %if.end198
  %idxprom.i.i2271.pre-phi = phi i64 [ %.pre3451, %if.then206 ], [ %idxprom.i.i2223, %land.lhs.true201 ], [ %idxprom.i.i2223, %if.end198 ]
  %sub3.i2269.pre-phi = phi i32 [ %.pre3449, %if.then206 ], [ %sub3.i2215.pre-phi, %land.lhs.true201 ], [ %sub3.i2215.pre-phi, %if.end198 ]
  %sub.i2268.pre-phi = phi i32 [ %.pre3448, %if.then206 ], [ %sub.i2220, %land.lhs.true201 ], [ %sub.i2220, %if.end198 ]
  %114 = phi i32 [ %.pre3430, %if.then206 ], [ %93, %land.lhs.true201 ], [ %93, %if.end198 ]
  %arrayidx.i.i2272 = getelementptr inbounds i8, ptr %101, i64 %idxprom.i.i2271.pre-phi
  %115 = load i8, ptr %arrayidx.i.i2272, align 1, !tbaa !9
  %cmp211 = icmp eq i8 %115, -1
  br i1 %cmp211, label %land.lhs.true212, label %if.else

land.lhs.true212:                                 ; preds = %if.end209
  %sub.i2274 = add nsw i32 %114, -3
  %and.i2276 = and i32 %sub3.i2269.pre-phi, %sub.i2274
  %idxprom.i.i2277 = sext i32 %and.i2276 to i64
  %arrayidx.i.i2278 = getelementptr inbounds i8, ptr %101, i64 %idxprom.i.i2277
  %116 = load i8, ptr %arrayidx.i.i2278, align 1, !tbaa !9
  switch i8 %116, label %if.else [
    i8 -64, label %land.lhs.true220.thread
    i8 -37, label %if.then223
  ]

land.lhs.true220.thread:                          ; preds = %land.lhs.true212
  store i32 %sub.i2268.pre-phi, ptr @_ZZ9jpegModelR5MixerE3sof, align 4, !tbaa !25
  br label %if.else

if.then223:                                       ; preds = %land.lhs.true212
  %sub.i2292 = add nsw i32 %114, -2
  %and.i2294 = and i32 %sub3.i2269.pre-phi, %sub.i2292
  %idxprom.i.i2295 = sext i32 %and.i2294 to i64
  %arrayidx.i.i2296 = getelementptr inbounds i8, ptr %101, i64 %idxprom.i.i2295
  %117 = load i8, ptr %arrayidx.i.i2296, align 1, !tbaa !9
  %conv.i2297 = zext i8 %117 to i32
  %mul225 = shl nuw nsw i32 %conv.i2297, 8
  %sub.i2298 = add i32 %114, -1
  %and.i2300 = and i32 %sub3.i2269.pre-phi, %sub.i2298
  %idxprom.i.i2301 = sext i32 %and.i2300 to i64
  %arrayidx.i.i2302 = getelementptr inbounds i8, ptr %101, i64 %idxprom.i.i2301
  %118 = load i8, ptr %arrayidx.i.i2302, align 1, !tbaa !9
  %conv.i2303 = zext i8 %118 to i32
  %add228 = add i32 %sub.i2298, %mul225
  %sub229 = add i32 %add228, %conv.i2303
  store i32 %sub229, ptr @_ZZ9jpegModelR5MixerE7dqt_end, align 4, !tbaa !25
  br label %if.end260.sink.split

if.else:                                          ; preds = %land.lhs.true212, %land.lhs.true220.thread, %if.end209
  %119 = load i32, ptr @_ZZ9jpegModelR5MixerE9dqt_state, align 4, !tbaa !25
  %cmp230 = icmp sgt i32 %119, -1
  br i1 %cmp230, label %if.then231, label %if.end260

if.then231:                                       ; preds = %if.else
  %120 = load i32, ptr @_ZZ9jpegModelR5MixerE7dqt_end, align 4, !tbaa !25
  %cmp232.not = icmp slt i32 %114, %120
  br i1 %cmp232.not, label %if.else234, label %if.end260.sink.split

if.else234:                                       ; preds = %if.then231
  %rem = urem i32 %119, 65
  %cmp235 = icmp eq i32 %rem, 0
  %sub.i2304 = add nsw i32 %114, -1
  %and.i2306 = and i32 %sub3.i2269.pre-phi, %sub.i2304
  %idxprom.i.i2307 = sext i32 %and.i2306 to i64
  %arrayidx.i.i2308 = getelementptr inbounds i8, ptr %101, i64 %idxprom.i.i2307
  %121 = load i8, ptr %arrayidx.i.i2308, align 1, !tbaa !9
  br i1 %cmp235, label %if.then236, label %if.else238

if.then236:                                       ; preds = %if.else234
  %conv.i2309 = zext i8 %121 to i32
  store i32 %conv.i2309, ptr @_ZZ9jpegModelR5MixerE4qnum, align 4, !tbaa !25
  br label %if.end256

if.else238:                                       ; preds = %if.else234
  %cmp240.not = icmp eq i8 %121, 0
  br i1 %cmp240.not, label %if.then241, label %if.end242

if.then241:                                       ; preds = %if.else238
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %122 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end242:                                        ; preds = %if.else238
  %123 = load i32, ptr @_ZZ9jpegModelR5MixerE4qnum, align 4
  %or.cond1734 = icmp ult i32 %123, 4
  br i1 %or.cond1734, label %if.end247, label %if.then246

if.then246:                                       ; preds = %if.end242
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %124 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end247:                                        ; preds = %if.end242
  %sub249 = add i8 %121, -1
  %mul251 = shl nuw nsw i32 %123, 6
  %sub253 = add nsw i32 %rem, -1
  %add254 = add nuw nsw i32 %sub253, %mul251
  %125 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4qtab, i64 0, i32 3), align 8, !tbaa !22
  %idxprom.i2322 = zext i32 %add254 to i64
  %arrayidx.i2323 = getelementptr inbounds i8, ptr %125, i64 %idxprom.i2322
  store i8 %sub249, ptr %arrayidx.i2323, align 1, !tbaa !9
  %.pre3432.pre = load i32, ptr @pos, align 4, !tbaa !25
  %.pre3433.pre = load i32, ptr @buf, align 8, !tbaa !20
  %.pre3434.pre = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %.pre3453 = add nsw i32 %.pre3433.pre, -1
  br label %if.end256

if.end256:                                        ; preds = %if.end247, %if.then236
  %.pre3452.pre-phi = phi i32 [ %.pre3453, %if.end247 ], [ %sub3.i2269.pre-phi, %if.then236 ]
  %.pre3434 = phi ptr [ %.pre3434.pre, %if.end247 ], [ %101, %if.then236 ]
  %.pre3432 = phi i32 [ %.pre3432.pre, %if.end247 ], [ %114, %if.then236 ]
  %inc257 = add nuw nsw i32 %119, 1
  br label %if.end260.sink.split

if.end260.sink.split:                             ; preds = %if.then231, %if.then223, %if.end256
  %inc257.sink = phi i32 [ %inc257, %if.end256 ], [ 0, %if.then223 ], [ -1, %if.then231 ]
  %sub3.i2325.pre-phi.ph = phi i32 [ %.pre3452.pre-phi, %if.end256 ], [ %sub3.i2269.pre-phi, %if.then223 ], [ %sub3.i2269.pre-phi, %if.then231 ]
  %.ph = phi ptr [ %.pre3434, %if.end256 ], [ %101, %if.then223 ], [ %101, %if.then231 ]
  %.ph3512 = phi i32 [ %.pre3432, %if.end256 ], [ %114, %if.then223 ], [ %114, %if.then231 ]
  store i32 %inc257.sink, ptr @_ZZ9jpegModelR5MixerE9dqt_state, align 4, !tbaa !25
  br label %if.end260

if.end260:                                        ; preds = %if.end260.sink.split, %if.else
  %sub3.i2325.pre-phi = phi i32 [ %sub3.i2269.pre-phi, %if.else ], [ %sub3.i2325.pre-phi.ph, %if.end260.sink.split ]
  %126 = phi ptr [ %101, %if.else ], [ %.ph, %if.end260.sink.split ]
  %127 = phi i32 [ %114, %if.else ], [ %.ph3512, %if.end260.sink.split ]
  %sub.i2324 = add nsw i32 %127, -2
  %and.i2326 = and i32 %sub3.i2325.pre-phi, %sub.i2324
  %idxprom.i.i2327 = sext i32 %and.i2326 to i64
  %arrayidx.i.i2328 = getelementptr inbounds i8, ptr %126, i64 %idxprom.i.i2327
  %128 = load i8, ptr %arrayidx.i.i2328, align 1, !tbaa !9
  %cmp262 = icmp eq i8 %128, -1
  br i1 %cmp262, label %land.lhs.true263, label %if.end273

land.lhs.true263:                                 ; preds = %if.end260
  %sub.i2330 = add nsw i32 %127, -1
  %and.i2332 = and i32 %sub3.i2325.pre-phi, %sub.i2330
  %idxprom.i.i2333 = sext i32 %and.i2332 to i64
  %arrayidx.i.i2334 = getelementptr inbounds i8, ptr %126, i64 %idxprom.i.i2333
  %129 = load i8, ptr %arrayidx.i.i2334, align 1, !tbaa !9
  %130 = and i8 %129, -8
  %cmp266 = icmp eq i8 %130, -48
  br i1 %cmp266, label %if.then267, label %if.end273

if.then267:                                       ; preds = %land.lhs.true263
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  store i32 -1, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  %131 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4pred, i64 0, i32 3), align 8, !tbaa !61
  %132 = load i32, ptr @_ZZ9jpegModelR5MixerE4pred, align 8, !tbaa !51
  %conv270 = sext i32 %132 to i64
  %mul271 = shl nsw i64 %conv270, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %131, i8 0, i64 %mul271, i1 false)
  br label %if.end273

if.end273:                                        ; preds = %if.end111.if.end273_crit_edge, %if.end260, %land.lhs.true263, %if.then267
  %133 = phi i32 [ %.pre3435, %if.end111.if.end273_crit_edge ], [ %109, %if.end260 ], [ %109, %land.lhs.true263 ], [ %109, %if.then267 ]
  %134 = load i32, ptr @pos, align 4, !tbaa !25
  %cmp274 = icmp eq i32 %134, %133
  %135 = load i32, ptr @bpos, align 4
  %cmp276 = icmp eq i32 %135, 1
  %or.cond1735 = select i1 %cmp274, i1 %cmp276, i1 false
  br i1 %or.cond1735, label %if.then277, label %if.end583thread-pre-split

if.then277:                                       ; preds = %if.end273
  %136 = load i32, ptr @_ZZ9jpegModelR5MixerE6htsize, align 4, !tbaa !25
  %cmp278 = icmp sgt i32 %136, 0
  br i1 %cmp278, label %for.body.preheader, label %if.then279

for.body.preheader:                               ; preds = %if.then277
  %wide.trip.count = zext i32 %136 to i64
  %.pre3436 = load i32, ptr @buf, align 8, !tbaa !20
  %.pre3437 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  br label %for.body

if.then279:                                       ; preds = %if.then277
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %137 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

for.cond:                                         ; preds = %while.end
  %indvars.iv.next3356 = add nuw nsw i64 %indvars.iv3355, 1
  %exitcond3358.not = icmp eq i64 %indvars.iv.next3356, %wide.trip.count
  br i1 %exitcond3358.not, label %for.end386, label %for.body, !llvm.loop !127

for.body:                                         ; preds = %for.body.preheader, %for.cond
  %138 = phi ptr [ %.pre3437, %for.body.preheader ], [ %.lcssa3530, %for.cond ]
  %139 = phi i32 [ %.pre3436, %for.body.preheader ], [ %.lcssa3527, %for.cond ]
  %140 = phi ptr [ %.pre3437, %for.body.preheader ], [ %173, %for.cond ]
  %141 = phi i32 [ %.pre3436, %for.body.preheader ], [ %174, %for.cond ]
  %indvars.iv3355 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next3356, %for.cond ]
  %142 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ht, i64 0, i32 3), align 8, !tbaa !61
  %arrayidx.i2337 = getelementptr inbounds i32, ptr %142, i64 %indvars.iv3355
  %143 = load i32, ptr %arrayidx.i2337, align 4, !tbaa !25
  %add283 = add nsw i32 %143, 4
  %sub284 = add i32 %143, 2
  %sub.i2338 = add nsw i32 %141, -1
  %and.i2339 = and i32 %sub.i2338, %sub284
  %idxprom.i.i2340 = sext i32 %and.i2339 to i64
  %arrayidx.i.i2341 = getelementptr inbounds i8, ptr %140, i64 %idxprom.i.i2340
  %144 = load i8, ptr %arrayidx.i.i2341, align 1, !tbaa !9
  %conv286 = zext i8 %144 to i32
  %mul287 = shl nuw nsw i32 %conv286, 8
  %sub289 = add nsw i32 %143, 3
  %and.i2343 = and i32 %sub.i2338, %sub289
  %idxprom.i.i2344 = sext i32 %and.i2343 to i64
  %arrayidx.i.i2345 = getelementptr inbounds i8, ptr %140, i64 %idxprom.i.i2344
  %145 = load i8, ptr %arrayidx.i.i2345, align 1, !tbaa !9
  %conv291 = zext i8 %145 to i32
  %add292 = add i32 %sub284, %mul287
  %sub293 = add i32 %add292, %conv291
  %cmp2943533 = icmp slt i32 %add283, %sub293
  %146 = load i32, ptr @pos, align 4
  %cmp2963534 = icmp slt i32 %sub293, %146
  %or.cond31733535 = select i1 %cmp2943533, i1 %cmp2963534, i1 false
  %add2983536 = add nsw i32 %143, 2104
  %cmp2993537 = icmp slt i32 %sub293, %add2983536
  %or.cond31743538 = select i1 %or.cond31733535, i1 %cmp2993537, i1 false
  br i1 %or.cond31743538, label %land.rhs, label %while.end

while.cond:                                       ; preds = %for.end364
  %cmp294 = icmp slt i32 %add355, %sub293
  %147 = load i32, ptr @pos, align 4
  %cmp296 = icmp slt i32 %sub293, %147
  %or.cond3173 = select i1 %cmp294, i1 %cmp296, i1 false
  %add298 = add nsw i32 %add355, 2100
  %cmp299 = icmp slt i32 %sub293, %add298
  %or.cond3174 = select i1 %or.cond3173, i1 %cmp299, i1 false
  br i1 %or.cond3174, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %for.body, %while.cond
  %p.03540 = phi i32 [ %add355, %while.cond ], [ %add283, %for.body ]
  %count.03539 = phi i32 [ %inc300, %while.cond ], [ 0, %for.body ]
  %148 = phi i32 [ %155, %while.cond ], [ %141, %for.body ]
  %149 = phi ptr [ %156, %while.cond ], [ %140, %for.body ]
  %150 = phi i32 [ %155, %while.cond ], [ %139, %for.body ]
  %151 = phi ptr [ %156, %while.cond ], [ %138, %for.body ]
  %inc300 = add nuw nsw i32 %count.03539, 1
  %exitcond3354.not = icmp eq i32 %count.03539, 9
  br i1 %exitcond3354.not, label %while.end, label %while.body

while.body:                                       ; preds = %land.rhs
  %sub.i2346 = add nsw i32 %150, -1
  %and.i2347 = and i32 %sub.i2346, %p.03540
  %idxprom.i.i2348 = sext i32 %and.i2347 to i64
  %arrayidx.i.i2349 = getelementptr inbounds i8, ptr %151, i64 %idxprom.i.i2348
  %152 = load i8, ptr %arrayidx.i.i2349, align 1, !tbaa !9
  %conv303 = zext i8 %152 to i32
  %and307 = and i32 %conv303, 15
  %cmp308 = icmp ugt i8 %152, 31
  %cmp310 = icmp ugt i32 %and307, 3
  %or.cond1736 = or i1 %cmp308, %cmp310
  br i1 %or.cond1736, label %while.end, label %if.end321

if.end321:                                        ; preds = %while.body
  %shr304 = lshr i32 %conv303, 4
  %mul322 = shl nuw nsw i32 %shr304, 6
  %mul323 = shl nuw nsw i32 %and307, 4
  %add324 = add nuw nsw i32 %mul322, %mul323
  %153 = load ptr, ptr getelementptr inbounds (%class.Array.7, ptr @_ZZ9jpegModelR5MixerE3huf, i64 0, i32 3), align 8, !tbaa !124
  %idxprom.i2354 = zext i32 %add324 to i64
  %add326 = add nsw i32 %p.03540, 17
  %mul327 = shl nuw nsw i32 %shr304, 10
  %mul328 = shl nuw nsw i32 %and307, 8
  %add329 = add nuw nsw i32 %mul327, %mul328
  %154 = zext i32 %add329 to i64
  br label %for.body332

for.cond338.preheader:                            ; preds = %for.body332
  %arrayidx.i2355 = getelementptr inbounds %struct.HUF, ptr %153, i64 %idxprom.i2354
  %155 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i2362 = add nsw i32 %155, -1
  %156 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  br label %for.body340

for.body332:                                      ; preds = %for.body332, %if.end321
  %indvars.iv = phi i64 [ 0, %if.end321 ], [ %indvars.iv.next.1, %for.body332 ]
  %157 = trunc i64 %indvars.iv to i32
  %add333 = add nsw i32 %add326, %157
  %158 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i2356 = add nsw i32 %158, -1
  %and.i2357 = and i32 %sub.i2356, %add333
  %159 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i2358 = sext i32 %and.i2357 to i64
  %arrayidx.i.i2359 = getelementptr inbounds i8, ptr %159, i64 %idxprom.i.i2358
  %160 = load i8, ptr %arrayidx.i.i2359, align 1, !tbaa !9
  %161 = add nuw nsw i64 %indvars.iv, %154
  %162 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4hbuf, i64 0, i32 3), align 8, !tbaa !22
  %arrayidx.i2361 = getelementptr inbounds i8, ptr %162, i64 %161
  store i8 %160, ptr %arrayidx.i2361, align 1, !tbaa !9
  %indvars.iv.next = or i64 %indvars.iv, 1
  %163 = trunc i64 %indvars.iv.next to i32
  %add333.1 = add nsw i32 %add326, %163
  %164 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i2356.1 = add nsw i32 %164, -1
  %and.i2357.1 = and i32 %sub.i2356.1, %add333.1
  %165 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i2358.1 = sext i32 %and.i2357.1 to i64
  %arrayidx.i.i2359.1 = getelementptr inbounds i8, ptr %165, i64 %idxprom.i.i2358.1
  %166 = load i8, ptr %arrayidx.i.i2359.1, align 1, !tbaa !9
  %167 = add nuw nsw i64 %indvars.iv.next, %154
  %168 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4hbuf, i64 0, i32 3), align 8, !tbaa !22
  %arrayidx.i2361.1 = getelementptr inbounds i8, ptr %168, i64 %167
  store i8 %166, ptr %arrayidx.i2361.1, align 1, !tbaa !9
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 256
  br i1 %exitcond.not.1, label %for.cond338.preheader, label %for.body332, !llvm.loop !128

for.body340:                                      ; preds = %for.cond338.preheader, %for.body340
  %indvars.iv3350 = phi i64 [ 0, %for.cond338.preheader ], [ %indvars.iv.next3351, %for.body340 ]
  %val.03262 = phi i32 [ %add326, %for.cond338.preheader ], [ %add355, %for.body340 ]
  %hval.03261 = phi i32 [ %add329, %for.cond338.preheader ], [ %add360, %for.body340 ]
  %code.03259 = phi i32 [ 0, %for.cond338.preheader ], [ %mul361, %for.body340 ]
  %arrayidx = getelementptr inbounds %struct.HUF, ptr %arrayidx.i2355, i64 %indvars.iv3350
  store i32 %code.03259, ptr %arrayidx, align 4, !tbaa !129
  %indvars.iv.next3351 = add nuw nsw i64 %indvars.iv3350, 1
  %169 = trunc i64 %indvars.iv.next3351 to i32
  %add342 = add i32 %p.03540, %169
  %and.i2363 = and i32 %sub.i2362, %add342
  %idxprom.i.i2364 = sext i32 %and.i2363 to i64
  %arrayidx.i.i2365 = getelementptr inbounds i8, ptr %156, i64 %idxprom.i.i2364
  %170 = load i8, ptr %arrayidx.i.i2365, align 1, !tbaa !9
  %conv344 = zext i8 %170 to i32
  %add345 = add nsw i32 %code.03259, %conv344
  %max = getelementptr inbounds %struct.HUF, ptr %arrayidx.i2355, i64 %indvars.iv3350, i32 1
  store i32 %add345, ptr %max, align 4, !tbaa !131
  %val350 = getelementptr inbounds %struct.HUF, ptr %arrayidx.i2355, i64 %indvars.iv3350, i32 2
  store i32 %hval.03261, ptr %val350, align 4, !tbaa !132
  %171 = load i8, ptr %arrayidx.i.i2365, align 1, !tbaa !9
  %conv354 = zext i8 %171 to i32
  %add355 = add nsw i32 %val.03262, %conv354
  %add360 = add nuw nsw i32 %hval.03261, %conv354
  %mul361 = shl nsw i32 %add345, 1
  %exitcond3353.not = icmp eq i64 %indvars.iv.next3351, 16
  br i1 %exitcond3353.not, label %for.end364, label %for.body340, !llvm.loop !133

for.end364:                                       ; preds = %for.body340
  %cmp367 = icmp ult i32 %add360, 2048
  br i1 %cmp367, label %while.cond, label %cleanup374.thread

cleanup374.thread:                                ; preds = %for.end364
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %172 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

while.end:                                        ; preds = %land.rhs, %while.cond, %while.body, %for.body
  %.lcssa3530 = phi ptr [ %138, %for.body ], [ %151, %land.rhs ], [ %156, %while.cond ], [ %151, %while.body ]
  %.lcssa3527 = phi i32 [ %139, %for.body ], [ %150, %land.rhs ], [ %155, %while.cond ], [ %150, %while.body ]
  %p.0.lcssa = phi i32 [ %add283, %for.body ], [ %p.03540, %land.rhs ], [ %add355, %while.cond ], [ %p.03540, %while.body ]
  %173 = phi ptr [ %140, %for.body ], [ %149, %land.rhs ], [ %156, %while.cond ], [ %151, %while.body ]
  %174 = phi i32 [ %141, %for.body ], [ %148, %land.rhs ], [ %155, %while.cond ], [ %150, %while.body ]
  %cmp376 = icmp eq i32 %p.0.lcssa, %sub293
  br i1 %cmp376, label %for.cond, label %if.then377

if.then377:                                       ; preds = %while.end
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %175 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

for.end386:                                       ; preds = %for.cond
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  store i32 -1, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  %176 = load i32, ptr @_ZZ9jpegModelR5MixerE3sof, align 4, !tbaa !25
  %tobool387 = icmp eq i32 %176, 0
  %177 = load i32, ptr @_ZZ9jpegModelR5MixerE3sos, align 4
  %tobool389 = icmp ne i32 %177, 0
  %or.cond1741 = select i1 %tobool387, i1 %tobool389, i1 false
  br i1 %or.cond1741, label %if.then390, label %if.end391

if.then390:                                       ; preds = %for.end386
  %178 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end391:                                        ; preds = %for.end386
  %add392 = add nsw i32 %177, 4
  %sub.i2374 = add nsw i32 %.lcssa3527, -1
  %and.i2375 = and i32 %sub.i2374, %add392
  %idxprom.i.i2376 = sext i32 %and.i2375 to i64
  %arrayidx.i.i2377 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2376
  %179 = load i8, ptr %arrayidx.i.i2377, align 1, !tbaa !9
  %conv394 = zext i8 %179 to i32
  %add395 = add nsw i32 %176, 9
  %and.i2379 = and i32 %sub.i2374, %add395
  %idxprom.i.i2380 = sext i32 %and.i2379 to i64
  %arrayidx.i.i2381 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2380
  %180 = load i8, ptr %arrayidx.i.i2381, align 1, !tbaa !9
  %cmp398 = icmp ult i8 %179, 5
  %cmp400 = icmp ult i8 %180, 5
  %or.cond1742 = select i1 %cmp398, i1 %cmp400, i1 false
  br i1 %or.cond1742, label %if.end402, label %if.then401

if.then401:                                       ; preds = %if.end391
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %181 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end402:                                        ; preds = %if.end391
  store i32 0, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  %cmp4043288.not = icmp eq i8 %179, 0
  br i1 %cmp4043288.not, label %if.then506, label %for.cond407.preheader.lr.ph

for.cond407.preheader.lr.ph:                      ; preds = %if.end402
  %cmp408.not3272.not = icmp eq i8 %180, 0
  %182 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  br i1 %cmp408.not3272.not, label %if.then506, label %for.cond407.preheader.us.preheader

for.cond407.preheader.us.preheader:               ; preds = %for.cond407.preheader.lr.ph
  %add417.us = add nsw i32 %176, 10
  %add424.us = add nsw i32 %176, 11
  %add476.us = add nsw i32 %176, 12
  %cmp408.not.us = icmp ugt i8 %180, 1
  %exitcond3364.not = icmp eq i8 %180, 1
  %add417.us.1 = add nsw i32 %176, 13
  %add424.us.1 = add nsw i32 %176, 14
  %add476.us.1 = add nsw i32 %176, 15
  %cmp408.not.us.1 = icmp ugt i8 %180, 2
  %exitcond3364.not.1 = icmp eq i8 %180, 2
  %add417.us.2 = add nsw i32 %176, 16
  %add424.us.2 = add nsw i32 %176, 17
  %add476.us.2 = add nsw i32 %176, 18
  %cmp408.not.us.2 = icmp ugt i8 %180, 3
  %exitcond3364.not.2 = icmp eq i8 %180, 3
  %add417.us.3 = add nsw i32 %176, 19
  %add424.us.3 = add nsw i32 %176, 20
  %add476.us.3 = add nsw i32 %176, 21
  br label %for.cond407.preheader.us

for.cond407.preheader.us:                         ; preds = %for.cond407.preheader.us.preheader, %for.inc500.us
  %i.13291.us = phi i32 [ %inc501.us, %for.inc500.us ], [ 0, %for.cond407.preheader.us.preheader ]
  %hmax.03290.us = phi i32 [ %hmax.43206.us, %for.inc500.us ], [ 0, %for.cond407.preheader.us.preheader ]
  %_ZZ9jpegModelR5MixerE7mcusize.promoted326932823289.us = phi i32 [ %_ZZ9jpegModelR5MixerE7mcusize.promoted32693277.us, %for.inc500.us ], [ 0, %for.cond407.preheader.us.preheader ]
  %mul410.us = shl nuw nsw i32 %i.13291.us, 1
  %add411.us = add nsw i32 %mul410.us, %177
  %add412.us = add nsw i32 %add411.us, 5
  %add449.us = add nsw i32 %add411.us, 6
  %183 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i2382.us = add nsw i32 %183, -1
  %and.i2383.us = and i32 %sub.i2382.us, %add412.us
  %idxprom.i.i2384.us = sext i32 %and.i2383.us to i64
  %arrayidx.i.i2385.us = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2384.us
  %184 = load i8, ptr %arrayidx.i.i2385.us, align 1, !tbaa !9
  %and.i2387.us = and i32 %sub.i2382.us, %add417.us
  %idxprom.i.i2388.us = sext i32 %and.i2387.us to i64
  %arrayidx.i.i2389.us = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2388.us
  %185 = load i8, ptr %arrayidx.i.i2389.us, align 1, !tbaa !9
  %cmp420.us = icmp eq i8 %184, %185
  br i1 %cmp420.us, label %if.then421.us, label %for.inc495.us

if.then421.us:                                    ; preds = %for.cond407.preheader.us
  %and.i2391.us = and i32 %sub.i2382.us, %add424.us
  %idxprom.i.i2392.us = sext i32 %and.i2391.us to i64
  %arrayidx.i.i2393.us = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2392.us
  %186 = load i8, ptr %arrayidx.i.i2393.us, align 1, !tbaa !9
  %conv426.us = zext i8 %186 to i32
  %shr427.us = lshr i32 %conv426.us, 4
  %spec.select.us = tail call i32 @llvm.smax.i32(i32 %shr427.us, i32 %hmax.03290.us)
  %and432.us = and i32 %conv426.us, 15
  %mul434.us = mul nuw nsw i32 %and432.us, %shr427.us
  %cmp435.not.us = icmp ne i32 %mul434.us, 0
  %add437.us = add nsw i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted326932823289.us, %mul434.us
  %cmp438.us = icmp slt i32 %add437.us, 11
  %or.cond3325 = select i1 %cmp435.not.us, i1 %cmp438.us, i1 false
  br i1 %or.cond3325, label %while.cond441.preheader.us, label %cleanup497.thread3208

while.body443.us:                                 ; preds = %cleanup487.us
  %exitcond3363.not = icmp eq i64 %indvars.iv.next3360, %wide.trip.count3362
  br i1 %exitcond3363.not, label %cleanup497.us, label %if.end446.us, !llvm.loop !134

if.end446.us:                                     ; preds = %if.end446.us.lr.ph, %while.body443.us
  %hv.03268.us3558 = phi i32 [ %mul434.us, %if.end446.us.lr.ph ], [ %dec485.us, %while.body443.us ]
  %_ZZ9jpegModelR5MixerE7mcusize.promoted32693280.us3557 = phi i32 [ %_ZZ9jpegModelR5MixerE7mcusize.promoted326932823289.us, %if.end446.us.lr.ph ], [ %191, %while.body443.us ]
  %indvars.iv33593556 = phi i64 [ %230, %if.end446.us.lr.ph ], [ %indvars.iv.next3360, %while.body443.us ]
  %187 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i2394.us = add nsw i32 %187, -1
  %and.i2395.us = and i32 %sub.i2394.us, %add449.us
  %idxprom.i.i2396.us = sext i32 %and.i2395.us to i64
  %arrayidx.i.i2397.us = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2396.us
  %188 = load i8, ptr %arrayidx.i.i2397.us, align 1, !tbaa !9
  %conv451.us = zext i8 %188 to i32
  %shr452.us = lshr i32 %conv451.us, 4
  %arrayidx455.us = getelementptr inbounds [10 x i32], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 %indvars.iv33593556
  store i32 %shr452.us, ptr %arrayidx455.us, align 4, !tbaa !25
  %and461.us = and i32 %conv451.us, 15
  %arrayidx463.us = getelementptr inbounds [2 x [10 x i32]], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 1, i64 %indvars.iv33593556
  store i32 %and461.us, ptr %arrayidx463.us, align 4, !tbaa !25
  %cmp466.us = icmp ult i8 %188, 64
  %cmp470.us = icmp ult i32 %and461.us, 4
  %or.cond3175.us = and i1 %cmp466.us, %cmp470.us
  br i1 %or.cond3175.us, label %if.end472.us, label %cleanup497.us

if.end472.us:                                     ; preds = %if.end446.us
  %arrayidx.i2403.us = getelementptr inbounds i32, ptr %228, i64 %indvars.iv33593556
  store i32 %i.13291.us, ptr %arrayidx.i2403.us, align 4, !tbaa !25
  %189 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i2404.us = add nsw i32 %189, -1
  %and.i2405.us = and i32 %sub.i2404.us, %add476.us
  %idxprom.i.i2406.us = sext i32 %and.i2405.us to i64
  %arrayidx.i.i2407.us = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2406.us
  %190 = load i8, ptr %arrayidx.i.i2407.us, align 1, !tbaa !9
  %cmp481.us = icmp ult i8 %190, 4
  br i1 %cmp481.us, label %cleanup487.us, label %cleanup497.us

cleanup497.us:                                    ; preds = %while.cond441.preheader.us, %while.cond441.preheader.us.1, %while.cond441.preheader.us.2, %while.cond441.preheader.us.3, %while.body443.us, %if.end446.us, %if.end472.us, %if.end446.us.1, %if.end472.us.1, %while.body443.us.1, %if.end446.us.2, %if.end472.us.2, %while.body443.us.2, %if.end446.us.3, %if.end472.us.3, %while.body443.us.3
  %cmp408.not3276.us3587 = phi i1 [ true, %while.body443.us ], [ true, %if.end446.us ], [ true, %if.end472.us ], [ %cmp408.not.us, %if.end446.us.1 ], [ %cmp408.not.us, %if.end472.us.1 ], [ %cmp408.not.us, %while.body443.us.1 ], [ %cmp408.not.us.1, %if.end446.us.2 ], [ %cmp408.not.us.1, %if.end472.us.2 ], [ %cmp408.not.us.1, %while.body443.us.2 ], [ %cmp408.not.us.2, %if.end446.us.3 ], [ %cmp408.not.us.2, %if.end472.us.3 ], [ %cmp408.not.us.2, %while.body443.us.3 ], [ true, %while.cond441.preheader.us ], [ %cmp408.not.us, %while.cond441.preheader.us.1 ], [ %cmp408.not.us.1, %while.cond441.preheader.us.2 ], [ %cmp408.not.us.2, %while.cond441.preheader.us.3 ]
  %spec.select.us3583 = phi i32 [ %spec.select.us, %while.body443.us ], [ %spec.select.us, %if.end446.us ], [ %spec.select.us, %if.end472.us ], [ %spec.select.us.1, %if.end446.us.1 ], [ %spec.select.us.1, %if.end472.us.1 ], [ %spec.select.us.1, %while.body443.us.1 ], [ %spec.select.us.2, %if.end446.us.2 ], [ %spec.select.us.2, %if.end472.us.2 ], [ %spec.select.us.2, %while.body443.us.2 ], [ %spec.select.us.3, %if.end446.us.3 ], [ %spec.select.us.3, %if.end472.us.3 ], [ %spec.select.us.3, %while.body443.us.3 ], [ %spec.select.us, %while.cond441.preheader.us ], [ %spec.select.us.1, %while.cond441.preheader.us.1 ], [ %spec.select.us.2, %while.cond441.preheader.us.2 ], [ %spec.select.us.3, %while.cond441.preheader.us.3 ]
  %_ZZ9jpegModelR5MixerE7mcusize.promoted32693280.us.lcssa = phi i32 [ %_ZZ9jpegModelR5MixerE7mcusize.promoted32693280.us3557, %if.end472.us ], [ %_ZZ9jpegModelR5MixerE7mcusize.promoted32693280.us3557, %if.end446.us ], [ %191, %while.body443.us ], [ %203, %while.body443.us.1 ], [ %_ZZ9jpegModelR5MixerE7mcusize.promoted32693280.us3557.1, %if.end472.us.1 ], [ %_ZZ9jpegModelR5MixerE7mcusize.promoted32693280.us3557.1, %if.end446.us.1 ], [ %215, %while.body443.us.2 ], [ %_ZZ9jpegModelR5MixerE7mcusize.promoted32693280.us3557.2, %if.end472.us.2 ], [ %_ZZ9jpegModelR5MixerE7mcusize.promoted32693280.us3557.2, %if.end446.us.2 ], [ %227, %while.body443.us.3 ], [ %_ZZ9jpegModelR5MixerE7mcusize.promoted32693280.us3557.3, %if.end472.us.3 ], [ %_ZZ9jpegModelR5MixerE7mcusize.promoted32693280.us3557.3, %if.end446.us.3 ], [ %_ZZ9jpegModelR5MixerE7mcusize.promoted326932823289.us, %while.cond441.preheader.us ], [ %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us, %while.cond441.preheader.us.1 ], [ %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.1, %while.cond441.preheader.us.2 ], [ %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.2, %while.cond441.preheader.us.3 ]
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  br i1 %cmp408.not3276.us3587, label %return, label %for.inc500.us

for.inc500.us:                                    ; preds = %for.body409.us.3, %cleanup487.us.3, %for.inc495.us, %for.inc495.us.1, %for.inc495.us.2, %cleanup497.us
  %_ZZ9jpegModelR5MixerE7mcusize.promoted32693277.us = phi i32 [ %_ZZ9jpegModelR5MixerE7mcusize.promoted32693280.us.lcssa, %cleanup497.us ], [ %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us, %for.inc495.us ], [ %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.1, %for.inc495.us.1 ], [ %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.2, %for.inc495.us.2 ], [ %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.2, %for.body409.us.3 ], [ %227, %cleanup487.us.3 ]
  %hmax.43206.us = phi i32 [ %spec.select.us3583, %cleanup497.us ], [ %hmax.3.us, %for.inc495.us ], [ %hmax.3.us.1, %for.inc495.us.1 ], [ %hmax.3.us.2, %for.inc495.us.2 ], [ %hmax.3.us.2, %for.body409.us.3 ], [ %spec.select.us.3, %cleanup487.us.3 ]
  %inc501.us = add nuw nsw i32 %i.13291.us, 1
  %exitcond3365.not = icmp eq i32 %inc501.us, %conv394
  br i1 %exitcond3365.not, label %for.end502, label %for.cond407.preheader.us, !llvm.loop !135

cleanup487.us:                                    ; preds = %if.end472.us
  %conv478.us = zext i8 %190 to i32
  %arrayidx.i2409.us = getelementptr inbounds i32, ptr %229, i64 %indvars.iv33593556
  store i32 %conv478.us, ptr %arrayidx.i2409.us, align 4, !tbaa !25
  %dec485.us = add nsw i32 %hv.03268.us3558, -1
  %indvars.iv.next3360 = add nsw i64 %indvars.iv33593556, 1
  %191 = trunc i64 %indvars.iv.next3360 to i32
  store i32 %191, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  %tobool442.not.us = icmp eq i32 %dec485.us, 0
  br i1 %tobool442.not.us, label %for.inc495.us, label %while.body443.us, !llvm.loop !134

for.inc495.us:                                    ; preds = %cleanup487.us, %for.cond407.preheader.us
  %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us = phi i32 [ %_ZZ9jpegModelR5MixerE7mcusize.promoted326932823289.us, %for.cond407.preheader.us ], [ %191, %cleanup487.us ]
  %hmax.3.us = phi i32 [ %hmax.03290.us, %for.cond407.preheader.us ], [ %spec.select.us, %cleanup487.us ]
  br i1 %exitcond3364.not, label %for.inc500.us, label %for.body409.us.1, !llvm.loop !136

for.body409.us.1:                                 ; preds = %for.inc495.us
  %192 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i2382.us.1 = add nsw i32 %192, -1
  %and.i2383.us.1 = and i32 %sub.i2382.us.1, %add412.us
  %idxprom.i.i2384.us.1 = sext i32 %and.i2383.us.1 to i64
  %arrayidx.i.i2385.us.1 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2384.us.1
  %193 = load i8, ptr %arrayidx.i.i2385.us.1, align 1, !tbaa !9
  %and.i2387.us.1 = and i32 %sub.i2382.us.1, %add417.us.1
  %idxprom.i.i2388.us.1 = sext i32 %and.i2387.us.1 to i64
  %arrayidx.i.i2389.us.1 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2388.us.1
  %194 = load i8, ptr %arrayidx.i.i2389.us.1, align 1, !tbaa !9
  %cmp420.us.1 = icmp eq i8 %193, %194
  br i1 %cmp420.us.1, label %if.then421.us.1, label %for.inc495.us.1

if.then421.us.1:                                  ; preds = %for.body409.us.1
  %and.i2391.us.1 = and i32 %sub.i2382.us.1, %add424.us.1
  %idxprom.i.i2392.us.1 = sext i32 %and.i2391.us.1 to i64
  %arrayidx.i.i2393.us.1 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2392.us.1
  %195 = load i8, ptr %arrayidx.i.i2393.us.1, align 1, !tbaa !9
  %conv426.us.1 = zext i8 %195 to i32
  %shr427.us.1 = lshr i32 %conv426.us.1, 4
  %spec.select.us.1 = tail call i32 @llvm.smax.i32(i32 %shr427.us.1, i32 %hmax.3.us)
  %and432.us.1 = and i32 %conv426.us.1, 15
  %mul434.us.1 = mul nuw nsw i32 %and432.us.1, %shr427.us.1
  %cmp435.not.us.1 = icmp ne i32 %mul434.us.1, 0
  %add437.us.1 = add nsw i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us, %mul434.us.1
  %cmp438.us.1 = icmp slt i32 %add437.us.1, 11
  %or.cond3325.1 = select i1 %cmp435.not.us.1, i1 %cmp438.us.1, i1 false
  br i1 %or.cond3325.1, label %while.cond441.preheader.us.1, label %cleanup497.thread3208

while.cond441.preheader.us.1:                     ; preds = %if.then421.us.1
  %196 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8
  %197 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4qmap, i64 0, i32 3), align 8
  %smax.1 = tail call i32 @llvm.smax.i32(i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us, i32 10)
  %wide.trip.count3362.1 = zext i32 %smax.1 to i64
  %exitcond3363.not3555.1 = icmp sgt i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us, 9
  br i1 %exitcond3363.not3555.1, label %cleanup497.us, label %if.end446.us.lr.ph.1

if.end446.us.lr.ph.1:                             ; preds = %while.cond441.preheader.us.1
  %198 = sext i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us to i64
  br label %if.end446.us.1

if.end446.us.1:                                   ; preds = %while.body443.us.1, %if.end446.us.lr.ph.1
  %hv.03268.us3558.1 = phi i32 [ %mul434.us.1, %if.end446.us.lr.ph.1 ], [ %dec485.us.1, %while.body443.us.1 ]
  %_ZZ9jpegModelR5MixerE7mcusize.promoted32693280.us3557.1 = phi i32 [ %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us, %if.end446.us.lr.ph.1 ], [ %203, %while.body443.us.1 ]
  %indvars.iv33593556.1 = phi i64 [ %198, %if.end446.us.lr.ph.1 ], [ %indvars.iv.next3360.1, %while.body443.us.1 ]
  %199 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i2394.us.1 = add nsw i32 %199, -1
  %and.i2395.us.1 = and i32 %sub.i2394.us.1, %add449.us
  %idxprom.i.i2396.us.1 = sext i32 %and.i2395.us.1 to i64
  %arrayidx.i.i2397.us.1 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2396.us.1
  %200 = load i8, ptr %arrayidx.i.i2397.us.1, align 1, !tbaa !9
  %conv451.us.1 = zext i8 %200 to i32
  %shr452.us.1 = lshr i32 %conv451.us.1, 4
  %arrayidx455.us.1 = getelementptr inbounds [10 x i32], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 %indvars.iv33593556.1
  store i32 %shr452.us.1, ptr %arrayidx455.us.1, align 4, !tbaa !25
  %and461.us.1 = and i32 %conv451.us.1, 15
  %arrayidx463.us.1 = getelementptr inbounds [2 x [10 x i32]], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 1, i64 %indvars.iv33593556.1
  store i32 %and461.us.1, ptr %arrayidx463.us.1, align 4, !tbaa !25
  %cmp466.us.1 = icmp ult i8 %200, 64
  %cmp470.us.1 = icmp ult i32 %and461.us.1, 4
  %or.cond3175.us.1 = and i1 %cmp466.us.1, %cmp470.us.1
  br i1 %or.cond3175.us.1, label %if.end472.us.1, label %cleanup497.us

if.end472.us.1:                                   ; preds = %if.end446.us.1
  %arrayidx.i2403.us.1 = getelementptr inbounds i32, ptr %196, i64 %indvars.iv33593556.1
  store i32 %i.13291.us, ptr %arrayidx.i2403.us.1, align 4, !tbaa !25
  %201 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i2404.us.1 = add nsw i32 %201, -1
  %and.i2405.us.1 = and i32 %sub.i2404.us.1, %add476.us.1
  %idxprom.i.i2406.us.1 = sext i32 %and.i2405.us.1 to i64
  %arrayidx.i.i2407.us.1 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2406.us.1
  %202 = load i8, ptr %arrayidx.i.i2407.us.1, align 1, !tbaa !9
  %cmp481.us.1 = icmp ult i8 %202, 4
  br i1 %cmp481.us.1, label %cleanup487.us.1, label %cleanup497.us

cleanup487.us.1:                                  ; preds = %if.end472.us.1
  %conv478.us.1 = zext i8 %202 to i32
  %arrayidx.i2409.us.1 = getelementptr inbounds i32, ptr %197, i64 %indvars.iv33593556.1
  store i32 %conv478.us.1, ptr %arrayidx.i2409.us.1, align 4, !tbaa !25
  %dec485.us.1 = add nsw i32 %hv.03268.us3558.1, -1
  %indvars.iv.next3360.1 = add nsw i64 %indvars.iv33593556.1, 1
  %203 = trunc i64 %indvars.iv.next3360.1 to i32
  store i32 %203, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  %tobool442.not.us.1 = icmp eq i32 %dec485.us.1, 0
  br i1 %tobool442.not.us.1, label %for.inc495.us.1, label %while.body443.us.1, !llvm.loop !134

while.body443.us.1:                               ; preds = %cleanup487.us.1
  %exitcond3363.not.1 = icmp eq i64 %indvars.iv.next3360.1, %wide.trip.count3362.1
  br i1 %exitcond3363.not.1, label %cleanup497.us, label %if.end446.us.1, !llvm.loop !134

for.inc495.us.1:                                  ; preds = %cleanup487.us.1, %for.body409.us.1
  %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.1 = phi i32 [ %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us, %for.body409.us.1 ], [ %203, %cleanup487.us.1 ]
  %hmax.3.us.1 = phi i32 [ %hmax.3.us, %for.body409.us.1 ], [ %spec.select.us.1, %cleanup487.us.1 ]
  br i1 %exitcond3364.not.1, label %for.inc500.us, label %for.body409.us.2, !llvm.loop !136

for.body409.us.2:                                 ; preds = %for.inc495.us.1
  %204 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i2382.us.2 = add nsw i32 %204, -1
  %and.i2383.us.2 = and i32 %sub.i2382.us.2, %add412.us
  %idxprom.i.i2384.us.2 = sext i32 %and.i2383.us.2 to i64
  %arrayidx.i.i2385.us.2 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2384.us.2
  %205 = load i8, ptr %arrayidx.i.i2385.us.2, align 1, !tbaa !9
  %and.i2387.us.2 = and i32 %sub.i2382.us.2, %add417.us.2
  %idxprom.i.i2388.us.2 = sext i32 %and.i2387.us.2 to i64
  %arrayidx.i.i2389.us.2 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2388.us.2
  %206 = load i8, ptr %arrayidx.i.i2389.us.2, align 1, !tbaa !9
  %cmp420.us.2 = icmp eq i8 %205, %206
  br i1 %cmp420.us.2, label %if.then421.us.2, label %for.inc495.us.2

if.then421.us.2:                                  ; preds = %for.body409.us.2
  %and.i2391.us.2 = and i32 %sub.i2382.us.2, %add424.us.2
  %idxprom.i.i2392.us.2 = sext i32 %and.i2391.us.2 to i64
  %arrayidx.i.i2393.us.2 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2392.us.2
  %207 = load i8, ptr %arrayidx.i.i2393.us.2, align 1, !tbaa !9
  %conv426.us.2 = zext i8 %207 to i32
  %shr427.us.2 = lshr i32 %conv426.us.2, 4
  %spec.select.us.2 = tail call i32 @llvm.smax.i32(i32 %shr427.us.2, i32 %hmax.3.us.1)
  %and432.us.2 = and i32 %conv426.us.2, 15
  %mul434.us.2 = mul nuw nsw i32 %and432.us.2, %shr427.us.2
  %cmp435.not.us.2 = icmp ne i32 %mul434.us.2, 0
  %add437.us.2 = add nsw i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.1, %mul434.us.2
  %cmp438.us.2 = icmp slt i32 %add437.us.2, 11
  %or.cond3325.2 = select i1 %cmp435.not.us.2, i1 %cmp438.us.2, i1 false
  br i1 %or.cond3325.2, label %while.cond441.preheader.us.2, label %cleanup497.thread3208

while.cond441.preheader.us.2:                     ; preds = %if.then421.us.2
  %208 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8
  %209 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4qmap, i64 0, i32 3), align 8
  %smax.2 = tail call i32 @llvm.smax.i32(i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.1, i32 10)
  %wide.trip.count3362.2 = zext i32 %smax.2 to i64
  %exitcond3363.not3555.2 = icmp sgt i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.1, 9
  br i1 %exitcond3363.not3555.2, label %cleanup497.us, label %if.end446.us.lr.ph.2

if.end446.us.lr.ph.2:                             ; preds = %while.cond441.preheader.us.2
  %210 = sext i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.1 to i64
  br label %if.end446.us.2

if.end446.us.2:                                   ; preds = %while.body443.us.2, %if.end446.us.lr.ph.2
  %hv.03268.us3558.2 = phi i32 [ %mul434.us.2, %if.end446.us.lr.ph.2 ], [ %dec485.us.2, %while.body443.us.2 ]
  %_ZZ9jpegModelR5MixerE7mcusize.promoted32693280.us3557.2 = phi i32 [ %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.1, %if.end446.us.lr.ph.2 ], [ %215, %while.body443.us.2 ]
  %indvars.iv33593556.2 = phi i64 [ %210, %if.end446.us.lr.ph.2 ], [ %indvars.iv.next3360.2, %while.body443.us.2 ]
  %211 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i2394.us.2 = add nsw i32 %211, -1
  %and.i2395.us.2 = and i32 %sub.i2394.us.2, %add449.us
  %idxprom.i.i2396.us.2 = sext i32 %and.i2395.us.2 to i64
  %arrayidx.i.i2397.us.2 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2396.us.2
  %212 = load i8, ptr %arrayidx.i.i2397.us.2, align 1, !tbaa !9
  %conv451.us.2 = zext i8 %212 to i32
  %shr452.us.2 = lshr i32 %conv451.us.2, 4
  %arrayidx455.us.2 = getelementptr inbounds [10 x i32], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 %indvars.iv33593556.2
  store i32 %shr452.us.2, ptr %arrayidx455.us.2, align 4, !tbaa !25
  %and461.us.2 = and i32 %conv451.us.2, 15
  %arrayidx463.us.2 = getelementptr inbounds [2 x [10 x i32]], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 1, i64 %indvars.iv33593556.2
  store i32 %and461.us.2, ptr %arrayidx463.us.2, align 4, !tbaa !25
  %cmp466.us.2 = icmp ult i8 %212, 64
  %cmp470.us.2 = icmp ult i32 %and461.us.2, 4
  %or.cond3175.us.2 = and i1 %cmp466.us.2, %cmp470.us.2
  br i1 %or.cond3175.us.2, label %if.end472.us.2, label %cleanup497.us

if.end472.us.2:                                   ; preds = %if.end446.us.2
  %arrayidx.i2403.us.2 = getelementptr inbounds i32, ptr %208, i64 %indvars.iv33593556.2
  store i32 %i.13291.us, ptr %arrayidx.i2403.us.2, align 4, !tbaa !25
  %213 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i2404.us.2 = add nsw i32 %213, -1
  %and.i2405.us.2 = and i32 %sub.i2404.us.2, %add476.us.2
  %idxprom.i.i2406.us.2 = sext i32 %and.i2405.us.2 to i64
  %arrayidx.i.i2407.us.2 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2406.us.2
  %214 = load i8, ptr %arrayidx.i.i2407.us.2, align 1, !tbaa !9
  %cmp481.us.2 = icmp ult i8 %214, 4
  br i1 %cmp481.us.2, label %cleanup487.us.2, label %cleanup497.us

cleanup487.us.2:                                  ; preds = %if.end472.us.2
  %conv478.us.2 = zext i8 %214 to i32
  %arrayidx.i2409.us.2 = getelementptr inbounds i32, ptr %209, i64 %indvars.iv33593556.2
  store i32 %conv478.us.2, ptr %arrayidx.i2409.us.2, align 4, !tbaa !25
  %dec485.us.2 = add nsw i32 %hv.03268.us3558.2, -1
  %indvars.iv.next3360.2 = add nsw i64 %indvars.iv33593556.2, 1
  %215 = trunc i64 %indvars.iv.next3360.2 to i32
  store i32 %215, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  %tobool442.not.us.2 = icmp eq i32 %dec485.us.2, 0
  br i1 %tobool442.not.us.2, label %for.inc495.us.2, label %while.body443.us.2, !llvm.loop !134

while.body443.us.2:                               ; preds = %cleanup487.us.2
  %exitcond3363.not.2 = icmp eq i64 %indvars.iv.next3360.2, %wide.trip.count3362.2
  br i1 %exitcond3363.not.2, label %cleanup497.us, label %if.end446.us.2, !llvm.loop !134

for.inc495.us.2:                                  ; preds = %cleanup487.us.2, %for.body409.us.2
  %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.2 = phi i32 [ %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.1, %for.body409.us.2 ], [ %215, %cleanup487.us.2 ]
  %hmax.3.us.2 = phi i32 [ %hmax.3.us.1, %for.body409.us.2 ], [ %spec.select.us.2, %cleanup487.us.2 ]
  br i1 %exitcond3364.not.2, label %for.inc500.us, label %for.body409.us.3, !llvm.loop !136

for.body409.us.3:                                 ; preds = %for.inc495.us.2
  %216 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i2382.us.3 = add nsw i32 %216, -1
  %and.i2383.us.3 = and i32 %sub.i2382.us.3, %add412.us
  %idxprom.i.i2384.us.3 = sext i32 %and.i2383.us.3 to i64
  %arrayidx.i.i2385.us.3 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2384.us.3
  %217 = load i8, ptr %arrayidx.i.i2385.us.3, align 1, !tbaa !9
  %and.i2387.us.3 = and i32 %sub.i2382.us.3, %add417.us.3
  %idxprom.i.i2388.us.3 = sext i32 %and.i2387.us.3 to i64
  %arrayidx.i.i2389.us.3 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2388.us.3
  %218 = load i8, ptr %arrayidx.i.i2389.us.3, align 1, !tbaa !9
  %cmp420.us.3 = icmp eq i8 %217, %218
  br i1 %cmp420.us.3, label %if.then421.us.3, label %for.inc500.us

if.then421.us.3:                                  ; preds = %for.body409.us.3
  %and.i2391.us.3 = and i32 %sub.i2382.us.3, %add424.us.3
  %idxprom.i.i2392.us.3 = sext i32 %and.i2391.us.3 to i64
  %arrayidx.i.i2393.us.3 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2392.us.3
  %219 = load i8, ptr %arrayidx.i.i2393.us.3, align 1, !tbaa !9
  %conv426.us.3 = zext i8 %219 to i32
  %shr427.us.3 = lshr i32 %conv426.us.3, 4
  %spec.select.us.3 = tail call i32 @llvm.smax.i32(i32 %shr427.us.3, i32 %hmax.3.us.2)
  %and432.us.3 = and i32 %conv426.us.3, 15
  %mul434.us.3 = mul nuw nsw i32 %and432.us.3, %shr427.us.3
  %cmp435.not.us.3 = icmp ne i32 %mul434.us.3, 0
  %add437.us.3 = add nsw i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.2, %mul434.us.3
  %cmp438.us.3 = icmp slt i32 %add437.us.3, 11
  %or.cond3325.3 = select i1 %cmp435.not.us.3, i1 %cmp438.us.3, i1 false
  br i1 %or.cond3325.3, label %while.cond441.preheader.us.3, label %cleanup497.thread3208

while.cond441.preheader.us.3:                     ; preds = %if.then421.us.3
  %220 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8
  %221 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4qmap, i64 0, i32 3), align 8
  %smax.3 = tail call i32 @llvm.smax.i32(i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.2, i32 10)
  %wide.trip.count3362.3 = zext i32 %smax.3 to i64
  %exitcond3363.not3555.3 = icmp sgt i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.2, 9
  br i1 %exitcond3363.not3555.3, label %cleanup497.us, label %if.end446.us.lr.ph.3

if.end446.us.lr.ph.3:                             ; preds = %while.cond441.preheader.us.3
  %222 = sext i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.2 to i64
  br label %if.end446.us.3

if.end446.us.3:                                   ; preds = %while.body443.us.3, %if.end446.us.lr.ph.3
  %hv.03268.us3558.3 = phi i32 [ %mul434.us.3, %if.end446.us.lr.ph.3 ], [ %dec485.us.3, %while.body443.us.3 ]
  %_ZZ9jpegModelR5MixerE7mcusize.promoted32693280.us3557.3 = phi i32 [ %_ZZ9jpegModelR5MixerE7mcusize.promoted3270.us.2, %if.end446.us.lr.ph.3 ], [ %227, %while.body443.us.3 ]
  %indvars.iv33593556.3 = phi i64 [ %222, %if.end446.us.lr.ph.3 ], [ %indvars.iv.next3360.3, %while.body443.us.3 ]
  %223 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i2394.us.3 = add nsw i32 %223, -1
  %and.i2395.us.3 = and i32 %sub.i2394.us.3, %add449.us
  %idxprom.i.i2396.us.3 = sext i32 %and.i2395.us.3 to i64
  %arrayidx.i.i2397.us.3 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2396.us.3
  %224 = load i8, ptr %arrayidx.i.i2397.us.3, align 1, !tbaa !9
  %conv451.us.3 = zext i8 %224 to i32
  %shr452.us.3 = lshr i32 %conv451.us.3, 4
  %arrayidx455.us.3 = getelementptr inbounds [10 x i32], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 %indvars.iv33593556.3
  store i32 %shr452.us.3, ptr %arrayidx455.us.3, align 4, !tbaa !25
  %and461.us.3 = and i32 %conv451.us.3, 15
  %arrayidx463.us.3 = getelementptr inbounds [2 x [10 x i32]], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 1, i64 %indvars.iv33593556.3
  store i32 %and461.us.3, ptr %arrayidx463.us.3, align 4, !tbaa !25
  %cmp466.us.3 = icmp ult i8 %224, 64
  %cmp470.us.3 = icmp ult i32 %and461.us.3, 4
  %or.cond3175.us.3 = and i1 %cmp466.us.3, %cmp470.us.3
  br i1 %or.cond3175.us.3, label %if.end472.us.3, label %cleanup497.us

if.end472.us.3:                                   ; preds = %if.end446.us.3
  %arrayidx.i2403.us.3 = getelementptr inbounds i32, ptr %220, i64 %indvars.iv33593556.3
  store i32 %i.13291.us, ptr %arrayidx.i2403.us.3, align 4, !tbaa !25
  %225 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i2404.us.3 = add nsw i32 %225, -1
  %and.i2405.us.3 = and i32 %sub.i2404.us.3, %add476.us.3
  %idxprom.i.i2406.us.3 = sext i32 %and.i2405.us.3 to i64
  %arrayidx.i.i2407.us.3 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2406.us.3
  %226 = load i8, ptr %arrayidx.i.i2407.us.3, align 1, !tbaa !9
  %cmp481.us.3 = icmp ult i8 %226, 4
  br i1 %cmp481.us.3, label %cleanup487.us.3, label %cleanup497.us

cleanup487.us.3:                                  ; preds = %if.end472.us.3
  %conv478.us.3 = zext i8 %226 to i32
  %arrayidx.i2409.us.3 = getelementptr inbounds i32, ptr %221, i64 %indvars.iv33593556.3
  store i32 %conv478.us.3, ptr %arrayidx.i2409.us.3, align 4, !tbaa !25
  %dec485.us.3 = add nsw i32 %hv.03268.us3558.3, -1
  %indvars.iv.next3360.3 = add nsw i64 %indvars.iv33593556.3, 1
  %227 = trunc i64 %indvars.iv.next3360.3 to i32
  store i32 %227, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  %tobool442.not.us.3 = icmp eq i32 %dec485.us.3, 0
  br i1 %tobool442.not.us.3, label %for.inc500.us, label %while.body443.us.3, !llvm.loop !134

while.body443.us.3:                               ; preds = %cleanup487.us.3
  %exitcond3363.not.3 = icmp eq i64 %indvars.iv.next3360.3, %wide.trip.count3362.3
  br i1 %exitcond3363.not.3, label %cleanup497.us, label %if.end446.us.3, !llvm.loop !134

while.cond441.preheader.us:                       ; preds = %if.then421.us
  %228 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8
  %229 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4qmap, i64 0, i32 3), align 8
  %smax = tail call i32 @llvm.smax.i32(i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted326932823289.us, i32 10)
  %wide.trip.count3362 = zext i32 %smax to i64
  %exitcond3363.not3555 = icmp sgt i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted326932823289.us, 9
  br i1 %exitcond3363.not3555, label %cleanup497.us, label %if.end446.us.lr.ph

if.end446.us.lr.ph:                               ; preds = %while.cond441.preheader.us
  %230 = sext i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted326932823289.us to i64
  br label %if.end446.us

cleanup497.thread3208:                            ; preds = %if.then421.us.3, %if.then421.us.2, %if.then421.us.1, %if.then421.us
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  br label %return

for.end502:                                       ; preds = %for.inc500.us
  %231 = add nsw i32 %hmax.43206.us, -1
  %or.cond1744 = icmp ult i32 %231, 10
  br i1 %or.cond1744, label %for.cond509.preheader, label %if.then506

for.cond509.preheader:                            ; preds = %for.end502
  %cmp5103300 = icmp sgt i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted32693277.us, 0
  br i1 %cmp5103300, label %for.body511.lr.ph, label %for.cond536.preheader

for.body511.lr.ph:                                ; preds = %for.cond509.preheader
  %232 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8, !tbaa !61
  %cmp5153298.not = icmp eq i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted32693277.us, 1
  %233 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8
  %wide.trip.count3370 = zext i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted32693277.us to i64
  %234 = add i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted32693277.us, -1
  %xtraiter = and i32 %234, 1
  %235 = icmp eq i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted32693277.us, 2
  %unroll_iter = and i32 %234, -2
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  br label %for.body511

if.then506:                                       ; preds = %for.cond407.preheader.lr.ph, %if.end402, %for.end502
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %236 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

for.cond536.preheader:                            ; preds = %for.cond.cleanup516, %for.cond509.preheader
  %237 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4zpos, i64 0, i32 3), align 8, !tbaa !61
  br label %for.body538

for.body511:                                      ; preds = %for.body511.lr.ph, %for.cond.cleanup516
  %indvars.iv3367 = phi i64 [ 0, %for.body511.lr.ph ], [ %indvars.iv.next3368, %for.cond.cleanup516 ]
  %arrayidx.i2411 = getelementptr inbounds i32, ptr %232, i64 %indvars.iv3367
  store i32 0, ptr %arrayidx.i2411, align 4, !tbaa !25
  br i1 %cmp5153298.not, label %for.cond.cleanup516, label %for.body517.lr.ph

for.body517.lr.ph:                                ; preds = %for.body511
  %arrayidx.i2419 = getelementptr inbounds i32, ptr %233, i64 %indvars.iv3367
  %238 = trunc i64 %indvars.iv3367 to i32
  br i1 %235, label %for.cond.cleanup516.loopexit.unr-lcssa, label %for.body517

for.cond.cleanup516.loopexit.unr-lcssa:           ; preds = %for.inc526.1, %for.body517.lr.ph
  %.lcssa.ph = phi i32 [ undef, %for.body517.lr.ph ], [ %248, %for.inc526.1 ]
  %.unr = phi i32 [ 0, %for.body517.lr.ph ], [ %248, %for.inc526.1 ]
  %i513.03299.unr = phi i32 [ 1, %for.body517.lr.ph ], [ %inc527.1, %for.inc526.1 ]
  br i1 %lcmp.mod.not, label %for.cond.cleanup516, label %for.body517.epil

for.body517.epil:                                 ; preds = %for.cond.cleanup516.loopexit.unr-lcssa
  %add518.epil = add nuw nsw i32 %i513.03299.unr, %238
  %rem519.epil = srem i32 %add518.epil, %_ZZ9jpegModelR5MixerE7mcusize.promoted32693277.us
  %idxprom.i2416.epil = zext i32 %rem519.epil to i64
  %arrayidx.i2417.epil = getelementptr inbounds i32, ptr %233, i64 %idxprom.i2416.epil
  %239 = load i32, ptr %arrayidx.i2417.epil, align 4, !tbaa !25
  %240 = load i32, ptr %arrayidx.i2419, align 4, !tbaa !25
  %cmp522.epil = icmp eq i32 %239, %240
  br i1 %cmp522.epil, label %if.then523.epil, label %for.cond.cleanup516

if.then523.epil:                                  ; preds = %for.body517.epil
  store i32 %i513.03299.unr, ptr %arrayidx.i2411, align 4, !tbaa !25
  br label %for.cond.cleanup516

for.cond.cleanup516:                              ; preds = %for.cond.cleanup516.loopexit.unr-lcssa, %if.then523.epil, %for.body517.epil, %for.body511
  %241 = phi i32 [ 0, %for.body511 ], [ %.lcssa.ph, %for.cond.cleanup516.loopexit.unr-lcssa ], [ %.unr, %for.body517.epil ], [ %i513.03299.unr, %if.then523.epil ]
  %sub531 = sub nsw i32 %_ZZ9jpegModelR5MixerE7mcusize.promoted32693277.us, %241
  %shl = shl i32 %sub531, 6
  store i32 %shl, ptr %arrayidx.i2411, align 4, !tbaa !25
  %indvars.iv.next3368 = add nuw nsw i64 %indvars.iv3367, 1
  %exitcond3371.not = icmp eq i64 %indvars.iv.next3368, %wide.trip.count3370
  br i1 %exitcond3371.not, label %for.cond536.preheader, label %for.body511, !llvm.loop !137

for.body517:                                      ; preds = %for.body517.lr.ph, %for.inc526.1
  %242 = phi i32 [ %248, %for.inc526.1 ], [ 0, %for.body517.lr.ph ]
  %i513.03299 = phi i32 [ %inc527.1, %for.inc526.1 ], [ 1, %for.body517.lr.ph ]
  %niter = phi i32 [ %niter.next.1, %for.inc526.1 ], [ 0, %for.body517.lr.ph ]
  %add518 = add nuw nsw i32 %i513.03299, %238
  %rem519 = srem i32 %add518, %_ZZ9jpegModelR5MixerE7mcusize.promoted32693277.us
  %idxprom.i2416 = zext i32 %rem519 to i64
  %arrayidx.i2417 = getelementptr inbounds i32, ptr %233, i64 %idxprom.i2416
  %243 = load i32, ptr %arrayidx.i2417, align 4, !tbaa !25
  %244 = load i32, ptr %arrayidx.i2419, align 4, !tbaa !25
  %cmp522 = icmp eq i32 %243, %244
  br i1 %cmp522, label %if.then523, label %for.inc526

if.then523:                                       ; preds = %for.body517
  store i32 %i513.03299, ptr %arrayidx.i2411, align 4, !tbaa !25
  br label %for.inc526

for.inc526:                                       ; preds = %for.body517, %if.then523
  %245 = phi i32 [ %242, %for.body517 ], [ %i513.03299, %if.then523 ]
  %inc527 = add nuw nsw i32 %i513.03299, 1
  %add518.1 = add nuw nsw i32 %inc527, %238
  %rem519.1 = srem i32 %add518.1, %_ZZ9jpegModelR5MixerE7mcusize.promoted32693277.us
  %idxprom.i2416.1 = zext i32 %rem519.1 to i64
  %arrayidx.i2417.1 = getelementptr inbounds i32, ptr %233, i64 %idxprom.i2416.1
  %246 = load i32, ptr %arrayidx.i2417.1, align 4, !tbaa !25
  %247 = load i32, ptr %arrayidx.i2419, align 4, !tbaa !25
  %cmp522.1 = icmp eq i32 %246, %247
  br i1 %cmp522.1, label %if.then523.1, label %for.inc526.1

if.then523.1:                                     ; preds = %for.inc526
  store i32 %inc527, ptr %arrayidx.i2411, align 4, !tbaa !25
  br label %for.inc526.1

for.inc526.1:                                     ; preds = %if.then523.1, %for.inc526
  %248 = phi i32 [ %245, %for.inc526 ], [ %inc527, %if.then523.1 ]
  %inc527.1 = add nuw nsw i32 %i513.03299, 2
  %niter.next.1 = add i32 %niter, 2
  %niter.ncmp.1 = icmp eq i32 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond.cleanup516.loopexit.unr-lcssa, label %for.body517, !llvm.loop !138

for.body538:                                      ; preds = %for.body538, %for.cond536.preheader
  %indvars.iv3372 = phi i64 [ 0, %for.cond536.preheader ], [ %indvars.iv.next3373.1, %for.body538 ]
  %arrayidx540 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %indvars.iv3372
  %249 = load i8, ptr %arrayidx540, align 2, !tbaa !9
  %conv541 = zext i8 %249 to i64
  %arrayidx543 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %indvars.iv3372
  %250 = load i8, ptr %arrayidx543, align 2, !tbaa !9
  %conv544 = zext i8 %250 to i64
  %mul545 = shl nuw nsw i64 %conv544, 3
  %add546 = add nuw nsw i64 %mul545, %conv541
  %arrayidx.i2423 = getelementptr inbounds i32, ptr %237, i64 %add546
  %251 = trunc i64 %indvars.iv3372 to i32
  store i32 %251, ptr %arrayidx.i2423, align 4, !tbaa !25
  %indvars.iv.next3373 = or i64 %indvars.iv3372, 1
  %arrayidx540.1 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %indvars.iv.next3373
  %252 = load i8, ptr %arrayidx540.1, align 1, !tbaa !9
  %conv541.1 = zext i8 %252 to i64
  %arrayidx543.1 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %indvars.iv.next3373
  %253 = load i8, ptr %arrayidx543.1, align 1, !tbaa !9
  %conv544.1 = zext i8 %253 to i64
  %mul545.1 = shl nuw nsw i64 %conv544.1, 3
  %add546.1 = add nuw nsw i64 %mul545.1, %conv541.1
  %arrayidx.i2423.1 = getelementptr inbounds i32, ptr %237, i64 %add546.1
  %254 = trunc i64 %indvars.iv.next3373 to i32
  store i32 %254, ptr %arrayidx.i2423.1, align 4, !tbaa !25
  %indvars.iv.next3373.1 = add nuw nsw i64 %indvars.iv3372, 2
  %exitcond3375.not.1 = icmp eq i64 %indvars.iv.next3373.1, 64
  br i1 %exitcond3375.not.1, label %for.end550, label %for.body538, !llvm.loop !139

for.end550:                                       ; preds = %for.body538
  %add551 = add nsw i32 %176, 7
  %255 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i2424 = add nsw i32 %255, -1
  %and.i2425 = and i32 %sub.i2424, %add551
  %idxprom.i.i2426 = sext i32 %and.i2425 to i64
  %arrayidx.i.i2427 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2426
  %256 = load i8, ptr %arrayidx.i.i2427, align 1, !tbaa !9
  %conv553 = zext i8 %256 to i32
  %mul554 = shl nuw nsw i32 %conv553, 8
  %add555 = add nsw i32 %176, 8
  %and.i2429 = and i32 %sub.i2424, %add555
  %idxprom.i.i2430 = sext i32 %and.i2429 to i64
  %arrayidx.i.i2431 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2430
  %257 = load i8, ptr %arrayidx.i.i2431, align 1, !tbaa !9
  %conv557 = zext i8 %257 to i32
  %add558 = or i32 %mul554, %conv557
  store i32 %add558, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %add559 = add nsw i32 %176, 5
  %and.i2433 = and i32 %sub.i2424, %add559
  %idxprom.i.i2434 = sext i32 %and.i2433 to i64
  %arrayidx.i.i2435 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2434
  %258 = load i8, ptr %arrayidx.i.i2435, align 1, !tbaa !9
  %conv561 = zext i8 %258 to i32
  %mul562 = shl nuw nsw i32 %conv561, 8
  %add563 = add nsw i32 %176, 6
  %and.i2437 = and i32 %sub.i2424, %add563
  %idxprom.i.i2438 = sext i32 %and.i2437 to i64
  %arrayidx.i.i2439 = getelementptr inbounds i8, ptr %.lcssa3530, i64 %idxprom.i.i2438
  %259 = load i8, ptr %arrayidx.i.i2439, align 1, !tbaa !9
  %conv565 = zext i8 %259 to i32
  %add566 = or i32 %mul562, %conv565
  %call567 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.12, i32 noundef %add558, i32 noundef %add566)
  %260 = load i32, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %sub568 = add nsw i32 %260, -1
  %mul569 = shl nuw nsw i32 %hmax.43206.us, 3
  %div = sdiv i32 %sub568, %mul569
  %add570 = add nsw i32 %div, 1
  store i32 %add570, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %cmp571 = icmp sgt i32 %div, -1
  br i1 %cmp571, label %cleanup580, label %if.then572

if.then572:                                       ; preds = %for.end550
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %261 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

cleanup580:                                       ; preds = %for.end550
  %262 = load i32, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  %mul574 = shl nsw i32 %262, 6
  store i32 %mul574, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE3row, align 4, !tbaa !25
  br label %if.end583

if.end583thread-pre-split:                        ; preds = %if.end273
  %.pr3213 = load i32, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  br label %if.end583

if.end583:                                        ; preds = %if.end583thread-pre-split, %cleanup580
  %263 = phi i32 [ %.pr3213, %if.end583thread-pre-split ], [ %mul574, %cleanup580 ]
  %tobool584.not = icmp eq i32 %263, 0
  br i1 %tobool584.not, label %if.end1358, label %land.lhs.true585

land.lhs.true585:                                 ; preds = %if.end583
  %264 = load i32, ptr @bpos, align 4, !tbaa !25
  %tobool586.not = icmp eq i32 %264, 0
  %add588.neg = select i1 %tobool586.not, i32 -2, i32 -1
  %265 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i2440 = add i32 %add588.neg, %265
  %266 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i2441 = add nsw i32 %266, -1
  %and.i2442 = and i32 %sub3.i2441, %sub.i2440
  %267 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i2443 = sext i32 %and.i2442 to i64
  %arrayidx.i.i2444 = getelementptr inbounds i8, ptr %267, i64 %idxprom.i.i2443
  %268 = load i8, ptr %arrayidx.i.i2444, align 1, !tbaa !9
  %cmp590.not = icmp eq i8 %268, -1
  br i1 %cmp590.not, label %if.end1358, label %if.then591

if.then591:                                       ; preds = %land.lhs.true585
  %269 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  %cmp592 = icmp slt i32 %269, 33
  br i1 %cmp592, label %if.end594, label %if.then593

if.then593:                                       ; preds = %if.then591
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %270 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end594:                                        ; preds = %if.then591
  %271 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  %272 = load i32, ptr @y, align 4, !tbaa !25
  %reass.add = shl i32 %271, 1
  %add596 = add i32 %272, %reass.add
  store i32 %add596, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  %inc597 = add nsw i32 %269, 1
  store i32 %inc597, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  %273 = load i32, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  %cmp598 = icmp slt i32 %273, 0
  br i1 %cmp598, label %if.then599, label %if.then695

if.then599:                                       ; preds = %if.end594
  %or.cond1745 = icmp ult i32 %269, 16
  br i1 %or.cond1745, label %if.end604, label %if.then603

if.then603:                                       ; preds = %if.then599
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %274 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end604:                                        ; preds = %if.then599
  %275 = load i32, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %and605 = and i32 %275, 63
  %cmp606 = icmp ne i32 %and605, 0
  %cmp611 = icmp ult i32 %275, 640
  br i1 %cmp611, label %if.end618, label %if.then612

if.then612:                                       ; preds = %if.end604
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %276 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end618:                                        ; preds = %if.end604
  %shr610 = lshr i32 %275, 6
  %idxprom619 = zext i1 %cmp606 to i64
  %idxprom622 = zext i32 %shr610 to i64
  %arrayidx623 = getelementptr inbounds [2 x [10 x i32]], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 %idxprom619, i64 %idxprom622
  %277 = load i32, ptr %arrayidx623, align 4, !tbaa !25
  %or.cond1747 = icmp ult i32 %277, 4
  br i1 %or.cond1747, label %if.end635, label %if.then627

if.then627:                                       ; preds = %if.end618
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %278 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end635:                                        ; preds = %if.end618
  %mul637 = select i1 %cmp606, i32 64, i32 0
  %mul638 = shl nuw nsw i32 %277, 4
  %add639 = add nuw nsw i32 %mul638, %mul637
  %279 = load ptr, ptr getelementptr inbounds (%class.Array.7, ptr @_ZZ9jpegModelR5MixerE3huf, i64 0, i32 3), align 8, !tbaa !124
  %idxprom.i2446 = zext i32 %add639 to i64
  %arrayidx.i2447 = getelementptr inbounds %struct.HUF, ptr %279, i64 %idxprom.i2446
  %idxprom641 = zext i32 %269 to i64
  %arrayidx642 = getelementptr inbounds %struct.HUF, ptr %arrayidx.i2447, i64 %idxprom641
  %280 = load i32, ptr %arrayidx642, align 4, !tbaa !129
  %max646 = getelementptr inbounds %struct.HUF, ptr %arrayidx.i2447, i64 %idxprom641, i32 1
  %281 = load i32, ptr %max646, align 4, !tbaa !131
  %cmp647.not = icmp ugt i32 %280, %281
  br i1 %cmp647.not, label %if.then655, label %land.lhs.true648

land.lhs.true648:                                 ; preds = %if.end635
  %val651 = getelementptr inbounds %struct.HUF, ptr %arrayidx.i2447, i64 %idxprom641, i32 2
  %282 = load i32, ptr %val651, align 4, !tbaa !132
  %cmp652 = icmp slt i32 %282, 2048
  br i1 %cmp652, label %if.end656, label %if.then655

if.then655:                                       ; preds = %land.lhs.true648, %if.end635
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %283 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end656:                                        ; preds = %land.lhs.true648
  %cmp660 = icmp ult i32 %add596, %281
  br i1 %cmp660, label %if.then661, label %if.end1358

if.then661:                                       ; preds = %if.end656
  %cmp665.not = icmp ult i32 %add596, %280
  br i1 %cmp665.not, label %if.then666, label %if.end667

if.then666:                                       ; preds = %if.then661
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %284 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end667:                                        ; preds = %if.then661
  %add671 = sub i32 %add596, %280
  %sub675 = add i32 %add671, %282
  %or.cond1750 = icmp ult i32 %sub675, 2048
  br i1 %or.cond1750, label %cleanup683.thread, label %cleanup683

cleanup683.thread:                                ; preds = %if.end667
  %285 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4hbuf, i64 0, i32 3), align 8, !tbaa !22
  %idxprom.i2448 = zext i32 %sub675 to i64
  %arrayidx.i2449 = getelementptr inbounds i8, ptr %285, i64 %idxprom.i2448
  %286 = load i8, ptr %arrayidx.i2449, align 1, !tbaa !9
  %conv682 = zext i8 %286 to i32
  store i32 %conv682, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  store i32 %inc597, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  br label %if.then695

cleanup683:                                       ; preds = %if.end667
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %287 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.then695:                                       ; preds = %if.end594, %cleanup683.thread
  %288 = phi i32 [ %273, %if.end594 ], [ %conv682, %cleanup683.thread ]
  %289 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  %and696 = and i32 %288, 15
  %add697 = add nsw i32 %289, %and696
  %cmp698 = icmp eq i32 %add697, %inc597
  br i1 %cmp698, label %if.then699, label %if.end1358

if.then699:                                       ; preds = %if.then695
  store i32 %288, ptr @_ZZ9jpegModelR5MixerE3rs1, align 4, !tbaa !25
  %290 = load i32, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %and701 = and i32 %290, 63
  %tobool702.not = icmp eq i32 %and701, 0
  br i1 %tobool702.not, label %if.else781, label %if.then703

if.then703:                                       ; preds = %if.then699
  %cmp704 = icmp eq i32 %288, 0
  br i1 %cmp704, label %if.then705, label %if.else723

if.then705:                                       ; preds = %if.then703
  %add706 = add nsw i32 %290, 63
  %and707 = and i32 %add706, -64
  store i32 %and707, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %cmp708 = icmp sgt i32 %and707, -1
  br i1 %cmp708, label %land.lhs.true709, label %if.then713

land.lhs.true709:                                 ; preds = %if.then705
  %cmp710 = icmp sle i32 %and707, %263
  %cmp712 = icmp ult i32 %and707, 641
  %or.cond1751 = and i1 %cmp710, %cmp712
  br i1 %or.cond1751, label %while.cond715.preheader, label %if.then713

while.cond715.preheader:                          ; preds = %land.lhs.true709
  %_ZZ9jpegModelR5MixerE4cpos.promoted3307 = load i32, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %and7163309 = and i32 %_ZZ9jpegModelR5MixerE4cpos.promoted3307, 63
  %tobool717.not3310 = icmp eq i32 %and7163309, 0
  br i1 %tobool717.not3310, label %if.end827, label %while.body718

if.then713:                                       ; preds = %land.lhs.true709, %if.then705
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %291 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

while.body718:                                    ; preds = %while.cond715.preheader, %while.body718
  %inc72033083311 = phi i32 [ %inc720, %while.body718 ], [ %_ZZ9jpegModelR5MixerE4cpos.promoted3307, %while.cond715.preheader ]
  %292 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %sub.i2450 = add nsw i32 %292, -1
  %and.i2451 = and i32 %sub.i2450, %inc72033083311
  %293 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %idxprom.i.i2452 = sext i32 %and.i2451 to i64
  %arrayidx.i.i2453 = getelementptr inbounds i32, ptr %293, i64 %idxprom.i.i2452
  store i32 0, ptr %arrayidx.i.i2453, align 4, !tbaa !25
  %inc720 = add nsw i32 %inc72033083311, 1
  %294 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !20
  %sub.i2454 = add nsw i32 %294, -1
  %and.i2455 = and i32 %sub.i2454, %inc72033083311
  %295 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i2456 = sext i32 %and.i2455 to i64
  %arrayidx.i.i2457 = getelementptr inbounds i8, ptr %295, i64 %idxprom.i.i2456
  store i8 0, ptr %arrayidx.i.i2457, align 1, !tbaa !9
  %and716 = and i32 %inc720, 63
  %tobool717.not = icmp eq i32 %and716, 0
  br i1 %tobool717.not, label %while.cond715.if.end827.loopexit_crit_edge, label %while.body718, !llvm.loop !140

if.else723:                                       ; preds = %if.then703
  %cmp725 = icmp ult i32 %and696, 11
  br i1 %cmp725, label %if.end727, label %if.then726

if.then726:                                       ; preds = %if.else723
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %296 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end727:                                        ; preds = %if.else723
  %shr728 = lshr i32 %288, 4
  %add731 = add i32 %290, %shr728
  %cmp733.unshifted = xor i32 %add731, %290
  %cmp733 = icmp ult i32 %cmp733.unshifted, 64
  br i1 %cmp733, label %if.end735, label %cleanup776.thread

cleanup776.thread:                                ; preds = %if.end727
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %297 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end735:                                        ; preds = %if.end727
  %add737 = add i32 %add731, 1
  store i32 %add737, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %notmask3168 = shl nsw i32 -1, %and696
  %sub739 = xor i32 %notmask3168, -1
  %and740 = and i32 %add596, %sub739
  %tobool741.not = icmp eq i32 %and696, 0
  br i1 %tobool741.not, label %if.end750, label %land.lhs.true742

land.lhs.true742:                                 ; preds = %if.end735
  %sub743 = add nsw i32 %and696, -1
  %shr744 = lshr i32 %and740, %sub743
  %tobool745.not = icmp eq i32 %shr744, 0
  %sub749 = select i1 %tobool745.not, i32 %sub739, i32 0
  %spec.select3177 = sub nsw i32 %and740, %sub749
  br label %if.end750

if.end750:                                        ; preds = %land.lhs.true742, %if.end735
  %x.0 = phi i32 [ %and740, %if.end735 ], [ %spec.select3177, %land.lhs.true742 ]
  %_ZZ9jpegModelR5MixerE4cpos.promoted = load i32, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %cmp7533304.not = icmp ult i32 %288, 16
  br i1 %cmp7533304.not, label %cleanup776, label %for.body755

for.body755:                                      ; preds = %if.end750, %for.body755
  %i751.03306 = phi i32 [ %dec762, %for.body755 ], [ %shr728, %if.end750 ]
  %inc75933033305 = phi i32 [ %inc759, %for.body755 ], [ %_ZZ9jpegModelR5MixerE4cpos.promoted, %if.end750 ]
  %298 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %sub.i2466 = add nsw i32 %298, -1
  %and.i2467 = and i32 %sub.i2466, %inc75933033305
  %299 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %idxprom.i.i2468 = sext i32 %and.i2467 to i64
  %arrayidx.i.i2469 = getelementptr inbounds i32, ptr %299, i64 %idxprom.i.i2468
  store i32 0, ptr %arrayidx.i.i2469, align 4, !tbaa !25
  %shl757 = shl nuw nsw i32 %i751.03306, 4
  %or = or i32 %shl757, %and696
  %conv758 = trunc i32 %or to i8
  %inc759 = add nsw i32 %inc75933033305, 1
  %300 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !20
  %sub.i2470 = add nsw i32 %300, -1
  %and.i2471 = and i32 %sub.i2470, %inc75933033305
  %301 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i2472 = sext i32 %and.i2471 to i64
  %arrayidx.i.i2473 = getelementptr inbounds i8, ptr %301, i64 %idxprom.i.i2472
  store i8 %conv758, ptr %arrayidx.i.i2473, align 1, !tbaa !9
  %dec762 = add nsw i32 %i751.03306, -1
  %cmp753 = icmp ugt i32 %i751.03306, 1
  br i1 %cmp753, label %for.body755, label %for.cond752.cleanup776_crit_edge, !llvm.loop !141

for.cond752.cleanup776_crit_edge:                 ; preds = %for.body755
  store i32 %inc759, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  br label %cleanup776

cleanup776:                                       ; preds = %for.cond752.cleanup776_crit_edge, %if.end750
  %302 = phi i32 [ %inc759, %for.cond752.cleanup776_crit_edge ], [ %_ZZ9jpegModelR5MixerE4cpos.promoted, %if.end750 ]
  %303 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %sub.i2458 = add nsw i32 %303, -1
  %and.i2459 = and i32 %sub.i2458, %302
  %304 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %idxprom.i.i2460 = sext i32 %and.i2459 to i64
  %arrayidx.i.i2461 = getelementptr inbounds i32, ptr %304, i64 %idxprom.i.i2460
  store i32 %x.0, ptr %arrayidx.i.i2461, align 4, !tbaa !25
  %shl766 = shl nuw nsw i32 %and696, 4
  %shl767 = shl i32 %add596, 2
  %shr768 = lshr i32 %shl767, %and696
  %and769 = and i32 %shr768, 3
  %or770 = or i32 %and769, %shl766
  %305 = trunc i32 %or770 to i8
  %conv772 = or i8 %305, 12
  %inc773 = add nsw i32 %302, 1
  store i32 %inc773, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %306 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !20
  %sub.i2462 = add nsw i32 %306, -1
  %and.i2463 = and i32 %sub.i2462, %302
  %307 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i2464 = sext i32 %and.i2463 to i64
  %arrayidx.i.i2465 = getelementptr inbounds i8, ptr %307, i64 %idxprom.i.i2464
  store i8 %conv772, ptr %arrayidx.i.i2465, align 1, !tbaa !9
  %308 = load i32, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !25
  %add775 = add nsw i32 %308, %and696
  store i32 %add775, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !25
  br label %if.end827

if.else781:                                       ; preds = %if.then699
  %cmp782 = icmp ult i32 %288, 12
  br i1 %cmp782, label %if.end784, label %if.then783

if.then783:                                       ; preds = %if.else781
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %309 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end784:                                        ; preds = %if.else781
  %inc785 = add nuw nsw i32 %290, 1
  store i32 %inc785, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %notmask = shl nsw i32 -1, %288
  %sub787 = xor i32 %notmask, -1
  %and788 = and i32 %add596, %sub787
  %tobool789.not = icmp eq i32 %288, 0
  br i1 %tobool789.not, label %if.end798, label %land.lhs.true790

land.lhs.true790:                                 ; preds = %if.end784
  %sub791 = add nsw i32 %288, -1
  %shr792 = ashr i32 %and788, %sub791
  %tobool793.not = icmp eq i32 %shr792, 0
  %sub797 = select i1 %tobool793.not, i32 %sub787, i32 0
  %spec.select3178 = sub nsw i32 %and788, %sub797
  br label %if.end798

if.end798:                                        ; preds = %land.lhs.true790, %if.end784
  %x.1 = phi i32 [ %and788, %if.end784 ], [ %spec.select3178, %land.lhs.true790 ]
  %cmp802 = icmp ult i32 %290, 639
  br i1 %cmp802, label %if.end804, label %if.then803

if.then803:                                       ; preds = %if.end798
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %310 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end804:                                        ; preds = %if.end798
  %shr801 = lshr i32 %inc785, 6
  %311 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8, !tbaa !61
  %idxprom.i2474 = zext i32 %shr801 to i64
  %arrayidx.i2475 = getelementptr inbounds i32, ptr %311, i64 %idxprom.i2474
  %312 = load i32, ptr %arrayidx.i2475, align 4, !tbaa !25
  %or.cond1752 = icmp ult i32 %312, 4
  br i1 %or.cond1752, label %if.end811, label %if.then810

if.then810:                                       ; preds = %if.end804
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %313 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end811:                                        ; preds = %if.end804
  %314 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4pred, i64 0, i32 3), align 8, !tbaa !61
  %idxprom.i2476 = zext i32 %312 to i64
  %arrayidx.i2477 = getelementptr inbounds i32, ptr %314, i64 %idxprom.i2476
  %315 = load i32, ptr %arrayidx.i2477, align 4, !tbaa !25
  %add813 = add nsw i32 %315, %x.1
  store i32 %add813, ptr %arrayidx.i2477, align 4, !tbaa !25
  %316 = load i32, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %and814 = and i32 %316, 63
  %cmp815 = icmp eq i32 %and814, 0
  br i1 %cmp815, label %cleanup824, label %if.then816

if.then816:                                       ; preds = %if.end811
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %317 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

cleanup824:                                       ; preds = %if.end811
  %318 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %sub.i2478 = add nsw i32 %318, -1
  %and.i2479 = and i32 %sub.i2478, %316
  %319 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %idxprom.i.i2480 = sext i32 %and.i2479 to i64
  %arrayidx.i.i2481 = getelementptr inbounds i32, ptr %319, i64 %idxprom.i.i2480
  store i32 %add813, ptr %arrayidx.i.i2481, align 4, !tbaa !25
  %add819 = add nsw i32 %add813, 1023
  %320 = lshr i32 %add819, 3
  %conv821 = trunc i32 %320 to i8
  %inc822 = add nuw nsw i32 %316, 1
  store i32 %inc822, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %321 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !20
  %sub.i2482 = add nsw i32 %321, -1
  %and.i2483 = and i32 %sub.i2482, %316
  %322 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i2484 = sext i32 %and.i2483 to i64
  %arrayidx.i.i2485 = getelementptr inbounds i8, ptr %322, i64 %idxprom.i.i2484
  store i8 %conv821, ptr %arrayidx.i.i2485, align 1, !tbaa !9
  %323 = load i32, ptr @_ZZ9jpegModelR5MixerE5ssum2, align 4, !tbaa !25
  store i32 %323, ptr @_ZZ9jpegModelR5MixerE5ssum3, align 4, !tbaa !25
  %324 = load i32, ptr @_ZZ9jpegModelR5MixerE5ssum1, align 4, !tbaa !25
  store i32 %324, ptr @_ZZ9jpegModelR5MixerE5ssum2, align 4, !tbaa !25
  %325 = load i32, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !25
  store i32 %325, ptr @_ZZ9jpegModelR5MixerE5ssum1, align 4, !tbaa !25
  store i32 %288, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !25
  br label %if.end827

while.cond715.if.end827.loopexit_crit_edge:       ; preds = %while.body718
  store i32 %inc720, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  br label %if.end827

if.end827:                                        ; preds = %cleanup776, %while.cond715.preheader, %while.cond715.if.end827.loopexit_crit_edge, %cleanup824
  %326 = phi i32 [ %_ZZ9jpegModelR5MixerE4cpos.promoted3307, %while.cond715.preheader ], [ %inc720, %while.cond715.if.end827.loopexit_crit_edge ], [ %inc822, %cleanup824 ], [ %inc773, %cleanup776 ]
  %327 = phi i32 [ %and707, %while.cond715.preheader ], [ %and707, %while.cond715.if.end827.loopexit_crit_edge ], [ %inc785, %cleanup824 ], [ %add737, %cleanup776 ]
  %cmp828 = icmp slt i32 %327, 0
  %cmp830.not = icmp sgt i32 %327, %263
  %or.cond3180 = or i1 %cmp828, %cmp830.not
  br i1 %or.cond3180, label %if.then831, label %if.end832

if.then831:                                       ; preds = %if.end827
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %328 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end832:                                        ; preds = %if.end827
  %cmp833.not = icmp slt i32 %327, %263
  br i1 %cmp833.not, label %if.end840, label %if.then834

if.then834:                                       ; preds = %if.end832
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %329 = load i32, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %inc835 = add nsw i32 %329, 1
  store i32 %inc835, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %330 = load i32, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %cmp836 = icmp eq i32 %inc835, %330
  br i1 %cmp836, label %if.then837, label %if.end840

if.then837:                                       ; preds = %if.then834
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %331 = load i32, ptr @_ZZ9jpegModelR5MixerE3row, align 4, !tbaa !25
  %inc838 = add nsw i32 %331, 1
  store i32 %inc838, ptr @_ZZ9jpegModelR5MixerE3row, align 4, !tbaa !25
  br label %if.end840

if.end840:                                        ; preds = %if.then834, %if.then837, %if.end832
  %332 = phi i32 [ 0, %if.then834 ], [ 0, %if.then837 ], [ %327, %if.end832 ]
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  store i32 -1, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  %shr841 = lshr i32 %332, 6
  %333 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4qmap, i64 0, i32 3), align 8, !tbaa !61
  %idxprom.i2486 = zext i32 %shr841 to i64
  %arrayidx.i2487 = getelementptr inbounds i32, ptr %333, i64 %idxprom.i2486
  %334 = load i32, ptr %arrayidx.i2487, align 4, !tbaa !25
  %mul843 = shl nsw i32 %334, 6
  %and844 = and i32 %332, 63
  %sub845 = sub nsw i32 %326, %and844
  %cmp846 = icmp eq i32 %and844, 0
  br i1 %cmp846, label %for.body852.preheader, label %if.else993

for.body852.preheader:                            ; preds = %if.end840
  %335 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumv2, align 16, !tbaa !25
  %336 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumv3, align 16, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %335, i32 noundef %336, ptr noundef nonnull align 4 dereferenceable(4) @_ZZ9jpegModelR5MixerE2kx, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 16))
  %337 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumu2, align 16, !tbaa !25
  %338 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumu3, align 16, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %337, i32 noundef %338, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 8), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 24))
  %339 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 1), align 4, !tbaa !25
  %340 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 1), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %339, i32 noundef %340, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 1), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 17))
  %341 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 1), align 4, !tbaa !25
  %342 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 1), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %341, i32 noundef %342, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 9), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 25))
  %343 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 2), align 8, !tbaa !25
  %344 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 2), align 8, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %343, i32 noundef %344, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 2), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 18))
  %345 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 2), align 8, !tbaa !25
  %346 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 2), align 8, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %345, i32 noundef %346, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 10), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 26))
  %347 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 3), align 4, !tbaa !25
  %348 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 3), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %347, i32 noundef %348, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 3), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 19))
  %349 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 3), align 4, !tbaa !25
  %350 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 3), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %349, i32 noundef %350, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 11), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 27))
  store <4 x i32> zeroinitializer, ptr @_ZZ9jpegModelR5MixerE5sumv3, align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr @_ZZ9jpegModelR5MixerE5sumu3, align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr @_ZZ9jpegModelR5MixerE5sumv2, align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr @_ZZ9jpegModelR5MixerE5sumu2, align 16, !tbaa !25
  %351 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 4), align 16, !tbaa !25
  %352 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 4), align 16, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %351, i32 noundef %352, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 4), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 20))
  %353 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 4), align 16, !tbaa !25
  %354 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 4), align 16, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %353, i32 noundef %354, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 12), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 28))
  %355 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 5), align 4, !tbaa !25
  %356 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 5), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %355, i32 noundef %356, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 5), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 21))
  %357 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 5), align 4, !tbaa !25
  %358 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 5), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %357, i32 noundef %358, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 13), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 29))
  %359 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 6), align 8, !tbaa !25
  %360 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 6), align 8, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %359, i32 noundef %360, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 6), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 22))
  %361 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 6), align 8, !tbaa !25
  %362 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 6), align 8, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %361, i32 noundef %362, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 14), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 30))
  %363 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 7), align 4, !tbaa !25
  %364 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 7), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %363, i32 noundef %364, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 7), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 23))
  %365 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 7), align 4, !tbaa !25
  %366 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 7), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %365, i32 noundef %366, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 15), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 31))
  store <4 x i32> zeroinitializer, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 4), align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 4), align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 4), align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 4), align 16, !tbaa !25
  %367 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8, !tbaa !61
  %arrayidx.i2489 = getelementptr inbounds i32, ptr %367, i64 %idxprom.i2486
  %368 = load i32, ptr %arrayidx.i2489, align 4, !tbaa !25
  %sub885 = sub i32 %sub845, %368
  %369 = load i32, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %mul886 = mul nsw i32 %369, %263
  %sub887 = sub i32 %sub845, %mul886
  %370 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4qtab, i64 0, i32 3), align 8, !tbaa !22
  %371 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %sub.i2492 = add nsw i32 %371, -1
  %372 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %373 = sext i32 %mul843 to i64
  br label %for.body892

for.body892:                                      ; preds = %for.body852.preheader, %for.body892
  %indvars.iv3383 = phi i64 [ 0, %for.body852.preheader ], [ %indvars.iv.next3384, %for.body892 ]
  %arrayidx894 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %indvars.iv3383
  %374 = load i8, ptr %arrayidx894, align 1, !tbaa !9
  %idxprom895 = zext i8 %374 to i64
  %arrayidx896 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %idxprom895
  %375 = load i32, ptr %arrayidx896, align 4, !tbaa !25
  %376 = lshr i64 2978192880766211435, %indvars.iv3383
  %377 = and i64 %376, 1
  %tobool901.not.not = icmp eq i64 %377, 0
  %378 = sub nsw i32 0, %375
  %mul902 = select i1 %tobool901.not.not, i32 %378, i32 %375
  %379 = add nuw nsw i64 %indvars.iv3383, %373
  %arrayidx.i2491 = getelementptr inbounds i8, ptr %370, i64 %379
  %380 = load i8, ptr %arrayidx.i2491, align 1, !tbaa !9
  %conv905 = zext i8 %380 to i32
  %add906 = add nuw nsw i32 %conv905, 1
  %381 = trunc i64 %indvars.iv3383 to i32
  %382 = add i32 %sub887, %381
  %and.i2493 = and i32 %sub.i2492, %382
  %idxprom.i.i2494 = sext i32 %and.i2493 to i64
  %arrayidx.i.i2495 = getelementptr inbounds i32, ptr %372, i64 %idxprom.i.i2494
  %383 = load i32, ptr %arrayidx.i.i2495, align 4, !tbaa !25
  %mul907 = mul i32 %383, %add906
  %mul910 = mul i32 %mul907, %mul902
  %arrayidx912 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %indvars.iv3383
  %384 = load i8, ptr %arrayidx912, align 1, !tbaa !9
  %idxprom913 = zext i8 %384 to i64
  %arrayidx914 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 %idxprom913
  %385 = load i32, ptr %arrayidx914, align 4, !tbaa !25
  %add915 = add nsw i32 %385, %mul910
  store i32 %add915, ptr %arrayidx914, align 4, !tbaa !25
  %arrayidx919 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %idxprom913
  %386 = load i32, ptr %arrayidx919, align 4, !tbaa !25
  %387 = lshr i64 5374292623298483885, %indvars.iv3383
  %388 = and i64 %387, 1
  %tobool924.not.not = icmp eq i64 %388, 0
  %389 = sub nsw i32 0, %386
  %mul926 = select i1 %tobool924.not.not, i32 %389, i32 %386
  %390 = trunc i64 %indvars.iv3383 to i32
  %391 = add i32 %sub885, %390
  %and.i2499 = and i32 %sub.i2492, %391
  %idxprom.i.i2500 = sext i32 %and.i2499 to i64
  %arrayidx.i.i2501 = getelementptr inbounds i32, ptr %372, i64 %idxprom.i.i2500
  %392 = load i32, ptr %arrayidx.i.i2501, align 4, !tbaa !25
  %mul931 = mul i32 %392, %add906
  %mul934 = mul i32 %mul931, %mul926
  %arrayidx938 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 %idxprom895
  %393 = load i32, ptr %arrayidx938, align 4, !tbaa !25
  %add939 = add nsw i32 %mul934, %393
  store i32 %add939, ptr %arrayidx938, align 4, !tbaa !25
  %394 = lshr i64 402702435, %indvars.iv3383
  %395 = and i64 %394, 1
  %tobool942.not.not = icmp eq i64 %395, 0
  %cond948 = select i1 %tobool901.not.not, i32 -256, i32 256
  %spec.select3181 = select i1 %tobool942.not.not, i32 %cond948, i32 181
  %mul957 = mul i32 %mul907, %spec.select3181
  %arrayidx961 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 %idxprom913
  %396 = load i32, ptr %arrayidx961, align 4, !tbaa !25
  %add962 = add nsw i32 %396, %mul957
  store i32 %add962, ptr %arrayidx961, align 4, !tbaa !25
  %397 = lshr i64 34362885645, %indvars.iv3383
  %398 = and i64 %397, 1
  %tobool965.not.not = icmp eq i64 %398, 0
  %cond972 = select i1 %tobool924.not.not, i32 -256, i32 256
  %cond975 = select i1 %tobool965.not.not, i32 %cond972, i32 181
  %mul983 = mul i32 %mul931, %cond975
  %arrayidx987 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 %idxprom895
  %399 = load i32, ptr %arrayidx987, align 4, !tbaa !25
  %add988 = add nsw i32 %399, %mul983
  store i32 %add988, ptr %arrayidx987, align 4, !tbaa !25
  %indvars.iv.next3384 = add nuw nsw i64 %indvars.iv3383, 1
  %exitcond3389.not = icmp eq i64 %indvars.iv.next3384, 64
  br i1 %exitcond3389.not, label %if.end1074, label %for.body892, !llvm.loop !142

if.else993:                                       ; preds = %if.end840
  %sub994 = add nsw i32 %and844, -1
  %idxprom995 = zext i32 %sub994 to i64
  %arrayidx996 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %idxprom995
  %400 = load i8, ptr %arrayidx996, align 1, !tbaa !9
  %idxprom997 = zext i8 %400 to i64
  %arrayidx998 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %idxprom997
  %401 = load i32, ptr %arrayidx998, align 4, !tbaa !25
  %sub1000 = add nuw i32 %sub994, %mul843
  %402 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4qtab, i64 0, i32 3), align 8, !tbaa !22
  %idxprom.i2514 = sext i32 %sub1000 to i64
  %arrayidx.i2515 = getelementptr inbounds i8, ptr %402, i64 %idxprom.i2514
  %403 = load i8, ptr %arrayidx.i2515, align 1, !tbaa !9
  %conv1002 = zext i8 %403 to i32
  %add1003 = add nuw nsw i32 %conv1002, 1
  %sub1005 = add nsw i32 %326, -1
  %404 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %sub.i2516 = add nsw i32 %404, -1
  %and.i2517 = and i32 %sub.i2516, %sub1005
  %405 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %idxprom.i.i2518 = sext i32 %and.i2517 to i64
  %arrayidx.i.i2519 = getelementptr inbounds i32, ptr %405, i64 %idxprom.i.i2518
  %406 = load i32, ptr %arrayidx.i.i2519, align 4, !tbaa !25
  %mul1004 = mul i32 %406, %add1003
  %mul1007 = mul i32 %mul1004, %401
  %arrayidx1010 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %idxprom995
  %407 = load i8, ptr %arrayidx1010, align 1, !tbaa !9
  %idxprom1011 = zext i8 %407 to i64
  %arrayidx1012 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 %idxprom1011
  %408 = load i32, ptr %arrayidx1012, align 4, !tbaa !25
  %sub1013 = sub nsw i32 %408, %mul1007
  store i32 %sub1013, ptr %arrayidx1012, align 4, !tbaa !25
  %arrayidx1018 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %idxprom1011
  %409 = load i32, ptr %arrayidx1018, align 4, !tbaa !25
  %mul1027 = mul i32 %mul1004, %409
  %arrayidx1032 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 %idxprom997
  %410 = load i32, ptr %arrayidx1032, align 4, !tbaa !25
  %sub1033 = sub nsw i32 %410, %mul1027
  store i32 %sub1033, ptr %arrayidx1032, align 4, !tbaa !25
  %411 = lshr i64 402702435, %idxprom995
  %412 = and i64 %411, 1
  %tobool1037.not.not = icmp eq i64 %412, 0
  %cond1038.neg = select i1 %tobool1037.not.not, i32 -256, i32 -181
  %mul1047.neg = mul i32 %mul1004, %cond1038.neg
  %arrayidx1052 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 %idxprom1011
  %413 = load i32, ptr %arrayidx1052, align 4, !tbaa !25
  %sub1053 = add i32 %413, %mul1047.neg
  store i32 %sub1053, ptr %arrayidx1052, align 4, !tbaa !25
  %414 = lshr i64 34362885645, %idxprom995
  %415 = and i64 %414, 1
  %tobool1057.not.not = icmp eq i64 %415, 0
  %cond1058.neg = select i1 %tobool1057.not.not, i32 -256, i32 -181
  %mul1067.neg = mul i32 %mul1004, %cond1058.neg
  %arrayidx1072 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 %idxprom997
  %416 = load i32, ptr %arrayidx1072, align 4, !tbaa !25
  %sub1073 = add i32 %416, %mul1067.neg
  store i32 %sub1073, ptr %arrayidx1072, align 4, !tbaa !25
  br label %if.end1074

if.end1074:                                       ; preds = %for.body892, %if.else993
  %417 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4sumv, i64 0, i32 3), align 8, !tbaa !61
  %418 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4sumu, i64 0, i32 3), align 8, !tbaa !61
  %419 = load i32, ptr @_ZZ9jpegModelR5MixerE2kx, align 16, !tbaa !25
  %420 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumv2, align 16, !tbaa !25
  %mul1085 = mul nsw i32 %420, %419
  %421 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumv3, align 16, !tbaa !25
  %sub1088 = sub nsw i32 8, %419
  %mul1089 = mul nsw i32 %421, %sub1088
  %add1090 = add nsw i32 %mul1089, %mul1085
  %div1091 = sdiv i32 %add1090, 8
  store i32 %div1091, ptr %417, align 4, !tbaa !25
  %422 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 8), align 16, !tbaa !25
  %423 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumu2, align 16, !tbaa !25
  %mul1098 = mul nsw i32 %423, %422
  %424 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumu3, align 16, !tbaa !25
  %sub1101 = sub nsw i32 8, %422
  %mul1102 = mul nsw i32 %424, %sub1101
  %add1103 = add nsw i32 %mul1102, %mul1098
  %div1104 = sdiv i32 %add1103, 8
  store i32 %div1104, ptr %418, align 4, !tbaa !25
  %425 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 1), align 4, !tbaa !25
  %426 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 1), align 4, !tbaa !25
  %mul1085.1 = mul nsw i32 %426, %425
  %427 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 1), align 4, !tbaa !25
  %sub1088.1 = sub nsw i32 8, %425
  %mul1089.1 = mul nsw i32 %427, %sub1088.1
  %add1090.1 = add nsw i32 %mul1089.1, %mul1085.1
  %div1091.1 = sdiv i32 %add1090.1, 8
  %arrayidx.i2539.1 = getelementptr inbounds i32, ptr %417, i64 1
  store i32 %div1091.1, ptr %arrayidx.i2539.1, align 4, !tbaa !25
  %428 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 9), align 4, !tbaa !25
  %429 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 1), align 4, !tbaa !25
  %mul1098.1 = mul nsw i32 %429, %428
  %430 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 1), align 4, !tbaa !25
  %sub1101.1 = sub nsw i32 8, %428
  %mul1102.1 = mul nsw i32 %430, %sub1101.1
  %add1103.1 = add nsw i32 %mul1102.1, %mul1098.1
  %div1104.1 = sdiv i32 %add1103.1, 8
  %arrayidx.i2541.1 = getelementptr inbounds i32, ptr %418, i64 1
  store i32 %div1104.1, ptr %arrayidx.i2541.1, align 4, !tbaa !25
  %431 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 2), align 8, !tbaa !25
  %432 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 2), align 8, !tbaa !25
  %mul1085.2 = mul nsw i32 %432, %431
  %433 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 2), align 8, !tbaa !25
  %sub1088.2 = sub nsw i32 8, %431
  %mul1089.2 = mul nsw i32 %433, %sub1088.2
  %add1090.2 = add nsw i32 %mul1089.2, %mul1085.2
  %div1091.2 = sdiv i32 %add1090.2, 8
  %arrayidx.i2539.2 = getelementptr inbounds i32, ptr %417, i64 2
  store i32 %div1091.2, ptr %arrayidx.i2539.2, align 4, !tbaa !25
  %434 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 10), align 8, !tbaa !25
  %435 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 2), align 8, !tbaa !25
  %mul1098.2 = mul nsw i32 %435, %434
  %436 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 2), align 8, !tbaa !25
  %sub1101.2 = sub nsw i32 8, %434
  %mul1102.2 = mul nsw i32 %436, %sub1101.2
  %add1103.2 = add nsw i32 %mul1102.2, %mul1098.2
  %div1104.2 = sdiv i32 %add1103.2, 8
  %arrayidx.i2541.2 = getelementptr inbounds i32, ptr %418, i64 2
  store i32 %div1104.2, ptr %arrayidx.i2541.2, align 4, !tbaa !25
  %437 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 3), align 4, !tbaa !25
  %438 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 3), align 4, !tbaa !25
  %mul1085.3 = mul nsw i32 %438, %437
  %439 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 3), align 4, !tbaa !25
  %sub1088.3 = sub nsw i32 8, %437
  %mul1089.3 = mul nsw i32 %439, %sub1088.3
  %add1090.3 = add nsw i32 %mul1089.3, %mul1085.3
  %div1091.3 = sdiv i32 %add1090.3, 8
  %arrayidx.i2539.3 = getelementptr inbounds i32, ptr %417, i64 3
  store i32 %div1091.3, ptr %arrayidx.i2539.3, align 4, !tbaa !25
  %440 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 11), align 4, !tbaa !25
  %441 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 3), align 4, !tbaa !25
  %mul1098.3 = mul nsw i32 %441, %440
  %442 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 3), align 4, !tbaa !25
  %sub1101.3 = sub nsw i32 8, %440
  %mul1102.3 = mul nsw i32 %442, %sub1101.3
  %add1103.3 = add nsw i32 %mul1102.3, %mul1098.3
  %div1104.3 = sdiv i32 %add1103.3, 8
  %arrayidx.i2541.3 = getelementptr inbounds i32, ptr %418, i64 3
  store i32 %div1104.3, ptr %arrayidx.i2541.3, align 4, !tbaa !25
  %443 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 4), align 16, !tbaa !25
  %444 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 4), align 16, !tbaa !25
  %mul1085.4 = mul nsw i32 %444, %443
  %445 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 4), align 16, !tbaa !25
  %sub1088.4 = sub nsw i32 8, %443
  %mul1089.4 = mul nsw i32 %445, %sub1088.4
  %add1090.4 = add nsw i32 %mul1089.4, %mul1085.4
  %div1091.4 = sdiv i32 %add1090.4, 8
  %arrayidx.i2539.4 = getelementptr inbounds i32, ptr %417, i64 4
  store i32 %div1091.4, ptr %arrayidx.i2539.4, align 4, !tbaa !25
  %446 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 12), align 16, !tbaa !25
  %447 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 4), align 16, !tbaa !25
  %mul1098.4 = mul nsw i32 %447, %446
  %448 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 4), align 16, !tbaa !25
  %sub1101.4 = sub nsw i32 8, %446
  %mul1102.4 = mul nsw i32 %448, %sub1101.4
  %add1103.4 = add nsw i32 %mul1102.4, %mul1098.4
  %div1104.4 = sdiv i32 %add1103.4, 8
  %arrayidx.i2541.4 = getelementptr inbounds i32, ptr %418, i64 4
  store i32 %div1104.4, ptr %arrayidx.i2541.4, align 4, !tbaa !25
  %449 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 5), align 4, !tbaa !25
  %450 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 5), align 4, !tbaa !25
  %mul1085.5 = mul nsw i32 %450, %449
  %451 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 5), align 4, !tbaa !25
  %sub1088.5 = sub nsw i32 8, %449
  %mul1089.5 = mul nsw i32 %451, %sub1088.5
  %add1090.5 = add nsw i32 %mul1089.5, %mul1085.5
  %div1091.5 = sdiv i32 %add1090.5, 8
  %arrayidx.i2539.5 = getelementptr inbounds i32, ptr %417, i64 5
  store i32 %div1091.5, ptr %arrayidx.i2539.5, align 4, !tbaa !25
  %452 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 13), align 4, !tbaa !25
  %453 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 5), align 4, !tbaa !25
  %mul1098.5 = mul nsw i32 %453, %452
  %454 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 5), align 4, !tbaa !25
  %sub1101.5 = sub nsw i32 8, %452
  %mul1102.5 = mul nsw i32 %454, %sub1101.5
  %add1103.5 = add nsw i32 %mul1102.5, %mul1098.5
  %div1104.5 = sdiv i32 %add1103.5, 8
  %arrayidx.i2541.5 = getelementptr inbounds i32, ptr %418, i64 5
  store i32 %div1104.5, ptr %arrayidx.i2541.5, align 4, !tbaa !25
  %455 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 6), align 8, !tbaa !25
  %456 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 6), align 8, !tbaa !25
  %mul1085.6 = mul nsw i32 %456, %455
  %457 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 6), align 8, !tbaa !25
  %sub1088.6 = sub nsw i32 8, %455
  %mul1089.6 = mul nsw i32 %457, %sub1088.6
  %add1090.6 = add nsw i32 %mul1089.6, %mul1085.6
  %div1091.6 = sdiv i32 %add1090.6, 8
  %arrayidx.i2539.6 = getelementptr inbounds i32, ptr %417, i64 6
  store i32 %div1091.6, ptr %arrayidx.i2539.6, align 4, !tbaa !25
  %458 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 14), align 8, !tbaa !25
  %459 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 6), align 8, !tbaa !25
  %mul1098.6 = mul nsw i32 %459, %458
  %460 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 6), align 8, !tbaa !25
  %sub1101.6 = sub nsw i32 8, %458
  %mul1102.6 = mul nsw i32 %460, %sub1101.6
  %add1103.6 = add nsw i32 %mul1102.6, %mul1098.6
  %div1104.6 = sdiv i32 %add1103.6, 8
  %arrayidx.i2541.6 = getelementptr inbounds i32, ptr %418, i64 6
  store i32 %div1104.6, ptr %arrayidx.i2541.6, align 4, !tbaa !25
  %461 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 7), align 4, !tbaa !25
  %462 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 7), align 4, !tbaa !25
  %mul1085.7 = mul nsw i32 %462, %461
  %463 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 7), align 4, !tbaa !25
  %sub1088.7 = sub nsw i32 8, %461
  %mul1089.7 = mul nsw i32 %463, %sub1088.7
  %add1090.7 = add nsw i32 %mul1089.7, %mul1085.7
  %div1091.7 = sdiv i32 %add1090.7, 8
  %arrayidx.i2539.7 = getelementptr inbounds i32, ptr %417, i64 7
  store i32 %div1091.7, ptr %arrayidx.i2539.7, align 4, !tbaa !25
  %464 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 15), align 4, !tbaa !25
  %465 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 7), align 4, !tbaa !25
  %mul1098.7 = mul nsw i32 %465, %464
  %466 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 7), align 4, !tbaa !25
  %sub1101.7 = sub nsw i32 8, %464
  %mul1102.7 = mul nsw i32 %466, %sub1101.7
  %add1103.7 = add nsw i32 %mul1102.7, %mul1098.7
  %div1104.7 = sdiv i32 %add1103.7, 8
  %arrayidx.i2541.7 = getelementptr inbounds i32, ptr %418, i64 7
  store i32 %div1104.7, ptr %arrayidx.i2541.7, align 4, !tbaa !25
  %467 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4sumu, i64 0, i32 3), align 8, !tbaa !61
  %468 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4sumv, i64 0, i32 3), align 8, !tbaa !61
  %469 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4qtab, i64 0, i32 3), align 8, !tbaa !22
  %idxprom1122.peel.phi.trans.insert = zext i32 %and844 to i64
  %arrayidx1123.peel.phi.trans.insert = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %idxprom1122.peel.phi.trans.insert
  %.pre3438 = load i8, ptr %arrayidx1123.peel.phi.trans.insert, align 1, !tbaa !9
  %arrayidx1128.peel.phi.trans.insert = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %idxprom1122.peel.phi.trans.insert
  %.pre3440 = load i8, ptr %arrayidx1128.peel.phi.trans.insert, align 1, !tbaa !9
  %idxprom.i2546.peel = zext i8 %.pre3438 to i64
  %arrayidx.i2547.peel = getelementptr inbounds i32, ptr %467, i64 %idxprom.i2546.peel
  %idxprom.i2548.peel = zext i8 %.pre3440 to i64
  %arrayidx.i2549.peel = getelementptr inbounds i32, ptr %468, i64 %idxprom.i2548.peel
  %add1135.peel = or i32 %and844, %mul843
  %idxprom.i2550.peel = sext i32 %add1135.peel to i64
  %arrayidx.i2551.peel = getelementptr inbounds i8, ptr %469, i64 %idxprom.i2550.peel
  br label %for.cond1115.preheader

for.cond1115.preheader:                           ; preds = %if.end1074, %cleanup1212
  %indvars.iv3397 = phi i64 [ 0, %if.end1074 ], [ %indvars.iv.next3398, %cleanup1212 ]
  %470 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8
  %471 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE8adv_pred, i64 0, i32 3), align 8
  %arrayidx.i2568 = getelementptr inbounds i32, ptr %471, i64 %indvars.iv3397
  %472 = add nuw nsw i64 %indvars.iv3397, 4
  %arrayidx.i2566 = getelementptr inbounds i32, ptr %471, i64 %472
  %473 = load i32, ptr %arrayidx.i2547.peel, align 4, !tbaa !25
  %474 = trunc i64 %indvars.iv3397 to i32
  %mul1126.peel = mul nsw i32 %473, %474
  %475 = load i32, ptr %arrayidx.i2549.peel, align 4, !tbaa !25
  %476 = trunc i64 %indvars.iv3397 to i32
  %477 = sub i32 2, %476
  %mul1132.peel = mul nsw i32 %475, %477
  %add1133.peel = add nsw i32 %mul1132.peel, %mul1126.peel
  %div1134.peel = sdiv i32 %add1133.peel, 2
  %478 = load i8, ptr %arrayidx.i2551.peel, align 1, !tbaa !9
  %conv1137.peel = zext i8 %478 to i32
  %479 = mul nuw nsw i32 %conv1137.peel, 181
  %mul1139.peel = add nuw nsw i32 %479, 181
  %div1140.peel = sdiv i32 %div1134.peel, %mul1139.peel
  br i1 %cmp846, label %if.then1142.peel, label %for.body1118.peel.next

if.then1142.peel:                                 ; preds = %for.cond1115.preheader
  %480 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8
  %481 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8
  %arrayidx.i2553 = getelementptr inbounds i32, ptr %481, i64 %idxprom.i2486
  %482 = load i32, ptr %arrayidx.i2553, align 4, !tbaa !25
  %sub1144.peel = sub nsw i32 %sub845, %482
  %483 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %sub.i2554.peel = add nsw i32 %483, -1
  %and.i2555.peel = and i32 %sub.i2554.peel, %sub1144.peel
  %idxprom.i.i2556.peel = sext i32 %and.i2555.peel to i64
  %arrayidx.i.i2557.peel = getelementptr inbounds i32, ptr %480, i64 %idxprom.i.i2556.peel
  %484 = load i32, ptr %arrayidx.i.i2557.peel, align 4, !tbaa !25
  %sub1146.peel = sub nsw i32 %div1140.peel, %484
  br label %for.body1118.peel.next

for.body1118.peel.next:                           ; preds = %for.cond1115.preheader, %if.then1142.peel
  %div1140.peel.sink3516 = phi i32 [ %sub1146.peel, %if.then1142.peel ], [ %div1140.peel, %for.cond1115.preheader ]
  %.sink3515 = phi i32 [ 14, %if.then1142.peel ], [ 10, %for.cond1115.preheader ]
  %call1159.peel = tail call i32 @llvm.abs.i32(i32 %div1140.peel.sink3516, i1 true)
  %485 = mul i32 %call1159.peel, %.sink3515
  %486 = and i32 %485, 65534
  %487 = or i32 %486, 1
  %idxprom.i.i2560.peel = zext i32 %487 to i64
  %arrayidx.i.i2561.peel = getelementptr inbounds i8, ptr %470, i64 %idxprom.i.i2560.peel
  %488 = load i8, ptr %arrayidx.i.i2561.peel, align 1, !tbaa !9
  %conv2.i2562.peel = zext i8 %488 to i32
  %489 = sub nsw i32 0, %conv2.i2562.peel
  %cmp1157.inv3166.peel = icmp slt i32 %div1140.peel.sink3516, 0
  %mul1164.peel = select i1 %cmp1157.inv3166.peel, i32 %489, i32 %conv2.i2562.peel
  %p1121.0.lhs.trunc.peel = trunc i32 %mul1164.peel to i16
  %p1121.03228.peel = sdiv i16 %p1121.0.lhs.trunc.peel, 10
  %p1121.0.sext.peel = sext i16 %p1121.03228.peel to i32
  store i32 %p1121.0.sext.peel, ptr %arrayidx.i2568, align 4, !tbaa !25
  %div11703229.peel = sdiv i16 %p1121.0.lhs.trunc.peel, 40
  %div1170.sext.peel = sext i16 %div11703229.peel to i32
  store i32 %div1170.sext.peel, ptr %arrayidx.i2566, align 4, !tbaa !25
  %call1176 = tail call i32 @llvm.abs.i32(i32 %p1121.0.sext.peel, i1 true)
  %add1177 = add nuw nsw i32 %call1176, 1
  br label %if.else1173

if.else1173:                                      ; preds = %for.inc1210, %for.body1118.peel.next
  %st.03316 = phi i32 [ 1, %for.body1118.peel.next ], [ %inc1211, %for.inc1210 ]
  %add1119 = add nuw nsw i32 %st.03316, %and844
  %cond.i = tail call i32 @llvm.smin.i32(i32 %add1119, i32 63)
  %idxprom1122 = zext i32 %cond.i to i64
  %arrayidx1128 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %idxprom1122
  %490 = load i8, ptr %arrayidx1128, align 1, !tbaa !9
  %idxprom.i2548 = zext i8 %490 to i64
  %arrayidx.i2549 = getelementptr inbounds i32, ptr %468, i64 %idxprom.i2548
  %491 = load i32, ptr %arrayidx.i2549, align 4, !tbaa !25
  %mul1132 = mul nsw i32 %491, %477
  %arrayidx1123 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %idxprom1122
  %492 = load i8, ptr %arrayidx1123, align 1, !tbaa !9
  %idxprom.i2546 = zext i8 %492 to i64
  %arrayidx.i2547 = getelementptr inbounds i32, ptr %467, i64 %idxprom.i2546
  %493 = load i32, ptr %arrayidx.i2547, align 4, !tbaa !25
  %mul1126 = mul nsw i32 %493, %474
  %add1133 = add nsw i32 %mul1132, %mul1126
  %div1134 = sdiv i32 %add1133, 2
  %add1135 = or i32 %cond.i, %mul843
  %idxprom.i2550 = sext i32 %add1135 to i64
  %arrayidx.i2551 = getelementptr inbounds i8, ptr %469, i64 %idxprom.i2550
  %494 = load i8, ptr %arrayidx.i2551, align 1, !tbaa !9
  %conv1137 = zext i8 %494 to i32
  %495 = mul nuw nsw i32 %conv1137, 181
  %mul1139 = add nuw nsw i32 %495, 181
  %div1140 = sdiv i32 %div1134, %mul1139
  %call1159 = tail call i32 @llvm.abs.i32(i32 %div1140, i1 true)
  %496 = mul nuw nsw i32 %call1159, 10
  %497 = and i32 %496, 65534
  %498 = or i32 %497, 1
  %idxprom.i.i2560 = zext i32 %498 to i64
  %arrayidx.i.i2561 = getelementptr inbounds i8, ptr %470, i64 %idxprom.i.i2560
  %499 = load i8, ptr %arrayidx.i.i2561, align 1, !tbaa !9
  %conv2.i2562 = zext i8 %499 to i32
  %500 = sub nsw i32 0, %conv2.i2562
  %cmp1157.inv3166 = icmp slt i32 %div1140, 0
  %mul1164 = select i1 %cmp1157.inv3166, i32 %500, i32 %conv2.i2562
  %p1121.0.lhs.trunc = trunc i32 %mul1164 to i16
  %p1121.03228 = sdiv i16 %p1121.0.lhs.trunc, 10
  %501 = tail call i16 @llvm.abs.i16(i16 %p1121.03228, i1 true)
  %call1174 = zext i16 %501 to i32
  %cmp1178 = icmp ult i32 %add1177, %call1174
  br i1 %cmp1178, label %if.then1179, label %for.inc1210

if.then1179:                                      ; preds = %if.else1173
  %cmp1181 = icmp sgt i32 %mul1164, 9
  %502 = shl nuw nsw i32 %st.03316, 7
  %503 = select i1 %cmp1181, i32 64, i32 0
  %shl1184 = or i32 %503, %502
  %add1186 = add nsw i32 %shl1184, %p1121.0.sext.peel
  store i32 %add1186, ptr %arrayidx.i2568, align 4, !tbaa !25
  %div1187.lhs.trunc = trunc i32 %mul1164 to i16
  %div11873230 = sdiv i16 %div1187.lhs.trunc, 40
  %504 = tail call i16 @llvm.abs.i16(i16 %div11873230, i1 true)
  %call1188 = zext i16 %504 to i32
  %505 = load i32, ptr %arrayidx.i2566, align 4, !tbaa !25
  %call1191 = tail call i32 @llvm.abs.i32(i32 %505, i1 true)
  %add1192 = add nuw nsw i32 %call1191, 1
  %cmp1193 = icmp ult i32 %add1192, %call1188
  br i1 %cmp1193, label %if.then1194, label %cleanup1212

if.then1194:                                      ; preds = %if.then1179
  %add1202 = add nsw i32 %505, %shl1184
  store i32 %add1202, ptr %arrayidx.i2566, align 4, !tbaa !25
  br label %cleanup1212

for.inc1210:                                      ; preds = %if.else1173
  %inc1211 = add nuw nsw i32 %st.03316, 1
  %exitcond3395.not = icmp eq i32 %inc1211, 8
  br i1 %exitcond3395.not, label %cleanup1212, label %if.else1173, !llvm.loop !143

cleanup1212:                                      ; preds = %for.inc1210, %if.then1194, %if.then1179
  %indvars.iv.next3398 = add nuw nsw i64 %indvars.iv3397, 1
  %exitcond3403.not = icmp eq i64 %indvars.iv.next3398, 3
  br i1 %exitcond3403.not, label %for.inc1250, label %for.cond1115.preheader, !llvm.loop !144

for.inc1250:                                      ; preds = %cleanup1212
  %arrayidx.i2547.peel.le = getelementptr inbounds i32, ptr %467, i64 %idxprom.i2546.peel
  %arrayidx.i2549.peel.le = getelementptr inbounds i32, ptr %468, i64 %idxprom.i2548.peel
  %arrayidx.i2551.peel.le = getelementptr inbounds i8, ptr %469, i64 %idxprom.i2550.peel
  %conv1220 = zext i8 %.pre3438 to i32
  %506 = load i32, ptr %arrayidx.i2547.peel.le, align 4, !tbaa !25
  %conv1225 = zext i8 %.pre3440 to i32
  %507 = load i32, ptr %arrayidx.i2549.peel.le, align 4, !tbaa !25
  %mul12223163 = add i32 %507, %506
  %add1228 = shl i32 %mul12223163, 1
  %508 = lshr i64 34362885645, %idxprom1122.peel.phi.trans.insert
  %509 = and i64 %508, 1
  %cmp1237.1.not = icmp eq i64 %509, 0
  br i1 %cmp1237.1.not, label %if.end1241.1, label %if.then1238.1

if.then1238.1:                                    ; preds = %for.inc1250
  %arrayidx.i2578.1 = getelementptr inbounds i32, ptr %467, i64 1
  %510 = load i32, ptr %arrayidx.i2578.1, align 4, !tbaa !25
  %sub1240.1 = sub nsw i32 %add1228, %510
  br label %if.end1241.1

if.end1241.1:                                     ; preds = %if.then1238.1, %for.inc1250
  %x.3.1 = phi i32 [ %sub1240.1, %if.then1238.1 ], [ %add1228, %for.inc1250 ]
  %511 = lshr i64 402702435, %idxprom1122.peel.phi.trans.insert
  %512 = and i64 %511, 1
  %cmp1245.1.not = icmp eq i64 %512, 0
  br i1 %cmp1245.1.not, label %for.inc1250.1, label %if.then1246.1

if.then1246.1:                                    ; preds = %if.end1241.1
  %arrayidx.i2580.1 = getelementptr inbounds i32, ptr %468, i64 1
  %513 = load i32, ptr %arrayidx.i2580.1, align 4, !tbaa !25
  %sub1248.1 = sub nsw i32 %x.3.1, %513
  br label %for.inc1250.1

for.inc1250.1:                                    ; preds = %if.then1246.1, %if.end1241.1
  %x.4.1 = phi i32 [ %sub1248.1, %if.then1246.1 ], [ %x.3.1, %if.end1241.1 ]
  %514 = lshr i64 120266952479, %idxprom1122.peel.phi.trans.insert
  %515 = and i64 %514, 1
  %cmp1237.2.not = icmp eq i64 %515, 0
  br i1 %cmp1237.2.not, label %if.end1241.2, label %if.then1238.2

if.then1238.2:                                    ; preds = %for.inc1250.1
  %arrayidx.i2578.2 = getelementptr inbounds i32, ptr %467, i64 2
  %516 = load i32, ptr %arrayidx.i2578.2, align 4, !tbaa !25
  %sub1240.2 = sub nsw i32 %x.4.1, %516
  br label %if.end1241.2

if.end1241.2:                                     ; preds = %if.then1238.2, %for.inc1250.1
  %x.3.2 = phi i32 [ %sub1240.2, %if.then1238.2 ], [ %x.4.1, %for.inc1250.1 ]
  %517 = lshr i64 4399053267191, %idxprom1122.peel.phi.trans.insert
  %518 = and i64 %517, 1
  %cmp1245.2.not = icmp eq i64 %518, 0
  br i1 %cmp1245.2.not, label %for.inc1250.2, label %if.then1246.2

if.then1246.2:                                    ; preds = %if.end1241.2
  %arrayidx.i2580.2 = getelementptr inbounds i32, ptr %468, i64 2
  %519 = load i32, ptr %arrayidx.i2580.2, align 4, !tbaa !25
  %sub1248.2 = sub nsw i32 %x.3.2, %519
  br label %for.inc1250.2

for.inc1250.2:                                    ; preds = %if.then1246.2, %if.end1241.2
  %x.4.2 = phi i32 [ %sub1248.2, %if.then1246.2 ], [ %x.3.2, %if.end1241.2 ]
  %520 = lshr i64 281741281206207, %idxprom1122.peel.phi.trans.insert
  %521 = and i64 %520, 1
  %cmp1237.3.not = icmp eq i64 %521, 0
  br i1 %cmp1237.3.not, label %if.end1241.3, label %if.then1238.3

if.then1238.3:                                    ; preds = %for.inc1250.2
  %arrayidx.i2578.3 = getelementptr inbounds i32, ptr %467, i64 3
  %522 = load i32, ptr %arrayidx.i2578.3, align 4, !tbaa !25
  %sub1240.3 = sub nsw i32 %x.4.2, %522
  br label %if.end1241.3

if.end1241.3:                                     ; preds = %if.then1238.3, %for.inc1250.2
  %x.3.3 = phi i32 [ %sub1240.3, %if.then1238.3 ], [ %x.4.2, %for.inc1250.2 ]
  %523 = lshr i64 15395276976639, %idxprom1122.peel.phi.trans.insert
  %524 = and i64 %523, 1
  %cmp1245.3.not = icmp eq i64 %524, 0
  br i1 %cmp1245.3.not, label %for.inc1250.3, label %if.then1246.3

if.then1246.3:                                    ; preds = %if.end1241.3
  %arrayidx.i2580.3 = getelementptr inbounds i32, ptr %468, i64 3
  %525 = load i32, ptr %arrayidx.i2580.3, align 4, !tbaa !25
  %sub1248.3 = sub nsw i32 %x.3.3, %525
  br label %for.inc1250.3

for.inc1250.3:                                    ; preds = %if.then1246.3, %if.end1241.3
  %x.4.3 = phi i32 [ %sub1248.3, %if.then1246.3 ], [ %x.3.3, %if.end1241.3 ]
  %526 = lshr i64 985707912773631, %idxprom1122.peel.phi.trans.insert
  %527 = and i64 %526, 1
  %cmp1237.4.not = icmp eq i64 %527, 0
  br i1 %cmp1237.4.not, label %if.end1241.4, label %if.then1238.4

if.then1238.4:                                    ; preds = %for.inc1250.3
  %arrayidx.i2578.4 = getelementptr inbounds i32, ptr %467, i64 4
  %528 = load i32, ptr %arrayidx.i2578.4, align 4, !tbaa !25
  %sub1240.4 = sub nsw i32 %x.4.3, %528
  br label %if.end1241.4

if.end1241.4:                                     ; preds = %if.then1238.4, %for.inc1250.3
  %x.3.4 = phi i32 [ %sub1240.4, %if.then1238.4 ], [ %x.4.3, %for.inc1250.3 ]
  %529 = lshr i64 9041288393915391, %idxprom1122.peel.phi.trans.insert
  %530 = and i64 %529, 1
  %cmp1245.4.not = icmp eq i64 %530, 0
  br i1 %cmp1245.4.not, label %for.inc1250.4, label %if.then1246.4

if.then1246.4:                                    ; preds = %if.end1241.4
  %arrayidx.i2580.4 = getelementptr inbounds i32, ptr %468, i64 4
  %531 = load i32, ptr %arrayidx.i2580.4, align 4, !tbaa !25
  %sub1248.4 = sub nsw i32 %x.3.4, %531
  br label %for.inc1250.4

for.inc1250.4:                                    ; preds = %if.then1246.4, %if.end1241.4
  %x.4.4 = phi i32 [ %sub1248.4, %if.then1246.4 ], [ %x.3.4, %if.end1241.4 ]
  %532 = lshr i64 146297716576583679, %idxprom1122.peel.phi.trans.insert
  %533 = and i64 %532, 1
  %cmp1237.5.not = icmp eq i64 %533, 0
  br i1 %cmp1237.5.not, label %if.end1241.5, label %if.then1238.5

if.then1238.5:                                    ; preds = %for.inc1250.4
  %arrayidx.i2578.5 = getelementptr inbounds i32, ptr %467, i64 5
  %534 = load i32, ptr %arrayidx.i2578.5, align 4, !tbaa !25
  %sub1240.5 = sub nsw i32 %x.4.4, %534
  br label %if.end1241.5

if.end1241.5:                                     ; preds = %if.then1238.5, %for.inc1250.4
  %x.3.5 = phi i32 [ %sub1240.5, %if.then1238.5 ], [ %x.4.4, %for.inc1250.4 ]
  %535 = lshr i64 31595024962551807, %idxprom1122.peel.phi.trans.insert
  %536 = and i64 %535, 1
  %cmp1245.5.not = icmp eq i64 %536, 0
  br i1 %cmp1245.5.not, label %for.inc1250.5, label %if.then1246.5

if.then1246.5:                                    ; preds = %if.end1241.5
  %arrayidx.i2580.5 = getelementptr inbounds i32, ptr %468, i64 5
  %537 = load i32, ptr %arrayidx.i2580.5, align 4, !tbaa !25
  %sub1248.5 = sub nsw i32 %x.3.5, %537
  br label %for.inc1250.5

for.inc1250.5:                                    ; preds = %if.then1246.5, %if.end1241.5
  %x.4.5 = phi i32 [ %sub1248.5, %if.then1246.5 ], [ %x.3.5, %if.end1241.5 ]
  %538 = lshr i64 508873771604508671, %idxprom1122.peel.phi.trans.insert
  %539 = and i64 %538, 1
  %cmp1237.6.not = icmp eq i64 %539, 0
  br i1 %cmp1237.6.not, label %if.end1241.6, label %if.then1238.6

if.then1238.6:                                    ; preds = %for.inc1250.5
  %arrayidx.i2578.6 = getelementptr inbounds i32, ptr %467, i64 6
  %540 = load i32, ptr %arrayidx.i2578.6, align 4, !tbaa !25
  %sub1240.6 = sub nsw i32 %x.4.5, %540
  br label %if.end1241.6

if.end1241.6:                                     ; preds = %if.then1238.6, %for.inc1250.5
  %x.3.6 = phi i32 [ %sub1240.6, %if.then1238.6 ], [ %x.4.5, %for.inc1250.5 ]
  %541 = lshr i64 1222867778619310079, %idxprom1122.peel.phi.trans.insert
  %542 = and i64 %541, 1
  %cmp1245.6.not = icmp eq i64 %542, 0
  br i1 %cmp1245.6.not, label %for.inc1250.6, label %if.then1246.6

if.then1246.6:                                    ; preds = %if.end1241.6
  %arrayidx.i2580.6 = getelementptr inbounds i32, ptr %468, i64 6
  %543 = load i32, ptr %arrayidx.i2580.6, align 4, !tbaa !25
  %sub1248.6 = sub nsw i32 %x.3.6, %543
  br label %for.inc1250.6

for.inc1250.6:                                    ; preds = %if.then1246.6, %if.end1241.6
  %x.4.6 = phi i32 [ %sub1248.6, %if.then1246.6 ], [ %x.3.6, %if.end1241.6 ]
  %544 = lshr i64 5737572730862043135, %idxprom1122.peel.phi.trans.insert
  %545 = and i64 %544, 1
  %cmp1237.7.not = icmp eq i64 %545, 0
  br i1 %cmp1237.7.not, label %if.end1241.7, label %if.then1238.7

if.then1238.7:                                    ; preds = %for.inc1250.6
  %arrayidx.i2578.7 = getelementptr inbounds i32, ptr %467, i64 7
  %546 = load i32, ptr %arrayidx.i2578.7, align 4, !tbaa !25
  %sub1240.7 = sub nsw i32 %x.4.6, %546
  br label %if.end1241.7

if.end1241.7:                                     ; preds = %if.then1238.7, %for.inc1250.6
  %x.3.7 = phi i32 [ %sub1240.7, %if.then1238.7 ], [ %x.4.6, %for.inc1250.6 ]
  %547 = lshr i64 4178495926190473215, %idxprom1122.peel.phi.trans.insert
  %548 = and i64 %547, 1
  %cmp1245.7.not = icmp eq i64 %548, 0
  br i1 %cmp1245.7.not, label %for.inc1250.7, label %if.then1246.7

if.then1246.7:                                    ; preds = %if.end1241.7
  %arrayidx.i2580.7 = getelementptr inbounds i32, ptr %468, i64 7
  %549 = load i32, ptr %arrayidx.i2580.7, align 4, !tbaa !25
  %sub1248.7 = sub nsw i32 %x.3.7, %549
  br label %for.inc1250.7

for.inc1250.7:                                    ; preds = %if.then1246.7, %if.end1241.7
  %x.4.7 = phi i32 [ %sub1248.7, %if.then1246.7 ], [ %x.3.7, %if.end1241.7 ]
  %550 = load i8, ptr %arrayidx.i2551.peel.le, align 1, !tbaa !9
  %conv1256 = zext i8 %550 to i32
  %551 = mul nuw nsw i32 %conv1256, 181
  %mul1258 = add nuw nsw i32 %551, 181
  %div1259 = sdiv i32 %x.4.7, %mul1258
  br i1 %cmp846, label %if.then1261, label %if.end1266

if.then1261:                                      ; preds = %for.inc1250.7
  %552 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8, !tbaa !61
  %arrayidx.i2582 = getelementptr inbounds i32, ptr %552, i64 %idxprom.i2486
  %553 = load i32, ptr %arrayidx.i2582, align 4, !tbaa !25
  %sub1263 = sub nsw i32 %sub845, %553
  %554 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %sub.i2583 = add nsw i32 %554, -1
  %and.i2584 = and i32 %sub.i2583, %sub1263
  %555 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %idxprom.i.i2585 = sext i32 %and.i2584 to i64
  %arrayidx.i.i2586 = getelementptr inbounds i32, ptr %555, i64 %idxprom.i.i2585
  %556 = load i32, ptr %arrayidx.i.i2586, align 4, !tbaa !25
  %sub1265 = sub nsw i32 %div1259, %556
  br label %if.end1266

if.end1266:                                       ; preds = %if.then1261, %for.inc1250.7
  %x.5 = phi i32 [ %sub1265, %if.then1261 ], [ %div1259, %for.inc1250.7 ]
  %call1269 = tail call i32 @llvm.abs.i32(i32 %x.5, i1 true)
  %557 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %558 = mul i32 %call1269, 10
  %559 = and i32 %558, 65534
  %560 = or i32 %559, 1
  %idxprom.i.i2587 = zext i32 %560 to i64
  %arrayidx.i.i2588 = getelementptr inbounds i8, ptr %557, i64 %idxprom.i.i2587
  %561 = load i8, ptr %arrayidx.i.i2588, align 1, !tbaa !9
  %conv2.i2589 = zext i8 %561 to i32
  %562 = sub nsw i32 0, %conv2.i2589
  %cmp1267.inv3164 = icmp slt i32 %x.5, 0
  %mul1274 = select i1 %cmp1267.inv3164, i32 %562, i32 %conv2.i2589
  %div1275.lhs.trunc = trunc i32 %mul1274 to i16
  %div12753231 = sdiv i16 %div1275.lhs.trunc, 10
  %div1275.sext = sext i16 %div12753231 to i32
  %563 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE8adv_pred, i64 0, i32 3), align 8, !tbaa !61
  %arrayidx.i2590 = getelementptr inbounds i32, ptr %563, i64 3
  store i32 %div1275.sext, ptr %arrayidx.i2590, align 4, !tbaa !25
  %564 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE3lcp, i64 0, i32 3), align 8, !tbaa !61
  %mul1306 = shl nuw nsw i32 %conv1225, 3
  %add1307 = add nuw nsw i32 %mul1306, %conv1220
  %565 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4zpos, i64 0, i32 3), align 8
  %566 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8
  %567 = lshr i64 34362885645, %idxprom1122.peel.phi.trans.insert
  %568 = and i64 %567, 1
  %cmp1296.not = icmp eq i64 %568, 0
  br i1 %cmp1296.not, label %if.else1298, label %if.end1335

if.else1298:                                      ; preds = %if.end1266
  %sub1312 = add nsw i32 %add1307, -1
  %idxprom.i2591 = sext i32 %sub1312 to i64
  %arrayidx.i2592 = getelementptr inbounds i32, ptr %565, i64 %idxprom.i2591
  %569 = load i32, ptr %arrayidx.i2592, align 4, !tbaa !25
  %add1314 = add nsw i32 %569, %mul843
  %idxprom.i2593 = sext i32 %add1314 to i64
  %arrayidx.i2594 = getelementptr inbounds i8, ptr %469, i64 %idxprom.i2593
  %570 = load i8, ptr %arrayidx.i2594, align 1, !tbaa !9
  %conv1316 = zext i8 %570 to i32
  %add1317 = add nuw nsw i32 %conv1316, 1
  %add1318 = add nsw i32 %569, %sub845
  %571 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %sub.i2595 = add nsw i32 %571, -1
  %and.i2596 = and i32 %sub.i2595, %add1318
  %idxprom.i.i2597 = sext i32 %and.i2596 to i64
  %arrayidx.i.i2598 = getelementptr inbounds i32, ptr %566, i64 %idxprom.i.i2597
  %572 = load i32, ptr %arrayidx.i.i2598, align 4, !tbaa !25
  %mul1320 = mul nsw i32 %572, %add1317
  %573 = load i8, ptr %arrayidx.i2551.peel.le, align 1, !tbaa !9
  %conv1323 = zext i8 %573 to i32
  %add1324 = add nuw nsw i32 %conv1323, 1
  %div1325 = sdiv i32 %mul1320, %add1324
  %call1328 = tail call i32 @llvm.abs.i32(i32 %div1325, i1 true)
  %call1328.tr = zext i32 %call1328 to i64
  %574 = shl nuw nsw i64 %call1328.tr, 3
  %conv1331 = and i64 %574, 65528
  %idxprom.i.i2601 = or i64 %conv1331, 1
  %arrayidx.i.i2602 = getelementptr inbounds i8, ptr %557, i64 %idxprom.i.i2601
  %575 = load i8, ptr %arrayidx.i.i2602, align 1, !tbaa !9
  %conv2.i2603 = zext i8 %575 to i32
  %576 = sub nsw i32 0, %conv2.i2603
  %cmp1326.inv3165 = icmp slt i32 %div1325, 0
  %mul1333 = select i1 %cmp1326.inv3165, i32 %576, i32 %conv2.i2603
  %div1334.lhs.trunc = trunc i32 %mul1333 to i16
  %div13343232 = sdiv i16 %div1334.lhs.trunc, 8
  %div1334.sext = sext i16 %div13343232 to i32
  br label %if.end1335

if.end1335:                                       ; preds = %if.end1266, %if.else1298
  %x.6 = phi i32 [ %div1334.sext, %if.else1298 ], [ 255, %if.end1266 ]
  store i32 %x.6, ptr %564, align 4, !tbaa !25
  %577 = lshr i64 402702435, %idxprom1122.peel.phi.trans.insert
  %578 = and i64 %577, 1
  %cmp1296.1.not = icmp eq i64 %578, 0
  br i1 %cmp1296.1.not, label %if.else1298.1, label %if.end1335.1

if.else1298.1:                                    ; preds = %if.end1335
  %sub1312.1 = add nsw i32 %add1307, -8
  %idxprom.i2591.1 = sext i32 %sub1312.1 to i64
  %arrayidx.i2592.1 = getelementptr inbounds i32, ptr %565, i64 %idxprom.i2591.1
  %579 = load i32, ptr %arrayidx.i2592.1, align 4, !tbaa !25
  %add1314.1 = add nsw i32 %579, %mul843
  %idxprom.i2593.1 = sext i32 %add1314.1 to i64
  %arrayidx.i2594.1 = getelementptr inbounds i8, ptr %469, i64 %idxprom.i2593.1
  %580 = load i8, ptr %arrayidx.i2594.1, align 1, !tbaa !9
  %conv1316.1 = zext i8 %580 to i32
  %add1317.1 = add nuw nsw i32 %conv1316.1, 1
  %add1318.1 = add nsw i32 %579, %sub845
  %581 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %sub.i2595.1 = add nsw i32 %581, -1
  %and.i2596.1 = and i32 %sub.i2595.1, %add1318.1
  %idxprom.i.i2597.1 = sext i32 %and.i2596.1 to i64
  %arrayidx.i.i2598.1 = getelementptr inbounds i32, ptr %566, i64 %idxprom.i.i2597.1
  %582 = load i32, ptr %arrayidx.i.i2598.1, align 4, !tbaa !25
  %mul1320.1 = mul nsw i32 %582, %add1317.1
  %583 = load i8, ptr %arrayidx.i2551.peel.le, align 1, !tbaa !9
  %conv1323.1 = zext i8 %583 to i32
  %add1324.1 = add nuw nsw i32 %conv1323.1, 1
  %div1325.1 = sdiv i32 %mul1320.1, %add1324.1
  %call1328.1 = tail call i32 @llvm.abs.i32(i32 %div1325.1, i1 true)
  %call1328.tr.1 = zext i32 %call1328.1 to i64
  %584 = shl nuw nsw i64 %call1328.tr.1, 3
  %conv1331.1 = and i64 %584, 65528
  %idxprom.i.i2601.1 = or i64 %conv1331.1, 1
  %arrayidx.i.i2602.1 = getelementptr inbounds i8, ptr %557, i64 %idxprom.i.i2601.1
  %585 = load i8, ptr %arrayidx.i.i2602.1, align 1, !tbaa !9
  %conv2.i2603.1 = zext i8 %585 to i32
  %586 = sub nsw i32 0, %conv2.i2603.1
  %cmp1326.inv3165.1 = icmp slt i32 %div1325.1, 0
  %mul1333.1 = select i1 %cmp1326.inv3165.1, i32 %586, i32 %conv2.i2603.1
  %div1334.lhs.trunc.1 = trunc i32 %mul1333.1 to i16
  %div13343232.1 = sdiv i16 %div1334.lhs.trunc.1, 8
  %div1334.sext.1 = sext i16 %div13343232.1 to i32
  br label %if.end1335.1

if.end1335.1:                                     ; preds = %if.else1298.1, %if.end1335
  %x.6.1 = phi i32 [ %div1334.sext.1, %if.else1298.1 ], [ 255, %if.end1335 ]
  %arrayidx.i2605.1 = getelementptr inbounds i32, ptr %564, i64 1
  store i32 %x.6.1, ptr %arrayidx.i2605.1, align 4, !tbaa !25
  %587 = lshr i64 120266952479, %idxprom1122.peel.phi.trans.insert
  %588 = and i64 %587, 1
  %cmp1296.2.not = icmp eq i64 %588, 0
  br i1 %cmp1296.2.not, label %if.else1298.2, label %if.end1335.2

if.else1298.2:                                    ; preds = %if.end1335.1
  %sub1312.2 = add nsw i32 %add1307, -2
  %idxprom.i2591.2 = sext i32 %sub1312.2 to i64
  %arrayidx.i2592.2 = getelementptr inbounds i32, ptr %565, i64 %idxprom.i2591.2
  %589 = load i32, ptr %arrayidx.i2592.2, align 4, !tbaa !25
  %add1314.2 = add nsw i32 %589, %mul843
  %idxprom.i2593.2 = sext i32 %add1314.2 to i64
  %arrayidx.i2594.2 = getelementptr inbounds i8, ptr %469, i64 %idxprom.i2593.2
  %590 = load i8, ptr %arrayidx.i2594.2, align 1, !tbaa !9
  %conv1316.2 = zext i8 %590 to i32
  %add1317.2 = add nuw nsw i32 %conv1316.2, 1
  %add1318.2 = add nsw i32 %589, %sub845
  %591 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %sub.i2595.2 = add nsw i32 %591, -1
  %and.i2596.2 = and i32 %sub.i2595.2, %add1318.2
  %idxprom.i.i2597.2 = sext i32 %and.i2596.2 to i64
  %arrayidx.i.i2598.2 = getelementptr inbounds i32, ptr %566, i64 %idxprom.i.i2597.2
  %592 = load i32, ptr %arrayidx.i.i2598.2, align 4, !tbaa !25
  %mul1320.2 = mul nsw i32 %592, %add1317.2
  %593 = load i8, ptr %arrayidx.i2551.peel.le, align 1, !tbaa !9
  %conv1323.2 = zext i8 %593 to i32
  %add1324.2 = add nuw nsw i32 %conv1323.2, 1
  %div1325.2 = sdiv i32 %mul1320.2, %add1324.2
  %call1328.2 = tail call i32 @llvm.abs.i32(i32 %div1325.2, i1 true)
  %call1328.tr.2 = zext i32 %call1328.2 to i64
  %594 = shl nuw nsw i64 %call1328.tr.2, 3
  %conv1331.2 = and i64 %594, 65528
  %idxprom.i.i2601.2 = or i64 %conv1331.2, 1
  %arrayidx.i.i2602.2 = getelementptr inbounds i8, ptr %557, i64 %idxprom.i.i2601.2
  %595 = load i8, ptr %arrayidx.i.i2602.2, align 1, !tbaa !9
  %conv2.i2603.2 = zext i8 %595 to i32
  %596 = sub nsw i32 0, %conv2.i2603.2
  %cmp1326.inv3165.2 = icmp slt i32 %div1325.2, 0
  %mul1333.2 = select i1 %cmp1326.inv3165.2, i32 %596, i32 %conv2.i2603.2
  %div1334.lhs.trunc.2 = trunc i32 %mul1333.2 to i16
  %div13343232.2 = sdiv i16 %div1334.lhs.trunc.2, 8
  %div1334.sext.2 = sext i16 %div13343232.2 to i32
  br label %if.end1335.2

if.end1335.2:                                     ; preds = %if.else1298.2, %if.end1335.1
  %x.6.2 = phi i32 [ %div1334.sext.2, %if.else1298.2 ], [ 255, %if.end1335.1 ]
  %arrayidx.i2605.2 = getelementptr inbounds i32, ptr %564, i64 2
  store i32 %x.6.2, ptr %arrayidx.i2605.2, align 4, !tbaa !25
  %597 = lshr i64 4399053267191, %idxprom1122.peel.phi.trans.insert
  %598 = and i64 %597, 1
  %cmp1296.3.not = icmp eq i64 %598, 0
  br i1 %cmp1296.3.not, label %if.else1298.3, label %if.end1335.3

if.else1298.3:                                    ; preds = %if.end1335.2
  %sub1312.3 = add nsw i32 %add1307, -16
  %idxprom.i2591.3 = sext i32 %sub1312.3 to i64
  %arrayidx.i2592.3 = getelementptr inbounds i32, ptr %565, i64 %idxprom.i2591.3
  %599 = load i32, ptr %arrayidx.i2592.3, align 4, !tbaa !25
  %add1314.3 = add nsw i32 %599, %mul843
  %idxprom.i2593.3 = sext i32 %add1314.3 to i64
  %arrayidx.i2594.3 = getelementptr inbounds i8, ptr %469, i64 %idxprom.i2593.3
  %600 = load i8, ptr %arrayidx.i2594.3, align 1, !tbaa !9
  %conv1316.3 = zext i8 %600 to i32
  %add1317.3 = add nuw nsw i32 %conv1316.3, 1
  %add1318.3 = add nsw i32 %599, %sub845
  %601 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %sub.i2595.3 = add nsw i32 %601, -1
  %and.i2596.3 = and i32 %sub.i2595.3, %add1318.3
  %idxprom.i.i2597.3 = sext i32 %and.i2596.3 to i64
  %arrayidx.i.i2598.3 = getelementptr inbounds i32, ptr %566, i64 %idxprom.i.i2597.3
  %602 = load i32, ptr %arrayidx.i.i2598.3, align 4, !tbaa !25
  %mul1320.3 = mul nsw i32 %602, %add1317.3
  %603 = load i8, ptr %arrayidx.i2551.peel.le, align 1, !tbaa !9
  %conv1323.3 = zext i8 %603 to i32
  %add1324.3 = add nuw nsw i32 %conv1323.3, 1
  %div1325.3 = sdiv i32 %mul1320.3, %add1324.3
  %call1328.3 = tail call i32 @llvm.abs.i32(i32 %div1325.3, i1 true)
  %call1328.tr.3 = zext i32 %call1328.3 to i64
  %604 = shl nuw nsw i64 %call1328.tr.3, 3
  %conv1331.3 = and i64 %604, 65528
  %idxprom.i.i2601.3 = or i64 %conv1331.3, 1
  %arrayidx.i.i2602.3 = getelementptr inbounds i8, ptr %557, i64 %idxprom.i.i2601.3
  %605 = load i8, ptr %arrayidx.i.i2602.3, align 1, !tbaa !9
  %conv2.i2603.3 = zext i8 %605 to i32
  %606 = sub nsw i32 0, %conv2.i2603.3
  %cmp1326.inv3165.3 = icmp slt i32 %div1325.3, 0
  %mul1333.3 = select i1 %cmp1326.inv3165.3, i32 %606, i32 %conv2.i2603.3
  %div1334.lhs.trunc.3 = trunc i32 %mul1333.3 to i16
  %div13343232.3 = sdiv i16 %div1334.lhs.trunc.3, 8
  %div1334.sext.3 = sext i16 %div13343232.3 to i32
  br label %if.end1335.3

if.end1335.3:                                     ; preds = %if.else1298.3, %if.end1335.2
  %x.6.3 = phi i32 [ %div1334.sext.3, %if.else1298.3 ], [ 255, %if.end1335.2 ]
  %arrayidx.i2605.3 = getelementptr inbounds i32, ptr %564, i64 3
  store i32 %x.6.3, ptr %arrayidx.i2605.3, align 4, !tbaa !25
  %607 = load i32, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %cmp1341 = icmp eq i32 %607, 0
  br i1 %cmp1341, label %if.then1342, label %if.end1346

if.then1342:                                      ; preds = %if.end1335.3
  %arrayidx.i2606 = getelementptr inbounds i32, ptr %563, i64 2
  %608 = load i32, ptr %arrayidx.i2606, align 4, !tbaa !25
  %arrayidx.i2607 = getelementptr inbounds i32, ptr %563, i64 1
  store i32 %608, ptr %arrayidx.i2607, align 4, !tbaa !25
  store i32 1, ptr %563, align 4, !tbaa !25
  br label %if.end1346

if.end1346:                                       ; preds = %if.then1342, %if.end1335.3
  %609 = load i32, ptr @_ZZ9jpegModelR5MixerE3row, align 4, !tbaa !25
  %cmp1347 = icmp eq i32 %609, 0
  br i1 %cmp1347, label %if.then1348, label %if.end1358

if.then1348:                                      ; preds = %if.end1346
  %610 = load i32, ptr %563, align 4, !tbaa !25
  %arrayidx.i2608 = getelementptr inbounds i32, ptr %563, i64 1
  store i32 %610, ptr %arrayidx.i2608, align 4, !tbaa !25
  %arrayidx.i2609 = getelementptr inbounds i32, ptr %563, i64 2
  store i32 1, ptr %arrayidx.i2609, align 4, !tbaa !25
  br label %if.end1358

if.end1358:                                       ; preds = %if.end656, %if.then1348, %if.end1346, %if.then695, %land.lhs.true585, %if.end583
  %611 = load i32, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %tobool1359 = icmp ne i32 %611, 0
  %612 = load i32, ptr @_ZZ9jpegModelR5MixerE4data, align 4
  %tobool1361 = icmp ne i32 %612, 0
  %or.cond1753 = select i1 %tobool1359, i1 %tobool1361, i1 false
  br i1 %or.cond1753, label %if.end1363, label %if.then1362

if.then1362:                                      ; preds = %if.end1358
  %613 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end1363:                                       ; preds = %if.end1358
  %614 = load i32, ptr @bpos, align 4, !tbaa !25
  %tobool1364.not = icmp eq i32 %614, 0
  %add1367.neg = select i1 %tobool1364.not, i32 -2, i32 -1
  %615 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i2610 = add i32 %add1367.neg, %615
  %616 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i2611 = add nsw i32 %616, -1
  %and.i2612 = and i32 %sub3.i2611, %sub.i2610
  %617 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i2613 = sext i32 %and.i2612 to i64
  %arrayidx.i.i2614 = getelementptr inbounds i8, ptr %617, i64 %idxprom.i.i2613
  %618 = load i8, ptr %arrayidx.i.i2614, align 1, !tbaa !9
  %cmp1369 = icmp eq i8 %618, -1
  br i1 %cmp1369, label %if.then1370, label %if.end1371

if.then1370:                                      ; preds = %if.end1363
  %nx.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 8
  %619 = load i32, ptr %nx.i, align 8, !tbaa !64
  %inc.i = add nsw i32 %619, 1
  store i32 %inc.i, ptr %nx.i, align 8, !tbaa !64
  %data.i.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 3, i32 3
  %620 = load ptr, ptr %data.i.i, align 8, !tbaa !59
  %idxprom.i.i2616 = sext i32 %619 to i64
  %arrayidx.i.i2617 = getelementptr inbounds i16, ptr %620, i64 %idxprom.i.i2616
  store i16 128, ptr %arrayidx.i.i2617, align 2, !tbaa !31
  br label %return

if.end1371:                                       ; preds = %if.end1363
  %621 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE1t acquire, align 8
  %guard.uninitialized1372 = icmp eq i8 %621, 0
  br i1 %guard.uninitialized1372, label %init.check1373, label %init.end1379, !prof !110

init.check1373:                                   ; preds = %if.end1371
  %622 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE1t) #39
  %tobool1374.not = icmp eq i32 %622, 0
  br i1 %tobool1374.not, label %init.end1379, label %init1375

init1375:                                         ; preds = %init.check1373
  %623 = load i32, ptr @level, align 4, !tbaa !25
  %shl1376 = shl i32 65536, %623
  invoke void @_ZN2BHILi9EEC2Ei(ptr noundef nonnull align 8 dereferenceable(28) @_ZZ9jpegModelR5MixerE1t, i32 noundef %shl1376)
          to label %invoke.cont1378 unwind label %lpad1377

invoke.cont1378:                                  ; preds = %init1375
  %624 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN2BHILi9EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE1t, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE1t) #39
  br label %init.end1379

init.end1379:                                     ; preds = %invoke.cont1378, %init.check1373, %if.end1371
  %625 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE3cxt acquire, align 8
  %guard.uninitialized1380 = icmp eq i8 %625, 0
  br i1 %guard.uninitialized1380, label %init.check1381, label %init.end1386, !prof !110

init.check1381:                                   ; preds = %init.end1379
  %626 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE3cxt) #39
  %tobool1382.not = icmp eq i32 %626, 0
  br i1 %tobool1382.not, label %init.end1386, label %init1383

init1383:                                         ; preds = %init.check1381
  invoke void @_ZN5ArrayIjLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE3cxt, i32 noundef 28)
          to label %invoke.cont1385 unwind label %lpad1384

invoke.cont1385:                                  ; preds = %init1383
  %627 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIjLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE3cxt, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE3cxt) #39
  br label %init.end1386

init.end1386:                                     ; preds = %invoke.cont1385, %init.check1381, %init.end1379
  %628 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2cp acquire, align 8
  %guard.uninitialized1387 = icmp eq i8 %628, 0
  br i1 %guard.uninitialized1387, label %init.check1388, label %init.end1393, !prof !110

init.check1388:                                   ; preds = %init.end1386
  %629 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2cp) #39
  %tobool1389.not = icmp eq i32 %629, 0
  br i1 %tobool1389.not, label %init.end1393, label %init1390

init1390:                                         ; preds = %init.check1388
  invoke void @_ZN5ArrayIPhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE2cp, i32 noundef 28)
          to label %invoke.cont1392 unwind label %lpad1391

invoke.cont1392:                                  ; preds = %init1390
  %630 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIPhLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2cp, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2cp) #39
  br label %init.end1393

init.end1393:                                     ; preds = %invoke.cont1392, %init.check1388, %init.end1386
  %631 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2sm acquire, align 8
  %guard.uninitialized1394 = icmp eq i8 %631, 0
  br i1 %guard.uninitialized1394, label %init.check1395, label %init.end1401, !prof !110

init.check1395:                                   ; preds = %init.end1393
  %632 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2sm) #39
  %tobool1396.not = icmp eq i32 %632, 0
  br i1 %tobool1396.not, label %init.end1401, label %arrayctor.loop.preheader

arrayctor.loop.preheader:                         ; preds = %init.check1395
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2sm, i32 noundef 256)
          to label %invoke.cont1399 unwind label %lpad1398

invoke.cont1399:                                  ; preds = %arrayctor.loop.preheader
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 1), i32 noundef 256)
          to label %invoke.cont1399.1 unwind label %arraydestroy.body.preheader

invoke.cont1399.1:                                ; preds = %invoke.cont1399
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 2), i32 noundef 256)
          to label %invoke.cont1399.2 unwind label %arraydestroy.body.preheader

invoke.cont1399.2:                                ; preds = %invoke.cont1399.1
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 3), i32 noundef 256)
          to label %invoke.cont1399.3 unwind label %arraydestroy.body.preheader

invoke.cont1399.3:                                ; preds = %invoke.cont1399.2
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 4), i32 noundef 256)
          to label %invoke.cont1399.4 unwind label %arraydestroy.body.preheader

invoke.cont1399.4:                                ; preds = %invoke.cont1399.3
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 5), i32 noundef 256)
          to label %invoke.cont1399.5 unwind label %arraydestroy.body.preheader

invoke.cont1399.5:                                ; preds = %invoke.cont1399.4
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 6), i32 noundef 256)
          to label %invoke.cont1399.6 unwind label %arraydestroy.body.preheader

invoke.cont1399.6:                                ; preds = %invoke.cont1399.5
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 7), i32 noundef 256)
          to label %invoke.cont1399.7 unwind label %arraydestroy.body.preheader

invoke.cont1399.7:                                ; preds = %invoke.cont1399.6
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 8), i32 noundef 256)
          to label %invoke.cont1399.8 unwind label %arraydestroy.body.preheader

invoke.cont1399.8:                                ; preds = %invoke.cont1399.7
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 9), i32 noundef 256)
          to label %invoke.cont1399.9 unwind label %arraydestroy.body.preheader

invoke.cont1399.9:                                ; preds = %invoke.cont1399.8
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 10), i32 noundef 256)
          to label %invoke.cont1399.10 unwind label %arraydestroy.body.preheader

invoke.cont1399.10:                               ; preds = %invoke.cont1399.9
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 11), i32 noundef 256)
          to label %invoke.cont1399.11 unwind label %arraydestroy.body.preheader

invoke.cont1399.11:                               ; preds = %invoke.cont1399.10
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 12), i32 noundef 256)
          to label %invoke.cont1399.12 unwind label %arraydestroy.body.preheader

invoke.cont1399.12:                               ; preds = %invoke.cont1399.11
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 13), i32 noundef 256)
          to label %invoke.cont1399.13 unwind label %arraydestroy.body.preheader

invoke.cont1399.13:                               ; preds = %invoke.cont1399.12
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 14), i32 noundef 256)
          to label %invoke.cont1399.14 unwind label %arraydestroy.body.preheader

invoke.cont1399.14:                               ; preds = %invoke.cont1399.13
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 15), i32 noundef 256)
          to label %invoke.cont1399.15 unwind label %arraydestroy.body.preheader

invoke.cont1399.15:                               ; preds = %invoke.cont1399.14
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 16), i32 noundef 256)
          to label %invoke.cont1399.16 unwind label %arraydestroy.body.preheader

invoke.cont1399.16:                               ; preds = %invoke.cont1399.15
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 17), i32 noundef 256)
          to label %invoke.cont1399.17 unwind label %arraydestroy.body.preheader

invoke.cont1399.17:                               ; preds = %invoke.cont1399.16
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 18), i32 noundef 256)
          to label %invoke.cont1399.18 unwind label %arraydestroy.body.preheader

invoke.cont1399.18:                               ; preds = %invoke.cont1399.17
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 19), i32 noundef 256)
          to label %invoke.cont1399.19 unwind label %arraydestroy.body.preheader

invoke.cont1399.19:                               ; preds = %invoke.cont1399.18
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 20), i32 noundef 256)
          to label %invoke.cont1399.20 unwind label %arraydestroy.body.preheader

invoke.cont1399.20:                               ; preds = %invoke.cont1399.19
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 21), i32 noundef 256)
          to label %invoke.cont1399.21 unwind label %arraydestroy.body.preheader

invoke.cont1399.21:                               ; preds = %invoke.cont1399.20
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 22), i32 noundef 256)
          to label %invoke.cont1399.22 unwind label %arraydestroy.body.preheader

invoke.cont1399.22:                               ; preds = %invoke.cont1399.21
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 23), i32 noundef 256)
          to label %invoke.cont1399.23 unwind label %arraydestroy.body.preheader

invoke.cont1399.23:                               ; preds = %invoke.cont1399.22
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 24), i32 noundef 256)
          to label %invoke.cont1399.24 unwind label %arraydestroy.body.preheader

invoke.cont1399.24:                               ; preds = %invoke.cont1399.23
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 25), i32 noundef 256)
          to label %invoke.cont1399.25 unwind label %arraydestroy.body.preheader

invoke.cont1399.25:                               ; preds = %invoke.cont1399.24
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 26), i32 noundef 256)
          to label %invoke.cont1399.26 unwind label %arraydestroy.body.preheader

invoke.cont1399.26:                               ; preds = %invoke.cont1399.25
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 27), i32 noundef 256)
          to label %invoke.cont1399.27 unwind label %arraydestroy.body.preheader

invoke.cont1399.27:                               ; preds = %invoke.cont1399.26
  %633 = tail call i32 @__cxa_atexit(ptr nonnull @__cxx_global_array_dtor.13, ptr null, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2sm) #39
  br label %init.end1401

init.end1401:                                     ; preds = %invoke.cont1399.27, %init.check1395, %init.end1393
  %634 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2m1 acquire, align 8
  %guard.uninitialized1402 = icmp eq i8 %634, 0
  br i1 %guard.uninitialized1402, label %init.check1403, label %init.end1408, !prof !110

init.check1403:                                   ; preds = %init.end1401
  %635 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2m1) #39
  %tobool1404.not = icmp eq i32 %635, 0
  br i1 %tobool1404.not, label %init.end1408, label %init1405

init1405:                                         ; preds = %init.check1403
  invoke void @_ZN5MixerC2Eiiii(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ9jpegModelR5MixerE2m1, i32 noundef 32, i32 noundef 770, i32 noundef 3, i32 noundef 0)
          to label %invoke.cont1407 unwind label %lpad1406

invoke.cont1407:                                  ; preds = %init1405
  %636 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5MixerD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2m1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2m1) #39
  br label %init.end1408

init.end1408:                                     ; preds = %invoke.cont1407, %init.check1403, %init.end1401
  %637 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2a1 acquire, align 8
  %guard.uninitialized1409 = icmp eq i8 %637, 0
  br i1 %guard.uninitialized1409, label %init.check1410, label %init.end1415, !prof !110

init.check1410:                                   ; preds = %init.end1408
  %638 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2a1) #39
  %tobool1411.not = icmp eq i32 %638, 0
  br i1 %tobool1411.not, label %init.end1415, label %init1412

init1412:                                         ; preds = %init.check1410
  invoke void @_ZN3APMC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2a1, i32 noundef 32768)
          to label %invoke.cont1414 unwind label %lpad1413

invoke.cont1414:                                  ; preds = %init1412
  %639 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN8StateMapD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2a1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2a1) #39
  br label %init.end1415

init.end1415:                                     ; preds = %invoke.cont1414, %init.check1410, %init.end1408
  %640 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2a2 acquire, align 8
  %guard.uninitialized1416 = icmp eq i8 %640, 0
  br i1 %guard.uninitialized1416, label %init.check1417, label %init.end1422, !prof !110

init.check1417:                                   ; preds = %init.end1415
  %641 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2a2) #39
  %tobool1418.not = icmp eq i32 %641, 0
  br i1 %tobool1418.not, label %init.end1422, label %init1419

init1419:                                         ; preds = %init.check1417
  invoke void @_ZN3APMC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2a2, i32 noundef 65536)
          to label %invoke.cont1421 unwind label %lpad1420

invoke.cont1421:                                  ; preds = %init1419
  %642 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN8StateMapD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2a2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2a2) #39
  br label %init.end1422

init.end1422:                                     ; preds = %invoke.cont1421, %init.check1417, %init.end1415
  %643 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2618 = getelementptr inbounds ptr, ptr %643, i64 27
  %644 = load ptr, ptr %arrayidx.i2618, align 8, !tbaa !5
  %tobool1424.not = icmp eq ptr %644, null
  br i1 %tobool1424.not, label %if.end1441, label %for.body1430.preheader

for.body1430.preheader:                           ; preds = %init.end1422
  %645 = load ptr, ptr %643, align 8, !tbaa !5
  %646 = load i8, ptr %645, align 1, !tbaa !9
  %idxprom1432 = zext i8 %646 to i64
  %647 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434 = sext i32 %647 to i64
  %arrayidx1435 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432, i64 %idxprom1434
  %648 = load i8, ptr %arrayidx1435, align 1, !tbaa !9
  store i8 %648, ptr %645, align 1, !tbaa !9
  %649 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.1 = getelementptr inbounds ptr, ptr %649, i64 1
  %650 = load ptr, ptr %arrayidx.i2620.1, align 8, !tbaa !5
  %651 = load i8, ptr %650, align 1, !tbaa !9
  %idxprom1432.1 = zext i8 %651 to i64
  %652 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.1 = sext i32 %652 to i64
  %arrayidx1435.1 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.1, i64 %idxprom1434.1
  %653 = load i8, ptr %arrayidx1435.1, align 1, !tbaa !9
  store i8 %653, ptr %650, align 1, !tbaa !9
  %654 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.2 = getelementptr inbounds ptr, ptr %654, i64 2
  %655 = load ptr, ptr %arrayidx.i2620.2, align 8, !tbaa !5
  %656 = load i8, ptr %655, align 1, !tbaa !9
  %idxprom1432.2 = zext i8 %656 to i64
  %657 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.2 = sext i32 %657 to i64
  %arrayidx1435.2 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.2, i64 %idxprom1434.2
  %658 = load i8, ptr %arrayidx1435.2, align 1, !tbaa !9
  store i8 %658, ptr %655, align 1, !tbaa !9
  %659 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.3 = getelementptr inbounds ptr, ptr %659, i64 3
  %660 = load ptr, ptr %arrayidx.i2620.3, align 8, !tbaa !5
  %661 = load i8, ptr %660, align 1, !tbaa !9
  %idxprom1432.3 = zext i8 %661 to i64
  %662 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.3 = sext i32 %662 to i64
  %arrayidx1435.3 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.3, i64 %idxprom1434.3
  %663 = load i8, ptr %arrayidx1435.3, align 1, !tbaa !9
  store i8 %663, ptr %660, align 1, !tbaa !9
  %664 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.4 = getelementptr inbounds ptr, ptr %664, i64 4
  %665 = load ptr, ptr %arrayidx.i2620.4, align 8, !tbaa !5
  %666 = load i8, ptr %665, align 1, !tbaa !9
  %idxprom1432.4 = zext i8 %666 to i64
  %667 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.4 = sext i32 %667 to i64
  %arrayidx1435.4 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.4, i64 %idxprom1434.4
  %668 = load i8, ptr %arrayidx1435.4, align 1, !tbaa !9
  store i8 %668, ptr %665, align 1, !tbaa !9
  %669 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.5 = getelementptr inbounds ptr, ptr %669, i64 5
  %670 = load ptr, ptr %arrayidx.i2620.5, align 8, !tbaa !5
  %671 = load i8, ptr %670, align 1, !tbaa !9
  %idxprom1432.5 = zext i8 %671 to i64
  %672 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.5 = sext i32 %672 to i64
  %arrayidx1435.5 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.5, i64 %idxprom1434.5
  %673 = load i8, ptr %arrayidx1435.5, align 1, !tbaa !9
  store i8 %673, ptr %670, align 1, !tbaa !9
  %674 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.6 = getelementptr inbounds ptr, ptr %674, i64 6
  %675 = load ptr, ptr %arrayidx.i2620.6, align 8, !tbaa !5
  %676 = load i8, ptr %675, align 1, !tbaa !9
  %idxprom1432.6 = zext i8 %676 to i64
  %677 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.6 = sext i32 %677 to i64
  %arrayidx1435.6 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.6, i64 %idxprom1434.6
  %678 = load i8, ptr %arrayidx1435.6, align 1, !tbaa !9
  store i8 %678, ptr %675, align 1, !tbaa !9
  %679 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.7 = getelementptr inbounds ptr, ptr %679, i64 7
  %680 = load ptr, ptr %arrayidx.i2620.7, align 8, !tbaa !5
  %681 = load i8, ptr %680, align 1, !tbaa !9
  %idxprom1432.7 = zext i8 %681 to i64
  %682 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.7 = sext i32 %682 to i64
  %arrayidx1435.7 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.7, i64 %idxprom1434.7
  %683 = load i8, ptr %arrayidx1435.7, align 1, !tbaa !9
  store i8 %683, ptr %680, align 1, !tbaa !9
  %684 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.8 = getelementptr inbounds ptr, ptr %684, i64 8
  %685 = load ptr, ptr %arrayidx.i2620.8, align 8, !tbaa !5
  %686 = load i8, ptr %685, align 1, !tbaa !9
  %idxprom1432.8 = zext i8 %686 to i64
  %687 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.8 = sext i32 %687 to i64
  %arrayidx1435.8 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.8, i64 %idxprom1434.8
  %688 = load i8, ptr %arrayidx1435.8, align 1, !tbaa !9
  store i8 %688, ptr %685, align 1, !tbaa !9
  %689 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.9 = getelementptr inbounds ptr, ptr %689, i64 9
  %690 = load ptr, ptr %arrayidx.i2620.9, align 8, !tbaa !5
  %691 = load i8, ptr %690, align 1, !tbaa !9
  %idxprom1432.9 = zext i8 %691 to i64
  %692 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.9 = sext i32 %692 to i64
  %arrayidx1435.9 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.9, i64 %idxprom1434.9
  %693 = load i8, ptr %arrayidx1435.9, align 1, !tbaa !9
  store i8 %693, ptr %690, align 1, !tbaa !9
  %694 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.10 = getelementptr inbounds ptr, ptr %694, i64 10
  %695 = load ptr, ptr %arrayidx.i2620.10, align 8, !tbaa !5
  %696 = load i8, ptr %695, align 1, !tbaa !9
  %idxprom1432.10 = zext i8 %696 to i64
  %697 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.10 = sext i32 %697 to i64
  %arrayidx1435.10 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.10, i64 %idxprom1434.10
  %698 = load i8, ptr %arrayidx1435.10, align 1, !tbaa !9
  store i8 %698, ptr %695, align 1, !tbaa !9
  %699 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.11 = getelementptr inbounds ptr, ptr %699, i64 11
  %700 = load ptr, ptr %arrayidx.i2620.11, align 8, !tbaa !5
  %701 = load i8, ptr %700, align 1, !tbaa !9
  %idxprom1432.11 = zext i8 %701 to i64
  %702 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.11 = sext i32 %702 to i64
  %arrayidx1435.11 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.11, i64 %idxprom1434.11
  %703 = load i8, ptr %arrayidx1435.11, align 1, !tbaa !9
  store i8 %703, ptr %700, align 1, !tbaa !9
  %704 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.12 = getelementptr inbounds ptr, ptr %704, i64 12
  %705 = load ptr, ptr %arrayidx.i2620.12, align 8, !tbaa !5
  %706 = load i8, ptr %705, align 1, !tbaa !9
  %idxprom1432.12 = zext i8 %706 to i64
  %707 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.12 = sext i32 %707 to i64
  %arrayidx1435.12 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.12, i64 %idxprom1434.12
  %708 = load i8, ptr %arrayidx1435.12, align 1, !tbaa !9
  store i8 %708, ptr %705, align 1, !tbaa !9
  %709 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.13 = getelementptr inbounds ptr, ptr %709, i64 13
  %710 = load ptr, ptr %arrayidx.i2620.13, align 8, !tbaa !5
  %711 = load i8, ptr %710, align 1, !tbaa !9
  %idxprom1432.13 = zext i8 %711 to i64
  %712 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.13 = sext i32 %712 to i64
  %arrayidx1435.13 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.13, i64 %idxprom1434.13
  %713 = load i8, ptr %arrayidx1435.13, align 1, !tbaa !9
  store i8 %713, ptr %710, align 1, !tbaa !9
  %714 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.14 = getelementptr inbounds ptr, ptr %714, i64 14
  %715 = load ptr, ptr %arrayidx.i2620.14, align 8, !tbaa !5
  %716 = load i8, ptr %715, align 1, !tbaa !9
  %idxprom1432.14 = zext i8 %716 to i64
  %717 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.14 = sext i32 %717 to i64
  %arrayidx1435.14 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.14, i64 %idxprom1434.14
  %718 = load i8, ptr %arrayidx1435.14, align 1, !tbaa !9
  store i8 %718, ptr %715, align 1, !tbaa !9
  %719 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.15 = getelementptr inbounds ptr, ptr %719, i64 15
  %720 = load ptr, ptr %arrayidx.i2620.15, align 8, !tbaa !5
  %721 = load i8, ptr %720, align 1, !tbaa !9
  %idxprom1432.15 = zext i8 %721 to i64
  %722 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.15 = sext i32 %722 to i64
  %arrayidx1435.15 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.15, i64 %idxprom1434.15
  %723 = load i8, ptr %arrayidx1435.15, align 1, !tbaa !9
  store i8 %723, ptr %720, align 1, !tbaa !9
  %724 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.16 = getelementptr inbounds ptr, ptr %724, i64 16
  %725 = load ptr, ptr %arrayidx.i2620.16, align 8, !tbaa !5
  %726 = load i8, ptr %725, align 1, !tbaa !9
  %idxprom1432.16 = zext i8 %726 to i64
  %727 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.16 = sext i32 %727 to i64
  %arrayidx1435.16 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.16, i64 %idxprom1434.16
  %728 = load i8, ptr %arrayidx1435.16, align 1, !tbaa !9
  store i8 %728, ptr %725, align 1, !tbaa !9
  %729 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.17 = getelementptr inbounds ptr, ptr %729, i64 17
  %730 = load ptr, ptr %arrayidx.i2620.17, align 8, !tbaa !5
  %731 = load i8, ptr %730, align 1, !tbaa !9
  %idxprom1432.17 = zext i8 %731 to i64
  %732 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.17 = sext i32 %732 to i64
  %arrayidx1435.17 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.17, i64 %idxprom1434.17
  %733 = load i8, ptr %arrayidx1435.17, align 1, !tbaa !9
  store i8 %733, ptr %730, align 1, !tbaa !9
  %734 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.18 = getelementptr inbounds ptr, ptr %734, i64 18
  %735 = load ptr, ptr %arrayidx.i2620.18, align 8, !tbaa !5
  %736 = load i8, ptr %735, align 1, !tbaa !9
  %idxprom1432.18 = zext i8 %736 to i64
  %737 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.18 = sext i32 %737 to i64
  %arrayidx1435.18 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.18, i64 %idxprom1434.18
  %738 = load i8, ptr %arrayidx1435.18, align 1, !tbaa !9
  store i8 %738, ptr %735, align 1, !tbaa !9
  %739 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.19 = getelementptr inbounds ptr, ptr %739, i64 19
  %740 = load ptr, ptr %arrayidx.i2620.19, align 8, !tbaa !5
  %741 = load i8, ptr %740, align 1, !tbaa !9
  %idxprom1432.19 = zext i8 %741 to i64
  %742 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.19 = sext i32 %742 to i64
  %arrayidx1435.19 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.19, i64 %idxprom1434.19
  %743 = load i8, ptr %arrayidx1435.19, align 1, !tbaa !9
  store i8 %743, ptr %740, align 1, !tbaa !9
  %744 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.20 = getelementptr inbounds ptr, ptr %744, i64 20
  %745 = load ptr, ptr %arrayidx.i2620.20, align 8, !tbaa !5
  %746 = load i8, ptr %745, align 1, !tbaa !9
  %idxprom1432.20 = zext i8 %746 to i64
  %747 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.20 = sext i32 %747 to i64
  %arrayidx1435.20 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.20, i64 %idxprom1434.20
  %748 = load i8, ptr %arrayidx1435.20, align 1, !tbaa !9
  store i8 %748, ptr %745, align 1, !tbaa !9
  %749 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.21 = getelementptr inbounds ptr, ptr %749, i64 21
  %750 = load ptr, ptr %arrayidx.i2620.21, align 8, !tbaa !5
  %751 = load i8, ptr %750, align 1, !tbaa !9
  %idxprom1432.21 = zext i8 %751 to i64
  %752 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.21 = sext i32 %752 to i64
  %arrayidx1435.21 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.21, i64 %idxprom1434.21
  %753 = load i8, ptr %arrayidx1435.21, align 1, !tbaa !9
  store i8 %753, ptr %750, align 1, !tbaa !9
  %754 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.22 = getelementptr inbounds ptr, ptr %754, i64 22
  %755 = load ptr, ptr %arrayidx.i2620.22, align 8, !tbaa !5
  %756 = load i8, ptr %755, align 1, !tbaa !9
  %idxprom1432.22 = zext i8 %756 to i64
  %757 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.22 = sext i32 %757 to i64
  %arrayidx1435.22 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.22, i64 %idxprom1434.22
  %758 = load i8, ptr %arrayidx1435.22, align 1, !tbaa !9
  store i8 %758, ptr %755, align 1, !tbaa !9
  %759 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.23 = getelementptr inbounds ptr, ptr %759, i64 23
  %760 = load ptr, ptr %arrayidx.i2620.23, align 8, !tbaa !5
  %761 = load i8, ptr %760, align 1, !tbaa !9
  %idxprom1432.23 = zext i8 %761 to i64
  %762 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.23 = sext i32 %762 to i64
  %arrayidx1435.23 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.23, i64 %idxprom1434.23
  %763 = load i8, ptr %arrayidx1435.23, align 1, !tbaa !9
  store i8 %763, ptr %760, align 1, !tbaa !9
  %764 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.24 = getelementptr inbounds ptr, ptr %764, i64 24
  %765 = load ptr, ptr %arrayidx.i2620.24, align 8, !tbaa !5
  %766 = load i8, ptr %765, align 1, !tbaa !9
  %idxprom1432.24 = zext i8 %766 to i64
  %767 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.24 = sext i32 %767 to i64
  %arrayidx1435.24 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.24, i64 %idxprom1434.24
  %768 = load i8, ptr %arrayidx1435.24, align 1, !tbaa !9
  store i8 %768, ptr %765, align 1, !tbaa !9
  %769 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.25 = getelementptr inbounds ptr, ptr %769, i64 25
  %770 = load ptr, ptr %arrayidx.i2620.25, align 8, !tbaa !5
  %771 = load i8, ptr %770, align 1, !tbaa !9
  %idxprom1432.25 = zext i8 %771 to i64
  %772 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.25 = sext i32 %772 to i64
  %arrayidx1435.25 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.25, i64 %idxprom1434.25
  %773 = load i8, ptr %arrayidx1435.25, align 1, !tbaa !9
  store i8 %773, ptr %770, align 1, !tbaa !9
  %774 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.26 = getelementptr inbounds ptr, ptr %774, i64 26
  %775 = load ptr, ptr %arrayidx.i2620.26, align 8, !tbaa !5
  %776 = load i8, ptr %775, align 1, !tbaa !9
  %idxprom1432.26 = zext i8 %776 to i64
  %777 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.26 = sext i32 %777 to i64
  %arrayidx1435.26 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.26, i64 %idxprom1434.26
  %778 = load i8, ptr %arrayidx1435.26, align 1, !tbaa !9
  store i8 %778, ptr %775, align 1, !tbaa !9
  %779 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i2620.27 = getelementptr inbounds ptr, ptr %779, i64 27
  %780 = load ptr, ptr %arrayidx.i2620.27, align 8, !tbaa !5
  %781 = load i8, ptr %780, align 1, !tbaa !9
  %idxprom1432.27 = zext i8 %781 to i64
  %782 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom1434.27 = sext i32 %782 to i64
  %arrayidx1435.27 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom1432.27, i64 %idxprom1434.27
  %783 = load i8, ptr %arrayidx1435.27, align 1, !tbaa !9
  store i8 %783, ptr %780, align 1, !tbaa !9
  br label %if.end1441

lpad1377:                                         ; preds = %init1375
  %784 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad1384:                                         ; preds = %init1383
  %785 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad1391:                                         ; preds = %init1390
  %786 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad1398:                                         ; preds = %arrayctor.loop.preheader
  %lpad.thr_comm.split-lp = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

arraydestroy.body.preheader:                      ; preds = %invoke.cont1399.26, %invoke.cont1399.25, %invoke.cont1399.24, %invoke.cont1399.23, %invoke.cont1399.22, %invoke.cont1399.21, %invoke.cont1399.20, %invoke.cont1399.19, %invoke.cont1399.18, %invoke.cont1399.17, %invoke.cont1399.16, %invoke.cont1399.15, %invoke.cont1399.14, %invoke.cont1399.13, %invoke.cont1399.12, %invoke.cont1399.11, %invoke.cont1399.10, %invoke.cont1399.9, %invoke.cont1399.8, %invoke.cont1399.7, %invoke.cont1399.6, %invoke.cont1399.5, %invoke.cont1399.4, %invoke.cont1399.3, %invoke.cont1399.2, %invoke.cont1399.1, %invoke.cont1399
  %arrayctor.cur.lcssa.ph = phi ptr [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 1), %invoke.cont1399 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 2), %invoke.cont1399.1 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 3), %invoke.cont1399.2 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 4), %invoke.cont1399.3 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 5), %invoke.cont1399.4 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 6), %invoke.cont1399.5 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 7), %invoke.cont1399.6 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 8), %invoke.cont1399.7 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 9), %invoke.cont1399.8 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 10), %invoke.cont1399.9 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 11), %invoke.cont1399.10 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 12), %invoke.cont1399.11 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 13), %invoke.cont1399.12 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 14), %invoke.cont1399.13 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 15), %invoke.cont1399.14 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 16), %invoke.cont1399.15 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 17), %invoke.cont1399.16 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 18), %invoke.cont1399.17 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 19), %invoke.cont1399.18 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 20), %invoke.cont1399.19 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 21), %invoke.cont1399.20 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 22), %invoke.cont1399.21 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 23), %invoke.cont1399.22 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 24), %invoke.cont1399.23 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 25), %invoke.cont1399.24 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 26), %invoke.cont1399.25 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 27), %invoke.cont1399.26 ]
  %lpad.thr_comm = landingpad { ptr, i32 }
          cleanup
  br label %arraydestroy.body

arraydestroy.body:                                ; preds = %arraydestroy.body.preheader, %arraydestroy.body
  %arraydestroy.elementPast = phi ptr [ %arraydestroy.element, %arraydestroy.body ], [ %arrayctor.cur.lcssa.ph, %arraydestroy.body.preheader ]
  %arraydestroy.element = getelementptr inbounds %class.StateMap, ptr %arraydestroy.elementPast, i64 -1
  tail call void @_ZN8StateMapD2Ev(ptr noundef nonnull align 8 dereferenceable(32) %arraydestroy.element) #39
  %arraydestroy.done = icmp eq ptr %arraydestroy.element, @_ZZ9jpegModelR5MixerE2sm
  br i1 %arraydestroy.done, label %eh.resume, label %arraydestroy.body

lpad1406:                                         ; preds = %init1405
  %787 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad1413:                                         ; preds = %init1412
  %788 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad1420:                                         ; preds = %init1419
  %789 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

if.end1441:                                       ; preds = %for.body1430.preheader, %init.end1422
  %790 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %cmp20.i = icmp sgt i32 %790, 0
  br i1 %cmp20.i, label %for.body.lr.ph.i, label %_ZN5Mixer6updateEv.exit

for.body.lr.ph.i:                                 ; preds = %if.end1441
  %791 = load i32, ptr @y, align 4, !tbaa !25
  %shl.i = shl i32 %791, 12
  %792 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 9, i32 3), align 8, !tbaa !61
  %793 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8
  %794 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 5, i32 3), align 8
  %795 = load i32, ptr @_ZZ9jpegModelR5MixerE2m1, align 8
  %796 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 4, i32 3), align 8
  %797 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8
  %.fr.i = freeze i32 %797
  %add.i.i = add i32 %.fr.i, 7
  %and.i.i = and i32 %add.i.i, -8
  %cmp24.i.i = icmp sgt i32 %and.i.i, 0
  %wide.trip.count.i.i = zext i32 %and.i.i to i64
  br i1 %cmp24.i.i, label %for.body.us.preheader.i, label %_ZN5Mixer6updateEv.exit

for.body.us.preheader.i:                          ; preds = %for.body.lr.ph.i
  %wide.trip.count.i = zext i32 %790 to i64
  %798 = lshr i32 %add.i.i, 3
  %799 = zext i32 %798 to i64
  %800 = shl nuw nsw i64 %799, 4
  %scevgep = getelementptr i8, ptr %796, i64 %800
  %scevgep3572 = getelementptr i8, ptr %793, i64 %800
  br label %for.body.us.i

for.body.us.i:                                    ; preds = %if.end.us.i, %for.body.us.preheader.i
  %indvars.iv.i = phi i64 [ 0, %for.body.us.preheader.i ], [ %indvars.iv.next.i, %if.end.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds i32, ptr %792, i64 %indvars.iv.i
  %801 = load i32, ptr %arrayidx.i.us.i, align 4, !tbaa !25
  %sub.us.i = sub nsw i32 %shl.i, %801
  %mul.us.i = mul nsw i32 %sub.us.i, 7
  %tobool.not.us.i = icmp eq i32 %shl.i, %801
  br i1 %tobool.not.us.i, label %if.end.us.i, label %if.then.us.i

if.then.us.i:                                     ; preds = %for.body.us.i
  %arrayidx.i15.us.i = getelementptr inbounds i32, ptr %794, i64 %indvars.iv.i
  %802 = load i32, ptr %arrayidx.i15.us.i, align 4, !tbaa !25
  %mul4.us.i = mul nsw i32 %802, %795
  %idxprom.i17.us.i = sext i32 %mul4.us.i to i64
  %arrayidx.i18.us.i = getelementptr inbounds i16, ptr %796, i64 %idxprom.i17.us.i
  %803 = shl nsw i64 %idxprom.i17.us.i, 1
  %scevgep3571 = getelementptr i8, ptr %scevgep, i64 %803
  %bound0 = icmp ult ptr %arrayidx.i18.us.i, %scevgep3572
  %bound1 = icmp ult ptr %793, %scevgep3571
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i.us.i, label %vector.ph

vector.ph:                                        ; preds = %if.then.us.i
  %broadcast.splatinsert = insertelement <8 x i32> poison, i32 %mul.us.i, i64 0
  %broadcast.splat = shufflevector <8 x i32> %broadcast.splatinsert, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %804 = getelementptr inbounds i16, ptr %arrayidx.i18.us.i, i64 %index
  %wide.load = load <8 x i16>, ptr %804, align 2, !tbaa !31, !alias.scope !145, !noalias !148
  %805 = sext <8 x i16> %wide.load to <8 x i32>
  %806 = getelementptr inbounds i16, ptr %793, i64 %index
  %wide.load3573 = load <8 x i16>, ptr %806, align 2, !tbaa !31, !alias.scope !148
  %807 = sext <8 x i16> %wide.load3573 to <8 x i32>
  %808 = mul nsw <8 x i32> %broadcast.splat, %807
  %809 = ashr <8 x i32> %808, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %810 = add nsw <8 x i32> %809, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %811 = ashr <8 x i32> %810, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %812 = add nsw <8 x i32> %811, %805
  %813 = tail call <8 x i32> @llvm.smax.v8i32(<8 x i32> %812, <8 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>)
  %814 = tail call <8 x i32> @llvm.smin.v8i32(<8 x i32> %813, <8 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>)
  %815 = trunc <8 x i32> %814 to <8 x i16>
  store <8 x i16> %815, ptr %804, align 2, !tbaa !31, !alias.scope !145, !noalias !148
  %index.next = add nuw i64 %index, 8
  %816 = icmp eq i64 %index.next, %wide.trip.count.i.i
  br i1 %816, label %if.end.us.i, label %vector.body, !llvm.loop !150

for.body.i.us.i:                                  ; preds = %if.then.us.i, %for.body.i.us.i
  %indvars.iv.i.us.i = phi i64 [ %indvars.iv.next.i.us.i, %for.body.i.us.i ], [ 0, %if.then.us.i ]
  %arrayidx.i19.us.i = getelementptr inbounds i16, ptr %arrayidx.i18.us.i, i64 %indvars.iv.i.us.i
  %817 = load i16, ptr %arrayidx.i19.us.i, align 2, !tbaa !31
  %conv.i.us.i = sext i16 %817 to i32
  %arrayidx2.i.us.i = getelementptr inbounds i16, ptr %793, i64 %indvars.iv.i.us.i
  %818 = load i16, ptr %arrayidx2.i.us.i, align 2, !tbaa !31
  %conv3.i.us.i = sext i16 %818 to i32
  %mul.i.us.i = mul nsw i32 %mul.us.i, %conv3.i.us.i
  %shr.i.us.i = ashr i32 %mul.i.us.i, 15
  %add5.i.us.i = add nsw i32 %shr.i.us.i, 1
  %shr6.i.us.i = ashr i32 %add5.i.us.i, 1
  %add7.i.us.i = add nsw i32 %shr6.i.us.i, %conv.i.us.i
  %spec.store.select.i.us.i = tail call i32 @llvm.smax.i32(i32 %add7.i.us.i, i32 -32768)
  %spec.store.select15.i.us.i = tail call i32 @llvm.smin.i32(i32 %spec.store.select.i.us.i, i32 32767)
  %conv12.i.us.i = trunc i32 %spec.store.select15.i.us.i to i16
  store i16 %conv12.i.us.i, ptr %arrayidx.i19.us.i, align 2, !tbaa !31
  %indvars.iv.next.i.us.i = add nuw nsw i64 %indvars.iv.i.us.i, 1
  %exitcond.not.i.us.i = icmp eq i64 %indvars.iv.next.i.us.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.us.i, label %if.end.us.i, label %for.body.i.us.i, !llvm.loop !151

if.end.us.i:                                      ; preds = %vector.body, %for.body.i.us.i, %for.body.us.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %_ZN5Mixer6updateEv.exit, label %for.body.us.i, !llvm.loop !152

_ZN5Mixer6updateEv.exit:                          ; preds = %if.end.us.i, %if.end1441, %for.body.lr.ph.i
  store i32 0, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  store i32 0, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  store i32 0, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %819 = load i32, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %shr1443 = ashr i32 %819, 6
  %820 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8, !tbaa !61
  %idxprom.i2623 = sext i32 %shr1443 to i64
  %arrayidx.i2624 = getelementptr inbounds i32, ptr %820, i64 %idxprom.i2623
  %821 = load i32, ptr %arrayidx.i2624, align 4, !tbaa !25
  %and1445 = and i32 %819, 63
  %shl1446 = shl i32 %821, 6
  %or1447 = or i32 %shl1446, %and1445
  %822 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  %mul1448 = shl i32 %822, 1
  %cmp1449 = icmp eq i32 %821, 0
  %conv1450 = zext i1 %cmp1449 to i32
  %add1451 = or i32 %mul1448, %conv1450
  %823 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4
  %add1452 = add nsw i32 %823, 1
  %shl1453 = shl nuw i32 1, %add1452
  %or1454 = or i32 %shl1453, %add1451
  %824 = load i32, ptr @_ZZ9jpegModelR5MixerE7hbcount, align 4, !tbaa !25
  %inc1455 = add nsw i32 %824, 1
  %cmp1456 = icmp sgt i32 %824, 1
  %cmp1458 = icmp eq i32 %823, 0
  %or.cond1754 = select i1 %cmp1456, i1 true, i1 %cmp1458
  %spec.store.select = select i1 %or.cond1754, i32 0, i32 %inc1455
  store i32 %spec.store.select, ptr @_ZZ9jpegModelR5MixerE7hbcount, align 4
  %or.cond1755 = icmp ult i32 %or1447, 256
  br i1 %or.cond1755, label %if.end1465, label %if.then1464

if.then1464:                                      ; preds = %_ZN5Mixer6updateEv.exit
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %825 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %return

if.end1465:                                       ; preds = %_ZN5Mixer6updateEv.exit
  %cmp1474 = icmp eq i32 %spec.store.select, 0
  br i1 %cmp1474, label %if.end1633.thread, label %if.end1633

if.end1633.thread:                                ; preds = %if.end1465
  %idxprom1467 = zext i32 %and1445 to i64
  %arrayidx1472 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %idxprom1467
  %826 = load i8, ptr %arrayidx1472, align 1, !tbaa !9
  %conv1473 = zext i8 %826 to i32
  %arrayidx1468 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %idxprom1467
  %827 = load i8, ptr %arrayidx1468, align 1, !tbaa !9
  %conv1469 = zext i8 %827 to i32
  %828 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE8adv_pred, i64 0, i32 3), align 8, !tbaa !61
  %arrayidx.i2625 = getelementptr inbounds i32, ptr %828, i64 2
  %829 = load i32, ptr %arrayidx.i2625, align 4, !tbaa !25
  %mul1.i2626 = mul i32 %or1454, 30005491
  %mul2.i = mul i32 %or1447, 50004239
  %mul4.i = mul i32 %829, 70004807
  %add3.i2628 = add i32 %mul1.i2626, %mul2.i
  %add5.i2629 = add i32 %add3.i2628, 90000480
  %add7.i2630 = add i32 %add5.i2629, %mul4.i
  %shr.i2631 = lshr i32 %add7.i2630, 9
  %shr10.i2632 = lshr i32 %or1454, 3
  %shr12.i = lshr i32 %or1447, 4
  %shr14.i = lshr i32 %829, 5
  %830 = xor i32 %shr10.i2632, %shr12.i
  %831 = xor i32 %shr14.i, %shr.i2631
  %832 = xor i32 %831, %830
  %833 = xor i32 %832, %add7.i2630
  %xor17.i2633 = xor i32 %833, 67108863
  %834 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE3cxt, i64 0, i32 3), align 8, !tbaa !84
  store i32 %xor17.i2633, ptr %834, align 4, !tbaa !25
  %835 = load i32, ptr %828, align 4, !tbaa !25
  %mul4.i2638 = mul i32 %835, 70004807
  %add5.i2639 = add i32 %add3.i2628, 290003459
  %add7.i2640 = add i32 %add5.i2639, %mul4.i2638
  %shr.i2641 = lshr i32 %add7.i2640, 9
  %shr14.i2644 = lshr i32 %835, 5
  %836 = xor i32 %shr14.i2644, %shr.i2641
  %837 = xor i32 %836, %830
  %838 = xor i32 %837, %add7.i2640
  %xor17.i2645 = xor i32 %838, 67108863
  %arrayidx.i2646 = getelementptr inbounds i32, ptr %834, i64 1
  store i32 %xor17.i2645, ptr %arrayidx.i2646, align 4, !tbaa !25
  %arrayidx.i2647 = getelementptr inbounds i32, ptr %828, i64 1
  %839 = load i32, ptr %arrayidx.i2647, align 4, !tbaa !25
  %mul4.i2652 = mul i32 %839, 70004807
  %add5.i2653 = add i32 %add3.i2628, 490006438
  %add7.i2654 = add i32 %add5.i2653, %mul4.i2652
  %shr.i2655 = lshr i32 %add7.i2654, 9
  %shr14.i2658 = lshr i32 %839, 5
  %840 = xor i32 %shr14.i2658, %shr.i2655
  %841 = xor i32 %840, %830
  %842 = xor i32 %841, %add7.i2654
  %xor17.i2659 = xor i32 %842, 67108863
  %arrayidx.i2660 = getelementptr inbounds i32, ptr %834, i64 2
  store i32 %xor17.i2659, ptr %arrayidx.i2660, align 4, !tbaa !25
  %843 = load i32, ptr @_ZZ9jpegModelR5MixerE3rs1, align 4, !tbaa !25
  %844 = load i32, ptr %arrayidx.i2625, align 4, !tbaa !25
  %mul2.i2664 = mul i32 %843, 50004239
  %mul4.i2666 = mul i32 %844, 70004807
  %add3.i2665 = add i32 %mul2.i2664, %mul1.i2626
  %add5.i2667 = add i32 %add3.i2665, 690009417
  %add7.i2668 = add i32 %add5.i2667, %mul4.i2666
  %shr.i2669 = lshr i32 %add7.i2668, 9
  %shr12.i2671 = lshr i32 %843, 4
  %shr14.i2672 = lshr i32 %844, 5
  %845 = xor i32 %shr10.i2632, %shr12.i2671
  %846 = xor i32 %845, 1
  %847 = xor i32 %shr14.i2672, %shr.i2669
  %848 = xor i32 %847, %846
  %849 = xor i32 %848, %add7.i2668
  %xor17.i2673 = xor i32 %849, 67108863
  %arrayidx.i2674 = getelementptr inbounds i32, ptr %834, i64 3
  store i32 %xor17.i2673, ptr %arrayidx.i2674, align 4, !tbaa !25
  %850 = load i32, ptr %828, align 4, !tbaa !25
  %mul4.i2679 = mul i32 %850, 70004807
  %add5.i2680 = add i32 %add3.i2665, 890012396
  %add7.i2681 = add i32 %add5.i2680, %mul4.i2679
  %shr.i2682 = lshr i32 %add7.i2681, 9
  %shr14.i2685 = lshr i32 %850, 5
  %851 = xor i32 %shr14.i2685, %shr.i2682
  %852 = xor i32 %851, %846
  %853 = xor i32 %852, %add7.i2681
  %xor17.i2686 = xor i32 %853, 67108863
  %arrayidx.i2687 = getelementptr inbounds i32, ptr %834, i64 4
  store i32 %xor17.i2686, ptr %arrayidx.i2687, align 4, !tbaa !25
  %854 = load i32, ptr %arrayidx.i2647, align 4, !tbaa !25
  %mul4.i2693 = mul i32 %854, 70004807
  %add5.i2694 = add i32 %add3.i2665, 1090015375
  %add7.i2695 = add i32 %add5.i2694, %mul4.i2693
  %shr.i2696 = lshr i32 %add7.i2695, 9
  %shr14.i2699 = lshr i32 %854, 5
  %855 = xor i32 %shr14.i2699, %shr.i2696
  %856 = xor i32 %855, %846
  %857 = xor i32 %856, %add7.i2695
  %xor17.i2700 = xor i32 %857, 67108863
  %arrayidx.i2701 = getelementptr inbounds i32, ptr %834, i64 5
  store i32 %xor17.i2700, ptr %arrayidx.i2701, align 4, !tbaa !25
  %858 = load i32, ptr %arrayidx.i2625, align 4, !tbaa !25
  %859 = load i32, ptr %828, align 4, !tbaa !25
  %mul2.i2705 = mul i32 %858, 50004239
  %mul4.i2707 = mul i32 %859, 70004807
  %add3.i2706 = add i32 %mul1.i2626, 1290018354
  %add5.i2708 = add i32 %add3.i2706, %mul2.i2705
  %add7.i2709 = add i32 %add5.i2708, %mul4.i2707
  %shr.i2710 = lshr i32 %add7.i2709, 9
  %shr12.i2712 = lshr i32 %858, 4
  %shr14.i2713 = lshr i32 %859, 5
  %860 = xor i32 %shr12.i2712, %shr14.i2713
  %861 = xor i32 %860, %shr.i2710
  %862 = xor i32 %861, %shr10.i2632
  %863 = xor i32 %862, %add7.i2709
  %xor17.i2714 = xor i32 %863, 67108862
  %arrayidx.i2715 = getelementptr inbounds i32, ptr %834, i64 6
  store i32 %xor17.i2714, ptr %arrayidx.i2715, align 4, !tbaa !25
  %864 = load i32, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %865 = load i32, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %866 = load i32, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  %mul1506 = mul nsw i32 %866, %865
  %sub1507 = sub nsw i32 %864, %mul1506
  %867 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !20
  %sub.i2716 = add nsw i32 %867, -1
  %and.i2717 = and i32 %sub.i2716, %sub1507
  %868 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i2718 = sext i32 %and.i2717 to i64
  %arrayidx.i.i2719 = getelementptr inbounds i8, ptr %868, i64 %idxprom.i.i2718
  %869 = load i8, ptr %arrayidx.i.i2719, align 1, !tbaa !9
  %conv1509 = zext i8 %869 to i32
  %arrayidx.i2720 = getelementptr inbounds i32, ptr %828, i64 3
  %870 = load i32, ptr %arrayidx.i2720, align 4, !tbaa !25
  %mul2.i2723 = mul i32 %conv1509, 50004239
  %mul4.i2725 = mul i32 %870, 70004807
  %add3.i2724 = add i32 %mul1.i2626, 1490021333
  %add5.i2726 = add i32 %add3.i2724, %mul2.i2723
  %add7.i2727 = add i32 %add5.i2726, %mul4.i2725
  %shr.i2728 = lshr i32 %add7.i2727, 9
  %shr12.i2730 = lshr i32 %conv1509, 4
  %shr14.i2731 = lshr i32 %870, 5
  %871 = xor i32 %shr10.i2632, 2
  %872 = xor i32 %shr14.i2731, %shr12.i2730
  %873 = xor i32 %872, %shr.i2728
  %874 = xor i32 %873, %shr10.i2632
  %875 = xor i32 %874, %add7.i2727
  %xor17.i2732 = xor i32 %875, 67108861
  %arrayidx.i2733 = getelementptr inbounds i32, ptr %834, i64 7
  store i32 %xor17.i2732, ptr %arrayidx.i2733, align 4, !tbaa !25
  %876 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8, !tbaa !61
  %arrayidx.i2735 = getelementptr inbounds i32, ptr %876, i64 %idxprom.i2623
  %877 = load i32, ptr %arrayidx.i2735, align 4, !tbaa !25
  %sub1516 = sub nsw i32 %864, %877
  %and.i2737 = and i32 %sub1516, %sub.i2716
  %idxprom.i.i2738 = sext i32 %and.i2737 to i64
  %arrayidx.i.i2739 = getelementptr inbounds i8, ptr %868, i64 %idxprom.i.i2738
  %878 = load i8, ptr %arrayidx.i.i2739, align 1, !tbaa !9
  %conv1518 = zext i8 %878 to i32
  %879 = load i32, ptr %arrayidx.i2720, align 4, !tbaa !25
  %mul2.i2743 = mul i32 %conv1518, 50004239
  %mul4.i2745 = mul i32 %879, 70004807
  %add3.i2744 = add i32 %mul1.i2626, 1690024312
  %add5.i2746 = add i32 %add3.i2744, %mul2.i2743
  %add7.i2747 = add i32 %add5.i2746, %mul4.i2745
  %shr.i2748 = lshr i32 %add7.i2747, 9
  %shr12.i2750 = lshr i32 %conv1518, 4
  %shr14.i2751 = lshr i32 %879, 5
  %880 = xor i32 %shr14.i2751, %shr12.i2750
  %881 = xor i32 %880, %shr.i2748
  %882 = xor i32 %881, %shr10.i2632
  %883 = xor i32 %882, %add7.i2747
  %xor17.i2752 = xor i32 %883, 67108861
  %arrayidx.i2753 = getelementptr inbounds i32, ptr %834, i64 8
  store i32 %xor17.i2752, ptr %arrayidx.i2753, align 4, !tbaa !25
  %884 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE3lcp, i64 0, i32 3), align 8, !tbaa !61
  %885 = load i32, ptr %884, align 4, !tbaa !25
  %arrayidx.i2754 = getelementptr inbounds i32, ptr %884, i64 1
  %886 = load i32, ptr %arrayidx.i2754, align 4, !tbaa !25
  %887 = load i32, ptr %arrayidx.i2647, align 4, !tbaa !25
  %add.i2757 = add i32 %mul1.i2626, 2000029790
  %mul2.i2758 = mul i32 %885, 50004239
  %add3.i2759 = add i32 %add.i2757, %mul2.i2758
  %mul4.i2760 = mul i32 %886, 70004807
  %add5.i2761 = add i32 %add3.i2759, %mul4.i2760
  %mul6.i = mul i32 %887, 110002499
  %add7.i2762 = add i32 %add5.i2761, %mul6.i
  %shr.i2763 = lshr i32 %add7.i2762, 9
  %shr12.i2765 = lshr i32 %885, 4
  %shr14.i2766 = lshr i32 %886, 5
  %shr16.i = lshr i32 %887, 6
  %888 = xor i32 %shr12.i2765, %shr14.i2766
  %889 = xor i32 %888, %shr16.i
  %890 = xor i32 %889, %shr.i2763
  %891 = xor i32 %890, %871
  %xor17.i2767 = xor i32 %891, %add7.i2762
  %arrayidx.i2768 = getelementptr inbounds i32, ptr %834, i64 9
  store i32 %xor17.i2767, ptr %arrayidx.i2768, align 4, !tbaa !25
  %892 = load i32, ptr %884, align 4, !tbaa !25
  %893 = load i32, ptr %arrayidx.i2754, align 4, !tbaa !25
  %mul2.i2772 = mul i32 %892, 50004239
  %mul4.i2774 = mul i32 %893, 70004807
  %mul6.i2776 = mul i32 %or1447, 110002499
  %add.i2771 = add i32 %mul6.i2776, -2094934527
  %add3.i2773 = add i32 %add.i2771, %mul1.i2626
  %add5.i2775 = add i32 %add3.i2773, %mul2.i2772
  %add7.i2777 = add i32 %add5.i2775, %mul4.i2774
  %shr.i2778 = lshr i32 %add7.i2777, 9
  %shr12.i2780 = lshr i32 %892, 4
  %shr14.i2781 = lshr i32 %893, 5
  %shr16.i2782 = and i32 %821, 67108863
  %894 = xor i32 %shr16.i2782, %shr12.i2780
  %895 = xor i32 %894, %shr14.i2781
  %896 = xor i32 %895, %shr.i2778
  %897 = xor i32 %896, %871
  %xor17.i2783 = xor i32 %897, %add7.i2777
  %arrayidx.i2784 = getelementptr inbounds i32, ptr %834, i64 10
  store i32 %xor17.i2783, ptr %arrayidx.i2784, align 4, !tbaa !25
  %898 = load i32, ptr %884, align 4, !tbaa !25
  %arrayidx.i2785 = getelementptr inbounds i32, ptr %884, i64 2
  %899 = load i32, ptr %arrayidx.i2785, align 4, !tbaa !25
  %div1536 = sdiv i32 %899, 3
  %mul2.i2788 = mul i32 %conv1469, 50004239
  %mul4.i2790 = mul i32 %898, 70004807
  %mul6.i2792 = mul i32 %div1536, 110002499
  %add.i2787 = add i32 %mul2.i2788, %mul1.i2626
  %add3.i2789 = add i32 %add.i2787, -1894931548
  %add5.i2791 = add i32 %add3.i2789, %mul4.i2790
  %add7.i2793 = add i32 %add5.i2791, %mul6.i2792
  %shr.i2794 = lshr i32 %add7.i2793, 9
  %shr12.i2796 = lshr i32 %conv1469, 4
  %shr14.i2797 = lshr i32 %898, 5
  %shr16.i2798 = lshr i32 %div1536, 6
  %900 = xor i32 %shr10.i2632, 3
  %901 = xor i32 %shr14.i2797, %shr16.i2798
  %902 = xor i32 %901, %shr.i2794
  %903 = xor i32 %902, %900
  %904 = xor i32 %903, %shr12.i2796
  %xor17.i2799 = xor i32 %904, %add7.i2793
  %arrayidx.i2800 = getelementptr inbounds i32, ptr %834, i64 11
  store i32 %xor17.i2799, ptr %arrayidx.i2800, align 4, !tbaa !25
  %905 = load i32, ptr %arrayidx.i2754, align 4, !tbaa !25
  %arrayidx.i2802 = getelementptr inbounds i32, ptr %884, i64 3
  %906 = load i32, ptr %arrayidx.i2802, align 4, !tbaa !25
  %div1542 = sdiv i32 %906, 3
  %mul2.i2805 = mul i32 %conv1473, 50004239
  %mul4.i2807 = mul i32 %905, 70004807
  %mul6.i2809 = mul i32 %div1542, 110002499
  %add.i2804 = add i32 %mul2.i2805, %mul1.i2626
  %add3.i2806 = add i32 %add.i2804, -1694928569
  %add5.i2808 = add i32 %add3.i2806, %mul4.i2807
  %add7.i2810 = add i32 %add5.i2808, %mul6.i2809
  %shr.i2811 = lshr i32 %add7.i2810, 9
  %shr12.i2813 = lshr i32 %conv1473, 4
  %shr14.i2814 = lshr i32 %905, 5
  %shr16.i2815 = lshr i32 %div1542, 6
  %907 = xor i32 %shr14.i2814, %shr16.i2815
  %908 = xor i32 %907, %shr.i2811
  %909 = xor i32 %908, %900
  %910 = xor i32 %909, %shr12.i2813
  %xor17.i2816 = xor i32 %910, %add7.i2810
  %arrayidx.i2817 = getelementptr inbounds i32, ptr %834, i64 12
  store i32 %xor17.i2816, ptr %arrayidx.i2817, align 4, !tbaa !25
  %shr1546 = ashr i32 %819, 2
  %cond.i2818 = tail call i32 @llvm.smin.i32(i32 %and1445, i32 3)
  %mul2.i2821 = mul i32 %shr1546, 50004239
  %mul4.i2823 = mul nuw nsw i32 %cond.i2818, 70004807
  %add3.i2822 = add i32 %mul2.i2821, -1604928089
  %add5.i2824 = add i32 %add3.i2822, %mul4.i2823
  %add7.i2825 = add i32 %add5.i2824, %mul1.i2626
  %shr.i2826 = lshr i32 %add7.i2825, 9
  %shr12.i2828 = lshr i32 %shr1546, 4
  %911 = xor i32 %shr12.i2828, %shr.i2826
  %912 = xor i32 %911, %shr10.i2632
  %913 = xor i32 %912, %add7.i2825
  %xor17.i2830 = xor i32 %913, 67108860
  %arrayidx.i2831 = getelementptr inbounds i32, ptr %834, i64 13
  store i32 %xor17.i2830, ptr %arrayidx.i2831, align 4, !tbaa !25
  %914 = load i32, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %shr1552 = ashr i32 %914, 1
  %mul4.i2836 = mul i32 %shr1552, 70004807
  %add5.i2837 = add i32 %add3.i2628, -1404925110
  %add7.i2838 = add i32 %add5.i2837, %mul4.i2836
  %shr.i2839 = lshr i32 %add7.i2838, 9
  %shr14.i2842 = lshr i32 %shr1552, 5
  %915 = xor i32 %shr14.i2842, %shr.i2839
  %916 = xor i32 %915, %shr12.i
  %917 = xor i32 %916, %shr10.i2632
  %918 = xor i32 %917, %add7.i2838
  %xor17.i2843 = xor i32 %918, 67108860
  %arrayidx.i2844 = getelementptr inbounds i32, ptr %834, i64 14
  store i32 %xor17.i2843, ptr %arrayidx.i2844, align 4, !tbaa !25
  %shr1556 = ashr i32 %914, 2
  %919 = load i32, ptr %884, align 4, !tbaa !25
  %920 = load i32, ptr %arrayidx.i2785, align 4, !tbaa !25
  %div1559 = sdiv i32 %920, 3
  %mul1560 = shl nsw i32 %div1559, 8
  %add1561 = add nsw i32 %mul1560, %919
  %921 = load i32, ptr %arrayidx.i2754, align 4, !tbaa !25
  %922 = load i32, ptr %arrayidx.i2802, align 4, !tbaa !25
  %div1564 = sdiv i32 %922, 3
  %mul1565 = shl nsw i32 %div1564, 8
  %add1566 = add nsw i32 %mul1565, %921
  %add.i2849 = add i32 %mul1.i2626, -1094919632
  %mul2.i2850 = mul i32 %shr1556, 50004239
  %add3.i2851 = add i32 %add.i2849, %mul2.i2850
  %mul4.i2852 = mul i32 %add1561, 70004807
  %add5.i2853 = add i32 %add3.i2851, %mul4.i2852
  %mul6.i2854 = mul i32 %add1566, 110002499
  %add7.i2855 = add i32 %add5.i2853, %mul6.i2854
  %shr.i2856 = lshr i32 %add7.i2855, 9
  %shr12.i2858 = lshr i32 %shr1556, 4
  %shr14.i2859 = lshr i32 %add1561, 5
  %shr16.i2860 = lshr i32 %add1566, 6
  %923 = xor i32 %shr10.i2632, 4
  %924 = xor i32 %shr12.i2858, %shr14.i2859
  %925 = xor i32 %924, %shr16.i2860
  %926 = xor i32 %925, %shr.i2856
  %927 = xor i32 %926, %923
  %xor17.i2861 = xor i32 %927, %add7.i2855
  %arrayidx.i2862 = getelementptr inbounds i32, ptr %834, i64 15
  store i32 %xor17.i2861, ptr %arrayidx.i2862, align 4, !tbaa !25
  %928 = load i32, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !25
  %shr1570 = ashr i32 %928, 4
  %mul2.i2865 = mul i32 %shr1570, 50004239
  %mul4.i2867 = mul i32 %or1447, 70004807
  %add3.i2866 = add i32 %mul1.i2626, %mul4.i2867
  %add5.i2868 = add i32 %add3.i2866, -1004919152
  %add7.i2869 = add i32 %add5.i2868, %mul2.i2865
  %shr.i2870 = lshr i32 %add7.i2869, 9
  %shr12.i2872 = lshr i32 %shr1570, 4
  %shr14.i2873 = lshr i32 %or1447, 5
  %929 = xor i32 %shr12.i2872, %shr.i2870
  %930 = xor i32 %929, %923
  %931 = xor i32 %930, %shr14.i2873
  %932 = xor i32 %931, %add7.i2869
  %xor17.i2874 = xor i32 %932, 67108863
  %arrayidx.i2875 = getelementptr inbounds i32, ptr %834, i64 16
  store i32 %xor17.i2874, ptr %arrayidx.i2875, align 4, !tbaa !25
  %add5.i2881 = add i32 %add3.i2665, -804916173
  %add7.i2882 = add i32 %add5.i2881, %mul4.i2867
  %shr.i2883 = lshr i32 %add7.i2882, 9
  %933 = xor i32 %923, %shr.i2883
  %934 = xor i32 %933, %shr14.i2873
  %935 = xor i32 %934, %shr12.i2671
  %936 = xor i32 %935, %add7.i2882
  %xor17.i2887 = xor i32 %936, 67108863
  %arrayidx.i2888 = getelementptr inbounds i32, ptr %834, i64 17
  store i32 %xor17.i2887, ptr %arrayidx.i2888, align 4, !tbaa !25
  %shr1577 = ashr i32 %819, 3
  %937 = load i32, ptr @_ZZ9jpegModelR5MixerE5ssum3, align 4, !tbaa !25
  %shr1578 = ashr i32 %937, 3
  %938 = load i32, ptr %arrayidx.i2720, align 4, !tbaa !25
  %mul2.i2892 = mul i32 %shr1577, 50004239
  %mul4.i2894 = mul i32 %shr1578, 70004807
  %mul6.i2896 = mul i32 %938, 110002499
  %add.i2891 = add i32 %mul2.i2892, -494910695
  %add3.i2893 = add i32 %add.i2891, %mul1.i2626
  %add5.i2895 = add i32 %add3.i2893, %mul4.i2894
  %add7.i2897 = add i32 %add5.i2895, %mul6.i2896
  %shr.i2898 = lshr i32 %add7.i2897, 9
  %shr12.i2900 = lshr i32 %shr1577, 4
  %shr14.i2901 = lshr i32 %shr1578, 5
  %shr16.i2902 = lshr i32 %938, 6
  %939 = xor i32 %shr12.i2900, %shr14.i2901
  %940 = xor i32 %939, %shr16.i2902
  %941 = xor i32 %940, %shr.i2898
  %942 = xor i32 %941, %923
  %xor17.i2903 = xor i32 %942, %add7.i2897
  %arrayidx.i2904 = getelementptr inbounds i32, ptr %834, i64 18
  store i32 %xor17.i2903, ptr %arrayidx.i2904, align 4, !tbaa !25
  %943 = load i32, ptr %884, align 4, !tbaa !25
  %div1584 = sdiv i32 %943, 3
  %944 = load i32, ptr %arrayidx.i2754, align 4, !tbaa !25
  %div1586 = sdiv i32 %944, 3
  %arrayidx.i2906 = getelementptr inbounds i32, ptr %828, i64 5
  %945 = load i32, ptr %arrayidx.i2906, align 4, !tbaa !25
  %add.i2908 = add i32 %mul1.i2626, -294907716
  %mul2.i2909 = mul i32 %div1584, 50004239
  %add3.i2910 = add i32 %add.i2908, %mul2.i2909
  %mul4.i2911 = mul i32 %div1586, 70004807
  %add5.i2912 = add i32 %add3.i2910, %mul4.i2911
  %mul6.i2913 = mul i32 %945, 110002499
  %add7.i2914 = add i32 %add5.i2912, %mul6.i2913
  %shr.i2915 = lshr i32 %add7.i2914, 9
  %shr12.i2917 = lshr i32 %div1584, 4
  %shr14.i2918 = lshr i32 %div1586, 5
  %shr16.i2919 = lshr i32 %945, 6
  %946 = xor i32 %shr12.i2917, %shr14.i2918
  %947 = xor i32 %946, %shr16.i2919
  %948 = xor i32 %947, %shr.i2915
  %949 = xor i32 %shr10.i2632, %948
  %950 = xor i32 %949, %add7.i2914
  %xor17.i2920 = xor i32 %950, 5
  %arrayidx.i2921 = getelementptr inbounds i32, ptr %834, i64 19
  store i32 %xor17.i2920, ptr %arrayidx.i2921, align 4, !tbaa !25
  %951 = load i8, ptr %arrayidx.i.i2719, align 1, !tbaa !9
  %conv1594 = zext i8 %951 to i32
  %arrayidx.i2926 = getelementptr inbounds i32, ptr %828, i64 6
  %952 = load i32, ptr %arrayidx.i2926, align 4, !tbaa !25
  %mul2.i2929 = mul i32 %conv1594, 50004239
  %mul4.i2931 = mul i32 %952, 70004807
  %add3.i2930 = add i32 %mul1.i2626, -204907236
  %add5.i2932 = add i32 %add3.i2930, %mul2.i2929
  %add7.i2933 = add i32 %add5.i2932, %mul4.i2931
  %shr.i2934 = lshr i32 %add7.i2933, 9
  %shr12.i2936 = lshr i32 %conv1594, 4
  %shr14.i2937 = lshr i32 %952, 5
  %953 = xor i32 %shr14.i2937, %shr12.i2936
  %954 = xor i32 %953, %shr.i2934
  %955 = xor i32 %954, %shr10.i2632
  %956 = xor i32 %955, %add7.i2933
  %xor17.i2938 = xor i32 %956, 67108858
  %arrayidx.i2939 = getelementptr inbounds i32, ptr %834, i64 20
  store i32 %xor17.i2938, ptr %arrayidx.i2939, align 4, !tbaa !25
  %957 = load i32, ptr %arrayidx.i2735, align 4, !tbaa !25
  %sub1601 = sub nsw i32 %864, %957
  %and.i2943 = and i32 %sub1601, %sub.i2716
  %idxprom.i.i2944 = sext i32 %and.i2943 to i64
  %arrayidx.i.i2945 = getelementptr inbounds i8, ptr %868, i64 %idxprom.i.i2944
  %958 = load i8, ptr %arrayidx.i.i2945, align 1, !tbaa !9
  %conv1603 = zext i8 %958 to i32
  %arrayidx.i2946 = getelementptr inbounds i32, ptr %828, i64 4
  %959 = load i32, ptr %arrayidx.i2946, align 4, !tbaa !25
  %mul2.i2949 = mul i32 %conv1603, 50004239
  %mul4.i2951 = mul i32 %959, 70004807
  %add3.i2950 = add i32 %mul1.i2626, -4904257
  %add5.i2952 = add i32 %add3.i2950, %mul2.i2949
  %add7.i2953 = add i32 %add5.i2952, %mul4.i2951
  %shr.i2954 = lshr i32 %add7.i2953, 9
  %shr12.i2956 = lshr i32 %conv1603, 4
  %shr14.i2957 = lshr i32 %959, 5
  %960 = xor i32 %shr14.i2957, %shr12.i2956
  %961 = xor i32 %960, %shr.i2954
  %962 = xor i32 %961, %shr10.i2632
  %963 = xor i32 %962, %add7.i2953
  %xor17.i2958 = xor i32 %963, 67108858
  %arrayidx.i2959 = getelementptr inbounds i32, ptr %834, i64 21
  store i32 %xor17.i2958, ptr %arrayidx.i2959, align 4, !tbaa !25
  %964 = load i32, ptr %arrayidx.i2625, align 4, !tbaa !25
  %mul2.i2963 = mul i32 %964, 50004239
  %add3.i2964 = add i32 %mul1.i2626, 125093915
  %add7.i2966 = add i32 %add3.i2964, %mul2.i2963
  %shr.i2967 = lshr i32 %add7.i2966, 9
  %shr12.i2969 = lshr i32 %964, 4
  %965 = xor i32 %shr12.i2969, %shr.i2967
  %966 = xor i32 %965, %shr10.i2632
  %967 = xor i32 %966, %add7.i2966
  %xor17.i2970 = xor i32 %967, 67108869
  %arrayidx.i2971 = getelementptr inbounds i32, ptr %834, i64 22
  store i32 %xor17.i2970, ptr %arrayidx.i2971, align 4, !tbaa !25
  %968 = load i32, ptr %828, align 4, !tbaa !25
  %mul2.i2974 = mul i32 %968, 50004239
  %add7.i2977 = add i32 %add3.i2964, %mul2.i2974
  %shr.i2978 = lshr i32 %add7.i2977, 9
  %shr12.i2980 = lshr i32 %968, 4
  %969 = xor i32 %shr12.i2980, %shr.i2978
  %970 = xor i32 %969, %shr10.i2632
  %971 = xor i32 %970, %add7.i2977
  %xor17.i2981 = xor i32 %971, 67108869
  %arrayidx.i2982 = getelementptr inbounds i32, ptr %834, i64 23
  store i32 %xor17.i2981, ptr %arrayidx.i2982, align 4, !tbaa !25
  %972 = load i32, ptr %arrayidx.i2647, align 4, !tbaa !25
  %mul2.i2986 = mul i32 %972, 50004239
  %add7.i2989 = add i32 %add3.i2964, %mul2.i2986
  %shr.i2990 = lshr i32 %add7.i2989, 9
  %shr12.i2992 = lshr i32 %972, 4
  %973 = xor i32 %shr12.i2992, %shr.i2990
  %974 = xor i32 %973, %shr10.i2632
  %975 = xor i32 %974, %add7.i2989
  %xor17.i2993 = xor i32 %975, 67108869
  %arrayidx.i2994 = getelementptr inbounds i32, ptr %834, i64 24
  store i32 %xor17.i2993, ptr %arrayidx.i2994, align 4, !tbaa !25
  %976 = load i32, ptr %arrayidx.i2754, align 4, !tbaa !25
  %977 = load i32, ptr %arrayidx.i2926, align 4, !tbaa !25
  %mul4.i3001 = mul i32 %976, 70004807
  %mul6.i3003 = mul i32 %977, 110002499
  %add3.i3000 = add i32 %add.i2804, 505104200
  %add5.i3002 = add i32 %add3.i3000, %mul4.i3001
  %add7.i3004 = add i32 %add5.i3002, %mul6.i3003
  %shr.i3005 = lshr i32 %add7.i3004, 9
  %shr14.i3008 = lshr i32 %976, 5
  %shr16.i3009 = lshr i32 %977, 6
  %978 = xor i32 %shr10.i2632, 6
  %979 = xor i32 %shr14.i3008, %shr16.i3009
  %980 = xor i32 %979, %shr.i3005
  %981 = xor i32 %980, %978
  %982 = xor i32 %981, %shr12.i2813
  %xor17.i3010 = xor i32 %982, %add7.i3004
  %arrayidx.i3011 = getelementptr inbounds i32, ptr %834, i64 25
  store i32 %xor17.i3010, ptr %arrayidx.i3011, align 4, !tbaa !25
  %983 = load i32, ptr %884, align 4, !tbaa !25
  %984 = load i32, ptr %arrayidx.i2946, align 4, !tbaa !25
  %mul4.i3017 = mul i32 %983, 70004807
  %mul6.i3019 = mul i32 %984, 110002499
  %add3.i3016 = add i32 %add.i2787, 705107179
  %add5.i3018 = add i32 %add3.i3016, %mul4.i3017
  %add7.i3020 = add i32 %add5.i3018, %mul6.i3019
  %shr.i3021 = lshr i32 %add7.i3020, 9
  %shr14.i3024 = lshr i32 %983, 5
  %shr16.i3025 = lshr i32 %984, 6
  %985 = xor i32 %shr14.i3024, %shr16.i3025
  %986 = xor i32 %985, %shr.i3021
  %987 = xor i32 %986, %978
  %988 = xor i32 %987, %shr12.i2796
  %xor17.i3026 = xor i32 %988, %add7.i3020
  %arrayidx.i3027 = getelementptr inbounds i32, ptr %834, i64 26
  store i32 %xor17.i3026, ptr %arrayidx.i3027, align 4, !tbaa !25
  %989 = load i32, ptr %884, align 4, !tbaa !25
  %990 = load i32, ptr %arrayidx.i2754, align 4, !tbaa !25
  %991 = load i32, ptr %arrayidx.i2720, align 4, !tbaa !25
  %add.i3031 = add i32 %mul1.i2626, 905110158
  %mul2.i3032 = mul i32 %989, 50004239
  %add3.i3033 = add i32 %add.i3031, %mul2.i3032
  %mul4.i3034 = mul i32 %990, 70004807
  %add5.i3035 = add i32 %add3.i3033, %mul4.i3034
  %mul6.i3036 = mul i32 %991, 110002499
  %add7.i3037 = add i32 %add5.i3035, %mul6.i3036
  %shr.i3038 = lshr i32 %add7.i3037, 9
  %shr12.i3040 = lshr i32 %989, 4
  %shr14.i3041 = lshr i32 %990, 5
  %shr16.i3042 = lshr i32 %991, 6
  %992 = xor i32 %shr12.i3040, %shr14.i3041
  %993 = xor i32 %992, %shr16.i3042
  %994 = xor i32 %993, %shr.i3038
  %995 = xor i32 %994, %978
  %xor17.i3043 = xor i32 %995, %add7.i3037
  %arrayidx.i3044 = getelementptr inbounds i32, ptr %834, i64 27
  store i32 %xor17.i3043, ptr %arrayidx.i3044, align 4, !tbaa !25
  %.pre3441 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %inc.i30453484 = add nsw i32 %.pre3441, 1
  store i32 %inc.i30453484, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %996 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %idxprom.i.i30463485 = sext i32 %.pre3441 to i64
  %arrayidx.i.i30473486 = getelementptr inbounds i16, ptr %996, i64 %idxprom.i.i30463485
  store i16 128, ptr %arrayidx.i.i30473486, align 2, !tbaa !31
  br label %for.body1638

if.end1633:                                       ; preds = %if.end1465
  store i32 1, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %997 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  store i16 128, ptr %997, align 2, !tbaa !31
  %cond = icmp eq i32 %spec.store.select, 1
  %998 = and i32 %822, 1
  %.pre3442 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  br i1 %cond, label %sw.bb1652, label %sw.default

for.body1638:                                     ; preds = %if.end1633.thread, %for.body1638
  %indvars.iv3420 = phi i64 [ 0, %if.end1633.thread ], [ %indvars.iv.next3421, %for.body1638 ]
  %999 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE3cxt, i64 0, i32 3), align 8, !tbaa !84
  %arrayidx.i3049 = getelementptr inbounds i32, ptr %999, i64 %indvars.iv3420
  %1000 = load i32, ptr %arrayidx.i3049, align 4, !tbaa !25
  %call1640 = tail call noundef ptr @_ZN2BHILi9EEixEj(ptr noundef nonnull align 8 dereferenceable(28) @_ZZ9jpegModelR5MixerE1t, i32 noundef %1000)
  %add.ptr = getelementptr inbounds i8, ptr %call1640, i64 1
  %1001 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i3051 = getelementptr inbounds ptr, ptr %1001, i64 %indvars.iv3420
  store ptr %add.ptr, ptr %arrayidx.i3051, align 8, !tbaa !5
  %1002 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i3053 = getelementptr inbounds ptr, ptr %1002, i64 %indvars.iv3420
  %1003 = load ptr, ptr %arrayidx.i3053, align 8, !tbaa !5
  %1004 = load i8, ptr %1003, align 1, !tbaa !9
  %conv1645 = zext i8 %1004 to i32
  %cxt.i.i = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %indvars.iv3420, i32 1
  %1005 = load i32, ptr %cxt.i.i, align 4, !tbaa !82
  %data.i.i.i = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %indvars.iv3420, i32 2, i32 3
  %1006 = load ptr, ptr %data.i.i.i, align 8, !tbaa !84
  %idxprom.i.i.i = sext i32 %1005 to i64
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %1006, i64 %idxprom.i.i.i
  %1007 = load i32, ptr %arrayidx.i.i.i, align 4, !tbaa !25
  %and.i.i3054 = and i32 %1007, 1023
  %cmp.i.i.not = icmp eq i32 %and.i.i3054, 1023
  %inc.i.i = add i32 %1007, 1
  %or.i.i = or i32 %1007, 1023
  %p0.0.i.i = select i1 %cmp.i.i.not, i32 %or.i.i, i32 %inc.i.i
  %shr.i.i = lshr i32 %1007, 10
  %1008 = load i32, ptr @y, align 4, !tbaa !25
  %shl.i.i = shl i32 %1008, 22
  %sub.i.i = sub nsw i32 %shl.i.i, %shr.i.i
  %shr3.i.i = ashr i32 %sub.i.i, 3
  %idxprom.i.i3055 = zext i32 %and.i.i3054 to i64
  %arrayidx4.i.i = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %idxprom.i.i3055
  %1009 = load i32, ptr %arrayidx4.i.i, align 4, !tbaa !25
  %mul.i.i = mul nsw i32 %shr3.i.i, %1009
  %and5.i.i = and i32 %mul.i.i, -1024
  %add.i.i3056 = add i32 %and5.i.i, %p0.0.i.i
  store i32 %add.i.i3056, ptr %arrayidx.i.i.i, align 4, !tbaa !25
  store i32 %conv1645, ptr %cxt.i.i, align 4, !tbaa !82
  %idxprom.i2.i = zext i8 %1004 to i64
  %arrayidx.i.i3057 = getelementptr inbounds i32, ptr %1006, i64 %idxprom.i2.i
  %1010 = load i32, ptr %arrayidx.i.i3057, align 4, !tbaa !25
  %shr.i3058 = lshr i32 %1010, 20
  %1011 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %idxprom.i.i3059 = zext i32 %shr.i3058 to i64
  %arrayidx.i.i3060 = getelementptr inbounds i16, ptr %1011, i64 %idxprom.i.i3059
  %1012 = load i16, ptr %arrayidx.i.i3060, align 2, !tbaa !31
  %1013 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %inc.i3062 = add nsw i32 %1013, 1
  store i32 %inc.i3062, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %1014 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %idxprom.i.i3063 = sext i32 %1013 to i64
  %arrayidx.i.i3064 = getelementptr inbounds i16, ptr %1014, i64 %idxprom.i.i3063
  store i16 %1012, ptr %arrayidx.i.i3064, align 2, !tbaa !31
  %indvars.iv.next3421 = add nuw nsw i64 %indvars.iv3420, 1
  %exitcond3423.not = icmp eq i64 %indvars.iv.next3421, 28
  br i1 %exitcond3423.not, label %sw.epilog, label %for.body1638, !llvm.loop !153

sw.bb1652:                                        ; preds = %if.end1633
  %.not = icmp eq i32 %998, 0
  %add1656 = select i1 %.not, i64 1, i64 4
  br label %for.body1661

for.body1661:                                     ; preds = %sw.bb1652, %for.body1661
  %1015 = phi ptr [ %.pre3442, %sw.bb1652 ], [ %1017, %for.body1661 ]
  %indvars.iv3416 = phi i64 [ 0, %sw.bb1652 ], [ %indvars.iv.next3417, %for.body1661 ]
  %arrayidx.i3066 = getelementptr inbounds ptr, ptr %1015, i64 %indvars.iv3416
  %1016 = load ptr, ptr %arrayidx.i3066, align 8, !tbaa !5
  %add.ptr1663 = getelementptr inbounds i8, ptr %1016, i64 %add1656
  store ptr %add.ptr1663, ptr %arrayidx.i3066, align 8, !tbaa !5
  %1017 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i3068 = getelementptr inbounds ptr, ptr %1017, i64 %indvars.iv3416
  %1018 = load ptr, ptr %arrayidx.i3068, align 8, !tbaa !5
  %1019 = load i8, ptr %1018, align 1, !tbaa !9
  %conv1667 = zext i8 %1019 to i32
  %cxt.i.i3069 = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %indvars.iv3416, i32 1
  %1020 = load i32, ptr %cxt.i.i3069, align 4, !tbaa !82
  %data.i.i.i3070 = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %indvars.iv3416, i32 2, i32 3
  %1021 = load ptr, ptr %data.i.i.i3070, align 8, !tbaa !84
  %idxprom.i.i.i3071 = sext i32 %1020 to i64
  %arrayidx.i.i.i3072 = getelementptr inbounds i32, ptr %1021, i64 %idxprom.i.i.i3071
  %1022 = load i32, ptr %arrayidx.i.i.i3072, align 4, !tbaa !25
  %and.i.i3073 = and i32 %1022, 1023
  %cmp.i.i3074.not = icmp eq i32 %and.i.i3073, 1023
  %inc.i.i3075 = add i32 %1022, 1
  %or.i.i3077 = or i32 %1022, 1023
  %p0.0.i.i3078 = select i1 %cmp.i.i3074.not, i32 %or.i.i3077, i32 %inc.i.i3075
  %shr.i.i3079 = lshr i32 %1022, 10
  %1023 = load i32, ptr @y, align 4, !tbaa !25
  %shl.i.i3080 = shl i32 %1023, 22
  %sub.i.i3081 = sub nsw i32 %shl.i.i3080, %shr.i.i3079
  %shr3.i.i3082 = ashr i32 %sub.i.i3081, 3
  %idxprom.i.i3083 = zext i32 %and.i.i3073 to i64
  %arrayidx4.i.i3084 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %idxprom.i.i3083
  %1024 = load i32, ptr %arrayidx4.i.i3084, align 4, !tbaa !25
  %mul.i.i3085 = mul nsw i32 %shr3.i.i3082, %1024
  %and5.i.i3086 = and i32 %mul.i.i3085, -1024
  %add.i.i3087 = add i32 %and5.i.i3086, %p0.0.i.i3078
  store i32 %add.i.i3087, ptr %arrayidx.i.i.i3072, align 4, !tbaa !25
  store i32 %conv1667, ptr %cxt.i.i3069, align 4, !tbaa !82
  %idxprom.i2.i3088 = zext i8 %1019 to i64
  %arrayidx.i.i3089 = getelementptr inbounds i32, ptr %1021, i64 %idxprom.i2.i3088
  %1025 = load i32, ptr %arrayidx.i.i3089, align 4, !tbaa !25
  %shr.i3090 = lshr i32 %1025, 20
  %1026 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %idxprom.i.i3091 = zext i32 %shr.i3090 to i64
  %arrayidx.i.i3092 = getelementptr inbounds i16, ptr %1026, i64 %idxprom.i.i3091
  %1027 = load i16, ptr %arrayidx.i.i3092, align 2, !tbaa !31
  %1028 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %inc.i3094 = add nsw i32 %1028, 1
  store i32 %inc.i3094, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %1029 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %idxprom.i.i3095 = sext i32 %1028 to i64
  %arrayidx.i.i3096 = getelementptr inbounds i16, ptr %1029, i64 %idxprom.i.i3095
  store i16 %1027, ptr %arrayidx.i.i3096, align 2, !tbaa !31
  %indvars.iv.next3417 = add nuw nsw i64 %indvars.iv3416, 1
  %exitcond3419.not = icmp eq i64 %indvars.iv.next3417, 28
  br i1 %exitcond3419.not, label %sw.epilog, label %for.body1661, !llvm.loop !154

sw.default:                                       ; preds = %if.end1633
  %add1676 = add nuw nsw i32 %998, 1
  %idx.ext1683 = zext i32 %add1676 to i64
  br label %for.body1681

for.body1681:                                     ; preds = %sw.default, %for.body1681
  %1030 = phi ptr [ %.pre3442, %sw.default ], [ %1032, %for.body1681 ]
  %indvars.iv3424 = phi i64 [ 0, %sw.default ], [ %indvars.iv.next3425, %for.body1681 ]
  %arrayidx.i3098 = getelementptr inbounds ptr, ptr %1030, i64 %indvars.iv3424
  %1031 = load ptr, ptr %arrayidx.i3098, align 8, !tbaa !5
  %add.ptr1684 = getelementptr inbounds i8, ptr %1031, i64 %idx.ext1683
  store ptr %add.ptr1684, ptr %arrayidx.i3098, align 8, !tbaa !5
  %1032 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %arrayidx.i3100 = getelementptr inbounds ptr, ptr %1032, i64 %indvars.iv3424
  %1033 = load ptr, ptr %arrayidx.i3100, align 8, !tbaa !5
  %1034 = load i8, ptr %1033, align 1, !tbaa !9
  %conv1688 = zext i8 %1034 to i32
  %cxt.i.i3101 = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %indvars.iv3424, i32 1
  %1035 = load i32, ptr %cxt.i.i3101, align 4, !tbaa !82
  %data.i.i.i3102 = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %indvars.iv3424, i32 2, i32 3
  %1036 = load ptr, ptr %data.i.i.i3102, align 8, !tbaa !84
  %idxprom.i.i.i3103 = sext i32 %1035 to i64
  %arrayidx.i.i.i3104 = getelementptr inbounds i32, ptr %1036, i64 %idxprom.i.i.i3103
  %1037 = load i32, ptr %arrayidx.i.i.i3104, align 4, !tbaa !25
  %and.i.i3105 = and i32 %1037, 1023
  %cmp.i.i3106.not = icmp eq i32 %and.i.i3105, 1023
  %inc.i.i3107 = add i32 %1037, 1
  %or.i.i3109 = or i32 %1037, 1023
  %p0.0.i.i3110 = select i1 %cmp.i.i3106.not, i32 %or.i.i3109, i32 %inc.i.i3107
  %shr.i.i3111 = lshr i32 %1037, 10
  %1038 = load i32, ptr @y, align 4, !tbaa !25
  %shl.i.i3112 = shl i32 %1038, 22
  %sub.i.i3113 = sub nsw i32 %shl.i.i3112, %shr.i.i3111
  %shr3.i.i3114 = ashr i32 %sub.i.i3113, 3
  %idxprom.i.i3115 = zext i32 %and.i.i3105 to i64
  %arrayidx4.i.i3116 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %idxprom.i.i3115
  %1039 = load i32, ptr %arrayidx4.i.i3116, align 4, !tbaa !25
  %mul.i.i3117 = mul nsw i32 %shr3.i.i3114, %1039
  %and5.i.i3118 = and i32 %mul.i.i3117, -1024
  %add.i.i3119 = add i32 %and5.i.i3118, %p0.0.i.i3110
  store i32 %add.i.i3119, ptr %arrayidx.i.i.i3104, align 4, !tbaa !25
  store i32 %conv1688, ptr %cxt.i.i3101, align 4, !tbaa !82
  %idxprom.i2.i3120 = zext i8 %1034 to i64
  %arrayidx.i.i3121 = getelementptr inbounds i32, ptr %1036, i64 %idxprom.i2.i3120
  %1040 = load i32, ptr %arrayidx.i.i3121, align 4, !tbaa !25
  %shr.i3122 = lshr i32 %1040, 20
  %1041 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %idxprom.i.i3123 = zext i32 %shr.i3122 to i64
  %arrayidx.i.i3124 = getelementptr inbounds i16, ptr %1041, i64 %idxprom.i.i3123
  %1042 = load i16, ptr %arrayidx.i.i3124, align 2, !tbaa !31
  %1043 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %inc.i3126 = add nsw i32 %1043, 1
  store i32 %inc.i3126, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %1044 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %idxprom.i.i3127 = sext i32 %1043 to i64
  %arrayidx.i.i3128 = getelementptr inbounds i16, ptr %1044, i64 %idxprom.i.i3127
  store i16 %1042, ptr %arrayidx.i.i3128, align 2, !tbaa !31
  %indvars.iv.next3425 = add nuw nsw i64 %indvars.iv3424, 1
  %exitcond3427.not = icmp eq i64 %indvars.iv.next3425, 28
  br i1 %exitcond3427.not, label %sw.epilog, label %for.body1681, !llvm.loop !155

sw.epilog:                                        ; preds = %for.body1681, %for.body1661, %for.body1638
  %1045 = load i32, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %cmp1695 = icmp eq i32 %1045, 0
  %conv1696 = zext i1 %cmp1695 to i32
  %1046 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %add.i3129 = add nsw i32 %1046, %conv1696
  %1047 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %inc.i3130 = add nsw i32 %1047, 1
  store i32 %inc.i3130, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %1048 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %idxprom.i.i3131 = sext i32 %1047 to i64
  %arrayidx.i.i3132 = getelementptr inbounds i32, ptr %1048, i64 %idxprom.i.i3131
  store i32 %add.i3129, ptr %arrayidx.i.i3132, align 4, !tbaa !25
  %1049 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %add3.i3133 = add nsw i32 %1049, 2
  store i32 %add3.i3133, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %add.i3134 = add nsw i32 %add3.i3133, %or1447
  %1050 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %inc.i3135 = add nsw i32 %1050, 1
  store i32 %inc.i3135, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %idxprom.i.i3136 = sext i32 %1050 to i64
  %arrayidx.i.i3137 = getelementptr inbounds i32, ptr %1048, i64 %idxprom.i.i3136
  store i32 %add.i3134, ptr %arrayidx.i.i3137, align 4, !tbaa !25
  %1051 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %add3.i3138 = add nsw i32 %1051, 256
  store i32 %add3.i3138, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %and1697 = and i32 %or1454, 511
  %add.i3139 = add nsw i32 %add3.i3138, %and1697
  %1052 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %inc.i3140 = add nsw i32 %1052, 1
  store i32 %inc.i3140, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %idxprom.i.i3141 = sext i32 %1052 to i64
  %arrayidx.i.i3142 = getelementptr inbounds i32, ptr %1048, i64 %idxprom.i.i3141
  store i32 %add.i3139, ptr %arrayidx.i.i3142, align 4, !tbaa !25
  %1053 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %add3.i3143 = add nsw i32 %1053, 512
  store i32 %add3.i3143, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %call1698 = tail call noundef i32 @_ZN5Mixer1pEv(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ9jpegModelR5MixerE2m1)
  %1054 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %idxprom.i.i3144 = sext i32 %call1698 to i64
  %arrayidx.i.i3145 = getelementptr inbounds i16, ptr %1054, i64 %idxprom.i.i3144
  %1055 = load i16, ptr %arrayidx.i.i3145, align 2, !tbaa !31
  %nx.i3147 = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 8
  %1056 = load i32, ptr %nx.i3147, align 8, !tbaa !64
  %inc.i3148 = add nsw i32 %1056, 1
  store i32 %inc.i3148, ptr %nx.i3147, align 8, !tbaa !64
  %data.i.i3149 = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 3, i32 3
  %1057 = load ptr, ptr %data.i.i3149, align 8, !tbaa !59
  %idxprom.i.i3150 = sext i32 %1056 to i64
  %arrayidx.i.i3151 = getelementptr inbounds i16, ptr %1057, i64 %idxprom.i.i3150
  store i16 %1055, ptr %arrayidx.i.i3151, align 2, !tbaa !31
  %1058 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE8adv_pred, i64 0, i32 3), align 8, !tbaa !61
  %arrayidx.i3152 = getelementptr inbounds i32, ptr %1058, i64 1
  %1059 = load i32, ptr %arrayidx.i3152, align 4, !tbaa !25
  %and1702 = shl i32 %1059, 9
  %shl1703 = and i32 %and1702, 32256
  %or1704 = or i32 %shl1703, %and1697
  %call1705 = tail call noundef i32 @_ZN3APM1pEiii(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2a1, i32 noundef %call1698, i32 noundef %or1704, i32 noundef 1023)
  %and1706 = and i32 %or1454, 255
  %shl1707 = shl nuw nsw i32 %or1447, 8
  %or1708 = or i32 %and1706, %shl1707
  %call1709 = tail call noundef i32 @_ZN3APM1pEiii(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2a2, i32 noundef %call1705, i32 noundef %or1708, i32 noundef 255)
  %1060 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %idxprom.i.i3153 = sext i32 %call1709 to i64
  %arrayidx.i.i3154 = getelementptr inbounds i16, ptr %1060, i64 %idxprom.i.i3153
  %1061 = load i16, ptr %arrayidx.i.i3154, align 2, !tbaa !31
  %1062 = load i32, ptr %nx.i3147, align 8, !tbaa !64
  %inc.i3157 = add nsw i32 %1062, 1
  store i32 %inc.i3157, ptr %nx.i3147, align 8, !tbaa !64
  %1063 = load ptr, ptr %data.i.i3149, align 8, !tbaa !59
  %idxprom.i.i3159 = sext i32 %1062 to i64
  %arrayidx.i.i3160 = getelementptr inbounds i16, ptr %1063, i64 %idxprom.i.i3159
  store i16 %1061, ptr %arrayidx.i.i3160, align 2, !tbaa !31
  %add1712 = add nuw nsw i32 %and1706, 2
  br label %return

return:                                           ; preds = %cleanup497.us, %if.then810, %if.then816, %cleanup776.thread, %if.then783, %if.then803, %if.then726, %if.then713, %if.then831, %if.then655, %if.then666, %cleanup683, %if.then627, %if.then612, %cleanup374.thread, %if.then377, %cleanup497.thread3208, %if.then572, %if.then506, %if.then401, %if.then390, %if.then1464, %sw.epilog, %if.then1370, %if.then1362, %if.then603, %if.then593, %if.then279, %if.then246, %if.then241, %if.then154, %if.then150, %if.then110, %if.then102
  %retval.30 = phi i32 [ %66, %if.then110 ], [ 1, %if.then1370 ], [ %613, %if.then1362 ], [ %274, %if.then603 ], [ %270, %if.then593 ], [ %137, %if.then279 ], [ %124, %if.then246 ], [ %122, %if.then241 ], [ %89, %if.then154 ], [ %88, %if.then150 ], [ %62, %if.then102 ], [ %add1712, %sw.epilog ], [ %825, %if.then1464 ], [ %182, %cleanup497.thread3208 ], [ %261, %if.then572 ], [ %236, %if.then506 ], [ %181, %if.then401 ], [ %178, %if.then390 ], [ %172, %cleanup374.thread ], [ %175, %if.then377 ], [ %283, %if.then655 ], [ %284, %if.then666 ], [ %287, %cleanup683 ], [ %278, %if.then627 ], [ %276, %if.then612 ], [ %297, %cleanup776.thread ], [ %309, %if.then783 ], [ %310, %if.then803 ], [ %296, %if.then726 ], [ %291, %if.then713 ], [ %328, %if.then831 ], [ %313, %if.then810 ], [ %317, %if.then816 ], [ %182, %cleanup497.us ]
  ret i32 %retval.30

eh.resume:                                        ; preds = %arraydestroy.body, %lpad1398, %lpad1377, %lpad1384, %lpad1391, %lpad1406, %lpad1413, %lpad1420, %lpad96, %lpad89, %lpad82, %lpad75, %lpad68, %lpad61, %lpad54, %lpad47, %lpad40, %lpad33, %lpad26, %lpad19, %lpad12, %lpad5, %lpad
  %_ZGVZ9jpegModelR5MixerE1t.sink = phi ptr [ @_ZGVZ9jpegModelR5MixerE1t, %lpad1377 ], [ @_ZGVZ9jpegModelR5MixerE3cxt, %lpad1384 ], [ @_ZGVZ9jpegModelR5MixerE2cp, %lpad1391 ], [ @_ZGVZ9jpegModelR5MixerE2m1, %lpad1406 ], [ @_ZGVZ9jpegModelR5MixerE2a1, %lpad1413 ], [ @_ZGVZ9jpegModelR5MixerE2a2, %lpad1420 ], [ @_ZGVZ9jpegModelR5MixerE4qmap, %lpad96 ], [ @_ZGVZ9jpegModelR5MixerE4qtab, %lpad89 ], [ @_ZGVZ9jpegModelR5MixerE4zpos, %lpad82 ], [ @_ZGVZ9jpegModelR5MixerE3lcp, %lpad75 ], [ @_ZGVZ9jpegModelR5MixerE2ls, %lpad68 ], [ @_ZGVZ9jpegModelR5MixerE4sumv, %lpad61 ], [ @_ZGVZ9jpegModelR5MixerE4sumu, %lpad54 ], [ @_ZGVZ9jpegModelR5MixerE8adv_pred, %lpad47 ], [ @_ZGVZ9jpegModelR5MixerE5cbuf2, %lpad40 ], [ @_ZGVZ9jpegModelR5MixerE4cbuf, %lpad33 ], [ @_ZGVZ9jpegModelR5MixerE4pred, %lpad26 ], [ @_ZGVZ9jpegModelR5MixerE5color, %lpad19 ], [ @_ZGVZ9jpegModelR5MixerE4hbuf, %lpad12 ], [ @_ZGVZ9jpegModelR5MixerE3huf, %lpad5 ], [ @_ZGVZ9jpegModelR5MixerE2ht, %lpad ], [ @_ZGVZ9jpegModelR5MixerE2sm, %lpad1398 ], [ @_ZGVZ9jpegModelR5MixerE2sm, %arraydestroy.body ]
  %.pn.pn = phi { ptr, i32 } [ %784, %lpad1377 ], [ %785, %lpad1384 ], [ %786, %lpad1391 ], [ %787, %lpad1406 ], [ %788, %lpad1413 ], [ %789, %lpad1420 ], [ %61, %lpad96 ], [ %60, %lpad89 ], [ %59, %lpad82 ], [ %58, %lpad75 ], [ %57, %lpad68 ], [ %56, %lpad61 ], [ %55, %lpad54 ], [ %54, %lpad47 ], [ %53, %lpad40 ], [ %52, %lpad33 ], [ %51, %lpad26 ], [ %50, %lpad19 ], [ %49, %lpad12 ], [ %48, %lpad5 ], [ %47, %lpad ], [ %lpad.thr_comm.split-lp, %lpad1398 ], [ %lpad.thr_comm, %arraydestroy.body ]
  tail call void @__cxa_guard_abort(ptr nonnull %_ZGVZ9jpegModelR5MixerE1t.sink) #39
  resume { ptr, i32 } %.pn.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayI3HUFLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %i) unnamed_addr #5 comdat align 2 {
entry:
  %reserved.i = getelementptr inbounds %class.Array.7, ptr %this, i64 0, i32 1
  store i32 %i, ptr %reserved.i, align 4, !tbaa !156
  store i32 %i, ptr %this, align 8, !tbaa !126
  %cmp.i = icmp slt i32 %i, 1
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %ptr.i = getelementptr inbounds %class.Array.7, ptr %this, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i, i8 0, i64 16, i1 false)
  br label %_ZN5ArrayI3HUFLi0EE6createEi.exit

if.end.i:                                         ; preds = %entry
  %mul.i = mul i32 %i, 12
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = add nsw i32 %0, %mul.i
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %1
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN14ProgramChecker5allocEi.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i

_ZN14ProgramChecker5allocEi.exit.i:               ; preds = %if.then.i.i, %if.end.i
  %conv4.i = sext i32 %mul.i to i64
  %call.i = tail call noalias ptr @calloc(i64 noundef %conv4.i, i64 noundef 1) #41
  %ptr5.i = getelementptr inbounds %class.Array.7, ptr %this, i64 0, i32 2
  store ptr %call.i, ptr %ptr5.i, align 8, !tbaa !157
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then7.i, label %if.end8.i

if.then7.i:                                       ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  %exception.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end8.i:                                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  %data10.i = getelementptr inbounds %class.Array.7, ptr %this, i64 0, i32 3
  store ptr %call.i, ptr %data10.i, align 8, !tbaa !124
  br label %_ZN5ArrayI3HUFLi0EE6createEi.exit

_ZN5ArrayI3HUFLi0EE6createEi.exit:                ; preds = %if.then.i, %if.end8.i
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayI3HUFLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !126
  %mul.neg = mul i32 %0, -12
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i = add nsw i32 %1, %mul.neg
  store i32 %add.i, ptr @programChecker, align 8, !tbaa !13
  %2 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i = icmp sgt i32 %add.i, %2
  br i1 %cmp.i, label %if.then.i, label %_ZN14ProgramChecker5allocEi.exit

if.then.i:                                        ; preds = %entry
  store i32 %add.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit

_ZN14ProgramChecker5allocEi.exit:                 ; preds = %entry, %if.then.i
  %ptr = getelementptr inbounds %class.Array.7, ptr %this, i64 0, i32 2
  %3 = load ptr, ptr %ptr, align 8, !tbaa !157
  tail call void @free(ptr noundef %3) #39
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6IntBufC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %i) unnamed_addr #5 comdat align 2 {
entry:
  %reserved.i.i = getelementptr inbounds %class.Array.3, ptr %this, i64 0, i32 1
  store i32 %i, ptr %reserved.i.i, align 4, !tbaa !60
  store i32 %i, ptr %this, align 8, !tbaa !51
  %cmp.i.i = icmp slt i32 %i, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %entry
  %ptr.i.i = getelementptr inbounds %class.Array.3, ptr %this, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i.i, i8 0, i64 16, i1 false)
  br label %_ZN5ArrayIiLi0EEC2Ei.exit

if.end.i.i:                                       ; preds = %entry
  %mul.i.i = shl i32 %i, 2
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i = add nsw i32 %0, %mul.i.i
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %1
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i

_ZN14ProgramChecker5allocEi.exit.i.i:             ; preds = %if.then.i.i.i, %if.end.i.i
  %conv4.i.i = sext i32 %mul.i.i to i64
  %call.i.i = tail call noalias ptr @calloc(i64 noundef %conv4.i.i, i64 noundef 1) #41
  %ptr5.i.i = getelementptr inbounds %class.Array.3, ptr %this, i64 0, i32 2
  store ptr %call.i.i, ptr %ptr5.i.i, align 8, !tbaa !52
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.then7.i.i, label %if.end8.i.i

if.then7.i.i:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %exception.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end8.i.i:                                      ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %data10.i.i = getelementptr inbounds %class.Array.3, ptr %this, i64 0, i32 3
  store ptr %call.i.i, ptr %data10.i.i, align 8, !tbaa !61
  br label %_ZN5ArrayIiLi0EEC2Ei.exit

_ZN5ArrayIiLi0EEC2Ei.exit:                        ; preds = %if.then.i.i, %if.end8.i.i
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN6IntBufD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #3 comdat align 2 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !51
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %2 = shl i32 %0, 2
  %add.i.i = sub i32 %1, %2
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %3 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %3
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN5ArrayIiLi0EED2Ev.exit

if.then.i.i:                                      ; preds = %entry
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIiLi0EED2Ev.exit

_ZN5ArrayIiLi0EED2Ev.exit:                        ; preds = %entry, %if.then.i.i
  %ptr.i = getelementptr inbounds %class.Array.3, ptr %this, i64 0, i32 2
  %4 = load ptr, ptr %ptr.i, align 8, !tbaa !52
  tail call void @free(ptr noundef %4) #39
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #21

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN2BHILi9EEC2Ei(ptr noundef nonnull align 8 dereferenceable(28) %this, i32 noundef %i) unnamed_addr #5 comdat align 2 {
entry:
  %mul = mul nsw i32 %i, 9
  %reserved.i.i = getelementptr inbounds %class.Array.8, ptr %this, i64 0, i32 1
  store i32 %mul, ptr %reserved.i.i, align 4, !tbaa !158
  store i32 %mul, ptr %this, align 8, !tbaa !160
  %cmp.i.i = icmp slt i32 %i, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %entry
  %ptr.i.i = getelementptr inbounds %class.Array.8, ptr %this, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i.i, i8 0, i64 16, i1 false)
  br label %_ZN5ArrayIhLi64EEC2Ei.exit

if.end.i.i:                                       ; preds = %entry
  %add.i.i = add nuw i32 %mul, 64
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i = add nsw i32 %0, %add.i.i
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %1
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i

_ZN14ProgramChecker5allocEi.exit.i.i:             ; preds = %if.then.i.i.i, %if.end.i.i
  %conv4.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call noalias ptr @calloc(i64 noundef %conv4.i.i, i64 noundef 1) #41
  %ptr5.i.i = getelementptr inbounds %class.Array.8, ptr %this, i64 0, i32 2
  store ptr %call.i.i, ptr %ptr5.i.i, align 8, !tbaa !161
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.then7.i.i, label %if.end8.i.i

if.then7.i.i:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %exception.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end8.i.i:                                      ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %add.ptr.i.i = getelementptr inbounds i8, ptr %call.i.i, i64 64
  %2 = ptrtoint ptr %call.i.i to i64
  %and.i.i = and i64 %2, 63
  %idx.neg.i.i = sub nsw i64 0, %and.i.i
  %add.ptr11.i.i = getelementptr inbounds i8, ptr %add.ptr.i.i, i64 %idx.neg.i.i
  %data12.i.i = getelementptr inbounds %class.Array.8, ptr %this, i64 0, i32 3
  store ptr %add.ptr11.i.i, ptr %data12.i.i, align 8, !tbaa !162
  br label %_ZN5ArrayIhLi64EEC2Ei.exit

_ZN5ArrayIhLi64EEC2Ei.exit:                       ; preds = %if.then.i.i, %if.end8.i.i
  %n = getelementptr inbounds %class.BH, ptr %this, i64 0, i32 1
  %sub = add nsw i32 %i, -1
  store i32 %sub, ptr %n, align 8, !tbaa !163
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN2BHILi9EED2Ev(ptr noundef nonnull align 8 dereferenceable(28) %this) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !160
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %reass.sub.i = sub i32 %1, %0
  %add.i.i = add i32 %reass.sub.i, -64
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %2 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %2
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN5ArrayIhLi64EED2Ev.exit

if.then.i.i:                                      ; preds = %entry
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIhLi64EED2Ev.exit

_ZN5ArrayIhLi64EED2Ev.exit:                       ; preds = %entry, %if.then.i.i
  %ptr.i = getelementptr inbounds %class.Array.8, ptr %this, i64 0, i32 2
  %3 = load ptr, ptr %ptr.i, align 8, !tbaa !161
  tail call void @free(ptr noundef %3) #39
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @__cxx_global_array_dtor.13(ptr nocapture readnone %0) #6 section ".text.startup" {
entry:
  br label %arraydestroy.body

arraydestroy.body:                                ; preds = %_ZN8StateMapD2Ev.exit, %entry
  %arraydestroy.elementPast = phi ptr [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 1, i64 0), %entry ], [ %arraydestroy.element, %_ZN8StateMapD2Ev.exit ]
  %arraydestroy.element = getelementptr inbounds %class.StateMap, ptr %arraydestroy.elementPast, i64 -1
  %t.i = getelementptr %class.StateMap, ptr %arraydestroy.elementPast, i64 -1, i32 2
  %1 = load i32, ptr %t.i, align 8, !tbaa !10
  %2 = load i32, ptr @programChecker, align 8, !tbaa !13
  %3 = shl i32 %1, 2
  %add.i.i.i = sub i32 %2, %3
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %4 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %4
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN8StateMapD2Ev.exit

if.then.i.i.i:                                    ; preds = %arraydestroy.body
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN8StateMapD2Ev.exit

_ZN8StateMapD2Ev.exit:                            ; preds = %arraydestroy.body, %if.then.i.i.i
  %ptr.i.i = getelementptr %class.StateMap, ptr %arraydestroy.elementPast, i64 -1, i32 2, i32 2
  %5 = load ptr, ptr %ptr.i.i, align 8, !tbaa !17
  tail call void @free(ptr noundef %5) #39
  %arraydestroy.done = icmp eq ptr %arraydestroy.element, @_ZZ9jpegModelR5MixerE2sm
  br i1 %arraydestroy.done, label %arraydestroy.done1, label %arraydestroy.body

arraydestroy.done1:                               ; preds = %_ZN8StateMapD2Ev.exit
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr dso_local noundef ptr @_ZN2BHILi9EEixEj(ptr noundef nonnull align 8 dereferenceable(28) %this, i32 noundef %i) local_unnamed_addr #13 comdat align 2 {
entry:
  %shr = lshr i32 %i, 16
  %i.masked = and i32 %i, 65535
  %and = xor i32 %shr, %i.masked
  %mul = shl i32 %i, 3
  %n = getelementptr inbounds %class.BH, ptr %this, i64 0, i32 1
  %0 = load i32, ptr %n, align 8, !tbaa !163
  %and2 = and i32 %0, %mul
  %data.i = getelementptr inbounds %class.Array.8, ptr %this, i64 0, i32 3
  %1 = load ptr, ptr %data.i, align 8, !tbaa !162
  %mul3 = mul i32 %and2, 9
  %idxprom.i = sext i32 %mul3 to i64
  %arrayidx.i = getelementptr inbounds i8, ptr %1, i64 %idxprom.i
  %arrayidx = getelementptr inbounds i8, ptr %arrayidx.i, i64 2
  %2 = load i8, ptr %arrayidx, align 1, !tbaa !9
  %cmp4 = icmp eq i8 %2, 0
  br i1 %cmp4, label %for.end, label %if.end

if.end:                                           ; preds = %entry
  %3 = load i16, ptr %arrayidx.i, align 2, !tbaa !31
  %conv6 = zext i16 %3 to i32
  %cmp7 = icmp eq i32 %and, %conv6
  br i1 %cmp7, label %if.then11, label %for.inc

for.inc:                                          ; preds = %if.end
  %4 = mul i32 %and2, 9
  %mul3.1 = add i32 %4, 9
  %idxprom.i.1 = sext i32 %mul3.1 to i64
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i.1
  %arrayidx.1 = getelementptr inbounds i8, ptr %arrayidx.i.1, i64 2
  %5 = load i8, ptr %arrayidx.1, align 1, !tbaa !9
  %cmp4.1 = icmp eq i8 %5, 0
  br i1 %cmp4.1, label %for.end.thread114, label %if.end.1

if.end.1:                                         ; preds = %for.inc
  %6 = load i16, ptr %arrayidx.i.1, align 2, !tbaa !31
  %conv6.1 = zext i16 %6 to i32
  %cmp7.1 = icmp eq i32 %and, %conv6.1
  br i1 %cmp7.1, label %if.else, label %for.inc.1

for.inc.1:                                        ; preds = %if.end.1
  %7 = mul i32 %and2, 9
  %mul3.2 = add i32 %7, 18
  %idxprom.i.2 = sext i32 %mul3.2 to i64
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i.2
  %arrayidx.2 = getelementptr inbounds i8, ptr %arrayidx.i.2, i64 2
  %8 = load i8, ptr %arrayidx.2, align 1, !tbaa !9
  %cmp4.2 = icmp eq i8 %8, 0
  br i1 %cmp4.2, label %for.end.thread114, label %if.end.2

if.end.2:                                         ; preds = %for.inc.1
  %9 = load i16, ptr %arrayidx.i.2, align 2, !tbaa !31
  %conv6.2 = zext i16 %9 to i32
  %cmp7.2 = icmp eq i32 %and, %conv6.2
  br i1 %cmp7.2, label %if.else, label %for.inc.2

for.inc.2:                                        ; preds = %if.end.2
  %10 = mul i32 %and2, 9
  %mul3.3 = add i32 %10, 27
  %idxprom.i.3 = sext i32 %mul3.3 to i64
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i.3
  %arrayidx.3 = getelementptr inbounds i8, ptr %arrayidx.i.3, i64 2
  %11 = load i8, ptr %arrayidx.3, align 1, !tbaa !9
  %cmp4.3 = icmp eq i8 %11, 0
  br i1 %cmp4.3, label %for.end.thread114, label %if.end.3

if.end.3:                                         ; preds = %for.inc.2
  %12 = load i16, ptr %arrayidx.i.3, align 2, !tbaa !31
  %conv6.3 = zext i16 %12 to i32
  %cmp7.3 = icmp eq i32 %and, %conv6.3
  br i1 %cmp7.3, label %if.else, label %for.inc.3

for.inc.3:                                        ; preds = %if.end.3
  %13 = mul i32 %and2, 9
  %mul3.4 = add i32 %13, 36
  %idxprom.i.4 = sext i32 %mul3.4 to i64
  %arrayidx.i.4 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i.4
  %arrayidx.4 = getelementptr inbounds i8, ptr %arrayidx.i.4, i64 2
  %14 = load i8, ptr %arrayidx.4, align 1, !tbaa !9
  %cmp4.4 = icmp eq i8 %14, 0
  br i1 %cmp4.4, label %for.end.thread114, label %if.end.4

if.end.4:                                         ; preds = %for.inc.3
  %15 = load i16, ptr %arrayidx.i.4, align 2, !tbaa !31
  %conv6.4 = zext i16 %15 to i32
  %cmp7.4 = icmp eq i32 %and, %conv6.4
  br i1 %cmp7.4, label %if.else, label %for.inc.4

for.inc.4:                                        ; preds = %if.end.4
  %16 = mul i32 %and2, 9
  %mul3.5 = add i32 %16, 45
  %idxprom.i.5 = sext i32 %mul3.5 to i64
  %arrayidx.i.5 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i.5
  %arrayidx.5 = getelementptr inbounds i8, ptr %arrayidx.i.5, i64 2
  %17 = load i8, ptr %arrayidx.5, align 1, !tbaa !9
  %cmp4.5 = icmp eq i8 %17, 0
  br i1 %cmp4.5, label %for.end.thread114, label %if.end.5

if.end.5:                                         ; preds = %for.inc.4
  %18 = load i16, ptr %arrayidx.i.5, align 2, !tbaa !31
  %conv6.5 = zext i16 %18 to i32
  %cmp7.5 = icmp eq i32 %and, %conv6.5
  br i1 %cmp7.5, label %if.else, label %for.inc.5

for.inc.5:                                        ; preds = %if.end.5
  %19 = mul i32 %and2, 9
  %mul3.6 = add i32 %19, 54
  %idxprom.i.6 = sext i32 %mul3.6 to i64
  %arrayidx.i.6 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i.6
  %arrayidx.6 = getelementptr inbounds i8, ptr %arrayidx.i.6, i64 2
  %20 = load i8, ptr %arrayidx.6, align 1, !tbaa !9
  %cmp4.6 = icmp eq i8 %20, 0
  br i1 %cmp4.6, label %for.end.thread114, label %if.end.6

if.end.6:                                         ; preds = %for.inc.5
  %21 = load i16, ptr %arrayidx.i.6, align 2, !tbaa !31
  %conv6.6 = zext i16 %21 to i32
  %cmp7.6 = icmp eq i32 %and, %conv6.6
  br i1 %cmp7.6, label %if.else, label %for.inc.6

for.inc.6:                                        ; preds = %if.end.6
  %22 = mul i32 %and2, 9
  %mul3.7 = add i32 %22, 63
  %idxprom.i.7 = sext i32 %mul3.7 to i64
  %arrayidx.i.7 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i.7
  %arrayidx.7 = getelementptr inbounds i8, ptr %arrayidx.i.7, i64 2
  %23 = load i8, ptr %arrayidx.7, align 1, !tbaa !9
  %cmp4.7 = icmp eq i8 %23, 0
  br i1 %cmp4.7, label %for.end.thread114, label %if.end.7

if.end.7:                                         ; preds = %for.inc.6
  %24 = load i16, ptr %arrayidx.i.7, align 2, !tbaa !31
  %conv6.7 = zext i16 %24 to i32
  %cmp7.7 = icmp eq i32 %and, %conv6.7
  br i1 %cmp7.7, label %if.else, label %if.then14

for.end.thread114:                                ; preds = %for.inc, %for.inc.1, %for.inc.2, %for.inc.3, %for.inc.4, %for.inc.5, %for.inc.6
  %j.096.lcssa.wide.ph = phi i64 [ 7, %for.inc.6 ], [ 6, %for.inc.5 ], [ 5, %for.inc.4 ], [ 4, %for.inc.3 ], [ 3, %for.inc.2 ], [ 2, %for.inc.1 ], [ 1, %for.inc ]
  %arrayidx.i.lcssa.ph = phi ptr [ %arrayidx.i.7, %for.inc.6 ], [ %arrayidx.i.6, %for.inc.5 ], [ %arrayidx.i.5, %for.inc.4 ], [ %arrayidx.i.4, %for.inc.3 ], [ %arrayidx.i.3, %for.inc.2 ], [ %arrayidx.i.2, %for.inc.1 ], [ %arrayidx.i.1, %for.inc ]
  %conv5117 = trunc i32 %and to i16
  store i16 %conv5117, ptr %arrayidx.i.lcssa.ph, align 2, !tbaa !31
  br label %if.else

for.end:                                          ; preds = %entry
  %conv5 = trunc i32 %and to i16
  store i16 %conv5, ptr %arrayidx.i, align 2, !tbaa !31
  br label %if.then11

if.then11:                                        ; preds = %if.end, %for.end
  %add.ptr = getelementptr inbounds i8, ptr %arrayidx.i, i64 1
  br label %cleanup

if.then14:                                        ; preds = %if.end.7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(9) getelementptr inbounds ([9 x i8], ptr @_ZZN2BHILi9EEixEjE3tmp, i64 0, i64 2), i8 0, i64 7, i1 false)
  %conv15 = trunc i32 %and to i16
  store i16 %conv15, ptr @_ZZN2BHILi9EEixEjE3tmp, align 1, !tbaa !31
  %add19 = add i32 %mul3, 65
  %idxprom.i77 = sext i32 %add19 to i64
  %arrayidx.i78 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i77
  %25 = load i8, ptr %arrayidx.i78, align 1, !tbaa !9
  %add25 = add i32 %mul3, 56
  %idxprom.i80 = sext i32 %add25 to i64
  %arrayidx.i81 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i80
  %26 = load i8, ptr %arrayidx.i81, align 1, !tbaa !9
  %cmp28 = icmp ugt i8 %25, %26
  %spec.select = select i1 %cmp28, i64 6, i64 7
  br label %if.end32

if.else:                                          ; preds = %if.end.7, %if.end.6, %if.end.5, %if.end.4, %if.end.3, %if.end.2, %if.end.1, %for.end.thread114
  %j.095105 = phi i64 [ %j.096.lcssa.wide.ph, %for.end.thread114 ], [ 7, %if.end.7 ], [ 6, %if.end.6 ], [ 5, %if.end.5 ], [ 4, %if.end.4 ], [ 3, %if.end.3 ], [ 2, %if.end.2 ], [ 1, %if.end.1 ]
  %arrayidx.i98104 = phi ptr [ %arrayidx.i.lcssa.ph, %for.end.thread114 ], [ %arrayidx.i.7, %if.end.7 ], [ %arrayidx.i.6, %if.end.6 ], [ %arrayidx.i.5, %if.end.5 ], [ %arrayidx.i.4, %if.end.4 ], [ %arrayidx.i.3, %if.end.3 ], [ %arrayidx.i.2, %if.end.2 ], [ %arrayidx.i.1, %if.end.1 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(9) @_ZZN2BHILi9EEixEjE3tmp, ptr noundef nonnull align 2 dereferenceable(9) %arrayidx.i98104, i64 9, i1 false)
  br label %if.end32

if.end32:                                         ; preds = %if.then14, %if.else
  %j.1 = phi i64 [ %j.095105, %if.else ], [ %spec.select, %if.then14 ]
  %mul35 = add i32 %mul3, 9
  %idxprom.i83 = sext i32 %mul35 to i64
  %arrayidx.i84 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i83
  %mul40 = mul i64 %j.1, 9
  %conv41 = and i64 %mul40, 4294967295
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %arrayidx.i84, ptr nonnull align 1 %arrayidx.i, i64 %conv41, i1 false)
  %27 = load ptr, ptr %data.i, align 8, !tbaa !162
  %arrayidx.i90 = getelementptr inbounds i8, ptr %27, i64 %idxprom.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(9) %arrayidx.i90, ptr noundef nonnull align 1 dereferenceable(9) @_ZZN2BHILi9EEixEjE3tmp, i64 9, i1 false)
  %add47 = or i32 %mul3, 1
  %28 = load ptr, ptr %data.i, align 8, !tbaa !162
  %idxprom.i92 = sext i32 %add47 to i64
  %arrayidx.i93 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i92
  br label %cleanup

cleanup:                                          ; preds = %if.end32, %if.then11
  %retval.0 = phi ptr [ %add.ptr, %if.then11 ], [ %arrayidx.i93, %if.end32 ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_ZN5Mixer1pEv(ptr noundef nonnull align 8 dereferenceable(136) %this) local_unnamed_addr #14 comdat align 2 {
entry:
  %0 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %for.cond.cleanup, %entry
  %this.tr = phi ptr [ %this, %entry ], [ %8, %for.cond.cleanup ]
  %nx = getelementptr inbounds %class.Mixer, ptr %this.tr, i64 0, i32 8
  %nx.promoted = load i32, ptr %nx, align 8, !tbaa !64
  %and130 = and i32 %nx.promoted, 7
  %tobool.not131 = icmp eq i32 %and130, 0
  br i1 %tobool.not131, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %tailrecurse
  %data.i = getelementptr inbounds %class.Mixer, ptr %this.tr, i64 0, i32 3, i32 3
  %1 = load ptr, ptr %data.i, align 8, !tbaa !59
  %2 = sext i32 %nx.promoted to i64
  %3 = shl nsw i64 %2, 1
  %scevgep = getelementptr i8, ptr %1, i64 %3
  %4 = shl i32 %nx.promoted, 1
  %5 = and i32 %4, 14
  %6 = xor i32 %5, 14
  %narrow = add nuw nsw i32 %6, 2
  %7 = zext i32 %narrow to i64
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(1) %scevgep, i8 0, i64 %7, i1 false), !tbaa !31
  %indvars.iv.next = add i32 %nx.promoted, 1
  %and = and i32 %indvars.iv.next, 7
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %while.cond.while.end_crit_edge, label %while.body.1, !llvm.loop !165

while.body.1:                                     ; preds = %while.body.lr.ph
  %indvars.iv.next.1 = add i32 %nx.promoted, 2
  %and.1 = and i32 %indvars.iv.next.1, 7
  %tobool.not.1 = icmp eq i32 %and.1, 0
  br i1 %tobool.not.1, label %while.cond.while.end_crit_edge, label %while.body.2, !llvm.loop !165

while.body.2:                                     ; preds = %while.body.1
  %indvars.iv.next.2 = add i32 %nx.promoted, 3
  %and.2 = and i32 %indvars.iv.next.2, 7
  %tobool.not.2 = icmp eq i32 %and.2, 0
  br i1 %tobool.not.2, label %while.cond.while.end_crit_edge, label %while.body.3, !llvm.loop !165

while.body.3:                                     ; preds = %while.body.2
  %indvars.iv.next.3 = add i32 %nx.promoted, 4
  %and.3 = and i32 %indvars.iv.next.3, 7
  %tobool.not.3 = icmp eq i32 %and.3, 0
  br i1 %tobool.not.3, label %while.cond.while.end_crit_edge, label %while.body.4, !llvm.loop !165

while.body.4:                                     ; preds = %while.body.3
  %indvars.iv.next.4 = add i32 %nx.promoted, 5
  %and.4 = and i32 %indvars.iv.next.4, 7
  %tobool.not.4 = icmp eq i32 %and.4, 0
  br i1 %tobool.not.4, label %while.cond.while.end_crit_edge, label %while.body.5, !llvm.loop !165

while.body.5:                                     ; preds = %while.body.4
  %indvars.iv.next.5 = add i32 %nx.promoted, 6
  %and.5 = and i32 %indvars.iv.next.5, 7
  %tobool.not.5 = icmp eq i32 %and.5, 0
  br i1 %tobool.not.5, label %while.cond.while.end_crit_edge, label %while.body.6, !llvm.loop !165

while.body.6:                                     ; preds = %while.body.5
  %indvars.iv.next.6 = add i32 %nx.promoted, 7
  %and.6 = and i32 %indvars.iv.next.6, 7
  %tobool.not.6 = icmp eq i32 %and.6, 0
  %indvars.iv.next.7 = add i32 %nx.promoted, 8
  %spec.select = select i1 %tobool.not.6, i32 %indvars.iv.next.6, i32 %indvars.iv.next.7
  br label %while.cond.while.end_crit_edge, !llvm.loop !165

while.cond.while.end_crit_edge:                   ; preds = %while.body.6, %while.body.5, %while.body.4, %while.body.3, %while.body.2, %while.body.1, %while.body.lr.ph
  %.lcssa203 = phi i32 [ %indvars.iv.next, %while.body.lr.ph ], [ %indvars.iv.next.1, %while.body.1 ], [ %indvars.iv.next.2, %while.body.2 ], [ %indvars.iv.next.3, %while.body.3 ], [ %indvars.iv.next.4, %while.body.4 ], [ %indvars.iv.next.5, %while.body.5 ], [ %spec.select, %while.body.6 ]
  store i32 %.lcssa203, ptr %nx, align 8, !tbaa !64
  br label %while.end

while.end:                                        ; preds = %while.cond.while.end_crit_edge, %tailrecurse
  %.lcssa = phi i32 [ %.lcssa203, %while.cond.while.end_crit_edge ], [ %nx.promoted, %tailrecurse ]
  %mp = getelementptr inbounds %class.Mixer, ptr %this.tr, i64 0, i32 10
  %8 = load ptr, ptr %mp, align 8, !tbaa !47
  %tobool3.not = icmp eq ptr %8, null
  br i1 %tobool3.not, label %if.else, label %if.then

if.then:                                          ; preds = %while.end
  %ncxt.i = getelementptr inbounds %class.Mixer, ptr %8, i64 0, i32 6
  %9 = load i32, ptr %ncxt.i, align 8, !tbaa !62
  %cmp20.i = icmp sgt i32 %9, 0
  br i1 %cmp20.i, label %for.body.lr.ph.i, label %_ZN5Mixer6updateEv.exit

for.body.lr.ph.i:                                 ; preds = %if.then
  %10 = load i32, ptr @y, align 4, !tbaa !25
  %shl.i = shl i32 %10, 12
  %data.i.i = getelementptr inbounds %class.Mixer, ptr %8, i64 0, i32 9, i32 3
  %11 = load ptr, ptr %data.i.i, align 8, !tbaa !61
  %data.i12.i = getelementptr inbounds %class.Mixer, ptr %8, i64 0, i32 3, i32 3
  %12 = load ptr, ptr %data.i12.i, align 8
  %data.i13.i = getelementptr inbounds %class.Mixer, ptr %8, i64 0, i32 5, i32 3
  %13 = load ptr, ptr %data.i13.i, align 8
  %14 = load i32, ptr %8, align 8
  %data.i16.i = getelementptr inbounds %class.Mixer, ptr %8, i64 0, i32 4, i32 3
  %15 = load ptr, ptr %data.i16.i, align 8
  %nx.i = getelementptr inbounds %class.Mixer, ptr %8, i64 0, i32 8
  %16 = load i32, ptr %nx.i, align 8
  %.fr.i = freeze i32 %16
  %add.i.i = add i32 %.fr.i, 7
  %and.i.i = and i32 %add.i.i, -8
  %cmp24.i.i = icmp sgt i32 %and.i.i, 0
  %wide.trip.count.i.i = zext i32 %and.i.i to i64
  br i1 %cmp24.i.i, label %for.body.us.preheader.i, label %_ZN5Mixer6updateEv.exit

for.body.us.preheader.i:                          ; preds = %for.body.lr.ph.i
  %wide.trip.count.i = zext i32 %9 to i64
  %17 = lshr i32 %add.i.i, 3
  %18 = zext i32 %17 to i64
  %19 = shl nuw nsw i64 %18, 4
  %scevgep154 = getelementptr i8, ptr %15, i64 %19
  %scevgep156 = getelementptr i8, ptr %12, i64 %19
  br label %for.body.us.i

for.body.us.i:                                    ; preds = %if.end.us.i, %for.body.us.preheader.i
  %indvars.iv.i = phi i64 [ 0, %for.body.us.preheader.i ], [ %indvars.iv.next.i, %if.end.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds i32, ptr %11, i64 %indvars.iv.i
  %20 = load i32, ptr %arrayidx.i.us.i, align 4, !tbaa !25
  %sub.us.i = sub nsw i32 %shl.i, %20
  %mul.us.i = mul nsw i32 %sub.us.i, 7
  %tobool.not.us.i = icmp eq i32 %shl.i, %20
  br i1 %tobool.not.us.i, label %if.end.us.i, label %if.then.us.i

if.then.us.i:                                     ; preds = %for.body.us.i
  %arrayidx.i15.us.i = getelementptr inbounds i32, ptr %13, i64 %indvars.iv.i
  %21 = load i32, ptr %arrayidx.i15.us.i, align 4, !tbaa !25
  %mul4.us.i = mul nsw i32 %21, %14
  %idxprom.i17.us.i = sext i32 %mul4.us.i to i64
  %arrayidx.i18.us.i = getelementptr inbounds i16, ptr %15, i64 %idxprom.i17.us.i
  %22 = shl nsw i64 %idxprom.i17.us.i, 1
  %scevgep155 = getelementptr i8, ptr %scevgep154, i64 %22
  %bound0 = icmp ult ptr %arrayidx.i18.us.i, %scevgep156
  %bound1 = icmp ult ptr %12, %scevgep155
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i.us.i, label %vector.ph160

vector.ph160:                                     ; preds = %if.then.us.i
  %broadcast.splatinsert = insertelement <8 x i32> poison, i32 %mul.us.i, i64 0
  %broadcast.splat = shufflevector <8 x i32> %broadcast.splatinsert, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %vector.body165

vector.body165:                                   ; preds = %vector.body165, %vector.ph160
  %index166 = phi i64 [ 0, %vector.ph160 ], [ %index.next168, %vector.body165 ]
  %23 = getelementptr inbounds i16, ptr %arrayidx.i18.us.i, i64 %index166
  %wide.load = load <8 x i16>, ptr %23, align 2, !tbaa !31, !alias.scope !166, !noalias !169
  %24 = sext <8 x i16> %wide.load to <8 x i32>
  %25 = getelementptr inbounds i16, ptr %12, i64 %index166
  %wide.load167 = load <8 x i16>, ptr %25, align 2, !tbaa !31, !alias.scope !169
  %26 = sext <8 x i16> %wide.load167 to <8 x i32>
  %27 = mul nsw <8 x i32> %broadcast.splat, %26
  %28 = ashr <8 x i32> %27, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %29 = add nsw <8 x i32> %28, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %30 = ashr <8 x i32> %29, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %31 = add nsw <8 x i32> %30, %24
  %32 = tail call <8 x i32> @llvm.smax.v8i32(<8 x i32> %31, <8 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>)
  %33 = tail call <8 x i32> @llvm.smin.v8i32(<8 x i32> %32, <8 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>)
  %34 = trunc <8 x i32> %33 to <8 x i16>
  store <8 x i16> %34, ptr %23, align 2, !tbaa !31, !alias.scope !166, !noalias !169
  %index.next168 = add nuw i64 %index166, 8
  %35 = icmp eq i64 %index.next168, %wide.trip.count.i.i
  br i1 %35, label %if.end.us.i, label %vector.body165, !llvm.loop !171

for.body.i.us.i:                                  ; preds = %if.then.us.i, %for.body.i.us.i
  %indvars.iv.i.us.i = phi i64 [ %indvars.iv.next.i.us.i, %for.body.i.us.i ], [ 0, %if.then.us.i ]
  %arrayidx.i19.us.i = getelementptr inbounds i16, ptr %arrayidx.i18.us.i, i64 %indvars.iv.i.us.i
  %36 = load i16, ptr %arrayidx.i19.us.i, align 2, !tbaa !31
  %conv.i.us.i = sext i16 %36 to i32
  %arrayidx2.i.us.i = getelementptr inbounds i16, ptr %12, i64 %indvars.iv.i.us.i
  %37 = load i16, ptr %arrayidx2.i.us.i, align 2, !tbaa !31
  %conv3.i.us.i = sext i16 %37 to i32
  %mul.i.us.i = mul nsw i32 %mul.us.i, %conv3.i.us.i
  %shr.i.us.i = ashr i32 %mul.i.us.i, 15
  %add5.i.us.i = add nsw i32 %shr.i.us.i, 1
  %shr6.i.us.i = ashr i32 %add5.i.us.i, 1
  %add7.i.us.i = add nsw i32 %shr6.i.us.i, %conv.i.us.i
  %spec.store.select.i.us.i = tail call i32 @llvm.smax.i32(i32 %add7.i.us.i, i32 -32768)
  %spec.store.select15.i.us.i = tail call i32 @llvm.smin.i32(i32 %spec.store.select.i.us.i, i32 32767)
  %conv12.i.us.i = trunc i32 %spec.store.select15.i.us.i to i16
  store i16 %conv12.i.us.i, ptr %arrayidx.i19.us.i, align 2, !tbaa !31
  %indvars.iv.next.i.us.i = add nuw nsw i64 %indvars.iv.i.us.i, 1
  %exitcond.not.i.us.i = icmp eq i64 %indvars.iv.next.i.us.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.us.i, label %if.end.us.i, label %for.body.i.us.i, !llvm.loop !172

if.end.us.i:                                      ; preds = %vector.body165, %for.body.i.us.i, %for.body.us.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %_ZN5Mixer6updateEv.exit, label %for.body.us.i, !llvm.loop !152

_ZN5Mixer6updateEv.exit:                          ; preds = %if.end.us.i, %if.then, %for.body.lr.ph.i
  store i32 0, ptr %ncxt.i, align 8, !tbaa !62
  %base.i = getelementptr inbounds %class.Mixer, ptr %8, i64 0, i32 7
  store i32 0, ptr %base.i, align 4, !tbaa !63
  %nx7.i = getelementptr inbounds %class.Mixer, ptr %8, i64 0, i32 8
  store i32 0, ptr %nx7.i, align 8, !tbaa !64
  %ncxt = getelementptr inbounds %class.Mixer, ptr %this.tr, i64 0, i32 6
  %38 = load i32, ptr %ncxt, align 8, !tbaa !62
  %cmp134 = icmp sgt i32 %38, 0
  br i1 %cmp134, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %_ZN5Mixer6updateEv.exit
  %data.i38 = getelementptr inbounds %class.Mixer, ptr %this.tr, i64 0, i32 3, i32 3
  %39 = load ptr, ptr %data.i38, align 8, !tbaa !59
  %data.i39 = getelementptr inbounds %class.Mixer, ptr %this.tr, i64 0, i32 5, i32 3
  %40 = load ptr, ptr %data.i39, align 8, !tbaa !61
  %data.i42 = getelementptr inbounds %class.Mixer, ptr %this.tr, i64 0, i32 4, i32 3
  %41 = load ptr, ptr %data.i42, align 8, !tbaa !59
  %data.i56 = getelementptr inbounds %class.Mixer, ptr %this.tr, i64 0, i32 9, i32 3
  %42 = load ptr, ptr %data.i56, align 8, !tbaa !61
  %data.i.i67 = getelementptr inbounds %class.Mixer, ptr %8, i64 0, i32 3, i32 3
  %43 = load ptr, ptr %data.i.i67, align 8, !tbaa !59
  br label %for.body

for.cond.cleanup.loopexit:                        ; preds = %_Z6squashi.exit
  %.pre = load i32, ptr %base.i, align 4, !tbaa !63
  %.pre140 = load i32, ptr %ncxt.i, align 8, !tbaa !62
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %_ZN5Mixer6updateEv.exit
  %44 = phi i32 [ %.pre140, %for.cond.cleanup.loopexit ], [ 0, %_ZN5Mixer6updateEv.exit ]
  %45 = phi i32 [ %.pre, %for.cond.cleanup.loopexit ], [ 0, %_ZN5Mixer6updateEv.exit ]
  %inc.i = add nsw i32 %44, 1
  store i32 %inc.i, ptr %ncxt.i, align 8, !tbaa !62
  %data.i.i37 = getelementptr inbounds %class.Mixer, ptr %8, i64 0, i32 5, i32 3
  %46 = load ptr, ptr %data.i.i37, align 8, !tbaa !61
  %idxprom.i.i = sext i32 %44 to i64
  %arrayidx.i.i = getelementptr inbounds i32, ptr %46, i64 %idxprom.i.i
  store i32 %45, ptr %arrayidx.i.i, align 4, !tbaa !25
  %47 = load i32, ptr %base.i, align 4, !tbaa !63
  %add3.i = add nsw i32 %47, 1
  store i32 %add3.i, ptr %base.i, align 4, !tbaa !63
  br label %tailrecurse

for.body:                                         ; preds = %for.body.lr.ph, %_Z6squashi.exit
  %indvars.iv137 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next138, %_Z6squashi.exit ]
  %arrayidx.i41 = getelementptr inbounds i32, ptr %40, i64 %indvars.iv137
  %48 = load i32, ptr %arrayidx.i41, align 4, !tbaa !25
  %49 = load i32, ptr %this.tr, align 8, !tbaa !55
  %mul = mul nsw i32 %49, %48
  %idxprom.i43 = sext i32 %mul to i64
  %arrayidx.i44 = getelementptr inbounds i16, ptr %41, i64 %idxprom.i43
  %50 = load i32, ptr %nx, align 8, !tbaa !64
  %add.i = add nsw i32 %50, 7
  %and.i = and i32 %add.i, -8
  %cmp25.i = icmp sgt i32 %and.i, 0
  br i1 %cmp25.i, label %for.body.preheader.i, label %if.end3.i

for.body.preheader.i:                             ; preds = %for.body
  %51 = zext i32 %and.i to i64
  %umax = tail call i64 @llvm.umax.i64(i64 %51, i64 2)
  %52 = add nsw i64 %umax, -1
  %53 = lshr i64 %52, 1
  %54 = add nuw nsw i64 %53, 1
  %min.iters.check = icmp ult i64 %umax, 15
  br i1 %min.iters.check, label %for.body.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.preheader.i
  %n.vec = and i64 %54, -8
  %ind.end = shl nuw i64 %n.vec, 1
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <4 x i32> [ zeroinitializer, %vector.ph ], [ %76, %vector.body ]
  %vec.phi143 = phi <4 x i32> [ zeroinitializer, %vector.ph ], [ %77, %vector.body ]
  %offset.idx = shl i64 %index, 1
  %55 = or i64 %offset.idx, 8
  %56 = getelementptr inbounds i16, ptr %39, i64 %offset.idx
  %57 = getelementptr inbounds i16, ptr %39, i64 %55
  %wide.vec = load <8 x i16>, ptr %56, align 2, !tbaa !31
  %wide.vec144 = load <8 x i16>, ptr %57, align 2, !tbaa !31
  %strided.vec = shufflevector <8 x i16> %wide.vec, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec145 = shufflevector <8 x i16> %wide.vec144, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec146 = shufflevector <8 x i16> %wide.vec, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %strided.vec147 = shufflevector <8 x i16> %wide.vec144, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %58 = sext <4 x i16> %strided.vec to <4 x i32>
  %59 = sext <4 x i16> %strided.vec145 to <4 x i32>
  %60 = getelementptr inbounds i16, ptr %arrayidx.i44, i64 %offset.idx
  %61 = getelementptr inbounds i16, ptr %arrayidx.i44, i64 %55
  %wide.vec148 = load <8 x i16>, ptr %60, align 2, !tbaa !31
  %wide.vec149 = load <8 x i16>, ptr %61, align 2, !tbaa !31
  %strided.vec150 = shufflevector <8 x i16> %wide.vec148, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec151 = shufflevector <8 x i16> %wide.vec149, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec152 = shufflevector <8 x i16> %wide.vec148, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %strided.vec153 = shufflevector <8 x i16> %wide.vec149, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %62 = sext <4 x i16> %strided.vec150 to <4 x i32>
  %63 = sext <4 x i16> %strided.vec151 to <4 x i32>
  %64 = mul nsw <4 x i32> %62, %58
  %65 = mul nsw <4 x i32> %63, %59
  %66 = sext <4 x i16> %strided.vec146 to <4 x i32>
  %67 = sext <4 x i16> %strided.vec147 to <4 x i32>
  %68 = sext <4 x i16> %strided.vec152 to <4 x i32>
  %69 = sext <4 x i16> %strided.vec153 to <4 x i32>
  %70 = mul nsw <4 x i32> %68, %66
  %71 = mul nsw <4 x i32> %69, %67
  %72 = add nsw <4 x i32> %70, %64
  %73 = add nsw <4 x i32> %71, %65
  %74 = ashr <4 x i32> %72, <i32 8, i32 8, i32 8, i32 8>
  %75 = ashr <4 x i32> %73, <i32 8, i32 8, i32 8, i32 8>
  %76 = add <4 x i32> %74, %vec.phi
  %77 = add <4 x i32> %75, %vec.phi143
  %index.next = add nuw i64 %index, 8
  %78 = icmp eq i64 %index.next, %n.vec
  br i1 %78, label %middle.block, label %vector.body, !llvm.loop !173

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add <4 x i32> %77, %76
  %79 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %bin.rdx)
  %cmp.n = icmp eq i64 %54, %n.vec
  br i1 %cmp.n, label %_Z11dot_productPsS_i.exit, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %for.body.preheader.i, %middle.block
  %indvars.iv.i45.ph = phi i64 [ 0, %for.body.preheader.i ], [ %ind.end, %middle.block ]
  %sum.026.i.ph = phi i32 [ 0, %for.body.preheader.i ], [ %79, %middle.block ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i45 = phi i64 [ %indvars.iv.next.i47, %for.body.i ], [ %indvars.iv.i45.ph, %for.body.i.preheader ]
  %sum.026.i = phi i32 [ %add14.i, %for.body.i ], [ %sum.026.i.ph, %for.body.i.preheader ]
  %arrayidx.i46 = getelementptr inbounds i16, ptr %39, i64 %indvars.iv.i45
  %80 = load i16, ptr %arrayidx.i46, align 2, !tbaa !31
  %conv.i = sext i16 %80 to i32
  %arrayidx2.i = getelementptr inbounds i16, ptr %arrayidx.i44, i64 %indvars.iv.i45
  %81 = load i16, ptr %arrayidx2.i, align 2, !tbaa !31
  %conv3.i = sext i16 %81 to i32
  %mul.i = mul nsw i32 %conv3.i, %conv.i
  %82 = or i64 %indvars.iv.i45, 1
  %arrayidx6.i = getelementptr inbounds i16, ptr %39, i64 %82
  %83 = load i16, ptr %arrayidx6.i, align 2, !tbaa !31
  %conv7.i = sext i16 %83 to i32
  %arrayidx10.i = getelementptr inbounds i16, ptr %arrayidx.i44, i64 %82
  %84 = load i16, ptr %arrayidx10.i, align 2, !tbaa !31
  %conv11.i = sext i16 %84 to i32
  %mul12.i = mul nsw i32 %conv11.i, %conv7.i
  %add13.i = add nsw i32 %mul12.i, %mul.i
  %shr.i = ashr i32 %add13.i, 8
  %add14.i = add nsw i32 %shr.i, %sum.026.i
  %indvars.iv.next.i47 = add nuw nsw i64 %indvars.iv.i45, 2
  %cmp.i = icmp ult i64 %indvars.iv.next.i47, %51
  br i1 %cmp.i, label %for.body.i, label %_Z11dot_productPsS_i.exit, !llvm.loop !174

_Z11dot_productPsS_i.exit:                        ; preds = %for.body.i, %middle.block
  %add14.i.lcssa = phi i32 [ %79, %middle.block ], [ %add14.i, %for.body.i ]
  %cmp.i48 = icmp sgt i32 %add14.i.lcssa, 65535
  br i1 %cmp.i48, label %_Z6squashi.exit, label %if.end.i

if.end.i:                                         ; preds = %_Z11dot_productPsS_i.exit
  %85 = lshr i32 %add14.i.lcssa, 5
  %cmp1.i = icmp slt i32 %add14.i.lcssa, -65504
  br i1 %cmp1.i, label %_Z6squashi.exit, label %if.end3.i

if.end3.i:                                        ; preds = %for.body, %if.end.i
  %sum.0.lcssa.i119122 = phi i32 [ %add14.i.lcssa, %if.end.i ], [ 0, %for.body ]
  %86 = phi i32 [ %85, %if.end.i ], [ 0, %for.body ]
  %and.i49 = and i32 %86, 127
  %shr.i50 = ashr i32 %sum.0.lcssa.i119122, 12
  %add.i51 = add nsw i32 %shr.i50, 16
  %idxprom.i52 = zext i32 %add.i51 to i64
  %arrayidx.i53 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %idxprom.i52
  %87 = load i32, ptr %arrayidx.i53, align 4, !tbaa !25
  %sub.i = sub nuw nsw i32 128, %and.i49
  %mul.i54 = mul nsw i32 %sub.i, %87
  %add4.i = add nsw i32 %shr.i50, 17
  %idxprom5.i = zext i32 %add4.i to i64
  %arrayidx6.i55 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %idxprom5.i
  %88 = load i32, ptr %arrayidx6.i55, align 4, !tbaa !25
  %mul7.i = mul nsw i32 %88, %and.i49
  %add8.i = add i32 %mul.i54, 64
  %add9.i = add i32 %add8.i, %mul7.i
  %shr10.i = ashr i32 %add9.i, 7
  br label %_Z6squashi.exit

_Z6squashi.exit:                                  ; preds = %_Z11dot_productPsS_i.exit, %if.end.i, %if.end3.i
  %retval.0.i = phi i32 [ %shr10.i, %if.end3.i ], [ 4095, %_Z11dot_productPsS_i.exit ], [ 0, %if.end.i ]
  %arrayidx.i58 = getelementptr inbounds i32, ptr %42, i64 %indvars.iv137
  store i32 %retval.0.i, ptr %arrayidx.i58, align 4, !tbaa !25
  %idxprom.i.i62 = sext i32 %retval.0.i to i64
  %arrayidx.i.i63 = getelementptr inbounds i16, ptr %0, i64 %idxprom.i.i62
  %89 = load i16, ptr %arrayidx.i.i63, align 2, !tbaa !31
  %90 = load i32, ptr %nx7.i, align 8, !tbaa !64
  %inc.i66 = add nsw i32 %90, 1
  store i32 %inc.i66, ptr %nx7.i, align 8, !tbaa !64
  %idxprom.i.i68 = sext i32 %90 to i64
  %arrayidx.i.i69 = getelementptr inbounds i16, ptr %43, i64 %idxprom.i.i68
  store i16 %89, ptr %arrayidx.i.i69, align 2, !tbaa !31
  %indvars.iv.next138 = add nuw nsw i64 %indvars.iv137, 1
  %91 = load i32, ptr %ncxt, align 8, !tbaa !62
  %92 = sext i32 %91 to i64
  %cmp = icmp slt i64 %indvars.iv.next138, %92
  br i1 %cmp, label %for.body, label %for.cond.cleanup.loopexit, !llvm.loop !175

if.else:                                          ; preds = %while.end
  %data.i70 = getelementptr inbounds %class.Mixer, ptr %this.tr, i64 0, i32 3, i32 3
  %93 = load ptr, ptr %data.i70, align 8, !tbaa !59
  %data.i71 = getelementptr inbounds %class.Mixer, ptr %this.tr, i64 0, i32 4, i32 3
  %94 = load ptr, ptr %data.i71, align 8, !tbaa !59
  %add.i72 = add nuw nsw i32 %.lcssa, 7
  %and.i73 = and i32 %add.i72, -8
  %cmp25.i74 = icmp sgt i32 %and.i73, 0
  br i1 %cmp25.i74, label %for.body.preheader.i75, label %if.end3.i113

for.body.preheader.i75:                           ; preds = %if.else
  %95 = zext i32 %and.i73 to i64
  %umax169 = tail call i64 @llvm.umax.i64(i64 %95, i64 2)
  %96 = add nsw i64 %umax169, -1
  %97 = lshr i64 %96, 1
  %98 = add nuw nsw i64 %97, 1
  %min.iters.check172 = icmp ult i64 %umax169, 15
  br i1 %min.iters.check172, label %for.body.i94.preheader, label %vector.ph173

vector.ph173:                                     ; preds = %for.body.preheader.i75
  %n.vec175 = and i64 %98, -8
  %ind.end176 = shl nuw i64 %n.vec175, 1
  br label %vector.body179

vector.body179:                                   ; preds = %vector.body179, %vector.ph173
  %index180 = phi i64 [ 0, %vector.ph173 ], [ %index.next196, %vector.body179 ]
  %vec.phi181 = phi <4 x i32> [ zeroinitializer, %vector.ph173 ], [ %120, %vector.body179 ]
  %vec.phi182 = phi <4 x i32> [ zeroinitializer, %vector.ph173 ], [ %121, %vector.body179 ]
  %offset.idx183 = shl i64 %index180, 1
  %99 = or i64 %offset.idx183, 8
  %100 = getelementptr inbounds i16, ptr %93, i64 %offset.idx183
  %101 = getelementptr inbounds i16, ptr %93, i64 %99
  %wide.vec184 = load <8 x i16>, ptr %100, align 2, !tbaa !31
  %wide.vec185 = load <8 x i16>, ptr %101, align 2, !tbaa !31
  %strided.vec186 = shufflevector <8 x i16> %wide.vec184, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec187 = shufflevector <8 x i16> %wide.vec185, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec188 = shufflevector <8 x i16> %wide.vec184, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %strided.vec189 = shufflevector <8 x i16> %wide.vec185, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %102 = sext <4 x i16> %strided.vec186 to <4 x i32>
  %103 = sext <4 x i16> %strided.vec187 to <4 x i32>
  %104 = getelementptr inbounds i16, ptr %94, i64 %offset.idx183
  %105 = getelementptr inbounds i16, ptr %94, i64 %99
  %wide.vec190 = load <8 x i16>, ptr %104, align 2, !tbaa !31
  %wide.vec191 = load <8 x i16>, ptr %105, align 2, !tbaa !31
  %strided.vec192 = shufflevector <8 x i16> %wide.vec190, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec193 = shufflevector <8 x i16> %wide.vec191, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec194 = shufflevector <8 x i16> %wide.vec190, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %strided.vec195 = shufflevector <8 x i16> %wide.vec191, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %106 = sext <4 x i16> %strided.vec192 to <4 x i32>
  %107 = sext <4 x i16> %strided.vec193 to <4 x i32>
  %108 = mul nsw <4 x i32> %106, %102
  %109 = mul nsw <4 x i32> %107, %103
  %110 = sext <4 x i16> %strided.vec188 to <4 x i32>
  %111 = sext <4 x i16> %strided.vec189 to <4 x i32>
  %112 = sext <4 x i16> %strided.vec194 to <4 x i32>
  %113 = sext <4 x i16> %strided.vec195 to <4 x i32>
  %114 = mul nsw <4 x i32> %112, %110
  %115 = mul nsw <4 x i32> %113, %111
  %116 = add nsw <4 x i32> %114, %108
  %117 = add nsw <4 x i32> %115, %109
  %118 = ashr <4 x i32> %116, <i32 8, i32 8, i32 8, i32 8>
  %119 = ashr <4 x i32> %117, <i32 8, i32 8, i32 8, i32 8>
  %120 = add <4 x i32> %118, %vec.phi181
  %121 = add <4 x i32> %119, %vec.phi182
  %index.next196 = add nuw i64 %index180, 8
  %122 = icmp eq i64 %index.next196, %n.vec175
  br i1 %122, label %middle.block170, label %vector.body179, !llvm.loop !176

middle.block170:                                  ; preds = %vector.body179
  %bin.rdx197 = add <4 x i32> %121, %120
  %123 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %bin.rdx197)
  %cmp.n178 = icmp eq i64 %98, %n.vec175
  br i1 %cmp.n178, label %_Z11dot_productPsS_i.exit95, label %for.body.i94.preheader

for.body.i94.preheader:                           ; preds = %for.body.preheader.i75, %middle.block170
  %indvars.iv.i77.ph = phi i64 [ 0, %for.body.preheader.i75 ], [ %ind.end176, %middle.block170 ]
  %sum.026.i78.ph = phi i32 [ 0, %for.body.preheader.i75 ], [ %123, %middle.block170 ]
  br label %for.body.i94

for.body.i94:                                     ; preds = %for.body.i94.preheader, %for.body.i94
  %indvars.iv.i77 = phi i64 [ %indvars.iv.next.i92, %for.body.i94 ], [ %indvars.iv.i77.ph, %for.body.i94.preheader ]
  %sum.026.i78 = phi i32 [ %add14.i91, %for.body.i94 ], [ %sum.026.i78.ph, %for.body.i94.preheader ]
  %arrayidx.i79 = getelementptr inbounds i16, ptr %93, i64 %indvars.iv.i77
  %124 = load i16, ptr %arrayidx.i79, align 2, !tbaa !31
  %conv.i80 = sext i16 %124 to i32
  %arrayidx2.i81 = getelementptr inbounds i16, ptr %94, i64 %indvars.iv.i77
  %125 = load i16, ptr %arrayidx2.i81, align 2, !tbaa !31
  %conv3.i82 = sext i16 %125 to i32
  %mul.i83 = mul nsw i32 %conv3.i82, %conv.i80
  %126 = or i64 %indvars.iv.i77, 1
  %arrayidx6.i84 = getelementptr inbounds i16, ptr %93, i64 %126
  %127 = load i16, ptr %arrayidx6.i84, align 2, !tbaa !31
  %conv7.i85 = sext i16 %127 to i32
  %arrayidx10.i86 = getelementptr inbounds i16, ptr %94, i64 %126
  %128 = load i16, ptr %arrayidx10.i86, align 2, !tbaa !31
  %conv11.i87 = sext i16 %128 to i32
  %mul12.i88 = mul nsw i32 %conv11.i87, %conv7.i85
  %add13.i89 = add nsw i32 %mul12.i88, %mul.i83
  %shr.i90 = ashr i32 %add13.i89, 8
  %add14.i91 = add nsw i32 %shr.i90, %sum.026.i78
  %indvars.iv.next.i92 = add nuw nsw i64 %indvars.iv.i77, 2
  %cmp.i93 = icmp ult i64 %indvars.iv.next.i92, %95
  br i1 %cmp.i93, label %for.body.i94, label %_Z11dot_productPsS_i.exit95, !llvm.loop !177

_Z11dot_productPsS_i.exit95:                      ; preds = %for.body.i94, %middle.block170
  %add14.i91.lcssa = phi i32 [ %123, %middle.block170 ], [ %add14.i91, %for.body.i94 ]
  %cmp.i96 = icmp sgt i32 %add14.i91.lcssa, 524287
  br i1 %cmp.i96, label %_Z6squashi.exit115, label %if.end.i98

if.end.i98:                                       ; preds = %_Z11dot_productPsS_i.exit95
  %129 = lshr i32 %add14.i91.lcssa, 8
  %cmp1.i97 = icmp slt i32 %add14.i91.lcssa, -524032
  br i1 %cmp1.i97, label %_Z6squashi.exit115, label %if.end3.i113

if.end3.i113:                                     ; preds = %if.else, %if.end.i98
  %sum.0.lcssa.i76125128 = phi i32 [ %add14.i91.lcssa, %if.end.i98 ], [ 0, %if.else ]
  %130 = phi i32 [ %129, %if.end.i98 ], [ 0, %if.else ]
  %and.i99 = and i32 %130, 127
  %shr.i100 = ashr i32 %sum.0.lcssa.i76125128, 15
  %add.i101 = add nsw i32 %shr.i100, 16
  %idxprom.i102 = zext i32 %add.i101 to i64
  %arrayidx.i103 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %idxprom.i102
  %131 = load i32, ptr %arrayidx.i103, align 4, !tbaa !25
  %sub.i104 = sub nuw nsw i32 128, %and.i99
  %mul.i105 = mul nsw i32 %sub.i104, %131
  %add4.i106 = add nsw i32 %shr.i100, 17
  %idxprom5.i107 = zext i32 %add4.i106 to i64
  %arrayidx6.i108 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %idxprom5.i107
  %132 = load i32, ptr %arrayidx6.i108, align 4, !tbaa !25
  %mul7.i109 = mul nsw i32 %132, %and.i99
  %add8.i110 = add i32 %mul.i105, 64
  %add9.i111 = add i32 %add8.i110, %mul7.i109
  %shr10.i112 = ashr i32 %add9.i111, 7
  br label %_Z6squashi.exit115

_Z6squashi.exit115:                               ; preds = %_Z11dot_productPsS_i.exit95, %if.end.i98, %if.end3.i113
  %retval.0.i114 = phi i32 [ %shr10.i112, %if.end3.i113 ], [ 4095, %_Z11dot_productPsS_i.exit95 ], [ 0, %if.end.i98 ]
  %data.i116 = getelementptr inbounds %class.Mixer, ptr %this.tr, i64 0, i32 9, i32 3
  %133 = load ptr, ptr %data.i116, align 8, !tbaa !61
  store i32 %retval.0.i114, ptr %133, align 4, !tbaa !25
  ret i32 %retval.0.i114
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_ZN3APM1pEiii(ptr noundef nonnull align 8 dereferenceable(32) %this, i32 noundef %pr, i32 noundef %cx, i32 noundef %limit) local_unnamed_addr #14 comdat align 2 {
entry:
  %cxt.i = getelementptr inbounds %class.StateMap, ptr %this, i64 0, i32 1
  %0 = load i32, ptr %cxt.i, align 4, !tbaa !82
  %data.i.i = getelementptr inbounds %class.StateMap, ptr %this, i64 0, i32 2, i32 3
  %1 = load ptr, ptr %data.i.i, align 8, !tbaa !84
  %idxprom.i.i = sext i32 %0 to i64
  %arrayidx.i.i = getelementptr inbounds i32, ptr %1, i64 %idxprom.i.i
  %2 = load i32, ptr %arrayidx.i.i, align 4, !tbaa !25
  %and.i = and i32 %2, 1023
  %cmp.i = icmp slt i32 %and.i, %limit
  %inc.i = add i32 %2, 1
  %and2.i = and i32 %2, -1024
  %or.i = or i32 %and2.i, %limit
  %p0.0.i = select i1 %cmp.i, i32 %inc.i, i32 %or.i
  %shr.i = lshr i32 %2, 10
  %3 = load i32, ptr @y, align 4, !tbaa !25
  %shl.i = shl i32 %3, 22
  %sub.i = sub nsw i32 %shl.i, %shr.i
  %shr3.i = ashr i32 %sub.i, 3
  %idxprom.i = zext i32 %and.i to i64
  %arrayidx4.i = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %idxprom.i
  %4 = load i32, ptr %arrayidx4.i, align 4, !tbaa !25
  %mul.i = mul nsw i32 %shr3.i, %4
  %and5.i = and i32 %mul.i, -1024
  %add.i = add i32 %and5.i, %p0.0.i
  store i32 %add.i, ptr %arrayidx.i.i, align 4, !tbaa !25
  %5 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %idxprom.i.i24 = sext i32 %pr to i64
  %arrayidx.i.i25 = getelementptr inbounds i16, ptr %5, i64 %idxprom.i.i24
  %6 = load i16, ptr %arrayidx.i.i25, align 2, !tbaa !31
  %conv.i = sext i16 %6 to i32
  %7 = mul nsw i32 %conv.i, 23
  %mul = add nsw i32 %7, 47104
  %and = and i32 %mul, 4095
  %mul2 = mul nsw i32 %cx, 24
  %shr = ashr i32 %mul, 12
  %add3 = add nsw i32 %shr, %mul2
  %shr4 = lshr i32 %and, 11
  %add5 = add nsw i32 %add3, %shr4
  store i32 %add5, ptr %cxt.i, align 4, !tbaa !82
  %idxprom.i26 = sext i32 %add3 to i64
  %arrayidx.i = getelementptr inbounds i32, ptr %1, i64 %idxprom.i26
  %8 = load i32, ptr %arrayidx.i, align 4, !tbaa !25
  %shr7 = lshr i32 %8, 13
  %sub = sub nuw nsw i32 4096, %and
  %mul8 = mul nuw nsw i32 %sub, %shr7
  %add10 = add nsw i32 %add3, 1
  %idxprom.i28 = sext i32 %add10 to i64
  %arrayidx.i29 = getelementptr inbounds i32, ptr %1, i64 %idxprom.i28
  %9 = load i32, ptr %arrayidx.i29, align 4, !tbaa !25
  %shr12 = lshr i32 %9, 13
  %mul13 = mul nuw nsw i32 %shr12, %and
  %add14 = add nuw i32 %mul8, %mul13
  %shr15 = lshr i32 %add14, 19
  ret i32 %shr15
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z8wavModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %m) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
entry:
  %F = alloca [49 x [49 x [2 x double]]], align 16
  %L = alloca [49 x [49 x double]], align 16
  %0 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE1K acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !110

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE1K) #39
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  %2 = load i32, ptr @level, align 4, !tbaa !25
  %sub = add nsw i32 %2, -1
  %shr = lshr i32 128, %sub
  store i32 %shr, ptr @_ZZ8wavModelR5MixerE1K, align 4, !tbaa !25
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE1K) #39
  br label %init.end

init.end:                                         ; preds = %init, %init.check, %entry
  call void @llvm.lifetime.start.p0(i64 38416, ptr nonnull %F) #39
  call void @llvm.lifetime.start.p0(i64 19208, ptr nonnull %L) #39
  %3 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm1 acquire, align 8
  %guard.uninitialized1 = icmp eq i8 %3, 0
  br i1 %guard.uninitialized1, label %init.check2, label %init.end5, !prof !110

init.check2:                                      ; preds = %init.end
  %4 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm1) #39
  %tobool3.not = icmp eq i32 %4, 0
  br i1 %tobool3.not, label %init.end5, label %init4

init4:                                            ; preds = %init.check2
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm1, i32 noundef 131072)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init4
  %5 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm1) #39
  br label %init.end5

init.end5:                                        ; preds = %invoke.cont, %init.check2, %init.end
  %6 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm2 acquire, align 8
  %guard.uninitialized6 = icmp eq i8 %6, 0
  br i1 %guard.uninitialized6, label %init.check7, label %init.end12, !prof !110

init.check7:                                      ; preds = %init.end5
  %7 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm2) #39
  %tobool8.not = icmp eq i32 %7, 0
  br i1 %tobool8.not, label %init.end12, label %init9

init9:                                            ; preds = %init.check7
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm2, i32 noundef 131072)
          to label %invoke.cont11 unwind label %lpad10

invoke.cont11:                                    ; preds = %init9
  %8 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm2) #39
  br label %init.end12

init.end12:                                       ; preds = %invoke.cont11, %init.check7, %init.end5
  %9 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm3 acquire, align 8
  %guard.uninitialized13 = icmp eq i8 %9, 0
  br i1 %guard.uninitialized13, label %init.check14, label %init.end19, !prof !110

init.check14:                                     ; preds = %init.end12
  %10 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm3) #39
  %tobool15.not = icmp eq i32 %10, 0
  br i1 %tobool15.not, label %init.end19, label %init16

init16:                                           ; preds = %init.check14
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm3, i32 noundef 131072)
          to label %invoke.cont18 unwind label %lpad17

invoke.cont18:                                    ; preds = %init16
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm3, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm3) #39
  br label %init.end19

init.end19:                                       ; preds = %invoke.cont18, %init.check14, %init.end12
  %12 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm4 acquire, align 8
  %guard.uninitialized20 = icmp eq i8 %12, 0
  br i1 %guard.uninitialized20, label %init.check21, label %init.end26, !prof !110

init.check21:                                     ; preds = %init.end19
  %13 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm4) #39
  %tobool22.not = icmp eq i32 %13, 0
  br i1 %tobool22.not, label %init.end26, label %init23

init23:                                           ; preds = %init.check21
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm4, i32 noundef 131072)
          to label %invoke.cont25 unwind label %lpad24

invoke.cont25:                                    ; preds = %init23
  %14 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm4, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm4) #39
  br label %init.end26

init.end26:                                       ; preds = %invoke.cont25, %init.check21, %init.end19
  %15 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm5 acquire, align 8
  %guard.uninitialized27 = icmp eq i8 %15, 0
  br i1 %guard.uninitialized27, label %init.check28, label %init.end33, !prof !110

init.check28:                                     ; preds = %init.end26
  %16 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm5) #39
  %tobool29.not = icmp eq i32 %16, 0
  br i1 %tobool29.not, label %init.end33, label %init30

init30:                                           ; preds = %init.check28
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm5, i32 noundef 131072)
          to label %invoke.cont32 unwind label %lpad31

invoke.cont32:                                    ; preds = %init30
  %17 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm5, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm5) #39
  br label %init.end33

init.end33:                                       ; preds = %invoke.cont32, %init.check28, %init.end26
  %18 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm6 acquire, align 8
  %guard.uninitialized34 = icmp eq i8 %18, 0
  br i1 %guard.uninitialized34, label %init.check35, label %init.end40, !prof !110

init.check35:                                     ; preds = %init.end33
  %19 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm6) #39
  %tobool36.not = icmp eq i32 %19, 0
  br i1 %tobool36.not, label %init.end40, label %init37

init37:                                           ; preds = %init.check35
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm6, i32 noundef 131072)
          to label %invoke.cont39 unwind label %lpad38

invoke.cont39:                                    ; preds = %init37
  %20 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm6, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm6) #39
  br label %init.end40

init.end40:                                       ; preds = %invoke.cont39, %init.check35, %init.end33
  %21 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm7 acquire, align 8
  %guard.uninitialized41 = icmp eq i8 %21, 0
  br i1 %guard.uninitialized41, label %init.check42, label %init.end47, !prof !110

init.check42:                                     ; preds = %init.end40
  %22 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm7) #39
  %tobool43.not = icmp eq i32 %22, 0
  br i1 %tobool43.not, label %init.end47, label %init44

init44:                                           ; preds = %init.check42
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm7, i32 noundef 131072)
          to label %invoke.cont46 unwind label %lpad45

invoke.cont46:                                    ; preds = %init44
  %23 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm7, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm7) #39
  br label %init.end47

init.end47:                                       ; preds = %invoke.cont46, %init.check42, %init.end40
  %24 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm8 acquire, align 8
  %guard.uninitialized48 = icmp eq i8 %24, 0
  br i1 %guard.uninitialized48, label %init.check49, label %init.end54, !prof !110

init.check49:                                     ; preds = %init.end47
  %25 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm8) #39
  %tobool50.not = icmp eq i32 %25, 0
  br i1 %tobool50.not, label %init.end54, label %init51

init51:                                           ; preds = %init.check49
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm8, i32 noundef 131072)
          to label %invoke.cont53 unwind label %lpad52

invoke.cont53:                                    ; preds = %init51
  %26 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm8, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm8) #39
  br label %init.end54

init.end54:                                       ; preds = %invoke.cont53, %init.check49, %init.end47
  %27 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE2cm acquire, align 8
  %guard.uninitialized55 = icmp eq i8 %27, 0
  br i1 %guard.uninitialized55, label %init.check56, label %init.end61, !prof !110

init.check56:                                     ; preds = %init.end54
  %28 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE2cm) #39
  %tobool57.not = icmp eq i32 %28, 0
  br i1 %tobool57.not, label %init.end61, label %init58

init58:                                           ; preds = %init.check56
  %29 = load i32, ptr @level, align 4, !tbaa !25
  %mul = shl i32 262144, %29
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8wavModelR5MixerE2cm, i32 noundef %mul, i32 noundef 10)
          to label %invoke.cont60 unwind label %lpad59

invoke.cont60:                                    ; preds = %init58
  %30 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE2cm) #39
  br label %init.end61

init.end61:                                       ; preds = %invoke.cont60, %init.check56, %init.end54
  %31 = load i32, ptr @bpos, align 4, !tbaa !25
  %tobool62.not = icmp eq i32 %31, 0
  br i1 %tobool62.not, label %land.lhs.true, label %if.end155

land.lhs.true:                                    ; preds = %init.end61
  %32 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i = add nsw i32 %32, -8
  %33 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i = add nsw i32 %33, -1
  %and.i = and i32 %sub3.i, %sub.i
  %34 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i
  %35 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %cmp = icmp eq i8 %35, 100
  br i1 %cmp, label %land.lhs.true63, label %if.end155

land.lhs.true63:                                  ; preds = %land.lhs.true
  %sub.i1178 = add nsw i32 %32, -7
  %and.i1180 = and i32 %sub3.i, %sub.i1178
  %idxprom.i.i1181 = sext i32 %and.i1180 to i64
  %arrayidx.i.i1182 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i1181
  %36 = load i8, ptr %arrayidx.i.i1182, align 1, !tbaa !9
  %cmp65 = icmp eq i8 %36, 97
  br i1 %cmp65, label %land.lhs.true66, label %if.end155

land.lhs.true66:                                  ; preds = %land.lhs.true63
  %sub.i1184 = add nsw i32 %32, -6
  %and.i1186 = and i32 %sub3.i, %sub.i1184
  %idxprom.i.i1187 = sext i32 %and.i1186 to i64
  %arrayidx.i.i1188 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i1187
  %37 = load i8, ptr %arrayidx.i.i1188, align 1, !tbaa !9
  %cmp68 = icmp eq i8 %37, 116
  br i1 %cmp68, label %land.lhs.true69, label %if.end155

land.lhs.true69:                                  ; preds = %land.lhs.true66
  %sub.i1190 = add nsw i32 %32, -5
  %and.i1192 = and i32 %sub3.i, %sub.i1190
  %idxprom.i.i1193 = sext i32 %and.i1192 to i64
  %arrayidx.i.i1194 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i1193
  %38 = load i8, ptr %arrayidx.i.i1194, align 1, !tbaa !9
  %cmp71 = icmp eq i8 %38, 97
  br i1 %cmp71, label %for.cond.preheader, label %if.end155

for.cond.preheader:                               ; preds = %land.lhs.true69
  %arrayidx132 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 1
  br label %for.body

lpad:                                             ; preds = %init4
  %39 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad10:                                           ; preds = %init9
  %40 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad17:                                           ; preds = %init16
  %41 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad24:                                           ; preds = %init23
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad31:                                           ; preds = %init30
  %43 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad38:                                           ; preds = %init37
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad45:                                           ; preds = %init44
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad52:                                           ; preds = %init51
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad59:                                           ; preds = %init58
  %47 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

for.body:                                         ; preds = %for.cond.preheader, %for.inc152
  %i72.0.neg2928 = phi i32 [ -32, %for.cond.preheader ], [ %i72.0.neg, %for.inc152 ]
  %i72.02927 = phi i32 [ 32, %for.cond.preheader ], [ %inc153, %for.inc152 ]
  %48 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1196 = sub nsw i32 %48, %i72.02927
  %49 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1197 = add nsw i32 %49, -1
  %and.i1198 = and i32 %sub3.i1197, %sub.i1196
  %50 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i1199 = sext i32 %and.i1198 to i64
  %arrayidx.i.i1200 = getelementptr inbounds i8, ptr %50, i64 %idxprom.i.i1199
  %51 = load i8, ptr %arrayidx.i.i1200, align 1, !tbaa !9
  %cmp75 = icmp eq i8 %51, 102
  br i1 %cmp75, label %land.lhs.true76, label %for.inc152

land.lhs.true76:                                  ; preds = %for.body
  %sub77.neg = add nuw nsw i32 %i72.0.neg2928, 1
  %sub.i1202 = add i32 %sub77.neg, %48
  %and.i1204 = and i32 %sub3.i1197, %sub.i1202
  %idxprom.i.i1205 = sext i32 %and.i1204 to i64
  %arrayidx.i.i1206 = getelementptr inbounds i8, ptr %50, i64 %idxprom.i.i1205
  %52 = load i8, ptr %arrayidx.i.i1206, align 1, !tbaa !9
  %cmp79 = icmp eq i8 %52, 109
  br i1 %cmp79, label %land.lhs.true80, label %for.inc152

land.lhs.true80:                                  ; preds = %land.lhs.true76
  %sub81.neg = add nuw nsw i32 %i72.0.neg2928, 2
  %sub.i1208 = add i32 %sub81.neg, %48
  %and.i1210 = and i32 %sub3.i1197, %sub.i1208
  %idxprom.i.i1211 = sext i32 %and.i1210 to i64
  %arrayidx.i.i1212 = getelementptr inbounds i8, ptr %50, i64 %idxprom.i.i1211
  %53 = load i8, ptr %arrayidx.i.i1212, align 1, !tbaa !9
  %cmp83 = icmp eq i8 %53, 116
  br i1 %cmp83, label %land.lhs.true84, label %for.inc152

land.lhs.true84:                                  ; preds = %land.lhs.true80
  %sub85.neg = add nuw nsw i32 %i72.0.neg2928, 3
  %sub.i1214 = add i32 %sub85.neg, %48
  %and.i1216 = and i32 %sub3.i1197, %sub.i1214
  %idxprom.i.i1217 = sext i32 %and.i1216 to i64
  %arrayidx.i.i1218 = getelementptr inbounds i8, ptr %50, i64 %idxprom.i.i1217
  %54 = load i8, ptr %arrayidx.i.i1218, align 1, !tbaa !9
  %cmp87 = icmp eq i8 %54, 32
  br i1 %cmp87, label %land.lhs.true88, label %for.inc152

land.lhs.true88:                                  ; preds = %land.lhs.true84
  %sub89.neg = add nuw nsw i32 %i72.0.neg2928, 8
  %sub.i.i = add i32 %sub89.neg, %48
  %and.i.i = and i32 %sub3.i1197, %sub.i.i
  %idxprom.i.i.i = sext i32 %and.i.i to i64
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %50, i64 %idxprom.i.i.i
  %55 = load i8, ptr %arrayidx.i.i.i, align 1, !tbaa !9
  %conv.i.i = zext i8 %55 to i16
  %sub.i3.i = add i32 %sub.i.i, 1
  %and.i5.i = and i32 %sub3.i1197, %sub.i3.i
  %idxprom.i.i6.i = sext i32 %and.i5.i to i64
  %arrayidx.i.i7.i = getelementptr inbounds i8, ptr %50, i64 %idxprom.i.i6.i
  %56 = load i8, ptr %arrayidx.i.i7.i, align 1, !tbaa !9
  %conv.i8.i = zext i8 %56 to i16
  %mul.i = shl nuw i16 %conv.i8.i, 8
  %add.i = or i16 %mul.i, %conv.i.i
  switch i16 %add.i, label %for.inc152 [
    i16 1, label %if.then95
    i16 -2, label %if.then95
  ]

if.then95:                                        ; preds = %land.lhs.true88, %land.lhs.true88
  %sub96.neg = add nuw nsw i32 %i72.0.neg2928, 22
  %sub.i1233 = add i32 %sub96.neg, %48
  %and.i1235 = and i32 %sub3.i1197, %sub.i1233
  %idxprom.i.i1236 = sext i32 %and.i1235 to i64
  %arrayidx.i.i1237 = getelementptr inbounds i8, ptr %50, i64 %idxprom.i.i1236
  %57 = load i8, ptr %arrayidx.i.i1237, align 1, !tbaa !9
  %conv.i1238 = zext i8 %57 to i32
  store i32 %conv.i1238, ptr @_ZZ8wavModelR5MixerE4bits, align 4, !tbaa !25
  %add = add nuw nsw i32 %conv.i1238, 7
  %shr98 = lshr i32 %add, 3
  store i32 %shr98, ptr @_ZZ8wavModelR5MixerE5bytes, align 4, !tbaa !25
  %sub99.neg = add nuw nsw i32 %i72.0.neg2928, 10
  %sub.i1239 = add i32 %sub99.neg, %48
  %and.i1241 = and i32 %sub3.i1197, %sub.i1239
  %idxprom.i.i1242 = sext i32 %and.i1241 to i64
  %arrayidx.i.i1243 = getelementptr inbounds i8, ptr %50, i64 %idxprom.i.i1242
  %58 = load i8, ptr %arrayidx.i.i1243, align 1, !tbaa !9
  %conv.i1244 = zext i8 %58 to i32
  store i32 %conv.i1244, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  %mul101 = mul nuw nsw i32 %shr98, %conv.i1244
  store i32 %mul101, ptr @_ZZ8wavModelR5MixerE1w, align 4, !tbaa !25
  %sub.i.i1245 = add i32 %48, -4
  %and.i.i1247 = and i32 %sub3.i1197, %sub.i.i1245
  %idxprom.i.i.i1248 = sext i32 %and.i.i1247 to i64
  %arrayidx.i.i.i1249 = getelementptr inbounds i8, ptr %50, i64 %idxprom.i.i.i1248
  %59 = load i8, ptr %arrayidx.i.i.i1249, align 1, !tbaa !9
  %conv.i.i1250 = zext i8 %59 to i32
  %sub.i13.i = add i32 %48, -3
  %and.i15.i = and i32 %sub3.i1197, %sub.i13.i
  %idxprom.i.i16.i = sext i32 %and.i15.i to i64
  %arrayidx.i.i17.i = getelementptr inbounds i8, ptr %50, i64 %idxprom.i.i16.i
  %60 = load i8, ptr %arrayidx.i.i17.i, align 1, !tbaa !9
  %conv.i18.i = zext i8 %60 to i32
  %mul.i1251 = shl nuw nsw i32 %conv.i18.i, 8
  %add.i1252 = or i32 %mul.i1251, %conv.i.i1250
  %sub.i19.i = add i32 %48, -2
  %and.i21.i = and i32 %sub3.i1197, %sub.i19.i
  %idxprom.i.i22.i = sext i32 %and.i21.i to i64
  %arrayidx.i.i23.i = getelementptr inbounds i8, ptr %50, i64 %idxprom.i.i22.i
  %61 = load i8, ptr %arrayidx.i.i23.i, align 1, !tbaa !9
  %conv.i24.i = zext i8 %61 to i32
  %mul4.i = shl nuw nsw i32 %conv.i24.i, 16
  %add5.i = or i32 %add.i1252, %mul4.i
  %sub.i25.i = add i32 %48, -1
  %and.i27.i = and i32 %sub3.i1197, %sub.i25.i
  %idxprom.i.i28.i = sext i32 %and.i27.i to i64
  %arrayidx.i.i29.i = getelementptr inbounds i8, ptr %50, i64 %idxprom.i.i28.i
  %62 = load i8, ptr %arrayidx.i.i29.i, align 1, !tbaa !9
  %conv.i30.i = zext i8 %62 to i32
  %mul8.i = shl nuw nsw i32 %conv.i30.i, 24
  %add9.i = or i32 %add5.i, %mul8.i
  store i32 %add9.i, ptr @_ZZ8wavModelR5MixerE1s, align 4, !tbaa !25
  %63 = add i8 %58, -1
  %or.cond = icmp ult i8 %63, 2
  br i1 %or.cond, label %land.lhs.true106, label %if.else149

land.lhs.true106:                                 ; preds = %if.then95
  switch i8 %57, label %if.else149 [
    i8 16, label %for.cond117.preheader.lr.ph
    i8 8, label %for.cond117.preheader.lr.ph
  ]

for.cond117.preheader.lr.ph:                      ; preds = %land.lhs.true106, %land.lhs.true106
  %add111 = add nsw i32 %add9.i, %48
  store i32 %add111, ptr @_ZZ8wavModelR5MixerE3eof, align 4, !tbaa !25
  %64 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %.b1177 = load i1, ptr @_ZL1D, align 4
  %65 = select i1 %.b1177, i32 12, i32 0
  %add118 = add nuw nsw i32 %65, %64
  %cmp119.not2923 = icmp slt i32 %add118, 0
  br i1 %cmp119.not2923, label %for.cond117.preheader.us.preheader, label %for.cond117.preheader.preheader

for.cond117.preheader.preheader:                  ; preds = %for.cond117.preheader.lr.ph
  %66 = or i32 %65, 1
  %67 = add i32 %66, %64
  %68 = zext i8 %58 to i64
  %69 = shl nuw nsw i64 %68, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 @_ZZ8wavModelR5MixerE7counter, i8 0, i64 %69, i1 false), !tbaa !25
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 @_ZZ8wavModelR5MixerE1n, i8 0, i64 %69, i1 false), !tbaa !25
  %wide.trip.count3020 = zext i8 %58 to i64
  %wide.trip.count3015 = zext i32 %67 to i64
  br label %for.cond117.preheader

for.cond117.preheader.us.preheader:               ; preds = %for.cond117.preheader.lr.ph
  %70 = zext i8 %58 to i64
  %71 = shl nuw nsw i64 %70, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 @_ZZ8wavModelR5MixerE7counter, i8 0, i64 %71, i1 false), !tbaa !25
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 @_ZZ8wavModelR5MixerE1n, i8 0, i64 %71, i1 false), !tbaa !25
  %wide.trip.count3025 = zext i8 %58 to i64
  %min.iters.check = icmp ult i8 %58, 4
  br i1 %min.iters.check, label %for.cond117.preheader.us.preheader3189, label %vector.ph

vector.ph:                                        ; preds = %for.cond117.preheader.us.preheader
  %n.vec = and i64 %wide.trip.count3025, 252
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %72 = getelementptr inbounds [2 x double], ptr %arrayidx132, i64 0, i64 %index
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, ptr %72, align 16, !tbaa !178
  %73 = getelementptr inbounds double, ptr %72, i64 2
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, ptr %73, align 16, !tbaa !178
  %index.next = add nuw i64 %index, 4
  %74 = icmp eq i64 %index.next, %n.vec
  br i1 %74, label %middle.block, label %vector.body, !llvm.loop !180

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count3025
  br i1 %cmp.n, label %for.cond.cleanup115, label %for.cond117.preheader.us.preheader3189

for.cond117.preheader.us.preheader3189:           ; preds = %for.cond117.preheader.us.preheader, %middle.block
  %indvars.iv3022.ph = phi i64 [ 0, %for.cond117.preheader.us.preheader ], [ %n.vec, %middle.block ]
  br label %for.cond117.preheader.us

for.cond117.preheader.us:                         ; preds = %for.cond117.preheader.us.preheader3189, %for.cond117.preheader.us
  %indvars.iv3022 = phi i64 [ %indvars.iv.next3023, %for.cond117.preheader.us ], [ %indvars.iv3022.ph, %for.cond117.preheader.us.preheader3189 ]
  %arrayidx135.us = getelementptr inbounds [2 x double], ptr %arrayidx132, i64 0, i64 %indvars.iv3022
  store double 1.000000e+00, ptr %arrayidx135.us, align 8, !tbaa !178
  %indvars.iv.next3023 = add nuw nsw i64 %indvars.iv3022, 1
  %exitcond3026.not = icmp eq i64 %indvars.iv.next3023, %wide.trip.count3025
  br i1 %exitcond3026.not, label %for.cond.cleanup115, label %for.cond117.preheader.us, !llvm.loop !181

for.cond117.preheader:                            ; preds = %for.cond117.preheader.preheader, %for.cond117.for.end131_crit_edge
  %indvars.iv3017 = phi i64 [ 0, %for.cond117.preheader.preheader ], [ %indvars.iv.next3018, %for.cond117.for.end131_crit_edge ]
  br label %for.cond121.preheader

for.cond.cleanup115:                              ; preds = %for.cond117.for.end131_crit_edge, %for.cond117.preheader.us, %middle.block
  %add143 = add nuw nsw i32 %conv.i1244, %conv.i1238
  store i32 %add143, ptr @_ZL5wmode, align 4, !tbaa !25
  %call144 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.14, i32 noundef %conv.i1238)
  %75 = load i32, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  %cmp145 = icmp eq i32 %75, 1
  br i1 %cmp145, label %if.then146, label %if.else

for.cond121.preheader:                            ; preds = %for.cond117.preheader, %for.cond121.for.inc129_crit_edge
  %indvars.iv = phi i64 [ 0, %for.cond117.preheader ], [ %indvars.iv.next, %for.cond121.for.inc129_crit_edge ]
  %76 = trunc i64 %indvars.iv to i32
  %smax3191 = tail call i32 @llvm.smax.i32(i32 %76, i32 %add118)
  %77 = zext i32 %smax3191 to i64
  %reass.sub3215 = sub nsw i64 %77, %indvars.iv
  %78 = add i64 %reass.sub3215, 1
  %79 = sub nsw i64 %77, %indvars.iv
  %80 = trunc i64 %indvars.iv to i32
  %smax = tail call i32 @llvm.smax.i32(i32 %80, i32 %add118)
  %81 = add nuw i32 %smax, 1
  %wide.trip.count = zext i32 %81 to i64
  %xtraiter = and i64 %78, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body124.prol.loopexit, label %for.body124.prol

for.body124.prol:                                 ; preds = %for.cond121.preheader, %for.body124.prol
  %indvars.iv3011.prol = phi i64 [ %indvars.iv.next3012.prol, %for.body124.prol ], [ %indvars.iv, %for.cond121.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body124.prol ], [ 0, %for.cond121.preheader ]
  %arrayidx128.prol = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 %indvars.iv, i64 %indvars.iv3011.prol, i64 %indvars.iv3017
  store double 0.000000e+00, ptr %arrayidx128.prol, align 8, !tbaa !178
  %indvars.iv.next3012.prol = add nuw nsw i64 %indvars.iv3011.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body124.prol.loopexit, label %for.body124.prol, !llvm.loop !182

for.body124.prol.loopexit:                        ; preds = %for.body124.prol, %for.cond121.preheader
  %indvars.iv3011.unr = phi i64 [ %indvars.iv, %for.cond121.preheader ], [ %indvars.iv.next3012.prol, %for.body124.prol ]
  %82 = icmp ult i64 %79, 3
  br i1 %82, label %for.cond121.for.inc129_crit_edge, label %for.body124

for.body124:                                      ; preds = %for.body124.prol.loopexit, %for.body124
  %indvars.iv3011 = phi i64 [ %indvars.iv.next3012.3, %for.body124 ], [ %indvars.iv3011.unr, %for.body124.prol.loopexit ]
  %arrayidx128 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 %indvars.iv, i64 %indvars.iv3011, i64 %indvars.iv3017
  store double 0.000000e+00, ptr %arrayidx128, align 8, !tbaa !178
  %indvars.iv.next3012 = add nuw nsw i64 %indvars.iv3011, 1
  %arrayidx128.1 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 %indvars.iv, i64 %indvars.iv.next3012, i64 %indvars.iv3017
  store double 0.000000e+00, ptr %arrayidx128.1, align 8, !tbaa !178
  %indvars.iv.next3012.1 = add nuw nsw i64 %indvars.iv3011, 2
  %arrayidx128.2 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 %indvars.iv, i64 %indvars.iv.next3012.1, i64 %indvars.iv3017
  store double 0.000000e+00, ptr %arrayidx128.2, align 8, !tbaa !178
  %indvars.iv.next3012.2 = add nuw nsw i64 %indvars.iv3011, 3
  %arrayidx128.3 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 %indvars.iv, i64 %indvars.iv.next3012.2, i64 %indvars.iv3017
  store double 0.000000e+00, ptr %arrayidx128.3, align 8, !tbaa !178
  %indvars.iv.next3012.3 = add nuw nsw i64 %indvars.iv3011, 4
  %exitcond.not.3 = icmp eq i64 %indvars.iv.next3012.3, %wide.trip.count
  br i1 %exitcond.not.3, label %for.cond121.for.inc129_crit_edge, label %for.body124, !llvm.loop !184

for.cond121.for.inc129_crit_edge:                 ; preds = %for.body124, %for.body124.prol.loopexit
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond3016.not = icmp eq i64 %indvars.iv.next, %wide.trip.count3015
  br i1 %exitcond3016.not, label %for.cond117.for.end131_crit_edge, label %for.cond121.preheader, !llvm.loop !185

for.cond117.for.end131_crit_edge:                 ; preds = %for.cond121.for.inc129_crit_edge
  %arrayidx135 = getelementptr inbounds [2 x double], ptr %arrayidx132, i64 0, i64 %indvars.iv3017
  store double 1.000000e+00, ptr %arrayidx135, align 8, !tbaa !178
  %indvars.iv.next3018 = add nuw nsw i64 %indvars.iv3017, 1
  %exitcond3021.not = icmp eq i64 %indvars.iv.next3018, %wide.trip.count3020
  br i1 %exitcond3021.not, label %for.cond.cleanup115, label %for.cond117.preheader, !llvm.loop !186

if.then146:                                       ; preds = %for.cond.cleanup115
  %call147 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.15)
  store i32 48, ptr @_ZL1S, align 4, !tbaa !25
  store i1 false, ptr @_ZL1D, align 4
  br label %for.inc152

if.else:                                          ; preds = %for.cond.cleanup115
  %call148 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.16)
  store i32 36, ptr @_ZL1S, align 4, !tbaa !25
  store i1 true, ptr @_ZL1D, align 4
  br label %for.inc152

if.else149:                                       ; preds = %land.lhs.true106, %if.then95
  store i32 %48, ptr @_ZZ8wavModelR5MixerE3eof, align 4, !tbaa !25
  br label %for.inc152

for.inc152:                                       ; preds = %land.lhs.true88, %for.body, %land.lhs.true76, %land.lhs.true80, %land.lhs.true84, %if.then146, %if.else, %if.else149
  %inc153 = add nuw nsw i32 %i72.02927, 1
  %i72.0.neg = xor i32 %i72.02927, -1
  %exitcond3027.not = icmp eq i32 %inc153, 1001
  br i1 %exitcond3027.not, label %if.end155, label %for.body, !llvm.loop !187

if.end155:                                        ; preds = %for.inc152, %land.lhs.true69, %land.lhs.true66, %land.lhs.true63, %land.lhs.true, %init.end61
  %83 = load i32, ptr @pos, align 4, !tbaa !25
  %84 = load i32, ptr @_ZZ8wavModelR5MixerE3eof, align 4, !tbaa !25
  %cmp156 = icmp sgt i32 %83, %84
  br i1 %cmp156, label %if.then157, label %if.end158

if.then157:                                       ; preds = %if.end155
  store i32 0, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  store i32 0, ptr @_ZZ8wavModelR5MixerE4bits, align 4, !tbaa !25
  br label %cleanup

if.end158:                                        ; preds = %if.end155
  %85 = load i32, ptr @bpos, align 4, !tbaa !25
  %tobool159.not = icmp eq i32 %85, 0
  br i1 %tobool159.not, label %if.then160, label %if.end900

if.then160:                                       ; preds = %if.end158
  %86 = load i32, ptr @_ZZ8wavModelR5MixerE1s, align 4, !tbaa !25
  %add161 = sub i32 %83, %84
  %sub162 = add i32 %add161, %86
  %87 = load i32, ptr @_ZZ8wavModelR5MixerE5bytes, align 4, !tbaa !25
  %rem = srem i32 %sub162, %87
  %88 = load i32, ptr @_ZZ8wavModelR5MixerE1w, align 4, !tbaa !25
  %rem165 = srem i32 %sub162, %88
  %div = sdiv i32 %rem165, %87
  %tobool166.not = icmp eq i32 %rem, 0
  br i1 %tobool166.not, label %for.cond168.preheader, label %if.else660

for.cond168.preheader:                            ; preds = %if.then160
  %89 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %.b11752929 = load i1, ptr @_ZL1D, align 4
  %90 = select i1 %.b11752929, i32 12, i32 0
  %add1692930 = add nuw nsw i32 %90, %89
  %cmp170.not2931 = icmp slt i32 %add1692930, 0
  br i1 %cmp170.not2931, label %for.end203, label %for.body171.lr.ph

for.body171.lr.ph:                                ; preds = %for.cond168.preheader
  %idxprom172 = sext i32 %div to i64
  %arrayidx173 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %idxprom172
  br label %for.body171

for.body171:                                      ; preds = %for.body171.lr.ph, %for.inc201
  %.b11753101 = phi i1 [ %.b11752929, %for.body171.lr.ph ], [ %.b1175, %for.inc201 ]
  %91 = phi i32 [ %89, %for.body171.lr.ph ], [ %98, %for.inc201 ]
  %indvars.iv3028 = phi i64 [ 0, %for.body171.lr.ph ], [ %indvars.iv.next3029, %for.inc201 ]
  %92 = load i32, ptr %arrayidx173, align 4, !tbaa !25
  %93 = sext i32 %92 to i64
  %cmp174 = icmp slt i64 %indvars.iv3028, %93
  br i1 %cmp174, label %for.body171.if.then185_crit_edge, label %lor.lhs.false175

for.body171.if.then185_crit_edge:                 ; preds = %for.body171
  %.pre3125 = trunc i64 %indvars.iv3028 to i32
  br label %if.then185

lor.lhs.false175:                                 ; preds = %for.body171
  %94 = xor i32 %91, -1
  %95 = trunc i64 %indvars.iv3028 to i32
  %sub177 = add i32 %95, %94
  %cmp178 = icmp sgt i32 %sub177, -1
  %cmp184 = icmp slt i32 %sub177, %92
  %or.cond2857 = and i1 %cmp178, %cmp184
  br i1 %or.cond2857, label %if.then185, label %for.inc201

if.then185:                                       ; preds = %for.body171.if.then185_crit_edge, %lor.lhs.false175
  %.pre-phi3126 = phi i32 [ %.pre3125, %for.body171.if.then185_crit_edge ], [ %95, %lor.lhs.false175 ]
  %arrayidx190 = getelementptr inbounds [49 x [2 x double]], ptr %F, i64 0, i64 %indvars.iv3028, i64 %idxprom172
  %96 = load double, ptr %arrayidx190, align 8, !tbaa !178
  %call192 = tail call noundef i32 @_Z1Xii(i32 noundef 0, i32 noundef 1)
  %call193 = tail call noundef i32 @_Z1Xii(i32 noundef %.pre-phi3126, i32 noundef 1)
  %mul194 = mul nsw i32 %call193, %call192
  %conv = sitofp i32 %mul194 to double
  %97 = tail call double @llvm.fmuladd.f64(double %96, double 0x3FEFDF3B645A1CAC, double %conv)
  store double %97, ptr %arrayidx190, align 8, !tbaa !178
  %.pre = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %.b1175.pre = load i1, ptr @_ZL1D, align 4
  br label %for.inc201

for.inc201:                                       ; preds = %lor.lhs.false175, %if.then185
  %.b1175 = phi i1 [ %.b11753101, %lor.lhs.false175 ], [ %.b1175.pre, %if.then185 ]
  %98 = phi i32 [ %91, %lor.lhs.false175 ], [ %.pre, %if.then185 ]
  %indvars.iv.next3029 = add nuw nsw i64 %indvars.iv3028, 1
  %99 = select i1 %.b1175, i32 12, i32 0
  %add169 = add nuw nsw i32 %99, %98
  %100 = sext i32 %add169 to i64
  %cmp170.not.not = icmp slt i64 %indvars.iv3028, %100
  br i1 %cmp170.not.not, label %for.body171, label %for.end203, !llvm.loop !188

for.end203:                                       ; preds = %for.inc201, %for.cond168.preheader
  %.b11742934 = phi i1 [ %.b11752929, %for.cond168.preheader ], [ %.b1175, %for.inc201 ]
  %101 = phi i32 [ %89, %for.cond168.preheader ], [ %98, %for.inc201 ]
  %102 = load i32, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  %cmp204 = icmp eq i32 %102, 2
  br i1 %cmp204, label %for.cond207.preheader, label %if.end272

for.cond207.preheader:                            ; preds = %for.end203
  br i1 %.b11742934, label %for.body210.lr.ph, label %for.cond241.preheader

for.body210.lr.ph:                                ; preds = %for.cond207.preheader
  %idxprom213 = sext i32 %div to i64
  %arrayidx214 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %idxprom213
  %103 = sext i32 %101 to i64
  br label %for.body210

for.cond241.preheader:                            ; preds = %for.inc238, %for.cond207.preheader
  %104 = phi i32 [ %101, %for.cond207.preheader ], [ %111, %for.inc238 ]
  %cmp242.not2939 = icmp slt i32 %104, 1
  br i1 %cmp242.not2939, label %if.end272, label %for.body243.lr.ph

for.body243.lr.ph:                                ; preds = %for.cond241.preheader
  %idxprom244 = sext i32 %div to i64
  %arrayidx245 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %idxprom244
  br label %for.body243

for.body210:                                      ; preds = %for.body210.lr.ph, %for.inc238
  %.b11743104 = phi i1 [ true, %for.body210.lr.ph ], [ %.b1174, %for.inc238 ]
  %105 = phi i32 [ %101, %for.body210.lr.ph ], [ %111, %for.inc238 ]
  %indvars.iv3031 = phi i64 [ %103, %for.body210.lr.ph ], [ %indvars.iv.next3032, %for.inc238 ]
  %indvars3033 = trunc i64 %indvars.iv3031 to i32
  %indvars.iv.next3032 = add nsw i64 %indvars.iv3031, 1
  %sub212 = sub i32 %indvars3033, %105
  %106 = load i32, ptr %arrayidx214, align 4, !tbaa !25
  %cmp215 = icmp slt i32 %sub212, %106
  br i1 %cmp215, label %if.then216, label %for.inc238

if.then216:                                       ; preds = %for.body210
  %add217 = add nuw nsw i32 %105, 1
  %idxprom218 = zext i32 %add217 to i64
  %arrayidx223 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 %idxprom218, i64 %indvars.iv.next3032, i64 %idxprom213
  %107 = load double, ptr %arrayidx223, align 8, !tbaa !178
  %call226 = tail call noundef i32 @_Z1Xii(i32 noundef %add217, i32 noundef 1)
  %108 = trunc i64 %indvars.iv.next3032 to i32
  %call227 = tail call noundef i32 @_Z1Xii(i32 noundef %108, i32 noundef 1)
  %mul228 = mul nsw i32 %call227, %call226
  %conv229 = sitofp i32 %mul228 to double
  %109 = tail call double @llvm.fmuladd.f64(double %107, double 0x3FEFDF3B645A1CAC, double %conv229)
  %110 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %add230 = add nuw nsw i32 %110, 1
  %idxprom231 = zext i32 %add230 to i64
  %arrayidx236 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 %idxprom231, i64 %indvars.iv.next3032, i64 %idxprom213
  store double %109, ptr %arrayidx236, align 8, !tbaa !178
  %.b1174.pre = load i1, ptr @_ZL1D, align 4
  br label %for.inc238

for.inc238:                                       ; preds = %for.body210, %if.then216
  %.b1174 = phi i1 [ %.b11743104, %for.body210 ], [ %.b1174.pre, %if.then216 ]
  %111 = phi i32 [ %105, %for.body210 ], [ %110, %if.then216 ]
  %112 = select i1 %.b1174, i32 12, i32 0
  %add208 = add nuw nsw i32 %112, %111
  %113 = sext i32 %add208 to i64
  %cmp209.not.not = icmp slt i64 %indvars.iv.next3032, %113
  br i1 %cmp209.not.not, label %for.body210, label %for.cond241.preheader, !llvm.loop !189

for.body243:                                      ; preds = %for.body243.lr.ph, %for.inc269
  %114 = phi i32 [ %104, %for.body243.lr.ph ], [ %122, %for.inc269 ]
  %indvars.iv3034 = phi i64 [ 1, %for.body243.lr.ph ], [ %indvars.iv.next3035, %for.inc269 ]
  %115 = load i32, ptr %arrayidx245, align 4, !tbaa !25
  %116 = sext i32 %115 to i64
  %cmp246 = icmp slt i64 %indvars.iv3034, %116
  br i1 %cmp246, label %if.then247, label %for.inc269

if.then247:                                       ; preds = %for.body243
  %add250 = add nuw nsw i32 %114, 1
  %idxprom251 = zext i32 %add250 to i64
  %arrayidx254 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 %indvars.iv3034, i64 %idxprom251, i64 %idxprom244
  %117 = load double, ptr %arrayidx254, align 8, !tbaa !178
  %118 = trunc i64 %indvars.iv3034 to i32
  %call256 = tail call noundef i32 @_Z1Xii(i32 noundef %118, i32 noundef 1)
  %119 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %add257 = add nuw nsw i32 %119, 1
  %call258 = tail call noundef i32 @_Z1Xii(i32 noundef %add257, i32 noundef 1)
  %mul259 = mul nsw i32 %call258, %call256
  %conv260 = sitofp i32 %mul259 to double
  %120 = tail call double @llvm.fmuladd.f64(double %117, double 0x3FEFDF3B645A1CAC, double %conv260)
  %121 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %add263 = add nuw nsw i32 %121, 1
  %idxprom264 = zext i32 %add263 to i64
  %arrayidx267 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 %indvars.iv3034, i64 %idxprom264, i64 %idxprom244
  store double %120, ptr %arrayidx267, align 8, !tbaa !178
  br label %for.inc269

for.inc269:                                       ; preds = %for.body243, %if.then247
  %122 = phi i32 [ %114, %for.body243 ], [ %121, %if.then247 ]
  %indvars.iv.next3035 = add nuw nsw i64 %indvars.iv3034, 1
  %123 = sext i32 %122 to i64
  %cmp242.not.not = icmp slt i64 %indvars.iv3034, %123
  br i1 %cmp242.not.not, label %for.body243, label %if.end272, !llvm.loop !190

if.end272:                                        ; preds = %for.inc269, %for.cond241.preheader, %for.end203
  %124 = phi i32 [ %104, %for.cond241.preheader ], [ %101, %for.end203 ], [ %122, %for.inc269 ]
  %idxprom273 = sext i32 %div to i64
  %arrayidx274 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE1n, i64 0, i64 %idxprom273
  %125 = load i32, ptr %arrayidx274, align 4, !tbaa !25
  %inc275 = add nsw i32 %125, 1
  store i32 %inc275, ptr %arrayidx274, align 4, !tbaa !25
  %126 = load i32, ptr @_ZZ8wavModelR5MixerE1K, align 4, !tbaa !25
  %cmp276 = icmp eq i32 %inc275, %126
  br i1 %cmp276, label %if.then277, label %if.end272.if.end538_crit_edge

if.end272.if.end538_crit_edge:                    ; preds = %if.end272
  %.b2997.pre = load i1, ptr @_ZL1D, align 4
  br label %if.end538

if.then277:                                       ; preds = %if.end272
  %127 = load i32, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  %cmp278 = icmp eq i32 %127, 1
  %.b11732954 = load i1, ptr @_ZL1D, align 4
  %128 = select i1 %.b11732954, i32 12, i32 0
  %add2812955 = add nuw nsw i32 %128, %124
  %cmp282.not2956 = icmp slt i32 %add2812955, 1
  br i1 %cmp278, label %for.cond280.preheader, label %for.cond317.preheader

for.cond317.preheader:                            ; preds = %if.then277
  br i1 %cmp282.not2956, label %for.end437, label %for.body320

for.cond280.preheader:                            ; preds = %if.then277
  br i1 %cmp282.not2956, label %for.end437, label %for.cond284.preheader

for.cond284.preheader:                            ; preds = %for.cond280.preheader, %for.inc313
  %.b11733116 = phi i1 [ %.b1173, %for.inc313 ], [ %.b11732954, %for.cond280.preheader ]
  %129 = phi i32 [ %140, %for.inc313 ], [ %124, %for.cond280.preheader ]
  %indvars.iv3045 = phi i64 [ %indvars.iv.next3046, %for.inc313 ], [ 1, %for.cond280.preheader ]
  %130 = select i1 %.b11733116, i32 12, i32 0
  %add2852951 = add nuw nsw i32 %130, %129
  %131 = sext i32 %add2852951 to i64
  %cmp286.not2952 = icmp sgt i64 %indvars.iv3045, %131
  br i1 %cmp286.not2952, label %for.inc313, label %for.body287.lr.ph

for.body287.lr.ph:                                ; preds = %for.cond284.preheader
  %132 = add nsw i64 %indvars.iv3045, -1
  %133 = trunc i64 %132 to i32
  br label %for.body287

for.body287:                                      ; preds = %for.body287.lr.ph, %for.body287
  %indvars.iv3047 = phi i64 [ %indvars.iv3045, %for.body287.lr.ph ], [ %indvars.iv.next3048, %for.body287 ]
  %134 = add nsw i64 %indvars.iv3047, -1
  %arrayidx295 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 %132, i64 %134, i64 %idxprom273
  %135 = load double, ptr %arrayidx295, align 8, !tbaa !178
  %call297 = tail call noundef i32 @_Z1Xii(i32 noundef %133, i32 noundef 1)
  %136 = trunc i64 %134 to i32
  %call299 = tail call noundef i32 @_Z1Xii(i32 noundef %136, i32 noundef 1)
  %mul300 = mul nsw i32 %call299, %call297
  %conv301 = sitofp i32 %mul300 to double
  %sub302 = fsub double %135, %conv301
  %div303 = fdiv double %sub302, 0x3FEFDF3B645A1CAC
  %arrayidx309 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 %indvars.iv3045, i64 %indvars.iv3047, i64 %idxprom273
  store double %div303, ptr %arrayidx309, align 8, !tbaa !178
  %indvars.iv.next3048 = add nuw nsw i64 %indvars.iv3047, 1
  %137 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %.b1172 = load i1, ptr @_ZL1D, align 4
  %138 = select i1 %.b1172, i32 12, i32 0
  %add285 = add nuw nsw i32 %138, %137
  %139 = sext i32 %add285 to i64
  %cmp286.not.not = icmp slt i64 %indvars.iv3047, %139
  br i1 %cmp286.not.not, label %for.body287, label %for.inc313, !llvm.loop !191

for.inc313:                                       ; preds = %for.body287, %for.cond284.preheader
  %.pre-phi3124 = phi i64 [ %131, %for.cond284.preheader ], [ %139, %for.body287 ]
  %add281.pre-phi = phi i32 [ %add2852951, %for.cond284.preheader ], [ %add285, %for.body287 ]
  %.b1173 = phi i1 [ %.b11733116, %for.cond284.preheader ], [ %.b1172, %for.body287 ]
  %140 = phi i32 [ %129, %for.cond284.preheader ], [ %137, %for.body287 ]
  %indvars.iv.next3046 = add nuw nsw i64 %indvars.iv3045, 1
  %cmp282.not.not = icmp slt i64 %indvars.iv3045, %.pre-phi3124
  br i1 %cmp282.not.not, label %for.cond284.preheader, label %if.end361, !llvm.loop !192

for.body320:                                      ; preds = %for.cond317.preheader, %for.inc358
  %.b11713113 = phi i1 [ %.b1171, %for.inc358 ], [ %.b11732954, %for.cond317.preheader ]
  %141 = phi i32 [ %157, %for.inc358 ], [ %124, %for.cond317.preheader ]
  %indvars.iv3037 = phi i64 [ %indvars.iv.next3038, %for.inc358 ], [ 1, %for.cond317.preheader ]
  %add321 = add nuw nsw i32 %141, 1
  %142 = zext i32 %add321 to i64
  %cmp322.not = icmp eq i64 %indvars.iv3037, %142
  br i1 %cmp322.not, label %for.inc358, label %for.cond324.preheader

for.cond324.preheader:                            ; preds = %for.body320
  %143 = select i1 %.b11713113, i32 12, i32 0
  %add3252942 = add nuw nsw i32 %143, %141
  %144 = sext i32 %add3252942 to i64
  %cmp326.not2943 = icmp sgt i64 %indvars.iv3037, %144
  br i1 %cmp326.not2943, label %for.inc358, label %for.body327.lr.ph

for.body327.lr.ph:                                ; preds = %for.cond324.preheader
  %145 = add nsw i64 %indvars.iv3037, -1
  %146 = trunc i64 %145 to i32
  br label %for.body327

for.body327:                                      ; preds = %for.body327.lr.ph, %for.inc354
  %.b11713111 = phi i1 [ %.b11713113, %for.body327.lr.ph ], [ %.b11713110, %for.inc354 ]
  %147 = phi i32 [ %141, %for.body327.lr.ph ], [ %153, %for.inc354 ]
  %.b11703108 = phi i1 [ %.b11713113, %for.body327.lr.ph ], [ %.b1170, %for.inc354 ]
  %148 = phi i32 [ %141, %for.body327.lr.ph ], [ %154, %for.inc354 ]
  %indvars.iv3039 = phi i64 [ %indvars.iv3037, %for.body327.lr.ph ], [ %indvars.iv.next3040, %for.inc354 ]
  %add328 = add nuw nsw i32 %148, 1
  %149 = zext i32 %add328 to i64
  %cmp329.not = icmp eq i64 %indvars.iv3039, %149
  br i1 %cmp329.not, label %for.inc354, label %if.then330

if.then330:                                       ; preds = %for.body327
  %150 = add nsw i64 %indvars.iv3039, -1
  %arrayidx338 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 %145, i64 %150, i64 %idxprom273
  %151 = load double, ptr %arrayidx338, align 8, !tbaa !178
  %call340 = tail call noundef i32 @_Z1Xii(i32 noundef %146, i32 noundef 1)
  %152 = trunc i64 %150 to i32
  %call342 = tail call noundef i32 @_Z1Xii(i32 noundef %152, i32 noundef 1)
  %mul343 = mul nsw i32 %call342, %call340
  %conv344 = sitofp i32 %mul343 to double
  %sub345 = fsub double %151, %conv344
  %div346 = fdiv double %sub345, 0x3FEFDF3B645A1CAC
  %arrayidx352 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 %indvars.iv3037, i64 %indvars.iv3039, i64 %idxprom273
  store double %div346, ptr %arrayidx352, align 8, !tbaa !178
  %.pre3107 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %.b1170.pre = load i1, ptr @_ZL1D, align 4
  br label %for.inc354

for.inc354:                                       ; preds = %for.body327, %if.then330
  %.b11713110 = phi i1 [ %.b11713111, %for.body327 ], [ %.b1170.pre, %if.then330 ]
  %153 = phi i32 [ %147, %for.body327 ], [ %.pre3107, %if.then330 ]
  %.b1170 = phi i1 [ %.b11703108, %for.body327 ], [ %.b1170.pre, %if.then330 ]
  %154 = phi i32 [ %148, %for.body327 ], [ %.pre3107, %if.then330 ]
  %indvars.iv.next3040 = add nuw nsw i64 %indvars.iv3039, 1
  %155 = select i1 %.b1170, i32 12, i32 0
  %add325 = add nuw nsw i32 %155, %154
  %156 = sext i32 %add325 to i64
  %cmp326.not.not = icmp slt i64 %indvars.iv3039, %156
  br i1 %cmp326.not.not, label %for.body327, label %for.inc358, !llvm.loop !193

for.inc358:                                       ; preds = %for.inc354, %for.cond324.preheader, %for.body320
  %.b1171 = phi i1 [ %.b11713113, %for.cond324.preheader ], [ %.b11713113, %for.body320 ], [ %.b11713110, %for.inc354 ]
  %157 = phi i32 [ %141, %for.cond324.preheader ], [ %141, %for.body320 ], [ %153, %for.inc354 ]
  %indvars.iv.next3038 = add nuw nsw i64 %indvars.iv3037, 1
  %158 = select i1 %.b1171, i32 12, i32 0
  %add318 = add nuw nsw i32 %158, %157
  %159 = sext i32 %add318 to i64
  %cmp319.not.not = icmp slt i64 %indvars.iv3037, %159
  br i1 %cmp319.not.not, label %for.body320, label %if.end361, !llvm.loop !194

if.end361:                                        ; preds = %for.inc358, %for.inc313
  %add3632969.pre-phi = phi i32 [ %add281.pre-phi, %for.inc313 ], [ %add318, %for.inc358 ]
  %.b11692968 = phi i1 [ %.b1173, %for.inc313 ], [ %.b1171, %for.inc358 ]
  %160 = phi i32 [ %140, %for.inc313 ], [ %157, %for.inc358 ]
  %cmp364.not2970 = icmp slt i32 %add3632969.pre-phi, 1
  br i1 %cmp364.not2970, label %for.end437, label %for.body365

for.cond362.loopexit:                             ; preds = %for.body398, %for.cond405.for.end420_crit_edge.us
  %indvars.iv.next3059 = add nuw nsw i64 %indvars.iv3058, 1
  %indvar.next = add i64 %indvar, 1
  br i1 %cmp397.not2966.not, label %for.body365, label %for.end437.loopexit, !llvm.loop !195

for.body365:                                      ; preds = %if.end361, %for.cond362.loopexit
  %indvar = phi i64 [ %indvar.next, %for.cond362.loopexit ], [ 0, %if.end361 ]
  %.b29973122 = phi i1 [ %.b1168, %for.cond362.loopexit ], [ %.b11692968, %if.end361 ]
  %indvars.iv3071 = phi i64 [ %indvars.iv.next3072, %for.cond362.loopexit ], [ 1, %if.end361 ]
  %indvars.iv3058 = phi i64 [ %indvars.iv.next3059, %for.cond362.loopexit ], [ 2, %if.end361 ]
  %add3632972 = phi i32 [ %add396, %for.cond362.loopexit ], [ %add3632969.pre-phi, %if.end361 ]
  %161 = phi i32 [ %175, %for.cond362.loopexit ], [ %160, %if.end361 ]
  %arrayidx371 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 %indvars.iv3071, i64 %indvars.iv3071, i64 %idxprom273
  %162 = load double, ptr %arrayidx371, align 8, !tbaa !178
  %cmp3732958 = icmp ugt i64 %indvars.iv3071, 1
  br i1 %cmp3732958, label %for.body374.preheader, label %for.end386

for.body374.preheader:                            ; preds = %for.body365
  %163 = add i64 %indvar, -1
  %xtraiter3192 = and i64 %indvar, 3
  %164 = icmp ult i64 %163, 3
  br i1 %164, label %for.end386.loopexit.unr-lcssa, label %for.body374.preheader.new

for.body374.preheader.new:                        ; preds = %for.body374.preheader
  %unroll_iter = and i64 %indvar, -4
  br label %for.body374

for.body374:                                      ; preds = %for.body374, %for.body374.preheader.new
  %indvars.iv3053 = phi i64 [ 1, %for.body374.preheader.new ], [ %indvars.iv.next3054.3, %for.body374 ]
  %sum.02960 = phi double [ %162, %for.body374.preheader.new ], [ %172, %for.body374 ]
  %niter = phi i64 [ 0, %for.body374.preheader.new ], [ %niter.next.3, %for.body374 ]
  %arrayidx378 = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3071, i64 %indvars.iv3053
  %165 = load double, ptr %arrayidx378, align 8, !tbaa !178
  %neg = fneg double %165
  %166 = tail call double @llvm.fmuladd.f64(double %neg, double %165, double %sum.02960)
  %indvars.iv.next3054 = add nuw nsw i64 %indvars.iv3053, 1
  %arrayidx378.1 = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3071, i64 %indvars.iv.next3054
  %167 = load double, ptr %arrayidx378.1, align 8, !tbaa !178
  %neg.1 = fneg double %167
  %168 = tail call double @llvm.fmuladd.f64(double %neg.1, double %167, double %166)
  %indvars.iv.next3054.1 = add nuw nsw i64 %indvars.iv3053, 2
  %arrayidx378.2 = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3071, i64 %indvars.iv.next3054.1
  %169 = load double, ptr %arrayidx378.2, align 8, !tbaa !178
  %neg.2 = fneg double %169
  %170 = tail call double @llvm.fmuladd.f64(double %neg.2, double %169, double %168)
  %indvars.iv.next3054.2 = add nuw nsw i64 %indvars.iv3053, 3
  %arrayidx378.3 = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3071, i64 %indvars.iv.next3054.2
  %171 = load double, ptr %arrayidx378.3, align 8, !tbaa !178
  %neg.3 = fneg double %171
  %172 = tail call double @llvm.fmuladd.f64(double %neg.3, double %171, double %170)
  %indvars.iv.next3054.3 = add nuw nsw i64 %indvars.iv3053, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.end386.loopexit.unr-lcssa, label %for.body374, !llvm.loop !196

for.end386.loopexit.unr-lcssa:                    ; preds = %for.body374, %for.body374.preheader
  %.lcssa3178.ph = phi double [ undef, %for.body374.preheader ], [ %172, %for.body374 ]
  %indvars.iv3053.unr = phi i64 [ 1, %for.body374.preheader ], [ %indvars.iv.next3054.3, %for.body374 ]
  %sum.02960.unr = phi double [ %162, %for.body374.preheader ], [ %172, %for.body374 ]
  %lcmp.mod3193.not = icmp eq i64 %xtraiter3192, 0
  br i1 %lcmp.mod3193.not, label %for.end386, label %for.body374.epil

for.body374.epil:                                 ; preds = %for.end386.loopexit.unr-lcssa, %for.body374.epil
  %indvars.iv3053.epil = phi i64 [ %indvars.iv.next3054.epil, %for.body374.epil ], [ %indvars.iv3053.unr, %for.end386.loopexit.unr-lcssa ]
  %sum.02960.epil = phi double [ %174, %for.body374.epil ], [ %sum.02960.unr, %for.end386.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body374.epil ], [ 0, %for.end386.loopexit.unr-lcssa ]
  %arrayidx378.epil = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3071, i64 %indvars.iv3053.epil
  %173 = load double, ptr %arrayidx378.epil, align 8, !tbaa !178
  %neg.epil = fneg double %173
  %174 = tail call double @llvm.fmuladd.f64(double %neg.epil, double %173, double %sum.02960.epil)
  %indvars.iv.next3054.epil = add nuw nsw i64 %indvars.iv3053.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter3192
  br i1 %epil.iter.cmp.not, label %for.end386, label %for.body374.epil, !llvm.loop !197

for.end386:                                       ; preds = %for.end386.loopexit.unr-lcssa, %for.body374.epil, %for.body365
  %sum.0.lcssa = phi double [ %162, %for.body365 ], [ %.lcssa3178.ph, %for.end386.loopexit.unr-lcssa ], [ %174, %for.body374.epil ]
  %cmp387 = fcmp ogt double %sum.0.lcssa, 0.000000e+00
  br i1 %cmp387, label %if.then388, label %for.end437.loopexit

if.then388:                                       ; preds = %for.end386
  %call389 = tail call double @sqrt(double noundef %sum.0.lcssa) #39
  %arrayidx393 = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3071, i64 %indvars.iv3071
  store double %call389, ptr %arrayidx393, align 8, !tbaa !178
  %indvars.iv.next3072 = add nuw nsw i64 %indvars.iv3071, 1
  %175 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %.b1168 = load i1, ptr @_ZL1D, align 4
  %176 = select i1 %.b1168, i32 12, i32 0
  %add396 = add nuw nsw i32 %176, %175
  %177 = sext i32 %add396 to i64
  %cmp397.not2966.not = icmp slt i64 %indvars.iv3071, %177
  br i1 %cmp397.not2966.not, label %for.body398.lr.ph, label %for.end437.loopexit

for.body398.lr.ph:                                ; preds = %if.then388
  br i1 %cmp3732958, label %for.body398.us.preheader, label %for.body398

for.body398.us.preheader:                         ; preds = %for.body398.lr.ph
  %xtraiter3195 = and i64 %indvar, 1
  %178 = icmp eq i64 %indvar, 1
  %unroll_iter3199 = and i64 %indvar, -2
  %lcmp.mod3197.not = icmp eq i64 %xtraiter3195, 0
  br label %for.body398.us

for.body398.us:                                   ; preds = %for.body398.us.preheader, %for.cond405.for.end420_crit_edge.us
  %indvars.iv3068 = phi i64 [ %indvars.iv.next3069, %for.cond405.for.end420_crit_edge.us ], [ %indvars.iv3058, %for.body398.us.preheader ]
  %arrayidx404.us = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 %indvars.iv3071, i64 %indvars.iv3068, i64 %idxprom273
  %179 = load double, ptr %arrayidx404.us, align 8, !tbaa !178
  br i1 %178, label %for.cond405.for.end420_crit_edge.us.unr-lcssa, label %for.body407.us

for.body407.us:                                   ; preds = %for.body398.us, %for.body407.us
  %indvars.iv3063 = phi i64 [ %indvars.iv.next3064.1, %for.body407.us ], [ 1, %for.body398.us ]
  %sum.12964.us = phi double [ %185, %for.body407.us ], [ %179, %for.body398.us ]
  %niter3200 = phi i64 [ %niter3200.next.1, %for.body407.us ], [ 0, %for.body398.us ]
  %arrayidx411.us = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3068, i64 %indvars.iv3063
  %180 = load double, ptr %arrayidx411.us, align 8, !tbaa !178
  %arrayidx415.us = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3071, i64 %indvars.iv3063
  %181 = load double, ptr %arrayidx415.us, align 8, !tbaa !178
  %neg417.us = fneg double %180
  %182 = tail call double @llvm.fmuladd.f64(double %neg417.us, double %181, double %sum.12964.us)
  %indvars.iv.next3064 = add nuw nsw i64 %indvars.iv3063, 1
  %arrayidx411.us.1 = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3068, i64 %indvars.iv.next3064
  %183 = load double, ptr %arrayidx411.us.1, align 8, !tbaa !178
  %arrayidx415.us.1 = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3071, i64 %indvars.iv.next3064
  %184 = load double, ptr %arrayidx415.us.1, align 8, !tbaa !178
  %neg417.us.1 = fneg double %183
  %185 = tail call double @llvm.fmuladd.f64(double %neg417.us.1, double %184, double %182)
  %indvars.iv.next3064.1 = add nuw nsw i64 %indvars.iv3063, 2
  %niter3200.next.1 = add i64 %niter3200, 2
  %niter3200.ncmp.1 = icmp eq i64 %niter3200.next.1, %unroll_iter3199
  br i1 %niter3200.ncmp.1, label %for.cond405.for.end420_crit_edge.us.unr-lcssa, label %for.body407.us, !llvm.loop !198

for.cond405.for.end420_crit_edge.us.unr-lcssa:    ; preds = %for.body407.us, %for.body398.us
  %.lcssa3179.ph = phi double [ undef, %for.body398.us ], [ %185, %for.body407.us ]
  %indvars.iv3063.unr = phi i64 [ 1, %for.body398.us ], [ %indvars.iv.next3064.1, %for.body407.us ]
  %sum.12964.us.unr = phi double [ %179, %for.body398.us ], [ %185, %for.body407.us ]
  br i1 %lcmp.mod3197.not, label %for.cond405.for.end420_crit_edge.us, label %for.body407.us.epil

for.body407.us.epil:                              ; preds = %for.cond405.for.end420_crit_edge.us.unr-lcssa
  %arrayidx411.us.epil = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3068, i64 %indvars.iv3063.unr
  %186 = load double, ptr %arrayidx411.us.epil, align 8, !tbaa !178
  %arrayidx415.us.epil = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3071, i64 %indvars.iv3063.unr
  %187 = load double, ptr %arrayidx415.us.epil, align 8, !tbaa !178
  %neg417.us.epil = fneg double %186
  %188 = tail call double @llvm.fmuladd.f64(double %neg417.us.epil, double %187, double %sum.12964.us.unr)
  br label %for.cond405.for.end420_crit_edge.us

for.cond405.for.end420_crit_edge.us:              ; preds = %for.cond405.for.end420_crit_edge.us.unr-lcssa, %for.body407.us.epil
  %.lcssa3179 = phi double [ %.lcssa3179.ph, %for.cond405.for.end420_crit_edge.us.unr-lcssa ], [ %188, %for.body407.us.epil ]
  %189 = load double, ptr %arrayidx393, align 8, !tbaa !178
  %div425.us = fdiv double %.lcssa3179, %189
  %arrayidx429.us = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3068, i64 %indvars.iv3071
  store double %div425.us, ptr %arrayidx429.us, align 8, !tbaa !178
  %indvars.iv.next3069 = add nuw nsw i64 %indvars.iv3068, 1
  %190 = trunc i64 %indvars.iv3068 to i32
  %cmp397.not.us.not = icmp sgt i32 %add396, %190
  br i1 %cmp397.not.us.not, label %for.body398.us, label %for.cond362.loopexit, !llvm.loop !199

for.body398:                                      ; preds = %for.body398.lr.ph, %for.body398
  %indvars.iv3060 = phi i64 [ %indvars.iv.next3061, %for.body398 ], [ %indvars.iv3058, %for.body398.lr.ph ]
  %arrayidx404 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %F, i64 0, i64 %indvars.iv3071, i64 %indvars.iv3060, i64 %idxprom273
  %191 = load double, ptr %arrayidx404, align 8, !tbaa !178
  %192 = load double, ptr %arrayidx393, align 8, !tbaa !178
  %div425 = fdiv double %191, %192
  %arrayidx429 = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3060, i64 %indvars.iv3071
  store double %div425, ptr %arrayidx429, align 8, !tbaa !178
  %indvars.iv.next3061 = add nuw nsw i64 %indvars.iv3060, 1
  %193 = trunc i64 %indvars.iv3060 to i32
  %cmp397.not.not = icmp sgt i32 %add396, %193
  br i1 %cmp397.not.not, label %for.body398, label %for.cond362.loopexit, !llvm.loop !199

for.end437.loopexit:                              ; preds = %if.then388, %for.end386, %for.cond362.loopexit
  %.b29973121 = phi i1 [ %.b1168, %for.cond362.loopexit ], [ %.b29973122, %for.end386 ], [ %.b1168, %if.then388 ]
  %i.0.lcssa.ph.in = phi i64 [ %indvars.iv.next3072, %for.cond362.loopexit ], [ %indvars.iv3071, %for.end386 ], [ %indvars.iv.next3072, %if.then388 ]
  %.lcssa.ph = phi i32 [ %175, %for.cond362.loopexit ], [ %161, %for.end386 ], [ %175, %if.then388 ]
  %add363.lcssa.ph = phi i32 [ %add396, %for.cond362.loopexit ], [ %add3632972, %for.end386 ], [ %add396, %if.then388 ]
  %i.0.lcssa.ph = trunc i64 %i.0.lcssa.ph.in to i32
  br label %for.end437

for.end437:                                       ; preds = %for.cond280.preheader, %for.cond317.preheader, %for.end437.loopexit, %if.end361
  %.b29973120 = phi i1 [ %.b11692968, %if.end361 ], [ %.b29973121, %for.end437.loopexit ], [ %.b11732954, %for.cond280.preheader ], [ %.b11732954, %for.cond317.preheader ]
  %i.0.lcssa = phi i32 [ 1, %if.end361 ], [ %i.0.lcssa.ph, %for.end437.loopexit ], [ 1, %for.cond280.preheader ], [ 1, %for.cond317.preheader ]
  %.lcssa = phi i32 [ %160, %if.end361 ], [ %.lcssa.ph, %for.end437.loopexit ], [ %124, %for.cond280.preheader ], [ %124, %for.cond317.preheader ]
  %add363.lcssa = phi i32 [ %add3632969.pre-phi, %if.end361 ], [ %add363.lcssa.ph, %for.end437.loopexit ], [ %add2812955, %for.cond280.preheader ], [ %add2812955, %for.cond317.preheader ]
  %cmp439 = icmp sgt i32 %i.0.lcssa, %add363.lcssa
  br i1 %cmp439, label %land.lhs.true440, label %if.end535

land.lhs.true440:                                 ; preds = %for.end437
  %arrayidx442 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %idxprom273
  %194 = load i32, ptr %arrayidx442, align 4, !tbaa !25
  %add443 = add nuw nsw i32 %.lcssa, 1
  %cmp444 = icmp sgt i32 %194, %add443
  br i1 %cmp444, label %for.cond446.preheader, label %if.end535

for.cond446.preheader:                            ; preds = %land.lhs.true440
  %invariant.gep2981 = getelementptr [2 x double], ptr %F, i64 0, i64 %idxprom273
  %cmp448.not2983 = icmp slt i32 %add363.lcssa, 1
  br i1 %cmp448.not2983, label %if.end535, label %for.body449.lr.ph

for.body449.lr.ph:                                ; preds = %for.cond446.preheader
  %195 = add nuw nsw i32 %add363.lcssa, 1
  %wide.trip.count3084 = zext i32 %195 to i64
  br label %for.body449

for.cond496.preheader:                            ; preds = %for.end481
  %cmp4972993 = icmp sgt i32 %add363.lcssa, 0
  br i1 %cmp4972993, label %for.cond500.preheader.lr.ph, label %if.end535

for.cond500.preheader.lr.ph:                      ; preds = %for.cond496.preheader
  %196 = zext i32 %add363.lcssa to i64
  %197 = zext i32 %add363.lcssa to i64
  br label %for.cond500.preheader

for.body449:                                      ; preds = %for.body449.lr.ph, %for.end481
  %indvar3201 = phi i64 [ 0, %for.body449.lr.ph ], [ %indvar.next3202, %for.end481 ]
  %indvars.iv3080 = phi i64 [ 1, %for.body449.lr.ph ], [ %indvars.iv.next3081, %for.end481 ]
  %arrayidx454 = getelementptr inbounds [49 x [2 x double]], ptr %F, i64 0, i64 %indvars.iv3080, i64 %idxprom273
  %198 = load double, ptr %arrayidx454, align 8, !tbaa !178
  %gep2982 = getelementptr [49 x [49 x [2 x double]]], ptr %invariant.gep2981, i64 0, i64 %indvars.iv3080
  store double %198, ptr %gep2982, align 8, !tbaa !178
  %cmp4612979 = icmp ugt i64 %indvars.iv3080, 1
  br i1 %cmp4612979, label %for.body462.preheader, label %for.end481

for.body462.preheader:                            ; preds = %for.body449
  %xtraiter3203 = and i64 %indvar3201, 1
  %199 = icmp eq i64 %indvar3201, 1
  br i1 %199, label %for.end481.loopexit.unr-lcssa, label %for.body462.preheader.new

for.body462.preheader.new:                        ; preds = %for.body462.preheader
  %unroll_iter3207 = and i64 %indvar3201, -2
  br label %for.body462

for.body462:                                      ; preds = %for.body462, %for.body462.preheader.new
  %indvars.iv3074 = phi i64 [ 1, %for.body462.preheader.new ], [ %indvars.iv.next3075.1, %for.body462 ]
  %200 = phi double [ %198, %for.body462.preheader.new ], [ %206, %for.body462 ]
  %niter3208 = phi i64 [ 0, %for.body462.preheader.new ], [ %niter3208.next.1, %for.body462 ]
  %arrayidx466 = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3080, i64 %indvars.iv3074
  %201 = load double, ptr %arrayidx466, align 8, !tbaa !178
  %gep = getelementptr [49 x [49 x [2 x double]]], ptr %invariant.gep2981, i64 0, i64 %indvars.iv3074
  %202 = load double, ptr %gep, align 8, !tbaa !178
  %neg478 = fneg double %201
  %203 = tail call double @llvm.fmuladd.f64(double %neg478, double %202, double %200)
  store double %203, ptr %gep2982, align 8, !tbaa !178
  %indvars.iv.next3075 = add nuw nsw i64 %indvars.iv3074, 1
  %arrayidx466.1 = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3080, i64 %indvars.iv.next3075
  %204 = load double, ptr %arrayidx466.1, align 8, !tbaa !178
  %gep.1 = getelementptr [49 x [49 x [2 x double]]], ptr %invariant.gep2981, i64 0, i64 %indvars.iv.next3075
  %205 = load double, ptr %gep.1, align 8, !tbaa !178
  %neg478.1 = fneg double %204
  %206 = tail call double @llvm.fmuladd.f64(double %neg478.1, double %205, double %203)
  store double %206, ptr %gep2982, align 8, !tbaa !178
  %indvars.iv.next3075.1 = add nuw nsw i64 %indvars.iv3074, 2
  %niter3208.next.1 = add i64 %niter3208, 2
  %niter3208.ncmp.1 = icmp eq i64 %niter3208.next.1, %unroll_iter3207
  br i1 %niter3208.ncmp.1, label %for.end481.loopexit.unr-lcssa, label %for.body462, !llvm.loop !200

for.end481.loopexit.unr-lcssa:                    ; preds = %for.body462, %for.body462.preheader
  %.lcssa3176.ph = phi double [ undef, %for.body462.preheader ], [ %206, %for.body462 ]
  %indvars.iv3074.unr = phi i64 [ 1, %for.body462.preheader ], [ %indvars.iv.next3075.1, %for.body462 ]
  %.unr = phi double [ %198, %for.body462.preheader ], [ %206, %for.body462 ]
  %lcmp.mod3205.not = icmp eq i64 %xtraiter3203, 0
  br i1 %lcmp.mod3205.not, label %for.end481, label %for.body462.epil

for.body462.epil:                                 ; preds = %for.end481.loopexit.unr-lcssa
  %arrayidx466.epil = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3080, i64 %indvars.iv3074.unr
  %207 = load double, ptr %arrayidx466.epil, align 8, !tbaa !178
  %gep.epil = getelementptr [49 x [49 x [2 x double]]], ptr %invariant.gep2981, i64 0, i64 %indvars.iv3074.unr
  %208 = load double, ptr %gep.epil, align 8, !tbaa !178
  %neg478.epil = fneg double %207
  %209 = tail call double @llvm.fmuladd.f64(double %neg478.epil, double %208, double %.unr)
  store double %209, ptr %gep2982, align 8, !tbaa !178
  br label %for.end481

for.end481:                                       ; preds = %for.body462.epil, %for.end481.loopexit.unr-lcssa, %for.body449
  %210 = phi double [ %198, %for.body449 ], [ %.lcssa3176.ph, %for.end481.loopexit.unr-lcssa ], [ %209, %for.body462.epil ]
  %arrayidx485 = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3080, i64 %indvars.iv3080
  %211 = load double, ptr %arrayidx485, align 8, !tbaa !178
  %div491 = fdiv double %210, %211
  store double %div491, ptr %gep2982, align 8, !tbaa !178
  %indvars.iv.next3081 = add nuw nsw i64 %indvars.iv3080, 1
  %exitcond3085.not = icmp eq i64 %indvars.iv.next3081, %wide.trip.count3084
  %indvar.next3202 = add i64 %indvar3201, 1
  br i1 %exitcond3085.not, label %for.cond496.preheader, label %for.body449, !llvm.loop !201

for.cond500.preheader:                            ; preds = %for.cond500.preheader.lr.ph, %for.end522
  %indvar3209 = phi i32 [ 0, %for.cond500.preheader.lr.ph ], [ %indvar.next3210, %for.end522 ]
  %indvars.iv3093 = phi i64 [ %197, %for.cond500.preheader.lr.ph ], [ %indvars.iv.next3094, %for.end522 ]
  %indvars.iv3086 = phi i64 [ %196, %for.cond500.preheader.lr.ph ], [ %indvars.iv.next3087, %for.end522 ]
  %cmp502.not.not2989 = icmp slt i64 %indvars.iv3093, %196
  %gep2988 = getelementptr [49 x [49 x [2 x double]]], ptr %invariant.gep2981, i64 0, i64 %indvars.iv3093
  %gep2988.promoted = load double, ptr %gep2988, align 8, !tbaa !178
  br i1 %cmp502.not.not2989, label %for.body503.preheader, label %for.end522

for.body503.preheader:                            ; preds = %for.cond500.preheader
  %xtraiter3211 = and i32 %indvar3209, 1
  %lcmp.mod3212.not = icmp eq i32 %xtraiter3211, 0
  br i1 %lcmp.mod3212.not, label %for.body503.prol.loopexit, label %for.body503.prol

for.body503.prol:                                 ; preds = %for.body503.preheader
  %indvars.iv.next3089.prol = add nsw i64 %indvars.iv3086, 1
  %arrayidx507.prol = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv.next3089.prol, i64 %indvars.iv3093
  %212 = load double, ptr %arrayidx507.prol, align 8, !tbaa !178
  %gep2986.prol = getelementptr [49 x [49 x [2 x double]]], ptr %invariant.gep2981, i64 0, i64 %indvars.iv.next3089.prol
  %213 = load double, ptr %gep2986.prol, align 8, !tbaa !178
  %neg519.prol = fneg double %212
  %214 = tail call double @llvm.fmuladd.f64(double %neg519.prol, double %213, double %gep2988.promoted)
  store double %214, ptr %gep2988, align 8, !tbaa !178
  br label %for.body503.prol.loopexit

for.body503.prol.loopexit:                        ; preds = %for.body503.prol, %for.body503.preheader
  %.lcssa3175.unr = phi double [ undef, %for.body503.preheader ], [ %214, %for.body503.prol ]
  %indvars.iv3088.unr = phi i64 [ %indvars.iv3086, %for.body503.preheader ], [ %indvars.iv.next3089.prol, %for.body503.prol ]
  %.unr3214 = phi double [ %gep2988.promoted, %for.body503.preheader ], [ %214, %for.body503.prol ]
  %215 = icmp eq i32 %indvar3209, 1
  br i1 %215, label %for.end522, label %for.body503

for.body503:                                      ; preds = %for.body503.prol.loopexit, %for.body503
  %indvars.iv3088 = phi i64 [ %indvars.iv.next3089.1, %for.body503 ], [ %indvars.iv3088.unr, %for.body503.prol.loopexit ]
  %216 = phi double [ %222, %for.body503 ], [ %.unr3214, %for.body503.prol.loopexit ]
  %indvars.iv.next3089 = add nsw i64 %indvars.iv3088, 1
  %arrayidx507 = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv.next3089, i64 %indvars.iv3093
  %217 = load double, ptr %arrayidx507, align 8, !tbaa !178
  %gep2986 = getelementptr [49 x [49 x [2 x double]]], ptr %invariant.gep2981, i64 0, i64 %indvars.iv.next3089
  %218 = load double, ptr %gep2986, align 8, !tbaa !178
  %neg519 = fneg double %217
  %219 = tail call double @llvm.fmuladd.f64(double %neg519, double %218, double %216)
  store double %219, ptr %gep2988, align 8, !tbaa !178
  %indvars.iv.next3089.1 = add nsw i64 %indvars.iv3088, 2
  %arrayidx507.1 = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv.next3089.1, i64 %indvars.iv3093
  %220 = load double, ptr %arrayidx507.1, align 8, !tbaa !178
  %gep2986.1 = getelementptr [49 x [49 x [2 x double]]], ptr %invariant.gep2981, i64 0, i64 %indvars.iv.next3089.1
  %221 = load double, ptr %gep2986.1, align 8, !tbaa !178
  %neg519.1 = fneg double %220
  %222 = tail call double @llvm.fmuladd.f64(double %neg519.1, double %221, double %219)
  store double %222, ptr %gep2988, align 8, !tbaa !178
  %lftr.wideiv.1 = trunc i64 %indvars.iv.next3089.1 to i32
  %exitcond3092.not.1 = icmp eq i32 %add363.lcssa, %lftr.wideiv.1
  br i1 %exitcond3092.not.1, label %for.end522, label %for.body503, !llvm.loop !202

for.end522:                                       ; preds = %for.body503.prol.loopexit, %for.body503, %for.cond500.preheader
  %223 = phi double [ %gep2988.promoted, %for.cond500.preheader ], [ %.lcssa3175.unr, %for.body503.prol.loopexit ], [ %222, %for.body503 ]
  %arrayidx526 = getelementptr inbounds [49 x [49 x double]], ptr %L, i64 0, i64 %indvars.iv3093, i64 %indvars.iv3093
  %224 = load double, ptr %arrayidx526, align 8, !tbaa !178
  %gep2992 = getelementptr [49 x [49 x [2 x double]]], ptr %invariant.gep2981, i64 0, i64 %indvars.iv3093
  %div532 = fdiv double %223, %224
  store double %div532, ptr %gep2992, align 8, !tbaa !178
  %indvars.iv.next3087 = add nsw i64 %indvars.iv3086, -1
  %cmp497 = icmp sgt i64 %indvars.iv3093, 1
  %indvars.iv.next3094 = add nsw i64 %indvars.iv3093, -1
  %indvar.next3210 = add i32 %indvar3209, 1
  br i1 %cmp497, label %for.cond500.preheader, label %if.end535, !llvm.loop !203

if.end535:                                        ; preds = %for.end522, %for.cond446.preheader, %for.cond496.preheader, %land.lhs.true440, %for.end437
  store i32 0, ptr %arrayidx274, align 4, !tbaa !25
  br label %if.end538

if.end538:                                        ; preds = %if.end272.if.end538_crit_edge, %if.end535
  %.b2997 = phi i1 [ %.b29973120, %if.end535 ], [ %.b2997.pre, %if.end272.if.end538_crit_edge ]
  %225 = phi i32 [ %.lcssa, %if.end535 ], [ %124, %if.end272.if.end538_crit_edge ]
  %invariant.gep2995 = getelementptr [2 x double], ptr %F, i64 0, i64 %idxprom273
  %226 = select i1 %.b2997, i32 12, i32 0
  %add5402998 = add nuw nsw i32 %226, %225
  %cmp541.not2999 = icmp slt i32 %add5402998, 1
  br i1 %cmp541.not2999, label %for.end553, label %for.body542

for.body542:                                      ; preds = %if.end538, %for.body542
  %indvars.iv3097 = phi i64 [ %indvars.iv.next3098, %for.body542 ], [ 1, %if.end538 ]
  %sum.23001 = phi double [ %229, %for.body542 ], [ 0.000000e+00, %if.end538 ]
  %gep2996 = getelementptr [49 x [49 x [2 x double]]], ptr %invariant.gep2995, i64 0, i64 %indvars.iv3097
  %227 = load double, ptr %gep2996, align 8, !tbaa !178
  %228 = trunc i64 %indvars.iv3097 to i32
  %call548 = tail call noundef i32 @_Z1Xii(i32 noundef %228, i32 noundef 0)
  %conv549 = sitofp i32 %call548 to double
  %229 = tail call double @llvm.fmuladd.f64(double %227, double %conv549, double %sum.23001)
  %indvars.iv.next3098 = add nuw nsw i64 %indvars.iv3097, 1
  %230 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %.b = load i1, ptr @_ZL1D, align 4
  %231 = select i1 %.b, i32 12, i32 0
  %add540 = add nuw nsw i32 %231, %230
  %232 = sext i32 %add540 to i64
  %cmp541.not.not = icmp slt i64 %indvars.iv3097, %232
  br i1 %cmp541.not.not, label %for.body542, label %for.end553, !llvm.loop !204

for.end553:                                       ; preds = %for.body542, %if.end538
  %sum.2.lcssa = phi double [ 0.000000e+00, %if.end538 ], [ %229, %for.body542 ]
  %arrayidx555 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 2, i64 %idxprom273
  %233 = load i32, ptr %arrayidx555, align 4, !tbaa !25
  %arrayidx557 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 3, i64 %idxprom273
  store i32 %233, ptr %arrayidx557, align 4, !tbaa !25
  %arrayidx559 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 1, i64 %idxprom273
  %234 = load i32, ptr %arrayidx559, align 4, !tbaa !25
  store i32 %234, ptr %arrayidx555, align 4, !tbaa !25
  %arrayidx563 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 %idxprom273
  %235 = load i32, ptr %arrayidx563, align 4, !tbaa !25
  store i32 %235, ptr %arrayidx559, align 4, !tbaa !25
  %236 = tail call double @llvm.floor.f64(double %sum.2.lcssa)
  %conv566 = fptosi double %236 to i32
  store i32 %conv566, ptr %arrayidx563, align 4, !tbaa !25
  %arrayidx570 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %idxprom273
  %237 = load i32, ptr %arrayidx570, align 4, !tbaa !25
  %inc571 = add nsw i32 %237, 1
  store i32 %inc571, ptr %arrayidx570, align 4, !tbaa !25
  %238 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1253 = add nsw i32 %238, -1
  %239 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1254 = add nsw i32 %239, -1
  %and.i1255 = and i32 %sub3.i1254, %sub.i1253
  %240 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i1256 = sext i32 %and.i1255 to i64
  %arrayidx.i.i1257 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i1256
  %241 = load i8, ptr %arrayidx.i.i1257, align 1, !tbaa !9
  %conv.i1258 = zext i8 %241 to i32
  %mul1.i = mul i32 %conv.i1258, 30005491
  %mul2.i = mul i32 %rem165, 50004239
  %add3.i = add i32 %mul2.i, 19995673
  %add7.i = add i32 %add3.i, %mul1.i
  %shr.i = lshr i32 %add7.i, 9
  %shr10.i = lshr i32 %conv.i1258, 3
  %shr12.i = lshr i32 %rem165, 4
  %242 = xor i32 %shr10.i, %shr.i
  %243 = xor i32 %242, %shr12.i
  %244 = xor i32 %243, %add7.i
  %xor17.i = xor i32 %244, 67108864
  %245 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i = add nsw i32 %245, 1
  store i32 %inc.i, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1261 = mul i32 %xor17.i, 987654323
  %add.i1262 = add i32 %mul.i1261, %245
  %or.i = tail call i32 @llvm.fshl.i32(i32 %add.i1262, i32 %add.i1262, i32 16)
  %mul2.i1263 = mul i32 %or.i, 123456791
  %add3.i1264 = add i32 %mul2.i1263, %245
  %246 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %idxprom.i.i1265 = sext i32 %245 to i64
  %arrayidx.i.i1266 = getelementptr inbounds i32, ptr %246, i64 %idxprom.i.i1265
  store i32 %add3.i1264, ptr %arrayidx.i.i1266, align 4, !tbaa !25
  %247 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1267 = add nsw i32 %247, -1
  %248 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1268 = add nsw i32 %248, -1
  %and.i1269 = and i32 %sub3.i1268, %sub.i1267
  %idxprom.i.i1270 = sext i32 %and.i1269 to i64
  %arrayidx.i.i1271 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i1270
  %249 = load i8, ptr %arrayidx.i.i1271, align 1, !tbaa !9
  %conv.i1272 = zext i8 %249 to i32
  %sub.i1273 = add nsw i32 %247, -2
  %and.i1275 = and i32 %sub3.i1268, %sub.i1273
  %idxprom.i.i1276 = sext i32 %and.i1275 to i64
  %arrayidx.i.i1277 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i1276
  %250 = load i8, ptr %arrayidx.i.i1277, align 1, !tbaa !9
  %conv.i1278 = zext i8 %250 to i32
  %mul1.i1279 = mul i32 %conv.i1272, 30005491
  %mul2.i1281 = mul i32 %conv.i1278, 50004239
  %mul4.i1283 = mul i32 %rem165, 70004807
  %add3.i1282 = add i32 %mul4.i1283, 290003459
  %add5.i1284 = add i32 %add3.i1282, %mul1.i1279
  %add7.i1285 = add i32 %add5.i1284, %mul2.i1281
  %shr.i1286 = lshr i32 %add7.i1285, 9
  %shr10.i1287 = lshr i32 %conv.i1272, 3
  %shr12.i1288 = lshr i32 %conv.i1278, 4
  %shr14.i = lshr i32 %rem165, 5
  %251 = xor i32 %shr10.i1287, %shr12.i1288
  %252 = xor i32 %251, %shr.i1286
  %253 = xor i32 %252, %shr14.i
  %254 = xor i32 %253, %add7.i1285
  %xor17.i1289 = xor i32 %254, 67108863
  %255 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1290 = add nsw i32 %255, 1
  store i32 %inc.i1290, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1291 = mul i32 %xor17.i1289, 987654323
  %add.i1292 = add i32 %mul.i1291, %255
  %or.i1293 = tail call i32 @llvm.fshl.i32(i32 %add.i1292, i32 %add.i1292, i32 16)
  %mul2.i1294 = mul i32 %or.i1293, 123456791
  %add3.i1295 = add i32 %mul2.i1294, %255
  %idxprom.i.i1296 = sext i32 %255 to i64
  %arrayidx.i.i1297 = getelementptr inbounds i32, ptr %246, i64 %idxprom.i.i1296
  store i32 %add3.i1295, ptr %arrayidx.i.i1297, align 4, !tbaa !25
  %256 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1298 = add nsw i32 %256, -1
  %257 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1299 = add nsw i32 %257, -1
  %and.i1300 = and i32 %sub3.i1299, %sub.i1298
  %idxprom.i.i1301 = sext i32 %and.i1300 to i64
  %arrayidx.i.i1302 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i1301
  %258 = load i8, ptr %arrayidx.i.i1302, align 1, !tbaa !9
  %conv.i1303 = zext i8 %258 to i32
  %sub.i1304 = add nsw i32 %256, -2
  %and.i1306 = and i32 %sub3.i1299, %sub.i1304
  %idxprom.i.i1307 = sext i32 %and.i1306 to i64
  %arrayidx.i.i1308 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i1307
  %259 = load i8, ptr %arrayidx.i.i1308, align 1, !tbaa !9
  %260 = lshr i8 %259, 3
  %shr582 = zext i8 %260 to i32
  %sub.i1310 = add nsw i32 %256, -3
  %and.i1312 = and i32 %sub3.i1299, %sub.i1310
  %idxprom.i.i1313 = sext i32 %and.i1312 to i64
  %arrayidx.i.i1314 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i1313
  %261 = load i8, ptr %arrayidx.i.i1314, align 1, !tbaa !9
  %conv.i1315 = zext i8 %261 to i32
  %mul1.i1316 = mul i32 %conv.i1303, 30005491
  %mul2.i1318 = mul nuw nsw i32 %shr582, 50004239
  %mul4.i1320 = mul i32 %conv.i1315, 70004807
  %mul6.i = mul i32 %rem165, 110002499
  %add.i1317 = add i32 %mul6.i, 600008937
  %add3.i1319 = add i32 %add.i1317, %mul1.i1316
  %add5.i1321 = add i32 %add3.i1319, %mul2.i1318
  %add7.i1322 = add i32 %add5.i1321, %mul4.i1320
  %shr.i1323 = lshr i32 %add7.i1322, 9
  %shr10.i1324 = lshr i32 %conv.i1303, 3
  %shr12.i1325 = lshr i32 %shr582, 4
  %shr14.i1326 = lshr i32 %conv.i1315, 5
  %shr16.i = lshr i32 %rem165, 6
  %262 = xor i32 %shr10.i1324, %shr16.i
  %263 = xor i32 %262, %shr12.i1325
  %264 = xor i32 %263, %shr14.i1326
  %265 = xor i32 %264, %shr.i1323
  %xor17.i1327 = xor i32 %265, %add7.i1322
  %266 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1328 = add nsw i32 %266, 1
  store i32 %inc.i1328, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1329 = mul i32 %xor17.i1327, 987654323
  %add.i1330 = add i32 %mul.i1329, %266
  %or.i1331 = tail call i32 @llvm.fshl.i32(i32 %add.i1330, i32 %add.i1330, i32 16)
  %mul2.i1332 = mul i32 %or.i1331, 123456791
  %add3.i1333 = add i32 %mul2.i1332, %266
  %idxprom.i.i1334 = sext i32 %266 to i64
  %arrayidx.i.i1335 = getelementptr inbounds i32, ptr %246, i64 %idxprom.i.i1334
  store i32 %add3.i1333, ptr %arrayidx.i.i1335, align 4, !tbaa !25
  %267 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i1336 = add i32 %267, -4
  %268 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i1337 = add nsw i32 %268, -1
  %and.i.i1338 = and i32 %sub3.i.i1337, %sub.i.i1336
  %idxprom.i.i.i1339 = sext i32 %and.i.i1338 to i64
  %arrayidx.i.i.i1340 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i.i1339
  %269 = load i8, ptr %arrayidx.i.i.i1340, align 1, !tbaa !9
  %sub.i.i1344 = add i32 %267, -2
  %and.i.i1346 = and i32 %sub3.i.i1337, %sub.i.i1344
  %idxprom.i.i.i1347 = sext i32 %and.i.i1346 to i64
  %arrayidx.i.i.i1348 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i.i1347
  %270 = load i8, ptr %arrayidx.i.i.i1348, align 1, !tbaa !9
  %add588 = add i8 %270, %269
  %sub.i.i1358 = add i32 %267, -6
  %and.i.i1360 = and i32 %sub3.i.i1337, %sub.i.i1358
  %idxprom.i.i.i1361 = sext i32 %and.i.i1360 to i64
  %arrayidx.i.i.i1362 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i.i1361
  %271 = load i8, ptr %arrayidx.i.i.i1362, align 1, !tbaa !9
  %sub590.narrow = sub i8 %add588, %271
  %and = zext i8 %sub590.narrow to i32
  %mul1.i1372 = mul i32 %and, 30005491
  %add3.i1375 = add i32 %mul2.i, 620004610
  %add7.i1377 = add i32 %add3.i1375, %mul1.i1372
  %shr.i1378 = lshr i32 %add7.i1377, 9
  %shr10.i1379 = lshr i32 %and, 3
  %272 = xor i32 %shr10.i1379, %shr.i1378
  %273 = xor i32 %272, %shr12.i
  %274 = xor i32 %273, %add7.i1377
  %xor17.i1381 = xor i32 %274, 67108865
  %275 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1382 = add nsw i32 %275, 1
  store i32 %inc.i1382, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1383 = mul i32 %xor17.i1381, 987654323
  %add.i1384 = add i32 %mul.i1383, %275
  %or.i1385 = tail call i32 @llvm.fshl.i32(i32 %add.i1384, i32 %add.i1384, i32 16)
  %mul2.i1386 = mul i32 %or.i1385, 123456791
  %add3.i1387 = add i32 %mul2.i1386, %275
  %idxprom.i.i1388 = sext i32 %275 to i64
  %arrayidx.i.i1389 = getelementptr inbounds i32, ptr %246, i64 %idxprom.i.i1388
  store i32 %add3.i1387, ptr %arrayidx.i.i1389, align 4, !tbaa !25
  %and595 = and i32 %conv566, 255
  %mul1.i1390 = mul i32 %and595, 30005491
  %add3.i1393 = add i32 %mul2.i, 820007589
  %add7.i1395 = add i32 %add3.i1393, %mul1.i1390
  %shr.i1396 = lshr i32 %add7.i1395, 9
  %shr10.i1397 = lshr i32 %and595, 3
  %276 = xor i32 %shr10.i1397, 1
  %277 = xor i32 %276, %shr.i1396
  %278 = xor i32 %277, %shr12.i
  %279 = xor i32 %278, %add7.i1395
  %xor17.i1399 = xor i32 %279, 67108864
  %280 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1400 = add nsw i32 %280, 1
  store i32 %inc.i1400, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1401 = mul i32 %xor17.i1399, 987654323
  %add.i1402 = add i32 %280, %mul.i1401
  %or.i1403 = tail call i32 @llvm.fshl.i32(i32 %add.i1402, i32 %add.i1402, i32 16)
  %mul2.i1404 = mul i32 %or.i1403, 123456791
  %add3.i1405 = add i32 %mul2.i1404, %280
  %idxprom.i.i1406 = sext i32 %280 to i64
  %arrayidx.i.i1407 = getelementptr inbounds i32, ptr %246, i64 %idxprom.i.i1406
  store i32 %add3.i1405, ptr %arrayidx.i.i1407, align 4, !tbaa !25
  %281 = load i32, ptr @_ZZ8wavModelR5MixerE1w, align 4, !tbaa !25
  %282 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i1408 = sub i32 %282, %281
  %283 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i1409 = add nsw i32 %283, -1
  %and.i.i1410 = and i32 %sub3.i.i1409, %sub.i.i1408
  %idxprom.i.i.i1411 = sext i32 %and.i.i1410 to i64
  %arrayidx.i.i.i1412 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i.i1411
  %284 = load i8, ptr %arrayidx.i.i.i1412, align 1, !tbaa !9
  %add601 = sub i32 %conv566, %235
  %add601.tr = trunc i32 %add601 to i8
  %sub604.narrow = add i8 %284, %add601.tr
  %and605 = zext i8 %sub604.narrow to i32
  %mul1.i1422 = mul i32 %and605, 30005491
  %add3.i1425 = add i32 %mul2.i, 1020010568
  %add7.i1427 = add i32 %add3.i1425, %mul1.i1422
  %shr.i1428 = lshr i32 %add7.i1427, 9
  %shr10.i1429 = lshr i32 %and605, 3
  %285 = xor i32 %shr10.i1429, %shr.i1428
  %286 = xor i32 %285, %shr12.i
  %287 = xor i32 %286, %add7.i1427
  %xor17.i1431 = xor i32 %287, 67108865
  %288 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1432 = add nsw i32 %288, 1
  store i32 %inc.i1432, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1433 = mul i32 %xor17.i1431, 987654323
  %add.i1434 = add i32 %mul.i1433, %288
  %or.i1435 = tail call i32 @llvm.fshl.i32(i32 %add.i1434, i32 %add.i1434, i32 16)
  %mul2.i1436 = mul i32 %or.i1435, 123456791
  %add3.i1437 = add i32 %mul2.i1436, %288
  %idxprom.i.i1438 = sext i32 %288 to i64
  %arrayidx.i.i1439 = getelementptr inbounds i32, ptr %246, i64 %idxprom.i.i1438
  store i32 %add3.i1437, ptr %arrayidx.i.i1439, align 4, !tbaa !25
  %289 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i1440 = sub i32 %289, %281
  %290 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i1441 = add nsw i32 %290, -1
  %and.i.i1442 = and i32 %sub3.i.i1441, %sub.i.i1440
  %idxprom.i.i.i1443 = sext i32 %and.i.i1442 to i64
  %arrayidx.i.i.i1444 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i.i1443
  %291 = load i8, ptr %arrayidx.i.i.i1444, align 1, !tbaa !9
  %conv.i.i1445 = zext i8 %291 to i32
  %sub.i4.i1446 = add i32 %sub.i.i1440, 1
  %and.i6.i1447 = and i32 %sub3.i.i1441, %sub.i4.i1446
  %idxprom.i.i7.i1448 = sext i32 %and.i6.i1447 to i64
  %arrayidx.i.i8.i1449 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i7.i1448
  %292 = load i8, ptr %arrayidx.i.i8.i1449, align 1, !tbaa !9
  %conv.i9.i1450 = zext i8 %292 to i32
  %mul.i1451 = shl nuw nsw i32 %conv.i9.i1450, 8
  %add.i1452 = or i32 %mul.i1451, %conv.i.i1445
  %mul615 = shl nsw i32 %281, 1
  %sub.i.i1454 = sub i32 %289, %mul615
  %and.i.i1456 = and i32 %sub3.i.i1441, %sub.i.i1454
  %idxprom.i.i.i1457 = sext i32 %and.i.i1456 to i64
  %arrayidx.i.i.i1458 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i.i1457
  %293 = load i8, ptr %arrayidx.i.i.i1458, align 1, !tbaa !9
  %conv.i.i1459 = zext i8 %293 to i32
  %sub.i4.i1460 = add i32 %sub.i.i1454, 1
  %and.i6.i1461 = and i32 %sub3.i.i1441, %sub.i4.i1460
  %idxprom.i.i7.i1462 = sext i32 %and.i6.i1461 to i64
  %arrayidx.i.i8.i1463 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i7.i1462
  %294 = load i8, ptr %arrayidx.i.i8.i1463, align 1, !tbaa !9
  %conv.i9.i1464 = zext i8 %294 to i32
  %mul.i1465 = shl nuw nsw i32 %conv.i9.i1464, 8
  %add.i1466 = or i32 %mul.i1465, %conv.i.i1459
  %295 = add i32 %235, %234
  %296 = sub i32 %add.i1452, %295
  %sub620 = add i32 %296, %add.i1466
  %297 = lshr i32 %sub620, 1
  %and622 = and i32 %297, 255
  %mul2.i1470 = mul i32 %and622, 50004239
  %add3.i1471 = add i32 %mul4.i1283, 1290018354
  %add5.i1473 = add i32 %add3.i1471, %mul1.i1390
  %add7.i1474 = add i32 %add5.i1473, %mul2.i1470
  %shr.i1475 = lshr i32 %add7.i1474, 9
  %shr12.i1477 = lshr i32 %and622, 4
  %298 = xor i32 %shr12.i1477, %shr.i1475
  %299 = xor i32 %298, %276
  %300 = xor i32 %299, %shr14.i
  %301 = xor i32 %300, %add7.i1474
  %xor17.i1479 = xor i32 %301, 67108863
  %302 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1480 = add nsw i32 %302, 1
  store i32 %inc.i1480, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1481 = mul i32 %xor17.i1479, 987654323
  %add.i1482 = add i32 %mul.i1481, %302
  %or.i1483 = tail call i32 @llvm.fshl.i32(i32 %add.i1482, i32 %add.i1482, i32 16)
  %mul2.i1484 = mul i32 %or.i1483, 123456791
  %add3.i1485 = add i32 %mul2.i1484, %302
  %idxprom.i.i1486 = sext i32 %302 to i64
  %arrayidx.i.i1487 = getelementptr inbounds i32, ptr %246, i64 %idxprom.i.i1486
  store i32 %add3.i1485, ptr %arrayidx.i.i1487, align 4, !tbaa !25
  %303 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i1488 = sub i32 %303, %281
  %304 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i1489 = add nsw i32 %304, -1
  %and.i.i1490 = and i32 %sub3.i.i1489, %sub.i.i1488
  %idxprom.i.i.i1491 = sext i32 %and.i.i1490 to i64
  %arrayidx.i.i.i1492 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i.i1491
  %305 = load i8, ptr %arrayidx.i.i.i1492, align 1, !tbaa !9
  %conv.i.i1493 = zext i8 %305 to i32
  %sub.i.i1502 = sub i32 %303, %mul615
  %and.i.i1504 = and i32 %sub3.i.i1489, %sub.i.i1502
  %idxprom.i.i.i1505 = sext i32 %and.i.i1504 to i64
  %arrayidx.i.i.i1506 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i.i1505
  %306 = load i8, ptr %arrayidx.i.i.i1506, align 1, !tbaa !9
  %conv.i.i1507 = zext i8 %306 to i32
  %reass.add2917 = sub i32 %conv.i.i1493, %235
  %reass.mul2918 = shl i32 %reass.add2917, 1
  %add629 = add i32 %234, %conv566
  %sub636 = sub i32 %add629, %conv.i.i1507
  %add639 = add i32 %sub636, %reass.mul2918
  %and640 = and i32 %add639, 255
  %mul1.i1516 = mul i32 %and640, 30005491
  %add3.i1519 = add i32 %mul2.i, 1420016526
  %add7.i1521 = add i32 %add3.i1519, %mul1.i1516
  %shr.i1522 = lshr i32 %add7.i1521, 9
  %shr10.i1523 = lshr i32 %and640, 3
  %307 = xor i32 %shr10.i1523, %shr.i1522
  %308 = xor i32 %307, %shr12.i
  %309 = xor i32 %308, %add7.i1521
  %xor17.i1525 = xor i32 %309, 67108866
  %310 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1526 = add nsw i32 %310, 1
  store i32 %inc.i1526, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1527 = mul i32 %xor17.i1525, 987654323
  %add.i1528 = add i32 %mul.i1527, %310
  %or.i1529 = tail call i32 @llvm.fshl.i32(i32 %add.i1528, i32 %add.i1528, i32 16)
  %mul2.i1530 = mul i32 %or.i1529, 123456791
  %add3.i1531 = add i32 %mul2.i1530, %310
  %idxprom.i.i1532 = sext i32 %310 to i64
  %arrayidx.i.i1533 = getelementptr inbounds i32, ptr %246, i64 %idxprom.i.i1532
  store i32 %add3.i1531, ptr %arrayidx.i.i1533, align 4, !tbaa !25
  %311 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i1534 = sub i32 %311, %281
  %312 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i1535 = add nsw i32 %312, -1
  %and.i.i1536 = and i32 %sub3.i.i1535, %sub.i.i1534
  %idxprom.i.i.i1537 = sext i32 %and.i.i1536 to i64
  %arrayidx.i.i.i1538 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i.i1537
  %313 = load i8, ptr %arrayidx.i.i.i1538, align 1, !tbaa !9
  %conv.i.i1539 = zext i8 %313 to i32
  %sub.i4.i1540 = add i32 %sub.i.i1534, 1
  %and.i6.i1541 = and i32 %sub3.i.i1535, %sub.i4.i1540
  %idxprom.i.i7.i1542 = sext i32 %and.i6.i1541 to i64
  %arrayidx.i.i8.i1543 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i7.i1542
  %314 = load i8, ptr %arrayidx.i.i8.i1543, align 1, !tbaa !9
  %conv.i9.i1544 = zext i8 %314 to i32
  %mul.i1545 = shl nuw nsw i32 %conv.i9.i1544, 8
  %mul.i1545.masked = and i32 %mul.i1545, 256
  %and643 = or i32 %mul.i1545.masked, %conv.i.i1539
  %mul.i1548 = shl nuw nsw i32 %and643, 8
  %315 = load i32, ptr @_ZZ8wavModelR5MixerE4scm1, align 8, !tbaa !74
  %sub.i1549 = add i32 %315, 130816
  %and.i1550 = and i32 %mul.i1548, %sub.i1549
  store i32 %and.i1550, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %316 = load i8, ptr %arrayidx.i.i.i1538, align 1, !tbaa !9
  %conv.i.i1556 = zext i8 %316 to i16
  %317 = load i8, ptr %arrayidx.i.i8.i1543, align 1, !tbaa !9
  %conv.i9.i1561 = zext i8 %317 to i16
  %mul.i1562 = shl nuw i16 %conv.i9.i1561, 8
  %add.i1563 = or i16 %mul.i1562, %conv.i.i1556
  %conv2.i1564 = sext i16 %add.i1563 to i32
  %sub.i.i1565 = sub i32 %311, %mul615
  %and.i.i1567 = and i32 %sub3.i.i1535, %sub.i.i1565
  %idxprom.i.i.i1568 = sext i32 %and.i.i1567 to i64
  %arrayidx.i.i.i1569 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i.i1568
  %318 = load i8, ptr %arrayidx.i.i.i1569, align 1, !tbaa !9
  %conv.i.i1570 = zext i8 %318 to i32
  %sub.i4.i1571 = add i32 %sub.i.i1565, 1
  %and.i6.i1572 = and i32 %sub3.i.i1535, %sub.i4.i1571
  %idxprom.i.i7.i1573 = sext i32 %and.i6.i1572 to i64
  %arrayidx.i.i8.i1574 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i7.i1573
  %319 = load i8, ptr %arrayidx.i.i8.i1574, align 1, !tbaa !9
  %conv.i9.i1575 = zext i8 %319 to i32
  %320 = shl nsw i32 %conv2.i1564, 9
  %321 = shl nuw nsw i32 %conv.i9.i1575, 16
  %322 = shl nuw nsw i32 %conv.i.i1570, 8
  %323 = or i32 %321, %322
  %and649 = sub nsw i32 %320, %323
  %324 = load i32, ptr @_ZZ8wavModelR5MixerE4scm2, align 8, !tbaa !74
  %sub.i1580 = add i32 %324, 130816
  %mul.i1579 = and i32 %sub.i1580, 130816
  %and.i1581 = and i32 %mul.i1579, %and649
  store i32 %and.i1581, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %325 = load i8, ptr %arrayidx.i.i.i1538, align 1, !tbaa !9
  %conv.i.i1587 = zext i8 %325 to i32
  %326 = load i8, ptr %arrayidx.i.i8.i1543, align 1, !tbaa !9
  %conv.i9.i1592 = zext i8 %326 to i32
  %mul.i1593 = shl nuw nsw i32 %conv.i9.i1592, 8
  %add.i1594 = or i32 %mul.i1593, %conv.i.i1587
  %mul651 = mul nuw nsw i32 %add.i1594, 3
  %327 = load i8, ptr %arrayidx.i.i.i1569, align 1, !tbaa !9
  %conv.i.i1601 = zext i8 %327 to i32
  %328 = load i8, ptr %arrayidx.i.i8.i1574, align 1, !tbaa !9
  %conv.i9.i1606 = zext i8 %328 to i32
  %mul.i1607 = shl nuw nsw i32 %conv.i9.i1606, 8
  %add.i1608 = or i32 %mul.i1607, %conv.i.i1601
  %mul654.neg = mul nuw nsw i32 %add.i1608, 509
  %sub655 = add nuw nsw i32 %mul654.neg, %mul651
  %mul656.neg = mul i32 %281, -3
  %sub.i.i1610 = add i32 %311, %mul656.neg
  %and.i.i1612 = and i32 %sub3.i.i1535, %sub.i.i1610
  %idxprom.i.i.i1613 = sext i32 %and.i.i1612 to i64
  %arrayidx.i.i.i1614 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i.i1613
  %329 = load i8, ptr %arrayidx.i.i.i1614, align 1, !tbaa !9
  %conv.i.i1615 = zext i8 %329 to i32
  %sub.i4.i1616 = add i32 %sub.i.i1610, 1
  %and.i6.i1617 = and i32 %sub3.i.i1535, %sub.i4.i1616
  %idxprom.i.i7.i1618 = sext i32 %and.i6.i1617 to i64
  %arrayidx.i.i8.i1619 = getelementptr inbounds i8, ptr %240, i64 %idxprom.i.i7.i1618
  %330 = load i8, ptr %arrayidx.i.i8.i1619, align 1, !tbaa !9
  %conv.i9.i1620 = zext i8 %330 to i32
  %mul.i1621 = shl nuw nsw i32 %conv.i9.i1620, 8
  %add.i1622 = or i32 %mul.i1621, %conv.i.i1615
  %add658 = add nuw nsw i32 %sub655, %add.i1622
  %and659 = shl i32 %add658, 8
  %331 = load i32, ptr @_ZZ8wavModelR5MixerE4scm3, align 8, !tbaa !74
  %sub.i1625 = add i32 %331, 130816
  %mul.i1624 = and i32 %sub.i1625, 130816
  %and.i1626 = and i32 %mul.i1624, %and659
  store i32 %and.i1626, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !112
  br label %if.end900

if.else660:                                       ; preds = %if.then160
  %sub.i1627 = add nsw i32 %83, -1
  %332 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1628 = add nsw i32 %332, -1
  %and.i1629 = and i32 %sub3.i1628, %sub.i1627
  %333 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i1630 = sext i32 %and.i1629 to i64
  %arrayidx.i.i1631 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i1630
  %334 = load i8, ptr %arrayidx.i.i1631, align 1, !tbaa !9
  %conv.i1632 = zext i8 %334 to i32
  %mul1.i1633 = mul i32 %conv.i1632, 30005491
  %mul2.i1635 = mul i32 %rem165, 50004239
  %add3.i1636 = add i32 %mul2.i1635, 19995673
  %add7.i1638 = add i32 %add3.i1636, %mul1.i1633
  %shr.i1639 = lshr i32 %add7.i1638, 9
  %shr10.i1640 = lshr i32 %conv.i1632, 3
  %shr12.i1641 = lshr i32 %rem165, 4
  %335 = xor i32 %shr10.i1640, %shr.i1639
  %336 = xor i32 %335, %shr12.i1641
  %337 = xor i32 %336, %add7.i1638
  %xor17.i1642 = xor i32 %337, 67108864
  %338 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1643 = add nsw i32 %338, 1
  store i32 %inc.i1643, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1644 = mul i32 %xor17.i1642, 987654323
  %add.i1645 = add i32 %mul.i1644, %338
  %or.i1646 = tail call i32 @llvm.fshl.i32(i32 %add.i1645, i32 %add.i1645, i32 16)
  %mul2.i1647 = mul i32 %or.i1646, 123456791
  %add3.i1648 = add i32 %mul2.i1647, %338
  %339 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %idxprom.i.i1649 = sext i32 %338 to i64
  %arrayidx.i.i1650 = getelementptr inbounds i32, ptr %339, i64 %idxprom.i.i1649
  store i32 %add3.i1648, ptr %arrayidx.i.i1650, align 4, !tbaa !25
  %340 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i1651 = add nsw i32 %340, -1
  %341 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i1652 = add nsw i32 %341, -1
  %and.i1653 = and i32 %sub3.i1652, %sub.i1651
  %idxprom.i.i1654 = sext i32 %and.i1653 to i64
  %arrayidx.i.i1655 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i1654
  %342 = load i8, ptr %arrayidx.i.i1655, align 1, !tbaa !9
  %343 = lshr i8 %342, 7
  %shr666 = zext i8 %343 to i32
  %sub.i1657 = add nsw i32 %340, -2
  %and.i1659 = and i32 %sub3.i1652, %sub.i1657
  %idxprom.i.i1660 = sext i32 %and.i1659 to i64
  %arrayidx.i.i1661 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i1660
  %344 = load i8, ptr %arrayidx.i.i1661, align 1, !tbaa !9
  %conv.i1662 = zext i8 %344 to i32
  %sub.i1663 = add nsw i32 %340, -3
  %and.i1665 = and i32 %sub3.i1652, %sub.i1663
  %idxprom.i.i1666 = sext i32 %and.i1665 to i64
  %arrayidx.i.i1667 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i1666
  %345 = load i8, ptr %arrayidx.i.i1667, align 1, !tbaa !9
  %346 = lshr i8 %345, 7
  %shr669 = zext i8 %346 to i32
  %mul1.i1669 = mul nuw nsw i32 %shr666, 30005491
  %mul2.i1671 = mul i32 %conv.i1662, 50004239
  %mul4.i1673 = mul nuw nsw i32 %shr669, 70004807
  %mul6.i1675 = mul i32 %rem165, 110002499
  %add.i1670 = add i32 %mul6.i1675, 400005958
  %add3.i1672 = add i32 %add.i1670, %mul1.i1669
  %add5.i1674 = add i32 %add3.i1672, %mul2.i1671
  %add7.i1676 = add i32 %add5.i1674, %mul4.i1673
  %shr.i1677 = lshr i32 %add7.i1676, 9
  %shr12.i1679 = lshr i32 %conv.i1662, 4
  %shr16.i1681 = lshr i32 %rem165, 6
  %347 = xor i32 %shr12.i1679, %shr.i1677
  %348 = xor i32 %347, %shr16.i1681
  %xor17.i1682 = xor i32 %348, %add7.i1676
  %349 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1683 = add nsw i32 %349, 1
  store i32 %inc.i1683, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1684 = mul i32 %xor17.i1682, 987654323
  %add.i1685 = add i32 %mul.i1684, %349
  %or.i1686 = tail call i32 @llvm.fshl.i32(i32 %add.i1685, i32 %add.i1685, i32 16)
  %mul2.i1687 = mul i32 %or.i1686, 123456791
  %add3.i1688 = add i32 %mul2.i1687, %349
  %idxprom.i.i1689 = sext i32 %349 to i64
  %arrayidx.i.i1690 = getelementptr inbounds i32, ptr %339, i64 %idxprom.i.i1689
  store i32 %add3.i1688, ptr %arrayidx.i.i1690, align 4, !tbaa !25
  %mul672 = shl nsw i32 %88, 1
  %mul673 = mul nsw i32 %88, 3
  %mul674 = shl nsw i32 %88, 2
  %350 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i1691 = sub nsw i32 %350, %88
  %351 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i1692 = add nsw i32 %351, -1
  %and.i.i1693 = and i32 %sub3.i.i1692, %sub.i.i1691
  %idxprom.i.i.i1694 = sext i32 %and.i.i1693 to i64
  %arrayidx.i.i.i1695 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i1694
  %352 = load i8, ptr %arrayidx.i.i.i1695, align 1, !tbaa !9
  %353 = lshr i8 %352, 1
  %shr.i1697 = zext i8 %353 to i32
  %tobool.not.i = icmp eq i32 %88, 0
  br i1 %tobool.not.i, label %_Z1ciiiii.exit, label %if.then13.i

if.then13.i:                                      ; preds = %if.else660
  %sub.i32.i = sub nsw i32 %350, %mul672
  %and.i34.i = and i32 %sub3.i.i1692, %sub.i32.i
  %idxprom.i.i35.i = sext i32 %and.i34.i to i64
  %arrayidx.i.i36.i = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i35.i
  %354 = load i8, ptr %arrayidx.i.i36.i, align 1, !tbaa !9
  %355 = lshr i8 %354, 1
  %shr3.i = zext i8 %355 to i32
  %356 = shl nuw nsw i32 %shr.i1697, 14
  %357 = shl nuw nsw i32 %shr3.i, 7
  %shl6.i = or i32 %356, %357
  %sub.i38.i = sub nsw i32 %350, %mul673
  %and.i40.i = and i32 %sub3.i.i1692, %sub.i38.i
  %idxprom.i.i41.i = sext i32 %and.i40.i to i64
  %arrayidx.i.i42.i = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i41.i
  %358 = load i8, ptr %arrayidx.i.i42.i, align 1, !tbaa !9
  %359 = lshr i8 %358, 1
  %shr9.i = zext i8 %359 to i32
  %or10.i = or i32 %shl6.i, %shr9.i
  %shl14.i = shl nuw nsw i32 %or10.i, 7
  %sub.i44.i = sub nsw i32 %350, %mul674
  %and.i46.i = and i32 %sub3.i.i1692, %sub.i44.i
  %idxprom.i.i47.i = sext i32 %and.i46.i to i64
  %arrayidx.i.i48.i = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i47.i
  %360 = load i8, ptr %arrayidx.i.i48.i, align 1, !tbaa !9
  %361 = lshr i8 %360, 1
  %shr17.i = zext i8 %361 to i32
  %or18.i = or i32 %shl14.i, %shr17.i
  br label %_Z1ciiiii.exit

_Z1ciiiii.exit:                                   ; preds = %if.else660, %if.then13.i
  %c.2.i = phi i32 [ %or18.i, %if.then13.i ], [ %shr.i1697, %if.else660 ]
  %mul1.i1699 = mul i32 %c.2.i, 30005491
  %add3.i1702 = add i32 %mul2.i1635, 420001631
  %add7.i1704 = add i32 %add3.i1702, %mul1.i1699
  %shr.i1705 = lshr i32 %add7.i1704, 9
  %shr10.i1706 = lshr i32 %c.2.i, 3
  %362 = xor i32 %shr10.i1706, %shr.i1705
  %363 = xor i32 %362, %shr12.i1641
  %364 = xor i32 %363, %add7.i1704
  %xor17.i1708 = xor i32 %364, 67108864
  %365 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1709 = add nsw i32 %365, 1
  store i32 %inc.i1709, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1710 = mul i32 %xor17.i1708, 987654323
  %add.i1711 = add i32 %mul.i1710, %365
  %or.i1712 = tail call i32 @llvm.fshl.i32(i32 %add.i1711, i32 %add.i1711, i32 16)
  %mul2.i1713 = mul i32 %or.i1712, 123456791
  %add3.i1714 = add i32 %mul2.i1713, %365
  %idxprom.i.i1715 = sext i32 %365 to i64
  %arrayidx.i.i1716 = getelementptr inbounds i32, ptr %339, i64 %idxprom.i.i1715
  store i32 %add3.i1714, ptr %arrayidx.i.i1716, align 4, !tbaa !25
  %366 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i1717 = sub nsw i32 %366, %88
  %367 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i1718 = add nsw i32 %367, -1
  %and.i.i1719 = and i32 %sub3.i.i1718, %sub.i.i1717
  %idxprom.i.i.i1720 = sext i32 %and.i.i1719 to i64
  %arrayidx.i.i.i1721 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i1720
  %368 = load i8, ptr %arrayidx.i.i.i1721, align 1, !tbaa !9
  %369 = lshr i8 %368, 3
  %shr.i1723 = zext i8 %369 to i32
  br i1 %tobool.not.i, label %_Z1ciiiii.exit1759, label %if.then13.i1757

if.then13.i1757:                                  ; preds = %_Z1ciiiii.exit
  %sub.i32.i1726 = sub nsw i32 %366, %mul672
  %and.i34.i1727 = and i32 %sub3.i.i1718, %sub.i32.i1726
  %idxprom.i.i35.i1728 = sext i32 %and.i34.i1727 to i64
  %arrayidx.i.i36.i1729 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i35.i1728
  %370 = load i8, ptr %arrayidx.i.i36.i1729, align 1, !tbaa !9
  %371 = lshr i8 %370, 3
  %shr3.i1731 = zext i8 %371 to i32
  %372 = shl nuw nsw i32 %shr.i1723, 10
  %373 = shl nuw nsw i32 %shr3.i1731, 5
  %shl6.i1737 = or i32 %372, %373
  %sub.i38.i1738 = sub nsw i32 %366, %mul673
  %and.i40.i1739 = and i32 %sub3.i.i1718, %sub.i38.i1738
  %idxprom.i.i41.i1740 = sext i32 %and.i40.i1739 to i64
  %arrayidx.i.i42.i1741 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i41.i1740
  %374 = load i8, ptr %arrayidx.i.i42.i1741, align 1, !tbaa !9
  %375 = lshr i8 %374, 3
  %shr9.i1743 = zext i8 %375 to i32
  %or10.i1744 = or i32 %shl6.i1737, %shr9.i1743
  %shl14.i1749 = shl nuw nsw i32 %or10.i1744, 5
  %sub.i44.i1750 = sub nsw i32 %366, %mul674
  %and.i46.i1751 = and i32 %sub3.i.i1718, %sub.i44.i1750
  %idxprom.i.i47.i1752 = sext i32 %and.i46.i1751 to i64
  %arrayidx.i.i48.i1753 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i47.i1752
  %376 = load i8, ptr %arrayidx.i.i48.i1753, align 1, !tbaa !9
  %377 = lshr i8 %376, 3
  %shr17.i1755 = zext i8 %377 to i32
  %or18.i1756 = or i32 %shl14.i1749, %shr17.i1755
  br label %_Z1ciiiii.exit1759

_Z1ciiiii.exit1759:                               ; preds = %_Z1ciiiii.exit, %if.then13.i1757
  %c.2.i1758 = phi i32 [ %or18.i1756, %if.then13.i1757 ], [ %shr.i1723, %_Z1ciiiii.exit ]
  %mul682 = mul nsw i32 %88, 5
  %mul683 = mul nsw i32 %88, 6
  %sub.i.i1760 = sub nsw i32 %366, %mul682
  %and.i.i1762 = and i32 %sub3.i.i1718, %sub.i.i1760
  %idxprom.i.i.i1763 = sext i32 %and.i.i1762 to i64
  %arrayidx.i.i.i1764 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i1763
  %378 = load i8, ptr %arrayidx.i.i.i1764, align 1, !tbaa !9
  %379 = lshr i8 %378, 3
  %shr.i1766 = zext i8 %379 to i32
  br i1 %tobool.not.i, label %_Z1ciiiii.exit1782, label %if.then.i1776

if.then.i1776:                                    ; preds = %_Z1ciiiii.exit1759
  %shl.i1768 = shl nuw nsw i32 %shr.i1766, 5
  %sub.i32.i1769 = sub nsw i32 %366, %mul683
  %and.i34.i1770 = and i32 %sub3.i.i1718, %sub.i32.i1769
  %idxprom.i.i35.i1771 = sext i32 %and.i34.i1770 to i64
  %arrayidx.i.i36.i1772 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i35.i1771
  %380 = load i8, ptr %arrayidx.i.i36.i1772, align 1, !tbaa !9
  %381 = lshr i8 %380, 3
  %shr3.i1774 = zext i8 %381 to i32
  %or.i1775 = or i32 %shl.i1768, %shr3.i1774
  br label %_Z1ciiiii.exit1782

_Z1ciiiii.exit1782:                               ; preds = %_Z1ciiiii.exit1759, %if.then.i1776
  %c.0.i1777 = phi i32 [ %or.i1775, %if.then.i1776 ], [ %shr.i1766, %_Z1ciiiii.exit1759 ]
  %mul1.i1783 = mul i32 %c.2.i1758, 30005491
  %mul2.i1785 = mul i32 %c.0.i1777, 50004239
  %mul4.i1787 = mul i32 %rem165, 70004807
  %add3.i1786 = add i32 %mul4.i1787, 690009417
  %add5.i1788 = add i32 %add3.i1786, %mul1.i1783
  %add7.i1789 = add i32 %add5.i1788, %mul2.i1785
  %shr.i1790 = lshr i32 %add7.i1789, 9
  %shr10.i1791 = lshr i32 %c.2.i1758, 3
  %shr12.i1792 = lshr i32 %c.0.i1777, 4
  %shr14.i1793 = lshr i32 %rem165, 5
  %382 = xor i32 %shr10.i1791, %shr12.i1792
  %383 = xor i32 %382, %shr.i1790
  %384 = xor i32 %383, %shr14.i1793
  %385 = xor i32 %384, %add7.i1789
  %xor17.i1794 = xor i32 %385, 67108862
  %386 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1795 = add nsw i32 %386, 1
  store i32 %inc.i1795, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1796 = mul i32 %xor17.i1794, 987654323
  %add.i1797 = add i32 %mul.i1796, %386
  %or.i1798 = tail call i32 @llvm.fshl.i32(i32 %add.i1797, i32 %add.i1797, i32 16)
  %mul2.i1799 = mul i32 %or.i1798, 123456791
  %add3.i1800 = add i32 %mul2.i1799, %386
  %idxprom.i.i1801 = sext i32 %386 to i64
  %arrayidx.i.i1802 = getelementptr inbounds i32, ptr %339, i64 %idxprom.i.i1801
  store i32 %add3.i1800, ptr %arrayidx.i.i1802, align 4, !tbaa !25
  %387 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i1803 = sub nsw i32 %387, %88
  %388 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i1804 = add nsw i32 %388, -1
  %and.i.i1805 = and i32 %sub3.i.i1804, %sub.i.i1803
  %idxprom.i.i.i1806 = sext i32 %and.i.i1805 to i64
  %arrayidx.i.i.i1807 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i1806
  %389 = load i8, ptr %arrayidx.i.i.i1807, align 1, !tbaa !9
  %390 = lshr i8 %389, 4
  %shr.i1809 = zext i8 %390 to i32
  br i1 %tobool.not.i, label %_Z1ciiiii.exit1845, label %if.then13.i1843

if.then13.i1843:                                  ; preds = %_Z1ciiiii.exit1782
  %sub.i32.i1812 = sub nsw i32 %387, %mul672
  %and.i34.i1813 = and i32 %sub3.i.i1804, %sub.i32.i1812
  %idxprom.i.i35.i1814 = sext i32 %and.i34.i1813 to i64
  %arrayidx.i.i36.i1815 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i35.i1814
  %391 = load i8, ptr %arrayidx.i.i36.i1815, align 1, !tbaa !9
  %392 = and i8 %391, -16
  %393 = shl nuw nsw i32 %shr.i1809, 8
  %394 = zext i8 %392 to i32
  %shl6.i1823 = or i32 %393, %394
  %sub.i38.i1824 = sub nsw i32 %387, %mul673
  %and.i40.i1825 = and i32 %sub3.i.i1804, %sub.i38.i1824
  %idxprom.i.i41.i1826 = sext i32 %and.i40.i1825 to i64
  %arrayidx.i.i42.i1827 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i41.i1826
  %395 = load i8, ptr %arrayidx.i.i42.i1827, align 1, !tbaa !9
  %396 = lshr i8 %395, 4
  %shr9.i1829 = zext i8 %396 to i32
  %or10.i1830 = or i32 %shl6.i1823, %shr9.i1829
  %shl14.i1835 = shl nuw nsw i32 %or10.i1830, 4
  %sub.i44.i1836 = sub nsw i32 %387, %mul674
  %and.i46.i1837 = and i32 %sub3.i.i1804, %sub.i44.i1836
  %idxprom.i.i47.i1838 = sext i32 %and.i46.i1837 to i64
  %arrayidx.i.i48.i1839 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i47.i1838
  %397 = load i8, ptr %arrayidx.i.i48.i1839, align 1, !tbaa !9
  %398 = lshr i8 %397, 4
  %shr17.i1841 = zext i8 %398 to i32
  %or18.i1842 = or i32 %shl14.i1835, %shr17.i1841
  br label %_Z1ciiiii.exit1845

_Z1ciiiii.exit1845:                               ; preds = %_Z1ciiiii.exit1782, %if.then13.i1843
  %c.2.i1844 = phi i32 [ %or18.i1842, %if.then13.i1843 ], [ %shr.i1809, %_Z1ciiiii.exit1782 ]
  %mul693 = mul nsw i32 %88, 7
  %mul694 = shl nsw i32 %88, 3
  %sub.i.i1846 = sub nsw i32 %387, %mul682
  %and.i.i1848 = and i32 %sub3.i.i1804, %sub.i.i1846
  %idxprom.i.i.i1849 = sext i32 %and.i.i1848 to i64
  %arrayidx.i.i.i1850 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i1849
  %399 = load i8, ptr %arrayidx.i.i.i1850, align 1, !tbaa !9
  %400 = lshr i8 %399, 5
  %shr.i1852 = zext i8 %400 to i32
  br i1 %tobool.not.i, label %_Z1ciiiii.exit1888, label %if.then13.i1886

if.then13.i1886:                                  ; preds = %_Z1ciiiii.exit1845
  %sub.i32.i1855 = sub nsw i32 %387, %mul683
  %and.i34.i1856 = and i32 %sub3.i.i1804, %sub.i32.i1855
  %idxprom.i.i35.i1857 = sext i32 %and.i34.i1856 to i64
  %arrayidx.i.i36.i1858 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i35.i1857
  %401 = load i8, ptr %arrayidx.i.i36.i1858, align 1, !tbaa !9
  %402 = shl nuw nsw i32 %shr.i1852, 6
  %403 = lshr i8 %401, 2
  %404 = and i8 %403, 56
  %405 = zext i8 %404 to i32
  %shl6.i1866 = or i32 %402, %405
  %sub.i38.i1867 = sub nsw i32 %387, %mul693
  %and.i40.i1868 = and i32 %sub3.i.i1804, %sub.i38.i1867
  %idxprom.i.i41.i1869 = sext i32 %and.i40.i1868 to i64
  %arrayidx.i.i42.i1870 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i41.i1869
  %406 = load i8, ptr %arrayidx.i.i42.i1870, align 1, !tbaa !9
  %407 = lshr i8 %406, 5
  %shr9.i1872 = zext i8 %407 to i32
  %or10.i1873 = or i32 %shl6.i1866, %shr9.i1872
  %shl14.i1878 = shl nuw nsw i32 %or10.i1873, 3
  %sub.i44.i1879 = sub nsw i32 %387, %mul694
  %and.i46.i1880 = and i32 %sub3.i.i1804, %sub.i44.i1879
  %idxprom.i.i47.i1881 = sext i32 %and.i46.i1880 to i64
  %arrayidx.i.i48.i1882 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i47.i1881
  %408 = load i8, ptr %arrayidx.i.i48.i1882, align 1, !tbaa !9
  %409 = lshr i8 %408, 5
  %shr17.i1884 = zext i8 %409 to i32
  %or18.i1885 = or i32 %shl14.i1878, %shr17.i1884
  br label %_Z1ciiiii.exit1888

_Z1ciiiii.exit1888:                               ; preds = %_Z1ciiiii.exit1845, %if.then13.i1886
  %c.2.i1887 = phi i32 [ %or18.i1885, %if.then13.i1886 ], [ %shr.i1852, %_Z1ciiiii.exit1845 ]
  %mul696 = mul nsw i32 %88, 9
  %mul697 = mul nsw i32 %88, 10
  %mul698 = mul nsw i32 %88, 11
  %mul699 = mul nsw i32 %88, 12
  %sub.i.i1889 = sub nsw i32 %387, %mul696
  %and.i.i1891 = and i32 %sub3.i.i1804, %sub.i.i1889
  %idxprom.i.i.i1892 = sext i32 %and.i.i1891 to i64
  %arrayidx.i.i.i1893 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i1892
  %410 = load i8, ptr %arrayidx.i.i.i1893, align 1, !tbaa !9
  %411 = lshr i8 %410, 6
  %shr.i1895 = zext i8 %411 to i32
  br i1 %tobool.not.i, label %_Z1ciiiii.exit1931, label %if.then13.i1929

if.then13.i1929:                                  ; preds = %_Z1ciiiii.exit1888
  %sub.i32.i1898 = sub nsw i32 %387, %mul697
  %and.i34.i1899 = and i32 %sub3.i.i1804, %sub.i32.i1898
  %idxprom.i.i35.i1900 = sext i32 %and.i34.i1899 to i64
  %arrayidx.i.i36.i1901 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i35.i1900
  %412 = load i8, ptr %arrayidx.i.i36.i1901, align 1, !tbaa !9
  %413 = shl nuw nsw i32 %shr.i1895, 4
  %414 = lshr i8 %412, 4
  %415 = and i8 %414, 12
  %416 = zext i8 %415 to i32
  %shl6.i1909 = or i32 %413, %416
  %sub.i38.i1910 = sub nsw i32 %387, %mul698
  %and.i40.i1911 = and i32 %sub3.i.i1804, %sub.i38.i1910
  %idxprom.i.i41.i1912 = sext i32 %and.i40.i1911 to i64
  %arrayidx.i.i42.i1913 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i41.i1912
  %417 = load i8, ptr %arrayidx.i.i42.i1913, align 1, !tbaa !9
  %418 = lshr i8 %417, 6
  %shr9.i1915 = zext i8 %418 to i32
  %or10.i1916 = or i32 %shl6.i1909, %shr9.i1915
  %shl14.i1921 = shl nuw nsw i32 %or10.i1916, 2
  %sub.i44.i1922 = sub nsw i32 %387, %mul699
  %and.i46.i1923 = and i32 %sub3.i.i1804, %sub.i44.i1922
  %idxprom.i.i47.i1924 = sext i32 %and.i46.i1923 to i64
  %arrayidx.i.i48.i1925 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i47.i1924
  %419 = load i8, ptr %arrayidx.i.i48.i1925, align 1, !tbaa !9
  %420 = lshr i8 %419, 6
  %shr17.i1927 = zext i8 %420 to i32
  %or18.i1928 = or i32 %shl14.i1921, %shr17.i1927
  br label %_Z1ciiiii.exit1931

_Z1ciiiii.exit1931:                               ; preds = %_Z1ciiiii.exit1888, %if.then13.i1929
  %c.2.i1930 = phi i32 [ %or18.i1928, %if.then13.i1929 ], [ %shr.i1895, %_Z1ciiiii.exit1888 ]
  %mul1.i1932 = mul i32 %c.2.i1844, 30005491
  %mul2.i1934 = mul i32 %c.2.i1887, 50004239
  %mul4.i1936 = mul i32 %c.2.i1930, 70004807
  %add.i1933 = add i32 %mul6.i1675, 1000014895
  %add3.i1935 = add i32 %add.i1933, %mul1.i1932
  %add5.i1937 = add i32 %add3.i1935, %mul2.i1934
  %add7.i1939 = add i32 %add5.i1937, %mul4.i1936
  %shr.i1940 = lshr i32 %add7.i1939, 9
  %shr10.i1941 = lshr i32 %c.2.i1844, 3
  %shr12.i1942 = lshr i32 %c.2.i1887, 4
  %shr14.i1943 = lshr i32 %c.2.i1930, 5
  %421 = xor i32 %shr10.i1941, %shr12.i1942
  %422 = xor i32 %421, %shr14.i1943
  %423 = xor i32 %422, %shr.i1940
  %424 = xor i32 %423, %shr16.i1681
  %425 = xor i32 %424, %add7.i1939
  %xor17.i1945 = xor i32 %425, 1
  %426 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i1946 = add nsw i32 %426, 1
  store i32 %inc.i1946, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i1947 = mul i32 %xor17.i1945, 987654323
  %add.i1948 = add i32 %mul.i1947, %426
  %or.i1949 = tail call i32 @llvm.fshl.i32(i32 %add.i1948, i32 %add.i1948, i32 16)
  %mul2.i1950 = mul i32 %or.i1949, 123456791
  %add3.i1951 = add i32 %mul2.i1950, %426
  %idxprom.i.i1952 = sext i32 %426 to i64
  %arrayidx.i.i1953 = getelementptr inbounds i32, ptr %339, i64 %idxprom.i.i1952
  store i32 %add3.i1951, ptr %arrayidx.i.i1953, align 4, !tbaa !25
  %427 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i1954 = sub nsw i32 %427, %88
  %428 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i1955 = add nsw i32 %428, -1
  %and.i.i1956 = and i32 %sub3.i.i1955, %sub.i.i1954
  %idxprom.i.i.i1957 = sext i32 %and.i.i1956 to i64
  %arrayidx.i.i.i1958 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i1957
  %429 = load i8, ptr %arrayidx.i.i.i1958, align 1, !tbaa !9
  %430 = lshr i8 %429, 6
  %shr.i1960 = zext i8 %430 to i32
  br i1 %tobool.not.i, label %_Z1ciiiii.exit1996, label %if.then13.i1994

if.then13.i1994:                                  ; preds = %_Z1ciiiii.exit1931
  %sub.i32.i1963 = sub nsw i32 %427, %mul672
  %and.i34.i1964 = and i32 %sub3.i.i1955, %sub.i32.i1963
  %idxprom.i.i35.i1965 = sext i32 %and.i34.i1964 to i64
  %arrayidx.i.i36.i1966 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i35.i1965
  %431 = load i8, ptr %arrayidx.i.i36.i1966, align 1, !tbaa !9
  %432 = shl nuw nsw i32 %shr.i1960, 4
  %433 = lshr i8 %431, 4
  %434 = and i8 %433, 12
  %435 = zext i8 %434 to i32
  %shl6.i1974 = or i32 %432, %435
  %sub.i38.i1975 = sub nsw i32 %427, %mul673
  %and.i40.i1976 = and i32 %sub3.i.i1955, %sub.i38.i1975
  %idxprom.i.i41.i1977 = sext i32 %and.i40.i1976 to i64
  %arrayidx.i.i42.i1978 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i41.i1977
  %436 = load i8, ptr %arrayidx.i.i42.i1978, align 1, !tbaa !9
  %437 = lshr i8 %436, 6
  %shr9.i1980 = zext i8 %437 to i32
  %or10.i1981 = or i32 %shl6.i1974, %shr9.i1980
  %shl14.i1986 = shl nuw nsw i32 %or10.i1981, 2
  %sub.i44.i1987 = sub nsw i32 %427, %mul674
  %and.i46.i1988 = and i32 %sub3.i.i1955, %sub.i44.i1987
  %idxprom.i.i47.i1989 = sext i32 %and.i46.i1988 to i64
  %arrayidx.i.i48.i1990 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i47.i1989
  %438 = load i8, ptr %arrayidx.i.i48.i1990, align 1, !tbaa !9
  %439 = lshr i8 %438, 6
  %shr17.i1992 = zext i8 %439 to i32
  %or18.i1993 = or i32 %shl14.i1986, %shr17.i1992
  br label %_Z1ciiiii.exit1996

_Z1ciiiii.exit1996:                               ; preds = %_Z1ciiiii.exit1931, %if.then13.i1994
  %c.2.i1995 = phi i32 [ %or18.i1993, %if.then13.i1994 ], [ %shr.i1960, %_Z1ciiiii.exit1931 ]
  %shl707 = shl nuw nsw i32 %c.2.i1995, 8
  %sub.i.i1997 = sub nsw i32 %427, %mul682
  %and.i.i1999 = and i32 %sub3.i.i1955, %sub.i.i1997
  %idxprom.i.i.i2000 = sext i32 %and.i.i1999 to i64
  %arrayidx.i.i.i2001 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2000
  %440 = load i8, ptr %arrayidx.i.i.i2001, align 1, !tbaa !9
  %441 = lshr i8 %440, 6
  %shr.i2003 = zext i8 %441 to i32
  br i1 %tobool.not.i, label %_Z1ciiiii.exit2039, label %if.then13.i2037

if.then13.i2037:                                  ; preds = %_Z1ciiiii.exit1996
  %sub.i32.i2006 = sub nsw i32 %427, %mul683
  %and.i34.i2007 = and i32 %sub3.i.i1955, %sub.i32.i2006
  %idxprom.i.i35.i2008 = sext i32 %and.i34.i2007 to i64
  %arrayidx.i.i36.i2009 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i35.i2008
  %442 = load i8, ptr %arrayidx.i.i36.i2009, align 1, !tbaa !9
  %443 = shl nuw nsw i32 %shr.i2003, 4
  %444 = lshr i8 %442, 4
  %445 = and i8 %444, 12
  %446 = zext i8 %445 to i32
  %shl6.i2017 = or i32 %443, %446
  %sub.i38.i2018 = sub nsw i32 %427, %mul693
  %and.i40.i2019 = and i32 %sub3.i.i1955, %sub.i38.i2018
  %idxprom.i.i41.i2020 = sext i32 %and.i40.i2019 to i64
  %arrayidx.i.i42.i2021 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i41.i2020
  %447 = load i8, ptr %arrayidx.i.i42.i2021, align 1, !tbaa !9
  %448 = lshr i8 %447, 6
  %shr9.i2023 = zext i8 %448 to i32
  %or10.i2024 = or i32 %shl6.i2017, %shr9.i2023
  %shl14.i2029 = shl nuw nsw i32 %or10.i2024, 2
  %sub.i44.i2030 = sub nsw i32 %427, %mul694
  %and.i46.i2031 = and i32 %sub3.i.i1955, %sub.i44.i2030
  %idxprom.i.i47.i2032 = sext i32 %and.i46.i2031 to i64
  %arrayidx.i.i48.i2033 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i47.i2032
  %449 = load i8, ptr %arrayidx.i.i48.i2033, align 1, !tbaa !9
  %450 = lshr i8 %449, 6
  %shr17.i2035 = zext i8 %450 to i32
  %or18.i2036 = or i32 %shl14.i2029, %shr17.i2035
  br label %_Z1ciiiii.exit2039

_Z1ciiiii.exit2039:                               ; preds = %_Z1ciiiii.exit1996, %if.then13.i2037
  %c.2.i2038 = phi i32 [ %or18.i2036, %if.then13.i2037 ], [ %shr.i2003, %_Z1ciiiii.exit1996 ]
  %or = or i32 %c.2.i2038, %shl707
  %sub.i.i2040 = sub nsw i32 %427, %mul696
  %and.i.i2042 = and i32 %sub3.i.i1955, %sub.i.i2040
  %idxprom.i.i.i2043 = sext i32 %and.i.i2042 to i64
  %arrayidx.i.i.i2044 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2043
  %451 = load i8, ptr %arrayidx.i.i.i2044, align 1, !tbaa !9
  %452 = lshr i8 %451, 6
  %shr.i2046 = zext i8 %452 to i32
  br i1 %tobool.not.i, label %_Z1ciiiii.exit2082, label %if.then13.i2080

if.then13.i2080:                                  ; preds = %_Z1ciiiii.exit2039
  %sub.i32.i2049 = sub nsw i32 %427, %mul697
  %and.i34.i2050 = and i32 %sub3.i.i1955, %sub.i32.i2049
  %idxprom.i.i35.i2051 = sext i32 %and.i34.i2050 to i64
  %arrayidx.i.i36.i2052 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i35.i2051
  %453 = load i8, ptr %arrayidx.i.i36.i2052, align 1, !tbaa !9
  %454 = shl nuw nsw i32 %shr.i2046, 4
  %455 = lshr i8 %453, 4
  %456 = and i8 %455, 12
  %457 = zext i8 %456 to i32
  %shl6.i2060 = or i32 %454, %457
  %sub.i38.i2061 = sub nsw i32 %427, %mul698
  %and.i40.i2062 = and i32 %sub3.i.i1955, %sub.i38.i2061
  %idxprom.i.i41.i2063 = sext i32 %and.i40.i2062 to i64
  %arrayidx.i.i42.i2064 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i41.i2063
  %458 = load i8, ptr %arrayidx.i.i42.i2064, align 1, !tbaa !9
  %459 = lshr i8 %458, 6
  %shr9.i2066 = zext i8 %459 to i32
  %or10.i2067 = or i32 %shl6.i2060, %shr9.i2066
  %shl14.i2072 = shl nuw nsw i32 %or10.i2067, 2
  %sub.i44.i2073 = sub nsw i32 %427, %mul699
  %and.i46.i2074 = and i32 %sub3.i.i1955, %sub.i44.i2073
  %idxprom.i.i47.i2075 = sext i32 %and.i46.i2074 to i64
  %arrayidx.i.i48.i2076 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i47.i2075
  %460 = load i8, ptr %arrayidx.i.i48.i2076, align 1, !tbaa !9
  %461 = lshr i8 %460, 6
  %shr17.i2078 = zext i8 %461 to i32
  %or18.i2079 = or i32 %shl14.i2072, %shr17.i2078
  br label %_Z1ciiiii.exit2082

_Z1ciiiii.exit2082:                               ; preds = %_Z1ciiiii.exit2039, %if.then13.i2080
  %c.2.i2081 = phi i32 [ %or18.i2079, %if.then13.i2080 ], [ %shr.i2046, %_Z1ciiiii.exit2039 ]
  %shl718 = shl nuw nsw i32 %c.2.i2081, 8
  %mul719.neg = mul i32 %88, -13
  %sub.i.i2083 = add i32 %427, %mul719.neg
  %and.i.i2085 = and i32 %sub3.i.i1955, %sub.i.i2083
  %idxprom.i.i.i2086 = sext i32 %and.i.i2085 to i64
  %arrayidx.i.i.i2087 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2086
  %462 = load i8, ptr %arrayidx.i.i.i2087, align 1, !tbaa !9
  %463 = lshr i8 %462, 6
  %shr.i2089 = zext i8 %463 to i32
  br i1 %tobool.not.i, label %_Z1ciiiii.exit2125, label %if.then13.i2123

if.then13.i2123:                                  ; preds = %_Z1ciiiii.exit2082
  %mul722 = shl nsw i32 %88, 4
  %mul721.neg = mul i32 %88, -15
  %mul720.neg = mul i32 %88, -14
  %sub.i32.i2092 = add i32 %427, %mul720.neg
  %and.i34.i2093 = and i32 %sub3.i.i1955, %sub.i32.i2092
  %idxprom.i.i35.i2094 = sext i32 %and.i34.i2093 to i64
  %arrayidx.i.i36.i2095 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i35.i2094
  %464 = load i8, ptr %arrayidx.i.i36.i2095, align 1, !tbaa !9
  %465 = shl nuw nsw i32 %shr.i2089, 4
  %466 = lshr i8 %464, 4
  %467 = and i8 %466, 12
  %468 = zext i8 %467 to i32
  %shl6.i2103 = or i32 %465, %468
  %sub.i38.i2104 = add i32 %427, %mul721.neg
  %and.i40.i2105 = and i32 %sub3.i.i1955, %sub.i38.i2104
  %idxprom.i.i41.i2106 = sext i32 %and.i40.i2105 to i64
  %arrayidx.i.i42.i2107 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i41.i2106
  %469 = load i8, ptr %arrayidx.i.i42.i2107, align 1, !tbaa !9
  %470 = lshr i8 %469, 6
  %shr9.i2109 = zext i8 %470 to i32
  %or10.i2110 = or i32 %shl6.i2103, %shr9.i2109
  %shl14.i2115 = shl nuw nsw i32 %or10.i2110, 2
  %sub.i44.i2116 = sub nsw i32 %427, %mul722
  %and.i46.i2117 = and i32 %sub3.i.i1955, %sub.i44.i2116
  %idxprom.i.i47.i2118 = sext i32 %and.i46.i2117 to i64
  %arrayidx.i.i48.i2119 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i47.i2118
  %471 = load i8, ptr %arrayidx.i.i48.i2119, align 1, !tbaa !9
  %472 = lshr i8 %471, 6
  %shr17.i2121 = zext i8 %472 to i32
  %or18.i2122 = or i32 %shl14.i2115, %shr17.i2121
  br label %_Z1ciiiii.exit2125

_Z1ciiiii.exit2125:                               ; preds = %_Z1ciiiii.exit2082, %if.then13.i2123
  %c.2.i2124 = phi i32 [ %or18.i2122, %if.then13.i2123 ], [ %shr.i2089, %_Z1ciiiii.exit2082 ]
  %or724 = or i32 %c.2.i2124, %shl718
  %mul725.neg = mul i32 %88, -17
  %sub.i.i2126 = add i32 %427, %mul725.neg
  %and.i.i2128 = and i32 %sub3.i.i1955, %sub.i.i2126
  %idxprom.i.i.i2129 = sext i32 %and.i.i2128 to i64
  %arrayidx.i.i.i2130 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2129
  %473 = load i8, ptr %arrayidx.i.i.i2130, align 1, !tbaa !9
  %474 = lshr i8 %473, 6
  %shr.i2132 = zext i8 %474 to i32
  br i1 %tobool.not.i, label %_Z1ciiiii.exit2168, label %if.then13.i2166

if.then13.i2166:                                  ; preds = %_Z1ciiiii.exit2125
  %mul728.neg = mul i32 %88, -20
  %mul727.neg = mul i32 %88, -19
  %mul726.neg = mul i32 %88, -18
  %sub.i32.i2135 = add i32 %427, %mul726.neg
  %and.i34.i2136 = and i32 %sub3.i.i1955, %sub.i32.i2135
  %idxprom.i.i35.i2137 = sext i32 %and.i34.i2136 to i64
  %arrayidx.i.i36.i2138 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i35.i2137
  %475 = load i8, ptr %arrayidx.i.i36.i2138, align 1, !tbaa !9
  %476 = shl nuw nsw i32 %shr.i2132, 4
  %477 = lshr i8 %475, 4
  %478 = and i8 %477, 12
  %479 = zext i8 %478 to i32
  %shl6.i2146 = or i32 %476, %479
  %sub.i38.i2147 = add i32 %427, %mul727.neg
  %and.i40.i2148 = and i32 %sub3.i.i1955, %sub.i38.i2147
  %idxprom.i.i41.i2149 = sext i32 %and.i40.i2148 to i64
  %arrayidx.i.i42.i2150 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i41.i2149
  %480 = load i8, ptr %arrayidx.i.i42.i2150, align 1, !tbaa !9
  %481 = lshr i8 %480, 6
  %shr9.i2152 = zext i8 %481 to i32
  %or10.i2153 = or i32 %shl6.i2146, %shr9.i2152
  %shl14.i2158 = shl nuw nsw i32 %or10.i2153, 2
  %sub.i44.i2159 = add i32 %427, %mul728.neg
  %and.i46.i2160 = and i32 %sub3.i.i1955, %sub.i44.i2159
  %idxprom.i.i47.i2161 = sext i32 %and.i46.i2160 to i64
  %arrayidx.i.i48.i2162 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i47.i2161
  %482 = load i8, ptr %arrayidx.i.i48.i2162, align 1, !tbaa !9
  %483 = lshr i8 %482, 6
  %shr17.i2164 = zext i8 %483 to i32
  %or18.i2165 = or i32 %shl14.i2158, %shr17.i2164
  br label %_Z1ciiiii.exit2168

_Z1ciiiii.exit2168:                               ; preds = %_Z1ciiiii.exit2125, %if.then13.i2166
  %c.2.i2167 = phi i32 [ %or18.i2165, %if.then13.i2166 ], [ %shr.i2132, %_Z1ciiiii.exit2125 ]
  %shl730 = shl nuw nsw i32 %c.2.i2167, 8
  %mul731.neg = mul i32 %88, -21
  %sub.i.i2169 = add i32 %427, %mul731.neg
  %and.i.i2171 = and i32 %sub3.i.i1955, %sub.i.i2169
  %idxprom.i.i.i2172 = sext i32 %and.i.i2171 to i64
  %arrayidx.i.i.i2173 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2172
  %484 = load i8, ptr %arrayidx.i.i.i2173, align 1, !tbaa !9
  %485 = lshr i8 %484, 6
  %shr.i2175 = zext i8 %485 to i32
  br i1 %tobool.not.i, label %_Z1ciiiii.exit2211, label %if.then13.i2209

if.then13.i2209:                                  ; preds = %_Z1ciiiii.exit2168
  %mul734.neg = mul i32 %88, -24
  %mul733.neg = mul i32 %88, -23
  %mul732.neg = mul i32 %88, -22
  %sub.i32.i2178 = add i32 %427, %mul732.neg
  %and.i34.i2179 = and i32 %sub3.i.i1955, %sub.i32.i2178
  %idxprom.i.i35.i2180 = sext i32 %and.i34.i2179 to i64
  %arrayidx.i.i36.i2181 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i35.i2180
  %486 = load i8, ptr %arrayidx.i.i36.i2181, align 1, !tbaa !9
  %487 = shl nuw nsw i32 %shr.i2175, 4
  %488 = lshr i8 %486, 4
  %489 = and i8 %488, 12
  %490 = zext i8 %489 to i32
  %shl6.i2189 = or i32 %487, %490
  %sub.i38.i2190 = add i32 %427, %mul733.neg
  %and.i40.i2191 = and i32 %sub3.i.i1955, %sub.i38.i2190
  %idxprom.i.i41.i2192 = sext i32 %and.i40.i2191 to i64
  %arrayidx.i.i42.i2193 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i41.i2192
  %491 = load i8, ptr %arrayidx.i.i42.i2193, align 1, !tbaa !9
  %492 = lshr i8 %491, 6
  %shr9.i2195 = zext i8 %492 to i32
  %or10.i2196 = or i32 %shl6.i2189, %shr9.i2195
  %shl14.i2201 = shl nuw nsw i32 %or10.i2196, 2
  %sub.i44.i2202 = add i32 %427, %mul734.neg
  %and.i46.i2203 = and i32 %sub3.i.i1955, %sub.i44.i2202
  %idxprom.i.i47.i2204 = sext i32 %and.i46.i2203 to i64
  %arrayidx.i.i48.i2205 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i47.i2204
  %493 = load i8, ptr %arrayidx.i.i48.i2205, align 1, !tbaa !9
  %494 = lshr i8 %493, 6
  %shr17.i2207 = zext i8 %494 to i32
  %or18.i2208 = or i32 %shl14.i2201, %shr17.i2207
  br label %_Z1ciiiii.exit2211

_Z1ciiiii.exit2211:                               ; preds = %_Z1ciiiii.exit2168, %if.then13.i2209
  %c.2.i2210 = phi i32 [ %or18.i2208, %if.then13.i2209 ], [ %shr.i2175, %_Z1ciiiii.exit2168 ]
  %or736 = or i32 %c.2.i2210, %shl730
  %mul1.i2212 = mul i32 %or, 30005491
  %mul2.i2214 = mul i32 %or724, 50004239
  %mul4.i2216 = mul i32 %or736, 70004807
  %add.i2213 = add i32 %mul6.i1675, 1200017874
  %add3.i2215 = add i32 %add.i2213, %mul1.i2212
  %add5.i2217 = add i32 %add3.i2215, %mul2.i2214
  %add7.i2219 = add i32 %add5.i2217, %mul4.i2216
  %shr.i2220 = lshr i32 %add7.i2219, 9
  %shr10.i2221 = lshr i32 %or, 3
  %shr12.i2222 = lshr i32 %or724, 4
  %shr14.i2223 = lshr i32 %or736, 5
  %495 = xor i32 %shr10.i2221, %shr12.i2222
  %496 = xor i32 %495, %shr14.i2223
  %497 = xor i32 %496, %shr.i2220
  %498 = xor i32 %497, %shr16.i1681
  %499 = xor i32 %498, %add7.i2219
  %xor17.i2225 = xor i32 %499, 1
  %500 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i2226 = add nsw i32 %500, 1
  store i32 %inc.i2226, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i2227 = mul i32 %xor17.i2225, 987654323
  %add.i2228 = add i32 %mul.i2227, %500
  %or.i2229 = tail call i32 @llvm.fshl.i32(i32 %add.i2228, i32 %add.i2228, i32 16)
  %mul2.i2230 = mul i32 %or.i2229, 123456791
  %add3.i2231 = add i32 %mul2.i2230, %500
  %idxprom.i.i2232 = sext i32 %500 to i64
  %arrayidx.i.i2233 = getelementptr inbounds i32, ptr %339, i64 %idxprom.i.i2232
  store i32 %add3.i2231, ptr %arrayidx.i.i2233, align 4, !tbaa !25
  %idxprom739 = sext i32 %div to i64
  %arrayidx740 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 %idxprom739
  %501 = load i32, ptr %arrayidx740, align 4, !tbaa !25
  %shr741 = ashr i32 %501, 8
  %mul1.i2234 = mul i32 %shr741, 30005491
  %add3.i2237 = add i32 %mul2.i1635, 1220013547
  %add7.i2239 = add i32 %add3.i2237, %mul1.i2234
  %shr.i2240 = lshr i32 %add7.i2239, 9
  %shr10.i2241 = lshr i32 %shr741, 3
  %502 = xor i32 %shr10.i2241, %shr.i2240
  %503 = xor i32 %502, %shr12.i1641
  %504 = xor i32 %503, %add7.i2239
  %xor17.i2243 = xor i32 %504, 67108865
  %505 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i2244 = add nsw i32 %505, 1
  store i32 %inc.i2244, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i2245 = mul i32 %xor17.i2243, 987654323
  %add.i2246 = add i32 %mul.i2245, %505
  %or.i2247 = tail call i32 @llvm.fshl.i32(i32 %add.i2246, i32 %add.i2246, i32 16)
  %mul2.i2248 = mul i32 %or.i2247, 123456791
  %add3.i2249 = add i32 %mul2.i2248, %505
  %idxprom.i.i2250 = sext i32 %505 to i64
  %arrayidx.i.i2251 = getelementptr inbounds i32, ptr %339, i64 %idxprom.i.i2250
  store i32 %add3.i2249, ptr %arrayidx.i.i2251, align 4, !tbaa !25
  %add746 = add nsw i32 %88, 1
  %506 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i2252 = sub i32 %506, %add746
  %507 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i2253 = add nsw i32 %507, -1
  %and.i.i2254 = and i32 %sub3.i.i2253, %sub.i.i2252
  %idxprom.i.i.i2255 = sext i32 %and.i.i2254 to i64
  %arrayidx.i.i.i2256 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2255
  %508 = load i8, ptr %arrayidx.i.i.i2256, align 1, !tbaa !9
  %conv.i.i2257 = zext i8 %508 to i16
  %sub.i4.i2258 = add i32 %sub.i.i2252, 1
  %and.i6.i2259 = and i32 %sub3.i.i2253, %sub.i4.i2258
  %idxprom.i.i7.i2260 = sext i32 %and.i6.i2259 to i64
  %arrayidx.i.i8.i2261 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i7.i2260
  %509 = load i8, ptr %arrayidx.i.i8.i2261, align 1, !tbaa !9
  %conv.i9.i2262 = zext i8 %509 to i16
  %mul.i2263 = shl nuw i16 %conv.i9.i2262, 8
  %add.i2264 = or i16 %mul.i2263, %conv.i.i2257
  %conv2.i2265 = sext i16 %add.i2264 to i32
  %arrayidx750 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 1, i64 %idxprom739
  %510 = load i32, ptr %arrayidx750, align 4, !tbaa !25
  %add748 = sub i32 %501, %510
  %sub751 = add i32 %add748, %conv2.i2265
  %shr752 = ashr i32 %sub751, 8
  %mul1.i2266 = mul i32 %shr752, 30005491
  %add3.i2269 = add i32 %mul2.i1635, 1420016526
  %add7.i2271 = add i32 %add3.i2269, %mul1.i2266
  %shr.i2272 = lshr i32 %add7.i2271, 9
  %shr10.i2273 = lshr i32 %shr752, 3
  %511 = xor i32 %shr10.i2273, %shr.i2272
  %512 = xor i32 %511, %shr12.i1641
  %513 = xor i32 %512, %add7.i2271
  %xor17.i2275 = xor i32 %513, 67108866
  %514 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i2276 = add nsw i32 %514, 1
  store i32 %inc.i2276, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i2277 = mul i32 %xor17.i2275, 987654323
  %add.i2278 = add i32 %mul.i2277, %514
  %or.i2279 = tail call i32 @llvm.fshl.i32(i32 %add.i2278, i32 %add.i2278, i32 16)
  %mul2.i2280 = mul i32 %or.i2279, 123456791
  %add3.i2281 = add i32 %mul2.i2280, %514
  %idxprom.i.i2282 = sext i32 %514 to i64
  %arrayidx.i.i2283 = getelementptr inbounds i32, ptr %339, i64 %idxprom.i.i2282
  store i32 %add3.i2281, ptr %arrayidx.i.i2283, align 4, !tbaa !25
  %515 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i2284 = sub i32 %515, %add746
  %516 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i2285 = add nsw i32 %516, -1
  %and.i.i2286 = and i32 %sub3.i.i2285, %sub.i.i2284
  %idxprom.i.i.i2287 = sext i32 %and.i.i2286 to i64
  %arrayidx.i.i.i2288 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2287
  %517 = load i8, ptr %arrayidx.i.i.i2288, align 1, !tbaa !9
  %conv.i.i2289 = zext i8 %517 to i16
  %sub.i4.i2290 = add i32 %sub.i.i2284, 1
  %and.i6.i2291 = and i32 %sub3.i.i2285, %sub.i4.i2290
  %idxprom.i.i7.i2292 = sext i32 %and.i6.i2291 to i64
  %arrayidx.i.i8.i2293 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i7.i2292
  %518 = load i8, ptr %arrayidx.i.i8.i2293, align 1, !tbaa !9
  %conv.i9.i2294 = zext i8 %518 to i16
  %mul.i2295 = shl nuw i16 %conv.i9.i2294, 8
  %add.i2296 = or i16 %mul.i2295, %conv.i.i2289
  %conv2.i2297 = sext i16 %add.i2296 to i32
  %add764 = or i32 %mul672, 1
  %sub.i.i2298 = sub i32 %515, %add764
  %and.i.i2300 = and i32 %sub3.i.i2285, %sub.i.i2298
  %idxprom.i.i.i2301 = sext i32 %and.i.i2300 to i64
  %arrayidx.i.i.i2302 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2301
  %519 = load i8, ptr %arrayidx.i.i.i2302, align 1, !tbaa !9
  %conv.i.i2303 = zext i8 %519 to i16
  %sub.i4.i2304 = add i32 %sub.i.i2298, 1
  %and.i6.i2305 = and i32 %sub3.i.i2285, %sub.i4.i2304
  %idxprom.i.i7.i2306 = sext i32 %and.i6.i2305 to i64
  %arrayidx.i.i8.i2307 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i7.i2306
  %520 = load i8, ptr %arrayidx.i.i8.i2307, align 1, !tbaa !9
  %conv.i9.i2308 = zext i8 %520 to i16
  %mul.i2309 = shl nuw i16 %conv.i9.i2308, 8
  %add.i2310 = or i16 %mul.i2309, %conv.i.i2303
  %conv2.i2311 = sext i16 %add.i2310 to i32
  %arrayidx768 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 2, i64 %idxprom739
  %521 = load i32, ptr %arrayidx768, align 4, !tbaa !25
  %522 = add i32 %521, %510
  %523 = sub i32 %conv2.i2297, %522
  %sub769 = add i32 %523, %conv2.i2311
  %shr770 = ashr i32 %sub769, 9
  %mul2.i2314 = mul i32 %shr770, 50004239
  %add3.i2315 = add i32 %mul4.i1787, 1690024312
  %add5.i2317 = add i32 %add3.i2315, %mul1.i2234
  %add7.i2318 = add i32 %add5.i2317, %mul2.i2314
  %shr.i2319 = lshr i32 %add7.i2318, 9
  %shr12.i2321 = lshr i32 %shr770, 4
  %524 = xor i32 %shr12.i2321, %shr.i2319
  %525 = xor i32 %524, %shr10.i2241
  %526 = xor i32 %525, %shr14.i1793
  %527 = xor i32 %526, %add7.i2318
  %xor17.i2323 = xor i32 %527, 67108861
  %528 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i2324 = add nsw i32 %528, 1
  store i32 %inc.i2324, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i2325 = mul i32 %xor17.i2323, 987654323
  %add.i2326 = add i32 %mul.i2325, %528
  %or.i2327 = tail call i32 @llvm.fshl.i32(i32 %add.i2326, i32 %add.i2326, i32 16)
  %mul2.i2328 = mul i32 %or.i2327, 123456791
  %add3.i2329 = add i32 %mul2.i2328, %528
  %idxprom.i.i2330 = sext i32 %528 to i64
  %arrayidx.i.i2331 = getelementptr inbounds i32, ptr %339, i64 %idxprom.i.i2330
  store i32 %add3.i2329, ptr %arrayidx.i.i2331, align 4, !tbaa !25
  %529 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i2332 = sub i32 %529, %add746
  %530 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i2333 = add nsw i32 %530, -1
  %and.i.i2334 = and i32 %sub3.i.i2333, %sub.i.i2332
  %idxprom.i.i.i2335 = sext i32 %and.i.i2334 to i64
  %arrayidx.i.i.i2336 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2335
  %531 = load i8, ptr %arrayidx.i.i.i2336, align 1, !tbaa !9
  %conv.i.i2337 = zext i8 %531 to i16
  %sub.i4.i2338 = add i32 %sub.i.i2332, 1
  %and.i6.i2339 = and i32 %sub3.i.i2333, %sub.i4.i2338
  %idxprom.i.i7.i2340 = sext i32 %and.i6.i2339 to i64
  %arrayidx.i.i8.i2341 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i7.i2340
  %532 = load i8, ptr %arrayidx.i.i8.i2341, align 1, !tbaa !9
  %conv.i9.i2342 = zext i8 %532 to i16
  %mul.i2343 = shl nuw i16 %conv.i9.i2342, 8
  %add.i2344 = or i16 %mul.i2343, %conv.i.i2337
  %conv2.i2345 = sext i16 %add.i2344 to i32
  %sub.i.i2346 = sub i32 %529, %add764
  %and.i.i2348 = and i32 %sub3.i.i2333, %sub.i.i2346
  %idxprom.i.i.i2349 = sext i32 %and.i.i2348 to i64
  %arrayidx.i.i.i2350 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2349
  %533 = load i8, ptr %arrayidx.i.i.i2350, align 1, !tbaa !9
  %conv.i.i2351 = zext i8 %533 to i16
  %sub.i4.i2352 = add i32 %sub.i.i2346, 1
  %and.i6.i2353 = and i32 %sub3.i.i2333, %sub.i4.i2352
  %idxprom.i.i7.i2354 = sext i32 %and.i6.i2353 to i64
  %arrayidx.i.i8.i2355 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i7.i2354
  %534 = load i8, ptr %arrayidx.i.i8.i2355, align 1, !tbaa !9
  %conv.i9.i2356 = zext i8 %534 to i16
  %mul.i2357 = shl nuw i16 %conv.i9.i2356, 8
  %add.i2358 = or i16 %mul.i2357, %conv.i.i2351
  %conv2.i2359 = sext i16 %add.i2358 to i32
  %reass.add2909 = sub i32 %conv2.i2345, %510
  %reass.mul2910 = shl i32 %reass.add2909, 1
  %add778 = add i32 %521, %501
  %sub786 = sub i32 %add778, %conv2.i2359
  %add789 = add i32 %sub786, %reass.mul2910
  %shr790 = ashr i32 %add789, 8
  %mul1.i2360 = mul i32 %shr790, 30005491
  %add3.i2363 = add i32 %mul2.i1635, 1820022484
  %add7.i2365 = add i32 %add3.i2363, %mul1.i2360
  %shr.i2366 = lshr i32 %add7.i2365, 9
  %shr10.i2367 = lshr i32 %shr790, 3
  %535 = xor i32 %shr10.i2367, %shr.i2366
  %536 = xor i32 %535, %shr12.i1641
  %537 = xor i32 %536, %add7.i2365
  %xor17.i2369 = xor i32 %537, 67108866
  %538 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i2370 = add nsw i32 %538, 1
  store i32 %inc.i2370, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i2371 = mul i32 %xor17.i2369, 987654323
  %add.i2372 = add i32 %mul.i2371, %538
  %or.i2373 = tail call i32 @llvm.fshl.i32(i32 %add.i2372, i32 %add.i2372, i32 16)
  %mul2.i2374 = mul i32 %or.i2373, 123456791
  %add3.i2375 = add i32 %mul2.i2374, %538
  %idxprom.i.i2376 = sext i32 %538 to i64
  %arrayidx.i.i2377 = getelementptr inbounds i32, ptr %339, i64 %idxprom.i.i2376
  store i32 %add3.i2375, ptr %arrayidx.i.i2377, align 4, !tbaa !25
  %539 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i2378 = add i32 %539, -5
  %540 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i2379 = add nsw i32 %540, -1
  %and.i.i2380 = and i32 %sub3.i.i2379, %sub.i.i2378
  %idxprom.i.i.i2381 = sext i32 %and.i.i2380 to i64
  %arrayidx.i.i.i2382 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2381
  %541 = load i8, ptr %arrayidx.i.i.i2382, align 1, !tbaa !9
  %conv.i.i2383 = zext i8 %541 to i16
  %sub.i4.i2384 = add i32 %539, -4
  %and.i6.i2385 = and i32 %sub3.i.i2379, %sub.i4.i2384
  %idxprom.i.i7.i2386 = sext i32 %and.i6.i2385 to i64
  %arrayidx.i.i8.i2387 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i7.i2386
  %542 = load i8, ptr %arrayidx.i.i8.i2387, align 1, !tbaa !9
  %conv.i9.i2388 = zext i8 %542 to i16
  %mul.i2389 = shl nuw i16 %conv.i9.i2388, 8
  %add.i2390 = or i16 %mul.i2389, %conv.i.i2383
  %conv2.i2391 = sext i16 %add.i2390 to i32
  %sub.i.i2392 = add i32 %539, -3
  %and.i.i2394 = and i32 %sub3.i.i2379, %sub.i.i2392
  %idxprom.i.i.i2395 = sext i32 %and.i.i2394 to i64
  %arrayidx.i.i.i2396 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2395
  %543 = load i8, ptr %arrayidx.i.i.i2396, align 1, !tbaa !9
  %conv.i.i2397 = zext i8 %543 to i16
  %sub.i4.i2398 = add i32 %539, -2
  %and.i6.i2399 = and i32 %sub3.i.i2379, %sub.i4.i2398
  %idxprom.i.i7.i2400 = sext i32 %and.i6.i2399 to i64
  %arrayidx.i.i8.i2401 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i7.i2400
  %544 = load i8, ptr %arrayidx.i.i8.i2401, align 1, !tbaa !9
  %conv.i9.i2402 = zext i8 %544 to i16
  %mul.i2403 = shl nuw i16 %conv.i9.i2402, 8
  %add.i2404 = or i16 %mul.i2403, %conv.i.i2397
  %conv2.i2405 = sext i16 %add.i2404 to i32
  %sub.i.i2406 = add i32 %539, -7
  %and.i.i2408 = and i32 %sub3.i.i2379, %sub.i.i2406
  %idxprom.i.i.i2409 = sext i32 %and.i.i2408 to i64
  %arrayidx.i.i.i2410 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2409
  %545 = load i8, ptr %arrayidx.i.i.i2410, align 1, !tbaa !9
  %conv.i.i2411 = zext i8 %545 to i16
  %sub.i4.i2412 = add i32 %539, -6
  %and.i6.i2413 = and i32 %sub3.i.i2379, %sub.i4.i2412
  %idxprom.i.i7.i2414 = sext i32 %and.i6.i2413 to i64
  %arrayidx.i.i8.i2415 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i7.i2414
  %546 = load i8, ptr %arrayidx.i.i8.i2415, align 1, !tbaa !9
  %conv.i9.i2416 = zext i8 %546 to i16
  %mul.i2417 = shl nuw i16 %conv.i9.i2416, 8
  %add.i2418 = or i16 %mul.i2417, %conv.i.i2411
  %conv2.i2419 = sext i16 %add.i2418 to i32
  %sub.i2420 = add nsw i32 %539, -1
  %and.i2422 = and i32 %sub3.i.i2379, %sub.i2420
  %idxprom.i.i2423 = sext i32 %and.i2422 to i64
  %arrayidx.i.i2424 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i2423
  %547 = load i8, ptr %arrayidx.i.i2424, align 1, !tbaa !9
  %conv.i2425 = zext i8 %547 to i32
  %.neg2898 = add i32 %501, %conv2.i2391
  %add794 = add i32 %.neg2898, %conv2.i2405
  %548 = add nsw i32 %conv.i2425, %conv2.i2419
  %add801 = sub i32 %add794, %548
  %549 = ashr i32 %add801, 1
  %550 = load i32, ptr @_ZZ8wavModelR5MixerE4scm1, align 8, !tbaa !74
  %551 = and i32 %550, -256
  %mul.i2426 = add nsw i32 %551, -256
  %and.i2428 = and i32 %mul.i2426, %549
  store i32 %and.i2428, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %sub.i.i2429 = sub i32 %539, %add746
  %and.i.i2431 = and i32 %sub3.i.i2379, %sub.i.i2429
  %idxprom.i.i.i2432 = sext i32 %and.i.i2431 to i64
  %arrayidx.i.i.i2433 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2432
  %552 = load i8, ptr %arrayidx.i.i.i2433, align 1, !tbaa !9
  %conv.i.i2434 = zext i8 %552 to i16
  %sub.i4.i2435 = add i32 %sub.i.i2429, 1
  %and.i6.i2436 = and i32 %sub3.i.i2379, %sub.i4.i2435
  %idxprom.i.i7.i2437 = sext i32 %and.i6.i2436 to i64
  %arrayidx.i.i8.i2438 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i7.i2437
  %553 = load i8, ptr %arrayidx.i.i8.i2438, align 1, !tbaa !9
  %conv.i9.i2439 = zext i8 %553 to i16
  %mul.i2440 = shl nuw i16 %conv.i9.i2439, 8
  %add.i2441 = or i16 %mul.i2440, %conv.i.i2434
  %conv2.i2442 = sext i16 %add.i2441 to i32
  %554 = load i8, ptr %arrayidx.i.i2424, align 1, !tbaa !9
  %conv.i2448 = zext i8 %554 to i32
  %sub806 = sub i32 %501, %conv.i2448
  %add809 = add i32 %sub806, %conv2.i2442
  %555 = ashr i32 %add809, 1
  %556 = load i32, ptr @_ZZ8wavModelR5MixerE4scm2, align 8, !tbaa !74
  %557 = and i32 %556, -256
  %mul.i2449 = add nsw i32 %557, -256
  %and.i2451 = and i32 %mul.i2449, %555
  store i32 %and.i2451, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %558 = load i8, ptr %arrayidx.i.i.i2433, align 1, !tbaa !9
  %conv.i.i2457 = zext i8 %558 to i16
  %559 = load i8, ptr %arrayidx.i.i8.i2438, align 1, !tbaa !9
  %conv.i9.i2462 = zext i8 %559 to i16
  %mul.i2463 = shl nuw i16 %conv.i9.i2462, 8
  %add.i2464 = or i16 %mul.i2463, %conv.i.i2457
  %conv2.i2465 = sext i16 %add.i2464 to i32
  %mul813 = shl nsw i32 %conv2.i2465, 1
  %sub.i.i2466 = sub i32 %539, %add764
  %and.i.i2468 = and i32 %sub3.i.i2379, %sub.i.i2466
  %idxprom.i.i.i2469 = sext i32 %and.i.i2468 to i64
  %arrayidx.i.i.i2470 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2469
  %560 = load i8, ptr %arrayidx.i.i.i2470, align 1, !tbaa !9
  %conv.i.i2471 = zext i8 %560 to i16
  %sub.i4.i2472 = add i32 %sub.i.i2466, 1
  %and.i6.i2473 = and i32 %sub3.i.i2379, %sub.i4.i2472
  %idxprom.i.i7.i2474 = sext i32 %and.i6.i2473 to i64
  %arrayidx.i.i8.i2475 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i7.i2474
  %561 = load i8, ptr %arrayidx.i.i8.i2475, align 1, !tbaa !9
  %conv.i9.i2476 = zext i8 %561 to i16
  %mul.i2477 = shl nuw i16 %conv.i9.i2476, 8
  %add.i2478 = or i16 %mul.i2477, %conv.i.i2471
  %conv2.i2479 = sext i16 %add.i2478 to i32
  %562 = load i8, ptr %arrayidx.i.i2424, align 1, !tbaa !9
  %conv.i2485 = zext i8 %562 to i32
  %563 = add i32 %501, %mul813
  %564 = add nsw i32 %conv.i2485, %conv2.i2479
  %add822 = sub i32 %563, %564
  %565 = load i32, ptr @_ZZ8wavModelR5MixerE4scm3, align 8, !tbaa !74
  %566 = and i32 %565, -256
  %mul.i2486 = add nsw i32 %566, -256
  %and.i2488 = and i32 %mul.i2486, %add822
  store i32 %and.i2488, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %567 = load i8, ptr %arrayidx.i.i.i2433, align 1, !tbaa !9
  %conv.i.i2494 = zext i8 %567 to i16
  %568 = load i8, ptr %arrayidx.i.i8.i2438, align 1, !tbaa !9
  %conv.i9.i2499 = zext i8 %568 to i16
  %mul.i2500 = shl nuw i16 %conv.i9.i2499, 8
  %add.i2501 = or i16 %mul.i2500, %conv.i.i2494
  %conv2.i2502 = sext i16 %add.i2501 to i32
  %mul826 = mul nsw i32 %conv2.i2502, 3
  %569 = load i8, ptr %arrayidx.i.i.i2470, align 1, !tbaa !9
  %conv.i.i2508 = zext i8 %569 to i16
  %570 = load i8, ptr %arrayidx.i.i8.i2475, align 1, !tbaa !9
  %conv.i9.i2513 = zext i8 %570 to i16
  %mul.i2514 = shl nuw i16 %conv.i9.i2513, 8
  %add.i2515 = or i16 %mul.i2514, %conv.i.i2508
  %conv2.i2516 = sext i16 %add.i2515 to i32
  %mul830.neg = mul i32 %conv2.i2516, 2147483645
  %add833.neg = xor i32 %mul673, -1
  %sub.i.i2517 = add i32 %539, %add833.neg
  %and.i.i2519 = and i32 %sub3.i.i2379, %sub.i.i2517
  %idxprom.i.i.i2520 = sext i32 %and.i.i2519 to i64
  %arrayidx.i.i.i2521 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2520
  %571 = load i8, ptr %arrayidx.i.i.i2521, align 1, !tbaa !9
  %conv.i.i2522 = zext i8 %571 to i16
  %sub.i4.i2523 = sub i32 %539, %mul673
  %and.i6.i2524 = and i32 %sub3.i.i2379, %sub.i4.i2523
  %idxprom.i.i7.i2525 = sext i32 %and.i6.i2524 to i64
  %arrayidx.i.i8.i2526 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i7.i2525
  %572 = load i8, ptr %arrayidx.i.i8.i2526, align 1, !tbaa !9
  %conv.i9.i2527 = zext i8 %572 to i16
  %mul.i2528 = shl nuw i16 %conv.i9.i2527, 8
  %add.i2529 = or i16 %mul.i2528, %conv.i.i2522
  %conv2.i2530 = sext i16 %add.i2529 to i32
  %573 = load i8, ptr %arrayidx.i.i2424, align 1, !tbaa !9
  %conv.i2536 = zext i8 %573 to i32
  %sub831 = sub nsw i32 %mul826, %conv.i2536
  %add835 = add i32 %sub831, %mul830.neg
  %sub837 = add i32 %add835, %conv2.i2530
  %574 = shl i32 %sub837, 1
  %575 = load i32, ptr @_ZZ8wavModelR5MixerE4scm4, align 8, !tbaa !74
  %576 = and i32 %575, -256
  %mul.i2537 = add nsw i32 %576, -256
  %and.i2539 = and i32 %mul.i2537, %574
  store i32 %and.i2539, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm4, i64 0, i32 1), align 8, !tbaa !112
  %reass.sub = sub i32 %539, %88
  %sub.i.i2540 = add i32 %reass.sub, 1
  %and.i.i2542 = and i32 %sub3.i.i2379, %sub.i.i2540
  %idxprom.i.i.i2543 = sext i32 %and.i.i2542 to i64
  %arrayidx.i.i.i2544 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2543
  %577 = load i8, ptr %arrayidx.i.i.i2544, align 1, !tbaa !9
  %conv.i.i2545 = zext i8 %577 to i16
  %sub.i4.i2546 = add i32 %reass.sub, 2
  %and.i6.i2547 = and i32 %sub3.i.i2379, %sub.i4.i2546
  %idxprom.i.i7.i2548 = sext i32 %and.i6.i2547 to i64
  %arrayidx.i.i8.i2549 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i7.i2548
  %578 = load i8, ptr %arrayidx.i.i8.i2549, align 1, !tbaa !9
  %conv.i9.i2550 = zext i8 %578 to i16
  %mul.i2551 = shl nuw i16 %conv.i9.i2550, 8
  %add.i2552 = or i16 %mul.i2551, %conv.i.i2545
  %conv2.i2553 = sext i16 %add.i2552 to i32
  %579 = load i8, ptr %arrayidx.i.i.i2433, align 1, !tbaa !9
  %conv.i.i2559 = zext i8 %579 to i16
  %580 = load i8, ptr %arrayidx.i.i8.i2438, align 1, !tbaa !9
  %conv.i9.i2564 = zext i8 %580 to i16
  %mul.i2565 = shl nuw i16 %conv.i9.i2564, 8
  %add.i2566 = or i16 %mul.i2565, %conv.i.i2559
  %conv2.i2567 = sext i16 %add.i2566 to i32
  %581 = load i8, ptr %arrayidx.i.i2424, align 1, !tbaa !9
  %conv.i2573 = zext i8 %581 to i32
  %mul848 = shl nsw i32 %501, 1
  %add843 = add i32 %mul848, %conv2.i2553
  %sub845 = sub i32 %add843, %conv.i2573
  %add849 = add i32 %sub845, %conv2.i2567
  %582 = ashr i32 %add849, 2
  %583 = load i32, ptr @_ZZ8wavModelR5MixerE4scm5, align 8, !tbaa !74
  %584 = and i32 %583, -256
  %mul.i2574 = add nsw i32 %584, -256
  %and.i2576 = and i32 %mul.i2574, %582
  store i32 %and.i2576, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %585 = load i8, ptr %arrayidx.i.i.i2433, align 1, !tbaa !9
  %conv.i.i2582 = zext i8 %585 to i16
  %586 = load i8, ptr %arrayidx.i.i8.i2438, align 1, !tbaa !9
  %conv.i9.i2587 = zext i8 %586 to i16
  %mul.i2588 = shl nuw i16 %conv.i9.i2587, 8
  %add.i2589 = or i16 %mul.i2588, %conv.i.i2582
  %conv2.i2590 = sext i16 %add.i2589 to i32
  %587 = load i8, ptr %arrayidx.i.i.i2470, align 1, !tbaa !9
  %conv.i.i2596 = zext i8 %587 to i16
  %588 = load i8, ptr %arrayidx.i.i8.i2475, align 1, !tbaa !9
  %conv.i9.i2601 = zext i8 %588 to i16
  %mul.i2602 = shl nuw i16 %conv.i9.i2601, 8
  %add.i2603 = or i16 %mul.i2602, %conv.i.i2596
  %conv2.i2604 = sext i16 %add.i2603 to i32
  %mul857.neg = mul i32 %conv2.i2604, 2147483642
  %589 = load i8, ptr %arrayidx.i.i.i2521, align 1, !tbaa !9
  %conv.i.i2610 = zext i8 %589 to i16
  %590 = load i8, ptr %arrayidx.i.i8.i2526, align 1, !tbaa !9
  %conv.i9.i2615 = zext i8 %590 to i16
  %mul.i2616 = shl nuw i16 %conv.i9.i2615, 8
  %add.i2617 = or i16 %mul.i2616, %conv.i.i2610
  %conv2.i2618 = sext i16 %add.i2617 to i32
  %add865.neg = xor i32 %mul674, -1
  %sub.i.i2619 = add i32 %539, %add865.neg
  %and.i.i2621 = and i32 %sub3.i.i2379, %sub.i.i2619
  %idxprom.i.i.i2622 = sext i32 %and.i.i2621 to i64
  %arrayidx.i.i.i2623 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2622
  %591 = load i8, ptr %arrayidx.i.i.i2623, align 1, !tbaa !9
  %conv.i.i2624 = zext i8 %591 to i16
  %sub.i4.i2625 = sub i32 %539, %mul674
  %and.i6.i2626 = and i32 %sub3.i.i2379, %sub.i4.i2625
  %idxprom.i.i7.i2627 = sext i32 %and.i6.i2626 to i64
  %arrayidx.i.i8.i2628 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i7.i2627
  %592 = load i8, ptr %arrayidx.i.i8.i2628, align 1, !tbaa !9
  %conv.i9.i2629 = zext i8 %592 to i16
  %mul.i2630 = shl nuw i16 %conv.i9.i2629, 8
  %add.i2631 = or i16 %mul.i2630, %conv.i.i2624
  %conv2.i2632 = sext i16 %add.i2631 to i32
  %593 = load i8, ptr %arrayidx.i.i2424, align 1, !tbaa !9
  %conv.i2638 = zext i8 %593 to i32
  %reass.add = add nsw i32 %conv2.i2618, %conv2.i2590
  %594 = add nsw i32 %conv.i2638, %conv2.i2632
  %add863 = sub i32 %mul857.neg, %594
  %595 = shl nsw i32 %reass.add, 3
  %596 = shl i32 %add863, 1
  %597 = add i32 %595, %596
  %598 = load i32, ptr @_ZZ8wavModelR5MixerE4scm7, align 8, !tbaa !74
  %599 = and i32 %598, -256
  %mul.i2639 = add nsw i32 %599, -256
  %and.i2641 = and i32 %mul.i2639, %597
  store i32 %and.i2641, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm7, i64 0, i32 1), align 8, !tbaa !112
  %600 = load i8, ptr %arrayidx.i.i.i2433, align 1, !tbaa !9
  %conv.i.i2647 = zext i8 %600 to i16
  %601 = load i8, ptr %arrayidx.i.i8.i2438, align 1, !tbaa !9
  %conv.i9.i2652 = zext i8 %601 to i16
  %mul.i2653 = shl nuw i16 %conv.i9.i2652, 8
  %add.i2654 = or i16 %mul.i2653, %conv.i.i2647
  %conv2.i2655 = sext i16 %add.i2654 to i32
  %602 = load i8, ptr %arrayidx.i.i.i2470, align 1, !tbaa !9
  %conv.i.i2661 = zext i8 %602 to i16
  %603 = load i8, ptr %arrayidx.i.i8.i2475, align 1, !tbaa !9
  %conv.i9.i2666 = zext i8 %603 to i16
  %mul.i2667 = shl nuw i16 %conv.i9.i2666, 8
  %add.i2668 = or i16 %mul.i2667, %conv.i.i2661
  %conv2.i2669 = sext i16 %add.i2668 to i32
  %604 = load i8, ptr %arrayidx.i.i.i2521, align 1, !tbaa !9
  %conv.i.i2675 = zext i8 %604 to i16
  %605 = load i8, ptr %arrayidx.i.i8.i2526, align 1, !tbaa !9
  %conv.i9.i2680 = zext i8 %605 to i16
  %mul.i2681 = shl nuw i16 %conv.i9.i2680, 8
  %add.i2682 = or i16 %mul.i2681, %conv.i.i2675
  %conv2.i2683 = sext i16 %add.i2682 to i32
  %606 = load i8, ptr %arrayidx.i.i.i2623, align 1, !tbaa !9
  %conv.i.i2689 = zext i8 %606 to i16
  %607 = load i8, ptr %arrayidx.i.i8.i2628, align 1, !tbaa !9
  %conv.i9.i2694 = zext i8 %607 to i16
  %mul.i2695 = shl nuw i16 %conv.i9.i2694, 8
  %add.i2696 = or i16 %mul.i2695, %conv.i.i2689
  %conv2.i2697 = sext i16 %add.i2696 to i32
  %add890.neg = xor i32 %mul682, -1
  %sub.i.i2698 = add i32 %539, %add890.neg
  %and.i.i2700 = and i32 %sub3.i.i2379, %sub.i.i2698
  %idxprom.i.i.i2701 = sext i32 %and.i.i2700 to i64
  %arrayidx.i.i.i2702 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i.i2701
  %608 = load i8, ptr %arrayidx.i.i.i2702, align 1, !tbaa !9
  %conv.i.i2703 = zext i8 %608 to i16
  %sub.i4.i2704 = sub i32 %539, %mul682
  %and.i6.i2705 = and i32 %sub3.i.i2379, %sub.i4.i2704
  %idxprom.i.i7.i2706 = sext i32 %and.i6.i2705 to i64
  %arrayidx.i.i8.i2707 = getelementptr inbounds i8, ptr %333, i64 %idxprom.i.i7.i2706
  %609 = load i8, ptr %arrayidx.i.i8.i2707, align 1, !tbaa !9
  %conv.i9.i2708 = zext i8 %609 to i16
  %mul.i2709 = shl nuw i16 %conv.i9.i2708, 8
  %add.i2710 = or i16 %mul.i2709, %conv.i.i2703
  %conv2.i2711 = sext i16 %add.i2710 to i32
  %610 = load i8, ptr %arrayidx.i.i2424, align 1, !tbaa !9
  %conv.i2717 = zext i8 %610 to i32
  %reass.add2903 = sub nsw i32 %conv2.i2683, %conv2.i2669
  %reass.mul2904 = mul nsw i32 %reass.add2903, 10
  %reass.add2906 = sub nsw i32 %conv2.i2655, %conv2.i2697
  %reass.mul2907 = mul nsw i32 %reass.add2906, 5
  %sub888 = sub i32 %501, %conv.i2717
  %add892 = add i32 %sub888, %reass.mul2904
  %sub894 = add i32 %add892, %conv2.i2711
  %add897 = add i32 %sub894, %reass.mul2907
  %611 = ashr i32 %add897, 1
  %612 = load i32, ptr @_ZZ8wavModelR5MixerE4scm8, align 8, !tbaa !74
  %613 = and i32 %612, -256
  %mul.i2718 = add nsw i32 %613, -256
  %and.i2720 = and i32 %mul.i2718, %611
  store i32 %and.i2720, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm8, i64 0, i32 1), align 8, !tbaa !112
  br label %if.end900

if.end900:                                        ; preds = %for.end553, %_Z1ciiiii.exit2211, %if.end158
  %614 = load i32, ptr @y, align 4, !tbaa !25
  %shl.i2721 = shl i32 %614, 16
  %615 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %616 = load i16, ptr %615, align 2, !tbaa !31
  %conv.i2722 = zext i16 %616 to i32
  %sub.i2723 = or i32 %shl.i2721, 64
  %add.i2724 = sub i32 %sub.i2723, %conv.i2722
  %617 = lshr i32 %add.i2724, 7
  %618 = trunc i32 %617 to i16
  %conv7.i = add i16 %616, %618
  store i16 %conv7.i, ptr %615, align 2, !tbaa !31
  %619 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %620 = load i32, ptr @c0, align 4, !tbaa !25
  %add8.i = add nsw i32 %620, %619
  %621 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i2726 = sext i32 %add8.i to i64
  %arrayidx.i.i2727 = getelementptr inbounds i16, ptr %621, i64 %idxprom.i.i2726
  store ptr %arrayidx.i.i2727, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %622 = load i16, ptr %arrayidx.i.i2727, align 2, !tbaa !31
  %623 = lshr i16 %622, 4
  %624 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %idxprom.i.i.i2728 = zext i16 %623 to i64
  %arrayidx.i.i.i2729 = getelementptr inbounds i16, ptr %624, i64 %idxprom.i.i.i2728
  %625 = load i16, ptr %arrayidx.i.i.i2729, align 2, !tbaa !31
  %nx.i.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 8
  %626 = load i32, ptr %nx.i.i, align 8, !tbaa !64
  %inc.i.i = add nsw i32 %626, 1
  %data.i.i.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 3, i32 3
  %627 = load ptr, ptr %data.i.i.i, align 8, !tbaa !59
  %idxprom.i.i15.i = sext i32 %626 to i64
  %arrayidx.i.i16.i = getelementptr inbounds i16, ptr %627, i64 %idxprom.i.i15.i
  store i16 %625, ptr %arrayidx.i.i16.i, align 2, !tbaa !31
  %628 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %629 = load i16, ptr %628, align 2, !tbaa !31
  %conv.i2731 = zext i16 %629 to i32
  %add.i2733 = sub i32 %sub.i2723, %conv.i2731
  %630 = lshr i32 %add.i2733, 7
  %631 = trunc i32 %630 to i16
  %conv7.i2735 = add i16 %629, %631
  store i16 %conv7.i2735, ptr %628, align 2, !tbaa !31
  %632 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %add8.i2736 = add nsw i32 %632, %620
  %633 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i2737 = sext i32 %add8.i2736 to i64
  %arrayidx.i.i2738 = getelementptr inbounds i16, ptr %633, i64 %idxprom.i.i2737
  store ptr %arrayidx.i.i2738, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %634 = load i16, ptr %arrayidx.i.i2738, align 2, !tbaa !31
  %635 = lshr i16 %634, 4
  %idxprom.i.i.i2739 = zext i16 %635 to i64
  %arrayidx.i.i.i2740 = getelementptr inbounds i16, ptr %624, i64 %idxprom.i.i.i2739
  %636 = load i16, ptr %arrayidx.i.i.i2740, align 2, !tbaa !31
  %inc.i.i2742 = add nsw i32 %626, 2
  %idxprom.i.i15.i2744 = sext i32 %inc.i.i to i64
  %arrayidx.i.i16.i2745 = getelementptr inbounds i16, ptr %627, i64 %idxprom.i.i15.i2744
  store i16 %636, ptr %arrayidx.i.i16.i2745, align 2, !tbaa !31
  %637 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %638 = load i16, ptr %637, align 2, !tbaa !31
  %conv.i2747 = zext i16 %638 to i32
  %add.i2749 = sub i32 %sub.i2723, %conv.i2747
  %639 = lshr i32 %add.i2749, 7
  %640 = trunc i32 %639 to i16
  %conv7.i2751 = add i16 %638, %640
  store i16 %conv7.i2751, ptr %637, align 2, !tbaa !31
  %641 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %add8.i2752 = add nsw i32 %641, %620
  %642 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i2753 = sext i32 %add8.i2752 to i64
  %arrayidx.i.i2754 = getelementptr inbounds i16, ptr %642, i64 %idxprom.i.i2753
  store ptr %arrayidx.i.i2754, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %643 = load i16, ptr %arrayidx.i.i2754, align 2, !tbaa !31
  %644 = lshr i16 %643, 4
  %idxprom.i.i.i2755 = zext i16 %644 to i64
  %arrayidx.i.i.i2756 = getelementptr inbounds i16, ptr %624, i64 %idxprom.i.i.i2755
  %645 = load i16, ptr %arrayidx.i.i.i2756, align 2, !tbaa !31
  %inc.i.i2758 = add nsw i32 %626, 3
  %idxprom.i.i15.i2760 = sext i32 %inc.i.i2742 to i64
  %arrayidx.i.i16.i2761 = getelementptr inbounds i16, ptr %627, i64 %idxprom.i.i15.i2760
  store i16 %645, ptr %arrayidx.i.i16.i2761, align 2, !tbaa !31
  %646 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %647 = load i16, ptr %646, align 2, !tbaa !31
  %conv.i2763 = zext i16 %647 to i32
  %add.i2765 = sub i32 %sub.i2723, %conv.i2763
  %648 = lshr i32 %add.i2765, 7
  %649 = trunc i32 %648 to i16
  %conv7.i2767 = add i16 %647, %649
  store i16 %conv7.i2767, ptr %646, align 2, !tbaa !31
  %650 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm4, i64 0, i32 1), align 8, !tbaa !112
  %add8.i2768 = add nsw i32 %650, %620
  %651 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm4, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i2769 = sext i32 %add8.i2768 to i64
  %arrayidx.i.i2770 = getelementptr inbounds i16, ptr %651, i64 %idxprom.i.i2769
  store ptr %arrayidx.i.i2770, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %652 = load i16, ptr %arrayidx.i.i2770, align 2, !tbaa !31
  %653 = lshr i16 %652, 4
  %idxprom.i.i.i2771 = zext i16 %653 to i64
  %arrayidx.i.i.i2772 = getelementptr inbounds i16, ptr %624, i64 %idxprom.i.i.i2771
  %654 = load i16, ptr %arrayidx.i.i.i2772, align 2, !tbaa !31
  %inc.i.i2774 = add nsw i32 %626, 4
  %idxprom.i.i15.i2776 = sext i32 %inc.i.i2758 to i64
  %arrayidx.i.i16.i2777 = getelementptr inbounds i16, ptr %627, i64 %idxprom.i.i15.i2776
  store i16 %654, ptr %arrayidx.i.i16.i2777, align 2, !tbaa !31
  %655 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %656 = load i16, ptr %655, align 2, !tbaa !31
  %conv.i2779 = zext i16 %656 to i32
  %add.i2781 = sub i32 %sub.i2723, %conv.i2779
  %657 = lshr i32 %add.i2781, 7
  %658 = trunc i32 %657 to i16
  %conv7.i2783 = add i16 %656, %658
  store i16 %conv7.i2783, ptr %655, align 2, !tbaa !31
  %659 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %add8.i2784 = add nsw i32 %659, %620
  %660 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm5, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i2785 = sext i32 %add8.i2784 to i64
  %arrayidx.i.i2786 = getelementptr inbounds i16, ptr %660, i64 %idxprom.i.i2785
  store ptr %arrayidx.i.i2786, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %661 = load i16, ptr %arrayidx.i.i2786, align 2, !tbaa !31
  %662 = lshr i16 %661, 4
  %idxprom.i.i.i2787 = zext i16 %662 to i64
  %arrayidx.i.i.i2788 = getelementptr inbounds i16, ptr %624, i64 %idxprom.i.i.i2787
  %663 = load i16, ptr %arrayidx.i.i.i2788, align 2, !tbaa !31
  %inc.i.i2790 = add nsw i32 %626, 5
  %idxprom.i.i15.i2792 = sext i32 %inc.i.i2774 to i64
  %arrayidx.i.i16.i2793 = getelementptr inbounds i16, ptr %627, i64 %idxprom.i.i15.i2792
  store i16 %663, ptr %arrayidx.i.i16.i2793, align 2, !tbaa !31
  %664 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %665 = load i16, ptr %664, align 2, !tbaa !31
  %conv.i2795 = zext i16 %665 to i32
  %add.i2797 = sub i32 %sub.i2723, %conv.i2795
  %666 = lshr i32 %add.i2797, 7
  %667 = trunc i32 %666 to i16
  %conv7.i2799 = add i16 %665, %667
  store i16 %conv7.i2799, ptr %664, align 2, !tbaa !31
  %668 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm6, i64 0, i32 1), align 8, !tbaa !112
  %add8.i2800 = add nsw i32 %668, %620
  %669 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm6, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i2801 = sext i32 %add8.i2800 to i64
  %arrayidx.i.i2802 = getelementptr inbounds i16, ptr %669, i64 %idxprom.i.i2801
  store ptr %arrayidx.i.i2802, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %670 = load i16, ptr %arrayidx.i.i2802, align 2, !tbaa !31
  %671 = lshr i16 %670, 4
  %idxprom.i.i.i2803 = zext i16 %671 to i64
  %arrayidx.i.i.i2804 = getelementptr inbounds i16, ptr %624, i64 %idxprom.i.i.i2803
  %672 = load i16, ptr %arrayidx.i.i.i2804, align 2, !tbaa !31
  %inc.i.i2806 = add nsw i32 %626, 6
  %idxprom.i.i15.i2808 = sext i32 %inc.i.i2790 to i64
  %arrayidx.i.i16.i2809 = getelementptr inbounds i16, ptr %627, i64 %idxprom.i.i15.i2808
  store i16 %672, ptr %arrayidx.i.i16.i2809, align 2, !tbaa !31
  %673 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %674 = load i16, ptr %673, align 2, !tbaa !31
  %conv.i2811 = zext i16 %674 to i32
  %add.i2813 = sub i32 %sub.i2723, %conv.i2811
  %675 = lshr i32 %add.i2813, 7
  %676 = trunc i32 %675 to i16
  %conv7.i2815 = add i16 %674, %676
  store i16 %conv7.i2815, ptr %673, align 2, !tbaa !31
  %677 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm7, i64 0, i32 1), align 8, !tbaa !112
  %add8.i2816 = add nsw i32 %677, %620
  %678 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm7, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i2817 = sext i32 %add8.i2816 to i64
  %arrayidx.i.i2818 = getelementptr inbounds i16, ptr %678, i64 %idxprom.i.i2817
  store ptr %arrayidx.i.i2818, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %679 = load i16, ptr %arrayidx.i.i2818, align 2, !tbaa !31
  %680 = lshr i16 %679, 4
  %idxprom.i.i.i2819 = zext i16 %680 to i64
  %arrayidx.i.i.i2820 = getelementptr inbounds i16, ptr %624, i64 %idxprom.i.i.i2819
  %681 = load i16, ptr %arrayidx.i.i.i2820, align 2, !tbaa !31
  %inc.i.i2822 = add nsw i32 %626, 7
  %idxprom.i.i15.i2824 = sext i32 %inc.i.i2806 to i64
  %arrayidx.i.i16.i2825 = getelementptr inbounds i16, ptr %627, i64 %idxprom.i.i15.i2824
  store i16 %681, ptr %arrayidx.i.i16.i2825, align 2, !tbaa !31
  %682 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm8, i64 0, i32 2), align 8, !tbaa !114
  %683 = load i16, ptr %682, align 2, !tbaa !31
  %conv.i2827 = zext i16 %683 to i32
  %add.i2829 = sub i32 %sub.i2723, %conv.i2827
  %684 = lshr i32 %add.i2829, 7
  %685 = trunc i32 %684 to i16
  %conv7.i2831 = add i16 %683, %685
  store i16 %conv7.i2831, ptr %682, align 2, !tbaa !31
  %686 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm8, i64 0, i32 1), align 8, !tbaa !112
  %add8.i2832 = add nsw i32 %686, %620
  %687 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm8, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %idxprom.i.i2833 = sext i32 %add8.i2832 to i64
  %arrayidx.i.i2834 = getelementptr inbounds i16, ptr %687, i64 %idxprom.i.i2833
  store ptr %arrayidx.i.i2834, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm8, i64 0, i32 2), align 8, !tbaa !114
  %688 = load i16, ptr %arrayidx.i.i2834, align 2, !tbaa !31
  %689 = lshr i16 %688, 4
  %idxprom.i.i.i2835 = zext i16 %689 to i64
  %arrayidx.i.i.i2836 = getelementptr inbounds i16, ptr %624, i64 %idxprom.i.i.i2835
  %690 = load i16, ptr %arrayidx.i.i.i2836, align 2, !tbaa !31
  %inc.i.i2838 = add nsw i32 %626, 8
  store i32 %inc.i.i2838, ptr %nx.i.i, align 8, !tbaa !64
  %idxprom.i.i15.i2840 = sext i32 %inc.i.i2822 to i64
  %arrayidx.i.i16.i2841 = getelementptr inbounds i16, ptr %627, i64 %idxprom.i.i15.i2840
  store i16 %690, ptr %arrayidx.i.i16.i2841, align 2, !tbaa !31
  %691 = load i32, ptr @bpos, align 4, !tbaa !25
  %692 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i2842 = add nsw i32 %692, -1
  %693 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i2843 = add nsw i32 %693, -1
  %and.i.i2844 = and i32 %sub3.i.i2843, %sub.i.i2842
  %694 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i2845 = sext i32 %and.i.i2844 to i64
  %arrayidx.i.i.i2846 = getelementptr inbounds i8, ptr %694, i64 %idxprom.i.i.i2845
  %695 = load i8, ptr %arrayidx.i.i.i2846, align 1, !tbaa !9
  %conv.i.i2847 = zext i8 %695 to i32
  %call2.i = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8wavModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %620, i32 noundef %691, i32 noundef %conv.i.i2847, i32 noundef %614)
  %696 = load i32, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  %shl902 = shl i32 %696, 8
  %697 = load i32, ptr @_ZZ8wavModelR5MixerE4bits, align 4, !tbaa !25
  %or903 = or i32 %shl902, %697
  br label %cleanup

cleanup:                                          ; preds = %if.end900, %if.then157
  %retval.0 = phi i32 [ 0, %if.then157 ], [ %or903, %if.end900 ]
  call void @llvm.lifetime.end.p0(i64 19208, ptr nonnull %L) #39
  call void @llvm.lifetime.end.p0(i64 38416, ptr nonnull %F) #39
  ret i32 %retval.0

ehcleanup:                                        ; preds = %lpad59, %lpad52, %lpad45, %lpad38, %lpad31, %lpad24, %lpad17, %lpad10, %lpad
  %_ZGVZ8wavModelR5MixerE2cm.sink = phi ptr [ @_ZGVZ8wavModelR5MixerE2cm, %lpad59 ], [ @_ZGVZ8wavModelR5MixerE4scm8, %lpad52 ], [ @_ZGVZ8wavModelR5MixerE4scm7, %lpad45 ], [ @_ZGVZ8wavModelR5MixerE4scm6, %lpad38 ], [ @_ZGVZ8wavModelR5MixerE4scm5, %lpad31 ], [ @_ZGVZ8wavModelR5MixerE4scm4, %lpad24 ], [ @_ZGVZ8wavModelR5MixerE4scm3, %lpad17 ], [ @_ZGVZ8wavModelR5MixerE4scm2, %lpad10 ], [ @_ZGVZ8wavModelR5MixerE4scm1, %lpad ]
  %.pn = phi { ptr, i32 } [ %47, %lpad59 ], [ %46, %lpad52 ], [ %45, %lpad45 ], [ %44, %lpad38 ], [ %43, %lpad31 ], [ %42, %lpad24 ], [ %41, %lpad17 ], [ %40, %lpad10 ], [ %39, %lpad ]
  tail call void @__cxa_guard_abort(ptr nonnull %_ZGVZ8wavModelR5MixerE2cm.sink) #39
  call void @llvm.lifetime.end.p0(i64 19208, ptr nonnull %L) #39
  call void @llvm.lifetime.end.p0(i64 38416, ptr nonnull %F) #39
  resume { ptr, i32 } %.pn
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_Z1Xii(i32 noundef %i, i32 noundef %j) local_unnamed_addr #17 comdat {
entry:
  %0 = load i32, ptr @_ZL5wmode, align 4, !tbaa !25
  switch i32 %0, label %if.else27 [
    i32 18, label %if.then
    i32 17, label %if.then9
    i32 10, label %if.then15
  ]

if.then:                                          ; preds = %entry
  %1 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %cmp1.not = icmp slt i32 %1, %i
  %2 = add i32 %j, %i
  br i1 %cmp1.not, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.then
  %shl = shl i32 %2, 2
  %3 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i = sub i32 %3, %shl
  %4 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i = add nsw i32 %4, -1
  %and.i.i = and i32 %sub3.i.i, %sub.i.i
  %5 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i = sext i32 %and.i.i to i64
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %5, i64 %idxprom.i.i.i
  %6 = load i8, ptr %arrayidx.i.i.i, align 1, !tbaa !9
  %conv.i.i = zext i8 %6 to i16
  %sub.i4.i = add i32 %sub.i.i, 1
  %and.i6.i = and i32 %sub3.i.i, %sub.i4.i
  %idxprom.i.i7.i = sext i32 %and.i6.i to i64
  %arrayidx.i.i8.i = getelementptr inbounds i8, ptr %5, i64 %idxprom.i.i7.i
  %7 = load i8, ptr %arrayidx.i.i8.i, align 1, !tbaa !9
  %conv.i9.i = zext i8 %7 to i16
  %mul.i = shl nuw i16 %conv.i9.i, 8
  %add.i = or i16 %mul.i, %conv.i.i
  %conv2.i = sext i16 %add.i to i32
  br label %return

if.else:                                          ; preds = %if.then
  %sub.neg = sub i32 %1, %2
  %shl4.neg = shl i32 %sub.neg, 2
  %sub5.neg = or i32 %shl4.neg, 2
  %8 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i44 = add i32 %sub5.neg, %8
  %9 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i45 = add nsw i32 %9, -1
  %and.i.i46 = and i32 %sub3.i.i45, %sub.i.i44
  %10 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i47 = sext i32 %and.i.i46 to i64
  %arrayidx.i.i.i48 = getelementptr inbounds i8, ptr %10, i64 %idxprom.i.i.i47
  %11 = load i8, ptr %arrayidx.i.i.i48, align 1, !tbaa !9
  %conv.i.i49 = zext i8 %11 to i16
  %sub.i4.i50 = add i32 %sub.i.i44, 1
  %and.i6.i51 = and i32 %sub3.i.i45, %sub.i4.i50
  %idxprom.i.i7.i52 = sext i32 %and.i6.i51 to i64
  %arrayidx.i.i8.i53 = getelementptr inbounds i8, ptr %10, i64 %idxprom.i.i7.i52
  %12 = load i8, ptr %arrayidx.i.i8.i53, align 1, !tbaa !9
  %conv.i9.i54 = zext i8 %12 to i16
  %mul.i55 = shl nuw i16 %conv.i9.i54, 8
  %add.i56 = or i16 %mul.i55, %conv.i.i49
  %conv2.i57 = sext i16 %add.i56 to i32
  br label %return

if.then9:                                         ; preds = %entry
  %add10 = add nsw i32 %j, %i
  %shl11 = shl i32 %add10, 1
  %13 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i58 = sub i32 %13, %shl11
  %14 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i59 = add nsw i32 %14, -1
  %and.i.i60 = and i32 %sub3.i.i59, %sub.i.i58
  %15 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i61 = sext i32 %and.i.i60 to i64
  %arrayidx.i.i.i62 = getelementptr inbounds i8, ptr %15, i64 %idxprom.i.i.i61
  %16 = load i8, ptr %arrayidx.i.i.i62, align 1, !tbaa !9
  %conv.i.i63 = zext i8 %16 to i16
  %sub.i4.i64 = add i32 %sub.i.i58, 1
  %and.i6.i65 = and i32 %sub3.i.i59, %sub.i4.i64
  %idxprom.i.i7.i66 = sext i32 %and.i6.i65 to i64
  %arrayidx.i.i8.i67 = getelementptr inbounds i8, ptr %15, i64 %idxprom.i.i7.i66
  %17 = load i8, ptr %arrayidx.i.i8.i67, align 1, !tbaa !9
  %conv.i9.i68 = zext i8 %17 to i16
  %mul.i69 = shl nuw i16 %conv.i9.i68, 8
  %add.i70 = or i16 %mul.i69, %conv.i.i63
  %conv2.i71 = sext i16 %add.i70 to i32
  br label %return

if.then15:                                        ; preds = %entry
  %18 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %cmp16.not = icmp slt i32 %18, %i
  %19 = add i32 %j, %i
  br i1 %cmp16.not, label %if.else21, label %if.then17

if.then17:                                        ; preds = %if.then15
  %shl19 = shl i32 %19, 1
  %20 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i = sub nsw i32 %20, %shl19
  %21 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i = add nsw i32 %21, -1
  %and.i = and i32 %sub3.i, %sub.i
  %22 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %22, i64 %idxprom.i.i
  %23 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %conv.i = zext i8 %23 to i32
  br label %return

if.else21:                                        ; preds = %if.then15
  %sub23.neg = sub i32 %18, %19
  %shl24.neg = shl i32 %sub23.neg, 1
  %sub25.neg = or i32 %shl24.neg, 1
  %24 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i72 = add i32 %sub25.neg, %24
  %25 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i73 = add nsw i32 %25, -1
  %and.i74 = and i32 %sub3.i73, %sub.i72
  %26 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i75 = sext i32 %and.i74 to i64
  %arrayidx.i.i76 = getelementptr inbounds i8, ptr %26, i64 %idxprom.i.i75
  %27 = load i8, ptr %arrayidx.i.i76, align 1, !tbaa !9
  %conv.i77 = zext i8 %27 to i32
  br label %return

if.else27:                                        ; preds = %entry
  %28 = load i32, ptr @pos, align 4, !tbaa !25
  %29 = add i32 %j, %i
  %sub.i78 = sub i32 %28, %29
  %30 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i79 = add nsw i32 %30, -1
  %and.i80 = and i32 %sub3.i79, %sub.i78
  %31 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i81 = sext i32 %and.i80 to i64
  %arrayidx.i.i82 = getelementptr inbounds i8, ptr %31, i64 %idxprom.i.i81
  %32 = load i8, ptr %arrayidx.i.i82, align 1, !tbaa !9
  %conv.i83 = zext i8 %32 to i32
  br label %return

return:                                           ; preds = %if.else27, %if.else21, %if.then17, %if.then9, %if.else, %if.then2
  %retval.0 = phi i32 [ %conv2.i, %if.then2 ], [ %conv2.i57, %if.else ], [ %conv2.i71, %if.then9 ], [ %conv.i, %if.then17 ], [ %conv.i77, %if.else21 ], [ %conv.i83, %if.else27 ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #22

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare double @sqrt(double noundef) local_unnamed_addr #23

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.floor.f64(double) #22

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local noundef i32 @_Z6execxtii(i32 noundef %i, i32 noundef %x) local_unnamed_addr #1 {
entry:
  %0 = load i32, ptr @pos, align 4, !tbaa !25
  %reass.sub = sub i32 %0, %i
  %sub.i = add i32 %reass.sub, -2
  %1 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i = add nsw i32 %1, -1
  %and.i = and i32 %sub3.i, %sub.i
  %2 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %2, i64 %idxprom.i.i
  %3 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %sub.i57 = add i32 %reass.sub, -3
  %and.i59 = and i32 %sub3.i, %sub.i57
  %idxprom.i.i60 = sext i32 %and.i59 to i64
  %arrayidx.i.i61 = getelementptr inbounds i8, ptr %2, i64 %idxprom.i.i60
  %4 = load i8, ptr %arrayidx.i.i61, align 1, !tbaa !9
  %add30.neg = xor i32 %i, -1
  %sub.i75 = add i32 %0, %add30.neg
  %and.i77 = and i32 %sub3.i, %sub.i75
  %idxprom.i.i78 = sext i32 %and.i77 to i64
  %arrayidx.i.i79 = getelementptr inbounds i8, ptr %2, i64 %idxprom.i.i78
  %5 = load i8, ptr %arrayidx.i.i79, align 1, !tbaa !9
  %tobool.not = icmp eq i32 %i, 0
  br i1 %tobool.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %entry
  %and.i83 = and i32 %sub3.i, %reass.sub
  %idxprom.i.i84 = sext i32 %and.i83 to i64
  %arrayidx.i.i85 = getelementptr inbounds i8, ptr %2, i64 %idxprom.i.i84
  %6 = load i8, ptr %arrayidx.i.i85, align 1, !tbaa !9
  %conv.i86 = zext i8 %6 to i32
  %and = shl nuw nsw i32 %conv.i86, 12
  %7 = and i32 %and, 815104
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ 0, %entry ]
  %conv.i80 = zext i8 %5 to i32
  %cmp3 = icmp eq i8 %3, 102
  %mul = select i1 %cmp3, i32 2, i32 0
  %cmp = icmp eq i8 %3, 15
  %conv = zext i1 %cmp to i32
  %add5 = or i32 %mul, %conv
  %cmp8 = icmp eq i8 %3, 103
  %mul10 = select i1 %cmp8, i32 3, i32 0
  %add11 = add nuw nsw i32 %add5, %mul10
  %cmp14 = icmp eq i8 %4, 15
  %mul16 = select i1 %cmp14, i32 4, i32 0
  %add17 = add nuw nsw i32 %add11, %mul16
  %cmp20 = icmp eq i8 %4, 102
  %mul22 = select i1 %cmp20, i32 8, i32 0
  %add23 = add nuw nsw i32 %add17, %mul22
  %cmp26 = icmp eq i8 %4, 103
  %mul28 = select i1 %cmp26, i32 12, i32 0
  %add29 = add nuw nsw i32 %add23, %mul28
  %shl = shl nuw nsw i32 %conv.i80, 4
  %shl35 = shl i32 %x, 20
  %or = or i32 %shl, %shl35
  %or34 = or i32 %or, %add29
  %or36 = or i32 %or34, %cond
  ret i32 %or36
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z8exeModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %m) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZ8exeModelR5MixerE2cm acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !110

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8exeModelR5MixerE2cm) #39
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  %2 = load i32, ptr @level, align 4, !tbaa !25
  %shl = shl i32 65536, %2
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8exeModelR5MixerE2cm, i32 noundef %shl, i32 noundef 12)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init
  %3 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ8exeModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8exeModelR5MixerE2cm) #39
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %entry
  %4 = load i32, ptr @bpos, align 4, !tbaa !25
  %tobool1.not = icmp eq i32 %4, 0
  %5 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  br i1 %tobool1.not, label %for.body.peel.next, label %if.end

for.body.peel.next:                               ; preds = %init.end
  %6 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %7 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.peel = add nsw i32 %7, -1
  %8 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i57.i.peel = add i32 %8, -3
  %and.i59.i.peel = and i32 %sub3.i.peel, %sub.i57.i.peel
  %idxprom.i.i60.i.peel = sext i32 %and.i59.i.peel to i64
  %arrayidx.i.i61.i.peel = getelementptr inbounds i8, ptr %5, i64 %idxprom.i.i60.i.peel
  %9 = load i8, ptr %arrayidx.i.i61.i.peel, align 1, !tbaa !9
  %sub.i.i.peel = add i32 %8, -2
  %and.i.i.peel = and i32 %sub3.i.peel, %sub.i.i.peel
  %idxprom.i.i.i.peel = sext i32 %and.i.i.peel to i64
  %arrayidx.i.i.i.peel = getelementptr inbounds i8, ptr %5, i64 %idxprom.i.i.i.peel
  %10 = load i8, ptr %arrayidx.i.i.i.peel, align 1, !tbaa !9
  %sub.i.peel = add i32 %8, -1
  %and.i.peel = and i32 %sub3.i.peel, %sub.i.peel
  %idxprom.i.i.peel = sext i32 %and.i.peel to i64
  %arrayidx.i.i.peel = getelementptr inbounds i8, ptr %5, i64 %idxprom.i.i.peel
  %11 = load i8, ptr %arrayidx.i.i.peel, align 1, !tbaa !9
  %conv.i.peel = zext i8 %11 to i32
  %cmp3.i.peel = icmp eq i8 %10, 102
  %mul.i.peel = select i1 %cmp3.i.peel, i32 2, i32 0
  %cmp.i.peel = icmp eq i8 %10, 15
  %conv.i10.peel = zext i1 %cmp.i.peel to i32
  %add5.i.peel = or i32 %mul.i.peel, %conv.i10.peel
  %cmp8.i.peel = icmp eq i8 %10, 103
  %mul10.i.peel = select i1 %cmp8.i.peel, i32 3, i32 0
  %add11.i.peel = add nuw nsw i32 %add5.i.peel, %mul10.i.peel
  %cmp14.i.peel = icmp eq i8 %9, 15
  %mul16.i.peel = select i1 %cmp14.i.peel, i32 4, i32 0
  %add17.i.peel = add nuw nsw i32 %add11.i.peel, %mul16.i.peel
  %cmp20.i.peel = icmp eq i8 %9, 102
  %mul22.i.peel = select i1 %cmp20.i.peel, i32 8, i32 0
  %add23.i.peel = add nuw nsw i32 %add17.i.peel, %mul22.i.peel
  %cmp26.i.peel = icmp eq i8 %9, 103
  %mul28.i.peel = select i1 %cmp26.i.peel, i32 12, i32 0
  %add29.i.peel = add nuw nsw i32 %add23.i.peel, %mul28.i.peel
  %shl.i.peel = shl nuw nsw i32 %conv.i.peel, 4
  %or34.i.peel = or i32 %add29.i.peel, %shl.i.peel
  %12 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i.peel = add nsw i32 %12, 1
  store i32 %inc.i.peel, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i11.peel = mul i32 %or34.i.peel, 987654323
  %add.i.peel = add i32 %mul.i11.peel, %12
  %or.i12.peel = tail call i32 @llvm.fshl.i32(i32 %add.i.peel, i32 %add.i.peel, i32 16)
  %mul2.i.peel = mul i32 %or.i12.peel, 123456791
  %add3.i.peel = add i32 %mul2.i.peel, %12
  %idxprom.i.i13.peel = sext i32 %12 to i64
  %arrayidx.i.i14.peel = getelementptr inbounds i32, ptr %6, i64 %idxprom.i.i13.peel
  store i32 %add3.i.peel, ptr %arrayidx.i.i14.peel, align 4, !tbaa !25
  br label %_Z6execxtii.exit

lpad:                                             ; preds = %init
  %13 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ8exeModelR5MixerE2cm) #39
  resume { ptr, i32 } %13

_Z6execxtii.exit:                                 ; preds = %for.body.peel.next, %_Z6execxtii.exit
  %i.020 = phi i32 [ 1, %for.body.peel.next ], [ %inc, %_Z6execxtii.exit ]
  %14 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i = add nsw i32 %14, -1
  %15 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i = add nsw i32 %15, -1
  %and.i = and i32 %sub3.i, %sub.i
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %5, i64 %idxprom.i.i
  %16 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %conv.i = zext i8 %16 to i32
  %cmp2 = icmp ugt i32 %i.020, 4
  %17 = shl nuw nsw i32 %conv.i, 20
  %reass.sub.i = sub i32 %14, %i.020
  %sub.i.i = add i32 %reass.sub.i, -2
  %and.i.i = and i32 %sub3.i, %sub.i.i
  %idxprom.i.i.i = sext i32 %and.i.i to i64
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %5, i64 %idxprom.i.i.i
  %18 = load i8, ptr %arrayidx.i.i.i, align 1, !tbaa !9
  %sub.i57.i = add i32 %reass.sub.i, -3
  %and.i59.i = and i32 %sub3.i, %sub.i57.i
  %idxprom.i.i60.i = sext i32 %and.i59.i to i64
  %arrayidx.i.i61.i = getelementptr inbounds i8, ptr %5, i64 %idxprom.i.i60.i
  %19 = load i8, ptr %arrayidx.i.i61.i, align 1, !tbaa !9
  %add30.neg.i = xor i32 %i.020, -1
  %sub.i75.i = add i32 %14, %add30.neg.i
  %and.i77.i = and i32 %sub3.i, %sub.i75.i
  %idxprom.i.i78.i = sext i32 %and.i77.i to i64
  %arrayidx.i.i79.i = getelementptr inbounds i8, ptr %5, i64 %idxprom.i.i78.i
  %20 = load i8, ptr %arrayidx.i.i79.i, align 1, !tbaa !9
  %and.i83.i = and i32 %sub3.i, %reass.sub.i
  %idxprom.i.i84.i = sext i32 %and.i83.i to i64
  %arrayidx.i.i85.i = getelementptr inbounds i8, ptr %5, i64 %idxprom.i.i84.i
  %21 = load i8, ptr %arrayidx.i.i85.i, align 1, !tbaa !9
  %conv.i86.i = zext i8 %21 to i32
  %and.i9 = shl nuw nsw i32 %conv.i86.i, 12
  %22 = and i32 %and.i9, 815104
  %conv.i80.i = zext i8 %20 to i32
  %cmp3.i = icmp eq i8 %18, 102
  %mul.i = select i1 %cmp3.i, i32 2, i32 0
  %cmp.i = icmp eq i8 %18, 15
  %conv.i10 = zext i1 %cmp.i to i32
  %add5.i = or i32 %mul.i, %conv.i10
  %cmp8.i = icmp eq i8 %18, 103
  %mul10.i = select i1 %cmp8.i, i32 3, i32 0
  %add11.i = add nuw nsw i32 %add5.i, %mul10.i
  %cmp14.i = icmp eq i8 %19, 15
  %mul16.i = select i1 %cmp14.i, i32 4, i32 0
  %add17.i = add nuw nsw i32 %add11.i, %mul16.i
  %cmp20.i = icmp eq i8 %19, 102
  %mul22.i = select i1 %cmp20.i, i32 8, i32 0
  %add23.i = add nuw nsw i32 %add17.i, %mul22.i
  %cmp26.i = icmp eq i8 %19, 103
  %mul28.i = select i1 %cmp26.i, i32 12, i32 0
  %add29.i = add nuw nsw i32 %add23.i, %mul28.i
  %shl.i = shl nuw nsw i32 %conv.i80.i, 4
  %shl35.i = select i1 %cmp2, i32 %17, i32 0
  %or.i = or i32 %shl.i, %shl35.i
  %or34.i = or i32 %add29.i, %or.i
  %or36.i = or i32 %or34.i, %22
  %23 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i = add nsw i32 %23, 1
  store i32 %inc.i, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i11 = mul i32 %or36.i, 987654323
  %add.i = add i32 %mul.i11, %23
  %or.i12 = tail call i32 @llvm.fshl.i32(i32 %add.i, i32 %add.i, i32 16)
  %mul2.i = mul i32 %or.i12, 123456791
  %add3.i = add i32 %mul2.i, %23
  %idxprom.i.i13 = sext i32 %23 to i64
  %arrayidx.i.i14 = getelementptr inbounds i32, ptr %6, i64 %idxprom.i.i13
  store i32 %add3.i, ptr %arrayidx.i.i14, align 4, !tbaa !25
  %inc = add nuw nsw i32 %i.020, 1
  %exitcond.not = icmp eq i32 %inc, 12
  br i1 %exitcond.not, label %if.end.loopexit, label %_Z6execxtii.exit, !llvm.loop !205

if.end.loopexit:                                  ; preds = %_Z6execxtii.exit
  %.pre = load i32, ptr @bpos, align 4, !tbaa !25
  br label %if.end

if.end:                                           ; preds = %init.end, %if.end.loopexit
  %24 = phi i32 [ %.pre, %if.end.loopexit ], [ %4, %init.end ]
  %25 = load i32, ptr @c0, align 4, !tbaa !25
  %26 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i15 = add nsw i32 %26, -1
  %27 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i16 = add nsw i32 %27, -1
  %and.i.i17 = and i32 %sub3.i.i16, %sub.i.i15
  %idxprom.i.i.i18 = sext i32 %and.i.i17 to i64
  %arrayidx.i.i.i19 = getelementptr inbounds i8, ptr %5, i64 %idxprom.i.i.i18
  %28 = load i8, ptr %arrayidx.i.i.i19, align 1, !tbaa !9
  %conv.i.i = zext i8 %28 to i32
  %29 = load i32, ptr @y, align 4, !tbaa !25
  %call2.i = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8exeModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %25, i32 noundef %24, i32 noundef %conv.i.i, i32 noundef %29)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z13indirectModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %m) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZ13indirectModelR5MixerE2cm acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !110

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13indirectModelR5MixerE2cm) #39
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  %2 = load i32, ptr @level, align 4, !tbaa !25
  %shl = shl i32 65536, %2
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13indirectModelR5MixerE2cm, i32 noundef %shl, i32 noundef 6)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init
  %3 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ13indirectModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13indirectModelR5MixerE2cm) #39
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %entry
  %4 = load i32, ptr @bpos, align 4, !tbaa !25
  %tobool1.not = icmp eq i32 %4, 0
  br i1 %tobool1.not, label %if.then, label %if.end

if.then:                                          ; preds = %init.end
  %5 = load i32, ptr @c4, align 4, !tbaa !25
  %and = and i32 %5, 65535
  %and2 = and i32 %5, 255
  %shr = lshr i32 %and, 8
  %idxprom = zext i32 %shr to i64
  %arrayidx = getelementptr inbounds [256 x i32], ptr @_ZZ13indirectModelR5MixerE2t1, i64 0, i64 %idxprom
  %6 = load i32, ptr %arrayidx, align 4, !tbaa !25
  %shl3 = shl i32 %6, 8
  %or = or i32 %shl3, %and2
  store i32 %or, ptr %arrayidx, align 4, !tbaa !25
  %shr4 = lshr i32 %5, 8
  %and5 = and i32 %shr4, 65535
  %idxprom6 = zext i32 %and5 to i64
  %arrayidx7 = getelementptr inbounds [65536 x i16], ptr @_ZZ13indirectModelR5MixerE2t2, i64 0, i64 %idxprom6
  %7 = load i16, ptr %arrayidx7, align 2, !tbaa !31
  %conv = zext i16 %7 to i32
  %shl8 = shl nuw nsw i32 %conv, 8
  %or9 = or i32 %shl8, %and2
  %conv10 = trunc i32 %or9 to i16
  store i16 %conv10, ptr %arrayidx7, align 2, !tbaa !31
  %idxprom11 = zext i32 %and2 to i64
  %arrayidx12 = getelementptr inbounds [256 x i32], ptr @_ZZ13indirectModelR5MixerE2t1, i64 0, i64 %idxprom11
  %8 = load i32, ptr %arrayidx12, align 4, !tbaa !25
  %shl13 = shl i32 %8, 8
  %or14 = or i32 %shl13, %and2
  %and15 = and i32 %or14, 65535
  %9 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i = add nsw i32 %9, 1
  store i32 %inc.i, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i = mul i32 %and15, 987654323
  %add.i = add i32 %mul.i, %9
  %or.i = tail call i32 @llvm.fshl.i32(i32 %add.i, i32 %add.i, i32 16)
  %mul2.i = mul i32 %or.i, 123456791
  %add3.i = add i32 %mul2.i, %9
  %10 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %idxprom.i.i = sext i32 %9 to i64
  %arrayidx.i.i = getelementptr inbounds i32, ptr %10, i64 %idxprom.i.i
  store i32 %add3.i, ptr %arrayidx.i.i, align 4, !tbaa !25
  %and16 = and i32 %or14, 16777215
  %11 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i38 = add nsw i32 %11, 1
  store i32 %inc.i38, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i39 = mul i32 %and16, 987654323
  %add.i40 = add i32 %11, %mul.i39
  %or.i41 = tail call i32 @llvm.fshl.i32(i32 %add.i40, i32 %add.i40, i32 16)
  %mul2.i42 = mul i32 %or.i41, 123456791
  %add3.i43 = add i32 %mul2.i42, %11
  %idxprom.i.i44 = sext i32 %11 to i64
  %arrayidx.i.i45 = getelementptr inbounds i32, ptr %10, i64 %idxprom.i.i44
  store i32 %add3.i43, ptr %arrayidx.i.i45, align 4, !tbaa !25
  %12 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i46 = add nsw i32 %12, 1
  store i32 %inc.i46, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i47 = mul i32 %or14, 987654323
  %add.i48 = add i32 %12, %mul.i47
  %or.i49 = tail call i32 @llvm.fshl.i32(i32 %add.i48, i32 %add.i48, i32 16)
  %mul2.i50 = mul i32 %or.i49, 123456791
  %add3.i51 = add i32 %mul2.i50, %12
  %idxprom.i.i52 = sext i32 %12 to i64
  %arrayidx.i.i53 = getelementptr inbounds i32, ptr %10, i64 %idxprom.i.i52
  store i32 %add3.i51, ptr %arrayidx.i.i53, align 4, !tbaa !25
  %and17 = and i32 %shl13, 65280
  %13 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i54 = add nsw i32 %13, 1
  store i32 %inc.i54, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i55 = mul i32 %and17, 987654323
  %add.i56 = add i32 %13, %mul.i55
  %or.i57 = tail call i32 @llvm.fshl.i32(i32 %add.i56, i32 %add.i56, i32 16)
  %mul2.i58 = mul i32 %or.i57, 123456791
  %add3.i59 = add i32 %mul2.i58, %13
  %idxprom.i.i60 = sext i32 %13 to i64
  %arrayidx.i.i61 = getelementptr inbounds i32, ptr %10, i64 %idxprom.i.i60
  store i32 %add3.i59, ptr %arrayidx.i.i61, align 4, !tbaa !25
  %idxprom18 = zext i32 %and to i64
  %arrayidx19 = getelementptr inbounds [65536 x i16], ptr @_ZZ13indirectModelR5MixerE2t2, i64 0, i64 %idxprom18
  %14 = load i16, ptr %arrayidx19, align 2, !tbaa !31
  %conv20 = zext i16 %14 to i32
  %shl21 = shl nuw i32 %conv20, 16
  %or22 = or i32 %shl21, %and
  %and23 = and i32 %or22, 16777215
  %15 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i62 = add nsw i32 %15, 1
  store i32 %inc.i62, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i63 = mul i32 %and23, 987654323
  %add.i64 = add i32 %mul.i63, %15
  %or.i65 = tail call i32 @llvm.fshl.i32(i32 %add.i64, i32 %add.i64, i32 16)
  %mul2.i66 = mul i32 %or.i65, 123456791
  %add3.i67 = add i32 %mul2.i66, %15
  %idxprom.i.i68 = sext i32 %15 to i64
  %arrayidx.i.i69 = getelementptr inbounds i32, ptr %10, i64 %idxprom.i.i68
  store i32 %add3.i67, ptr %arrayidx.i.i69, align 4, !tbaa !25
  %16 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i70 = add nsw i32 %16, 1
  store i32 %inc.i70, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i71 = mul i32 %or22, 987654323
  %add.i72 = add i32 %16, %mul.i71
  %or.i73 = tail call i32 @llvm.fshl.i32(i32 %add.i72, i32 %add.i72, i32 16)
  %mul2.i74 = mul i32 %or.i73, 123456791
  %add3.i75 = add i32 %mul2.i74, %16
  %idxprom.i.i76 = sext i32 %16 to i64
  %arrayidx.i.i77 = getelementptr inbounds i32, ptr %10, i64 %idxprom.i.i76
  store i32 %add3.i75, ptr %arrayidx.i.i77, align 4, !tbaa !25
  %.pre = load i32, ptr @bpos, align 4, !tbaa !25
  br label %if.end

lpad:                                             ; preds = %init
  %17 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ13indirectModelR5MixerE2cm) #39
  resume { ptr, i32 } %17

if.end:                                           ; preds = %if.then, %init.end
  %18 = phi i32 [ %.pre, %if.then ], [ %4, %init.end ]
  %19 = load i32, ptr @c0, align 4, !tbaa !25
  %20 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i = add nsw i32 %20, -1
  %21 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i = add nsw i32 %21, -1
  %and.i.i = and i32 %sub3.i.i, %sub.i.i
  %22 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i = sext i32 %and.i.i to i64
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %22, i64 %idxprom.i.i.i
  %23 = load i8, ptr %arrayidx.i.i.i, align 1, !tbaa !9
  %conv.i.i = zext i8 %23 to i32
  %24 = load i32, ptr @y, align 4, !tbaa !25
  %call2.i = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13indirectModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %m, i32 noundef %19, i32 noundef %18, i32 noundef %conv.i.i, i32 noundef %24)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z8dmcModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %m) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZ8dmcModelR5MixerE1t acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !110

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8dmcModelR5MixerE1t) #39
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  %2 = load i32, ptr @level, align 4, !tbaa !25
  %mul = shl i32 131072, %2
  invoke void @_ZN5ArrayI7DMCNodeLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ8dmcModelR5MixerE1t, i32 noundef %mul)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init
  %3 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayI7DMCNodeLi0EED2Ev, ptr nonnull @_ZZ8dmcModelR5MixerE1t, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8dmcModelR5MixerE1t) #39
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %entry
  %4 = load atomic i8, ptr @_ZGVZ8dmcModelR5MixerE2sm acquire, align 8
  %guard.uninitialized1 = icmp eq i8 %4, 0
  br i1 %guard.uninitialized1, label %init.check2, label %init.end7, !prof !110

init.check2:                                      ; preds = %init.end
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8dmcModelR5MixerE2sm) #39
  %tobool3.not = icmp eq i32 %5, 0
  br i1 %tobool3.not, label %init.end7, label %init4

init4:                                            ; preds = %init.check2
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ8dmcModelR5MixerE2sm, i32 noundef 256)
          to label %invoke.cont6 unwind label %lpad5

invoke.cont6:                                     ; preds = %init4
  %6 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN8StateMapD2Ev, ptr nonnull @_ZZ8dmcModelR5MixerE2sm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8dmcModelR5MixerE2sm) #39
  br label %init.end7

init.end7:                                        ; preds = %invoke.cont6, %init.check2, %init.end
  %7 = load i32, ptr @_ZZ8dmcModelR5MixerE3top, align 4, !tbaa !25
  %cmp = icmp sgt i32 %7, 0
  %8 = load i32, ptr @_ZZ8dmcModelR5MixerE1t, align 8
  %cmp8 = icmp slt i32 %7, %8
  %or.cond370 = select i1 %cmp, i1 %cmp8, i1 false
  br i1 %or.cond370, label %if.then, label %if.end108

if.then:                                          ; preds = %init.end7
  %9 = load i32, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !25
  %10 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %idxprom.i = sext i32 %9 to i64
  %arrayidx.i = getelementptr inbounds %struct.DMCNode, ptr %10, i64 %idxprom.i
  %11 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds [2 x i32], ptr %arrayidx.i, i64 0, i64 %idxprom
  %12 = load i32, ptr %arrayidx, align 4, !tbaa !25
  %tobool10.not = icmp eq i32 %11, 0
  %c0 = getelementptr inbounds %struct.DMCNode, ptr %10, i64 %idxprom.i, i32 2
  %bf.load13 = load i24, ptr %c0, align 1
  %bf.clear = and i24 %bf.load13, 4095
  %bf.lshr = lshr i24 %bf.load13, 12
  %bf.clear.sink = select i1 %tobool10.not, i24 %bf.clear, i24 %bf.lshr
  %bf.cast14 = zext i24 %bf.clear.sink to i32
  %idxprom.i291 = sext i32 %12 to i64
  %c016 = getelementptr inbounds %struct.DMCNode, ptr %10, i64 %idxprom.i291, i32 2
  %bf.load17 = load i24, ptr %c016, align 1
  %bf.clear18 = and i24 %bf.load17, 4095
  %bf.cast19 = zext i24 %bf.clear18 to i32
  %bf.lshr23 = lshr i24 %bf.load17, 12
  %narrow368 = add nuw nsw i24 %bf.clear18, %bf.lshr23
  %add = zext i24 %narrow368 to i32
  %13 = load i32, ptr @_ZZ8dmcModelR5MixerE9threshold, align 4, !tbaa !25
  %mul25 = shl nuw nsw i32 %13, 1
  %cmp26.not = icmp sgt i32 %mul25, %bf.cast14
  br i1 %cmp26.not, label %if.end108, label %land.lhs.true27

land.lhs.true27:                                  ; preds = %if.then
  %sub = sub nsw i32 %add, %bf.cast14
  %mul28 = mul nuw nsw i32 %13, 3
  %cmp29.not = icmp slt i32 %sub, %mul28
  br i1 %cmp29.not, label %if.end108, label %if.then30

if.then30:                                        ; preds = %land.lhs.true27
  %mul31 = shl nuw nsw i32 %bf.cast14, 12
  %div = udiv i32 %mul31, %add
  %mul37 = mul nsw i32 %div, %bf.cast19
  %idxprom.i297 = zext i32 %7 to i64
  %c039 = getelementptr inbounds %struct.DMCNode, ptr %10, i64 %idxprom.i297, i32 2
  %14 = trunc i32 %mul37 to i24
  %15 = lshr i24 %14, 12
  %bf.load40 = load i24, ptr %c039, align 1
  %bf.clear41 = and i24 %bf.load40, -4096
  %bf.set = or i24 %15, %bf.clear41
  store i24 %bf.set, ptr %c039, align 1
  %bf.result.cast = zext i24 %15 to i32
  %16 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %c043 = getelementptr inbounds %struct.DMCNode, ptr %16, i64 %idxprom.i291, i32 2
  %bf.load44 = load i24, ptr %c043, align 1
  %bf.cast46 = zext i24 %bf.load44 to i32
  %sub47 = sub nsw i32 %bf.cast46, %bf.result.cast
  %17 = trunc i32 %sub47 to i24
  %bf.value49 = and i24 %17, 4095
  %bf.clear50 = and i24 %bf.load44, -4096
  %bf.set51 = or i24 %bf.value49, %bf.clear50
  store i24 %bf.set51, ptr %c043, align 1
  %18 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %c154 = getelementptr inbounds %struct.DMCNode, ptr %18, i64 %idxprom.i291, i32 2
  %bf.load55 = load i24, ptr %c154, align 1
  %bf.lshr56 = lshr i24 %bf.load55, 12
  %bf.cast57 = zext i24 %bf.lshr56 to i32
  %mul58 = mul nsw i32 %div, %bf.cast57
  %c161 = getelementptr inbounds %struct.DMCNode, ptr %18, i64 %idxprom.i297, i32 2
  %19 = trunc i32 %mul58 to i24
  %20 = lshr i32 %mul58, 12
  %bf.load62 = load i24, ptr %c161, align 1
  %bf.shl = and i24 %19, -4096
  %bf.clear64 = and i24 %bf.load62, 4095
  %bf.set65 = or i24 %bf.shl, %bf.clear64
  store i24 %bf.set65, ptr %c161, align 1
  %21 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %c168 = getelementptr inbounds %struct.DMCNode, ptr %21, i64 %idxprom.i291, i32 2
  %bf.load69 = load i24, ptr %c168, align 1
  %bf.lshr70 = lshr i24 %bf.load69, 12
  %bf.cast71 = zext i24 %bf.lshr70 to i32
  %sub72 = sub nsw i32 %bf.cast71, %20
  %22 = trunc i32 %sub72 to i24
  %bf.value74 = shl i24 %22, 12
  %bf.clear76 = and i24 %bf.load69, 4095
  %bf.set77 = or i24 %bf.value74, %bf.clear76
  store i24 %bf.set77, ptr %c168, align 1
  %23 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %arrayidx.i308 = getelementptr inbounds %struct.DMCNode, ptr %23, i64 %idxprom.i291
  %arrayidx.i310 = getelementptr inbounds %struct.DMCNode, ptr %23, i64 %idxprom.i297
  %24 = load <2 x i32>, ptr %arrayidx.i308, align 4, !tbaa !25
  store <2 x i32> %24, ptr %arrayidx.i310, align 4, !tbaa !25
  %state = getelementptr inbounds %struct.DMCNode, ptr %23, i64 %idxprom.i291, i32 1
  %25 = load i8, ptr %state, align 4, !tbaa !208
  %state93 = getelementptr inbounds %struct.DMCNode, ptr %23, i64 %idxprom.i297, i32 1
  store i8 %25, ptr %state93, align 4, !tbaa !208
  %arrayidx.i320 = getelementptr inbounds %struct.DMCNode, ptr %23, i64 %idxprom.i
  %26 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom96 = sext i32 %26 to i64
  %arrayidx97 = getelementptr inbounds [2 x i32], ptr %arrayidx.i320, i64 0, i64 %idxprom96
  store i32 %7, ptr %arrayidx97, align 4, !tbaa !25
  %inc = add nuw nsw i32 %7, 1
  store i32 %inc, ptr @_ZZ8dmcModelR5MixerE3top, align 4, !tbaa !25
  %27 = load i32, ptr @level, align 4, !tbaa !25
  %shl98 = shl i32 65536, %27
  %mul99 = shl i32 131072, %27
  %cmp100.not = icmp eq i32 %inc, %mul99
  %mul103 = mul nsw i32 %shl98, 3
  %cmp104.not = icmp eq i32 %inc, %mul103
  %28 = or i1 %cmp100.not, %cmp104.not
  br i1 %28, label %31, label %if.end108

lpad:                                             ; preds = %init
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad5:                                            ; preds = %init4
  %30 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

31:                                               ; preds = %if.then30
  %spec.select = select i1 %cmp104.not, i32 768, i32 512
  store i32 %spec.select, ptr @_ZZ8dmcModelR5MixerE9threshold, align 4, !tbaa !25
  br label %if.end108

if.end108:                                        ; preds = %if.then, %land.lhs.true27, %if.then30, %31, %init.end7
  %.pr = phi i32 [ %7, %if.then ], [ %7, %land.lhs.true27 ], [ %inc, %if.then30 ], [ %inc, %31 ], [ %7, %init.end7 ]
  %32 = load i32, ptr @_ZZ8dmcModelR5MixerE1t, align 8, !tbaa !210
  %cmp110 = icmp eq i32 %.pr, %32
  %33 = load i32, ptr @bpos, align 4
  %cmp112 = icmp eq i32 %33, 1
  %or.cond = select i1 %cmp110, i1 %cmp112, i1 false
  br i1 %or.cond, label %if.end114.thread, label %if.end114

if.end114.thread:                                 ; preds = %if.end108
  store i32 0, ptr @_ZZ8dmcModelR5MixerE3top, align 4, !tbaa !25
  br label %for.cond118.preheader.preheader

if.end114:                                        ; preds = %if.end108
  %34 = icmp eq i32 %.pr, 0
  br i1 %34, label %for.cond118.preheader.preheader, label %if.end175

for.cond118.preheader.preheader:                  ; preds = %if.end114.thread, %if.end114
  br label %for.cond118.preheader

for.cond118.preheader:                            ; preds = %for.cond118.preheader.preheader, %for.cond.cleanup120
  %indvars.iv390 = phi i64 [ %indvars.iv.next391, %for.cond.cleanup120 ], [ 0, %for.cond118.preheader.preheader ]
  %cmp122 = icmp ult i64 %indvars.iv390, 127
  %35 = shl nuw nsw i64 %indvars.iv390, 1
  br i1 %cmp122, label %for.body121.us, label %for.body121.preheader

for.body121.preheader:                            ; preds = %for.cond118.preheader
  %36 = shl i64 %indvars.iv390, 8
  %37 = trunc i64 %36 to i32
  %38 = add i32 %37, -32512
  %39 = trunc i64 %36 to i32
  %40 = add i32 %39, 256
  br label %for.body121

for.body121.us:                                   ; preds = %for.cond118.preheader, %for.body121.us
  %indvars.iv379 = phi i64 [ %indvars.iv.next380, %for.body121.us ], [ 0, %for.cond118.preheader ]
  %41 = shl nuw nsw i64 %indvars.iv379, 8
  %42 = add nuw nsw i64 %41, %35
  %43 = add nuw nsw i64 %41, %indvars.iv390
  %44 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %arrayidx.i322.us = getelementptr inbounds %struct.DMCNode, ptr %44, i64 %43
  %45 = trunc i64 %42 to i32
  %46 = or i32 %45, 1
  store i32 %46, ptr %arrayidx.i322.us, align 4, !tbaa !25
  %arrayidx141.us = getelementptr inbounds [2 x i32], ptr %arrayidx.i322.us, i64 0, i64 1
  %47 = trunc i64 %42 to i32
  %48 = add i32 %47, 2
  store i32 %48, ptr %arrayidx141.us, align 4, !tbaa !25
  %c0160.us = getelementptr inbounds %struct.DMCNode, ptr %44, i64 %43, i32 2
  %bf.load161.us = load i24, ptr %c0160.us, align 1
  %bf.clear162.us = and i24 %bf.load161.us, -4096
  %bf.set163.us = or i24 %bf.clear162.us, 128
  store i24 %bf.set163.us, ptr %c0160.us, align 1
  %49 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %c1167.us = getelementptr inbounds %struct.DMCNode, ptr %49, i64 %43, i32 2
  %bf.load168.us = load i24, ptr %c1167.us, align 1
  %bf.clear169.us = and i24 %bf.load168.us, 4095
  %bf.set170.us = or i24 %bf.clear169.us, 524288
  store i24 %bf.set170.us, ptr %c1167.us, align 1
  %indvars.iv.next380 = add nuw nsw i64 %indvars.iv379, 1
  %exitcond389.not = icmp eq i64 %indvars.iv.next380, 256
  br i1 %exitcond389.not, label %for.cond.cleanup120, label %for.body121.us, !llvm.loop !211

for.cond.cleanup:                                 ; preds = %for.cond.cleanup120
  store i32 65536, ptr @_ZZ8dmcModelR5MixerE3top, align 4, !tbaa !25
  store i32 0, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !25
  store i32 256, ptr @_ZZ8dmcModelR5MixerE9threshold, align 4, !tbaa !25
  br label %if.end175

for.cond.cleanup120:                              ; preds = %for.body121, %for.body121.us
  %indvars.iv.next391 = add nuw nsw i64 %indvars.iv390, 1
  %exitcond398.not = icmp eq i64 %indvars.iv.next391, 256
  br i1 %exitcond398.not, label %for.cond.cleanup, label %for.cond118.preheader, !llvm.loop !212

for.body121:                                      ; preds = %for.body121.preheader, %for.body121
  %indvars.iv = phi i64 [ 0, %for.body121.preheader ], [ %indvars.iv.next, %for.body121 ]
  %50 = shl nuw nsw i64 %indvars.iv, 8
  %51 = add nuw nsw i64 %50, %indvars.iv390
  %52 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %arrayidx.i326 = getelementptr inbounds %struct.DMCNode, ptr %52, i64 %51
  store i32 %38, ptr %arrayidx.i326, align 4, !tbaa !25
  %arrayidx155 = getelementptr inbounds [2 x i32], ptr %arrayidx.i326, i64 0, i64 1
  store i32 %40, ptr %arrayidx155, align 4, !tbaa !25
  %c0160 = getelementptr inbounds %struct.DMCNode, ptr %52, i64 %51, i32 2
  %bf.load161 = load i24, ptr %c0160, align 1
  %bf.clear162 = and i24 %bf.load161, -4096
  %bf.set163 = or i24 %bf.clear162, 128
  store i24 %bf.set163, ptr %c0160, align 1
  %53 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %c1167 = getelementptr inbounds %struct.DMCNode, ptr %53, i64 %51, i32 2
  %bf.load168 = load i24, ptr %c1167, align 1
  %bf.clear169 = and i24 %bf.load168, 4095
  %bf.set170 = or i24 %bf.clear169, 524288
  store i24 %bf.set170, ptr %c1167, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 256
  br i1 %exitcond.not, label %for.cond.cleanup120, label %for.body121, !llvm.loop !211

if.end175:                                        ; preds = %for.cond.cleanup, %if.end114
  %54 = load i32, ptr @y, align 4, !tbaa !25
  %tobool176.not = icmp eq i32 %54, 0
  %55 = load i32, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !25
  %56 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %idxprom.i337 = sext i32 %55 to i64
  %c0200 = getelementptr inbounds %struct.DMCNode, ptr %56, i64 %idxprom.i337, i32 2
  %bf.load201 = load i24, ptr %c0200, align 1
  br i1 %tobool176.not, label %if.else198, label %if.then177

if.then177:                                       ; preds = %if.end175
  %cmp183 = icmp ult i24 %bf.load201, -1212416
  br i1 %cmp183, label %if.then184, label %if.end218

if.then184:                                       ; preds = %if.then177
  %57 = and i24 %bf.load201, -4096
  %bf.shl193 = add nuw i24 %57, 1048576
  br label %if.end218.sink.split

if.else198:                                       ; preds = %if.end175
  %bf.clear202 = and i24 %bf.load201, 4088
  %cmp204 = icmp ult i24 %bf.clear202, 3800
  br i1 %cmp204, label %if.then205, label %if.end218

if.then205:                                       ; preds = %if.else198
  %narrow366 = add i24 %bf.load201, 256
  %bf.value213 = and i24 %narrow366, 4095
  br label %if.end218.sink.split

if.end218.sink.split:                             ; preds = %if.then184, %if.then205
  %.sink = phi i24 [ -4096, %if.then205 ], [ 4095, %if.then184 ]
  %bf.value213.sink = phi i24 [ %bf.value213, %if.then205 ], [ %bf.shl193, %if.then184 ]
  %bf.clear214 = and i24 %bf.load201, %.sink
  %bf.set215 = or i24 %bf.value213.sink, %bf.clear214
  store i24 %bf.set215, ptr %c0200, align 1
  br label %if.end218

if.end218:                                        ; preds = %if.end218.sink.split, %if.else198, %if.then177
  %58 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %arrayidx.i342 = getelementptr inbounds %struct.DMCNode, ptr %58, i64 %idxprom.i337
  %state220 = getelementptr inbounds %struct.DMCNode, ptr %58, i64 %idxprom.i337, i32 1
  %59 = load i8, ptr %state220, align 4, !tbaa !208
  %idxprom221 = zext i8 %59 to i64
  %60 = load i32, ptr @y, align 4, !tbaa !25
  %idxprom223 = sext i32 %60 to i64
  %arrayidx224 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %idxprom221, i64 %idxprom223
  %61 = load i8, ptr %arrayidx224, align 1, !tbaa !9
  store i8 %61, ptr %state220, align 4, !tbaa !208
  %arrayidx230 = getelementptr inbounds [2 x i32], ptr %arrayidx.i342, i64 0, i64 %idxprom223
  %62 = load i32, ptr %arrayidx230, align 4, !tbaa !25
  store i32 %62, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !25
  %idxprom.i347 = sext i32 %62 to i64
  %state232 = getelementptr inbounds %struct.DMCNode, ptr %58, i64 %idxprom.i347, i32 1
  %63 = load i8, ptr %state232, align 4, !tbaa !208
  %conv = zext i8 %63 to i32
  %64 = load i32, ptr getelementptr inbounds (%class.StateMap, ptr @_ZZ8dmcModelR5MixerE2sm, i64 0, i32 1), align 4, !tbaa !82
  %65 = load ptr, ptr getelementptr inbounds (%class.StateMap, ptr @_ZZ8dmcModelR5MixerE2sm, i64 0, i32 2, i32 3), align 8, !tbaa !84
  %idxprom.i.i.i = sext i32 %64 to i64
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %65, i64 %idxprom.i.i.i
  %66 = load i32, ptr %arrayidx.i.i.i, align 4, !tbaa !25
  %and.i.i = and i32 %66, 1023
  %cmp.i.i.not = icmp eq i32 %and.i.i, 1023
  %inc.i.i = add i32 %66, 1
  %or.i.i = or i32 %66, 1023
  %p0.0.i.i = select i1 %cmp.i.i.not, i32 %or.i.i, i32 %inc.i.i
  %shr.i.i = lshr i32 %66, 10
  %shl.i.i = shl i32 %60, 22
  %sub.i.i = sub nsw i32 %shl.i.i, %shr.i.i
  %shr3.i.i = ashr i32 %sub.i.i, 3
  %idxprom.i.i = zext i32 %and.i.i to i64
  %arrayidx4.i.i = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %idxprom.i.i
  %67 = load i32, ptr %arrayidx4.i.i, align 4, !tbaa !25
  %mul.i.i = mul nsw i32 %shr3.i.i, %67
  %and5.i.i = and i32 %mul.i.i, -1024
  %add.i.i = add i32 %and5.i.i, %p0.0.i.i
  store i32 %add.i.i, ptr %arrayidx.i.i.i, align 4, !tbaa !25
  store i32 %conv, ptr getelementptr inbounds (%class.StateMap, ptr @_ZZ8dmcModelR5MixerE2sm, i64 0, i32 1), align 4, !tbaa !82
  %idxprom.i2.i = zext i8 %63 to i64
  %arrayidx.i.i = getelementptr inbounds i32, ptr %65, i64 %idxprom.i2.i
  %68 = load i32, ptr %arrayidx.i.i, align 4, !tbaa !25
  %shr.i = lshr i32 %68, 20
  %c1235 = getelementptr inbounds %struct.DMCNode, ptr %58, i64 %idxprom.i347, i32 2
  %bf.load236 = load i24, ptr %c1235, align 1
  %bf.lshr237 = lshr i24 %bf.load236, 12
  %bf.clear242 = and i24 %bf.load236, 4095
  %69 = and i24 %bf.load236, -4096
  %add244 = zext i24 %69 to i32
  %mul245 = add nuw nsw i32 %add244, 20480
  %narrow = add nuw nsw i24 %bf.lshr237, 10
  %narrow365 = add nuw nsw i24 %narrow, %bf.clear242
  %add247 = zext i24 %narrow365 to i32
  %div248 = udiv i32 %mul245, %add247
  %70 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %idxprom.i.i353 = zext i32 %shr.i to i64
  %arrayidx.i.i354 = getelementptr inbounds i16, ptr %70, i64 %idxprom.i.i353
  %71 = load i16, ptr %arrayidx.i.i354, align 2, !tbaa !31
  %nx.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 8
  %72 = load i32, ptr %nx.i, align 8, !tbaa !64
  %inc.i = add nsw i32 %72, 1
  %data.i.i = getelementptr inbounds %class.Mixer, ptr %m, i64 0, i32 3, i32 3
  %73 = load ptr, ptr %data.i.i, align 8, !tbaa !59
  %idxprom.i.i355 = sext i32 %72 to i64
  %arrayidx.i.i356 = getelementptr inbounds i16, ptr %73, i64 %idxprom.i.i355
  store i16 %71, ptr %arrayidx.i.i356, align 2, !tbaa !31
  %idxprom.i.i357 = zext i32 %div248 to i64
  %arrayidx.i.i358 = getelementptr inbounds i16, ptr %70, i64 %idxprom.i.i357
  %74 = load i16, ptr %arrayidx.i.i358, align 2, !tbaa !31
  %inc.i361 = add nsw i32 %72, 2
  store i32 %inc.i361, ptr %nx.i, align 8, !tbaa !64
  %idxprom.i.i363 = sext i32 %inc.i to i64
  %arrayidx.i.i364 = getelementptr inbounds i16, ptr %73, i64 %idxprom.i.i363
  store i16 %74, ptr %arrayidx.i.i364, align 2, !tbaa !31
  ret void

eh.resume:                                        ; preds = %lpad5, %lpad
  %_ZGVZ8dmcModelR5MixerE2sm.sink = phi ptr [ @_ZGVZ8dmcModelR5MixerE2sm, %lpad5 ], [ @_ZGVZ8dmcModelR5MixerE1t, %lpad ]
  %.pn = phi { ptr, i32 } [ %30, %lpad5 ], [ %29, %lpad ]
  tail call void @__cxa_guard_abort(ptr nonnull %_ZGVZ8dmcModelR5MixerE2sm.sink) #39
  resume { ptr, i32 } %.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayI7DMCNodeLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %i) unnamed_addr #5 comdat align 2 {
entry:
  %reserved.i = getelementptr inbounds %class.Array.9, ptr %this, i64 0, i32 1
  store i32 %i, ptr %reserved.i, align 4, !tbaa !213
  store i32 %i, ptr %this, align 8, !tbaa !210
  %cmp.i = icmp slt i32 %i, 1
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %ptr.i = getelementptr inbounds %class.Array.9, ptr %this, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i, i8 0, i64 16, i1 false)
  br label %_ZN5ArrayI7DMCNodeLi0EE6createEi.exit

if.end.i:                                         ; preds = %entry
  %mul.i = mul i32 %i, 12
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = add nsw i32 %0, %mul.i
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %1
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN14ProgramChecker5allocEi.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i

_ZN14ProgramChecker5allocEi.exit.i:               ; preds = %if.then.i.i, %if.end.i
  %conv4.i = sext i32 %mul.i to i64
  %call.i = tail call noalias ptr @calloc(i64 noundef %conv4.i, i64 noundef 1) #41
  %ptr5.i = getelementptr inbounds %class.Array.9, ptr %this, i64 0, i32 2
  store ptr %call.i, ptr %ptr5.i, align 8, !tbaa !214
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then7.i, label %if.end8.i

if.then7.i:                                       ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  %exception.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end8.i:                                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  %data10.i = getelementptr inbounds %class.Array.9, ptr %this, i64 0, i32 3
  store ptr %call.i, ptr %data10.i, align 8, !tbaa !206
  br label %_ZN5ArrayI7DMCNodeLi0EE6createEi.exit

_ZN5ArrayI7DMCNodeLi0EE6createEi.exit:            ; preds = %if.then.i, %if.end8.i
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayI7DMCNodeLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !210
  %mul.neg = mul i32 %0, -12
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i = add nsw i32 %1, %mul.neg
  store i32 %add.i, ptr @programChecker, align 8, !tbaa !13
  %2 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i = icmp sgt i32 %add.i, %2
  br i1 %cmp.i, label %if.then.i, label %_ZN14ProgramChecker5allocEi.exit

if.then.i:                                        ; preds = %entry
  store i32 %add.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit

_ZN14ProgramChecker5allocEi.exit:                 ; preds = %entry, %if.then.i
  %ptr = getelementptr inbounds %class.Array.9, ptr %this, i64 0, i32 2
  %3 = load ptr, ptr %ptr, align 8, !tbaa !214
  tail call void @free(ptr noundef %3) #39
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z13contextModel2v() local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZ13contextModel2vE2cm acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !110

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE2cm) #39
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  %2 = load i32, ptr @level, align 4, !tbaa !25
  %mul = shl i32 2097152, %2
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13contextModel2vE2cm, i32 noundef %mul, i32 noundef 9)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init
  %3 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ13contextModel2vE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE2cm) #39
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %entry
  %4 = load atomic i8, ptr @_ZGVZ13contextModel2vE4rcm7 acquire, align 8
  %guard.uninitialized1 = icmp eq i8 %4, 0
  br i1 %guard.uninitialized1, label %init.check2, label %init.end8, !prof !110

init.check2:                                      ; preds = %init.end
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE4rcm7) #39
  %tobool3.not = icmp eq i32 %5, 0
  br i1 %tobool3.not, label %init.end8, label %init4

init4:                                            ; preds = %init.check2
  %6 = load i32, ptr @level, align 4, !tbaa !25
  %shl5 = shl i32 65536, %6
  invoke void @_ZN13RunContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE4rcm7, i32 noundef %shl5)
          to label %invoke.cont7 unwind label %lpad6

invoke.cont7:                                     ; preds = %init4
  %7 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN13RunContextMapD2Ev, ptr nonnull @_ZZ13contextModel2vE4rcm7, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE4rcm7) #39
  br label %init.end8

init.end8:                                        ; preds = %invoke.cont7, %init.check2, %init.end
  %8 = load atomic i8, ptr @_ZGVZ13contextModel2vE4rcm9 acquire, align 8
  %guard.uninitialized9 = icmp eq i8 %8, 0
  br i1 %guard.uninitialized9, label %init.check10, label %init.end16, !prof !110

init.check10:                                     ; preds = %init.end8
  %9 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE4rcm9) #39
  %tobool11.not = icmp eq i32 %9, 0
  br i1 %tobool11.not, label %init.end16, label %init12

init12:                                           ; preds = %init.check10
  %10 = load i32, ptr @level, align 4, !tbaa !25
  %shl13 = shl i32 65536, %10
  invoke void @_ZN13RunContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE4rcm9, i32 noundef %shl13)
          to label %invoke.cont15 unwind label %lpad14

invoke.cont15:                                    ; preds = %init12
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN13RunContextMapD2Ev, ptr nonnull @_ZZ13contextModel2vE4rcm9, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE4rcm9) #39
  br label %init.end16

init.end16:                                       ; preds = %invoke.cont15, %init.check10, %init.end8
  %12 = load atomic i8, ptr @_ZGVZ13contextModel2vE5rcm10 acquire, align 8
  %guard.uninitialized17 = icmp eq i8 %12, 0
  br i1 %guard.uninitialized17, label %init.check18, label %init.end24, !prof !110

init.check18:                                     ; preds = %init.end16
  %13 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE5rcm10) #39
  %tobool19.not = icmp eq i32 %13, 0
  br i1 %tobool19.not, label %init.end24, label %init20

init20:                                           ; preds = %init.check18
  %14 = load i32, ptr @level, align 4, !tbaa !25
  %shl21 = shl i32 65536, %14
  invoke void @_ZN13RunContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE5rcm10, i32 noundef %shl21)
          to label %invoke.cont23 unwind label %lpad22

invoke.cont23:                                    ; preds = %init20
  %15 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN13RunContextMapD2Ev, ptr nonnull @_ZZ13contextModel2vE5rcm10, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE5rcm10) #39
  br label %init.end24

init.end24:                                       ; preds = %invoke.cont23, %init.check18, %init.end16
  %16 = load atomic i8, ptr @_ZGVZ13contextModel2vE1m acquire, align 8
  %guard.uninitialized25 = icmp eq i8 %16, 0
  br i1 %guard.uninitialized25, label %init.check26, label %init.end31, !prof !110

init.check26:                                     ; preds = %init.end24
  %17 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE1m) #39
  %tobool27.not = icmp eq i32 %17, 0
  br i1 %tobool27.not, label %init.end31, label %init28

init28:                                           ; preds = %init.check26
  invoke void @_ZN5MixerC2Eiiii(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m, i32 noundef 800, i32 noundef 3088, i32 noundef 7, i32 noundef 128)
          to label %invoke.cont30 unwind label %lpad29

invoke.cont30:                                    ; preds = %init28
  %18 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5MixerD2Ev, ptr nonnull @_ZZ13contextModel2vE1m, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE1m) #39
  br label %init.end31

init.end31:                                       ; preds = %invoke.cont30, %init.check26, %init.end24
  %19 = load i32, ptr @bpos, align 4, !tbaa !25
  %cmp = icmp eq i32 %19, 0
  br i1 %cmp, label %if.then, label %if.end49

if.then:                                          ; preds = %init.end31
  %20 = load i32, ptr @_ZZ13contextModel2vE4size, align 4, !tbaa !25
  %dec = add nsw i32 %20, -1
  store i32 %dec, ptr @_ZZ13contextModel2vE4size, align 4, !tbaa !25
  %cmp32 = icmp eq i32 %20, 0
  br i1 %cmp32, label %if.end.thread, label %if.end

if.end.thread:                                    ; preds = %if.then
  %21 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i = add nsw i32 %21, -1
  %22 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i = add nsw i32 %22, -1
  %and.i = and i32 %sub3.i, %sub.i
  %23 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %23, i64 %idxprom.i.i
  %24 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !9
  %conv.i = zext i8 %24 to i32
  store i32 %conv.i, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !215
  br label %if.end49

lpad:                                             ; preds = %init
  %25 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad6:                                            ; preds = %init4
  %26 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad14:                                           ; preds = %init12
  %27 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad22:                                           ; preds = %init20
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad29:                                           ; preds = %init28
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

if.end:                                           ; preds = %if.then
  %cmp34 = icmp eq i32 %dec, -5
  br i1 %cmp34, label %if.then35, label %if.end49

if.then35:                                        ; preds = %if.end
  %30 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i238 = add nsw i32 %30, -4
  %31 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i239 = add nsw i32 %31, -1
  %and.i240 = and i32 %sub3.i239, %sub.i238
  %32 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i241 = sext i32 %and.i240 to i64
  %arrayidx.i.i242 = getelementptr inbounds i8, ptr %32, i64 %idxprom.i.i241
  %33 = load i8, ptr %arrayidx.i.i242, align 1, !tbaa !9
  %conv.i243 = zext i8 %33 to i32
  %shl37 = shl nuw i32 %conv.i243, 24
  %sub.i244 = add nsw i32 %30, -3
  %and.i246 = and i32 %sub3.i239, %sub.i244
  %idxprom.i.i247 = sext i32 %and.i246 to i64
  %arrayidx.i.i248 = getelementptr inbounds i8, ptr %32, i64 %idxprom.i.i247
  %34 = load i8, ptr %arrayidx.i.i248, align 1, !tbaa !9
  %conv.i249 = zext i8 %34 to i32
  %shl39 = shl nuw nsw i32 %conv.i249, 16
  %or = or i32 %shl39, %shl37
  %sub.i250 = add nsw i32 %30, -2
  %and.i252 = and i32 %sub3.i239, %sub.i250
  %idxprom.i.i253 = sext i32 %and.i252 to i64
  %arrayidx.i.i254 = getelementptr inbounds i8, ptr %32, i64 %idxprom.i.i253
  %35 = load i8, ptr %arrayidx.i.i254, align 1, !tbaa !9
  %conv.i255 = zext i8 %35 to i32
  %shl41 = shl nuw nsw i32 %conv.i255, 8
  %or42 = or i32 %or, %shl41
  %sub.i256 = add nsw i32 %30, -1
  %and.i258 = and i32 %sub3.i239, %sub.i256
  %idxprom.i.i259 = sext i32 %and.i258 to i64
  %arrayidx.i.i260 = getelementptr inbounds i8, ptr %32, i64 %idxprom.i.i259
  %36 = load i8, ptr %arrayidx.i.i260, align 1, !tbaa !9
  %conv.i261 = zext i8 %36 to i32
  %or44 = or i32 %or42, %conv.i261
  store i32 %or44, ptr @_ZZ13contextModel2vE4size, align 4, !tbaa !25
  %37 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !215
  %cmp45 = icmp eq i32 %37, 8
  br i1 %cmp45, label %if.then46, label %if.end49

if.then46:                                        ; preds = %if.then35
  %add = add nsw i32 %or44, 8
  store i32 %add, ptr @_ZZ13contextModel2vE4size, align 4, !tbaa !25
  br label %if.end49

if.end49:                                         ; preds = %if.end.thread, %if.end, %if.then46, %if.then35, %init.end31
  %38 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %cmp20.i = icmp sgt i32 %38, 0
  br i1 %cmp20.i, label %for.body.lr.ph.i, label %_ZN5Mixer6updateEv.exit

for.body.lr.ph.i:                                 ; preds = %if.end49
  %39 = load i32, ptr @y, align 4, !tbaa !25
  %shl.i = shl i32 %39, 12
  %40 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 9, i32 3), align 8, !tbaa !61
  %41 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 3, i32 3), align 8
  %42 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8
  %43 = load i32, ptr @_ZZ13contextModel2vE1m, align 8
  %44 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 4, i32 3), align 8
  %45 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8
  %.fr.i = freeze i32 %45
  %add.i.i = add i32 %.fr.i, 7
  %and.i.i = and i32 %add.i.i, -8
  %cmp24.i.i = icmp sgt i32 %and.i.i, 0
  %wide.trip.count.i.i = zext i32 %and.i.i to i64
  br i1 %cmp24.i.i, label %for.body.us.preheader.i, label %_ZN5Mixer6updateEv.exit

for.body.us.preheader.i:                          ; preds = %for.body.lr.ph.i
  %wide.trip.count.i = zext i32 %38 to i64
  %46 = lshr i32 %add.i.i, 3
  %47 = zext i32 %46 to i64
  %48 = shl nuw nsw i64 %47, 4
  %scevgep = getelementptr i8, ptr %44, i64 %48
  %scevgep537 = getelementptr i8, ptr %41, i64 %48
  br label %for.body.us.i

for.body.us.i:                                    ; preds = %if.end.us.i, %for.body.us.preheader.i
  %indvars.iv.i = phi i64 [ 0, %for.body.us.preheader.i ], [ %indvars.iv.next.i, %if.end.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds i32, ptr %40, i64 %indvars.iv.i
  %49 = load i32, ptr %arrayidx.i.us.i, align 4, !tbaa !25
  %sub.us.i = sub nsw i32 %shl.i, %49
  %mul.us.i = mul nsw i32 %sub.us.i, 7
  %tobool.not.us.i = icmp eq i32 %shl.i, %49
  br i1 %tobool.not.us.i, label %if.end.us.i, label %if.then.us.i

if.then.us.i:                                     ; preds = %for.body.us.i
  %arrayidx.i15.us.i = getelementptr inbounds i32, ptr %42, i64 %indvars.iv.i
  %50 = load i32, ptr %arrayidx.i15.us.i, align 4, !tbaa !25
  %mul4.us.i = mul nsw i32 %50, %43
  %idxprom.i17.us.i = sext i32 %mul4.us.i to i64
  %arrayidx.i18.us.i = getelementptr inbounds i16, ptr %44, i64 %idxprom.i17.us.i
  %51 = shl nsw i64 %idxprom.i17.us.i, 1
  %scevgep536 = getelementptr i8, ptr %scevgep, i64 %51
  %bound0 = icmp ult ptr %arrayidx.i18.us.i, %scevgep537
  %bound1 = icmp ult ptr %41, %scevgep536
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i.us.i, label %vector.ph

vector.ph:                                        ; preds = %if.then.us.i
  %broadcast.splatinsert = insertelement <8 x i32> poison, i32 %mul.us.i, i64 0
  %broadcast.splat = shufflevector <8 x i32> %broadcast.splatinsert, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %52 = getelementptr inbounds i16, ptr %arrayidx.i18.us.i, i64 %index
  %wide.load = load <8 x i16>, ptr %52, align 2, !tbaa !31, !alias.scope !217, !noalias !220
  %53 = sext <8 x i16> %wide.load to <8 x i32>
  %54 = getelementptr inbounds i16, ptr %41, i64 %index
  %wide.load538 = load <8 x i16>, ptr %54, align 2, !tbaa !31, !alias.scope !220
  %55 = sext <8 x i16> %wide.load538 to <8 x i32>
  %56 = mul nsw <8 x i32> %broadcast.splat, %55
  %57 = ashr <8 x i32> %56, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %58 = add nsw <8 x i32> %57, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %59 = ashr <8 x i32> %58, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %60 = add nsw <8 x i32> %59, %53
  %61 = tail call <8 x i32> @llvm.smax.v8i32(<8 x i32> %60, <8 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>)
  %62 = tail call <8 x i32> @llvm.smin.v8i32(<8 x i32> %61, <8 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>)
  %63 = trunc <8 x i32> %62 to <8 x i16>
  store <8 x i16> %63, ptr %52, align 2, !tbaa !31, !alias.scope !217, !noalias !220
  %index.next = add nuw i64 %index, 8
  %64 = icmp eq i64 %index.next, %wide.trip.count.i.i
  br i1 %64, label %if.end.us.i, label %vector.body, !llvm.loop !222

for.body.i.us.i:                                  ; preds = %if.then.us.i, %for.body.i.us.i
  %indvars.iv.i.us.i = phi i64 [ %indvars.iv.next.i.us.i, %for.body.i.us.i ], [ 0, %if.then.us.i ]
  %arrayidx.i19.us.i = getelementptr inbounds i16, ptr %arrayidx.i18.us.i, i64 %indvars.iv.i.us.i
  %65 = load i16, ptr %arrayidx.i19.us.i, align 2, !tbaa !31
  %conv.i.us.i = sext i16 %65 to i32
  %arrayidx2.i.us.i = getelementptr inbounds i16, ptr %41, i64 %indvars.iv.i.us.i
  %66 = load i16, ptr %arrayidx2.i.us.i, align 2, !tbaa !31
  %conv3.i.us.i = sext i16 %66 to i32
  %mul.i.us.i = mul nsw i32 %mul.us.i, %conv3.i.us.i
  %shr.i.us.i = ashr i32 %mul.i.us.i, 15
  %add5.i.us.i = add nsw i32 %shr.i.us.i, 1
  %shr6.i.us.i = ashr i32 %add5.i.us.i, 1
  %add7.i.us.i = add nsw i32 %shr6.i.us.i, %conv.i.us.i
  %spec.store.select.i.us.i = tail call i32 @llvm.smax.i32(i32 %add7.i.us.i, i32 -32768)
  %spec.store.select15.i.us.i = tail call i32 @llvm.smin.i32(i32 %spec.store.select.i.us.i, i32 32767)
  %conv12.i.us.i = trunc i32 %spec.store.select15.i.us.i to i16
  store i16 %conv12.i.us.i, ptr %arrayidx.i19.us.i, align 2, !tbaa !31
  %indvars.iv.next.i.us.i = add nuw nsw i64 %indvars.iv.i.us.i, 1
  %exitcond.not.i.us.i = icmp eq i64 %indvars.iv.next.i.us.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.us.i, label %if.end.us.i, label %for.body.i.us.i, !llvm.loop !223

if.end.us.i:                                      ; preds = %vector.body, %for.body.i.us.i, %for.body.us.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %_ZN5Mixer6updateEv.exit, label %for.body.us.i, !llvm.loop !152

_ZN5Mixer6updateEv.exit:                          ; preds = %if.end.us.i, %if.end49, %for.body.lr.ph.i
  store i32 0, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  store i32 0, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  store i32 1, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !64
  %67 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 3, i32 3), align 8, !tbaa !59
  store i16 256, ptr %67, align 2, !tbaa !31
  %call50 = tail call noundef i32 @_Z10matchModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %68 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %69 = and i32 %call50, 65535
  %idxprom.i.i264 = zext i32 %69 to i64
  %arrayidx.i.i265 = getelementptr inbounds i8, ptr %68, i64 %idxprom.i.i264
  %70 = load i8, ptr %arrayidx.i.i265, align 1, !tbaa !9
  %conv2.i = zext i8 %70 to i32
  %call52 = tail call noundef i32 @_Z8wavModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %71 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4
  %cmp53 = icmp eq i32 %71, 1
  br i1 %cmp53, label %if.then54, label %if.end61

if.then54:                                        ; preds = %_ZN5Mixer6updateEv.exit
  %call55 = tail call noundef i32 @_Z9jpegModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %tobool56.not = icmp eq i32 %call55, 0
  br i1 %tobool56.not, label %if.then54.if.end61_crit_edge, label %cleanup

if.then54.if.end61_crit_edge:                     ; preds = %if.then54
  %.pre = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4
  br label %if.end61

cleanup:                                          ; preds = %if.then54
  %72 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add.i = add nsw i32 %72, 1
  %73 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %inc.i266 = add nsw i32 %73, 1
  store i32 %inc.i266, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %74 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %idxprom.i.i267 = sext i32 %73 to i64
  %arrayidx.i.i268 = getelementptr inbounds i32, ptr %74, i64 %idxprom.i.i267
  store i32 %add.i, ptr %arrayidx.i.i268, align 4, !tbaa !25
  %75 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add3.i = add nsw i32 %75, 8
  store i32 %add3.i, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %sub = add nsw i32 %call55, -1
  %add.i269 = add nsw i32 %sub, %add3.i
  %76 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %inc.i270 = add nsw i32 %76, 1
  store i32 %inc.i270, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %idxprom.i.i271 = sext i32 %76 to i64
  %arrayidx.i.i272 = getelementptr inbounds i32, ptr %74, i64 %idxprom.i.i271
  store i32 %add.i269, ptr %arrayidx.i.i272, align 4, !tbaa !25
  %77 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add3.i273 = add nsw i32 %77, 257
  store i32 %add3.i273, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %78 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i274 = add nsw i32 %78, -1
  %79 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i275 = add nsw i32 %79, -1
  %and.i276 = and i32 %sub3.i275, %sub.i274
  %80 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i277 = sext i32 %and.i276 to i64
  %arrayidx.i.i278 = getelementptr inbounds i8, ptr %80, i64 %idxprom.i.i277
  %81 = load i8, ptr %arrayidx.i.i278, align 1, !tbaa !9
  %conv.i279 = zext i8 %81 to i32
  %add.i280 = add nsw i32 %add3.i273, %conv.i279
  br label %cleanup203.sink.split

if.end61:                                         ; preds = %if.then54.if.end61_crit_edge, %_ZN5Mixer6updateEv.exit
  %82 = phi i32 [ %.pre, %if.then54.if.end61_crit_edge ], [ %71, %_ZN5Mixer6updateEv.exit ]
  %83 = and i32 %82, -2
  %or.cond = icmp eq i32 %83, 4
  br i1 %or.cond, label %if.then64, label %if.end79

if.then64:                                        ; preds = %if.end61
  %call65 = tail call noundef i32 @_Z8bmpModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %cmp66 = icmp slt i32 %call65, 1
  br i1 %cmp66, label %cleanup76.thread, label %cleanup76

cleanup76.thread:                                 ; preds = %if.then64
  %.pr = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !215
  br label %if.end79

cleanup76:                                        ; preds = %if.then64
  %84 = load i32, ptr @_ZZ13contextModel2vE3col, align 4, !tbaa !25
  %inc = add nsw i32 %84, 1
  %cmp68 = icmp sgt i32 %84, 22
  %spec.store.select = select i1 %cmp68, i32 0, i32 %inc
  store i32 %spec.store.select, ptr @_ZZ13contextModel2vE3col, align 4
  %85 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add.i285 = add nsw i32 %85, 2
  %86 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %inc.i286 = add nsw i32 %86, 1
  store i32 %inc.i286, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %87 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %idxprom.i.i287 = sext i32 %86 to i64
  %arrayidx.i.i288 = getelementptr inbounds i32, ptr %87, i64 %idxprom.i.i287
  store i32 %add.i285, ptr %arrayidx.i.i288, align 4, !tbaa !25
  %88 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add3.i289 = add nsw i32 %88, 8
  store i32 %add3.i289, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add.i290 = add nsw i32 %add3.i289, %spec.store.select
  %89 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %inc.i291 = add nsw i32 %89, 1
  store i32 %inc.i291, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %idxprom.i.i292 = sext i32 %89 to i64
  %arrayidx.i.i293 = getelementptr inbounds i32, ptr %87, i64 %idxprom.i.i292
  store i32 %add.i290, ptr %arrayidx.i.i293, align 4, !tbaa !25
  %90 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add3.i294 = add nsw i32 %90, 24
  store i32 %add3.i294, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %91 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i295 = sub nsw i32 %91, %call65
  %92 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i296 = add nsw i32 %92, -1
  %and.i297 = and i32 %sub3.i296, %sub.i295
  %93 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i298 = sext i32 %and.i297 to i64
  %arrayidx.i.i299 = getelementptr inbounds i8, ptr %93, i64 %idxprom.i.i298
  %94 = load i8, ptr %arrayidx.i.i299, align 1, !tbaa !9
  %conv.i300 = zext i8 %94 to i32
  %sub.i301 = add nsw i32 %91, -3
  %and.i303 = and i32 %sub3.i296, %sub.i301
  %idxprom.i.i304 = sext i32 %and.i303 to i64
  %arrayidx.i.i305 = getelementptr inbounds i8, ptr %93, i64 %idxprom.i.i304
  %95 = load i8, ptr %arrayidx.i.i305, align 1, !tbaa !9
  %conv.i306 = zext i8 %95 to i32
  %add73 = add nuw nsw i32 %conv.i306, %conv.i300
  %shr = lshr i32 %add73, 4
  %add.i307 = add nsw i32 %shr, %add3.i294
  %96 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %inc.i308 = add nsw i32 %96, 1
  store i32 %inc.i308, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %idxprom.i.i309 = sext i32 %96 to i64
  %arrayidx.i.i310 = getelementptr inbounds i32, ptr %87, i64 %idxprom.i.i309
  store i32 %add.i307, ptr %arrayidx.i.i310, align 4, !tbaa !25
  %97 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add3.i311 = add nsw i32 %97, 32
  store i32 %add3.i311, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %98 = load i32, ptr @c0, align 4, !tbaa !25
  %add.i312 = add nsw i32 %98, %add3.i311
  br label %cleanup203.sink.split

if.end79:                                         ; preds = %cleanup76.thread, %if.end61
  %99 = phi i32 [ %.pr, %cleanup76.thread ], [ %82, %if.end61 ]
  %cmp80 = icmp eq i32 %99, 6
  br i1 %cmp80, label %if.then81, label %if.end87

if.then81:                                        ; preds = %if.end79
  %call82 = tail call noundef i32 @_Z8pgmModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m), !range !224
  %cmp83.not = icmp eq i32 %call82, 0
  br i1 %cmp83.not, label %if.then81.if.end87_crit_edge, label %cleanup203

if.then81.if.end87_crit_edge:                     ; preds = %if.then81
  %.pre530 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !215
  br label %if.end87

if.end87:                                         ; preds = %if.then81.if.end87_crit_edge, %if.end79
  %100 = phi i32 [ %.pre530, %if.then81.if.end87_crit_edge ], [ %99, %if.end79 ]
  %cmp88 = icmp eq i32 %100, 3
  br i1 %cmp88, label %if.then89, label %if.end95

if.then89:                                        ; preds = %if.end87
  %call90 = tail call noundef i32 @_Z9bmpModel8R5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %cmp91 = icmp sgt i32 %call90, 0
  br i1 %cmp91, label %cleanup203, label %if.end95thread-pre-split

if.end95thread-pre-split:                         ; preds = %if.then89
  %.pr525 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !215
  br label %if.end95

if.end95:                                         ; preds = %if.end95thread-pre-split, %if.end87
  %101 = phi i32 [ %.pr525, %if.end95thread-pre-split ], [ %100, %if.end87 ]
  %cmp96 = icmp eq i32 %101, 7
  br i1 %cmp96, label %if.then97, label %if.end103

if.then97:                                        ; preds = %if.end95
  %call98 = tail call noundef i32 @_Z9rgbModel8R5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m), !range !225
  %cmp99.not = icmp eq i32 %call98, 0
  br i1 %cmp99.not, label %if.end103, label %cleanup203

if.end103:                                        ; preds = %if.then97, %if.end95
  %cmp104 = icmp sgt i32 %call52, 0
  br i1 %cmp104, label %if.then105, label %if.end118

if.then105:                                       ; preds = %if.end103
  %and = and i32 %call52, 255
  %shr106 = lshr i32 %call52, 8
  %mul107 = mul nuw nsw i32 %shr106, %and
  %102 = load i32, ptr @_ZZ13contextModel2vE3col_0, align 4, !tbaa !25
  %inc108 = add nsw i32 %102, 1
  %cmp109.not = icmp slt i32 %inc108, %mul107
  %spec.store.select207 = select i1 %cmp109.not, i32 %inc108, i32 0
  store i32 %spec.store.select207, ptr @_ZZ13contextModel2vE3col_0, align 4
  %cmp112.not = icmp eq i32 %mul107, %and
  %.pre532 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  br i1 %cmp112.not, label %if.end114, label %if.then113

if.then113:                                       ; preds = %if.then105
  %add.i317 = add nsw i32 %.pre532, %spec.store.select207
  %103 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %inc.i318 = add nsw i32 %103, 1
  store i32 %inc.i318, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %104 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %idxprom.i.i319 = sext i32 %103 to i64
  %arrayidx.i.i320 = getelementptr inbounds i32, ptr %104, i64 %idxprom.i.i319
  store i32 %add.i317, ptr %arrayidx.i.i320, align 4, !tbaa !25
  %105 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add3.i321 = add nsw i32 %105, %mul107
  store i32 %add3.i321, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  br label %if.end114

if.end114:                                        ; preds = %if.then105, %if.then113
  %106 = phi i32 [ %add3.i321, %if.then113 ], [ %.pre532, %if.then105 ]
  %add.i322 = add nsw i32 %106, %spec.store.select207
  %107 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %inc.i323 = add nsw i32 %107, 1
  store i32 %inc.i323, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %108 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %idxprom.i.i324 = sext i32 %107 to i64
  %arrayidx.i.i325 = getelementptr inbounds i32, ptr %108, i64 %idxprom.i.i324
  store i32 %add.i322, ptr %arrayidx.i.i325, align 4, !tbaa !25
  %109 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add3.i326 = add nsw i32 %109, %and
  store i32 %add3.i326, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %110 = load i32, ptr @c0, align 4, !tbaa !25
  %add.i327 = add nsw i32 %110, %add3.i326
  br label %cleanup203.sink.split

if.end118:                                        ; preds = %if.end103
  %111 = load i32, ptr @bpos, align 4, !tbaa !25
  %cmp119 = icmp eq i32 %111, 0
  br i1 %cmp119, label %for.cond.preheader, label %if.end138

for.cond.preheader:                               ; preds = %if.end118
  %112 = load i32, ptr @c4, align 4, !tbaa !25
  %and124 = and i32 %112, 255
  %113 = load i32, ptr @_ZZ13contextModel2vE3cxt.13, align 16, !tbaa !25
  %mul123.1 = mul i32 %113, 257
  %add125.1 = add i32 %mul123.1, 1
  %add126.1 = add i32 %add125.1, %and124
  store i32 %add126.1, ptr @_ZZ13contextModel2vE3cxt.14, align 8, !tbaa !25
  %114 = load i32, ptr @_ZZ13contextModel2vE3cxt.12, align 16, !tbaa !25
  %mul123.2 = mul i32 %114, 257
  %add125.2 = add i32 %mul123.2, 1
  %add126.2 = add i32 %add125.2, %and124
  store i32 %add126.2, ptr @_ZZ13contextModel2vE3cxt.13, align 16, !tbaa !25
  %115 = load i32, ptr @_ZZ13contextModel2vE3cxt.11, align 16, !tbaa !25
  %mul123.3 = mul i32 %115, 257
  %add125.3 = add i32 %mul123.3, 1
  %add126.3 = add i32 %add125.3, %and124
  store i32 %add126.3, ptr @_ZZ13contextModel2vE3cxt.12, align 16, !tbaa !25
  %116 = load i32, ptr @_ZZ13contextModel2vE3cxt.10, align 8, !tbaa !25
  %mul123.4 = mul i32 %116, 257
  %add125.4 = add i32 %mul123.4, 1
  %add126.4 = add i32 %add125.4, %and124
  store i32 %add126.4, ptr @_ZZ13contextModel2vE3cxt.11, align 16, !tbaa !25
  %117 = load i32, ptr @_ZZ13contextModel2vE3cxt.9, align 16, !tbaa !25
  %mul123.5 = mul i32 %117, 257
  %add125.5 = add i32 %mul123.5, 1
  %add126.5 = add i32 %add125.5, %and124
  store i32 %add126.5, ptr @_ZZ13contextModel2vE3cxt.10, align 8, !tbaa !25
  %118 = load i32, ptr @_ZZ13contextModel2vE3cxt.8, align 16, !tbaa !25
  %mul123.6 = mul i32 %118, 257
  %add125.6 = add i32 %mul123.6, 1
  %add126.6 = add i32 %add125.6, %and124
  store i32 %add126.6, ptr @_ZZ13contextModel2vE3cxt.9, align 16, !tbaa !25
  %119 = load i32, ptr @_ZZ13contextModel2vE3cxt.7, align 16, !tbaa !25
  %mul123.7 = mul i32 %119, 257
  %add125.7 = add i32 %mul123.7, 1
  %add126.7 = add i32 %add125.7, %and124
  store i32 %add126.7, ptr @_ZZ13contextModel2vE3cxt.8, align 16, !tbaa !25
  %120 = load i32, ptr @_ZZ13contextModel2vE3cxt.6, align 8, !tbaa !25
  %mul123.8 = mul i32 %120, 257
  %add125.8 = add i32 %mul123.8, 1
  %add126.8 = add i32 %add125.8, %and124
  store i32 %add126.8, ptr @_ZZ13contextModel2vE3cxt.7, align 16, !tbaa !25
  %121 = load i32, ptr @_ZZ13contextModel2vE3cxt.5, align 16, !tbaa !25
  %mul123.9 = mul i32 %121, 257
  %add125.9 = add i32 %mul123.9, 1
  %add126.9 = add i32 %add125.9, %and124
  store i32 %add126.9, ptr @_ZZ13contextModel2vE3cxt.6, align 8, !tbaa !25
  %122 = load i32, ptr @_ZZ13contextModel2vE3cxt.4, align 16, !tbaa !25
  %mul123.10 = mul i32 %122, 257
  %add125.10 = add i32 %mul123.10, 1
  %add126.10 = add i32 %add125.10, %and124
  store i32 %add126.10, ptr @_ZZ13contextModel2vE3cxt.5, align 16, !tbaa !25
  %123 = load i32, ptr @_ZZ13contextModel2vE3cxt.3, align 16, !tbaa !25
  %mul123.11 = mul i32 %123, 257
  %add125.11 = add i32 %mul123.11, 1
  %add126.11 = add i32 %add125.11, %and124
  store i32 %add126.11, ptr @_ZZ13contextModel2vE3cxt.4, align 16, !tbaa !25
  %124 = load i32, ptr @_ZZ13contextModel2vE3cxt.2, align 8, !tbaa !25
  %mul123.12 = mul i32 %124, 257
  %add125.12 = add i32 %mul123.12, 1
  %add126.12 = add i32 %add125.12, %and124
  store i32 %add126.12, ptr @_ZZ13contextModel2vE3cxt.3, align 16, !tbaa !25
  %125 = load i32, ptr @_ZZ13contextModel2vE3cxt.1, align 16, !tbaa !25
  %mul123.13 = mul i32 %125, 257
  %add125.13 = add i32 %mul123.13, 1
  %add126.13 = add i32 %add125.13, %and124
  store i32 %add126.13, ptr @_ZZ13contextModel2vE3cxt.2, align 8, !tbaa !25
  %add126.14 = add nuw nsw i32 %and124, 1
  store i32 %add126.14, ptr @_ZZ13contextModel2vE3cxt.1, align 16, !tbaa !25
  %126 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %127 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i332 = add nsw i32 %127, 1
  store i32 %inc.i332, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %or.i = tail call i32 @llvm.fshl.i32(i32 %127, i32 %127, i32 16)
  %mul2.i = mul i32 %or.i, 123456791
  %add3.i334 = add i32 %mul2.i, %127
  %idxprom.i.i335 = sext i32 %127 to i64
  %arrayidx.i.i336 = getelementptr inbounds i32, ptr %126, i64 %idxprom.i.i335
  store i32 %add3.i334, ptr %arrayidx.i.i336, align 4, !tbaa !25
  %128 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i332.1 = add nsw i32 %128, 1
  store i32 %inc.i332.1, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i.1 = mul i32 %add126.14, 987654323
  %add.i333.1 = add i32 %128, %mul.i.1
  %or.i.1 = tail call i32 @llvm.fshl.i32(i32 %add.i333.1, i32 %add.i333.1, i32 16)
  %mul2.i.1 = mul i32 %or.i.1, 123456791
  %add3.i334.1 = add i32 %mul2.i.1, %128
  %idxprom.i.i335.1 = sext i32 %128 to i64
  %arrayidx.i.i336.1 = getelementptr inbounds i32, ptr %126, i64 %idxprom.i.i335.1
  store i32 %add3.i334.1, ptr %arrayidx.i.i336.1, align 4, !tbaa !25
  %129 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i332.2 = add nsw i32 %129, 1
  store i32 %inc.i332.2, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i.2 = mul i32 %add126.13, 987654323
  %add.i333.2 = add i32 %129, %mul.i.2
  %or.i.2 = tail call i32 @llvm.fshl.i32(i32 %add.i333.2, i32 %add.i333.2, i32 16)
  %mul2.i.2 = mul i32 %or.i.2, 123456791
  %add3.i334.2 = add i32 %mul2.i.2, %129
  %idxprom.i.i335.2 = sext i32 %129 to i64
  %arrayidx.i.i336.2 = getelementptr inbounds i32, ptr %126, i64 %idxprom.i.i335.2
  store i32 %add3.i334.2, ptr %arrayidx.i.i336.2, align 4, !tbaa !25
  %130 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i332.3 = add nsw i32 %130, 1
  store i32 %inc.i332.3, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i.3 = mul i32 %add126.12, 987654323
  %add.i333.3 = add i32 %130, %mul.i.3
  %or.i.3 = tail call i32 @llvm.fshl.i32(i32 %add.i333.3, i32 %add.i333.3, i32 16)
  %mul2.i.3 = mul i32 %or.i.3, 123456791
  %add3.i334.3 = add i32 %mul2.i.3, %130
  %idxprom.i.i335.3 = sext i32 %130 to i64
  %arrayidx.i.i336.3 = getelementptr inbounds i32, ptr %126, i64 %idxprom.i.i335.3
  store i32 %add3.i334.3, ptr %arrayidx.i.i336.3, align 4, !tbaa !25
  %131 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i332.4 = add nsw i32 %131, 1
  store i32 %inc.i332.4, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i.4 = mul i32 %add126.11, 987654323
  %add.i333.4 = add i32 %131, %mul.i.4
  %or.i.4 = tail call i32 @llvm.fshl.i32(i32 %add.i333.4, i32 %add.i333.4, i32 16)
  %mul2.i.4 = mul i32 %or.i.4, 123456791
  %add3.i334.4 = add i32 %mul2.i.4, %131
  %idxprom.i.i335.4 = sext i32 %131 to i64
  %arrayidx.i.i336.4 = getelementptr inbounds i32, ptr %126, i64 %idxprom.i.i335.4
  store i32 %add3.i334.4, ptr %arrayidx.i.i336.4, align 4, !tbaa !25
  %132 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i332.5 = add nsw i32 %132, 1
  store i32 %inc.i332.5, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i.5 = mul i32 %add126.10, 987654323
  %add.i333.5 = add i32 %132, %mul.i.5
  %or.i.5 = tail call i32 @llvm.fshl.i32(i32 %add.i333.5, i32 %add.i333.5, i32 16)
  %mul2.i.5 = mul i32 %or.i.5, 123456791
  %add3.i334.5 = add i32 %mul2.i.5, %132
  %idxprom.i.i335.5 = sext i32 %132 to i64
  %arrayidx.i.i336.5 = getelementptr inbounds i32, ptr %126, i64 %idxprom.i.i335.5
  store i32 %add3.i334.5, ptr %arrayidx.i.i336.5, align 4, !tbaa !25
  %133 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i332.6 = add nsw i32 %133, 1
  store i32 %inc.i332.6, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i.6 = mul i32 %add126.9, 987654323
  %add.i333.6 = add i32 %133, %mul.i.6
  %or.i.6 = tail call i32 @llvm.fshl.i32(i32 %add.i333.6, i32 %add.i333.6, i32 16)
  %mul2.i.6 = mul i32 %or.i.6, 123456791
  %add3.i334.6 = add i32 %mul2.i.6, %133
  %idxprom.i.i335.6 = sext i32 %133 to i64
  %arrayidx.i.i336.6 = getelementptr inbounds i32, ptr %126, i64 %idxprom.i.i335.6
  store i32 %add3.i334.6, ptr %arrayidx.i.i336.6, align 4, !tbaa !25
  %134 = load i32, ptr @_ZZ13contextModel2vE3cxt.7, align 16, !tbaa !25
  %135 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm7, i64 0, i32 1), align 8, !tbaa !226
  %136 = load i8, ptr %135, align 1, !tbaa !9
  %cmp.i = icmp eq i8 %136, 0
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %for.cond.preheader
  %arrayidx3.i = getelementptr inbounds i8, ptr %135, i64 1
  %137 = load i8, ptr %arrayidx3.i, align 1, !tbaa !9
  %138 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i = add nsw i32 %138, -1
  %139 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i = add nsw i32 %139, -1
  %and.i.i337 = and i32 %sub3.i.i, %sub.i.i
  %140 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i = sext i32 %and.i.i337 to i64
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %140, i64 %idxprom.i.i.i
  %141 = load i8, ptr %arrayidx.i.i.i, align 1, !tbaa !9
  %cmp5.not.i = icmp eq i8 %137, %141
  br i1 %cmp5.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i, %for.cond.preheader
  store i8 1, ptr %135, align 1, !tbaa !9
  %142 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i22.i = add nsw i32 %142, -1
  %143 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i23.i = add nsw i32 %143, -1
  %and.i24.i = and i32 %sub3.i23.i, %sub.i22.i
  %144 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i25.i = sext i32 %and.i24.i to i64
  %arrayidx.i.i26.i = getelementptr inbounds i8, ptr %144, i64 %idxprom.i.i25.i
  %145 = load i8, ptr %arrayidx.i.i26.i, align 1, !tbaa !9
  %146 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm7, i64 0, i32 1), align 8, !tbaa !226
  %arrayidx11.i = getelementptr inbounds i8, ptr %146, i64 1
  store i8 %145, ptr %arrayidx11.i, align 1, !tbaa !9
  br label %_ZN13RunContextMap3setEj.exit

if.else.i:                                        ; preds = %lor.lhs.false.i
  %cmp15.not.i = icmp eq i8 %136, -1
  br i1 %cmp15.not.i, label %_ZN13RunContextMap3setEj.exit, label %if.then16.i

if.then16.i:                                      ; preds = %if.else.i
  %inc.i338 = add nuw i8 %136, 1
  store i8 %inc.i338, ptr %135, align 1, !tbaa !9
  br label %_ZN13RunContextMap3setEj.exit

_ZN13RunContextMap3setEj.exit:                    ; preds = %if.then.i, %if.else.i, %if.then16.i
  %call20.i = tail call noundef ptr @_ZN2BHILi4EEixEj(ptr noundef nonnull align 8 dereferenceable(28) @_ZZ13contextModel2vE4rcm7, i32 noundef %134)
  %add.ptr.i = getelementptr inbounds i8, ptr %call20.i, i64 1
  store ptr %add.ptr.i, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm7, i64 0, i32 1), align 8, !tbaa !226
  %147 = load i32, ptr @_ZZ13contextModel2vE3cxt.8, align 16, !tbaa !25
  %148 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i339 = add nsw i32 %148, 1
  store i32 %inc.i339, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i340 = mul i32 %147, 987654323
  %add.i341 = add i32 %148, %mul.i340
  %or.i342 = tail call i32 @llvm.fshl.i32(i32 %add.i341, i32 %add.i341, i32 16)
  %mul2.i343 = mul i32 %or.i342, 123456791
  %add3.i344 = add i32 %mul2.i343, %148
  %149 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %idxprom.i.i345 = sext i32 %148 to i64
  %arrayidx.i.i346 = getelementptr inbounds i32, ptr %149, i64 %idxprom.i.i345
  store i32 %add3.i344, ptr %arrayidx.i.i346, align 4, !tbaa !25
  %150 = load i32, ptr @_ZZ13contextModel2vE3cxt.10, align 8, !tbaa !25
  %151 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm9, i64 0, i32 1), align 8, !tbaa !226
  %152 = load i8, ptr %151, align 1, !tbaa !9
  %cmp.i347 = icmp eq i8 %152, 0
  br i1 %cmp.i347, label %if.then.i362, label %lor.lhs.false.i355

lor.lhs.false.i355:                               ; preds = %_ZN13RunContextMap3setEj.exit
  %arrayidx3.i348 = getelementptr inbounds i8, ptr %151, i64 1
  %153 = load i8, ptr %arrayidx3.i348, align 1, !tbaa !9
  %154 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i349 = add nsw i32 %154, -1
  %155 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i350 = add nsw i32 %155, -1
  %and.i.i351 = and i32 %sub3.i.i350, %sub.i.i349
  %156 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i352 = sext i32 %and.i.i351 to i64
  %arrayidx.i.i.i353 = getelementptr inbounds i8, ptr %156, i64 %idxprom.i.i.i352
  %157 = load i8, ptr %arrayidx.i.i.i353, align 1, !tbaa !9
  %cmp5.not.i354 = icmp eq i8 %153, %157
  br i1 %cmp5.not.i354, label %if.else.i364, label %if.then.i362

if.then.i362:                                     ; preds = %lor.lhs.false.i355, %_ZN13RunContextMap3setEj.exit
  store i8 1, ptr %151, align 1, !tbaa !9
  %158 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i22.i356 = add nsw i32 %158, -1
  %159 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i23.i357 = add nsw i32 %159, -1
  %and.i24.i358 = and i32 %sub3.i23.i357, %sub.i22.i356
  %160 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i25.i359 = sext i32 %and.i24.i358 to i64
  %arrayidx.i.i26.i360 = getelementptr inbounds i8, ptr %160, i64 %idxprom.i.i25.i359
  %161 = load i8, ptr %arrayidx.i.i26.i360, align 1, !tbaa !9
  %162 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm9, i64 0, i32 1), align 8, !tbaa !226
  %arrayidx11.i361 = getelementptr inbounds i8, ptr %162, i64 1
  store i8 %161, ptr %arrayidx11.i361, align 1, !tbaa !9
  br label %_ZN13RunContextMap3setEj.exit369

if.else.i364:                                     ; preds = %lor.lhs.false.i355
  %cmp15.not.i363 = icmp eq i8 %152, -1
  br i1 %cmp15.not.i363, label %_ZN13RunContextMap3setEj.exit369, label %if.then16.i366

if.then16.i366:                                   ; preds = %if.else.i364
  %inc.i365 = add nuw i8 %152, 1
  store i8 %inc.i365, ptr %151, align 1, !tbaa !9
  br label %_ZN13RunContextMap3setEj.exit369

_ZN13RunContextMap3setEj.exit369:                 ; preds = %if.then.i362, %if.else.i364, %if.then16.i366
  %call20.i367 = tail call noundef ptr @_ZN2BHILi4EEixEj(ptr noundef nonnull align 8 dereferenceable(28) @_ZZ13contextModel2vE4rcm9, i32 noundef %150)
  %add.ptr.i368 = getelementptr inbounds i8, ptr %call20.i367, i64 1
  store ptr %add.ptr.i368, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm9, i64 0, i32 1), align 8, !tbaa !226
  %163 = load i32, ptr @_ZZ13contextModel2vE3cxt.12, align 16, !tbaa !25
  %164 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE5rcm10, i64 0, i32 1), align 8, !tbaa !226
  %165 = load i8, ptr %164, align 1, !tbaa !9
  %cmp.i370 = icmp eq i8 %165, 0
  br i1 %cmp.i370, label %if.then.i385, label %lor.lhs.false.i378

lor.lhs.false.i378:                               ; preds = %_ZN13RunContextMap3setEj.exit369
  %arrayidx3.i371 = getelementptr inbounds i8, ptr %164, i64 1
  %166 = load i8, ptr %arrayidx3.i371, align 1, !tbaa !9
  %167 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i372 = add nsw i32 %167, -1
  %168 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i373 = add nsw i32 %168, -1
  %and.i.i374 = and i32 %sub3.i.i373, %sub.i.i372
  %169 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i375 = sext i32 %and.i.i374 to i64
  %arrayidx.i.i.i376 = getelementptr inbounds i8, ptr %169, i64 %idxprom.i.i.i375
  %170 = load i8, ptr %arrayidx.i.i.i376, align 1, !tbaa !9
  %cmp5.not.i377 = icmp eq i8 %166, %170
  br i1 %cmp5.not.i377, label %if.else.i387, label %if.then.i385

if.then.i385:                                     ; preds = %lor.lhs.false.i378, %_ZN13RunContextMap3setEj.exit369
  store i8 1, ptr %164, align 1, !tbaa !9
  %171 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i22.i379 = add nsw i32 %171, -1
  %172 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i23.i380 = add nsw i32 %172, -1
  %and.i24.i381 = and i32 %sub3.i23.i380, %sub.i22.i379
  %173 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i25.i382 = sext i32 %and.i24.i381 to i64
  %arrayidx.i.i26.i383 = getelementptr inbounds i8, ptr %173, i64 %idxprom.i.i25.i382
  %174 = load i8, ptr %arrayidx.i.i26.i383, align 1, !tbaa !9
  %175 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE5rcm10, i64 0, i32 1), align 8, !tbaa !226
  %arrayidx11.i384 = getelementptr inbounds i8, ptr %175, i64 1
  store i8 %174, ptr %arrayidx11.i384, align 1, !tbaa !9
  br label %_ZN13RunContextMap3setEj.exit392

if.else.i387:                                     ; preds = %lor.lhs.false.i378
  %cmp15.not.i386 = icmp eq i8 %165, -1
  br i1 %cmp15.not.i386, label %_ZN13RunContextMap3setEj.exit392, label %if.then16.i389

if.then16.i389:                                   ; preds = %if.else.i387
  %inc.i388 = add nuw i8 %165, 1
  store i8 %inc.i388, ptr %164, align 1, !tbaa !9
  br label %_ZN13RunContextMap3setEj.exit392

_ZN13RunContextMap3setEj.exit392:                 ; preds = %if.then.i385, %if.else.i387, %if.then16.i389
  %call20.i390 = tail call noundef ptr @_ZN2BHILi4EEixEj(ptr noundef nonnull align 8 dereferenceable(28) @_ZZ13contextModel2vE5rcm10, i32 noundef %163)
  %add.ptr.i391 = getelementptr inbounds i8, ptr %call20.i390, i64 1
  store ptr %add.ptr.i391, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE5rcm10, i64 0, i32 1), align 8, !tbaa !226
  %176 = load i32, ptr @_ZZ13contextModel2vE3cxt.14, align 8, !tbaa !25
  %177 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %inc.i393 = add nsw i32 %177, 1
  store i32 %inc.i393, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %mul.i394 = mul i32 %176, 987654323
  %add.i395 = add i32 %177, %mul.i394
  %or.i396 = tail call i32 @llvm.fshl.i32(i32 %add.i395, i32 %add.i395, i32 16)
  %mul2.i397 = mul i32 %or.i396, 123456791
  %add3.i398 = add i32 %mul2.i397, %177
  %178 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %idxprom.i.i399 = sext i32 %177 to i64
  %arrayidx.i.i400 = getelementptr inbounds i32, ptr %178, i64 %idxprom.i.i399
  store i32 %add3.i398, ptr %arrayidx.i.i400, align 4, !tbaa !25
  %.pre531 = load i32, ptr @bpos, align 4, !tbaa !25
  br label %if.end138

if.end138:                                        ; preds = %_ZN13RunContextMap3setEj.exit392, %if.end118
  %179 = phi i32 [ %.pre531, %_ZN13RunContextMap3setEj.exit392 ], [ %111, %if.end118 ]
  %180 = load i32, ptr @c0, align 4, !tbaa !25
  %181 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i.i401 = add nsw i32 %181, -1
  %182 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i.i402 = add nsw i32 %182, -1
  %and.i.i403 = and i32 %sub3.i.i402, %sub.i.i401
  %183 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i.i404 = sext i32 %and.i.i403 to i64
  %arrayidx.i.i.i405 = getelementptr inbounds i8, ptr %183, i64 %idxprom.i.i.i404
  %184 = load i8, ptr %arrayidx.i.i.i405, align 1, !tbaa !9
  %conv.i.i = zext i8 %184 to i32
  %185 = load i32, ptr @y, align 4, !tbaa !25
  %call2.i = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13contextModel2vE2cm, ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m, i32 noundef %180, i32 noundef %179, i32 noundef %conv.i.i, i32 noundef %185)
  %186 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm7, i64 0, i32 1), align 8, !tbaa !226
  %arrayidx.i.i406 = getelementptr inbounds i8, ptr %186, i64 1
  %187 = load i8, ptr %arrayidx.i.i406, align 1, !tbaa !9
  %conv.i.i407 = zext i8 %187 to i32
  %add.i.i408 = or i32 %conv.i.i407, 256
  %188 = load i32, ptr @bpos, align 4, !tbaa !25
  %sub.i.i409 = sub nsw i32 8, %188
  %shr.i.i = lshr i32 %add.i.i408, %sub.i.i409
  %189 = load i32, ptr @c0, align 4, !tbaa !25
  %cmp.i.i = icmp eq i32 %shr.i.i, %189
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN13RunContextMap3mixER5Mixer.exit

if.then.i.i:                                      ; preds = %if.end138
  %sub5.i.i = sub nsw i32 7, %188
  %shr6.i.i = lshr i32 %conv.i.i407, %sub5.i.i
  %and.i.i410 = shl nuw nsw i32 %shr6.i.i, 4
  %mul.i.i = and i32 %and.i.i410, 16
  %190 = load i8, ptr %186, align 1, !tbaa !9
  %conv10.i.i = zext i8 %190 to i64
  %add11.i.i = add nuw nsw i64 %conv10.i.i, 1
  %191 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %arrayidx.i.i.i.i = getelementptr inbounds i8, ptr %191, i64 %add11.i.i
  %192 = load i8, ptr %arrayidx.i.i.i.i, align 1, !tbaa !9
  %conv2.i.i.i = zext i8 %192 to i32
  %mul13.i.i = add nuw nsw i32 %mul.i.i, 65528
  %mul14.i.i = mul nuw nsw i32 %mul13.i.i, %conv2.i.i.i
  %193 = trunc i32 %mul14.i.i to i16
  br label %_ZN13RunContextMap3mixER5Mixer.exit

_ZN13RunContextMap3mixER5Mixer.exit:              ; preds = %if.end138, %if.then.i.i
  %retval.0.i.i = phi i16 [ %193, %if.then.i.i ], [ 0, %if.end138 ]
  %194 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !64
  %inc.i.i = add nsw i32 %194, 1
  store i32 %inc.i.i, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !64
  %195 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %idxprom.i.i.i411 = sext i32 %194 to i64
  %arrayidx.i.i.i412 = getelementptr inbounds i16, ptr %195, i64 %idxprom.i.i.i411
  store i16 %retval.0.i.i, ptr %arrayidx.i.i.i412, align 2, !tbaa !31
  %196 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm9, i64 0, i32 1), align 8, !tbaa !226
  %arrayidx.i.i415 = getelementptr inbounds i8, ptr %196, i64 1
  %197 = load i8, ptr %arrayidx.i.i415, align 1, !tbaa !9
  %conv.i.i416 = zext i8 %197 to i32
  %add.i.i417 = or i32 %conv.i.i416, 256
  %shr.i.i419 = lshr i32 %add.i.i417, %sub.i.i409
  %cmp.i.i420 = icmp eq i32 %shr.i.i419, %189
  br i1 %cmp.i.i420, label %if.then.i.i431, label %_ZN13RunContextMap3mixER5Mixer.exit438

if.then.i.i431:                                   ; preds = %_ZN13RunContextMap3mixER5Mixer.exit
  %sub5.i.i421 = sub nsw i32 7, %188
  %shr6.i.i422 = lshr i32 %conv.i.i416, %sub5.i.i421
  %and.i.i423 = shl nuw nsw i32 %shr6.i.i422, 4
  %mul.i.i424 = and i32 %and.i.i423, 16
  %198 = load i8, ptr %196, align 1, !tbaa !9
  %conv10.i.i425 = zext i8 %198 to i64
  %add11.i.i426 = add nuw nsw i64 %conv10.i.i425, 1
  %199 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %arrayidx.i.i.i.i427 = getelementptr inbounds i8, ptr %199, i64 %add11.i.i426
  %200 = load i8, ptr %arrayidx.i.i.i.i427, align 1, !tbaa !9
  %conv2.i.i.i428 = zext i8 %200 to i32
  %mul13.i.i429 = add nuw nsw i32 %mul.i.i424, 65528
  %mul14.i.i430 = mul nuw nsw i32 %mul13.i.i429, %conv2.i.i.i428
  %201 = trunc i32 %mul14.i.i430 to i16
  br label %_ZN13RunContextMap3mixER5Mixer.exit438

_ZN13RunContextMap3mixER5Mixer.exit438:           ; preds = %_ZN13RunContextMap3mixER5Mixer.exit, %if.then.i.i431
  %retval.0.i.i432 = phi i16 [ %201, %if.then.i.i431 ], [ 0, %_ZN13RunContextMap3mixER5Mixer.exit ]
  %inc.i.i433 = add nsw i32 %194, 2
  store i32 %inc.i.i433, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !64
  %idxprom.i.i.i434 = sext i32 %inc.i.i to i64
  %arrayidx.i.i.i435 = getelementptr inbounds i16, ptr %195, i64 %idxprom.i.i.i434
  store i16 %retval.0.i.i432, ptr %arrayidx.i.i.i435, align 2, !tbaa !31
  %202 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE5rcm10, i64 0, i32 1), align 8, !tbaa !226
  %arrayidx.i.i439 = getelementptr inbounds i8, ptr %202, i64 1
  %203 = load i8, ptr %arrayidx.i.i439, align 1, !tbaa !9
  %conv.i.i440 = zext i8 %203 to i32
  %add.i.i441 = or i32 %conv.i.i440, 256
  %shr.i.i443 = lshr i32 %add.i.i441, %sub.i.i409
  %cmp.i.i444 = icmp eq i32 %shr.i.i443, %189
  br i1 %cmp.i.i444, label %if.then.i.i455, label %_ZN13RunContextMap3mixER5Mixer.exit462

if.then.i.i455:                                   ; preds = %_ZN13RunContextMap3mixER5Mixer.exit438
  %sub5.i.i445 = sub nsw i32 7, %188
  %shr6.i.i446 = lshr i32 %conv.i.i440, %sub5.i.i445
  %and.i.i447 = shl nuw nsw i32 %shr6.i.i446, 4
  %mul.i.i448 = and i32 %and.i.i447, 16
  %204 = load i8, ptr %202, align 1, !tbaa !9
  %conv10.i.i449 = zext i8 %204 to i64
  %add11.i.i450 = add nuw nsw i64 %conv10.i.i449, 1
  %205 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %arrayidx.i.i.i.i451 = getelementptr inbounds i8, ptr %205, i64 %add11.i.i450
  %206 = load i8, ptr %arrayidx.i.i.i.i451, align 1, !tbaa !9
  %conv2.i.i.i452 = zext i8 %206 to i32
  %mul13.i.i453 = add nuw nsw i32 %mul.i.i448, 65528
  %mul14.i.i454 = mul nuw nsw i32 %mul13.i.i453, %conv2.i.i.i452
  %207 = trunc i32 %mul14.i.i454 to i16
  br label %_ZN13RunContextMap3mixER5Mixer.exit462

_ZN13RunContextMap3mixER5Mixer.exit462:           ; preds = %_ZN13RunContextMap3mixER5Mixer.exit438, %if.then.i.i455
  %retval.0.i.i456 = phi i16 [ %207, %if.then.i.i455 ], [ 0, %_ZN13RunContextMap3mixER5Mixer.exit438 ]
  %inc.i.i457 = add nsw i32 %194, 3
  store i32 %inc.i.i457, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !64
  %idxprom.i.i.i458 = sext i32 %inc.i.i433 to i64
  %arrayidx.i.i.i459 = getelementptr inbounds i16, ptr %195, i64 %idxprom.i.i.i458
  store i16 %retval.0.i.i456, ptr %arrayidx.i.i.i459, align 2, !tbaa !31
  %208 = load i32, ptr @level, align 4, !tbaa !25
  %cmp143 = icmp sgt i32 %208, 3
  br i1 %cmp143, label %if.then144, label %if.end148

if.then144:                                       ; preds = %_ZN13RunContextMap3mixER5Mixer.exit462
  tail call void @_Z11sparseModelR5Mixerii(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m, i32 noundef %conv2.i, i32 noundef %call2.i)
  tail call void @_Z13distanceModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  tail call void @_Z8picModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  tail call void @_Z11recordModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  tail call void @_Z9wordModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  tail call void @_Z13indirectModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  tail call void @_Z8dmcModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %209 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !215
  %cmp145 = icmp eq i32 %209, 8
  br i1 %cmp145, label %if.then146, label %if.end148

if.then146:                                       ; preds = %if.then144
  tail call void @_Z8exeModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  br label %if.end148

if.end148:                                        ; preds = %if.then144, %if.then146, %_ZN13RunContextMap3mixER5Mixer.exit462
  %210 = tail call i32 @llvm.smax.i32(i32 %call2.i, i32 2)
  %spec.store.select208 = add nsw i32 %210, -2
  %211 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i463 = add nsw i32 %211, -1
  %212 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i464 = add nsw i32 %212, -1
  %and.i465 = and i32 %sub3.i464, %sub.i463
  %213 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i466 = sext i32 %and.i465 to i64
  %arrayidx.i.i467 = getelementptr inbounds i8, ptr %213, i64 %idxprom.i.i466
  %214 = load i8, ptr %arrayidx.i.i467, align 1, !tbaa !9
  %conv.i468 = zext i8 %214 to i32
  %sub.i469 = add nsw i32 %211, -2
  %and.i471 = and i32 %sub3.i464, %sub.i469
  %idxprom.i.i472 = sext i32 %and.i471 to i64
  %arrayidx.i.i473 = getelementptr inbounds i8, ptr %213, i64 %idxprom.i.i472
  %215 = load i8, ptr %arrayidx.i.i473, align 1, !tbaa !9
  %conv.i474 = zext i8 %215 to i32
  %sub.i475 = add nsw i32 %211, -3
  %and.i477 = and i32 %sub3.i464, %sub.i475
  %idxprom.i.i478 = sext i32 %and.i477 to i64
  %arrayidx.i.i479 = getelementptr inbounds i8, ptr %213, i64 %idxprom.i.i478
  %216 = load i8, ptr %arrayidx.i.i479, align 1, !tbaa !9
  %conv.i480 = zext i8 %216 to i32
  %add156 = add nuw nsw i32 %conv.i468, 8
  %217 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add.i481 = add nsw i32 %add156, %217
  %218 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %inc.i482 = add nsw i32 %218, 1
  store i32 %inc.i482, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %219 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %idxprom.i.i483 = sext i32 %218 to i64
  %arrayidx.i.i484 = getelementptr inbounds i32, ptr %219, i64 %idxprom.i.i483
  store i32 %add.i481, ptr %arrayidx.i.i484, align 4, !tbaa !25
  %220 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add3.i485 = add nsw i32 %220, 264
  store i32 %add3.i485, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %221 = load i32, ptr @c0, align 4, !tbaa !25
  %add.i486 = add nsw i32 %221, %add3.i485
  %222 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %inc.i487 = add nsw i32 %222, 1
  store i32 %inc.i487, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %idxprom.i.i488 = sext i32 %222 to i64
  %arrayidx.i.i489 = getelementptr inbounds i32, ptr %219, i64 %idxprom.i.i488
  store i32 %add.i486, ptr %arrayidx.i.i489, align 4, !tbaa !25
  %223 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add3.i490 = add nsw i32 %223, 256
  store i32 %add3.i490, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %224 = load i32, ptr @c4, align 4, !tbaa !25
  %225 = lshr i32 %224, 2
  %mul159 = and i32 %225, 56
  %cmp161 = icmp eq i8 %214, %215
  %mul163 = select i1 %cmp161, i32 64, i32 0
  %226 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !215
  %cmp165 = icmp eq i32 %226, 8
  %mul167 = select i1 %cmp165, i32 128, i32 0
  %add160 = add nuw i32 %spec.store.select208, %mul163
  %add164 = add i32 %add160, %add3.i490
  %add168 = add i32 %add164, %mul159
  %add.i491 = add i32 %add168, %mul167
  %227 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %inc.i492 = add nsw i32 %227, 1
  store i32 %inc.i492, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %idxprom.i.i493 = sext i32 %227 to i64
  %arrayidx.i.i494 = getelementptr inbounds i32, ptr %219, i64 %idxprom.i.i493
  store i32 %add.i491, ptr %arrayidx.i.i494, align 4, !tbaa !25
  %228 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add3.i495 = add nsw i32 %228, 256
  store i32 %add3.i495, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add.i496 = add nsw i32 %add3.i495, %conv.i474
  %229 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %inc.i497 = add nsw i32 %229, 1
  store i32 %inc.i497, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %idxprom.i.i498 = sext i32 %229 to i64
  %arrayidx.i.i499 = getelementptr inbounds i32, ptr %219, i64 %idxprom.i.i498
  store i32 %add.i496, ptr %arrayidx.i.i499, align 4, !tbaa !25
  %230 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add3.i500 = add nsw i32 %230, 256
  store i32 %add3.i500, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add.i501 = add nsw i32 %add3.i500, %conv.i480
  %231 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %inc.i502 = add nsw i32 %231, 1
  store i32 %inc.i502, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %idxprom.i.i503 = sext i32 %231 to i64
  %arrayidx.i.i504 = getelementptr inbounds i32, ptr %219, i64 %idxprom.i.i503
  store i32 %add.i501, ptr %arrayidx.i.i504, align 4, !tbaa !25
  %232 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add3.i505 = add nsw i32 %232, 256
  store i32 %add3.i505, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add.i506 = add nsw i32 %add3.i505, %conv2.i
  %233 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %inc.i507 = add nsw i32 %233, 1
  store i32 %inc.i507, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %idxprom.i.i508 = sext i32 %233 to i64
  %arrayidx.i.i509 = getelementptr inbounds i32, ptr %219, i64 %idxprom.i.i508
  store i32 %add.i506, ptr %arrayidx.i.i509, align 4, !tbaa !25
  %234 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add3.i510 = add nsw i32 %234, 256
  store i32 %add3.i510, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %235 = load i32, ptr @bpos, align 4, !tbaa !25
  %tobool169.not = icmp eq i32 %235, 0
  br i1 %tobool169.not, label %if.else, label %if.then170

if.then170:                                       ; preds = %if.end148
  %236 = load i32, ptr @c0, align 4, !tbaa !25
  %sub171 = sub nsw i32 8, %235
  %shl172 = shl i32 %236, %sub171
  %cmp173 = icmp eq i32 %235, 1
  %div520 = lshr i32 %conv.i480, 1
  %add175 = select i1 %cmp173, i32 %div520, i32 0
  %c.0 = add i32 %shl172, %add175
  %cond.i = tail call i32 @llvm.smin.i32(i32 %235, i32 5)
  %mul178 = shl nsw i32 %cond.i, 8
  %div179518 = lshr i32 %conv.i468, 5
  %add180 = or i32 %mul178, %div179518
  %237 = lshr i32 %conv.i474, 2
  %mul182 = and i32 %237, 56
  %add183 = or i32 %add180, %mul182
  %and184 = and i32 %c.0, 192
  %add185 = or i32 %and184, %add183
  br label %if.end195

if.else:                                          ; preds = %if.end148
  %div186516 = lshr i32 %conv.i480, 7
  %238 = load i32, ptr @c4, align 4, !tbaa !25
  %239 = lshr i32 %238, 30
  %mul188 = and i32 %239, 2
  %240 = lshr i32 %conv.i474, 4
  %mul191 = and i32 %240, 12
  %and193 = and i32 %conv.i468, 240
  %add189 = or i32 %div186516, %and193
  %add192 = or i32 %add189, %mul191
  %add194 = or i32 %add192, %mul188
  br label %if.end195

if.end195:                                        ; preds = %if.else, %if.then170
  %c.1 = phi i32 [ %add185, %if.then170 ], [ %add194, %if.else ]
  %add.i511 = add nsw i32 %c.1, %add3.i510
  br label %cleanup203.sink.split

cleanup203.sink.split:                            ; preds = %if.end114, %if.end195, %cleanup, %cleanup76
  %.sink = phi ptr [ %87, %cleanup76 ], [ %74, %cleanup ], [ %219, %if.end195 ], [ %108, %if.end114 ]
  %add.i312.sink = phi i32 [ %add.i312, %cleanup76 ], [ %add.i280, %cleanup ], [ %add.i511, %if.end195 ], [ %add.i327, %if.end114 ]
  %.sink533 = phi i32 [ 256, %cleanup76 ], [ 256, %cleanup ], [ 1536, %if.end195 ], [ 256, %if.end114 ]
  %241 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %inc.i313 = add nsw i32 %241, 1
  store i32 %inc.i313, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %idxprom.i.i314 = sext i32 %241 to i64
  %arrayidx.i.i315 = getelementptr inbounds i32, ptr %.sink, i64 %idxprom.i.i314
  store i32 %add.i312.sink, ptr %arrayidx.i.i315, align 4, !tbaa !25
  %242 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %add3.i316 = add nsw i32 %242, %.sink533
  store i32 %add3.i316, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  br label %cleanup203

cleanup203:                                       ; preds = %cleanup203.sink.split, %if.then97, %if.then89, %if.then81
  %call74 = tail call noundef i32 @_ZN5Mixer1pEv(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  ret i32 %call74

eh.resume:                                        ; preds = %lpad29, %lpad22, %lpad14, %lpad6, %lpad
  %_ZGVZ13contextModel2vE1m.sink = phi ptr [ @_ZGVZ13contextModel2vE1m, %lpad29 ], [ @_ZGVZ13contextModel2vE5rcm10, %lpad22 ], [ @_ZGVZ13contextModel2vE4rcm9, %lpad14 ], [ @_ZGVZ13contextModel2vE4rcm7, %lpad6 ], [ @_ZGVZ13contextModel2vE2cm, %lpad ]
  %.pn = phi { ptr, i32 } [ %29, %lpad29 ], [ %28, %lpad22 ], [ %27, %lpad14 ], [ %26, %lpad6 ], [ %25, %lpad ]
  tail call void @__cxa_guard_abort(ptr nonnull %_ZGVZ13contextModel2vE1m.sink) #39
  resume { ptr, i32 } %.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN13RunContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef %m) unnamed_addr #5 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %div = sdiv i32 %m, 4
  %mul.i = shl nsw i32 %div, 2
  %reserved.i.i.i = getelementptr inbounds %class.Array.8, ptr %this, i64 0, i32 1
  store i32 %mul.i, ptr %reserved.i.i.i, align 4, !tbaa !158
  store i32 %mul.i, ptr %this, align 8, !tbaa !160
  %cmp.i.i.i = icmp slt i32 %m, 4
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.end.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  %ptr.i.i.i = getelementptr inbounds %class.Array.8, ptr %this, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr.i.i.i, i8 0, i64 16, i1 false)
  br label %_ZN2BHILi4EEC2Ei.exit

if.end.i.i.i:                                     ; preds = %entry
  %add.i.i.i = add nuw i32 %mul.i, 64
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i.i = add nsw i32 %0, %add.i.i.i
  store i32 %add.i.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i.i = icmp sgt i32 %add.i.i.i.i, %1
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.end.i.i.i
  store i32 %add.i.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i.i

_ZN14ProgramChecker5allocEi.exit.i.i.i:           ; preds = %if.then.i.i.i.i, %if.end.i.i.i
  %conv4.i.i.i = sext i32 %add.i.i.i to i64
  %call.i.i.i = tail call noalias ptr @calloc(i64 noundef %conv4.i.i.i, i64 noundef 1) #41
  %ptr5.i.i.i = getelementptr inbounds %class.Array.8, ptr %this, i64 0, i32 2
  store ptr %call.i.i.i, ptr %ptr5.i.i.i, align 8, !tbaa !161
  %tobool.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i.i, label %if.then7.i.i.i, label %if.end8.i.i.i

if.then7.i.i.i:                                   ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i.i
  %exception.i.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end8.i.i.i:                                    ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i.i
  %add.ptr.i.i.i = getelementptr inbounds i8, ptr %call.i.i.i, i64 64
  %2 = ptrtoint ptr %call.i.i.i to i64
  %and.i.i.i = and i64 %2, 63
  %idx.neg.i.i.i = sub nsw i64 0, %and.i.i.i
  %add.ptr11.i.i.i = getelementptr inbounds i8, ptr %add.ptr.i.i.i, i64 %idx.neg.i.i.i
  %data12.i.i.i = getelementptr inbounds %class.Array.8, ptr %this, i64 0, i32 3
  store ptr %add.ptr11.i.i.i, ptr %data12.i.i.i, align 8, !tbaa !162
  br label %_ZN2BHILi4EEC2Ei.exit

_ZN2BHILi4EEC2Ei.exit:                            ; preds = %if.then.i.i.i, %if.end8.i.i.i
  %3 = phi ptr [ null, %if.then.i.i.i ], [ %add.ptr11.i.i.i, %if.end8.i.i.i ]
  %n.i = getelementptr inbounds %class.BH.10, ptr %this, i64 0, i32 1
  %sub.i = add nsw i32 %div, -1
  store i32 %sub.i, ptr %n.i, align 8, !tbaa !229
  %arrayidx.i = getelementptr inbounds i8, ptr %3, i64 2
  %4 = load i8, ptr %arrayidx.i, align 1, !tbaa !9
  %cmp4.i = icmp eq i8 %4, 0
  br i1 %cmp4.i, label %for.end.i, label %if.end.i

if.end.i:                                         ; preds = %_ZN2BHILi4EEC2Ei.exit
  %5 = load i16, ptr %3, align 2, !tbaa !31
  %cmp7.i = icmp eq i16 %5, 0
  br i1 %cmp7.i, label %invoke.cont, label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i
  %arrayidx.i.1.i = getelementptr inbounds i8, ptr %3, i64 4
  %arrayidx.1.i = getelementptr inbounds i8, ptr %3, i64 6
  %6 = load i8, ptr %arrayidx.1.i, align 1, !tbaa !9
  %cmp4.1.i = icmp eq i8 %6, 0
  br i1 %cmp4.1.i, label %for.end.thread114.i, label %if.end.1.i

if.end.1.i:                                       ; preds = %for.inc.i
  %7 = load i16, ptr %arrayidx.i.1.i, align 2, !tbaa !31
  %cmp7.1.i = icmp eq i16 %7, 0
  br i1 %cmp7.1.i, label %if.else.i, label %for.inc.1.i

for.inc.1.i:                                      ; preds = %if.end.1.i
  %arrayidx.i.2.i = getelementptr inbounds i8, ptr %3, i64 8
  %arrayidx.2.i = getelementptr inbounds i8, ptr %3, i64 10
  %8 = load i8, ptr %arrayidx.2.i, align 1, !tbaa !9
  %cmp4.2.i = icmp eq i8 %8, 0
  br i1 %cmp4.2.i, label %for.end.thread114.i, label %if.end.2.i

if.end.2.i:                                       ; preds = %for.inc.1.i
  %9 = load i16, ptr %arrayidx.i.2.i, align 2, !tbaa !31
  %cmp7.2.i = icmp eq i16 %9, 0
  br i1 %cmp7.2.i, label %if.else.i, label %for.inc.2.i

for.inc.2.i:                                      ; preds = %if.end.2.i
  %arrayidx.i.3.i = getelementptr inbounds i8, ptr %3, i64 12
  %arrayidx.3.i = getelementptr inbounds i8, ptr %3, i64 14
  %10 = load i8, ptr %arrayidx.3.i, align 1, !tbaa !9
  %cmp4.3.i = icmp eq i8 %10, 0
  br i1 %cmp4.3.i, label %for.end.thread114.i, label %if.end.3.i

if.end.3.i:                                       ; preds = %for.inc.2.i
  %11 = load i16, ptr %arrayidx.i.3.i, align 2, !tbaa !31
  %cmp7.3.i = icmp eq i16 %11, 0
  br i1 %cmp7.3.i, label %if.else.i, label %for.inc.3.i

for.inc.3.i:                                      ; preds = %if.end.3.i
  %arrayidx.i.4.i = getelementptr inbounds i8, ptr %3, i64 16
  %arrayidx.4.i = getelementptr inbounds i8, ptr %3, i64 18
  %12 = load i8, ptr %arrayidx.4.i, align 1, !tbaa !9
  %cmp4.4.i = icmp eq i8 %12, 0
  br i1 %cmp4.4.i, label %for.end.thread114.i, label %if.end.4.i

if.end.4.i:                                       ; preds = %for.inc.3.i
  %13 = load i16, ptr %arrayidx.i.4.i, align 2, !tbaa !31
  %cmp7.4.i = icmp eq i16 %13, 0
  br i1 %cmp7.4.i, label %if.else.i, label %for.inc.4.i

for.inc.4.i:                                      ; preds = %if.end.4.i
  %arrayidx.i.5.i = getelementptr inbounds i8, ptr %3, i64 20
  %arrayidx.5.i = getelementptr inbounds i8, ptr %3, i64 22
  %14 = load i8, ptr %arrayidx.5.i, align 1, !tbaa !9
  %cmp4.5.i = icmp eq i8 %14, 0
  br i1 %cmp4.5.i, label %for.end.thread114.i, label %if.end.5.i

if.end.5.i:                                       ; preds = %for.inc.4.i
  %15 = load i16, ptr %arrayidx.i.5.i, align 2, !tbaa !31
  %cmp7.5.i = icmp eq i16 %15, 0
  br i1 %cmp7.5.i, label %if.else.i, label %for.inc.5.i

for.inc.5.i:                                      ; preds = %if.end.5.i
  %arrayidx.i.6.i = getelementptr inbounds i8, ptr %3, i64 24
  %arrayidx.6.i = getelementptr inbounds i8, ptr %3, i64 26
  %16 = load i8, ptr %arrayidx.6.i, align 1, !tbaa !9
  %cmp4.6.i = icmp eq i8 %16, 0
  br i1 %cmp4.6.i, label %for.end.thread114.i, label %if.end.6.i

if.end.6.i:                                       ; preds = %for.inc.5.i
  %17 = load i16, ptr %arrayidx.i.6.i, align 2, !tbaa !31
  %cmp7.6.i = icmp eq i16 %17, 0
  br i1 %cmp7.6.i, label %if.else.i, label %for.inc.6.i

for.inc.6.i:                                      ; preds = %if.end.6.i
  %arrayidx.i.7.i = getelementptr inbounds i8, ptr %3, i64 28
  %arrayidx.7.i = getelementptr inbounds i8, ptr %3, i64 30
  %18 = load i8, ptr %arrayidx.7.i, align 1, !tbaa !9
  %cmp4.7.i = icmp eq i8 %18, 0
  br i1 %cmp4.7.i, label %for.end.thread114.i, label %if.end.7.i

if.end.7.i:                                       ; preds = %for.inc.6.i
  %19 = load i16, ptr %arrayidx.i.7.i, align 2, !tbaa !31
  %cmp7.7.i = icmp eq i16 %19, 0
  br i1 %cmp7.7.i, label %if.else.i, label %if.then14.i

for.end.thread114.i:                              ; preds = %for.inc.6.i, %for.inc.5.i, %for.inc.4.i, %for.inc.3.i, %for.inc.2.i, %for.inc.1.i, %for.inc.i
  %j.096.lcssa.wide.ph.i = phi i64 [ 28, %for.inc.6.i ], [ 24, %for.inc.5.i ], [ 20, %for.inc.4.i ], [ 16, %for.inc.3.i ], [ 12, %for.inc.2.i ], [ 8, %for.inc.1.i ], [ 4, %for.inc.i ]
  %arrayidx.i.lcssa.ph.i = phi ptr [ %arrayidx.i.7.i, %for.inc.6.i ], [ %arrayidx.i.6.i, %for.inc.5.i ], [ %arrayidx.i.5.i, %for.inc.4.i ], [ %arrayidx.i.4.i, %for.inc.3.i ], [ %arrayidx.i.3.i, %for.inc.2.i ], [ %arrayidx.i.2.i, %for.inc.1.i ], [ %arrayidx.i.1.i, %for.inc.i ]
  store i16 0, ptr %arrayidx.i.lcssa.ph.i, align 2, !tbaa !31
  br label %if.else.i

for.end.i:                                        ; preds = %_ZN2BHILi4EEC2Ei.exit
  store i16 0, ptr %3, align 2, !tbaa !31
  br label %invoke.cont

if.then14.i:                                      ; preds = %if.end.7.i
  store i32 0, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  %cmp28.i = icmp ugt i8 %18, %16
  %spec.select.i = select i1 %cmp28.i, i64 24, i64 28
  br label %if.end32.i

if.else.i:                                        ; preds = %for.end.thread114.i, %if.end.7.i, %if.end.6.i, %if.end.5.i, %if.end.4.i, %if.end.3.i, %if.end.2.i, %if.end.1.i
  %j.095105.i = phi i64 [ %j.096.lcssa.wide.ph.i, %for.end.thread114.i ], [ 28, %if.end.7.i ], [ 24, %if.end.6.i ], [ 20, %if.end.5.i ], [ 16, %if.end.4.i ], [ 12, %if.end.3.i ], [ 8, %if.end.2.i ], [ 4, %if.end.1.i ]
  %arrayidx.i98104.i = phi ptr [ %arrayidx.i.lcssa.ph.i, %for.end.thread114.i ], [ %arrayidx.i.7.i, %if.end.7.i ], [ %arrayidx.i.6.i, %if.end.6.i ], [ %arrayidx.i.5.i, %if.end.5.i ], [ %arrayidx.i.4.i, %if.end.4.i ], [ %arrayidx.i.3.i, %if.end.3.i ], [ %arrayidx.i.2.i, %if.end.2.i ], [ %arrayidx.i.1.i, %if.end.1.i ]
  %20 = load i32, ptr %arrayidx.i98104.i, align 2
  store i32 %20, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  br label %if.end32.i

if.end32.i:                                       ; preds = %if.else.i, %if.then14.i
  %21 = phi i32 [ %20, %if.else.i ], [ 0, %if.then14.i ]
  %j.1.i = phi i64 [ %j.095105.i, %if.else.i ], [ %spec.select.i, %if.then14.i ]
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %arrayidx.i.1.i, ptr nonnull align 1 %3, i64 %j.1.i, i1 false)
  store i32 %21, ptr %3, align 1
  br label %invoke.cont

invoke.cont:                                      ; preds = %if.end32.i, %for.end.i, %if.end.i
  %cp = getelementptr inbounds %class.RunContextMap, ptr %this, i64 0, i32 1
  store ptr %arrayidx.i, ptr %cp, align 8, !tbaa !226
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN13RunContextMapD2Ev(ptr noundef nonnull align 8 dereferenceable(40) %this) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !160
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %reass.sub.i.i = sub i32 %1, %0
  %add.i.i.i = add i32 %reass.sub.i.i, -64
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %2 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %2
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN2BHILi4EED2Ev.exit

if.then.i.i.i:                                    ; preds = %entry
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN2BHILi4EED2Ev.exit

_ZN2BHILi4EED2Ev.exit:                            ; preds = %entry, %if.then.i.i.i
  %ptr.i.i = getelementptr inbounds %class.Array.8, ptr %this, i64 0, i32 2
  %3 = load ptr, ptr %ptr.i.i, align 8, !tbaa !161
  tail call void @free(ptr noundef %3) #39
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write) uwtable
define dso_local void @_ZN9PredictorC2Ev(ptr nocapture noundef nonnull writeonly align 4 dereferenceable(4) %this) unnamed_addr #24 align 2 {
entry:
  store i32 2048, ptr %this, align 4, !tbaa !230
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN9Predictor6updateEv(ptr nocapture noundef nonnull writeonly align 4 dereferenceable(4) %this) local_unnamed_addr #14 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE1a acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !110

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE1a) #39
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE1a, i32 noundef 256)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init
  %2 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE1a, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE1a) #39
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %entry
  %3 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a1 acquire, align 8
  %guard.uninitialized2 = icmp eq i8 %3, 0
  br i1 %guard.uninitialized2, label %init.check3, label %init.end8, !prof !110

init.check3:                                      ; preds = %init.end
  %4 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a1) #39
  %tobool4.not = icmp eq i32 %4, 0
  br i1 %tobool4.not, label %init.end8, label %init5

init5:                                            ; preds = %init.check3
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a1, i32 noundef 65536)
          to label %invoke.cont7 unwind label %lpad6

invoke.cont7:                                     ; preds = %init5
  %5 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a1) #39
  br label %init.end8

init.end8:                                        ; preds = %invoke.cont7, %init.check3, %init.end
  %6 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a2 acquire, align 8
  %guard.uninitialized9 = icmp eq i8 %6, 0
  br i1 %guard.uninitialized9, label %init.check10, label %init.end15, !prof !110

init.check10:                                     ; preds = %init.end8
  %7 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a2) #39
  %tobool11.not = icmp eq i32 %7, 0
  br i1 %tobool11.not, label %init.end15, label %init12

init12:                                           ; preds = %init.check10
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a2, i32 noundef 65536)
          to label %invoke.cont14 unwind label %lpad13

invoke.cont14:                                    ; preds = %init12
  %8 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a2) #39
  br label %init.end15

init.end15:                                       ; preds = %invoke.cont14, %init.check10, %init.end8
  %9 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a3 acquire, align 8
  %guard.uninitialized16 = icmp eq i8 %9, 0
  br i1 %guard.uninitialized16, label %init.check17, label %init.end22, !prof !110

init.check17:                                     ; preds = %init.end15
  %10 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a3) #39
  %tobool18.not = icmp eq i32 %10, 0
  br i1 %tobool18.not, label %init.end22, label %init19

init19:                                           ; preds = %init.check17
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a3, i32 noundef 65536)
          to label %invoke.cont21 unwind label %lpad20

invoke.cont21:                                    ; preds = %init19
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a3, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a3) #39
  br label %init.end22

init.end22:                                       ; preds = %invoke.cont21, %init.check17, %init.end15
  %12 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a4 acquire, align 8
  %guard.uninitialized23 = icmp eq i8 %12, 0
  br i1 %guard.uninitialized23, label %init.check24, label %init.end29, !prof !110

init.check24:                                     ; preds = %init.end22
  %13 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a4) #39
  %tobool25.not = icmp eq i32 %13, 0
  br i1 %tobool25.not, label %init.end29, label %init26

init26:                                           ; preds = %init.check24
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a4, i32 noundef 65536)
          to label %invoke.cont28 unwind label %lpad27

invoke.cont28:                                    ; preds = %init26
  %14 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a4, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a4) #39
  br label %init.end29

init.end29:                                       ; preds = %invoke.cont28, %init.check24, %init.end22
  %15 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a5 acquire, align 8
  %guard.uninitialized30 = icmp eq i8 %15, 0
  br i1 %guard.uninitialized30, label %init.check31, label %init.end36, !prof !110

init.check31:                                     ; preds = %init.end29
  %16 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a5) #39
  %tobool32.not = icmp eq i32 %16, 0
  br i1 %tobool32.not, label %init.end36, label %init33

init33:                                           ; preds = %init.check31
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a5, i32 noundef 65536)
          to label %invoke.cont35 unwind label %lpad34

invoke.cont35:                                    ; preds = %init33
  %17 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a5, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a5) #39
  br label %init.end36

init.end36:                                       ; preds = %invoke.cont35, %init.check31, %init.end29
  %18 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a6 acquire, align 8
  %guard.uninitialized37 = icmp eq i8 %18, 0
  br i1 %guard.uninitialized37, label %init.check38, label %init.end43, !prof !110

init.check38:                                     ; preds = %init.end36
  %19 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a6) #39
  %tobool39.not = icmp eq i32 %19, 0
  br i1 %tobool39.not, label %init.end43, label %init40

init40:                                           ; preds = %init.check38
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a6, i32 noundef 65536)
          to label %invoke.cont42 unwind label %lpad41

invoke.cont42:                                    ; preds = %init40
  %20 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a6, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a6) #39
  br label %init.end43

init.end43:                                       ; preds = %invoke.cont42, %init.check38, %init.end36
  %21 = load i32, ptr @c0, align 4, !tbaa !25
  %22 = load i32, ptr @y, align 4, !tbaa !25
  %reass.add = shl i32 %21, 1
  %add44 = add i32 %22, %reass.add
  store i32 %add44, ptr @c0, align 4, !tbaa !25
  %cmp = icmp sgt i32 %add44, 255
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %init.end43
  %conv = trunc i32 %add44 to i8
  %23 = load i32, ptr @pos, align 4, !tbaa !25
  %inc = add nsw i32 %23, 1
  store i32 %inc, ptr @pos, align 4, !tbaa !25
  %24 = load i32, ptr @buf, align 8, !tbaa !20
  %sub.i = add nsw i32 %24, -1
  %and.i = and i32 %sub.i, %23
  %25 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i = sext i32 %and.i to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %25, i64 %idxprom.i.i
  store i8 %conv, ptr %arrayidx.i.i, align 1, !tbaa !9
  %26 = load i32, ptr @c4, align 4, !tbaa !25
  %shl = shl i32 %26, 8
  %27 = load i32, ptr @c0, align 4, !tbaa !25
  %add45 = add i32 %27, -256
  %sub = add i32 %add45, %shl
  store i32 %sub, ptr @c4, align 4, !tbaa !25
  store i32 1, ptr @c0, align 4, !tbaa !25
  br label %if.end

lpad:                                             ; preds = %init
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad6:                                            ; preds = %init5
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad13:                                           ; preds = %init12
  %30 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad20:                                           ; preds = %init19
  %31 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad27:                                           ; preds = %init26
  %32 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad34:                                           ; preds = %init33
  %33 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

lpad41:                                           ; preds = %init40
  %34 = landingpad { ptr, i32 }
          cleanup
  br label %eh.resume

if.end:                                           ; preds = %if.then, %init.end43
  %35 = load i32, ptr @bpos, align 4, !tbaa !25
  %add46 = add nsw i32 %35, 1
  %and = and i32 %add46, 7
  store i32 %and, ptr @bpos, align 4, !tbaa !25
  %call47 = tail call noundef i32 @_Z13contextModel2v()
  %36 = load i32, ptr @c0, align 4, !tbaa !25
  %37 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %idxprom.i.i.i = sext i32 %call47 to i64
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %37, i64 %idxprom.i.i.i
  %38 = load i16, ptr %arrayidx.i.i.i, align 2, !tbaa !31
  %conv.i.i = sext i16 %38 to i32
  %39 = load i32, ptr @y, align 4, !tbaa !25
  %sub3.i = mul i32 %39, 65662
  %40 = load i32, ptr @_ZZN9Predictor6updateEvE1a, align 8, !tbaa !69
  %41 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE1a, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %idxprom.i.i109 = sext i32 %40 to i64
  %arrayidx.i.i110 = getelementptr inbounds i16, ptr %41, i64 %idxprom.i.i109
  %42 = load <2 x i16>, ptr %arrayidx.i.i110, align 2, !tbaa !31
  %43 = zext <2 x i16> %42 to <2 x i32>
  %44 = insertelement <2 x i32> poison, i32 %sub3.i, i64 0
  %45 = shufflevector <2 x i32> %44, <2 x i32> poison, <2 x i32> zeroinitializer
  %46 = sub nsw <2 x i32> %45, %43
  %47 = lshr <2 x i32> %46, <i32 7, i32 7>
  %48 = trunc <2 x i32> %47 to <2 x i16>
  %49 = add <2 x i16> %42, %48
  store <2 x i16> %49, ptr %arrayidx.i.i110, align 2, !tbaa !31
  %and.i111 = and i32 %conv.i.i, 127
  %add26.i = add nsw i32 %conv.i.i, 2048
  %shr27.i = ashr i32 %add26.i, 7
  %mul.i = mul nsw i32 %36, 33
  %add28.i = add nsw i32 %shr27.i, %mul.i
  store i32 %add28.i, ptr @_ZZN9Predictor6updateEvE1a, align 8, !tbaa !69
  %idxprom.i60.i = sext i32 %add28.i to i64
  %arrayidx.i61.i = getelementptr inbounds i16, ptr %41, i64 %idxprom.i60.i
  %50 = load i16, ptr %arrayidx.i61.i, align 2, !tbaa !31
  %conv33.i = zext i16 %50 to i32
  %sub34.i = sub nuw nsw i32 128, %and.i111
  %mul35.i = mul nuw nsw i32 %sub34.i, %conv33.i
  %add38.i = add nsw i32 %add28.i, 1
  %idxprom.i63.i = sext i32 %add38.i to i64
  %arrayidx.i64.i = getelementptr inbounds i16, ptr %41, i64 %idxprom.i63.i
  %51 = load i16, ptr %arrayidx.i64.i, align 2, !tbaa !31
  %conv40.i = zext i16 %51 to i32
  %mul41.i = mul nuw nsw i32 %and.i111, %conv40.i
  %add42.i = add nuw nsw i32 %mul41.i, %mul35.i
  %shr43.i = lshr i32 %add42.i, 11
  store i32 %shr43.i, ptr %this, align 4, !tbaa !230
  %52 = load i32, ptr @c0, align 4, !tbaa !25
  %53 = load i32, ptr @pos, align 4, !tbaa !25
  %sub.i112 = add nsw i32 %53, -1
  %54 = load i32, ptr @buf, align 8, !tbaa !20
  %sub3.i113 = add nsw i32 %54, -1
  %and.i114 = and i32 %sub3.i113, %sub.i112
  %55 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %idxprom.i.i115 = sext i32 %and.i114 to i64
  %arrayidx.i.i116 = getelementptr inbounds i8, ptr %55, i64 %idxprom.i.i115
  %56 = load i8, ptr %arrayidx.i.i116, align 1, !tbaa !9
  %conv.i117 = zext i8 %56 to i32
  %mul = shl nuw nsw i32 %conv.i117, 8
  %add50 = add nsw i32 %mul, %52
  %57 = load i16, ptr %arrayidx.i.i.i, align 2, !tbaa !31
  %conv.i.i120 = sext i16 %57 to i32
  %58 = load i32, ptr @y, align 4, !tbaa !25
  %sub3.i124 = mul i32 %58, 65662
  %59 = load i32, ptr @_ZZN9Predictor6updateEvE2a1, align 8, !tbaa !69
  %60 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a1, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %idxprom.i.i125 = sext i32 %59 to i64
  %arrayidx.i.i126 = getelementptr inbounds i16, ptr %60, i64 %idxprom.i.i125
  %61 = load <2 x i16>, ptr %arrayidx.i.i126, align 2, !tbaa !31
  %62 = zext <2 x i16> %61 to <2 x i32>
  %63 = insertelement <2 x i32> poison, i32 %sub3.i124, i64 0
  %64 = shufflevector <2 x i32> %63, <2 x i32> poison, <2 x i32> zeroinitializer
  %65 = sub nsw <2 x i32> %64, %62
  %66 = lshr <2 x i32> %65, <i32 7, i32 7>
  %67 = trunc <2 x i32> %66 to <2 x i16>
  %68 = add <2 x i16> %61, %67
  store <2 x i16> %68, ptr %arrayidx.i.i126, align 2, !tbaa !31
  %and.i138 = and i32 %conv.i.i120, 127
  %add26.i139 = add nsw i32 %conv.i.i120, 2048
  %shr27.i140 = ashr i32 %add26.i139, 7
  %mul.i141 = mul nsw i32 %add50, 33
  %add28.i142 = add nsw i32 %shr27.i140, %mul.i141
  store i32 %add28.i142, ptr @_ZZN9Predictor6updateEvE2a1, align 8, !tbaa !69
  %idxprom.i60.i143 = sext i32 %add28.i142 to i64
  %arrayidx.i61.i144 = getelementptr inbounds i16, ptr %60, i64 %idxprom.i60.i143
  %69 = load i16, ptr %arrayidx.i61.i144, align 2, !tbaa !31
  %conv33.i145 = zext i16 %69 to i32
  %sub34.i146 = sub nuw nsw i32 128, %and.i138
  %mul35.i147 = mul nuw nsw i32 %sub34.i146, %conv33.i145
  %add38.i148 = add nsw i32 %add28.i142, 1
  %idxprom.i63.i149 = sext i32 %add38.i148 to i64
  %arrayidx.i64.i150 = getelementptr inbounds i16, ptr %60, i64 %idxprom.i63.i149
  %70 = load i16, ptr %arrayidx.i64.i150, align 2, !tbaa !31
  %conv40.i151 = zext i16 %70 to i32
  %mul41.i152 = mul nuw nsw i32 %and.i138, %conv40.i151
  %add42.i153 = add nuw nsw i32 %mul41.i152, %mul35.i147
  %shr43.i154 = lshr i32 %add42.i153, 11
  %71 = load i8, ptr %arrayidx.i.i116, align 1, !tbaa !9
  %conv.i160 = zext i8 %71 to i32
  %sub.i161 = add nsw i32 %53, -2
  %and.i163 = and i32 %sub3.i113, %sub.i161
  %idxprom.i.i164 = sext i32 %and.i163 to i64
  %arrayidx.i.i165 = getelementptr inbounds i8, ptr %55, i64 %idxprom.i.i164
  %72 = load i8, ptr %arrayidx.i.i165, align 1, !tbaa !9
  %conv.i166 = zext i8 %72 to i32
  %mul.i167 = mul i32 %conv.i160, 200002979
  %mul1.i = mul i32 %conv.i166, 30005491
  %add.i168 = add i32 %mul.i167, -230011545
  %add7.i = add i32 %add.i168, %mul1.i
  %shr.i169 = lshr i32 %add7.i, 9
  %shr8.i = lshr i32 %conv.i160, 2
  %shr10.i = lshr i32 %conv.i166, 3
  %73 = xor i32 %shr10.i, %shr8.i
  %74 = xor i32 %73, %shr.i169
  %75 = xor i32 %74, %add7.i
  %xor17.i = and i32 %75, 65535
  %76 = xor i32 %52, %xor17.i
  %xor = xor i32 %76, 65535
  %77 = load i16, ptr %arrayidx.i.i.i, align 2, !tbaa !31
  %conv.i.i172 = sext i16 %77 to i32
  %78 = load i32, ptr @_ZZN9Predictor6updateEvE2a2, align 8, !tbaa !69
  %79 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a2, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %idxprom.i.i177 = sext i32 %78 to i64
  %arrayidx.i.i178 = getelementptr inbounds i16, ptr %79, i64 %idxprom.i.i177
  %80 = load <2 x i16>, ptr %arrayidx.i.i178, align 2, !tbaa !31
  %81 = zext <2 x i16> %80 to <2 x i32>
  %82 = sub nsw <2 x i32> %64, %81
  %83 = lshr <2 x i32> %82, <i32 7, i32 7>
  %84 = trunc <2 x i32> %83 to <2 x i16>
  %85 = add <2 x i16> %80, %84
  store <2 x i16> %85, ptr %arrayidx.i.i178, align 2, !tbaa !31
  %and.i190 = and i32 %conv.i.i172, 127
  %add26.i191 = add nsw i32 %conv.i.i172, 2048
  %shr27.i192 = ashr i32 %add26.i191, 7
  %mul.i193 = mul nsw i32 %xor, 33
  %add28.i194 = add nsw i32 %mul.i193, %shr27.i192
  store i32 %add28.i194, ptr @_ZZN9Predictor6updateEvE2a2, align 8, !tbaa !69
  %idxprom.i60.i195 = sext i32 %add28.i194 to i64
  %arrayidx.i61.i196 = getelementptr inbounds i16, ptr %79, i64 %idxprom.i60.i195
  %86 = load i16, ptr %arrayidx.i61.i196, align 2, !tbaa !31
  %conv33.i197 = zext i16 %86 to i32
  %sub34.i198 = sub nuw nsw i32 128, %and.i190
  %mul35.i199 = mul nuw nsw i32 %sub34.i198, %conv33.i197
  %add38.i200 = add nsw i32 %add28.i194, 1
  %idxprom.i63.i201 = sext i32 %add38.i200 to i64
  %arrayidx.i64.i202 = getelementptr inbounds i16, ptr %79, i64 %idxprom.i63.i201
  %87 = load i16, ptr %arrayidx.i64.i202, align 2, !tbaa !31
  %conv40.i203 = zext i16 %87 to i32
  %mul41.i204 = mul nuw nsw i32 %and.i190, %conv40.i203
  %add42.i205 = add nuw nsw i32 %mul41.i204, %mul35.i199
  %shr43.i206 = lshr i32 %add42.i205, 11
  %88 = load i8, ptr %arrayidx.i.i116, align 1, !tbaa !9
  %conv.i212 = zext i8 %88 to i32
  %89 = load i8, ptr %arrayidx.i.i165, align 1, !tbaa !9
  %conv.i218 = zext i8 %89 to i32
  %sub.i219 = add nsw i32 %53, -3
  %and.i221 = and i32 %sub3.i113, %sub.i219
  %idxprom.i.i222 = sext i32 %and.i221 to i64
  %arrayidx.i.i223 = getelementptr inbounds i8, ptr %55, i64 %idxprom.i.i222
  %90 = load i8, ptr %arrayidx.i.i223, align 1, !tbaa !9
  %conv.i224 = zext i8 %90 to i32
  %mul.i225 = mul i32 %conv.i212, 200002979
  %mul1.i226 = mul i32 %conv.i218, 30005491
  %mul2.i = mul i32 %conv.i224, 50004239
  %add.i227 = add i32 %mul.i225, -180007306
  %add3.i228 = add i32 %add.i227, %mul1.i226
  %add7.i230 = add i32 %add3.i228, %mul2.i
  %shr.i231 = lshr i32 %add7.i230, 9
  %shr8.i232 = lshr i32 %conv.i212, 2
  %shr10.i233 = lshr i32 %conv.i218, 3
  %shr12.i = lshr i32 %conv.i224, 4
  %91 = xor i32 %shr10.i233, %shr8.i232
  %92 = xor i32 %91, %shr12.i
  %93 = xor i32 %92, %shr.i231
  %xor17.i234 = xor i32 %93, %add7.i230
  %and61 = and i32 %xor17.i234, 65535
  %xor62 = xor i32 %and61, %52
  %94 = load i16, ptr %arrayidx.i.i.i, align 2, !tbaa !31
  %conv.i.i237 = sext i16 %94 to i32
  %95 = load i32, ptr @_ZZN9Predictor6updateEvE2a3, align 8, !tbaa !69
  %96 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a3, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %idxprom.i.i242 = sext i32 %95 to i64
  %arrayidx.i.i243 = getelementptr inbounds i16, ptr %96, i64 %idxprom.i.i242
  %97 = load <2 x i16>, ptr %arrayidx.i.i243, align 2, !tbaa !31
  %98 = zext <2 x i16> %97 to <2 x i32>
  %99 = sub nsw <2 x i32> %64, %98
  %100 = lshr <2 x i32> %99, <i32 7, i32 7>
  %101 = trunc <2 x i32> %100 to <2 x i16>
  %102 = add <2 x i16> %97, %101
  store <2 x i16> %102, ptr %arrayidx.i.i243, align 2, !tbaa !31
  %and.i255 = and i32 %conv.i.i237, 127
  %add26.i256 = add nsw i32 %conv.i.i237, 2048
  %shr27.i257 = ashr i32 %add26.i256, 7
  %mul.i258 = mul nsw i32 %xor62, 33
  %add28.i259 = add nsw i32 %mul.i258, %shr27.i257
  store i32 %add28.i259, ptr @_ZZN9Predictor6updateEvE2a3, align 8, !tbaa !69
  %idxprom.i60.i260 = sext i32 %add28.i259 to i64
  %arrayidx.i61.i261 = getelementptr inbounds i16, ptr %96, i64 %idxprom.i60.i260
  %103 = load i16, ptr %arrayidx.i61.i261, align 2, !tbaa !31
  %conv33.i262 = zext i16 %103 to i32
  %sub34.i263 = sub nuw nsw i32 128, %and.i255
  %mul35.i264 = mul nuw nsw i32 %sub34.i263, %conv33.i262
  %add38.i265 = add nsw i32 %add28.i259, 1
  %idxprom.i63.i266 = sext i32 %add38.i265 to i64
  %arrayidx.i64.i267 = getelementptr inbounds i16, ptr %96, i64 %idxprom.i63.i266
  %104 = load i16, ptr %arrayidx.i64.i267, align 2, !tbaa !31
  %conv40.i268 = zext i16 %104 to i32
  %mul41.i269 = mul nuw nsw i32 %and.i255, %conv40.i268
  %add42.i270 = add nuw nsw i32 %mul41.i269, %mul35.i264
  %shr43.i271 = lshr i32 %add42.i270, 11
  %add64 = add i32 %call47, 2
  %add65 = add i32 %add64, %shr43.i154
  %add66 = add i32 %add65, %shr43.i206
  %add67 = add i32 %add66, %shr43.i271
  %shr = ashr i32 %add67, 2
  %105 = load i8, ptr %arrayidx.i.i116, align 1, !tbaa !9
  %conv.i277 = zext i8 %105 to i32
  %mul70 = shl nuw nsw i32 %conv.i277, 8
  %add71 = add nsw i32 %mul70, %52
  %idxprom.i.i.i278 = zext i32 %shr43.i to i64
  %arrayidx.i.i.i279 = getelementptr inbounds i16, ptr %37, i64 %idxprom.i.i.i278
  %106 = load i16, ptr %arrayidx.i.i.i279, align 2, !tbaa !31
  %conv.i.i280 = sext i16 %106 to i32
  %107 = load i32, ptr @_ZZN9Predictor6updateEvE2a4, align 8, !tbaa !69
  %108 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a4, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %idxprom.i.i285 = sext i32 %107 to i64
  %arrayidx.i.i286 = getelementptr inbounds i16, ptr %108, i64 %idxprom.i.i285
  %109 = load <2 x i16>, ptr %arrayidx.i.i286, align 2, !tbaa !31
  %110 = zext <2 x i16> %109 to <2 x i32>
  %111 = sub nsw <2 x i32> %64, %110
  %112 = lshr <2 x i32> %111, <i32 7, i32 7>
  %113 = trunc <2 x i32> %112 to <2 x i16>
  %114 = add <2 x i16> %109, %113
  store <2 x i16> %114, ptr %arrayidx.i.i286, align 2, !tbaa !31
  %and.i298 = and i32 %conv.i.i280, 127
  %add26.i299 = add nsw i32 %conv.i.i280, 2048
  %shr27.i300 = ashr i32 %add26.i299, 7
  %mul.i301 = mul nsw i32 %add71, 33
  %add28.i302 = add nsw i32 %shr27.i300, %mul.i301
  store i32 %add28.i302, ptr @_ZZN9Predictor6updateEvE2a4, align 8, !tbaa !69
  %idxprom.i60.i303 = sext i32 %add28.i302 to i64
  %arrayidx.i61.i304 = getelementptr inbounds i16, ptr %108, i64 %idxprom.i60.i303
  %115 = load i16, ptr %arrayidx.i61.i304, align 2, !tbaa !31
  %conv33.i305 = zext i16 %115 to i32
  %sub34.i306 = sub nuw nsw i32 128, %and.i298
  %mul35.i307 = mul nuw nsw i32 %sub34.i306, %conv33.i305
  %add38.i308 = add nsw i32 %add28.i302, 1
  %idxprom.i63.i309 = sext i32 %add38.i308 to i64
  %arrayidx.i64.i310 = getelementptr inbounds i16, ptr %108, i64 %idxprom.i63.i309
  %116 = load i16, ptr %arrayidx.i64.i310, align 2, !tbaa !31
  %conv40.i311 = zext i16 %116 to i32
  %mul41.i312 = mul nuw nsw i32 %and.i298, %conv40.i311
  %add42.i313 = add nuw nsw i32 %mul41.i312, %mul35.i307
  %shr43.i314 = lshr i32 %add42.i313, 11
  %117 = load i8, ptr %arrayidx.i.i116, align 1, !tbaa !9
  %conv.i320 = zext i8 %117 to i32
  %118 = load i8, ptr %arrayidx.i.i165, align 1, !tbaa !9
  %conv.i326 = zext i8 %118 to i32
  %mul.i327 = mul i32 %conv.i320, 200002979
  %mul1.i328 = mul i32 %conv.i326, 30005491
  %add.i329 = add i32 %mul.i327, -230011545
  %add7.i332 = add i32 %add.i329, %mul1.i328
  %shr.i333 = lshr i32 %add7.i332, 9
  %shr8.i334 = lshr i32 %conv.i320, 2
  %shr10.i335 = lshr i32 %conv.i326, 3
  %119 = xor i32 %shr10.i335, %shr8.i334
  %120 = xor i32 %119, %shr.i333
  %121 = xor i32 %120, %add7.i332
  %xor17.i336 = and i32 %121, 65535
  %122 = xor i32 %52, %xor17.i336
  %xor78 = xor i32 %122, 65535
  %123 = load i16, ptr %arrayidx.i.i.i279, align 2, !tbaa !31
  %conv.i.i339 = sext i16 %123 to i32
  %124 = load i32, ptr @_ZZN9Predictor6updateEvE2a5, align 8, !tbaa !69
  %125 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a5, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %idxprom.i.i344 = sext i32 %124 to i64
  %arrayidx.i.i345 = getelementptr inbounds i16, ptr %125, i64 %idxprom.i.i344
  %126 = load <2 x i16>, ptr %arrayidx.i.i345, align 2, !tbaa !31
  %127 = zext <2 x i16> %126 to <2 x i32>
  %128 = sub nsw <2 x i32> %64, %127
  %129 = lshr <2 x i32> %128, <i32 7, i32 7>
  %130 = trunc <2 x i32> %129 to <2 x i16>
  %131 = add <2 x i16> %126, %130
  store <2 x i16> %131, ptr %arrayidx.i.i345, align 2, !tbaa !31
  %and.i357 = and i32 %conv.i.i339, 127
  %add26.i358 = add nsw i32 %conv.i.i339, 2048
  %shr27.i359 = ashr i32 %add26.i358, 7
  %mul.i360 = mul nsw i32 %xor78, 33
  %add28.i361 = add nsw i32 %mul.i360, %shr27.i359
  store i32 %add28.i361, ptr @_ZZN9Predictor6updateEvE2a5, align 8, !tbaa !69
  %idxprom.i60.i362 = sext i32 %add28.i361 to i64
  %arrayidx.i61.i363 = getelementptr inbounds i16, ptr %125, i64 %idxprom.i60.i362
  %132 = load i16, ptr %arrayidx.i61.i363, align 2, !tbaa !31
  %conv33.i364 = zext i16 %132 to i32
  %sub34.i365 = sub nuw nsw i32 128, %and.i357
  %mul35.i366 = mul nuw nsw i32 %sub34.i365, %conv33.i364
  %add38.i367 = add nsw i32 %add28.i361, 1
  %idxprom.i63.i368 = sext i32 %add38.i367 to i64
  %arrayidx.i64.i369 = getelementptr inbounds i16, ptr %125, i64 %idxprom.i63.i368
  %133 = load i16, ptr %arrayidx.i64.i369, align 2, !tbaa !31
  %conv40.i370 = zext i16 %133 to i32
  %mul41.i371 = mul nuw nsw i32 %and.i357, %conv40.i370
  %add42.i372 = add nuw nsw i32 %mul41.i371, %mul35.i366
  %shr43.i373 = lshr i32 %add42.i372, 11
  %134 = load i8, ptr %arrayidx.i.i116, align 1, !tbaa !9
  %conv.i379 = zext i8 %134 to i32
  %135 = load i8, ptr %arrayidx.i.i165, align 1, !tbaa !9
  %conv.i385 = zext i8 %135 to i32
  %136 = load i8, ptr %arrayidx.i.i223, align 1, !tbaa !9
  %conv.i391 = zext i8 %136 to i32
  %mul.i392 = mul i32 %conv.i379, 200002979
  %mul1.i393 = mul i32 %conv.i385, 30005491
  %mul2.i395 = mul i32 %conv.i391, 50004239
  %add.i394 = add i32 %mul.i392, -180007306
  %add3.i396 = add i32 %add.i394, %mul1.i393
  %add7.i398 = add i32 %add3.i396, %mul2.i395
  %shr.i399 = lshr i32 %add7.i398, 9
  %shr8.i400 = lshr i32 %conv.i379, 2
  %shr10.i401 = lshr i32 %conv.i385, 3
  %shr12.i402 = lshr i32 %conv.i391, 4
  %137 = xor i32 %shr10.i401, %shr8.i400
  %138 = xor i32 %137, %shr12.i402
  %139 = xor i32 %138, %shr.i399
  %xor17.i403 = xor i32 %139, %add7.i398
  %and85 = and i32 %xor17.i403, 65535
  %xor86 = xor i32 %and85, %52
  %140 = load i16, ptr %arrayidx.i.i.i279, align 2, !tbaa !31
  %conv.i.i406 = sext i16 %140 to i32
  %141 = load i32, ptr @_ZZN9Predictor6updateEvE2a6, align 8, !tbaa !69
  %142 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a6, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %idxprom.i.i411 = sext i32 %141 to i64
  %arrayidx.i.i412 = getelementptr inbounds i16, ptr %142, i64 %idxprom.i.i411
  %143 = load <2 x i16>, ptr %arrayidx.i.i412, align 2, !tbaa !31
  %144 = zext <2 x i16> %143 to <2 x i32>
  %145 = sub nsw <2 x i32> %64, %144
  %146 = lshr <2 x i32> %145, <i32 7, i32 7>
  %147 = trunc <2 x i32> %146 to <2 x i16>
  %148 = add <2 x i16> %143, %147
  store <2 x i16> %148, ptr %arrayidx.i.i412, align 2, !tbaa !31
  %and.i424 = and i32 %conv.i.i406, 127
  %add26.i425 = add nsw i32 %conv.i.i406, 2048
  %shr27.i426 = ashr i32 %add26.i425, 7
  %mul.i427 = mul nsw i32 %xor86, 33
  %add28.i428 = add nsw i32 %mul.i427, %shr27.i426
  store i32 %add28.i428, ptr @_ZZN9Predictor6updateEvE2a6, align 8, !tbaa !69
  %idxprom.i60.i429 = sext i32 %add28.i428 to i64
  %arrayidx.i61.i430 = getelementptr inbounds i16, ptr %142, i64 %idxprom.i60.i429
  %149 = load i16, ptr %arrayidx.i61.i430, align 2, !tbaa !31
  %conv33.i431 = zext i16 %149 to i32
  %sub34.i432 = sub nuw nsw i32 128, %and.i424
  %mul35.i433 = mul nuw nsw i32 %sub34.i432, %conv33.i431
  %add38.i434 = add nsw i32 %add28.i428, 1
  %idxprom.i63.i435 = sext i32 %add38.i434 to i64
  %arrayidx.i64.i436 = getelementptr inbounds i16, ptr %142, i64 %idxprom.i63.i435
  %150 = load i16, ptr %arrayidx.i64.i436, align 2, !tbaa !31
  %conv40.i437 = zext i16 %150 to i32
  %mul41.i438 = mul nuw nsw i32 %and.i424, %conv40.i437
  %add42.i439 = add nuw nsw i32 %mul41.i438, %mul35.i433
  %shr43.i440 = lshr i32 %add42.i439, 11
  %add89 = add nuw nsw i32 %shr43.i, 2
  %add90 = add nuw nsw i32 %add89, %shr43.i314
  %add91 = add nuw nsw i32 %add90, %shr43.i373
  %add92 = add nuw nsw i32 %add91, %shr43.i440
  %shr93 = lshr i32 %add92, 2
  %add96 = add nsw i32 %shr, 1
  %add97 = add nsw i32 %add96, %shr93
  %shr98 = ashr i32 %add97, 1
  store i32 %shr98, ptr %this, align 4, !tbaa !230
  ret void

eh.resume:                                        ; preds = %lpad41, %lpad34, %lpad27, %lpad20, %lpad13, %lpad6, %lpad
  %_ZGVZN9Predictor6updateEvE2a6.sink = phi ptr [ @_ZGVZN9Predictor6updateEvE2a6, %lpad41 ], [ @_ZGVZN9Predictor6updateEvE2a5, %lpad34 ], [ @_ZGVZN9Predictor6updateEvE2a4, %lpad27 ], [ @_ZGVZN9Predictor6updateEvE2a3, %lpad20 ], [ @_ZGVZN9Predictor6updateEvE2a2, %lpad13 ], [ @_ZGVZN9Predictor6updateEvE2a1, %lpad6 ], [ @_ZGVZN9Predictor6updateEvE1a, %lpad ]
  %.pn = phi { ptr, i32 } [ %34, %lpad41 ], [ %33, %lpad34 ], [ %32, %lpad27 ], [ %31, %lpad20 ], [ %30, %lpad13 ], [ %29, %lpad6 ], [ %28, %lpad ]
  tail call void @__cxa_guard_abort(ptr nonnull %_ZGVZN9Predictor6updateEvE2a6.sink) #39
  resume { ptr, i32 } %.pn
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN4APM1D2Ev(ptr noundef nonnull align 8 dereferenceable(32) %this) unnamed_addr #3 comdat align 2 {
entry:
  %t = getelementptr inbounds %class.APM1, ptr %this, i64 0, i32 2
  %0 = load i32, ptr %t, align 8, !tbaa !74
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %2 = shl i32 %0, 1
  %add.i.i = sub i32 %1, %2
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %3 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %3
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN5ArrayItLi0EED2Ev.exit

if.then.i.i:                                      ; preds = %entry
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayItLi0EED2Ev.exit

_ZN5ArrayItLi0EED2Ev.exit:                        ; preds = %entry, %if.then.i.i
  %ptr.i = getelementptr inbounds %class.APM1, ptr %this, i64 0, i32 2, i32 2
  %4 = load ptr, ptr %ptr.i, align 8, !tbaa !75
  tail call void @free(ptr noundef %4) #39
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_ZN7EncoderC2E4ModeP8_IO_FILE(ptr nocapture noundef nonnull align 8 dereferenceable(40) %this, i32 noundef %m, ptr noundef %f) unnamed_addr #25 align 2 {
entry:
  store i32 2048, ptr %this, align 8, !tbaa !230
  %mode = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 1
  store i32 %m, ptr %mode, align 4, !tbaa !232
  %archive = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 2
  store ptr %f, ptr %archive, align 8, !tbaa !235
  %x1 = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 3
  store i32 0, ptr %x1, align 8, !tbaa !236
  %x2 = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 4
  store i32 -1, ptr %x2, align 4, !tbaa !237
  %x = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 5
  store i32 0, ptr %x, align 8, !tbaa !238
  %alt = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 6
  store ptr null, ptr %alt, align 8, !tbaa !239
  %0 = load i32, ptr @level, align 4, !tbaa !25
  %cmp = icmp sgt i32 %0, 0
  %cmp3 = icmp eq i32 %m, 1
  %or.cond = and i1 %cmp3, %cmp
  br i1 %or.cond, label %for.body.preheader, label %for.body12.preheader

for.body12.preheader:                             ; preds = %for.body.preheader, %entry
  br label %for.body12

for.body.preheader:                               ; preds = %entry
  %call = tail call i32 @getc(ptr noundef %f)
  %and = and i32 %call, 255
  store i32 %and, ptr %x, align 8, !tbaa !238
  %shl.1 = shl nuw nsw i32 %and, 8
  %1 = load ptr, ptr %archive, align 8, !tbaa !235
  %call.1 = tail call i32 @getc(ptr noundef %1)
  %and.1 = and i32 %call.1, 255
  %add.1 = or i32 %and.1, %shl.1
  store i32 %add.1, ptr %x, align 8, !tbaa !238
  %shl.2 = shl nuw nsw i32 %add.1, 8
  %2 = load ptr, ptr %archive, align 8, !tbaa !235
  %call.2 = tail call i32 @getc(ptr noundef %2)
  %and.2 = and i32 %call.2, 255
  %add.2 = or i32 %and.2, %shl.2
  store i32 %add.2, ptr %x, align 8, !tbaa !238
  %shl.3 = shl nuw i32 %add.2, 8
  %3 = load ptr, ptr %archive, align 8, !tbaa !235
  %call.3 = tail call i32 @getc(ptr noundef %3)
  %and.3 = and i32 %call.3, 255
  %add.3 = or i32 %and.3, %shl.3
  store i32 %add.3, ptr %x, align 8, !tbaa !238
  br label %for.body12.preheader

for.cond.cleanup11:                               ; preds = %for.body12
  ret void

for.body12:                                       ; preds = %for.body12, %for.body12.preheader
  %indvars.iv = phi i64 [ 0, %for.body12.preheader ], [ %indvars.iv.next.1, %for.body12 ]
  %i8.025.tr = trunc i64 %indvars.iv to i16
  %4 = shl i16 %i8.025.tr, 1
  %div.rhs.trunc = or i16 %4, 3
  %div23 = udiv i16 16384, %div.rhs.trunc
  %div.zext = zext i16 %div23 to i32
  %arrayidx = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %indvars.iv
  store i32 %div.zext, ptr %arrayidx, align 8, !tbaa !25
  %indvars.iv.next = or i64 %indvars.iv, 1
  %i8.025.tr.1 = trunc i64 %indvars.iv.next to i16
  %5 = shl i16 %i8.025.tr.1, 1
  %div.rhs.trunc.1 = add nuw nsw i16 %5, 3
  %div23.1 = udiv i16 16384, %div.rhs.trunc.1
  %div.zext.1 = zext i16 %div23.1 to i32
  %arrayidx.1 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %indvars.iv.next
  store i32 %div.zext.1, ptr %arrayidx.1, align 4, !tbaa !25
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 1024
  br i1 %exitcond.not.1, label %for.cond.cleanup11, label %for.body12, !llvm.loop !240
}

; Function Attrs: nofree nounwind
declare noundef i32 @getc(ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_ZN7Encoder5flushEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(40) %this) local_unnamed_addr #19 align 2 {
entry:
  %mode = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 1
  %0 = load i32, ptr %mode, align 4, !tbaa !232
  %cmp = icmp eq i32 %0, 0
  %1 = load i32, ptr @level, align 4
  %cmp2 = icmp sgt i32 %1, 0
  %or.cond = select i1 %cmp, i1 %cmp2, i1 false
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %x1 = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 3
  %2 = load i32, ptr %x1, align 8, !tbaa !236
  %shr = lshr i32 %2, 24
  %archive = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 2
  %3 = load ptr, ptr %archive, align 8, !tbaa !235
  %call = tail call i32 @putc(i32 noundef %shr, ptr noundef %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @putc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: uwtable
define dso_local noundef i32 @_Z6detectP8_IO_FILEi8Filetype(ptr nocapture noundef %in, i32 noundef %n, i32 noundef %type) local_unnamed_addr #5 personality ptr @__gxx_personality_v0 {
entry:
  %pgm_buf = alloca [32 x i8], align 16
  %call = tail call i64 @ftell(ptr noundef %in)
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i = add nsw i32 %0, 1024
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %1
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i

if.then.i.i.i:                                    ; preds = %entry
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i

_ZN14ProgramChecker5allocEi.exit.i.i:             ; preds = %if.then.i.i.i, %entry
  %2 = phi i32 [ %add.i.i.i, %if.then.i.i.i ], [ %1, %entry ]
  %call.i.i = tail call noalias dereferenceable_or_null(1024) ptr @calloc(i64 noundef 1024, i64 noundef 1) #41
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.then7.i.i, label %_ZN5ArrayIiLi0EEC2Ei.exit

if.then7.i.i:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %exception.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

_ZN5ArrayIiLi0EEC2Ei.exit:                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %add.i.i.i872 = add nsw i32 %0, 2048
  store i32 %add.i.i.i872, ptr @programChecker, align 8, !tbaa !13
  %cmp.i.i.i873 = icmp sgt i32 %add.i.i.i872, %2
  br i1 %cmp.i.i.i873, label %if.then.i.i.i874, label %_ZN14ProgramChecker5allocEi.exit.i.i878

if.then.i.i.i874:                                 ; preds = %_ZN5ArrayIiLi0EEC2Ei.exit
  store i32 %add.i.i.i872, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i878

_ZN14ProgramChecker5allocEi.exit.i.i878:          ; preds = %if.then.i.i.i874, %_ZN5ArrayIiLi0EEC2Ei.exit
  %call.i.i875 = tail call noalias dereferenceable_or_null(1024) ptr @calloc(i64 noundef 1024, i64 noundef 1) #41
  %tobool.not.i.i877 = icmp eq ptr %call.i.i875, null
  br i1 %tobool.not.i.i877, label %if.then7.i.i880, label %invoke.cont

if.then7.i.i880:                                  ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i878
  %exception.i.i.i879 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i879, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i.i.i879, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc unwind label %lpad

.noexc:                                           ; preds = %if.then7.i.i880
  unreachable

invoke.cont:                                      ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i878
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %pgm_buf) #39
  %cmp.not1105 = icmp sgt i32 %n, 0
  br i1 %cmp.not1105, label %for.body.lr.ph, label %cleanup526

for.body.lr.ph:                                   ; preds = %invoke.cont
  %cmp49.not = icmp eq i32 %type, 1
  %cmp58 = icmp ne i32 %type, 1
  %type.off = add i32 %type, -2
  %switch = icmp ult i32 %type.off, 3
  %cmp310 = icmp eq i32 %type, 6
  %cmp427 = icmp eq i32 %type, 7
  %cmp489 = icmp ne i32 %type, 8
  %cmp511 = icmp eq i32 %type, 8
  br label %for.body

lpad:                                             ; preds = %if.then7.i.i880
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = add i32 %4, -1024
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %5
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN5ArrayIiLi0EED2Ev.exit

if.then.i.i:                                      ; preds = %lpad
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIiLi0EED2Ev.exit

_ZN5ArrayIiLi0EED2Ev.exit:                        ; preds = %lpad, %if.then.i.i
  tail call void @free(ptr noundef nonnull %call.i.i) #39
  resume { ptr, i32 } %3

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %cmp.not1135 = phi i1 [ true, %for.body.lr.ph ], [ %cmp.not, %for.inc ]
  %buf0.01133 = phi i32 [ 0, %for.body.lr.ph ], [ %or6, %for.inc ]
  %e8e9count.01132 = phi i32 [ 0, %for.body.lr.ph ], [ %e8e9count.2, %for.inc ]
  %e8e9pos.01131 = phi i32 [ 0, %for.body.lr.ph ], [ %e8e9pos.2, %for.inc ]
  %i.01129 = phi i32 [ 0, %for.body.lr.ph ], [ %inc525, %for.inc ]
  %rgbsize.01128 = phi i32 [ 0, %for.body.lr.ph ], [ %rgbsize.2, %for.inc ]
  %rgbXSIZE.01127 = phi i32 [ 0, %for.body.lr.ph ], [ %rgbXSIZE.7, %for.inc ]
  %rgbZSIZE.01126 = phi i32 [ 0, %for.body.lr.ph ], [ %rgbZSIZE.7, %for.inc ]
  %rgbSTORAGE.01125 = phi i32 [ -1, %for.body.lr.ph ], [ %rgbSTORAGE.7, %for.inc ]
  %rgbi.01124 = phi i32 [ 0, %for.body.lr.ph ], [ %rgbi.8, %for.inc ]
  %app.01123 = phi i32 [ 0, %for.body.lr.ph ], [ %app.3, %for.inc ]
  %sos.01122 = phi i32 [ 0, %for.body.lr.ph ], [ %sos.1, %for.inc ]
  %sof.01121 = phi i32 [ 0, %for.body.lr.ph ], [ %sof.2, %for.inc ]
  %soi.01120 = phi i32 [ 0, %for.body.lr.ph ], [ %soi.1956, %for.inc ]
  %pgmc.01119 = phi i32 [ 0, %for.body.lr.ph ], [ %pgmc.7, %for.inc ]
  %pgm_ptr.01118 = phi i32 [ 0, %for.body.lr.ph ], [ %pgm_ptr.6, %for.inc ]
  %pgmh.01117 = phi i32 [ 0, %for.body.lr.ph ], [ %pgmh.6, %for.inc ]
  %pgmw.01116 = phi i32 [ 0, %for.body.lr.ph ], [ %pgmw.6, %for.inc ]
  %pgmcomment.01115 = phi i32 [ 0, %for.body.lr.ph ], [ %pgmcomment.7, %for.inc ]
  %e8e9last.01114 = phi i32 [ 0, %for.body.lr.ph ], [ %e8e9last.2, %for.inc ]
  %pgm.01113 = phi i32 [ 0, %for.body.lr.ph ], [ %pgm.7, %for.inc ]
  %imgcomp.01112 = phi i32 [ -1, %for.body.lr.ph ], [ %imgcomp.5, %for.inc ]
  %bmpimgoff.01111 = phi i32 [ 0, %for.body.lr.ph ], [ %bmpimgoff.2, %for.inc ]
  %bmpy.01110 = phi i32 [ 0, %for.body.lr.ph ], [ %bmpy.2, %for.inc ]
  %bmpx.01109 = phi i32 [ 0, %for.body.lr.ph ], [ %bmpx.2, %for.inc ]
  %imgbpp.01108 = phi i32 [ 0, %for.body.lr.ph ], [ %imgbpp.6, %for.inc ]
  %bsize.01107 = phi i32 [ 0, %for.body.lr.ph ], [ %bsize.9, %for.inc ]
  %bmp.01106 = phi i32 [ 0, %for.body.lr.ph ], [ %bmp.6, %for.inc ]
  %call3 = tail call i32 @getc(ptr noundef %in)
  %cmp4 = icmp eq i32 %call3, -1
  br i1 %cmp4, label %cleanup526, label %if.end

if.end:                                           ; preds = %for.body
  %shl5 = shl i32 %buf0.01133, 8
  %or6 = or i32 %call3, %shl5
  %tobool = icmp eq i32 %soi.01120, 0
  %cmp7 = icmp ugt i32 %i.01129, 2
  %or.cond = and i1 %tobool, %cmp7
  br i1 %or.cond, label %land.lhs.true8, label %if.end11

land.lhs.true8:                                   ; preds = %if.end
  %and = and i32 %or6, -16
  %cmp9 = icmp eq i32 %and, -2555936
  %add = add nuw nsw i32 %i.01129, 2
  br i1 %cmp9, label %if.end24, label %if.end57

if.end11:                                         ; preds = %if.end
  br i1 %tobool, label %if.end57, label %if.then13

if.then13:                                        ; preds = %if.end11
  %cmp14 = icmp eq i32 %app.01123, %i.01129
  br i1 %cmp14, label %land.lhs.true15, label %if.end24

land.lhs.true15:                                  ; preds = %if.then13
  %and16 = and i32 %or6, -1048576
  %cmp17 = icmp eq i32 %and16, -2097152
  %and18 = and i32 %or6, -65536
  %cmp19 = icmp eq i32 %and18, -131072
  %or.cond926 = or i1 %cmp17, %cmp19
  br i1 %or.cond926, label %if.then20, label %if.end24

if.then20:                                        ; preds = %land.lhs.true15
  %and21 = and i32 %or6, 65535
  %add22 = add nuw i32 %i.01129, 2
  %add23 = add i32 %add22, %and21
  br label %if.end24

if.end24:                                         ; preds = %land.lhs.true8, %land.lhs.true15, %if.then20, %if.then13
  %soi.19611186 = phi i32 [ %soi.01120, %if.then20 ], [ %soi.01120, %if.then13 ], [ %soi.01120, %land.lhs.true15 ], [ %i.01129, %land.lhs.true8 ]
  %app.2 = phi i32 [ %add23, %if.then20 ], [ %app.01123, %if.then13 ], [ %i.01129, %land.lhs.true15 ], [ %add, %land.lhs.true8 ]
  %cmp25 = icmp slt i32 %app.2, %i.01129
  %sub = sub nsw i32 %i.01129, %soi.19611186
  %cmp27 = icmp slt i32 %sub, 65536
  %or.cond927 = select i1 %cmp25, i1 %cmp27, i1 false
  %cmp30 = icmp ugt i32 %buf0.01133, -16777217
  %or.cond928 = select i1 %or.cond927, i1 %cmp30, i1 false
  %and32 = and i32 %or6, -16776961
  %cmp33 = icmp eq i32 %and32, -1073741816
  %or.cond929 = select i1 %or.cond928, i1 %cmp33, i1 false
  %sof.1 = select i1 %or.cond929, i32 %i.01129, i32 %sof.01121
  %tobool36.not = icmp eq i32 %sof.1, 0
  br i1 %tobool36.not, label %if.end57, label %land.lhs.true37

land.lhs.true37:                                  ; preds = %if.end24
  %cmp38 = icmp sgt i32 %sof.1, %soi.19611186
  %or.cond930 = select i1 %cmp38, i1 %cmp27, i1 false
  %sub43 = sub nsw i32 %i.01129, %sof.1
  %cmp44 = icmp slt i32 %sub43, 4096
  %or.cond931 = select i1 %or.cond930, i1 %cmp44, i1 false
  %and46 = and i32 %or6, 65535
  %cmp47 = icmp eq i32 %and46, 65498
  %or.cond932 = select i1 %or.cond931, i1 %cmp47, i1 false
  br i1 %or.cond932, label %if.then48, label %if.end57

if.then48:                                        ; preds = %land.lhs.true37
  br i1 %cmp49.not, label %if.end57, label %if.then50

if.then50:                                        ; preds = %if.then48
  %conv = zext i32 %soi.19611186 to i64
  %add51 = add i64 %call, -3
  %sub52 = add i64 %add51, %conv
  br label %cleanup526.sink.split

if.end57:                                         ; preds = %land.lhs.true8, %if.end24, %land.lhs.true37, %if.then48, %if.end11
  %soi.1956 = phi i32 [ %soi.19611186, %if.then48 ], [ %soi.19611186, %land.lhs.true37 ], [ %soi.19611186, %if.end24 ], [ 0, %if.end11 ], [ 0, %land.lhs.true8 ]
  %sof.2 = phi i32 [ %sof.1, %if.then48 ], [ %sof.1, %land.lhs.true37 ], [ 0, %if.end24 ], [ %sof.01121, %if.end11 ], [ %sof.01121, %land.lhs.true8 ]
  %sos.1 = phi i32 [ %i.01129, %if.then48 ], [ %sos.01122, %land.lhs.true37 ], [ %sos.01122, %if.end24 ], [ %sos.01122, %if.end11 ], [ %sos.01122, %land.lhs.true8 ]
  %app.3 = phi i32 [ %app.2, %if.then48 ], [ %app.2, %land.lhs.true37 ], [ %app.2, %if.end24 ], [ %app.01123, %if.end11 ], [ %app.01123, %land.lhs.true8 ]
  %tobool60 = icmp eq i32 %sos.1, 0
  %or.cond610.not = select i1 %cmp58, i1 true, i1 %tobool60
  %cmp62 = icmp sle i32 %i.01129, %sos.1
  %or.cond933 = select i1 %or.cond610.not, i1 true, i1 %cmp62
  %and64 = and i32 %or6, 65280
  %cmp65 = icmp ne i32 %and64, 65280
  %or.cond934 = select i1 %or.cond933, i1 true, i1 %cmp65
  %and67 = and i32 %call3, 255
  %cmp68.not = icmp eq i32 %and67, 0
  %or.cond935 = or i1 %cmp68.not, %or.cond934
  %and70 = and i32 %call3, 248
  %cmp71.not = icmp eq i32 %and70, 208
  %or.cond936 = or i1 %cmp71.not, %or.cond935
  br i1 %or.cond936, label %if.end73, label %cleanup526

if.end73:                                         ; preds = %if.end57
  %and74 = and i32 %or6, 65535
  %cmp75 = icmp eq i32 %and74, 16973
  %spec.select937 = select i1 %cmp75, i32 %i.01129, i32 %bmp.01106
  %tobool78.not = icmp eq i32 %spec.select937, 0
  br i1 %tobool78.not, label %if.end238, label %if.then79

if.then79:                                        ; preds = %if.end73
  %sub80 = sub nsw i32 %i.01129, %spec.select937
  switch i32 %sub80, label %if.end109 [
    i32 4, label %if.end94.thread
    i32 12, label %if.then97
  ]

if.end94.thread:                                  ; preds = %if.then79
  %shr84 = lshr i32 %or6, 24
  %and85 = lshr i32 %or6, 8
  %shr86 = and i32 %and85, 65280
  %and88 = shl i32 %or6, 8
  %shl89 = and i32 %and88, 16711680
  %and91 = shl i32 %call3, 24
  %or90 = or i32 %shr84, %and91
  %or87 = or i32 %or90, %shr86
  %or93 = or i32 %or87, %shl89
  br label %if.end115

if.then97:                                        ; preds = %if.then79
  %shr99 = lshr i32 %or6, 24
  %and100 = lshr i32 %or6, 8
  %shr101 = and i32 %and100, 65280
  %and103 = shl i32 %or6, 8
  %shl104 = and i32 %and103, 16711680
  %and106 = shl i32 %call3, 24
  %or105 = or i32 %shr99, %and106
  %or102 = or i32 %or105, %shr101
  %or108 = or i32 %or102, %shl104
  br label %if.end115

if.end109:                                        ; preds = %if.then79
  %cmp111 = icmp eq i32 %sub80, 16
  %cmp113 = icmp ne i32 %or6, 671088640
  %or.cond611 = select i1 %cmp111, i1 %cmp113, i1 false
  br i1 %or.cond611, label %if.then114, label %if.end115

if.then114:                                       ; preds = %if.end109
  br label %if.end115

if.end115:                                        ; preds = %if.then97, %if.end94.thread, %if.then114, %if.end109
  %bmpimgoff.1971 = phi i32 [ %bmpimgoff.01111, %if.then114 ], [ %bmpimgoff.01111, %if.end109 ], [ %bmpimgoff.01111, %if.end94.thread ], [ %or108, %if.then97 ]
  %bmp.2 = phi i32 [ 0, %if.then114 ], [ %spec.select937, %if.end109 ], [ %spec.select937, %if.end94.thread ], [ %spec.select937, %if.then97 ]
  %bsize.2 = phi i32 [ 0, %if.then114 ], [ %bsize.01107, %if.end109 ], [ %or93, %if.end94.thread ], [ %bsize.01107, %if.then97 ]
  %imgbpp.1 = phi i32 [ 0, %if.then114 ], [ %imgbpp.01108, %if.end109 ], [ %imgbpp.01108, %if.end94.thread ], [ %imgbpp.01108, %if.then97 ]
  %imgcomp.1 = phi i32 [ -1, %if.then114 ], [ %imgcomp.01112, %if.end109 ], [ %imgcomp.01112, %if.end94.thread ], [ %imgcomp.01112, %if.then97 ]
  %sub116 = sub nsw i32 %i.01129, %bmp.2
  %cmp117 = icmp eq i32 %sub116, 20
  br i1 %cmp117, label %if.then118, label %if.end133

if.then118:                                       ; preds = %if.end115
  %shr120 = lshr i32 %or6, 24
  %and121 = lshr i32 %or6, 8
  %shr122 = and i32 %and121, 65280
  %or123 = or i32 %shr122, %shr120
  %and124 = shl i32 %or6, 8
  %shl125 = and i32 %and124, 16711680
  %or126 = or i32 %or123, %shl125
  %and127 = shl i32 %call3, 24
  %or129 = or i32 %or126, %and127
  %cmp130 = icmp eq i32 %or129, 0
  br i1 %cmp130, label %if.then131, label %if.end133

if.then131:                                       ; preds = %if.then118
  br label %if.end133

if.end133:                                        ; preds = %if.then118, %if.then131, %if.end115
  %bmp.3 = phi i32 [ 0, %if.then131 ], [ %bmp.2, %if.then118 ], [ %bmp.2, %if.end115 ]
  %bsize.3 = phi i32 [ 0, %if.then131 ], [ %bsize.2, %if.then118 ], [ %bsize.2, %if.end115 ]
  %imgbpp.2 = phi i32 [ 0, %if.then131 ], [ %imgbpp.1, %if.then118 ], [ %imgbpp.1, %if.end115 ]
  %bmpx.1 = phi i32 [ 0, %if.then131 ], [ %or129, %if.then118 ], [ %bmpx.01109, %if.end115 ]
  %imgcomp.2 = phi i32 [ -1, %if.then131 ], [ %imgcomp.1, %if.then118 ], [ %imgcomp.1, %if.end115 ]
  %sub134 = sub nsw i32 %i.01129, %bmp.3
  %cmp135 = icmp eq i32 %sub134, 24
  br i1 %cmp135, label %if.then136, label %if.end151

if.then136:                                       ; preds = %if.end133
  %shr138 = lshr i32 %or6, 24
  %and139 = lshr i32 %or6, 8
  %shr140 = and i32 %and139, 65280
  %or141 = or i32 %shr140, %shr138
  %and142 = shl i32 %or6, 8
  %shl143 = and i32 %and142, 16711680
  %or144 = or i32 %or141, %shl143
  %and145 = shl i32 %call3, 24
  %or147 = or i32 %or144, %and145
  %cmp148 = icmp eq i32 %or147, 0
  br i1 %cmp148, label %if.then149, label %if.end151

if.then149:                                       ; preds = %if.then136
  br label %if.end151

if.end151:                                        ; preds = %if.then136, %if.then149, %if.end133
  %bmp.4 = phi i32 [ 0, %if.then149 ], [ %bmp.3, %if.then136 ], [ %bmp.3, %if.end133 ]
  %bsize.4 = phi i32 [ 0, %if.then149 ], [ %bsize.3, %if.then136 ], [ %bsize.3, %if.end133 ]
  %imgbpp.3 = phi i32 [ 0, %if.then149 ], [ %imgbpp.2, %if.then136 ], [ %imgbpp.2, %if.end133 ]
  %bmpy.1 = phi i32 [ 0, %if.then149 ], [ %or147, %if.then136 ], [ %bmpy.01110, %if.end133 ]
  %imgcomp.3 = phi i32 [ -1, %if.then149 ], [ %imgcomp.2, %if.then136 ], [ %imgcomp.2, %if.end133 ]
  %sub152 = sub nsw i32 %i.01129, %bmp.4
  %cmp153 = icmp eq i32 %sub152, 27
  %spec.select938 = select i1 %cmp153, i32 %call3, i32 %imgbpp.3
  %cmp157 = icmp eq i32 %sub152, 31
  br i1 %cmp157, label %if.then158, label %if.end162

if.then158:                                       ; preds = %if.end151
  %cmp159.not = icmp eq i32 %or6, 0
  br i1 %cmp159.not, label %if.end162, label %if.then160

if.then160:                                       ; preds = %if.then158
  br label %if.end162

if.end162:                                        ; preds = %if.then158, %if.then160, %if.end151
  %bmp.5 = phi i32 [ 0, %if.then160 ], [ %bmp.4, %if.then158 ], [ %bmp.4, %if.end151 ]
  %bsize.5 = phi i32 [ 0, %if.then160 ], [ %bsize.4, %if.then158 ], [ %bsize.4, %if.end151 ]
  %imgbpp.5 = phi i32 [ 0, %if.then160 ], [ %spec.select938, %if.then158 ], [ %spec.select938, %if.end151 ]
  %imgcomp.4 = phi i32 [ -1, %if.then160 ], [ 0, %if.then158 ], [ %imgcomp.3, %if.end151 ]
  br i1 %switch, label %land.lhs.true168, label %if.end207

land.lhs.true168:                                 ; preds = %if.end162
  %cmp169 = icmp eq i32 %imgbpp.5, 4
  %cmp171 = icmp eq i32 %imgbpp.5, 8
  %or.cond614 = or i1 %cmp169, %cmp171
  %cmp173 = icmp eq i32 %imgbpp.5, 24
  %or.cond615 = or i1 %cmp173, %or.cond614
  %cmp175 = icmp eq i32 %imgcomp.4, 0
  %or.cond616 = select i1 %or.cond615, i1 %cmp175, i1 false
  br i1 %or.cond616, label %if.then176, label %if.end207

if.then176:                                       ; preds = %land.lhs.true168
  %mul = mul nsw i32 %bmpy.1, %bmpx.1
  br i1 %cmp169, label %if.end184.thread, label %if.end184

if.end184.thread:                                 ; preds = %if.then176
  %shr179 = ashr i32 %mul, 1
  %add180 = add nsw i32 %shr179, %bmpimgoff.1971
  br label %if.end201

if.end184:                                        ; preds = %if.then176
  %add188 = add nsw i32 %mul, %bmpimgoff.1971
  %bsize.7 = select i1 %cmp171, i32 %add188, i32 %bsize.5
  br i1 %cmp173, label %if.then194, label %if.end201

if.then194:                                       ; preds = %if.end184
  %mul196 = mul nsw i32 %mul, 3
  %add197 = add nsw i32 %mul196, %bmpimgoff.1971
  br label %if.end201

if.end201:                                        ; preds = %if.end184.thread, %if.then194, %if.end184
  %bsize.8 = phi i32 [ %bsize.7, %if.end184 ], [ %add197, %if.then194 ], [ %add180, %if.end184.thread ]
  %conv202 = sext i32 %bsize.8 to i64
  %add203 = add nsw i64 %call, %conv202
  br label %cleanup526.sink.split

if.end207:                                        ; preds = %if.end162, %land.lhs.true168
  %cmp208 = icmp eq i32 %imgbpp.5, 4
  %cmp210 = icmp eq i32 %imgcomp.4, 0
  %or.cond617 = select i1 %cmp208, i1 %cmp210, i1 false
  br i1 %or.cond617, label %if.then211, label %if.end217

if.then211:                                       ; preds = %if.end207
  %conv212 = sext i32 %bmp.5 to i64
  %add213 = add i64 %call, -1
  %sub214 = add i64 %add213, %conv212
  br label %cleanup526.sink.split

if.end217:                                        ; preds = %if.end207
  %cmp218 = icmp eq i32 %imgbpp.5, 8
  %or.cond618 = select i1 %cmp218, i1 %cmp210, i1 false
  br i1 %or.cond618, label %if.then221, label %if.end227

if.then221:                                       ; preds = %if.end217
  %conv222 = sext i32 %bmp.5 to i64
  %add223 = add i64 %call, -1
  %sub224 = add i64 %add223, %conv222
  br label %cleanup526.sink.split

if.end227:                                        ; preds = %if.end217
  %cmp228 = icmp eq i32 %imgbpp.5, 24
  %or.cond619 = select i1 %cmp228, i1 %cmp210, i1 false
  br i1 %or.cond619, label %if.then231, label %if.end238

if.then231:                                       ; preds = %if.end227
  %conv232 = sext i32 %bmp.5 to i64
  %add233 = add i64 %call, -1
  %sub234 = add i64 %add233, %conv232
  br label %cleanup526.sink.split

if.end238:                                        ; preds = %if.end227, %if.end73
  %bmp.6 = phi i32 [ %bmp.5, %if.end227 ], [ 0, %if.end73 ]
  %bsize.9 = phi i32 [ %bsize.5, %if.end227 ], [ %bsize.01107, %if.end73 ]
  %imgbpp.6 = phi i32 [ %imgbpp.5, %if.end227 ], [ %imgbpp.01108, %if.end73 ]
  %bmpx.2 = phi i32 [ %bmpx.1, %if.end227 ], [ %bmpx.01109, %if.end73 ]
  %bmpy.2 = phi i32 [ %bmpy.1, %if.end227 ], [ %bmpy.01110, %if.end73 ]
  %bmpimgoff.2 = phi i32 [ %bmpimgoff.1971, %if.end227 ], [ %bmpimgoff.01111, %if.end73 ]
  %imgcomp.5 = phi i32 [ %imgcomp.4, %if.end227 ], [ %imgcomp.01112, %if.end73 ]
  %and239 = and i32 %or6, 16777215
  %cmp240 = icmp eq i32 %and239, 5256458
  %spec.select942 = select i1 %cmp240, i32 %i.01129, i32 %pgm.01113
  %tobool243.not = icmp eq i32 %spec.select942, 0
  br i1 %tobool243.not, label %if.end339, label %if.then244

if.then244:                                       ; preds = %if.end238
  %sub245 = sub nsw i32 %i.01129, %spec.select942
  %cmp246 = icmp eq i32 %sub245, 1
  %cmp248 = icmp eq i32 %call3, 35
  %or.cond620 = and i1 %cmp248, %cmp246
  %spec.select943 = select i1 %or.cond620, i32 1, i32 %pgmcomment.01115
  %tobool251 = icmp eq i32 %spec.select943, 0
  %cmp253 = icmp eq i32 %call3, 32
  %or.cond621.not922.not = and i1 %cmp253, %tobool251
  %tobool255 = icmp eq i32 %pgmw.01116, 0
  %or.cond622 = select i1 %or.cond621.not922.not, i1 %tobool255, i1 false
  %tobool257 = icmp ne i32 %pgm_ptr.01118, 0
  %or.cond623 = select i1 %or.cond622, i1 %tobool257, i1 false
  br i1 %or.cond623, label %if.then258, label %if.end263

if.then258:                                       ; preds = %if.then244
  %idxprom = sext i32 %pgm_ptr.01118 to i64
  %arrayidx = getelementptr inbounds [32 x i8], ptr %pgm_buf, i64 0, i64 %idxprom
  store i8 0, ptr %arrayidx, align 1, !tbaa !9
  %call.i = call i64 @strtol(ptr nocapture noundef nonnull %pgm_buf, ptr noundef null, i32 noundef 10) #39
  %conv.i = trunc i64 %call.i to i32
  %cmp260 = icmp eq i32 %conv.i, 0
  br i1 %cmp260, label %if.then261, label %if.end263

if.then261:                                       ; preds = %if.then258
  br label %if.end263

if.end263:                                        ; preds = %if.then258, %if.then261, %if.then244
  %pgm.3 = phi i32 [ %spec.select942, %if.then244 ], [ 0, %if.then261 ], [ %spec.select942, %if.then258 ]
  %pgmw.2 = phi i32 [ %pgmw.01116, %if.then244 ], [ 0, %if.then261 ], [ %conv.i, %if.then258 ]
  %pgmh.2 = phi i32 [ %pgmh.01117, %if.then244 ], [ 0, %if.then261 ], [ %pgmh.01117, %if.then258 ]
  %pgm_ptr.1 = phi i32 [ %pgm_ptr.01118, %if.then244 ], [ 0, %if.then261 ], [ 0, %if.then258 ]
  %pgmc.2 = phi i32 [ %pgmc.01119, %if.then244 ], [ 0, %if.then261 ], [ %pgmc.01119, %if.then258 ]
  %tobool264 = icmp eq i32 %spec.select943, 0
  %cmp266 = icmp eq i32 %call3, 10
  %or.cond624 = and i1 %cmp266, %tobool264
  %tobool268 = icmp eq i32 %pgmh.2, 0
  %or.cond625.not923 = select i1 %or.cond624, i1 %tobool268, i1 false
  %tobool270 = icmp ne i32 %pgm_ptr.1, 0
  %or.cond626 = select i1 %or.cond625.not923, i1 %tobool270, i1 false
  br i1 %or.cond626, label %if.then271, label %if.end280

if.then271:                                       ; preds = %if.end263
  %idxprom273 = sext i32 %pgm_ptr.1 to i64
  %arrayidx274 = getelementptr inbounds [32 x i8], ptr %pgm_buf, i64 0, i64 %idxprom273
  store i8 0, ptr %arrayidx274, align 1, !tbaa !9
  %call.i883 = call i64 @strtol(ptr nocapture noundef nonnull %pgm_buf, ptr noundef null, i32 noundef 10) #39
  %conv.i884 = trunc i64 %call.i883 to i32
  %cmp277 = icmp eq i32 %conv.i884, 0
  br i1 %cmp277, label %if.then278, label %if.then296

if.then278:                                       ; preds = %if.then271
  br label %if.then296

if.end280:                                        ; preds = %if.end263
  %tobool285 = icmp eq i32 %pgmc.2, 0
  %or.cond628.not924 = select i1 %or.cond624, i1 %tobool285, i1 false
  %or.cond629 = select i1 %or.cond628.not924, i1 %tobool270, i1 false
  br i1 %or.cond629, label %if.then288, label %if.end294

if.then288:                                       ; preds = %if.end280
  %idxprom290 = sext i32 %pgm_ptr.1 to i64
  %arrayidx291 = getelementptr inbounds [32 x i8], ptr %pgm_buf, i64 0, i64 %idxprom290
  store i8 0, ptr %arrayidx291, align 1, !tbaa !9
  %call.i885 = call i64 @strtol(ptr nocapture noundef nonnull %pgm_buf, ptr noundef null, i32 noundef 10) #39
  %conv.i886 = trunc i64 %call.i885 to i32
  br label %if.then296

if.end294:                                        ; preds = %if.end280
  br i1 %tobool264, label %if.then296, label %if.end301

if.then296:                                       ; preds = %if.then271, %if.then278, %if.then288, %if.end294
  %pgmc.51011 = phi i32 [ %pgmc.2, %if.end294 ], [ %conv.i886, %if.then288 ], [ %pgmc.2, %if.then271 ], [ 0, %if.then278 ]
  %pgm_ptr.31009 = phi i32 [ %pgm_ptr.1, %if.end294 ], [ 0, %if.then288 ], [ 0, %if.then271 ], [ 0, %if.then278 ]
  %pgm.59901008 = phi i32 [ %pgm.3, %if.end294 ], [ %pgm.3, %if.then288 ], [ %pgm.3, %if.then271 ], [ 0, %if.then278 ]
  %pgmw.49921004 = phi i32 [ %pgmw.2, %if.end294 ], [ %pgmw.2, %if.then288 ], [ %pgmw.2, %if.then271 ], [ 0, %if.then278 ]
  %pgmh.49931002 = phi i32 [ %pgmh.2, %if.end294 ], [ %pgmh.2, %if.then288 ], [ %conv.i884, %if.then271 ], [ 0, %if.then278 ]
  %conv297 = trunc i32 %call3 to i8
  %inc298 = add nsw i32 %pgm_ptr.31009, 1
  %idxprom299 = sext i32 %pgm_ptr.31009 to i64
  %arrayidx300 = getelementptr inbounds [32 x i8], ptr %pgm_buf, i64 0, i64 %idxprom299
  store i8 %conv297, ptr %arrayidx300, align 1, !tbaa !9
  br label %if.end301

if.end301:                                        ; preds = %if.then296, %if.end294
  %pgmc.51010 = phi i32 [ %pgmc.2, %if.end294 ], [ %pgmc.51011, %if.then296 ]
  %pgm.59901007 = phi i32 [ %pgm.3, %if.end294 ], [ %pgm.59901008, %if.then296 ]
  %pgmw.49921003 = phi i32 [ %pgmw.2, %if.end294 ], [ %pgmw.49921004, %if.then296 ]
  %pgmh.49931001 = phi i32 [ %pgmh.2, %if.end294 ], [ %pgmh.49931002, %if.then296 ]
  %pgm_ptr.4 = phi i32 [ %pgm_ptr.1, %if.end294 ], [ %inc298, %if.then296 ]
  %cmp302 = icmp sgt i32 %pgm_ptr.4, 31
  br i1 %cmp302, label %if.end339, label %if.end304

if.end304:                                        ; preds = %if.end301
  %tobool312 = icmp ne i32 %pgmw.49921003, 0
  %or.cond631 = select i1 %cmp310, i1 %tobool312, i1 false
  %tobool314 = icmp ne i32 %pgmh.49931001, 0
  %or.cond632 = select i1 %or.cond631, i1 %tobool314, i1 false
  %tobool316 = icmp ne i32 %pgmc.51010, 0
  %or.cond633 = select i1 %or.cond632, i1 %tobool316, i1 false
  br i1 %or.cond633, label %if.then317, label %if.end326

if.then317:                                       ; preds = %if.end304
  %mul318 = mul nsw i32 %pgmh.49931001, %pgmw.49921003
  %add319 = add nsw i32 %i.01129, -1
  %add320 = add i32 %add319, %pgm.59901007
  %sub321 = add i32 %add320, %mul318
  %conv322 = sext i32 %sub321 to i64
  %add323 = add nsw i64 %call, %conv322
  br label %cleanup526.sink.split

if.end326:                                        ; preds = %if.end304
  %tobool305 = icmp ne i32 %spec.select943, 0
  %or.cond630 = and i1 %cmp266, %tobool305
  %spec.store.select = select i1 %or.cond630, i32 0, i32 %spec.select943
  %or.cond634 = select i1 %tobool312, i1 %tobool314, i1 false
  %or.cond635 = select i1 %or.cond634, i1 %tobool316, i1 false
  br i1 %or.cond635, label %if.then332, label %if.end339

if.then332:                                       ; preds = %if.end326
  %conv333 = sext i32 %pgm.59901007 to i64
  %add334 = add i64 %call, -2
  %sub335 = add i64 %add334, %conv333
  br label %cleanup526.sink.split

if.end339:                                        ; preds = %if.end301, %if.end326, %if.end238
  %pgm.7 = phi i32 [ %pgm.59901007, %if.end326 ], [ 0, %if.end238 ], [ 0, %if.end301 ]
  %pgmcomment.7 = phi i32 [ %spec.store.select, %if.end326 ], [ %pgmcomment.01115, %if.end238 ], [ 0, %if.end301 ]
  %pgmw.6 = phi i32 [ %pgmw.49921003, %if.end326 ], [ %pgmw.01116, %if.end238 ], [ 0, %if.end301 ]
  %pgmh.6 = phi i32 [ %pgmh.49931001, %if.end326 ], [ %pgmh.01117, %if.end238 ], [ 0, %if.end301 ]
  %pgm_ptr.6 = phi i32 [ %pgm_ptr.4, %if.end326 ], [ %pgm_ptr.01118, %if.end238 ], [ 0, %if.end301 ]
  %pgmc.7 = phi i32 [ %pgmc.51010, %if.end326 ], [ %pgmc.01119, %if.end238 ], [ 0, %if.end301 ]
  %cmp341 = icmp eq i32 %and74, 474
  %spec.select944 = select i1 %cmp341, i32 %i.01129, i32 %rgbi.01124
  %tobool344.not = icmp eq i32 %spec.select944, 0
  br i1 %tobool344.not, label %if.end449, label %if.then345

if.then345:                                       ; preds = %if.end339
  %sub346 = sub nsw i32 %i.01129, %spec.select944
  %cmp347 = icmp eq i32 %sub346, 1
  br i1 %cmp347, label %if.then348, label %if.end354

if.then348:                                       ; preds = %if.then345
  %or.cond636 = icmp ult i32 %call3, 2
  %spec.select944. = select i1 %or.cond636, i32 %spec.select944, i32 0
  %call3. = select i1 %or.cond636, i32 %call3, i32 -1
  %rgbZSIZE.0. = select i1 %or.cond636, i32 %rgbZSIZE.01126, i32 0
  %rgbXSIZE.0. = select i1 %or.cond636, i32 %rgbXSIZE.01127, i32 0
  br label %if.end354

if.end354:                                        ; preds = %if.then348, %if.then345
  %rgbi.2 = phi i32 [ %spec.select944, %if.then345 ], [ %spec.select944., %if.then348 ]
  %rgbSTORAGE.1 = phi i32 [ %rgbSTORAGE.01125, %if.then345 ], [ %call3., %if.then348 ]
  %rgbZSIZE.1 = phi i32 [ %rgbZSIZE.01126, %if.then345 ], [ %rgbZSIZE.0., %if.then348 ]
  %rgbXSIZE.1 = phi i32 [ %rgbXSIZE.01127, %if.then345 ], [ %rgbXSIZE.0., %if.then348 ]
  %sub355 = sub nsw i32 %i.01129, %rgbi.2
  %cmp356 = icmp eq i32 %sub355, 2
  br i1 %cmp356, label %if.then357, label %if.end364

if.then357:                                       ; preds = %if.end354
  %6 = add i32 %call3, -1
  %or.cond637 = icmp ult i32 %6, 2
  %rgbi.2. = select i1 %or.cond637, i32 %rgbi.2, i32 0
  %rgbSTORAGE.1. = select i1 %or.cond637, i32 %rgbSTORAGE.1, i32 -1
  %rgbZSIZE.1. = select i1 %or.cond637, i32 %rgbZSIZE.1, i32 0
  %rgbXSIZE.1. = select i1 %or.cond637, i32 %rgbXSIZE.1, i32 0
  br label %if.end364

if.end364:                                        ; preds = %if.then357, %if.end354
  %rgbi.3 = phi i32 [ %rgbi.2, %if.end354 ], [ %rgbi.2., %if.then357 ]
  %rgbSTORAGE.2 = phi i32 [ %rgbSTORAGE.1, %if.end354 ], [ %rgbSTORAGE.1., %if.then357 ]
  %rgbZSIZE.2 = phi i32 [ %rgbZSIZE.1, %if.end354 ], [ %rgbZSIZE.1., %if.then357 ]
  %rgbXSIZE.2 = phi i32 [ %rgbXSIZE.1, %if.end354 ], [ %rgbXSIZE.1., %if.then357 ]
  %sub365 = sub nsw i32 %i.01129, %rgbi.3
  %cmp366 = icmp ne i32 %sub365, 4
  %and74.off = add nsw i32 %and74, -1
  %switch950 = icmp ult i32 %and74.off, 3
  %or.cond951 = or i1 %switch950, %cmp366
  br i1 %or.cond951, label %if.end380, label %if.else378

if.else378:                                       ; preds = %if.end364
  br label %if.end380

if.end380:                                        ; preds = %if.else378, %if.end364
  %rgbi.4 = phi i32 [ 0, %if.else378 ], [ %rgbi.3, %if.end364 ]
  %rgbSTORAGE.3 = phi i32 [ -1, %if.else378 ], [ %rgbSTORAGE.2, %if.end364 ]
  %rgbZSIZE.3 = phi i32 [ 0, %if.else378 ], [ %rgbZSIZE.2, %if.end364 ]
  %rgbXSIZE.3 = phi i32 [ 0, %if.else378 ], [ %rgbXSIZE.2, %if.end364 ]
  %sub381 = sub nsw i32 %i.01129, %rgbi.4
  %cmp382 = icmp eq i32 %sub381, 6
  br i1 %cmp382, label %if.then383, label %if.end390

if.then383:                                       ; preds = %if.end380
  %cmp385.not = icmp eq i32 %and74, 0
  %.rgbi.4 = select i1 %cmp385.not, i32 0, i32 %rgbi.4
  %.rgbSTORAGE.3 = select i1 %cmp385.not, i32 -1, i32 %rgbSTORAGE.3
  %.rgbZSIZE.3 = select i1 %cmp385.not, i32 0, i32 %rgbZSIZE.3
  br label %if.end390

if.end390:                                        ; preds = %if.then383, %if.end380
  %rgbi.5 = phi i32 [ %rgbi.4, %if.end380 ], [ %.rgbi.4, %if.then383 ]
  %rgbSTORAGE.4 = phi i32 [ %rgbSTORAGE.3, %if.end380 ], [ %.rgbSTORAGE.3, %if.then383 ]
  %rgbZSIZE.4 = phi i32 [ %rgbZSIZE.3, %if.end380 ], [ %.rgbZSIZE.3, %if.then383 ]
  %rgbXSIZE.4 = phi i32 [ %rgbXSIZE.3, %if.end380 ], [ %and74, %if.then383 ]
  %sub391 = sub nsw i32 %i.01129, %rgbi.5
  %cmp392 = icmp eq i32 %sub391, 8
  br i1 %cmp392, label %if.then393, label %if.end402

if.then393:                                       ; preds = %if.end390
  %cmp395.not = icmp eq i32 %and74, 0
  br i1 %cmp395.not, label %if.end402, label %if.then396

if.then396:                                       ; preds = %if.then393
  %mul398 = mul nuw nsw i32 %rgbXSIZE.4, %and74
  %add399 = add nuw nsw i32 %mul398, 512
  br label %if.end402

if.end402:                                        ; preds = %if.then393, %if.then396, %if.end390
  %rgbi.6 = phi i32 [ %rgbi.5, %if.then396 ], [ %rgbi.5, %if.end390 ], [ 0, %if.then393 ]
  %rgbSTORAGE.5 = phi i32 [ %rgbSTORAGE.4, %if.then396 ], [ %rgbSTORAGE.4, %if.end390 ], [ -1, %if.then393 ]
  %rgbZSIZE.5 = phi i32 [ %rgbZSIZE.4, %if.then396 ], [ %rgbZSIZE.4, %if.end390 ], [ 0, %if.then393 ]
  %rgbXSIZE.5 = phi i32 [ %rgbXSIZE.4, %if.then396 ], [ %rgbXSIZE.4, %if.end390 ], [ 0, %if.then393 ]
  %rgbsize.1 = phi i32 [ %add399, %if.then396 ], [ %rgbsize.01128, %if.end390 ], [ %rgbsize.01128, %if.then393 ]
  %sub403 = sub nsw i32 %i.01129, %rgbi.6
  %cmp404 = icmp eq i32 %sub403, 10
  br i1 %cmp404, label %if.then405, label %if.end418

if.then405:                                       ; preds = %if.end402
  %trunc = trunc i32 %or6 to i16
  switch i16 %trunc, label %if.else416 [
    i16 1, label %if.end418
    i16 3, label %if.end418
    i16 4, label %if.end418
  ]

if.else416:                                       ; preds = %if.then405
  br label %if.end418

if.end418:                                        ; preds = %if.then405, %if.then405, %if.then405, %if.else416, %if.end402
  %rgbi.7 = phi i32 [ 0, %if.else416 ], [ %rgbi.6, %if.end402 ], [ %rgbi.6, %if.then405 ], [ %rgbi.6, %if.then405 ], [ %rgbi.6, %if.then405 ]
  %rgbSTORAGE.6 = phi i32 [ -1, %if.else416 ], [ %rgbSTORAGE.5, %if.end402 ], [ %rgbSTORAGE.5, %if.then405 ], [ %rgbSTORAGE.5, %if.then405 ], [ %rgbSTORAGE.5, %if.then405 ]
  %rgbZSIZE.6 = phi i32 [ 0, %if.else416 ], [ %rgbZSIZE.5, %if.end402 ], [ %and74, %if.then405 ], [ %and74, %if.then405 ], [ %and74, %if.then405 ]
  %rgbXSIZE.6 = phi i32 [ 0, %if.else416 ], [ %rgbXSIZE.5, %if.end402 ], [ %rgbXSIZE.5, %if.then405 ], [ %rgbXSIZE.5, %if.then405 ], [ %rgbXSIZE.5, %if.then405 ]
  %cmp419.not = icmp eq i32 %rgbsize.1, 0
  br i1 %cmp419.not, label %if.end449, label %land.lhs.true420

land.lhs.true420:                                 ; preds = %if.end418
  %sub421 = sub nsw i32 %i.01129, %rgbi.7
  %cmp422 = icmp sgt i32 %sub421, 0
  %cmp425 = icmp sgt i32 %sub421, %rgbsize.1
  %or.cond945 = select i1 %cmp422, i1 %cmp425, i1 false
  br i1 %or.cond945, label %if.then426, label %if.end449

if.then426:                                       ; preds = %land.lhs.true420
  %cmp429 = icmp eq i32 %rgbZSIZE.6, 1
  %or.cond638 = select i1 %cmp427, i1 %cmp429, i1 false
  %cmp431 = icmp eq i32 %rgbSTORAGE.6, 0
  %or.cond639 = select i1 %or.cond638, i1 %cmp431, i1 false
  br i1 %or.cond639, label %if.then432, label %if.end437

if.then432:                                       ; preds = %if.then426
  %conv433 = sext i32 %rgbsize.1 to i64
  %add434 = add nsw i64 %call, %conv433
  br label %cleanup526.sink.split

if.end437:                                        ; preds = %if.then426
  %or.cond640 = select i1 %cmp429, i1 %cmp431, i1 false
  br i1 %or.cond640, label %if.then441, label %if.end449

if.then441:                                       ; preds = %if.end437
  %conv442 = sext i32 %rgbi.7 to i64
  %add443 = add i64 %call, -1
  %sub444 = add i64 %add443, %conv442
  br label %cleanup526.sink.split

if.end449:                                        ; preds = %if.end418, %land.lhs.true420, %if.end437, %if.end339
  %rgbi.8 = phi i32 [ %rgbi.7, %if.end437 ], [ %rgbi.7, %land.lhs.true420 ], [ %rgbi.7, %if.end418 ], [ 0, %if.end339 ]
  %rgbSTORAGE.7 = phi i32 [ %rgbSTORAGE.6, %if.end437 ], [ %rgbSTORAGE.6, %land.lhs.true420 ], [ %rgbSTORAGE.6, %if.end418 ], [ %rgbSTORAGE.01125, %if.end339 ]
  %rgbZSIZE.7 = phi i32 [ %rgbZSIZE.6, %if.end437 ], [ %rgbZSIZE.6, %land.lhs.true420 ], [ %rgbZSIZE.6, %if.end418 ], [ %rgbZSIZE.01126, %if.end339 ]
  %rgbXSIZE.7 = phi i32 [ %rgbXSIZE.6, %if.end437 ], [ %rgbXSIZE.6, %land.lhs.true420 ], [ %rgbXSIZE.6, %if.end418 ], [ %rgbXSIZE.01127, %if.end339 ]
  %rgbsize.2 = phi i32 [ %rgbsize.1, %if.end437 ], [ %rgbsize.1, %land.lhs.true420 ], [ 0, %if.end418 ], [ %rgbsize.01128, %if.end339 ]
  %7 = and i32 %buf0.01133, -33554432
  %cmp451 = icmp eq i32 %7, -402653184
  br i1 %cmp451, label %land.lhs.true452, label %if.end510

land.lhs.true452:                                 ; preds = %if.end449
  %add453 = add nuw i32 %call3, 1
  %and454 = and i32 %add453, 254
  %cmp455 = icmp eq i32 %and454, 0
  br i1 %cmp455, label %if.then456, label %if.end510

if.then456:                                       ; preds = %land.lhs.true452
  %shr457 = lshr i32 %or6, 24
  %add459 = add nuw i32 %shr457, %i.01129
  %and460 = and i32 %add459, 255
  %idxprom.i = zext i32 %shr457 to i64
  %arrayidx.i = getelementptr inbounds i32, ptr %call.i.i875, i64 %idxprom.i
  %8 = load i32, ptr %arrayidx.i, align 4, !tbaa !25
  %idxprom.i888 = zext i32 %and460 to i64
  %arrayidx.i889 = getelementptr inbounds i32, ptr %call.i.i, i64 %idxprom.i888
  %9 = load i32, ptr %arrayidx.i889, align 4, !tbaa !25
  %sub468 = sub nsw i32 %i.01129, %9
  %cmp469 = icmp slt i32 %8, %9
  %cmp471 = icmp slt i32 %sub468, 4096
  %or.cond641 = select i1 %cmp469, i1 %cmp471, i1 false
  %cmp475 = icmp sgt i32 %9, 5
  %or.cond946 = and i1 %cmp475, %or.cond641
  br i1 %or.cond946, label %if.end488, label %cleanup

if.end488:                                        ; preds = %if.then456
  %inc477 = add nsw i32 %e8e9count.01132, 1
  %cmp478 = icmp eq i32 %e8e9pos.01131, 0
  %cmp482 = icmp sgt i32 %e8e9pos.01131, %9
  %or.cond947 = or i1 %cmp478, %cmp482
  %spec.select952 = select i1 %or.cond947, i32 %9, i32 %e8e9pos.01131
  %cmp491 = icmp sgt i32 %e8e9count.01132, 2
  %or.cond642 = select i1 %cmp489, i1 %cmp491, i1 false
  %cmp493 = icmp sgt i32 %spec.select952, 5
  %or.cond643 = select i1 %or.cond642, i1 %cmp493, i1 false
  br i1 %or.cond643, label %cleanup.thread, label %cleanup

cleanup.thread:                                   ; preds = %if.end488
  %conv495 = zext i32 %spec.select952 to i64
  %add496 = add i64 %call, -5
  %sub497 = add i64 %add496, %conv495
  br label %cleanup526.sink.split

cleanup:                                          ; preds = %if.then456, %if.end488
  %e8e9count.11025 = phi i32 [ %inc477, %if.end488 ], [ 0, %if.then456 ]
  %e8e9pos.11023 = phi i32 [ %spec.select952, %if.end488 ], [ %e8e9pos.01131, %if.then456 ]
  %e8e9last.11021 = phi i32 [ %i.01129, %if.end488 ], [ %e8e9last.01114, %if.then456 ]
  store i32 %i.01129, ptr %arrayidx.i889, align 4, !tbaa !25
  store i32 %i.01129, ptr %arrayidx.i, align 4, !tbaa !25
  br label %if.end510

if.end510:                                        ; preds = %cleanup, %land.lhs.true452, %if.end449
  %e8e9last.2 = phi i32 [ %e8e9last.11021, %cleanup ], [ %e8e9last.01114, %land.lhs.true452 ], [ %e8e9last.01114, %if.end449 ]
  %e8e9pos.2 = phi i32 [ %e8e9pos.11023, %cleanup ], [ %e8e9pos.01131, %land.lhs.true452 ], [ %e8e9pos.01131, %if.end449 ]
  %e8e9count.2 = phi i32 [ %e8e9count.11025, %cleanup ], [ %e8e9count.01132, %land.lhs.true452 ], [ %e8e9count.01132, %if.end449 ]
  %sub513 = sub nsw i32 %i.01129, %e8e9last.2
  %cmp514 = icmp sgt i32 %sub513, 4096
  %or.cond948 = select i1 %cmp511, i1 %cmp514, i1 false
  br i1 %or.cond948, label %if.then515, label %for.inc

if.then515:                                       ; preds = %if.end510
  %conv516 = sext i32 %e8e9last.2 to i64
  %add517 = add nsw i64 %call, %conv516
  br label %cleanup526.sink.split

for.inc:                                          ; preds = %if.end510
  %inc525 = add nuw nsw i32 %i.01129, 1
  %cmp.not = icmp slt i32 %inc525, %n
  %exitcond.not = icmp eq i32 %inc525, %n
  br i1 %exitcond.not, label %cleanup526, label %for.body, !llvm.loop !241

cleanup526.sink.split:                            ; preds = %if.then50, %if.end201, %if.then211, %if.then221, %if.then231, %if.then317, %if.then332, %if.then432, %if.then441, %if.then515, %cleanup.thread
  %sub497.sink = phi i64 [ %sub497, %cleanup.thread ], [ %add517, %if.then515 ], [ %sub444, %if.then441 ], [ %add434, %if.then432 ], [ %sub335, %if.then332 ], [ %add323, %if.then317 ], [ %sub234, %if.then231 ], [ %sub224, %if.then221 ], [ %sub214, %if.then211 ], [ %add203, %if.end201 ], [ %sub52, %if.then50 ]
  %retval.4.ph = phi i32 [ 8, %cleanup.thread ], [ 0, %if.then515 ], [ 7, %if.then441 ], [ 0, %if.then432 ], [ 6, %if.then332 ], [ 0, %if.then317 ], [ 4, %if.then231 ], [ 3, %if.then221 ], [ 2, %if.then211 ], [ 0, %if.end201 ], [ 1, %if.then50 ]
  %call499 = tail call i32 @fseek(ptr noundef %in, i64 noundef %sub497.sink, i32 noundef 0)
  br label %cleanup526

cleanup526:                                       ; preds = %for.inc, %for.body, %if.end57, %cleanup526.sink.split, %invoke.cont
  %cmp.not1093 = phi i1 [ false, %invoke.cont ], [ %cmp.not1135, %cleanup526.sink.split ], [ %cmp.not, %for.inc ], [ %cmp.not1135, %for.body ], [ %cmp.not1135, %if.end57 ]
  %retval.4 = phi i32 [ undef, %invoke.cont ], [ %retval.4.ph, %cleanup526.sink.split ], [ undef, %for.inc ], [ -1, %for.body ], [ 0, %if.end57 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %pgm_buf) #39
  %10 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i905 = add i32 %10, -1024
  store i32 %add.i.i905, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i906 = icmp sgt i32 %add.i.i905, %11
  br i1 %cmp.i.i906, label %if.then.i.i907, label %_ZN5ArrayIiLi0EED2Ev.exit909

if.then.i.i907:                                   ; preds = %cleanup526
  store i32 %add.i.i905, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIiLi0EED2Ev.exit909

_ZN5ArrayIiLi0EED2Ev.exit909:                     ; preds = %cleanup526, %if.then.i.i907
  %12 = phi i32 [ %11, %cleanup526 ], [ %add.i.i905, %if.then.i.i907 ]
  tail call void @free(ptr noundef %call.i.i875) #39
  %add.i.i910 = add i32 %10, -2048
  store i32 %add.i.i910, ptr @programChecker, align 8, !tbaa !13
  %cmp.i.i911 = icmp sgt i32 %add.i.i910, %12
  br i1 %cmp.i.i911, label %if.then.i.i912, label %_ZN5ArrayIiLi0EED2Ev.exit914

if.then.i.i912:                                   ; preds = %_ZN5ArrayIiLi0EED2Ev.exit909
  store i32 %add.i.i910, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIiLi0EED2Ev.exit914

_ZN5ArrayIiLi0EED2Ev.exit914:                     ; preds = %_ZN5ArrayIiLi0EED2Ev.exit909, %if.then.i.i912
  %spec.select949 = select i1 %cmp.not1093, i32 %retval.4, i32 %type
  tail call void @free(ptr noundef %call.i.i) #39
  ret i32 %spec.select949
}

; Function Attrs: nofree nounwind
declare noundef i64 @ftell(ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare noundef i32 @fseek(ptr nocapture noundef, i64 noundef, i32 noundef) local_unnamed_addr #18

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z14encode_defaultP8_IO_FILES0_i(ptr nocapture noundef %in, ptr nocapture noundef %out, i32 noundef %len) local_unnamed_addr #19 {
entry:
  %tobool.not2 = icmp eq i32 %len, 0
  br i1 %tobool.not2, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %len.addr.03 = phi i32 [ %dec, %while.body ], [ %len, %entry ]
  %dec = add nsw i32 %len.addr.03, -1
  %call = tail call i32 @getc(ptr noundef %in)
  %call1 = tail call i32 @putc(i32 noundef %call, ptr noundef %out)
  %tobool.not = icmp eq i32 %dec, 0
  br i1 %tobool.not, label %while.end, label %while.body, !llvm.loop !242

while.end:                                        ; preds = %while.body, %entry
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z14decode_defaultR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %en) local_unnamed_addr #14 {
entry:
  %call = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  ret i32 %call
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %this) local_unnamed_addr #14 comdat align 2 {
entry:
  %mode = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 1
  %0 = load i32, ptr %mode, align 4, !tbaa !232
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %alt = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 6
  %1 = load ptr, ptr %alt, align 8, !tbaa !239
  %call = tail call i32 @getc(ptr noundef %1)
  br label %return

if.else:                                          ; preds = %entry
  %2 = load i32, ptr @level, align 4, !tbaa !25
  %cmp2 = icmp eq i32 %2, 0
  br i1 %cmp2, label %if.then3, label %for.body.preheader

for.body.preheader:                               ; preds = %if.else
  %call7 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef 0)
  %call7.1 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef 0)
  %call7.2 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef 0)
  %3 = shl i32 %call7, 2
  %4 = shl i32 %call7.1, 1
  %reass.add.2 = add i32 %3, %4
  %add8.2 = add i32 %call7.2, %reass.add.2
  %call7.3 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef 0)
  %call7.4 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef 0)
  %5 = shl i32 %add8.2, 2
  %6 = shl i32 %call7.3, 1
  %reass.add.4 = add i32 %5, %6
  %add8.4 = add i32 %call7.4, %reass.add.4
  %call7.5 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef 0)
  %call7.6 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef 0)
  %7 = shl i32 %add8.4, 2
  %8 = shl i32 %call7.5, 1
  %reass.add.6 = add i32 %7, %8
  %add8.6 = add i32 %call7.6, %reass.add.6
  %call7.7 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef 0)
  %reass.add.7 = shl i32 %add8.6, 1
  %add8.7 = add i32 %call7.7, %reass.add.7
  br label %return

if.then3:                                         ; preds = %if.else
  %archive = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 2
  %9 = load ptr, ptr %archive, align 8, !tbaa !235
  %call4 = tail call i32 @getc(ptr noundef %9)
  br label %return

return:                                           ; preds = %for.body.preheader, %if.then3, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %call4, %if.then3 ], [ %add8.7, %for.body.preheader ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z11encode_jpegP8_IO_FILES0_i(ptr nocapture noundef %in, ptr nocapture noundef %out, i32 noundef %len) local_unnamed_addr #19 {
entry:
  %tobool.not2 = icmp eq i32 %len, 0
  br i1 %tobool.not2, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %len.addr.03 = phi i32 [ %dec, %while.body ], [ %len, %entry ]
  %dec = add nsw i32 %len.addr.03, -1
  %call = tail call i32 @getc(ptr noundef %in)
  %call1 = tail call i32 @putc(i32 noundef %call, ptr noundef %out)
  %tobool.not = icmp eq i32 %dec, 0
  br i1 %tobool.not, label %while.end, label %while.body, !llvm.loop !243

while.end:                                        ; preds = %while.body, %entry
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z11decode_jpegR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %en) local_unnamed_addr #14 {
entry:
  %call = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  ret i32 %call
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z10encode_bmpP8_IO_FILES0_i(ptr nocapture noundef %in, ptr nocapture noundef %out, i32 noundef %len) local_unnamed_addr #19 {
entry:
  %tobool.not2 = icmp eq i32 %len, 0
  br i1 %tobool.not2, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %len.addr.03 = phi i32 [ %dec, %while.body ], [ %len, %entry ]
  %dec = add nsw i32 %len.addr.03, -1
  %call = tail call i32 @getc(ptr noundef %in)
  %call1 = tail call i32 @putc(i32 noundef %call, ptr noundef %out)
  %tobool.not = icmp eq i32 %dec, 0
  br i1 %tobool.not, label %while.end, label %while.body, !llvm.loop !244

while.end:                                        ; preds = %while.body, %entry
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z10decode_bmpR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %en) local_unnamed_addr #14 {
entry:
  %call = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  ret i32 %call
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z10encode_pgmP8_IO_FILES0_i(ptr nocapture noundef %in, ptr nocapture noundef %out, i32 noundef %len) local_unnamed_addr #19 {
entry:
  %tobool.not2 = icmp eq i32 %len, 0
  br i1 %tobool.not2, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %len.addr.03 = phi i32 [ %dec, %while.body ], [ %len, %entry ]
  %dec = add nsw i32 %len.addr.03, -1
  %call = tail call i32 @getc(ptr noundef %in)
  %call1 = tail call i32 @putc(i32 noundef %call, ptr noundef %out)
  %tobool.not = icmp eq i32 %dec, 0
  br i1 %tobool.not, label %while.end, label %while.body, !llvm.loop !245

while.end:                                        ; preds = %while.body, %entry
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z10decode_pgmR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %en) local_unnamed_addr #14 {
entry:
  %call = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  ret i32 %call
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z10encode_rgbP8_IO_FILES0_i(ptr nocapture noundef %in, ptr nocapture noundef %out, i32 noundef %len) local_unnamed_addr #19 {
entry:
  %tobool.not2 = icmp eq i32 %len, 0
  br i1 %tobool.not2, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %len.addr.03 = phi i32 [ %dec, %while.body ], [ %len, %entry ]
  %dec = add nsw i32 %len.addr.03, -1
  %call = tail call i32 @getc(ptr noundef %in)
  %call1 = tail call i32 @putc(i32 noundef %call, ptr noundef %out)
  %tobool.not = icmp eq i32 %dec, 0
  br i1 %tobool.not, label %while.end, label %while.body, !llvm.loop !246

while.end:                                        ; preds = %while.body, %entry
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z10decode_rgbR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %en) local_unnamed_addr #14 {
entry:
  %call = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  ret i32 %call
}

; Function Attrs: uwtable
define dso_local void @_Z10encode_exeP8_IO_FILES0_ii(ptr nocapture noundef %in, ptr nocapture noundef %out, i32 noundef %len, i32 noundef %begin) local_unnamed_addr #5 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i = add nsw i32 %0, 65536
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %1
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i

if.then.i.i.i:                                    ; preds = %entry
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i

_ZN14ProgramChecker5allocEi.exit.i.i:             ; preds = %if.then.i.i.i, %entry
  %call.i.i = tail call noalias dereferenceable_or_null(65536) ptr @calloc(i64 noundef 65536, i64 noundef 1) #41
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.then7.i.i, label %_ZN5ArrayIhLi0EEC2Ei.exit

if.then7.i.i:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %exception.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

_ZN5ArrayIhLi0EEC2Ei.exit:                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %shr = ashr i32 %len, 24
  %shr1 = ashr i32 %len, 16
  %shr2 = ashr i32 %len, 8
  %call = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %out, ptr noundef nonnull @.str.17, i32 noundef %shr, i32 noundef %shr1, i32 noundef %shr2, i32 noundef %len)
  %shr3 = ashr i32 %begin, 24
  %shr4 = ashr i32 %begin, 16
  %shr5 = ashr i32 %begin, 8
  %call7 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %out, ptr noundef nonnull @.str.17, i32 noundef %shr3, i32 noundef %shr4, i32 noundef %shr5, i32 noundef %begin)
  %cmp199 = icmp sgt i32 %len, 0
  br i1 %cmp199, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup22, %_ZN5ArrayIhLi0EEC2Ei.exit
  %2 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = add i32 %2, -65536
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %3 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %3
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN5ArrayIhLi0EED2Ev.exit

if.then.i.i:                                      ; preds = %for.cond.cleanup
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIhLi0EED2Ev.exit

_ZN5ArrayIhLi0EED2Ev.exit:                        ; preds = %for.cond.cleanup, %if.then.i.i
  tail call void @free(ptr noundef %call.i.i) #39
  ret void

for.body:                                         ; preds = %_ZN5ArrayIhLi0EEC2Ei.exit, %for.cond.cleanup22
  %offset.0200 = phi i32 [ %add97, %for.cond.cleanup22 ], [ 0, %_ZN5ArrayIhLi0EEC2Ei.exit ]
  %sub = sub nsw i32 %len, %offset.0200
  %cond.i = tail call i32 @llvm.smin.i32(i32 %sub, i32 65536)
  %conv = sext i32 %cond.i to i64
  %call15 = tail call i64 @fread(ptr noundef nonnull %call.i.i, i64 noundef 1, i64 noundef %conv, ptr noundef %in)
  %conv16 = trunc i64 %call15 to i32
  %cmp17.not = icmp eq i32 %cond.i, %conv16
  br i1 %cmp17.not, label %for.cond20.preheader, label %if.then

for.cond20.preheader:                             ; preds = %for.body
  %cmp21196 = icmp sgt i32 %cond.i, 4
  br i1 %cmp21196, label %for.body23.lr.ph, label %for.cond.cleanup22

for.body23.lr.ph:                                 ; preds = %for.cond20.preheader
  %add = add i32 %offset.0200, %begin
  %4 = zext i32 %cond.i to i64
  br label %for.body23

if.then:                                          ; preds = %for.body
  %exception.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.18, ptr %exception.i, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc unwind label %lpad11

.noexc:                                           ; preds = %if.then
  unreachable

lpad11:                                           ; preds = %if.then
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i140 = add i32 %6, -65536
  store i32 %add.i.i140, ptr @programChecker, align 8, !tbaa !13
  %7 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i141 = icmp sgt i32 %add.i.i140, %7
  br i1 %cmp.i.i141, label %if.then.i.i142, label %_ZN5ArrayIhLi0EED2Ev.exit144

if.then.i.i142:                                   ; preds = %lpad11
  store i32 %add.i.i140, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIhLi0EED2Ev.exit144

_ZN5ArrayIhLi0EED2Ev.exit144:                     ; preds = %lpad11, %if.then.i.i142
  tail call void @free(ptr noundef %call.i.i) #39
  resume { ptr, i32 } %5

for.cond.cleanup22:                               ; preds = %for.inc, %for.cond20.preheader
  %sext = shl i64 %call15, 32
  %conv91 = ashr exact i64 %sext, 32
  %call93 = tail call i64 @fwrite(ptr noundef nonnull %call.i.i, i64 noundef 1, i64 noundef %conv91, ptr noundef %out)
  %add97 = add nuw nsw i32 %offset.0200, 65536
  %cmp = icmp slt i32 %add97, %len
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !247

for.body23:                                       ; preds = %for.body23.lr.ph, %for.inc
  %indvars.iv = phi i64 [ %4, %for.body23.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %indvars201 = trunc i64 %indvars.iv to i32
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %sub24 = add nuw i64 %indvars.iv, 4294967291
  %idxprom.i = and i64 %sub24, 4294967295
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i.i, i64 %idxprom.i
  %8 = load i8, ptr %arrayidx.i, align 1, !tbaa !9
  %9 = and i8 %8, -2
  %switch = icmp eq i8 %9, -24
  br i1 %switch, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body23
  %idxprom.i151 = and i64 %indvars.iv.next, 4294967295
  %arrayidx.i152 = getelementptr inbounds i8, ptr %call.i.i, i64 %idxprom.i151
  %10 = load i8, ptr %arrayidx.i152, align 1, !tbaa !9
  switch i8 %10, label %for.inc [
    i8 0, label %if.then44
    i8 -1, label %if.then44
  ]

if.then44:                                        ; preds = %land.lhs.true, %land.lhs.true
  %conv37 = zext i8 %10 to i32
  %sub45 = add nuw i64 %indvars.iv, 4294967292
  %idxprom.i157 = and i64 %sub45, 4294967295
  %arrayidx.i158 = getelementptr inbounds i8, ptr %call.i.i, i64 %idxprom.i157
  %11 = load i8, ptr %arrayidx.i158, align 1, !tbaa !9
  %conv49 = zext i8 %11 to i32
  %sub50 = add nuw i64 %indvars.iv, 4294967293
  %idxprom.i160 = and i64 %sub50, 4294967295
  %arrayidx.i161 = getelementptr inbounds i8, ptr %call.i.i, i64 %idxprom.i160
  %12 = load i8, ptr %arrayidx.i161, align 1, !tbaa !9
  %conv53 = zext i8 %12 to i32
  %shl = shl nuw nsw i32 %conv53, 8
  %sub54 = add nuw i64 %indvars.iv, 4294967294
  %idxprom.i163 = and i64 %sub54, 4294967295
  %arrayidx.i164 = getelementptr inbounds i8, ptr %call.i.i, i64 %idxprom.i163
  %13 = load i8, ptr %arrayidx.i164, align 1, !tbaa !9
  %conv57 = zext i8 %13 to i32
  %shl58 = shl nuw nsw i32 %conv57, 16
  %shl63 = shl nuw i32 %conv37, 24
  %or = or i32 %shl63, %conv49
  %or59 = or i32 %or, %shl
  %or64 = or i32 %or59, %shl58
  %add65 = add i32 %add, %indvars201
  %add67 = add i32 %add65, %or64
  %shl68 = shl i32 %add67, 7
  %shr70 = ashr i32 %shl68, 31
  %conv71 = trunc i32 %shr70 to i8
  store i8 %conv71, ptr %arrayidx.i152, align 1, !tbaa !9
  %14 = lshr i32 %shl68, 23
  %conv75 = trunc i32 %14 to i8
  store i8 %conv75, ptr %arrayidx.i164, align 1, !tbaa !9
  %15 = lshr i32 %shl68, 15
  %conv80 = trunc i32 %15 to i8
  store i8 %conv80, ptr %arrayidx.i161, align 1, !tbaa !9
  %conv84 = trunc i32 %add67 to i8
  store i8 %conv84, ptr %arrayidx.i158, align 1, !tbaa !9
  br label %for.inc

for.inc:                                          ; preds = %for.body23, %land.lhs.true, %if.then44
  %cmp21 = icmp ugt i64 %indvars.iv, 5
  br i1 %cmp21, label %for.body23, label %for.cond.cleanup22, !llvm.loop !248
}

; Function Attrs: nofree nounwind
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare noundef i64 @fread(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z10decode_exeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %en) local_unnamed_addr #14 {
entry:
  %0 = load i32, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !25
  %1 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %cmp81 = icmp eq i32 %0, %1
  %2 = load i32, ptr @_ZZ10decode_exeR7EncoderE1q, align 4
  %cmp182 = icmp eq i32 %2, 0
  %3 = select i1 %cmp81, i1 %cmp182, i1 false
  br i1 %3, label %while.body, label %while.cond19.preheader

while.cond19.preheader:                           ; preds = %while.body, %entry
  %4 = phi i32 [ %1, %entry ], [ %14, %while.body ]
  %5 = phi i32 [ %0, %entry ], [ %13, %while.body ]
  %.lcssa80 = phi i32 [ %2, %entry ], [ %15, %while.body ]
  %cmp2083 = icmp slt i32 %5, %4
  %cmp2284 = icmp slt i32 %.lcssa80, 5
  %6 = select i1 %cmp2083, i1 %cmp2284, i1 false
  br i1 %6, label %while.body24, label %while.end27

while.body:                                       ; preds = %entry, %while.body
  store i32 0, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !25
  %call = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %shl = shl i32 %call, 24
  store i32 %shl, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %call2 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %shl3 = shl i32 %call2, 16
  %7 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %or = or i32 %7, %shl3
  store i32 %or, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %call4 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %shl5 = shl i32 %call4, 8
  %8 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %or6 = or i32 %8, %shl5
  store i32 %or6, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %call7 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %9 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %or8 = or i32 %9, %call7
  store i32 %or8, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %call9 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %shl10 = shl i32 %call9, 24
  store i32 %shl10, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %call11 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %shl12 = shl i32 %call11, 16
  %10 = load i32, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %or13 = or i32 %10, %shl12
  store i32 %or13, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %call14 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %shl15 = shl i32 %call14, 8
  %11 = load i32, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %or16 = or i32 %11, %shl15
  store i32 %or16, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %call17 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %12 = load i32, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %or18 = or i32 %12, %call17
  store i32 %or18, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %13 = load i32, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !25
  %14 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %cmp = icmp eq i32 %13, %14
  %15 = load i32, ptr @_ZZ10decode_exeR7EncoderE1q, align 4
  %cmp1 = icmp eq i32 %15, 0
  %16 = select i1 %cmp, i1 %cmp1, i1 false
  br i1 %16, label %while.body, label %while.cond19.preheader, !llvm.loop !249

while.body24:                                     ; preds = %while.cond19.preheader, %while.body24
  %17 = load i32, ptr @_ZZ10decode_exeR7EncoderE1c, align 4
  store i32 %17, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 1), align 1
  %call25 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %conv = trunc i32 %call25 to i8
  store i8 %conv, ptr @_ZZ10decode_exeR7EncoderE1c, align 4, !tbaa !9
  %18 = load i32, ptr @_ZZ10decode_exeR7EncoderE1q, align 4, !tbaa !25
  %inc = add nsw i32 %18, 1
  store i32 %inc, ptr @_ZZ10decode_exeR7EncoderE1q, align 4, !tbaa !25
  %19 = load i32, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !25
  %inc26 = add nsw i32 %19, 1
  store i32 %inc26, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !25
  %20 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %cmp20 = icmp slt i32 %inc26, %20
  %cmp22 = icmp slt i32 %18, 4
  %21 = select i1 %cmp20, i1 %cmp22, i1 false
  br i1 %21, label %while.body24, label %while.end27, !llvm.loop !250

while.end27:                                      ; preds = %while.body24, %while.cond19.preheader
  %.lcssa79 = phi i32 [ %.lcssa80, %while.cond19.preheader ], [ %inc, %while.body24 ]
  %.lcssa = phi i32 [ %5, %while.cond19.preheader ], [ %inc26, %while.body24 ]
  %cmp28 = icmp eq i32 %.lcssa79, 5
  br i1 %cmp28, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.end27
  %22 = load i8, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 4), align 4
  %23 = and i8 %22, -2
  %or.cond = icmp eq i8 %23, -24
  br i1 %or.cond, label %land.lhs.true33, label %if.end

land.lhs.true33:                                  ; preds = %land.lhs.true
  %24 = load i8, ptr @_ZZ10decode_exeR7EncoderE1c, align 4
  %conv34 = zext i8 %24 to i32
  %25 = add i8 %24, 1
  %or.cond63 = icmp ult i8 %25, 2
  br i1 %or.cond63, label %land.lhs.true39, label %if.end

land.lhs.true39:                                  ; preds = %land.lhs.true33
  %sub = add nsw i32 %.lcssa, -1
  %sub40 = add nsw i32 %.lcssa, -5
  %xor = xor i32 %sub, %sub40
  %cmp41 = icmp ult i32 %xor, 65536
  br i1 %cmp41, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true39
  %26 = load i8, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 3), align 1, !tbaa !9
  %conv42 = zext i8 %26 to i32
  %27 = load i8, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 2), align 2, !tbaa !9
  %conv43 = zext i8 %27 to i32
  %shl44 = shl nuw nsw i32 %conv43, 8
  %28 = load i8, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 1), align 1, !tbaa !9
  %conv46 = zext i8 %28 to i32
  %shl47 = shl nuw nsw i32 %conv46, 16
  %shl50 = shl nuw i32 %conv34, 24
  %or45 = or i32 %shl50, %conv42
  %or48 = or i32 %or45, %shl44
  %or51 = or i32 %or48, %shl47
  %29 = load i32, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %30 = add i32 %29, %.lcssa
  %sub53 = sub i32 %or51, %30
  %shl54 = shl i32 %sub53, 7
  %conv55 = trunc i32 %sub53 to i8
  store i8 %conv55, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 3), align 1, !tbaa !9
  %31 = lshr i32 %shl54, 15
  %conv57 = trunc i32 %31 to i8
  store i8 %conv57, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 2), align 2, !tbaa !9
  %32 = lshr i32 %shl54, 23
  %conv59 = trunc i32 %32 to i8
  store i8 %conv59, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 1), align 1, !tbaa !9
  %shr60 = ashr i32 %shl54, 31
  %conv61 = trunc i32 %shr60 to i8
  store i8 %conv61, ptr @_ZZ10decode_exeR7EncoderE1c, align 4, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %land.lhs.true33, %land.lhs.true, %if.then, %land.lhs.true39, %while.end27
  %dec = add nsw i32 %.lcssa79, -1
  store i32 %dec, ptr @_ZZ10decode_exeR7EncoderE1q, align 4, !tbaa !25
  %idxprom = sext i32 %dec to i64
  %arrayidx = getelementptr inbounds [5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 %idxprom
  %33 = load i8, ptr %arrayidx, align 1, !tbaa !9
  %conv62 = zext i8 %33 to i32
  ret i32 %conv62
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #26

; Function Attrs: mustprogress uwtable
define dso_local void @_Z6encodeP8_IO_FILES0_i(ptr nocapture noundef %in, ptr nocapture noundef %out, i32 noundef %n) local_unnamed_addr #14 {
entry:
  %call = tail call i64 @ftell(ptr noundef %in)
  %cmp79 = icmp sgt i32 %n, 0
  br i1 %cmp79, label %while.body, label %while.end

while.body:                                       ; preds = %entry, %if.end
  %n.addr.082 = phi i32 [ %sub13, %if.end ], [ %n, %entry ]
  %type.081 = phi i32 [ %call1, %if.end ], [ 0, %entry ]
  %begin.080 = phi i64 [ %call2, %if.end ], [ %call, %entry ]
  %call1 = tail call noundef i32 @_Z6detectP8_IO_FILEi8Filetype(ptr noundef %in, i32 noundef %n.addr.082, i32 noundef %type.081)
  %call2 = tail call i64 @ftell(ptr noundef %in)
  %call3 = tail call i32 @fseek(ptr noundef %in, i64 noundef %begin.080, i32 noundef 0)
  %sub = sub nsw i64 %call2, %begin.080
  %conv = trunc i64 %sub to i32
  %cmp4 = icmp sgt i32 %conv, 0
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %shr = lshr i32 %conv, 24
  %shr5 = lshr i32 %conv, 16
  %shr6 = lshr i32 %conv, 8
  %call7 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %out, ptr noundef nonnull @.str.19, i32 noundef %type.081, i32 noundef %shr, i32 noundef %shr5, i32 noundef %shr6, i32 noundef %conv)
  switch i32 %type.081, label %while.body.i74 [
    i32 1, label %while.body.i
    i32 2, label %while.body.i53.preheader
    i32 3, label %while.body.i53.preheader
    i32 4, label %while.body.i53.preheader
    i32 6, label %while.body.i60
    i32 7, label %while.body.i67
    i32 8, label %sw.bb11
  ]

while.body.i53.preheader:                         ; preds = %if.then, %if.then, %if.then
  br label %while.body.i53

while.body.i:                                     ; preds = %if.then, %while.body.i
  %len.addr.03.i = phi i32 [ %dec.i, %while.body.i ], [ %conv, %if.then ]
  %dec.i = add nsw i32 %len.addr.03.i, -1
  %call.i = tail call i32 @getc(ptr noundef %in)
  %call1.i = tail call i32 @putc(i32 noundef %call.i, ptr noundef %out)
  %tobool.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool.not.i, label %if.end, label %while.body.i, !llvm.loop !243

while.body.i53:                                   ; preds = %while.body.i53.preheader, %while.body.i53
  %len.addr.03.i48 = phi i32 [ %dec.i49, %while.body.i53 ], [ %conv, %while.body.i53.preheader ]
  %dec.i49 = add nsw i32 %len.addr.03.i48, -1
  %call.i50 = tail call i32 @getc(ptr noundef %in)
  %call1.i51 = tail call i32 @putc(i32 noundef %call.i50, ptr noundef %out)
  %tobool.not.i52 = icmp eq i32 %dec.i49, 0
  br i1 %tobool.not.i52, label %if.end, label %while.body.i53, !llvm.loop !244

while.body.i60:                                   ; preds = %if.then, %while.body.i60
  %len.addr.03.i55 = phi i32 [ %dec.i56, %while.body.i60 ], [ %conv, %if.then ]
  %dec.i56 = add nsw i32 %len.addr.03.i55, -1
  %call.i57 = tail call i32 @getc(ptr noundef %in)
  %call1.i58 = tail call i32 @putc(i32 noundef %call.i57, ptr noundef %out)
  %tobool.not.i59 = icmp eq i32 %dec.i56, 0
  br i1 %tobool.not.i59, label %if.end, label %while.body.i60, !llvm.loop !245

while.body.i67:                                   ; preds = %if.then, %while.body.i67
  %len.addr.03.i62 = phi i32 [ %dec.i63, %while.body.i67 ], [ %conv, %if.then ]
  %dec.i63 = add nsw i32 %len.addr.03.i62, -1
  %call.i64 = tail call i32 @getc(ptr noundef %in)
  %call1.i65 = tail call i32 @putc(i32 noundef %call.i64, ptr noundef %out)
  %tobool.not.i66 = icmp eq i32 %dec.i63, 0
  br i1 %tobool.not.i66, label %if.end, label %while.body.i67, !llvm.loop !246

sw.bb11:                                          ; preds = %if.then
  %conv12 = trunc i64 %begin.080 to i32
  tail call void @_Z10encode_exeP8_IO_FILES0_ii(ptr noundef %in, ptr noundef %out, i32 noundef %conv, i32 noundef %conv12)
  br label %if.end

while.body.i74:                                   ; preds = %if.then, %while.body.i74
  %len.addr.03.i69 = phi i32 [ %dec.i70, %while.body.i74 ], [ %conv, %if.then ]
  %dec.i70 = add nsw i32 %len.addr.03.i69, -1
  %call.i71 = tail call i32 @getc(ptr noundef %in)
  %call1.i72 = tail call i32 @putc(i32 noundef %call.i71, ptr noundef %out)
  %tobool.not.i73 = icmp eq i32 %dec.i70, 0
  br i1 %tobool.not.i73, label %if.end, label %while.body.i74, !llvm.loop !242

if.end:                                           ; preds = %while.body.i67, %while.body.i60, %while.body.i53, %while.body.i, %while.body.i74, %sw.bb11, %while.body
  %sub13 = sub nsw i32 %n.addr.082, %conv
  %cmp = icmp sgt i32 %sub13, 0
  br i1 %cmp, label %while.body, label %while.end, !llvm.loop !251

while.end:                                        ; preds = %if.end, %entry
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %en) local_unnamed_addr #14 {
entry:
  %.pr = load i32, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %cmp34 = icmp eq i32 %.pr, 0
  br i1 %cmp34, label %while.body, label %while.end

while.body:                                       ; preds = %entry, %while.body
  %call = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  store i32 %call, ptr @_ZZ6decodeR7EncoderE4type, align 4, !tbaa !215
  %call1 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %shl = shl i32 %call1, 24
  store i32 %shl, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %call2 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %shl3 = shl i32 %call2, 16
  %0 = load i32, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %or = or i32 %0, %shl3
  store i32 %or, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %call4 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %shl5 = shl i32 %call4, 8
  %1 = load i32, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %or6 = or i32 %1, %shl5
  store i32 %or6, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %call7 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %2 = load i32, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %or8 = or i32 %2, %call7
  %cmp9 = icmp slt i32 %or8, 0
  %spec.store.select = select i1 %cmp9, i32 1, i32 %or8
  store i32 %spec.store.select, ptr @_ZZ6decodeR7EncoderE3len, align 4
  %cmp = icmp eq i32 %spec.store.select, 0
  br i1 %cmp, label %while.body, label %while.end, !llvm.loop !252

while.end:                                        ; preds = %while.body, %entry
  %.lcssa = phi i32 [ %.pr, %entry ], [ %spec.store.select, %while.body ]
  %dec = add nsw i32 %.lcssa, -1
  store i32 %dec, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %3 = load i32, ptr @_ZZ6decodeR7EncoderE4type, align 4, !tbaa !215
  switch i32 %3, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb11
    i32 3, label %sw.bb11
    i32 4, label %sw.bb11
    i32 6, label %sw.bb13
    i32 7, label %sw.bb15
    i32 8, label %sw.bb17
  ]

sw.bb:                                            ; preds = %while.end
  %call.i = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  br label %return

sw.bb11:                                          ; preds = %while.end, %while.end, %while.end
  %call.i30 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  br label %return

sw.bb13:                                          ; preds = %while.end
  %call.i31 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  br label %return

sw.bb15:                                          ; preds = %while.end
  %call.i32 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  br label %return

sw.bb17:                                          ; preds = %while.end
  %call18 = tail call noundef i32 @_Z10decode_exeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %en), !range !253
  br label %return

sw.default:                                       ; preds = %while.end
  %call.i33 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %en)
  br label %return

return:                                           ; preds = %sw.default, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb11, %sw.bb
  %retval.0 = phi i32 [ %call.i33, %sw.default ], [ %call18, %sw.bb17 ], [ %call.i32, %sw.bb15 ], [ %call.i31, %sw.bb13 ], [ %call.i30, %sw.bb11 ], [ %call.i, %sw.bb ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z11printStatusi(i32 noundef %n) local_unnamed_addr #19 {
entry:
  %cmp = icmp sgt i32 %n, 0
  %and = and i32 %n, 4095
  %tobool.not = icmp eq i32 %and, 0
  %or.cond = and i1 %cmp, %tobool.not
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %n)
  %0 = load ptr, ptr @stdout, align 8, !tbaa !5
  %call1 = tail call i32 @fflush(ptr noundef %0)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @fflush(ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define dso_local void @_Z8compressPKclR7Encoder(ptr noundef %filename, i64 noundef %filesize, ptr noundef nonnull align 8 dereferenceable(40) %en) local_unnamed_addr #14 {
entry:
  %call = tail call noalias ptr @fopen(ptr noundef %filename, ptr noundef nonnull @.str.21)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @perror(ptr noundef %filename) #45
  %exception.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %exception.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end:                                           ; preds = %entry
  %archive.i = getelementptr inbounds %class.Encoder, ptr %en, i64 0, i32 2
  %0 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call.i = tail call i64 @ftell(ptr noundef %0)
  %call.i115 = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %filename, i32 noundef 47) #44
  %tobool.not.i = icmp eq ptr %call.i115, null
  %add.ptr.i = getelementptr inbounds i8, ptr %call.i115, i64 1
  %cond.i = select i1 %tobool.not.i, ptr %filename, ptr %add.ptr.i
  %call3 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.22, ptr noundef %cond.i, i64 noundef %filesize)
  %1 = load i32, ptr @level, align 4, !tbaa !25
  %mul = shl i32 4194304, %1
  %cmp966 = icmp sgt i64 %filesize, 0
  br i1 %cmp966, label %for.body.lr.ph, label %if.end58

for.body.lr.ph:                                   ; preds = %if.end
  %conv = sext i32 %mul to i64
  %alt.i = getelementptr inbounds %class.Encoder, ptr %en, i64 0, i32 6
  %x1.i484 = getelementptr inbounds %class.Encoder, ptr %en, i64 0, i32 3
  %x2.i485 = getelementptr inbounds %class.Encoder, ptr %en, i64 0, i32 4
  %mode.i494 = getelementptr inbounds %class.Encoder, ptr %en, i64 0, i32 1
  %x.i496 = getelementptr inbounds %class.Encoder, ptr %en, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end49
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end49 ]
  %filesize.addr.0969 = phi i64 [ %filesize, %for.body.lr.ph ], [ %sub, %if.end49 ]
  %cmp4 = icmp slt i64 %filesize.addr.0969, %conv
  %conv6 = trunc i64 %filesize.addr.0969 to i32
  %spec.select = select i1 %cmp4, i32 %conv6, i32 %mul
  %call8 = tail call noalias ptr @tmpfile()
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.then10, label %if.end7.split

if.end7.split:                                    ; preds = %for.body
  %call12113 = tail call i64 @ftell(ptr noundef nonnull %call)
  tail call void @_Z6encodeP8_IO_FILES0_i(ptr noundef nonnull %call, ptr noundef nonnull %call8, i32 noundef %spec.select)
  tail call void @rewind(ptr noundef nonnull %call8)
  store ptr %call8, ptr %alt.i, align 8, !tbaa !239
  %call13 = tail call i32 @fseek(ptr noundef nonnull %call, i64 noundef %call12113, i32 noundef 0)
  %conv15 = sext i32 %spec.select to i64
  %cmp16951 = icmp sgt i32 %spec.select, 0
  br i1 %cmp16951, label %for.body17, label %for.end

if.then10:                                        ; preds = %for.body
  tail call void @perror(ptr noundef nonnull @.str.23) #45
  %exception.i116 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %exception.i116, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i116, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

for.body17:                                       ; preds = %if.end7.split, %for.inc
  %j.0952 = phi i64 [ %inc, %for.inc ], [ 0, %if.end7.split ]
  %call18 = tail call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %call19 = tail call i32 @getc(ptr noundef nonnull %call)
  %cmp20.not = icmp eq i32 %call18, %call19
  br i1 %cmp20.not, label %for.inc, label %for.end

for.inc:                                          ; preds = %for.body17
  %inc = add nuw nsw i64 %j.0952, 1
  %exitcond.not = icmp eq i64 %inc, %conv15
  br i1 %exitcond.not, label %lor.lhs.false, label %for.body17, !llvm.loop !254

for.end:                                          ; preds = %for.body17, %if.end7.split
  %j.0.lcssa = phi i64 [ 0, %if.end7.split ], [ %j.0952, %for.body17 ]
  %c1.1 = phi i32 [ 0, %if.end7.split ], [ %call18, %for.body17 ]
  %c2.1 = phi i32 [ 0, %if.end7.split ], [ %call19, %for.body17 ]
  %cmp24.not = icmp eq i64 %j.0.lcssa, %conv15
  br i1 %cmp24.not, label %lor.lhs.false, label %if.then27

lor.lhs.false:                                    ; preds = %for.inc, %for.end
  %c2.1982 = phi i32 [ %c2.1, %for.end ], [ %call18, %for.inc ]
  %c1.1980 = phi i32 [ %c1.1, %for.end ], [ %call18, %for.inc ]
  %j.0.lcssa978 = phi i64 [ %j.0.lcssa, %for.end ], [ %conv15, %for.inc ]
  %call25 = tail call i32 @getc(ptr noundef nonnull %call8)
  %cmp26.not = icmp eq i32 %call25, -1
  br i1 %cmp26.not, label %if.else, label %if.then27

if.then27:                                        ; preds = %lor.lhs.false, %for.end
  %c2.1981 = phi i32 [ %c2.1982, %lor.lhs.false ], [ %c2.1, %for.end ]
  %c1.1979 = phi i32 [ %c1.1980, %lor.lhs.false ], [ %c1.1, %for.end ]
  %j.0.lcssa977 = phi i64 [ %j.0.lcssa978, %lor.lhs.false ], [ %j.0.lcssa, %for.end ]
  %add = add nsw i64 %j.0.lcssa977, %indvars.iv
  %call29 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.24, i64 noundef %add, i32 noundef %c2.1981, i32 noundef %c1.1979)
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %en, i32 noundef 0)
  %shr = ashr i32 %spec.select, 24
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %en, i32 noundef %shr)
  %shr30 = ashr i32 %spec.select, 16
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %en, i32 noundef %shr30)
  %shr31 = ashr i32 %spec.select, 8
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %en, i32 noundef %shr31)
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %en, i32 noundef %spec.select)
  %call32 = tail call i32 @fseek(ptr noundef nonnull %call, i64 noundef %call12113, i32 noundef 0)
  br i1 %cmp16951, label %for.body37.preheader, label %if.end49

for.body37.preheader:                             ; preds = %if.then27
  %2 = trunc i64 %indvars.iv to i32
  br label %for.body37

for.body37:                                       ; preds = %for.body37.preheader, %_ZN7Encoder8compressEi.exit
  %j33.0961 = phi i32 [ %inc41, %_ZN7Encoder8compressEi.exit ], [ 0, %for.body37.preheader ]
  %add38 = add nsw i32 %j33.0961, %2
  %cmp.i = icmp sgt i32 %add38, 0
  %and.i = and i32 %j33.0961, 4095
  %tobool.not.i119 = icmp eq i32 %and.i, 0
  %or.cond.i = and i1 %cmp.i, %tobool.not.i119
  br i1 %or.cond.i, label %if.then.i, label %_Z11printStatusi.exit

if.then.i:                                        ; preds = %for.body37
  %call.i120 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %add38)
  %3 = load ptr, ptr @stdout, align 8, !tbaa !5
  %call1.i = tail call i32 @fflush(ptr noundef %3)
  br label %_Z11printStatusi.exit

_Z11printStatusi.exit:                            ; preds = %for.body37, %if.then.i
  %call39 = tail call i32 @getc(ptr noundef nonnull %call)
  %4 = load i32, ptr @level, align 4, !tbaa !25
  %cmp.i121 = icmp eq i32 %4, 0
  br i1 %cmp.i121, label %if.then.i125, label %for.body.preheader.i

for.body.preheader.i:                             ; preds = %_Z11printStatusi.exit
  %shr7.i = lshr i32 %call39, 7
  %and.i122 = and i32 %shr7.i, 1
  %5 = load i32, ptr %en, align 8, !tbaa !230
  %cmp.i481 = icmp slt i32 %5, 2048
  %conv.i482 = zext i1 %cmp.i481 to i32
  %add.i483 = add nsw i32 %5, %conv.i482
  %6 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %7 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %sub.i486 = sub i32 %7, %6
  %shr.i487 = lshr i32 %sub.i486, 12
  %mul.i488 = mul i32 %shr.i487, %add.i483
  %add3.i489 = add i32 %mul.i488, %6
  %and.i490 = and i32 %sub.i486, 4095
  %mul7.i491 = mul i32 %and.i490, %add.i483
  %shr8.i492 = lshr i32 %mul7.i491, 12
  %add9.i493 = add i32 %add3.i489, %shr8.i492
  %8 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp10.i495 = icmp eq i32 %8, 1
  %9 = load i32, ptr %x.i496, align 8
  %cmp11.i497 = icmp ule i32 %9, %add9.i493
  %conv12.i498 = zext i1 %cmp11.i497 to i32
  %storemerge.i499 = select i1 %cmp10.i495, i32 %conv12.i498, i32 %and.i122
  store i32 %storemerge.i499, ptr @y, align 4, !tbaa !25
  %tobool.not.i500 = icmp eq i32 %storemerge.i499, 0
  br i1 %tobool.not.i500, label %cond.false.i503, label %cond.true.i501

cond.true.i501:                                   ; preds = %for.body.preheader.i
  store i32 %add9.i493, ptr %x2.i485, align 4, !tbaa !237
  br label %cond.end.i506

cond.false.i503:                                  ; preds = %for.body.preheader.i
  %add14.i502 = add i32 %add9.i493, 1
  store i32 %add14.i502, ptr %x1.i484, align 8, !tbaa !236
  br label %cond.end.i506

cond.end.i506:                                    ; preds = %cond.false.i503, %cond.true.i501
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %en)
  %10 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %11 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %xor49.i504 = xor i32 %11, %10
  %cmp2050.i505 = icmp ult i32 %xor49.i504, 16777216
  br i1 %cmp2050.i505, label %while.body.i510, label %_ZN7Encoder4codeEi.exit532

while.body.i510:                                  ; preds = %cond.end.i506, %if.end43.i531
  %12 = phi i32 [ %22, %if.end43.i531 ], [ %10, %cond.end.i506 ]
  %13 = phi i32 [ %21, %if.end43.i531 ], [ %11, %cond.end.i506 ]
  %14 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp22.i509 = icmp eq i32 %14, 0
  br i1 %cmp22.i509, label %if.then23.i516, label %if.end27.i521

if.then23.i516:                                   ; preds = %while.body.i510
  %shr25.i511 = lshr i32 %13, 24
  %15 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call26.i512 = tail call i32 @putc(i32 noundef %shr25.i511, ptr noundef %15)
  %.pre.i513 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre51.i514 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %.pre52.i515 = load i32, ptr %mode.i494, align 4, !tbaa !232
  br label %if.end27.i521

if.end27.i521:                                    ; preds = %if.then23.i516, %while.body.i510
  %16 = phi i32 [ %.pre52.i515, %if.then23.i516 ], [ %14, %while.body.i510 ]
  %17 = phi i32 [ %.pre51.i514, %if.then23.i516 ], [ %13, %while.body.i510 ]
  %18 = phi i32 [ %.pre.i513, %if.then23.i516 ], [ %12, %while.body.i510 ]
  %shl.i517 = shl i32 %18, 8
  store i32 %shl.i517, ptr %x1.i484, align 8, !tbaa !236
  %shl30.i518 = shl i32 %17, 8
  %add31.i519 = or i32 %shl30.i518, 255
  store i32 %add31.i519, ptr %x2.i485, align 4, !tbaa !237
  %cmp34.i520 = icmp eq i32 %16, 1
  br i1 %cmp34.i520, label %if.then35.i528, label %if.end43.i531

if.then35.i528:                                   ; preds = %if.end27.i521
  %19 = load i32, ptr %x.i496, align 8, !tbaa !238
  %shl37.i522 = shl i32 %19, 8
  %20 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call39.i523 = tail call i32 @getc(ptr noundef %20)
  %and40.i524 = and i32 %call39.i523, 255
  %add41.i525 = or i32 %and40.i524, %shl37.i522
  store i32 %add41.i525, ptr %x.i496, align 8, !tbaa !238
  %.pre53.i526 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre54.i527 = load i32, ptr %x2.i485, align 4, !tbaa !237
  br label %if.end43.i531

if.end43.i531:                                    ; preds = %if.then35.i528, %if.end27.i521
  %21 = phi i32 [ %.pre54.i527, %if.then35.i528 ], [ %add31.i519, %if.end27.i521 ]
  %22 = phi i32 [ %.pre53.i526, %if.then35.i528 ], [ %shl.i517, %if.end27.i521 ]
  %xor.i529 = xor i32 %22, %21
  %cmp20.i530 = icmp ult i32 %xor.i529, 16777216
  br i1 %cmp20.i530, label %while.body.i510, label %_ZN7Encoder4codeEi.exit532, !llvm.loop !255

_ZN7Encoder4codeEi.exit532:                       ; preds = %if.end43.i531, %cond.end.i506
  %23 = phi i32 [ %11, %cond.end.i506 ], [ %21, %if.end43.i531 ]
  %24 = phi i32 [ %10, %cond.end.i506 ], [ %22, %if.end43.i531 ]
  %shr7.1.i = lshr i32 %call39, 6
  %and.1.i = and i32 %shr7.1.i, 1
  %25 = load i32, ptr %en, align 8, !tbaa !230
  %cmp.i429 = icmp slt i32 %25, 2048
  %conv.i430 = zext i1 %cmp.i429 to i32
  %add.i431 = add nsw i32 %25, %conv.i430
  %sub.i434 = sub i32 %23, %24
  %shr.i435 = lshr i32 %sub.i434, 12
  %mul.i436 = mul i32 %shr.i435, %add.i431
  %add3.i437 = add i32 %mul.i436, %24
  %and.i438 = and i32 %sub.i434, 4095
  %mul7.i439 = mul i32 %and.i438, %add.i431
  %shr8.i440 = lshr i32 %mul7.i439, 12
  %add9.i441 = add i32 %add3.i437, %shr8.i440
  %26 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp10.i443 = icmp eq i32 %26, 1
  %27 = load i32, ptr %x.i496, align 8
  %cmp11.i445 = icmp ule i32 %27, %add9.i441
  %conv12.i446 = zext i1 %cmp11.i445 to i32
  %storemerge.i447 = select i1 %cmp10.i443, i32 %conv12.i446, i32 %and.1.i
  store i32 %storemerge.i447, ptr @y, align 4, !tbaa !25
  %tobool.not.i448 = icmp eq i32 %storemerge.i447, 0
  br i1 %tobool.not.i448, label %cond.false.i451, label %cond.true.i449

cond.true.i449:                                   ; preds = %_ZN7Encoder4codeEi.exit532
  store i32 %add9.i441, ptr %x2.i485, align 4, !tbaa !237
  br label %cond.end.i454

cond.false.i451:                                  ; preds = %_ZN7Encoder4codeEi.exit532
  %add14.i450 = add i32 %add9.i441, 1
  store i32 %add14.i450, ptr %x1.i484, align 8, !tbaa !236
  br label %cond.end.i454

cond.end.i454:                                    ; preds = %cond.false.i451, %cond.true.i449
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %en)
  %28 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %29 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %xor49.i452 = xor i32 %29, %28
  %cmp2050.i453 = icmp ult i32 %xor49.i452, 16777216
  br i1 %cmp2050.i453, label %while.body.i458, label %_ZN7Encoder4codeEi.exit480

while.body.i458:                                  ; preds = %cond.end.i454, %if.end43.i479
  %30 = phi i32 [ %40, %if.end43.i479 ], [ %28, %cond.end.i454 ]
  %31 = phi i32 [ %39, %if.end43.i479 ], [ %29, %cond.end.i454 ]
  %32 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp22.i457 = icmp eq i32 %32, 0
  br i1 %cmp22.i457, label %if.then23.i464, label %if.end27.i469

if.then23.i464:                                   ; preds = %while.body.i458
  %shr25.i459 = lshr i32 %31, 24
  %33 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call26.i460 = tail call i32 @putc(i32 noundef %shr25.i459, ptr noundef %33)
  %.pre.i461 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre51.i462 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %.pre52.i463 = load i32, ptr %mode.i494, align 4, !tbaa !232
  br label %if.end27.i469

if.end27.i469:                                    ; preds = %if.then23.i464, %while.body.i458
  %34 = phi i32 [ %.pre52.i463, %if.then23.i464 ], [ %32, %while.body.i458 ]
  %35 = phi i32 [ %.pre51.i462, %if.then23.i464 ], [ %31, %while.body.i458 ]
  %36 = phi i32 [ %.pre.i461, %if.then23.i464 ], [ %30, %while.body.i458 ]
  %shl.i465 = shl i32 %36, 8
  store i32 %shl.i465, ptr %x1.i484, align 8, !tbaa !236
  %shl30.i466 = shl i32 %35, 8
  %add31.i467 = or i32 %shl30.i466, 255
  store i32 %add31.i467, ptr %x2.i485, align 4, !tbaa !237
  %cmp34.i468 = icmp eq i32 %34, 1
  br i1 %cmp34.i468, label %if.then35.i476, label %if.end43.i479

if.then35.i476:                                   ; preds = %if.end27.i469
  %37 = load i32, ptr %x.i496, align 8, !tbaa !238
  %shl37.i470 = shl i32 %37, 8
  %38 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call39.i471 = tail call i32 @getc(ptr noundef %38)
  %and40.i472 = and i32 %call39.i471, 255
  %add41.i473 = or i32 %and40.i472, %shl37.i470
  store i32 %add41.i473, ptr %x.i496, align 8, !tbaa !238
  %.pre53.i474 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre54.i475 = load i32, ptr %x2.i485, align 4, !tbaa !237
  br label %if.end43.i479

if.end43.i479:                                    ; preds = %if.then35.i476, %if.end27.i469
  %39 = phi i32 [ %.pre54.i475, %if.then35.i476 ], [ %add31.i467, %if.end27.i469 ]
  %40 = phi i32 [ %.pre53.i474, %if.then35.i476 ], [ %shl.i465, %if.end27.i469 ]
  %xor.i477 = xor i32 %40, %39
  %cmp20.i478 = icmp ult i32 %xor.i477, 16777216
  br i1 %cmp20.i478, label %while.body.i458, label %_ZN7Encoder4codeEi.exit480, !llvm.loop !255

_ZN7Encoder4codeEi.exit480:                       ; preds = %if.end43.i479, %cond.end.i454
  %41 = phi i32 [ %29, %cond.end.i454 ], [ %39, %if.end43.i479 ]
  %42 = phi i32 [ %28, %cond.end.i454 ], [ %40, %if.end43.i479 ]
  %shr7.2.i = lshr i32 %call39, 5
  %and.2.i = and i32 %shr7.2.i, 1
  %43 = load i32, ptr %en, align 8, !tbaa !230
  %cmp.i377 = icmp slt i32 %43, 2048
  %conv.i378 = zext i1 %cmp.i377 to i32
  %add.i379 = add nsw i32 %43, %conv.i378
  %sub.i382 = sub i32 %41, %42
  %shr.i383 = lshr i32 %sub.i382, 12
  %mul.i384 = mul i32 %shr.i383, %add.i379
  %add3.i385 = add i32 %mul.i384, %42
  %and.i386 = and i32 %sub.i382, 4095
  %mul7.i387 = mul i32 %and.i386, %add.i379
  %shr8.i388 = lshr i32 %mul7.i387, 12
  %add9.i389 = add i32 %add3.i385, %shr8.i388
  %44 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp10.i391 = icmp eq i32 %44, 1
  %45 = load i32, ptr %x.i496, align 8
  %cmp11.i393 = icmp ule i32 %45, %add9.i389
  %conv12.i394 = zext i1 %cmp11.i393 to i32
  %storemerge.i395 = select i1 %cmp10.i391, i32 %conv12.i394, i32 %and.2.i
  store i32 %storemerge.i395, ptr @y, align 4, !tbaa !25
  %tobool.not.i396 = icmp eq i32 %storemerge.i395, 0
  br i1 %tobool.not.i396, label %cond.false.i399, label %cond.true.i397

cond.true.i397:                                   ; preds = %_ZN7Encoder4codeEi.exit480
  store i32 %add9.i389, ptr %x2.i485, align 4, !tbaa !237
  br label %cond.end.i402

cond.false.i399:                                  ; preds = %_ZN7Encoder4codeEi.exit480
  %add14.i398 = add i32 %add9.i389, 1
  store i32 %add14.i398, ptr %x1.i484, align 8, !tbaa !236
  br label %cond.end.i402

cond.end.i402:                                    ; preds = %cond.false.i399, %cond.true.i397
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %en)
  %46 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %47 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %xor49.i400 = xor i32 %47, %46
  %cmp2050.i401 = icmp ult i32 %xor49.i400, 16777216
  br i1 %cmp2050.i401, label %while.body.i406, label %_ZN7Encoder4codeEi.exit428

while.body.i406:                                  ; preds = %cond.end.i402, %if.end43.i427
  %48 = phi i32 [ %58, %if.end43.i427 ], [ %46, %cond.end.i402 ]
  %49 = phi i32 [ %57, %if.end43.i427 ], [ %47, %cond.end.i402 ]
  %50 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp22.i405 = icmp eq i32 %50, 0
  br i1 %cmp22.i405, label %if.then23.i412, label %if.end27.i417

if.then23.i412:                                   ; preds = %while.body.i406
  %shr25.i407 = lshr i32 %49, 24
  %51 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call26.i408 = tail call i32 @putc(i32 noundef %shr25.i407, ptr noundef %51)
  %.pre.i409 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre51.i410 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %.pre52.i411 = load i32, ptr %mode.i494, align 4, !tbaa !232
  br label %if.end27.i417

if.end27.i417:                                    ; preds = %if.then23.i412, %while.body.i406
  %52 = phi i32 [ %.pre52.i411, %if.then23.i412 ], [ %50, %while.body.i406 ]
  %53 = phi i32 [ %.pre51.i410, %if.then23.i412 ], [ %49, %while.body.i406 ]
  %54 = phi i32 [ %.pre.i409, %if.then23.i412 ], [ %48, %while.body.i406 ]
  %shl.i413 = shl i32 %54, 8
  store i32 %shl.i413, ptr %x1.i484, align 8, !tbaa !236
  %shl30.i414 = shl i32 %53, 8
  %add31.i415 = or i32 %shl30.i414, 255
  store i32 %add31.i415, ptr %x2.i485, align 4, !tbaa !237
  %cmp34.i416 = icmp eq i32 %52, 1
  br i1 %cmp34.i416, label %if.then35.i424, label %if.end43.i427

if.then35.i424:                                   ; preds = %if.end27.i417
  %55 = load i32, ptr %x.i496, align 8, !tbaa !238
  %shl37.i418 = shl i32 %55, 8
  %56 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call39.i419 = tail call i32 @getc(ptr noundef %56)
  %and40.i420 = and i32 %call39.i419, 255
  %add41.i421 = or i32 %and40.i420, %shl37.i418
  store i32 %add41.i421, ptr %x.i496, align 8, !tbaa !238
  %.pre53.i422 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre54.i423 = load i32, ptr %x2.i485, align 4, !tbaa !237
  br label %if.end43.i427

if.end43.i427:                                    ; preds = %if.then35.i424, %if.end27.i417
  %57 = phi i32 [ %.pre54.i423, %if.then35.i424 ], [ %add31.i415, %if.end27.i417 ]
  %58 = phi i32 [ %.pre53.i422, %if.then35.i424 ], [ %shl.i413, %if.end27.i417 ]
  %xor.i425 = xor i32 %58, %57
  %cmp20.i426 = icmp ult i32 %xor.i425, 16777216
  br i1 %cmp20.i426, label %while.body.i406, label %_ZN7Encoder4codeEi.exit428, !llvm.loop !255

_ZN7Encoder4codeEi.exit428:                       ; preds = %if.end43.i427, %cond.end.i402
  %59 = phi i32 [ %47, %cond.end.i402 ], [ %57, %if.end43.i427 ]
  %60 = phi i32 [ %46, %cond.end.i402 ], [ %58, %if.end43.i427 ]
  %shr7.3.i = lshr i32 %call39, 4
  %and.3.i = and i32 %shr7.3.i, 1
  %61 = load i32, ptr %en, align 8, !tbaa !230
  %cmp.i325 = icmp slt i32 %61, 2048
  %conv.i326 = zext i1 %cmp.i325 to i32
  %add.i327 = add nsw i32 %61, %conv.i326
  %sub.i330 = sub i32 %59, %60
  %shr.i331 = lshr i32 %sub.i330, 12
  %mul.i332 = mul i32 %shr.i331, %add.i327
  %add3.i333 = add i32 %mul.i332, %60
  %and.i334 = and i32 %sub.i330, 4095
  %mul7.i335 = mul i32 %and.i334, %add.i327
  %shr8.i336 = lshr i32 %mul7.i335, 12
  %add9.i337 = add i32 %add3.i333, %shr8.i336
  %62 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp10.i339 = icmp eq i32 %62, 1
  %63 = load i32, ptr %x.i496, align 8
  %cmp11.i341 = icmp ule i32 %63, %add9.i337
  %conv12.i342 = zext i1 %cmp11.i341 to i32
  %storemerge.i343 = select i1 %cmp10.i339, i32 %conv12.i342, i32 %and.3.i
  store i32 %storemerge.i343, ptr @y, align 4, !tbaa !25
  %tobool.not.i344 = icmp eq i32 %storemerge.i343, 0
  br i1 %tobool.not.i344, label %cond.false.i347, label %cond.true.i345

cond.true.i345:                                   ; preds = %_ZN7Encoder4codeEi.exit428
  store i32 %add9.i337, ptr %x2.i485, align 4, !tbaa !237
  br label %cond.end.i350

cond.false.i347:                                  ; preds = %_ZN7Encoder4codeEi.exit428
  %add14.i346 = add i32 %add9.i337, 1
  store i32 %add14.i346, ptr %x1.i484, align 8, !tbaa !236
  br label %cond.end.i350

cond.end.i350:                                    ; preds = %cond.false.i347, %cond.true.i345
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %en)
  %64 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %65 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %xor49.i348 = xor i32 %65, %64
  %cmp2050.i349 = icmp ult i32 %xor49.i348, 16777216
  br i1 %cmp2050.i349, label %while.body.i354, label %_ZN7Encoder4codeEi.exit376

while.body.i354:                                  ; preds = %cond.end.i350, %if.end43.i375
  %66 = phi i32 [ %76, %if.end43.i375 ], [ %64, %cond.end.i350 ]
  %67 = phi i32 [ %75, %if.end43.i375 ], [ %65, %cond.end.i350 ]
  %68 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp22.i353 = icmp eq i32 %68, 0
  br i1 %cmp22.i353, label %if.then23.i360, label %if.end27.i365

if.then23.i360:                                   ; preds = %while.body.i354
  %shr25.i355 = lshr i32 %67, 24
  %69 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call26.i356 = tail call i32 @putc(i32 noundef %shr25.i355, ptr noundef %69)
  %.pre.i357 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre51.i358 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %.pre52.i359 = load i32, ptr %mode.i494, align 4, !tbaa !232
  br label %if.end27.i365

if.end27.i365:                                    ; preds = %if.then23.i360, %while.body.i354
  %70 = phi i32 [ %.pre52.i359, %if.then23.i360 ], [ %68, %while.body.i354 ]
  %71 = phi i32 [ %.pre51.i358, %if.then23.i360 ], [ %67, %while.body.i354 ]
  %72 = phi i32 [ %.pre.i357, %if.then23.i360 ], [ %66, %while.body.i354 ]
  %shl.i361 = shl i32 %72, 8
  store i32 %shl.i361, ptr %x1.i484, align 8, !tbaa !236
  %shl30.i362 = shl i32 %71, 8
  %add31.i363 = or i32 %shl30.i362, 255
  store i32 %add31.i363, ptr %x2.i485, align 4, !tbaa !237
  %cmp34.i364 = icmp eq i32 %70, 1
  br i1 %cmp34.i364, label %if.then35.i372, label %if.end43.i375

if.then35.i372:                                   ; preds = %if.end27.i365
  %73 = load i32, ptr %x.i496, align 8, !tbaa !238
  %shl37.i366 = shl i32 %73, 8
  %74 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call39.i367 = tail call i32 @getc(ptr noundef %74)
  %and40.i368 = and i32 %call39.i367, 255
  %add41.i369 = or i32 %and40.i368, %shl37.i366
  store i32 %add41.i369, ptr %x.i496, align 8, !tbaa !238
  %.pre53.i370 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre54.i371 = load i32, ptr %x2.i485, align 4, !tbaa !237
  br label %if.end43.i375

if.end43.i375:                                    ; preds = %if.then35.i372, %if.end27.i365
  %75 = phi i32 [ %.pre54.i371, %if.then35.i372 ], [ %add31.i363, %if.end27.i365 ]
  %76 = phi i32 [ %.pre53.i370, %if.then35.i372 ], [ %shl.i361, %if.end27.i365 ]
  %xor.i373 = xor i32 %76, %75
  %cmp20.i374 = icmp ult i32 %xor.i373, 16777216
  br i1 %cmp20.i374, label %while.body.i354, label %_ZN7Encoder4codeEi.exit376, !llvm.loop !255

_ZN7Encoder4codeEi.exit376:                       ; preds = %if.end43.i375, %cond.end.i350
  %77 = phi i32 [ %65, %cond.end.i350 ], [ %75, %if.end43.i375 ]
  %78 = phi i32 [ %64, %cond.end.i350 ], [ %76, %if.end43.i375 ]
  %shr7.4.i = lshr i32 %call39, 3
  %and.4.i = and i32 %shr7.4.i, 1
  %79 = load i32, ptr %en, align 8, !tbaa !230
  %cmp.i273 = icmp slt i32 %79, 2048
  %conv.i274 = zext i1 %cmp.i273 to i32
  %add.i275 = add nsw i32 %79, %conv.i274
  %sub.i278 = sub i32 %77, %78
  %shr.i279 = lshr i32 %sub.i278, 12
  %mul.i280 = mul i32 %shr.i279, %add.i275
  %add3.i281 = add i32 %mul.i280, %78
  %and.i282 = and i32 %sub.i278, 4095
  %mul7.i283 = mul i32 %and.i282, %add.i275
  %shr8.i284 = lshr i32 %mul7.i283, 12
  %add9.i285 = add i32 %add3.i281, %shr8.i284
  %80 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp10.i287 = icmp eq i32 %80, 1
  %81 = load i32, ptr %x.i496, align 8
  %cmp11.i289 = icmp ule i32 %81, %add9.i285
  %conv12.i290 = zext i1 %cmp11.i289 to i32
  %storemerge.i291 = select i1 %cmp10.i287, i32 %conv12.i290, i32 %and.4.i
  store i32 %storemerge.i291, ptr @y, align 4, !tbaa !25
  %tobool.not.i292 = icmp eq i32 %storemerge.i291, 0
  br i1 %tobool.not.i292, label %cond.false.i295, label %cond.true.i293

cond.true.i293:                                   ; preds = %_ZN7Encoder4codeEi.exit376
  store i32 %add9.i285, ptr %x2.i485, align 4, !tbaa !237
  br label %cond.end.i298

cond.false.i295:                                  ; preds = %_ZN7Encoder4codeEi.exit376
  %add14.i294 = add i32 %add9.i285, 1
  store i32 %add14.i294, ptr %x1.i484, align 8, !tbaa !236
  br label %cond.end.i298

cond.end.i298:                                    ; preds = %cond.false.i295, %cond.true.i293
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %en)
  %82 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %83 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %xor49.i296 = xor i32 %83, %82
  %cmp2050.i297 = icmp ult i32 %xor49.i296, 16777216
  br i1 %cmp2050.i297, label %while.body.i302, label %_ZN7Encoder4codeEi.exit324

while.body.i302:                                  ; preds = %cond.end.i298, %if.end43.i323
  %84 = phi i32 [ %94, %if.end43.i323 ], [ %82, %cond.end.i298 ]
  %85 = phi i32 [ %93, %if.end43.i323 ], [ %83, %cond.end.i298 ]
  %86 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp22.i301 = icmp eq i32 %86, 0
  br i1 %cmp22.i301, label %if.then23.i308, label %if.end27.i313

if.then23.i308:                                   ; preds = %while.body.i302
  %shr25.i303 = lshr i32 %85, 24
  %87 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call26.i304 = tail call i32 @putc(i32 noundef %shr25.i303, ptr noundef %87)
  %.pre.i305 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre51.i306 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %.pre52.i307 = load i32, ptr %mode.i494, align 4, !tbaa !232
  br label %if.end27.i313

if.end27.i313:                                    ; preds = %if.then23.i308, %while.body.i302
  %88 = phi i32 [ %.pre52.i307, %if.then23.i308 ], [ %86, %while.body.i302 ]
  %89 = phi i32 [ %.pre51.i306, %if.then23.i308 ], [ %85, %while.body.i302 ]
  %90 = phi i32 [ %.pre.i305, %if.then23.i308 ], [ %84, %while.body.i302 ]
  %shl.i309 = shl i32 %90, 8
  store i32 %shl.i309, ptr %x1.i484, align 8, !tbaa !236
  %shl30.i310 = shl i32 %89, 8
  %add31.i311 = or i32 %shl30.i310, 255
  store i32 %add31.i311, ptr %x2.i485, align 4, !tbaa !237
  %cmp34.i312 = icmp eq i32 %88, 1
  br i1 %cmp34.i312, label %if.then35.i320, label %if.end43.i323

if.then35.i320:                                   ; preds = %if.end27.i313
  %91 = load i32, ptr %x.i496, align 8, !tbaa !238
  %shl37.i314 = shl i32 %91, 8
  %92 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call39.i315 = tail call i32 @getc(ptr noundef %92)
  %and40.i316 = and i32 %call39.i315, 255
  %add41.i317 = or i32 %and40.i316, %shl37.i314
  store i32 %add41.i317, ptr %x.i496, align 8, !tbaa !238
  %.pre53.i318 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre54.i319 = load i32, ptr %x2.i485, align 4, !tbaa !237
  br label %if.end43.i323

if.end43.i323:                                    ; preds = %if.then35.i320, %if.end27.i313
  %93 = phi i32 [ %.pre54.i319, %if.then35.i320 ], [ %add31.i311, %if.end27.i313 ]
  %94 = phi i32 [ %.pre53.i318, %if.then35.i320 ], [ %shl.i309, %if.end27.i313 ]
  %xor.i321 = xor i32 %94, %93
  %cmp20.i322 = icmp ult i32 %xor.i321, 16777216
  br i1 %cmp20.i322, label %while.body.i302, label %_ZN7Encoder4codeEi.exit324, !llvm.loop !255

_ZN7Encoder4codeEi.exit324:                       ; preds = %if.end43.i323, %cond.end.i298
  %95 = phi i32 [ %83, %cond.end.i298 ], [ %93, %if.end43.i323 ]
  %96 = phi i32 [ %82, %cond.end.i298 ], [ %94, %if.end43.i323 ]
  %shr7.5.i = lshr i32 %call39, 2
  %and.5.i = and i32 %shr7.5.i, 1
  %97 = load i32, ptr %en, align 8, !tbaa !230
  %cmp.i221 = icmp slt i32 %97, 2048
  %conv.i222 = zext i1 %cmp.i221 to i32
  %add.i223 = add nsw i32 %97, %conv.i222
  %sub.i226 = sub i32 %95, %96
  %shr.i227 = lshr i32 %sub.i226, 12
  %mul.i228 = mul i32 %shr.i227, %add.i223
  %add3.i229 = add i32 %mul.i228, %96
  %and.i230 = and i32 %sub.i226, 4095
  %mul7.i231 = mul i32 %and.i230, %add.i223
  %shr8.i232 = lshr i32 %mul7.i231, 12
  %add9.i233 = add i32 %add3.i229, %shr8.i232
  %98 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp10.i235 = icmp eq i32 %98, 1
  %99 = load i32, ptr %x.i496, align 8
  %cmp11.i237 = icmp ule i32 %99, %add9.i233
  %conv12.i238 = zext i1 %cmp11.i237 to i32
  %storemerge.i239 = select i1 %cmp10.i235, i32 %conv12.i238, i32 %and.5.i
  store i32 %storemerge.i239, ptr @y, align 4, !tbaa !25
  %tobool.not.i240 = icmp eq i32 %storemerge.i239, 0
  br i1 %tobool.not.i240, label %cond.false.i243, label %cond.true.i241

cond.true.i241:                                   ; preds = %_ZN7Encoder4codeEi.exit324
  store i32 %add9.i233, ptr %x2.i485, align 4, !tbaa !237
  br label %cond.end.i246

cond.false.i243:                                  ; preds = %_ZN7Encoder4codeEi.exit324
  %add14.i242 = add i32 %add9.i233, 1
  store i32 %add14.i242, ptr %x1.i484, align 8, !tbaa !236
  br label %cond.end.i246

cond.end.i246:                                    ; preds = %cond.false.i243, %cond.true.i241
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %en)
  %100 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %101 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %xor49.i244 = xor i32 %101, %100
  %cmp2050.i245 = icmp ult i32 %xor49.i244, 16777216
  br i1 %cmp2050.i245, label %while.body.i250, label %_ZN7Encoder4codeEi.exit272

while.body.i250:                                  ; preds = %cond.end.i246, %if.end43.i271
  %102 = phi i32 [ %112, %if.end43.i271 ], [ %100, %cond.end.i246 ]
  %103 = phi i32 [ %111, %if.end43.i271 ], [ %101, %cond.end.i246 ]
  %104 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp22.i249 = icmp eq i32 %104, 0
  br i1 %cmp22.i249, label %if.then23.i256, label %if.end27.i261

if.then23.i256:                                   ; preds = %while.body.i250
  %shr25.i251 = lshr i32 %103, 24
  %105 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call26.i252 = tail call i32 @putc(i32 noundef %shr25.i251, ptr noundef %105)
  %.pre.i253 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre51.i254 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %.pre52.i255 = load i32, ptr %mode.i494, align 4, !tbaa !232
  br label %if.end27.i261

if.end27.i261:                                    ; preds = %if.then23.i256, %while.body.i250
  %106 = phi i32 [ %.pre52.i255, %if.then23.i256 ], [ %104, %while.body.i250 ]
  %107 = phi i32 [ %.pre51.i254, %if.then23.i256 ], [ %103, %while.body.i250 ]
  %108 = phi i32 [ %.pre.i253, %if.then23.i256 ], [ %102, %while.body.i250 ]
  %shl.i257 = shl i32 %108, 8
  store i32 %shl.i257, ptr %x1.i484, align 8, !tbaa !236
  %shl30.i258 = shl i32 %107, 8
  %add31.i259 = or i32 %shl30.i258, 255
  store i32 %add31.i259, ptr %x2.i485, align 4, !tbaa !237
  %cmp34.i260 = icmp eq i32 %106, 1
  br i1 %cmp34.i260, label %if.then35.i268, label %if.end43.i271

if.then35.i268:                                   ; preds = %if.end27.i261
  %109 = load i32, ptr %x.i496, align 8, !tbaa !238
  %shl37.i262 = shl i32 %109, 8
  %110 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call39.i263 = tail call i32 @getc(ptr noundef %110)
  %and40.i264 = and i32 %call39.i263, 255
  %add41.i265 = or i32 %and40.i264, %shl37.i262
  store i32 %add41.i265, ptr %x.i496, align 8, !tbaa !238
  %.pre53.i266 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre54.i267 = load i32, ptr %x2.i485, align 4, !tbaa !237
  br label %if.end43.i271

if.end43.i271:                                    ; preds = %if.then35.i268, %if.end27.i261
  %111 = phi i32 [ %.pre54.i267, %if.then35.i268 ], [ %add31.i259, %if.end27.i261 ]
  %112 = phi i32 [ %.pre53.i266, %if.then35.i268 ], [ %shl.i257, %if.end27.i261 ]
  %xor.i269 = xor i32 %112, %111
  %cmp20.i270 = icmp ult i32 %xor.i269, 16777216
  br i1 %cmp20.i270, label %while.body.i250, label %_ZN7Encoder4codeEi.exit272, !llvm.loop !255

_ZN7Encoder4codeEi.exit272:                       ; preds = %if.end43.i271, %cond.end.i246
  %113 = phi i32 [ %101, %cond.end.i246 ], [ %111, %if.end43.i271 ]
  %114 = phi i32 [ %100, %cond.end.i246 ], [ %112, %if.end43.i271 ]
  %shr7.6.i = lshr i32 %call39, 1
  %and.6.i = and i32 %shr7.6.i, 1
  %115 = load i32, ptr %en, align 8, !tbaa !230
  %cmp.i169 = icmp slt i32 %115, 2048
  %conv.i170 = zext i1 %cmp.i169 to i32
  %add.i171 = add nsw i32 %115, %conv.i170
  %sub.i174 = sub i32 %113, %114
  %shr.i175 = lshr i32 %sub.i174, 12
  %mul.i176 = mul i32 %shr.i175, %add.i171
  %add3.i177 = add i32 %mul.i176, %114
  %and.i178 = and i32 %sub.i174, 4095
  %mul7.i179 = mul i32 %and.i178, %add.i171
  %shr8.i180 = lshr i32 %mul7.i179, 12
  %add9.i181 = add i32 %add3.i177, %shr8.i180
  %116 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp10.i183 = icmp eq i32 %116, 1
  %117 = load i32, ptr %x.i496, align 8
  %cmp11.i185 = icmp ule i32 %117, %add9.i181
  %conv12.i186 = zext i1 %cmp11.i185 to i32
  %storemerge.i187 = select i1 %cmp10.i183, i32 %conv12.i186, i32 %and.6.i
  store i32 %storemerge.i187, ptr @y, align 4, !tbaa !25
  %tobool.not.i188 = icmp eq i32 %storemerge.i187, 0
  br i1 %tobool.not.i188, label %cond.false.i191, label %cond.true.i189

cond.true.i189:                                   ; preds = %_ZN7Encoder4codeEi.exit272
  store i32 %add9.i181, ptr %x2.i485, align 4, !tbaa !237
  br label %cond.end.i194

cond.false.i191:                                  ; preds = %_ZN7Encoder4codeEi.exit272
  %add14.i190 = add i32 %add9.i181, 1
  store i32 %add14.i190, ptr %x1.i484, align 8, !tbaa !236
  br label %cond.end.i194

cond.end.i194:                                    ; preds = %cond.false.i191, %cond.true.i189
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %en)
  %118 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %119 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %xor49.i192 = xor i32 %119, %118
  %cmp2050.i193 = icmp ult i32 %xor49.i192, 16777216
  br i1 %cmp2050.i193, label %while.body.i198, label %_ZN7Encoder4codeEi.exit220

while.body.i198:                                  ; preds = %cond.end.i194, %if.end43.i219
  %120 = phi i32 [ %130, %if.end43.i219 ], [ %118, %cond.end.i194 ]
  %121 = phi i32 [ %129, %if.end43.i219 ], [ %119, %cond.end.i194 ]
  %122 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp22.i197 = icmp eq i32 %122, 0
  br i1 %cmp22.i197, label %if.then23.i204, label %if.end27.i209

if.then23.i204:                                   ; preds = %while.body.i198
  %shr25.i199 = lshr i32 %121, 24
  %123 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call26.i200 = tail call i32 @putc(i32 noundef %shr25.i199, ptr noundef %123)
  %.pre.i201 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre51.i202 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %.pre52.i203 = load i32, ptr %mode.i494, align 4, !tbaa !232
  br label %if.end27.i209

if.end27.i209:                                    ; preds = %if.then23.i204, %while.body.i198
  %124 = phi i32 [ %.pre52.i203, %if.then23.i204 ], [ %122, %while.body.i198 ]
  %125 = phi i32 [ %.pre51.i202, %if.then23.i204 ], [ %121, %while.body.i198 ]
  %126 = phi i32 [ %.pre.i201, %if.then23.i204 ], [ %120, %while.body.i198 ]
  %shl.i205 = shl i32 %126, 8
  store i32 %shl.i205, ptr %x1.i484, align 8, !tbaa !236
  %shl30.i206 = shl i32 %125, 8
  %add31.i207 = or i32 %shl30.i206, 255
  store i32 %add31.i207, ptr %x2.i485, align 4, !tbaa !237
  %cmp34.i208 = icmp eq i32 %124, 1
  br i1 %cmp34.i208, label %if.then35.i216, label %if.end43.i219

if.then35.i216:                                   ; preds = %if.end27.i209
  %127 = load i32, ptr %x.i496, align 8, !tbaa !238
  %shl37.i210 = shl i32 %127, 8
  %128 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call39.i211 = tail call i32 @getc(ptr noundef %128)
  %and40.i212 = and i32 %call39.i211, 255
  %add41.i213 = or i32 %and40.i212, %shl37.i210
  store i32 %add41.i213, ptr %x.i496, align 8, !tbaa !238
  %.pre53.i214 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre54.i215 = load i32, ptr %x2.i485, align 4, !tbaa !237
  br label %if.end43.i219

if.end43.i219:                                    ; preds = %if.then35.i216, %if.end27.i209
  %129 = phi i32 [ %.pre54.i215, %if.then35.i216 ], [ %add31.i207, %if.end27.i209 ]
  %130 = phi i32 [ %.pre53.i214, %if.then35.i216 ], [ %shl.i205, %if.end27.i209 ]
  %xor.i217 = xor i32 %130, %129
  %cmp20.i218 = icmp ult i32 %xor.i217, 16777216
  br i1 %cmp20.i218, label %while.body.i198, label %_ZN7Encoder4codeEi.exit220, !llvm.loop !255

_ZN7Encoder4codeEi.exit220:                       ; preds = %if.end43.i219, %cond.end.i194
  %131 = phi i32 [ %119, %cond.end.i194 ], [ %129, %if.end43.i219 ]
  %132 = phi i32 [ %118, %cond.end.i194 ], [ %130, %if.end43.i219 ]
  %and.7.i = and i32 %call39, 1
  %133 = load i32, ptr %en, align 8, !tbaa !230
  %cmp.i165 = icmp slt i32 %133, 2048
  %conv.i = zext i1 %cmp.i165 to i32
  %add.i = add nsw i32 %133, %conv.i
  %sub.i = sub i32 %131, %132
  %shr.i = lshr i32 %sub.i, 12
  %mul.i = mul i32 %shr.i, %add.i
  %add3.i = add i32 %mul.i, %132
  %and.i166 = and i32 %sub.i, 4095
  %mul7.i = mul i32 %and.i166, %add.i
  %shr8.i = lshr i32 %mul7.i, 12
  %add9.i = add i32 %add3.i, %shr8.i
  %134 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp10.i = icmp eq i32 %134, 1
  %135 = load i32, ptr %x.i496, align 8
  %cmp11.i = icmp ule i32 %135, %add9.i
  %conv12.i = zext i1 %cmp11.i to i32
  %storemerge.i = select i1 %cmp10.i, i32 %conv12.i, i32 %and.7.i
  store i32 %storemerge.i, ptr @y, align 4, !tbaa !25
  %tobool.not.i167 = icmp eq i32 %storemerge.i, 0
  br i1 %tobool.not.i167, label %cond.false.i, label %cond.true.i

cond.true.i:                                      ; preds = %_ZN7Encoder4codeEi.exit220
  store i32 %add9.i, ptr %x2.i485, align 4, !tbaa !237
  br label %cond.end.i

cond.false.i:                                     ; preds = %_ZN7Encoder4codeEi.exit220
  %add14.i = add i32 %add9.i, 1
  store i32 %add14.i, ptr %x1.i484, align 8, !tbaa !236
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %en)
  %136 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %137 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %xor49.i = xor i32 %137, %136
  %cmp2050.i = icmp ult i32 %xor49.i, 16777216
  br i1 %cmp2050.i, label %while.body.i, label %_ZN7Encoder8compressEi.exit

while.body.i:                                     ; preds = %cond.end.i, %if.end43.i
  %138 = phi i32 [ %148, %if.end43.i ], [ %136, %cond.end.i ]
  %139 = phi i32 [ %147, %if.end43.i ], [ %137, %cond.end.i ]
  %140 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp22.i = icmp eq i32 %140, 0
  br i1 %cmp22.i, label %if.then23.i, label %if.end27.i

if.then23.i:                                      ; preds = %while.body.i
  %shr25.i = lshr i32 %139, 24
  %141 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call26.i = tail call i32 @putc(i32 noundef %shr25.i, ptr noundef %141)
  %.pre.i = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre51.i = load i32, ptr %x2.i485, align 4, !tbaa !237
  %.pre52.i = load i32, ptr %mode.i494, align 4, !tbaa !232
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then23.i, %while.body.i
  %142 = phi i32 [ %.pre52.i, %if.then23.i ], [ %140, %while.body.i ]
  %143 = phi i32 [ %.pre51.i, %if.then23.i ], [ %139, %while.body.i ]
  %144 = phi i32 [ %.pre.i, %if.then23.i ], [ %138, %while.body.i ]
  %shl.i = shl i32 %144, 8
  store i32 %shl.i, ptr %x1.i484, align 8, !tbaa !236
  %shl30.i = shl i32 %143, 8
  %add31.i = or i32 %shl30.i, 255
  store i32 %add31.i, ptr %x2.i485, align 4, !tbaa !237
  %cmp34.i = icmp eq i32 %142, 1
  br i1 %cmp34.i, label %if.then35.i, label %if.end43.i

if.then35.i:                                      ; preds = %if.end27.i
  %145 = load i32, ptr %x.i496, align 8, !tbaa !238
  %shl37.i = shl i32 %145, 8
  %146 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call39.i = tail call i32 @getc(ptr noundef %146)
  %and40.i = and i32 %call39.i, 255
  %add41.i = or i32 %and40.i, %shl37.i
  store i32 %add41.i, ptr %x.i496, align 8, !tbaa !238
  %.pre53.i = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre54.i = load i32, ptr %x2.i485, align 4, !tbaa !237
  br label %if.end43.i

if.end43.i:                                       ; preds = %if.then35.i, %if.end27.i
  %147 = phi i32 [ %.pre54.i, %if.then35.i ], [ %add31.i, %if.end27.i ]
  %148 = phi i32 [ %.pre53.i, %if.then35.i ], [ %shl.i, %if.end27.i ]
  %xor.i = xor i32 %148, %147
  %cmp20.i = icmp ult i32 %xor.i, 16777216
  br i1 %cmp20.i, label %while.body.i, label %_ZN7Encoder8compressEi.exit, !llvm.loop !255

if.then.i125:                                     ; preds = %_Z11printStatusi.exit
  %149 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call.i124 = tail call i32 @putc(i32 noundef %call39, ptr noundef %149)
  br label %_ZN7Encoder8compressEi.exit

_ZN7Encoder8compressEi.exit:                      ; preds = %if.end43.i, %cond.end.i, %if.then.i125
  %inc41 = add nuw nsw i32 %j33.0961, 1
  %exitcond971.not = icmp eq i32 %inc41, %spec.select
  br i1 %exitcond971.not, label %if.end49, label %for.body37, !llvm.loop !256

if.else:                                          ; preds = %lor.lhs.false
  tail call void @rewind(ptr noundef nonnull %call8)
  %call43962 = tail call i32 @getc(ptr noundef nonnull %call8)
  %cmp44.not963 = icmp eq i32 %call43962, -1
  br i1 %cmp44.not963, label %if.end49, label %while.body.preheader

while.body.preheader:                             ; preds = %if.else
  %150 = trunc i64 %indvars.iv to i32
  br label %while.body

while.body:                                       ; preds = %while.body.preheader, %_ZN7Encoder8compressEi.exit162
  %call43965 = phi i32 [ %call43, %_ZN7Encoder8compressEi.exit162 ], [ %call43962, %while.body.preheader ]
  %j.1964 = phi i32 [ %inc46, %_ZN7Encoder8compressEi.exit162 ], [ 0, %while.body.preheader ]
  %inc46 = add i32 %j.1964, 1
  %conv48 = add i32 %j.1964, %150
  %cmp.i126 = icmp sgt i32 %conv48, 0
  %and.i127 = and i32 %j.1964, 4095
  %tobool.not.i128 = icmp eq i32 %and.i127, 0
  %or.cond.i129 = and i1 %cmp.i126, %tobool.not.i128
  br i1 %or.cond.i129, label %if.then.i132, label %_Z11printStatusi.exit133

if.then.i132:                                     ; preds = %while.body
  %call.i130 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %conv48)
  %151 = load ptr, ptr @stdout, align 8, !tbaa !5
  %call1.i131 = tail call i32 @fflush(ptr noundef %151)
  br label %_Z11printStatusi.exit133

_Z11printStatusi.exit133:                         ; preds = %while.body, %if.then.i132
  %152 = load i32, ptr @level, align 4, !tbaa !25
  %cmp.i134 = icmp eq i32 %152, 0
  br i1 %cmp.i134, label %if.then.i161, label %for.body.preheader.i158

for.body.preheader.i158:                          ; preds = %_Z11printStatusi.exit133
  %shr7.i135 = lshr i32 %call43965, 7
  %and.i136 = and i32 %shr7.i135, 1
  %153 = load i32, ptr %en, align 8, !tbaa !230
  %cmp.i897 = icmp slt i32 %153, 2048
  %conv.i898 = zext i1 %cmp.i897 to i32
  %add.i899 = add nsw i32 %153, %conv.i898
  %154 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %155 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %sub.i902 = sub i32 %155, %154
  %shr.i903 = lshr i32 %sub.i902, 12
  %mul.i904 = mul i32 %shr.i903, %add.i899
  %add3.i905 = add i32 %mul.i904, %154
  %and.i906 = and i32 %sub.i902, 4095
  %mul7.i907 = mul i32 %and.i906, %add.i899
  %shr8.i908 = lshr i32 %mul7.i907, 12
  %add9.i909 = add i32 %add3.i905, %shr8.i908
  %156 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp10.i911 = icmp eq i32 %156, 1
  %157 = load i32, ptr %x.i496, align 8
  %cmp11.i913 = icmp ule i32 %157, %add9.i909
  %conv12.i914 = zext i1 %cmp11.i913 to i32
  %storemerge.i915 = select i1 %cmp10.i911, i32 %conv12.i914, i32 %and.i136
  store i32 %storemerge.i915, ptr @y, align 4, !tbaa !25
  %tobool.not.i916 = icmp eq i32 %storemerge.i915, 0
  br i1 %tobool.not.i916, label %cond.false.i919, label %cond.true.i917

cond.true.i917:                                   ; preds = %for.body.preheader.i158
  store i32 %add9.i909, ptr %x2.i485, align 4, !tbaa !237
  br label %cond.end.i922

cond.false.i919:                                  ; preds = %for.body.preheader.i158
  %add14.i918 = add i32 %add9.i909, 1
  store i32 %add14.i918, ptr %x1.i484, align 8, !tbaa !236
  br label %cond.end.i922

cond.end.i922:                                    ; preds = %cond.false.i919, %cond.true.i917
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %en)
  %158 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %159 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %xor49.i920 = xor i32 %159, %158
  %cmp2050.i921 = icmp ult i32 %xor49.i920, 16777216
  br i1 %cmp2050.i921, label %while.body.i926, label %_ZN7Encoder4codeEi.exit948

while.body.i926:                                  ; preds = %cond.end.i922, %if.end43.i947
  %160 = phi i32 [ %170, %if.end43.i947 ], [ %158, %cond.end.i922 ]
  %161 = phi i32 [ %169, %if.end43.i947 ], [ %159, %cond.end.i922 ]
  %162 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp22.i925 = icmp eq i32 %162, 0
  br i1 %cmp22.i925, label %if.then23.i932, label %if.end27.i937

if.then23.i932:                                   ; preds = %while.body.i926
  %shr25.i927 = lshr i32 %161, 24
  %163 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call26.i928 = tail call i32 @putc(i32 noundef %shr25.i927, ptr noundef %163)
  %.pre.i929 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre51.i930 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %.pre52.i931 = load i32, ptr %mode.i494, align 4, !tbaa !232
  br label %if.end27.i937

if.end27.i937:                                    ; preds = %if.then23.i932, %while.body.i926
  %164 = phi i32 [ %.pre52.i931, %if.then23.i932 ], [ %162, %while.body.i926 ]
  %165 = phi i32 [ %.pre51.i930, %if.then23.i932 ], [ %161, %while.body.i926 ]
  %166 = phi i32 [ %.pre.i929, %if.then23.i932 ], [ %160, %while.body.i926 ]
  %shl.i933 = shl i32 %166, 8
  store i32 %shl.i933, ptr %x1.i484, align 8, !tbaa !236
  %shl30.i934 = shl i32 %165, 8
  %add31.i935 = or i32 %shl30.i934, 255
  store i32 %add31.i935, ptr %x2.i485, align 4, !tbaa !237
  %cmp34.i936 = icmp eq i32 %164, 1
  br i1 %cmp34.i936, label %if.then35.i944, label %if.end43.i947

if.then35.i944:                                   ; preds = %if.end27.i937
  %167 = load i32, ptr %x.i496, align 8, !tbaa !238
  %shl37.i938 = shl i32 %167, 8
  %168 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call39.i939 = tail call i32 @getc(ptr noundef %168)
  %and40.i940 = and i32 %call39.i939, 255
  %add41.i941 = or i32 %and40.i940, %shl37.i938
  store i32 %add41.i941, ptr %x.i496, align 8, !tbaa !238
  %.pre53.i942 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre54.i943 = load i32, ptr %x2.i485, align 4, !tbaa !237
  br label %if.end43.i947

if.end43.i947:                                    ; preds = %if.then35.i944, %if.end27.i937
  %169 = phi i32 [ %.pre54.i943, %if.then35.i944 ], [ %add31.i935, %if.end27.i937 ]
  %170 = phi i32 [ %.pre53.i942, %if.then35.i944 ], [ %shl.i933, %if.end27.i937 ]
  %xor.i945 = xor i32 %170, %169
  %cmp20.i946 = icmp ult i32 %xor.i945, 16777216
  br i1 %cmp20.i946, label %while.body.i926, label %_ZN7Encoder4codeEi.exit948, !llvm.loop !255

_ZN7Encoder4codeEi.exit948:                       ; preds = %if.end43.i947, %cond.end.i922
  %171 = phi i32 [ %159, %cond.end.i922 ], [ %169, %if.end43.i947 ]
  %172 = phi i32 [ %158, %cond.end.i922 ], [ %170, %if.end43.i947 ]
  %shr7.1.i138 = lshr i32 %call43965, 6
  %and.1.i139 = and i32 %shr7.1.i138, 1
  %173 = load i32, ptr %en, align 8, !tbaa !230
  %cmp.i845 = icmp slt i32 %173, 2048
  %conv.i846 = zext i1 %cmp.i845 to i32
  %add.i847 = add nsw i32 %173, %conv.i846
  %sub.i850 = sub i32 %171, %172
  %shr.i851 = lshr i32 %sub.i850, 12
  %mul.i852 = mul i32 %shr.i851, %add.i847
  %add3.i853 = add i32 %mul.i852, %172
  %and.i854 = and i32 %sub.i850, 4095
  %mul7.i855 = mul i32 %and.i854, %add.i847
  %shr8.i856 = lshr i32 %mul7.i855, 12
  %add9.i857 = add i32 %add3.i853, %shr8.i856
  %174 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp10.i859 = icmp eq i32 %174, 1
  %175 = load i32, ptr %x.i496, align 8
  %cmp11.i861 = icmp ule i32 %175, %add9.i857
  %conv12.i862 = zext i1 %cmp11.i861 to i32
  %storemerge.i863 = select i1 %cmp10.i859, i32 %conv12.i862, i32 %and.1.i139
  store i32 %storemerge.i863, ptr @y, align 4, !tbaa !25
  %tobool.not.i864 = icmp eq i32 %storemerge.i863, 0
  br i1 %tobool.not.i864, label %cond.false.i867, label %cond.true.i865

cond.true.i865:                                   ; preds = %_ZN7Encoder4codeEi.exit948
  store i32 %add9.i857, ptr %x2.i485, align 4, !tbaa !237
  br label %cond.end.i870

cond.false.i867:                                  ; preds = %_ZN7Encoder4codeEi.exit948
  %add14.i866 = add i32 %add9.i857, 1
  store i32 %add14.i866, ptr %x1.i484, align 8, !tbaa !236
  br label %cond.end.i870

cond.end.i870:                                    ; preds = %cond.false.i867, %cond.true.i865
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %en)
  %176 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %177 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %xor49.i868 = xor i32 %177, %176
  %cmp2050.i869 = icmp ult i32 %xor49.i868, 16777216
  br i1 %cmp2050.i869, label %while.body.i874, label %_ZN7Encoder4codeEi.exit896

while.body.i874:                                  ; preds = %cond.end.i870, %if.end43.i895
  %178 = phi i32 [ %188, %if.end43.i895 ], [ %176, %cond.end.i870 ]
  %179 = phi i32 [ %187, %if.end43.i895 ], [ %177, %cond.end.i870 ]
  %180 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp22.i873 = icmp eq i32 %180, 0
  br i1 %cmp22.i873, label %if.then23.i880, label %if.end27.i885

if.then23.i880:                                   ; preds = %while.body.i874
  %shr25.i875 = lshr i32 %179, 24
  %181 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call26.i876 = tail call i32 @putc(i32 noundef %shr25.i875, ptr noundef %181)
  %.pre.i877 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre51.i878 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %.pre52.i879 = load i32, ptr %mode.i494, align 4, !tbaa !232
  br label %if.end27.i885

if.end27.i885:                                    ; preds = %if.then23.i880, %while.body.i874
  %182 = phi i32 [ %.pre52.i879, %if.then23.i880 ], [ %180, %while.body.i874 ]
  %183 = phi i32 [ %.pre51.i878, %if.then23.i880 ], [ %179, %while.body.i874 ]
  %184 = phi i32 [ %.pre.i877, %if.then23.i880 ], [ %178, %while.body.i874 ]
  %shl.i881 = shl i32 %184, 8
  store i32 %shl.i881, ptr %x1.i484, align 8, !tbaa !236
  %shl30.i882 = shl i32 %183, 8
  %add31.i883 = or i32 %shl30.i882, 255
  store i32 %add31.i883, ptr %x2.i485, align 4, !tbaa !237
  %cmp34.i884 = icmp eq i32 %182, 1
  br i1 %cmp34.i884, label %if.then35.i892, label %if.end43.i895

if.then35.i892:                                   ; preds = %if.end27.i885
  %185 = load i32, ptr %x.i496, align 8, !tbaa !238
  %shl37.i886 = shl i32 %185, 8
  %186 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call39.i887 = tail call i32 @getc(ptr noundef %186)
  %and40.i888 = and i32 %call39.i887, 255
  %add41.i889 = or i32 %and40.i888, %shl37.i886
  store i32 %add41.i889, ptr %x.i496, align 8, !tbaa !238
  %.pre53.i890 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre54.i891 = load i32, ptr %x2.i485, align 4, !tbaa !237
  br label %if.end43.i895

if.end43.i895:                                    ; preds = %if.then35.i892, %if.end27.i885
  %187 = phi i32 [ %.pre54.i891, %if.then35.i892 ], [ %add31.i883, %if.end27.i885 ]
  %188 = phi i32 [ %.pre53.i890, %if.then35.i892 ], [ %shl.i881, %if.end27.i885 ]
  %xor.i893 = xor i32 %188, %187
  %cmp20.i894 = icmp ult i32 %xor.i893, 16777216
  br i1 %cmp20.i894, label %while.body.i874, label %_ZN7Encoder4codeEi.exit896, !llvm.loop !255

_ZN7Encoder4codeEi.exit896:                       ; preds = %if.end43.i895, %cond.end.i870
  %189 = phi i32 [ %177, %cond.end.i870 ], [ %187, %if.end43.i895 ]
  %190 = phi i32 [ %176, %cond.end.i870 ], [ %188, %if.end43.i895 ]
  %shr7.2.i141 = lshr i32 %call43965, 5
  %and.2.i142 = and i32 %shr7.2.i141, 1
  %191 = load i32, ptr %en, align 8, !tbaa !230
  %cmp.i793 = icmp slt i32 %191, 2048
  %conv.i794 = zext i1 %cmp.i793 to i32
  %add.i795 = add nsw i32 %191, %conv.i794
  %sub.i798 = sub i32 %189, %190
  %shr.i799 = lshr i32 %sub.i798, 12
  %mul.i800 = mul i32 %shr.i799, %add.i795
  %add3.i801 = add i32 %mul.i800, %190
  %and.i802 = and i32 %sub.i798, 4095
  %mul7.i803 = mul i32 %and.i802, %add.i795
  %shr8.i804 = lshr i32 %mul7.i803, 12
  %add9.i805 = add i32 %add3.i801, %shr8.i804
  %192 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp10.i807 = icmp eq i32 %192, 1
  %193 = load i32, ptr %x.i496, align 8
  %cmp11.i809 = icmp ule i32 %193, %add9.i805
  %conv12.i810 = zext i1 %cmp11.i809 to i32
  %storemerge.i811 = select i1 %cmp10.i807, i32 %conv12.i810, i32 %and.2.i142
  store i32 %storemerge.i811, ptr @y, align 4, !tbaa !25
  %tobool.not.i812 = icmp eq i32 %storemerge.i811, 0
  br i1 %tobool.not.i812, label %cond.false.i815, label %cond.true.i813

cond.true.i813:                                   ; preds = %_ZN7Encoder4codeEi.exit896
  store i32 %add9.i805, ptr %x2.i485, align 4, !tbaa !237
  br label %cond.end.i818

cond.false.i815:                                  ; preds = %_ZN7Encoder4codeEi.exit896
  %add14.i814 = add i32 %add9.i805, 1
  store i32 %add14.i814, ptr %x1.i484, align 8, !tbaa !236
  br label %cond.end.i818

cond.end.i818:                                    ; preds = %cond.false.i815, %cond.true.i813
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %en)
  %194 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %195 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %xor49.i816 = xor i32 %195, %194
  %cmp2050.i817 = icmp ult i32 %xor49.i816, 16777216
  br i1 %cmp2050.i817, label %while.body.i822, label %_ZN7Encoder4codeEi.exit844

while.body.i822:                                  ; preds = %cond.end.i818, %if.end43.i843
  %196 = phi i32 [ %206, %if.end43.i843 ], [ %194, %cond.end.i818 ]
  %197 = phi i32 [ %205, %if.end43.i843 ], [ %195, %cond.end.i818 ]
  %198 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp22.i821 = icmp eq i32 %198, 0
  br i1 %cmp22.i821, label %if.then23.i828, label %if.end27.i833

if.then23.i828:                                   ; preds = %while.body.i822
  %shr25.i823 = lshr i32 %197, 24
  %199 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call26.i824 = tail call i32 @putc(i32 noundef %shr25.i823, ptr noundef %199)
  %.pre.i825 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre51.i826 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %.pre52.i827 = load i32, ptr %mode.i494, align 4, !tbaa !232
  br label %if.end27.i833

if.end27.i833:                                    ; preds = %if.then23.i828, %while.body.i822
  %200 = phi i32 [ %.pre52.i827, %if.then23.i828 ], [ %198, %while.body.i822 ]
  %201 = phi i32 [ %.pre51.i826, %if.then23.i828 ], [ %197, %while.body.i822 ]
  %202 = phi i32 [ %.pre.i825, %if.then23.i828 ], [ %196, %while.body.i822 ]
  %shl.i829 = shl i32 %202, 8
  store i32 %shl.i829, ptr %x1.i484, align 8, !tbaa !236
  %shl30.i830 = shl i32 %201, 8
  %add31.i831 = or i32 %shl30.i830, 255
  store i32 %add31.i831, ptr %x2.i485, align 4, !tbaa !237
  %cmp34.i832 = icmp eq i32 %200, 1
  br i1 %cmp34.i832, label %if.then35.i840, label %if.end43.i843

if.then35.i840:                                   ; preds = %if.end27.i833
  %203 = load i32, ptr %x.i496, align 8, !tbaa !238
  %shl37.i834 = shl i32 %203, 8
  %204 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call39.i835 = tail call i32 @getc(ptr noundef %204)
  %and40.i836 = and i32 %call39.i835, 255
  %add41.i837 = or i32 %and40.i836, %shl37.i834
  store i32 %add41.i837, ptr %x.i496, align 8, !tbaa !238
  %.pre53.i838 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre54.i839 = load i32, ptr %x2.i485, align 4, !tbaa !237
  br label %if.end43.i843

if.end43.i843:                                    ; preds = %if.then35.i840, %if.end27.i833
  %205 = phi i32 [ %.pre54.i839, %if.then35.i840 ], [ %add31.i831, %if.end27.i833 ]
  %206 = phi i32 [ %.pre53.i838, %if.then35.i840 ], [ %shl.i829, %if.end27.i833 ]
  %xor.i841 = xor i32 %206, %205
  %cmp20.i842 = icmp ult i32 %xor.i841, 16777216
  br i1 %cmp20.i842, label %while.body.i822, label %_ZN7Encoder4codeEi.exit844, !llvm.loop !255

_ZN7Encoder4codeEi.exit844:                       ; preds = %if.end43.i843, %cond.end.i818
  %207 = phi i32 [ %195, %cond.end.i818 ], [ %205, %if.end43.i843 ]
  %208 = phi i32 [ %194, %cond.end.i818 ], [ %206, %if.end43.i843 ]
  %shr7.3.i144 = lshr i32 %call43965, 4
  %and.3.i145 = and i32 %shr7.3.i144, 1
  %209 = load i32, ptr %en, align 8, !tbaa !230
  %cmp.i741 = icmp slt i32 %209, 2048
  %conv.i742 = zext i1 %cmp.i741 to i32
  %add.i743 = add nsw i32 %209, %conv.i742
  %sub.i746 = sub i32 %207, %208
  %shr.i747 = lshr i32 %sub.i746, 12
  %mul.i748 = mul i32 %shr.i747, %add.i743
  %add3.i749 = add i32 %mul.i748, %208
  %and.i750 = and i32 %sub.i746, 4095
  %mul7.i751 = mul i32 %and.i750, %add.i743
  %shr8.i752 = lshr i32 %mul7.i751, 12
  %add9.i753 = add i32 %add3.i749, %shr8.i752
  %210 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp10.i755 = icmp eq i32 %210, 1
  %211 = load i32, ptr %x.i496, align 8
  %cmp11.i757 = icmp ule i32 %211, %add9.i753
  %conv12.i758 = zext i1 %cmp11.i757 to i32
  %storemerge.i759 = select i1 %cmp10.i755, i32 %conv12.i758, i32 %and.3.i145
  store i32 %storemerge.i759, ptr @y, align 4, !tbaa !25
  %tobool.not.i760 = icmp eq i32 %storemerge.i759, 0
  br i1 %tobool.not.i760, label %cond.false.i763, label %cond.true.i761

cond.true.i761:                                   ; preds = %_ZN7Encoder4codeEi.exit844
  store i32 %add9.i753, ptr %x2.i485, align 4, !tbaa !237
  br label %cond.end.i766

cond.false.i763:                                  ; preds = %_ZN7Encoder4codeEi.exit844
  %add14.i762 = add i32 %add9.i753, 1
  store i32 %add14.i762, ptr %x1.i484, align 8, !tbaa !236
  br label %cond.end.i766

cond.end.i766:                                    ; preds = %cond.false.i763, %cond.true.i761
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %en)
  %212 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %213 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %xor49.i764 = xor i32 %213, %212
  %cmp2050.i765 = icmp ult i32 %xor49.i764, 16777216
  br i1 %cmp2050.i765, label %while.body.i770, label %_ZN7Encoder4codeEi.exit792

while.body.i770:                                  ; preds = %cond.end.i766, %if.end43.i791
  %214 = phi i32 [ %224, %if.end43.i791 ], [ %212, %cond.end.i766 ]
  %215 = phi i32 [ %223, %if.end43.i791 ], [ %213, %cond.end.i766 ]
  %216 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp22.i769 = icmp eq i32 %216, 0
  br i1 %cmp22.i769, label %if.then23.i776, label %if.end27.i781

if.then23.i776:                                   ; preds = %while.body.i770
  %shr25.i771 = lshr i32 %215, 24
  %217 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call26.i772 = tail call i32 @putc(i32 noundef %shr25.i771, ptr noundef %217)
  %.pre.i773 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre51.i774 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %.pre52.i775 = load i32, ptr %mode.i494, align 4, !tbaa !232
  br label %if.end27.i781

if.end27.i781:                                    ; preds = %if.then23.i776, %while.body.i770
  %218 = phi i32 [ %.pre52.i775, %if.then23.i776 ], [ %216, %while.body.i770 ]
  %219 = phi i32 [ %.pre51.i774, %if.then23.i776 ], [ %215, %while.body.i770 ]
  %220 = phi i32 [ %.pre.i773, %if.then23.i776 ], [ %214, %while.body.i770 ]
  %shl.i777 = shl i32 %220, 8
  store i32 %shl.i777, ptr %x1.i484, align 8, !tbaa !236
  %shl30.i778 = shl i32 %219, 8
  %add31.i779 = or i32 %shl30.i778, 255
  store i32 %add31.i779, ptr %x2.i485, align 4, !tbaa !237
  %cmp34.i780 = icmp eq i32 %218, 1
  br i1 %cmp34.i780, label %if.then35.i788, label %if.end43.i791

if.then35.i788:                                   ; preds = %if.end27.i781
  %221 = load i32, ptr %x.i496, align 8, !tbaa !238
  %shl37.i782 = shl i32 %221, 8
  %222 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call39.i783 = tail call i32 @getc(ptr noundef %222)
  %and40.i784 = and i32 %call39.i783, 255
  %add41.i785 = or i32 %and40.i784, %shl37.i782
  store i32 %add41.i785, ptr %x.i496, align 8, !tbaa !238
  %.pre53.i786 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre54.i787 = load i32, ptr %x2.i485, align 4, !tbaa !237
  br label %if.end43.i791

if.end43.i791:                                    ; preds = %if.then35.i788, %if.end27.i781
  %223 = phi i32 [ %.pre54.i787, %if.then35.i788 ], [ %add31.i779, %if.end27.i781 ]
  %224 = phi i32 [ %.pre53.i786, %if.then35.i788 ], [ %shl.i777, %if.end27.i781 ]
  %xor.i789 = xor i32 %224, %223
  %cmp20.i790 = icmp ult i32 %xor.i789, 16777216
  br i1 %cmp20.i790, label %while.body.i770, label %_ZN7Encoder4codeEi.exit792, !llvm.loop !255

_ZN7Encoder4codeEi.exit792:                       ; preds = %if.end43.i791, %cond.end.i766
  %225 = phi i32 [ %213, %cond.end.i766 ], [ %223, %if.end43.i791 ]
  %226 = phi i32 [ %212, %cond.end.i766 ], [ %224, %if.end43.i791 ]
  %shr7.4.i147 = lshr i32 %call43965, 3
  %and.4.i148 = and i32 %shr7.4.i147, 1
  %227 = load i32, ptr %en, align 8, !tbaa !230
  %cmp.i689 = icmp slt i32 %227, 2048
  %conv.i690 = zext i1 %cmp.i689 to i32
  %add.i691 = add nsw i32 %227, %conv.i690
  %sub.i694 = sub i32 %225, %226
  %shr.i695 = lshr i32 %sub.i694, 12
  %mul.i696 = mul i32 %shr.i695, %add.i691
  %add3.i697 = add i32 %mul.i696, %226
  %and.i698 = and i32 %sub.i694, 4095
  %mul7.i699 = mul i32 %and.i698, %add.i691
  %shr8.i700 = lshr i32 %mul7.i699, 12
  %add9.i701 = add i32 %add3.i697, %shr8.i700
  %228 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp10.i703 = icmp eq i32 %228, 1
  %229 = load i32, ptr %x.i496, align 8
  %cmp11.i705 = icmp ule i32 %229, %add9.i701
  %conv12.i706 = zext i1 %cmp11.i705 to i32
  %storemerge.i707 = select i1 %cmp10.i703, i32 %conv12.i706, i32 %and.4.i148
  store i32 %storemerge.i707, ptr @y, align 4, !tbaa !25
  %tobool.not.i708 = icmp eq i32 %storemerge.i707, 0
  br i1 %tobool.not.i708, label %cond.false.i711, label %cond.true.i709

cond.true.i709:                                   ; preds = %_ZN7Encoder4codeEi.exit792
  store i32 %add9.i701, ptr %x2.i485, align 4, !tbaa !237
  br label %cond.end.i714

cond.false.i711:                                  ; preds = %_ZN7Encoder4codeEi.exit792
  %add14.i710 = add i32 %add9.i701, 1
  store i32 %add14.i710, ptr %x1.i484, align 8, !tbaa !236
  br label %cond.end.i714

cond.end.i714:                                    ; preds = %cond.false.i711, %cond.true.i709
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %en)
  %230 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %231 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %xor49.i712 = xor i32 %231, %230
  %cmp2050.i713 = icmp ult i32 %xor49.i712, 16777216
  br i1 %cmp2050.i713, label %while.body.i718, label %_ZN7Encoder4codeEi.exit740

while.body.i718:                                  ; preds = %cond.end.i714, %if.end43.i739
  %232 = phi i32 [ %242, %if.end43.i739 ], [ %230, %cond.end.i714 ]
  %233 = phi i32 [ %241, %if.end43.i739 ], [ %231, %cond.end.i714 ]
  %234 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp22.i717 = icmp eq i32 %234, 0
  br i1 %cmp22.i717, label %if.then23.i724, label %if.end27.i729

if.then23.i724:                                   ; preds = %while.body.i718
  %shr25.i719 = lshr i32 %233, 24
  %235 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call26.i720 = tail call i32 @putc(i32 noundef %shr25.i719, ptr noundef %235)
  %.pre.i721 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre51.i722 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %.pre52.i723 = load i32, ptr %mode.i494, align 4, !tbaa !232
  br label %if.end27.i729

if.end27.i729:                                    ; preds = %if.then23.i724, %while.body.i718
  %236 = phi i32 [ %.pre52.i723, %if.then23.i724 ], [ %234, %while.body.i718 ]
  %237 = phi i32 [ %.pre51.i722, %if.then23.i724 ], [ %233, %while.body.i718 ]
  %238 = phi i32 [ %.pre.i721, %if.then23.i724 ], [ %232, %while.body.i718 ]
  %shl.i725 = shl i32 %238, 8
  store i32 %shl.i725, ptr %x1.i484, align 8, !tbaa !236
  %shl30.i726 = shl i32 %237, 8
  %add31.i727 = or i32 %shl30.i726, 255
  store i32 %add31.i727, ptr %x2.i485, align 4, !tbaa !237
  %cmp34.i728 = icmp eq i32 %236, 1
  br i1 %cmp34.i728, label %if.then35.i736, label %if.end43.i739

if.then35.i736:                                   ; preds = %if.end27.i729
  %239 = load i32, ptr %x.i496, align 8, !tbaa !238
  %shl37.i730 = shl i32 %239, 8
  %240 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call39.i731 = tail call i32 @getc(ptr noundef %240)
  %and40.i732 = and i32 %call39.i731, 255
  %add41.i733 = or i32 %and40.i732, %shl37.i730
  store i32 %add41.i733, ptr %x.i496, align 8, !tbaa !238
  %.pre53.i734 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre54.i735 = load i32, ptr %x2.i485, align 4, !tbaa !237
  br label %if.end43.i739

if.end43.i739:                                    ; preds = %if.then35.i736, %if.end27.i729
  %241 = phi i32 [ %.pre54.i735, %if.then35.i736 ], [ %add31.i727, %if.end27.i729 ]
  %242 = phi i32 [ %.pre53.i734, %if.then35.i736 ], [ %shl.i725, %if.end27.i729 ]
  %xor.i737 = xor i32 %242, %241
  %cmp20.i738 = icmp ult i32 %xor.i737, 16777216
  br i1 %cmp20.i738, label %while.body.i718, label %_ZN7Encoder4codeEi.exit740, !llvm.loop !255

_ZN7Encoder4codeEi.exit740:                       ; preds = %if.end43.i739, %cond.end.i714
  %243 = phi i32 [ %231, %cond.end.i714 ], [ %241, %if.end43.i739 ]
  %244 = phi i32 [ %230, %cond.end.i714 ], [ %242, %if.end43.i739 ]
  %shr7.5.i150 = lshr i32 %call43965, 2
  %and.5.i151 = and i32 %shr7.5.i150, 1
  %245 = load i32, ptr %en, align 8, !tbaa !230
  %cmp.i637 = icmp slt i32 %245, 2048
  %conv.i638 = zext i1 %cmp.i637 to i32
  %add.i639 = add nsw i32 %245, %conv.i638
  %sub.i642 = sub i32 %243, %244
  %shr.i643 = lshr i32 %sub.i642, 12
  %mul.i644 = mul i32 %shr.i643, %add.i639
  %add3.i645 = add i32 %mul.i644, %244
  %and.i646 = and i32 %sub.i642, 4095
  %mul7.i647 = mul i32 %and.i646, %add.i639
  %shr8.i648 = lshr i32 %mul7.i647, 12
  %add9.i649 = add i32 %add3.i645, %shr8.i648
  %246 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp10.i651 = icmp eq i32 %246, 1
  %247 = load i32, ptr %x.i496, align 8
  %cmp11.i653 = icmp ule i32 %247, %add9.i649
  %conv12.i654 = zext i1 %cmp11.i653 to i32
  %storemerge.i655 = select i1 %cmp10.i651, i32 %conv12.i654, i32 %and.5.i151
  store i32 %storemerge.i655, ptr @y, align 4, !tbaa !25
  %tobool.not.i656 = icmp eq i32 %storemerge.i655, 0
  br i1 %tobool.not.i656, label %cond.false.i659, label %cond.true.i657

cond.true.i657:                                   ; preds = %_ZN7Encoder4codeEi.exit740
  store i32 %add9.i649, ptr %x2.i485, align 4, !tbaa !237
  br label %cond.end.i662

cond.false.i659:                                  ; preds = %_ZN7Encoder4codeEi.exit740
  %add14.i658 = add i32 %add9.i649, 1
  store i32 %add14.i658, ptr %x1.i484, align 8, !tbaa !236
  br label %cond.end.i662

cond.end.i662:                                    ; preds = %cond.false.i659, %cond.true.i657
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %en)
  %248 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %249 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %xor49.i660 = xor i32 %249, %248
  %cmp2050.i661 = icmp ult i32 %xor49.i660, 16777216
  br i1 %cmp2050.i661, label %while.body.i666, label %_ZN7Encoder4codeEi.exit688

while.body.i666:                                  ; preds = %cond.end.i662, %if.end43.i687
  %250 = phi i32 [ %260, %if.end43.i687 ], [ %248, %cond.end.i662 ]
  %251 = phi i32 [ %259, %if.end43.i687 ], [ %249, %cond.end.i662 ]
  %252 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp22.i665 = icmp eq i32 %252, 0
  br i1 %cmp22.i665, label %if.then23.i672, label %if.end27.i677

if.then23.i672:                                   ; preds = %while.body.i666
  %shr25.i667 = lshr i32 %251, 24
  %253 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call26.i668 = tail call i32 @putc(i32 noundef %shr25.i667, ptr noundef %253)
  %.pre.i669 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre51.i670 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %.pre52.i671 = load i32, ptr %mode.i494, align 4, !tbaa !232
  br label %if.end27.i677

if.end27.i677:                                    ; preds = %if.then23.i672, %while.body.i666
  %254 = phi i32 [ %.pre52.i671, %if.then23.i672 ], [ %252, %while.body.i666 ]
  %255 = phi i32 [ %.pre51.i670, %if.then23.i672 ], [ %251, %while.body.i666 ]
  %256 = phi i32 [ %.pre.i669, %if.then23.i672 ], [ %250, %while.body.i666 ]
  %shl.i673 = shl i32 %256, 8
  store i32 %shl.i673, ptr %x1.i484, align 8, !tbaa !236
  %shl30.i674 = shl i32 %255, 8
  %add31.i675 = or i32 %shl30.i674, 255
  store i32 %add31.i675, ptr %x2.i485, align 4, !tbaa !237
  %cmp34.i676 = icmp eq i32 %254, 1
  br i1 %cmp34.i676, label %if.then35.i684, label %if.end43.i687

if.then35.i684:                                   ; preds = %if.end27.i677
  %257 = load i32, ptr %x.i496, align 8, !tbaa !238
  %shl37.i678 = shl i32 %257, 8
  %258 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call39.i679 = tail call i32 @getc(ptr noundef %258)
  %and40.i680 = and i32 %call39.i679, 255
  %add41.i681 = or i32 %and40.i680, %shl37.i678
  store i32 %add41.i681, ptr %x.i496, align 8, !tbaa !238
  %.pre53.i682 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre54.i683 = load i32, ptr %x2.i485, align 4, !tbaa !237
  br label %if.end43.i687

if.end43.i687:                                    ; preds = %if.then35.i684, %if.end27.i677
  %259 = phi i32 [ %.pre54.i683, %if.then35.i684 ], [ %add31.i675, %if.end27.i677 ]
  %260 = phi i32 [ %.pre53.i682, %if.then35.i684 ], [ %shl.i673, %if.end27.i677 ]
  %xor.i685 = xor i32 %260, %259
  %cmp20.i686 = icmp ult i32 %xor.i685, 16777216
  br i1 %cmp20.i686, label %while.body.i666, label %_ZN7Encoder4codeEi.exit688, !llvm.loop !255

_ZN7Encoder4codeEi.exit688:                       ; preds = %if.end43.i687, %cond.end.i662
  %261 = phi i32 [ %249, %cond.end.i662 ], [ %259, %if.end43.i687 ]
  %262 = phi i32 [ %248, %cond.end.i662 ], [ %260, %if.end43.i687 ]
  %shr7.6.i153 = lshr i32 %call43965, 1
  %and.6.i154 = and i32 %shr7.6.i153, 1
  %263 = load i32, ptr %en, align 8, !tbaa !230
  %cmp.i585 = icmp slt i32 %263, 2048
  %conv.i586 = zext i1 %cmp.i585 to i32
  %add.i587 = add nsw i32 %263, %conv.i586
  %sub.i590 = sub i32 %261, %262
  %shr.i591 = lshr i32 %sub.i590, 12
  %mul.i592 = mul i32 %shr.i591, %add.i587
  %add3.i593 = add i32 %mul.i592, %262
  %and.i594 = and i32 %sub.i590, 4095
  %mul7.i595 = mul i32 %and.i594, %add.i587
  %shr8.i596 = lshr i32 %mul7.i595, 12
  %add9.i597 = add i32 %add3.i593, %shr8.i596
  %264 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp10.i599 = icmp eq i32 %264, 1
  %265 = load i32, ptr %x.i496, align 8
  %cmp11.i601 = icmp ule i32 %265, %add9.i597
  %conv12.i602 = zext i1 %cmp11.i601 to i32
  %storemerge.i603 = select i1 %cmp10.i599, i32 %conv12.i602, i32 %and.6.i154
  store i32 %storemerge.i603, ptr @y, align 4, !tbaa !25
  %tobool.not.i604 = icmp eq i32 %storemerge.i603, 0
  br i1 %tobool.not.i604, label %cond.false.i607, label %cond.true.i605

cond.true.i605:                                   ; preds = %_ZN7Encoder4codeEi.exit688
  store i32 %add9.i597, ptr %x2.i485, align 4, !tbaa !237
  br label %cond.end.i610

cond.false.i607:                                  ; preds = %_ZN7Encoder4codeEi.exit688
  %add14.i606 = add i32 %add9.i597, 1
  store i32 %add14.i606, ptr %x1.i484, align 8, !tbaa !236
  br label %cond.end.i610

cond.end.i610:                                    ; preds = %cond.false.i607, %cond.true.i605
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %en)
  %266 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %267 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %xor49.i608 = xor i32 %267, %266
  %cmp2050.i609 = icmp ult i32 %xor49.i608, 16777216
  br i1 %cmp2050.i609, label %while.body.i614, label %_ZN7Encoder4codeEi.exit636

while.body.i614:                                  ; preds = %cond.end.i610, %if.end43.i635
  %268 = phi i32 [ %278, %if.end43.i635 ], [ %266, %cond.end.i610 ]
  %269 = phi i32 [ %277, %if.end43.i635 ], [ %267, %cond.end.i610 ]
  %270 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp22.i613 = icmp eq i32 %270, 0
  br i1 %cmp22.i613, label %if.then23.i620, label %if.end27.i625

if.then23.i620:                                   ; preds = %while.body.i614
  %shr25.i615 = lshr i32 %269, 24
  %271 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call26.i616 = tail call i32 @putc(i32 noundef %shr25.i615, ptr noundef %271)
  %.pre.i617 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre51.i618 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %.pre52.i619 = load i32, ptr %mode.i494, align 4, !tbaa !232
  br label %if.end27.i625

if.end27.i625:                                    ; preds = %if.then23.i620, %while.body.i614
  %272 = phi i32 [ %.pre52.i619, %if.then23.i620 ], [ %270, %while.body.i614 ]
  %273 = phi i32 [ %.pre51.i618, %if.then23.i620 ], [ %269, %while.body.i614 ]
  %274 = phi i32 [ %.pre.i617, %if.then23.i620 ], [ %268, %while.body.i614 ]
  %shl.i621 = shl i32 %274, 8
  store i32 %shl.i621, ptr %x1.i484, align 8, !tbaa !236
  %shl30.i622 = shl i32 %273, 8
  %add31.i623 = or i32 %shl30.i622, 255
  store i32 %add31.i623, ptr %x2.i485, align 4, !tbaa !237
  %cmp34.i624 = icmp eq i32 %272, 1
  br i1 %cmp34.i624, label %if.then35.i632, label %if.end43.i635

if.then35.i632:                                   ; preds = %if.end27.i625
  %275 = load i32, ptr %x.i496, align 8, !tbaa !238
  %shl37.i626 = shl i32 %275, 8
  %276 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call39.i627 = tail call i32 @getc(ptr noundef %276)
  %and40.i628 = and i32 %call39.i627, 255
  %add41.i629 = or i32 %and40.i628, %shl37.i626
  store i32 %add41.i629, ptr %x.i496, align 8, !tbaa !238
  %.pre53.i630 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre54.i631 = load i32, ptr %x2.i485, align 4, !tbaa !237
  br label %if.end43.i635

if.end43.i635:                                    ; preds = %if.then35.i632, %if.end27.i625
  %277 = phi i32 [ %.pre54.i631, %if.then35.i632 ], [ %add31.i623, %if.end27.i625 ]
  %278 = phi i32 [ %.pre53.i630, %if.then35.i632 ], [ %shl.i621, %if.end27.i625 ]
  %xor.i633 = xor i32 %278, %277
  %cmp20.i634 = icmp ult i32 %xor.i633, 16777216
  br i1 %cmp20.i634, label %while.body.i614, label %_ZN7Encoder4codeEi.exit636, !llvm.loop !255

_ZN7Encoder4codeEi.exit636:                       ; preds = %if.end43.i635, %cond.end.i610
  %279 = phi i32 [ %267, %cond.end.i610 ], [ %277, %if.end43.i635 ]
  %280 = phi i32 [ %266, %cond.end.i610 ], [ %278, %if.end43.i635 ]
  %and.7.i156 = and i32 %call43965, 1
  %281 = load i32, ptr %en, align 8, !tbaa !230
  %cmp.i533 = icmp slt i32 %281, 2048
  %conv.i534 = zext i1 %cmp.i533 to i32
  %add.i535 = add nsw i32 %281, %conv.i534
  %sub.i538 = sub i32 %279, %280
  %shr.i539 = lshr i32 %sub.i538, 12
  %mul.i540 = mul i32 %shr.i539, %add.i535
  %add3.i541 = add i32 %mul.i540, %280
  %and.i542 = and i32 %sub.i538, 4095
  %mul7.i543 = mul i32 %and.i542, %add.i535
  %shr8.i544 = lshr i32 %mul7.i543, 12
  %add9.i545 = add i32 %add3.i541, %shr8.i544
  %282 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp10.i547 = icmp eq i32 %282, 1
  %283 = load i32, ptr %x.i496, align 8
  %cmp11.i549 = icmp ule i32 %283, %add9.i545
  %conv12.i550 = zext i1 %cmp11.i549 to i32
  %storemerge.i551 = select i1 %cmp10.i547, i32 %conv12.i550, i32 %and.7.i156
  store i32 %storemerge.i551, ptr @y, align 4, !tbaa !25
  %tobool.not.i552 = icmp eq i32 %storemerge.i551, 0
  br i1 %tobool.not.i552, label %cond.false.i555, label %cond.true.i553

cond.true.i553:                                   ; preds = %_ZN7Encoder4codeEi.exit636
  store i32 %add9.i545, ptr %x2.i485, align 4, !tbaa !237
  br label %cond.end.i558

cond.false.i555:                                  ; preds = %_ZN7Encoder4codeEi.exit636
  %add14.i554 = add i32 %add9.i545, 1
  store i32 %add14.i554, ptr %x1.i484, align 8, !tbaa !236
  br label %cond.end.i558

cond.end.i558:                                    ; preds = %cond.false.i555, %cond.true.i553
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %en)
  %284 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %285 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %xor49.i556 = xor i32 %285, %284
  %cmp2050.i557 = icmp ult i32 %xor49.i556, 16777216
  br i1 %cmp2050.i557, label %while.body.i562, label %_ZN7Encoder8compressEi.exit162

while.body.i562:                                  ; preds = %cond.end.i558, %if.end43.i583
  %286 = phi i32 [ %296, %if.end43.i583 ], [ %284, %cond.end.i558 ]
  %287 = phi i32 [ %295, %if.end43.i583 ], [ %285, %cond.end.i558 ]
  %288 = load i32, ptr %mode.i494, align 4, !tbaa !232
  %cmp22.i561 = icmp eq i32 %288, 0
  br i1 %cmp22.i561, label %if.then23.i568, label %if.end27.i573

if.then23.i568:                                   ; preds = %while.body.i562
  %shr25.i563 = lshr i32 %287, 24
  %289 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call26.i564 = tail call i32 @putc(i32 noundef %shr25.i563, ptr noundef %289)
  %.pre.i565 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre51.i566 = load i32, ptr %x2.i485, align 4, !tbaa !237
  %.pre52.i567 = load i32, ptr %mode.i494, align 4, !tbaa !232
  br label %if.end27.i573

if.end27.i573:                                    ; preds = %if.then23.i568, %while.body.i562
  %290 = phi i32 [ %.pre52.i567, %if.then23.i568 ], [ %288, %while.body.i562 ]
  %291 = phi i32 [ %.pre51.i566, %if.then23.i568 ], [ %287, %while.body.i562 ]
  %292 = phi i32 [ %.pre.i565, %if.then23.i568 ], [ %286, %while.body.i562 ]
  %shl.i569 = shl i32 %292, 8
  store i32 %shl.i569, ptr %x1.i484, align 8, !tbaa !236
  %shl30.i570 = shl i32 %291, 8
  %add31.i571 = or i32 %shl30.i570, 255
  store i32 %add31.i571, ptr %x2.i485, align 4, !tbaa !237
  %cmp34.i572 = icmp eq i32 %290, 1
  br i1 %cmp34.i572, label %if.then35.i580, label %if.end43.i583

if.then35.i580:                                   ; preds = %if.end27.i573
  %293 = load i32, ptr %x.i496, align 8, !tbaa !238
  %shl37.i574 = shl i32 %293, 8
  %294 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call39.i575 = tail call i32 @getc(ptr noundef %294)
  %and40.i576 = and i32 %call39.i575, 255
  %add41.i577 = or i32 %and40.i576, %shl37.i574
  store i32 %add41.i577, ptr %x.i496, align 8, !tbaa !238
  %.pre53.i578 = load i32, ptr %x1.i484, align 8, !tbaa !236
  %.pre54.i579 = load i32, ptr %x2.i485, align 4, !tbaa !237
  br label %if.end43.i583

if.end43.i583:                                    ; preds = %if.then35.i580, %if.end27.i573
  %295 = phi i32 [ %.pre54.i579, %if.then35.i580 ], [ %add31.i571, %if.end27.i573 ]
  %296 = phi i32 [ %.pre53.i578, %if.then35.i580 ], [ %shl.i569, %if.end27.i573 ]
  %xor.i581 = xor i32 %296, %295
  %cmp20.i582 = icmp ult i32 %xor.i581, 16777216
  br i1 %cmp20.i582, label %while.body.i562, label %_ZN7Encoder8compressEi.exit162, !llvm.loop !255

if.then.i161:                                     ; preds = %_Z11printStatusi.exit133
  %297 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call.i160 = tail call i32 @putc(i32 noundef %call43965, ptr noundef %297)
  br label %_ZN7Encoder8compressEi.exit162

_ZN7Encoder8compressEi.exit162:                   ; preds = %if.end43.i583, %cond.end.i558, %if.then.i161
  %call43 = tail call i32 @getc(ptr noundef nonnull %call8)
  %cmp44.not = icmp eq i32 %call43, -1
  br i1 %cmp44.not, label %if.end49, label %while.body, !llvm.loop !257

if.end49:                                         ; preds = %_ZN7Encoder8compressEi.exit, %_ZN7Encoder8compressEi.exit162, %if.then27, %if.else
  %sub = sub nsw i64 %filesize.addr.0969, %conv15
  %call51 = tail call i32 @fclose(ptr noundef nonnull %call8)
  %indvars.iv.next = add i64 %indvars.iv, %conv
  %cmp = icmp sgt i64 %sub, 0
  br i1 %cmp, label %for.body, label %if.end58, !llvm.loop !258

if.end58:                                         ; preds = %if.end49, %if.end
  %call57 = tail call i32 @fclose(ptr noundef nonnull %call)
  %298 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call.i164 = tail call i64 @ftell(ptr noundef %298)
  %sub60 = sub nsw i64 %call.i164, %call.i
  %call61 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.25, i64 noundef %sub60)
  ret void
}

; Function Attrs: nofree nounwind
declare noalias noundef ptr @fopen(ptr nocapture noundef readonly, ptr nocapture noundef readonly) local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare void @perror(ptr nocapture noundef readonly) local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare noalias noundef ptr @tmpfile() local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare void @rewind(ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef %c) local_unnamed_addr #14 comdat align 2 {
entry:
  %0 = load i32, ptr @level, align 4, !tbaa !25
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %for.body.preheader

for.body.preheader:                               ; preds = %entry
  %shr7 = lshr i32 %c, 7
  %and = and i32 %shr7, 1
  %call3 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef %and)
  %shr7.1 = lshr i32 %c, 6
  %and.1 = and i32 %shr7.1, 1
  %call3.1 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef %and.1)
  %shr7.2 = lshr i32 %c, 5
  %and.2 = and i32 %shr7.2, 1
  %call3.2 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef %and.2)
  %shr7.3 = lshr i32 %c, 4
  %and.3 = and i32 %shr7.3, 1
  %call3.3 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef %and.3)
  %shr7.4 = lshr i32 %c, 3
  %and.4 = and i32 %shr7.4, 1
  %call3.4 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef %and.4)
  %shr7.5 = lshr i32 %c, 2
  %and.5 = and i32 %shr7.5, 1
  %call3.5 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef %and.5)
  %shr7.6 = lshr i32 %c, 1
  %and.6 = and i32 %shr7.6, 1
  %call3.6 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef %and.6)
  %and.7 = and i32 %c, 1
  %call3.7 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef %and.7)
  br label %if.end

if.then:                                          ; preds = %entry
  %archive = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 2
  %1 = load ptr, ptr %archive, align 8, !tbaa !235
  %call = tail call i32 @putc(i32 noundef %c, ptr noundef %1)
  br label %if.end

if.end:                                           ; preds = %for.body.preheader, %if.then
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @fclose(ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef zeroext i1 @_Z7makedirPKc(ptr nocapture noundef readnone %dir) local_unnamed_addr #7 {
entry:
  ret i1 false
}

; Function Attrs: uwtable
define dso_local void @_Z10decompressPKclR7Encoder(ptr noundef %filename, i64 noundef %filesize, ptr noundef nonnull align 8 dereferenceable(40) %en) local_unnamed_addr #5 personality ptr @__gxx_personality_v0 {
entry:
  %path = alloca %class.String, align 8
  %call = tail call noalias ptr @fopen(ptr noundef %filename, ptr noundef nonnull @.str.21)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.else22, label %if.then

if.then:                                          ; preds = %entry
  %call.i = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %filename, i32 noundef 47) #44
  %tobool.not.i = icmp eq ptr %call.i, null
  %add.ptr.i = getelementptr inbounds i8, ptr %call.i, i64 1
  %cond.i = select i1 %tobool.not.i, ptr %filename, ptr %add.ptr.i
  %call2 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.26, ptr noundef %cond.i, i64 noundef %filesize)
  %cmp183 = icmp sgt i64 %filesize, 0
  br i1 %cmp183, label %for.body, label %land.lhs.true11

for.cond.cleanup:                                 ; preds = %if.end
  %0 = and i8 %found.1, 1
  %tobool10.not = icmp eq i8 %0, 0
  br i1 %tobool10.not, label %land.lhs.true11, label %if.end20

for.body:                                         ; preds = %if.then, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end ], [ 0, %if.then ]
  %found.0185 = phi i8 [ %found.1, %if.end ], [ 0, %if.then ]
  %cmp.i = icmp ne i64 %indvars.iv, 0
  %1 = trunc i64 %indvars.iv to i32
  %and.i = and i32 %1, 4095
  %tobool.not.i139 = icmp eq i32 %and.i, 0
  %or.cond.i = and i1 %cmp.i, %tobool.not.i139
  br i1 %or.cond.i, label %if.then.i, label %_Z11printStatusi.exit

if.then.i:                                        ; preds = %for.body
  %call.i140 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %1)
  %2 = load ptr, ptr @stdout, align 8, !tbaa !5
  %call1.i = tail call i32 @fflush(ptr noundef %2)
  br label %_Z11printStatusi.exit

_Z11printStatusi.exit:                            ; preds = %for.body, %if.then.i
  %3 = and i8 %found.0185, 1
  %tobool3.not = icmp ne i8 %3, 0
  br i1 %tobool3.not, label %cond.end.thread, label %cond.end

cond.end.thread:                                  ; preds = %_Z11printStatusi.exit
  %call5204 = tail call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %en)
  br label %if.end

cond.end:                                         ; preds = %_Z11printStatusi.exit
  %call4 = tail call i32 @getc(ptr noundef nonnull %call)
  %call5 = tail call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %cmp6.not = icmp eq i32 %call4, %call5
  %brmerge = or i1 %tobool3.not, %cmp6.not
  br i1 %brmerge, label %if.end, label %if.then8

if.then8:                                         ; preds = %cond.end
  %call9 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.27, i32 noundef %1, i32 noundef %call4, i32 noundef %call5)
  br label %if.end

if.end:                                           ; preds = %cond.end.thread, %cond.end, %if.then8
  %found.1 = phi i8 [ 1, %if.then8 ], [ %found.0185, %cond.end ], [ %found.0185, %cond.end.thread ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %filesize
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !259

land.lhs.true11:                                  ; preds = %if.then, %for.cond.cleanup
  %call12 = tail call i32 @getc(ptr noundef nonnull %call)
  %cmp13.not = icmp eq i32 %call12, -1
  %str.61.str.62 = select i1 %cmp13.not, ptr @str.61, ptr @str.62
  %puts178 = tail call i32 @puts(ptr nonnull dereferenceable(1) %str.61.str.62)
  br label %if.end20

if.end20:                                         ; preds = %land.lhs.true11, %for.cond.cleanup
  %call21 = tail call i32 @fclose(ptr noundef nonnull %call)
  br label %if.end97

if.else22:                                        ; preds = %entry
  %call23 = tail call noalias ptr @fopen(ptr noundef %filename, ptr noundef nonnull @.str.30)
  %tobool24.not = icmp eq ptr %call23, null
  br i1 %tobool24.not, label %if.then25, label %if.then68

if.then25:                                        ; preds = %if.else22
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %path) #39
  call void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %path, ptr noundef %filename)
  %data.i = getelementptr inbounds %class.Array.12, ptr %path, i64 0, i32 3
  br label %for.cond27

for.cond27:                                       ; preds = %for.inc58, %if.then25
  %indvars.iv190 = phi i64 [ %indvars.iv.next191, %for.inc58 ], [ 0, %if.then25 ]
  %4 = load ptr, ptr %data.i, align 8, !tbaa !260
  %arrayidx.i = getelementptr inbounds i8, ptr %4, i64 %indvars.iv190
  %5 = load i8, ptr %arrayidx.i, align 1, !tbaa !9
  switch i8 %5, label %for.inc58 [
    i8 0, label %for.cond.cleanup30
    i8 47, label %if.then40
    i8 92, label %if.then40
  ]

for.cond.cleanup30:                               ; preds = %for.cond27
  %call63 = call noalias ptr @fopen(ptr noundef %filename, ptr noundef nonnull @.str.30)
  %6 = load i32, ptr %path, align 8, !tbaa !262
  %7 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = sub i32 %7, %6
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %8 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %8
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end66

if.then.i.i:                                      ; preds = %for.cond.cleanup30
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %if.end66

if.then40:                                        ; preds = %for.cond27, %for.cond27
  store i8 0, ptr %arrayidx.i, align 1, !tbaa !9
  %9 = load ptr, ptr %data.i, align 8, !tbaa !260
  %arrayidx.i160 = getelementptr inbounds i8, ptr %9, i64 %indvars.iv190
  store i8 %5, ptr %arrayidx.i160, align 1, !tbaa !9
  br label %for.inc58

for.inc58:                                        ; preds = %for.cond27, %if.then40
  %indvars.iv.next191 = add nuw i64 %indvars.iv190, 1
  br label %for.cond27, !llvm.loop !263

if.end66:                                         ; preds = %if.then.i.i, %for.cond.cleanup30
  %ptr.i = getelementptr inbounds %class.Array.12, ptr %path, i64 0, i32 2
  %10 = load ptr, ptr %ptr.i, align 8, !tbaa !264
  call void @free(ptr noundef %10) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %path) #39
  %tobool67.not = icmp eq ptr %call63, null
  br i1 %tobool67.not, label %if.else83, label %if.then68

if.then68:                                        ; preds = %if.else22, %if.end66
  %f.0182 = phi ptr [ %call63, %if.end66 ], [ %call23, %if.else22 ]
  %call69 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.32, ptr noundef %filename, i64 noundef %filesize)
  %cmp73186 = icmp sgt i64 %filesize, 0
  br i1 %cmp73186, label %for.body75, label %for.cond.cleanup74

for.cond.cleanup74:                               ; preds = %_Z11printStatusi.exit168, %if.then68
  %call81 = call i32 @fclose(ptr noundef nonnull %f.0182)
  %puts177 = call i32 @puts(ptr nonnull dereferenceable(1) @str.60)
  br label %if.end97

for.body75:                                       ; preds = %if.then68, %_Z11printStatusi.exit168
  %indvars.iv193 = phi i64 [ %indvars.iv.next194, %_Z11printStatusi.exit168 ], [ 0, %if.then68 ]
  %cmp.i161 = icmp ne i64 %indvars.iv193, 0
  %11 = trunc i64 %indvars.iv193 to i32
  %and.i162 = and i32 %11, 4095
  %tobool.not.i163 = icmp eq i32 %and.i162, 0
  %or.cond.i164 = and i1 %cmp.i161, %tobool.not.i163
  br i1 %or.cond.i164, label %if.then.i167, label %_Z11printStatusi.exit168

if.then.i167:                                     ; preds = %for.body75
  %call.i165 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %11)
  %12 = load ptr, ptr @stdout, align 8, !tbaa !5
  %call1.i166 = call i32 @fflush(ptr noundef %12)
  br label %_Z11printStatusi.exit168

_Z11printStatusi.exit168:                         ; preds = %for.body75, %if.then.i167
  %call76 = call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %call77 = call i32 @putc(i32 noundef %call76, ptr noundef nonnull %f.0182)
  %indvars.iv.next194 = add nuw nsw i64 %indvars.iv193, 1
  %exitcond196.not = icmp eq i64 %indvars.iv.next194, %filesize
  br i1 %exitcond196.not, label %for.cond.cleanup74, label %for.body75, !llvm.loop !265

if.else83:                                        ; preds = %if.end66
  call void @perror(ptr noundef %filename) #45
  %call84 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.34, ptr noundef %filename, i64 noundef %filesize)
  %cmp88188 = icmp sgt i64 %filesize, 0
  br i1 %cmp88188, label %for.body90, label %for.cond.cleanup89

for.cond.cleanup89:                               ; preds = %_Z11printStatusi.exit176, %if.else83
  %puts = call i32 @puts(ptr nonnull dereferenceable(1) @str)
  br label %if.end97

for.body90:                                       ; preds = %if.else83, %_Z11printStatusi.exit176
  %indvars.iv197 = phi i64 [ %indvars.iv.next198, %_Z11printStatusi.exit176 ], [ 0, %if.else83 ]
  %cmp.i169 = icmp ne i64 %indvars.iv197, 0
  %13 = trunc i64 %indvars.iv197 to i32
  %and.i170 = and i32 %13, 4095
  %tobool.not.i171 = icmp eq i32 %and.i170, 0
  %or.cond.i172 = and i1 %cmp.i169, %tobool.not.i171
  br i1 %or.cond.i172, label %if.then.i175, label %_Z11printStatusi.exit176

if.then.i175:                                     ; preds = %for.body90
  %call.i173 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %13)
  %14 = load ptr, ptr @stdout, align 8, !tbaa !5
  %call1.i174 = call i32 @fflush(ptr noundef %14)
  br label %_Z11printStatusi.exit176

_Z11printStatusi.exit176:                         ; preds = %for.body90, %if.then.i175
  %call91 = call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %en)
  %indvars.iv.next198 = add nuw nsw i64 %indvars.iv197, 1
  %exitcond200.not = icmp eq i64 %indvars.iv.next198, %filesize
  br i1 %exitcond200.not, label %for.cond.cleanup89, label %for.body90, !llvm.loop !266

if.end97:                                         ; preds = %for.cond.cleanup74, %for.cond.cleanup89, %if.end20
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef %s) unnamed_addr #5 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %reserved.i.i = getelementptr inbounds %class.Array.12, ptr %this, i64 0, i32 1
  store i32 1, ptr %reserved.i.i, align 4, !tbaa !267
  store i32 1, ptr %this, align 8, !tbaa !262
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i = add nsw i32 %0, 1
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i.not = icmp slt i32 %0, %1
  br i1 %cmp.i.i.i.not, label %_ZN14ProgramChecker5allocEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i

_ZN14ProgramChecker5allocEi.exit.i.i:             ; preds = %if.then.i.i.i, %entry
  %call.i.i = tail call noalias dereferenceable_or_null(1) ptr @calloc(i64 noundef 1, i64 noundef 1) #41
  %ptr5.i.i = getelementptr inbounds %class.Array.12, ptr %this, i64 0, i32 2
  store ptr %call.i.i, ptr %ptr5.i.i, align 8, !tbaa !264
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.then7.i.i, label %_ZN5ArrayIcLi0EEC2Ei.exit

if.then7.i.i:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %exception.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

_ZN5ArrayIcLi0EEC2Ei.exit:                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %data10.i.i = getelementptr inbounds %class.Array.12, ptr %this, i64 0, i32 3
  store ptr %call.i.i, ptr %data10.i.i, align 8, !tbaa !260
  store i32 0, ptr %this, align 8, !tbaa !262
  %2 = load i8, ptr %s, align 1, !tbaa !9
  %tobool.not15.i = icmp eq i8 %2, 0
  br i1 %tobool.not15.i, label %_ZN6StringpLEPKc.exit, label %while.body.i

while.body.i:                                     ; preds = %_ZN5ArrayIcLi0EEC2Ei.exit, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i
  %3 = phi i8 [ %8, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i ], [ %2, %_ZN5ArrayIcLi0EEC2Ei.exit ]
  %s.addr.016.i = phi ptr [ %incdec.ptr.i, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i ], [ %s, %_ZN5ArrayIcLi0EEC2Ei.exit ]
  %incdec.ptr.i = getelementptr inbounds i8, ptr %s.addr.016.i, i64 1
  %4 = load i32, ptr %this, align 8, !tbaa !262
  %5 = load i32, ptr %reserved.i.i, align 4, !tbaa !267
  %cmp.i3.i = icmp eq i32 %4, %5
  br i1 %cmp.i3.i, label %if.then.i4.i, label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i

if.then.i4.i:                                     ; preds = %while.body.i
  %mul.i.i = shl nsw i32 %4, 1
  %cond.i.i.i = tail call i32 @llvm.smax.i32(i32 %mul.i.i, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %cond.i.i.i)
          to label %.noexc unwind label %lpad.loopexit

.noexc:                                           ; preds = %if.then.i4.i
  store i32 %4, ptr %this, align 8, !tbaa !262
  %.pre.i = load i8, ptr %s.addr.016.i, align 1, !tbaa !9
  br label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i

_ZN5ArrayIcLi0EE9push_backERKc.exit.i:            ; preds = %.noexc, %while.body.i
  %6 = phi i8 [ %3, %while.body.i ], [ %.pre.i, %.noexc ]
  %7 = load ptr, ptr %data10.i.i, align 8, !tbaa !260
  %inc.i.i = add nsw i32 %4, 1
  store i32 %inc.i.i, ptr %this, align 8, !tbaa !262
  %idxprom.i.i = sext i32 %4 to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %7, i64 %idxprom.i.i
  store i8 %6, ptr %arrayidx.i.i, align 1, !tbaa !9
  %8 = load i8, ptr %incdec.ptr.i, align 1, !tbaa !9
  %tobool.not.i = icmp eq i8 %8, 0
  br i1 %tobool.not.i, label %while.end.i, label %while.body.i, !llvm.loop !268

while.end.i:                                      ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i
  %.pre17.i = load i32, ptr %this, align 8, !tbaa !262
  %.pre = load i32, ptr %reserved.i.i, align 4, !tbaa !267
  %cmp.i6.i = icmp eq i32 %.pre17.i, %.pre
  br i1 %cmp.i6.i, label %if.then.i9.i, label %_ZN6StringpLEPKc.exit

if.then.i9.i:                                     ; preds = %while.end.i
  %mul.i7.i = shl nsw i32 %.pre, 1
  %cond.i.i8.i = tail call i32 @llvm.smax.i32(i32 %mul.i7.i, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %cond.i.i8.i)
          to label %_ZN6StringpLEPKc.exit unwind label %lpad.loopexit.split-lp

_ZN6StringpLEPKc.exit:                            ; preds = %_ZN5ArrayIcLi0EEC2Ei.exit, %if.then.i9.i, %while.end.i
  %9 = phi i32 [ %.pre17.i, %if.then.i9.i ], [ %.pre17.i, %while.end.i ], [ 0, %_ZN5ArrayIcLi0EEC2Ei.exit ]
  %10 = load ptr, ptr %data10.i.i, align 8, !tbaa !260
  %inc.i11.i = add nsw i32 %9, 1
  store i32 %inc.i11.i, ptr %this, align 8, !tbaa !262
  %idxprom.i12.i = sext i32 %9 to i64
  %arrayidx.i13.i = getelementptr inbounds i8, ptr %10, i64 %idxprom.i12.i
  store i8 0, ptr %arrayidx.i13.i, align 1, !tbaa !9
  ret void

lpad.loopexit:                                    ; preds = %if.then.i4.i
  %lpad.loopexit5 = landingpad { ptr, i32 }
          cleanup
  br label %lpad

lpad.loopexit.split-lp:                           ; preds = %if.then.i9.i
  %lpad.loopexit.split-lp6 = landingpad { ptr, i32 }
          cleanup
  br label %lpad

lpad:                                             ; preds = %lpad.loopexit.split-lp, %lpad.loopexit
  %lpad.phi = phi { ptr, i32 } [ %lpad.loopexit5, %lpad.loopexit ], [ %lpad.loopexit.split-lp6, %lpad.loopexit.split-lp ]
  tail call void @_ZN5ArrayIcLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) #39
  resume { ptr, i32 } %lpad.phi
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIcLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !262
  %1 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i = sub i32 %1, %0
  store i32 %add.i, ptr @programChecker, align 8, !tbaa !13
  %2 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i = icmp sgt i32 %add.i, %2
  br i1 %cmp.i, label %if.then.i, label %_ZN14ProgramChecker5allocEi.exit

if.then.i:                                        ; preds = %entry
  store i32 %add.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit

_ZN14ProgramChecker5allocEi.exit:                 ; preds = %entry, %if.then.i
  %ptr = getelementptr inbounds %class.Array.12, ptr %this, i64 0, i32 2
  %3 = load ptr, ptr %ptr, align 8, !tbaa !264
  tail call void @free(ptr noundef %3) #39
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef ptr @_Z7getlineP8_IO_FILE(ptr nocapture noundef %f) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZ7getlineP8_IO_FILEE1s acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %while.cond.preheader, !prof !110

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ7getlineP8_IO_FILEE1s) #39
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %while.cond.preheader, label %init

init:                                             ; preds = %init.check
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ7getlineP8_IO_FILEE1s, ptr noundef nonnull @.str.36)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init
  %2 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIcLi0EED2Ev, ptr nonnull @_ZZ7getlineP8_IO_FILEE1s, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ7getlineP8_IO_FILEE1s) #39
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %invoke.cont, %init.check, %entry
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %while.cond.preheader, %if.then6
  %len.0.ph = phi i32 [ 0, %while.cond.preheader ], [ %inc, %if.then6 ]
  %mul = shl nuw nsw i32 %len.0.ph, 1
  %add = or i32 %mul, 1
  br label %while.cond

while.cond:                                       ; preds = %while.cond.outer, %if.end
  %call = tail call i32 @getc(ptr noundef %f)
  switch i32 %call, label %while.body [
    i32 -1, label %while.end
    i32 26, label %while.end
    i32 10, label %while.end
  ]

while.body:                                       ; preds = %while.cond
  %3 = load i32, ptr @_ZZ7getlineP8_IO_FILEE1s, align 8, !tbaa !262
  %cmp4.not = icmp slt i32 %len.0.ph, %3
  br i1 %cmp4.not, label %if.end, label %if.then

if.then:                                          ; preds = %while.body
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ7getlineP8_IO_FILEE1s, i32 noundef %add)
  br label %if.end

lpad:                                             ; preds = %init
  %4 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ7getlineP8_IO_FILEE1s) #39
  resume { ptr, i32 } %4

if.end:                                           ; preds = %if.then, %while.body
  %cmp5.not = icmp eq i32 %call, 13
  br i1 %cmp5.not, label %while.cond, label %if.then6, !llvm.loop !269

if.then6:                                         ; preds = %if.end
  %conv = trunc i32 %call to i8
  %inc = add nuw nsw i32 %len.0.ph, 1
  %5 = load ptr, ptr getelementptr inbounds (%class.String, ptr @_ZZ7getlineP8_IO_FILEE1s, i64 0, i32 0, i32 3), align 8, !tbaa !260
  %idxprom.i = zext i32 %len.0.ph to i64
  %arrayidx.i = getelementptr inbounds i8, ptr %5, i64 %idxprom.i
  store i8 %conv, ptr %arrayidx.i, align 1, !tbaa !9
  br label %while.cond.outer, !llvm.loop !269

while.end:                                        ; preds = %while.cond, %while.cond, %while.cond
  %6 = load i32, ptr @_ZZ7getlineP8_IO_FILEE1s, align 8, !tbaa !262
  %cmp10.not = icmp slt i32 %len.0.ph, %6
  br i1 %cmp10.not, label %if.end13, label %if.then11

if.then11:                                        ; preds = %while.end
  %add12 = add nuw nsw i32 %len.0.ph, 1
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ7getlineP8_IO_FILEE1s, i32 noundef %add12)
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %while.end
  %7 = load ptr, ptr getelementptr inbounds (%class.String, ptr @_ZZ7getlineP8_IO_FILEE1s, i64 0, i32 0, i32 3), align 8, !tbaa !260
  %idxprom.i33 = zext i32 %len.0.ph to i64
  %arrayidx.i34 = getelementptr inbounds i8, ptr %7, i64 %idxprom.i33
  store i8 0, ptr %arrayidx.i34, align 1, !tbaa !9
  switch i32 %call, label %if.else [
    i32 -1, label %cleanup
    i32 26, label %cleanup
  ]

if.else:                                          ; preds = %if.end13
  %8 = load ptr, ptr getelementptr inbounds (%class.String, ptr @_ZZ7getlineP8_IO_FILEE1s, i64 0, i32 0, i32 3), align 8, !tbaa !260
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end13, %if.else
  %retval.0 = phi ptr [ %8, %if.else ], [ null, %if.end13 ], [ null, %if.end13 ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %i) local_unnamed_addr #14 comdat align 2 {
entry:
  %reserved = getelementptr inbounds %class.Array.12, ptr %this, i64 0, i32 1
  %0 = load i32, ptr %reserved, align 4, !tbaa !267
  %cmp.not = icmp slt i32 %0, %i
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 %i, ptr %this, align 8, !tbaa !262
  br label %return

if.end:                                           ; preds = %entry
  %ptr = getelementptr inbounds %class.Array.12, ptr %this, i64 0, i32 2
  %1 = load ptr, ptr %ptr, align 8, !tbaa !264
  %data = getelementptr inbounds %class.Array.12, ptr %this, i64 0, i32 3
  %2 = load ptr, ptr %data, align 8, !tbaa !260
  %3 = load i32, ptr %this, align 8, !tbaa !262
  store i32 %i, ptr %reserved, align 4, !tbaa !267
  store i32 %i, ptr %this, align 8, !tbaa !262
  %cmp.i = icmp slt i32 %i, 1
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr, i8 0, i64 16, i1 false)
  br label %_ZN5ArrayIcLi0EE6createEi.exit

if.end.i:                                         ; preds = %if.end
  %conv.i = zext i32 %i to i64
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = add nsw i32 %4, %i
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %5
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN14ProgramChecker5allocEi.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i

_ZN14ProgramChecker5allocEi.exit.i:               ; preds = %if.then.i.i, %if.end.i
  %call.i = tail call noalias ptr @calloc(i64 noundef %conv.i, i64 noundef 1) #41
  store ptr %call.i, ptr %ptr, align 8, !tbaa !264
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then7.i, label %if.end8.i

if.then7.i:                                       ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  %exception.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end8.i:                                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  store ptr %call.i, ptr %data, align 8, !tbaa !260
  br label %_ZN5ArrayIcLi0EE6createEi.exit

_ZN5ArrayIcLi0EE6createEi.exit:                   ; preds = %if.then.i, %if.end8.i
  %6 = phi ptr [ null, %if.then.i ], [ %call.i, %if.end8.i ]
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %return, label %if.then3

if.then3:                                         ; preds = %_ZN5ArrayIcLi0EE6createEi.exit
  %tobool4.not = icmp eq ptr %2, null
  br i1 %tobool4.not, label %if.end11, label %if.then5

if.then5:                                         ; preds = %if.then3
  %cond.i = tail call i32 @llvm.smin.i32(i32 %i, i32 %3)
  %conv = sext i32 %cond.i to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %6, ptr nonnull align 1 %2, i64 %conv, i1 false)
  %7 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i = sub i32 %7, %i
  store i32 %add.i, ptr @programChecker, align 8, !tbaa !13
  %8 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i19 = icmp sgt i32 %add.i, %8
  br i1 %cmp.i19, label %if.then.i20, label %if.end11

if.then.i20:                                      ; preds = %if.then5
  store i32 %add.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %if.end11

if.end11:                                         ; preds = %if.then.i20, %if.then5, %if.then3
  tail call void @free(ptr noundef nonnull %1) #39
  br label %return

return:                                           ; preds = %_ZN5ArrayIcLi0EE6createEi.exit, %if.end11, %if.then
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z7putsizeR6StringS0_PKci(ptr noundef nonnull align 8 dereferenceable(24) %archive, ptr noundef nonnull align 8 dereferenceable(24) %s, ptr nocapture noundef readonly %fname, i32 noundef %base) local_unnamed_addr #14 {
entry:
  %call = tail call noalias ptr @fopen(ptr noundef %fname, ptr noundef nonnull @.str.21)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.end6, label %if.then

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @fseek(ptr noundef nonnull %call, i64 noundef 0, i32 noundef 2)
  %call2 = tail call i64 @ftell(ptr noundef nonnull %call)
  %cmp = icmp sgt i64 %call2, -1
  br i1 %cmp, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %call4 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @_ZZ7putsizeR6StringS0_PKciE3blk, ptr noundef nonnull dereferenceable(1) @.str.37, i64 noundef %call2) #39
  %0 = load i32, ptr %archive, align 8, !tbaa !262
  %cmp.i.i = icmp sgt i32 %0, 0
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i

if.then.i.i:                                      ; preds = %if.then3
  %dec.i.i = add nsw i32 %0, -1
  store i32 %dec.i.i, ptr %archive, align 8, !tbaa !262
  br label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i

_ZN5ArrayIcLi0EE8pop_backEv.exit.i:               ; preds = %if.then.i.i, %if.then3
  %1 = phi i32 [ %0, %if.then3 ], [ %dec.i.i, %if.then.i.i ]
  %2 = load i8, ptr @_ZZ7putsizeR6StringS0_PKciE3blk, align 16, !tbaa !9
  %tobool.not15.i = icmp eq i8 %2, 0
  br i1 %tobool.not15.i, label %while.end.i, label %while.body.lr.ph.i

while.body.lr.ph.i:                               ; preds = %_ZN5ArrayIcLi0EE8pop_backEv.exit.i
  %reserved.i.i = getelementptr inbounds %class.Array.12, ptr %archive, i64 0, i32 1
  %data.i.i = getelementptr inbounds %class.Array.12, ptr %archive, i64 0, i32 3
  br label %while.body.i

while.body.i:                                     ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i, %while.body.lr.ph.i
  %3 = phi i8 [ %2, %while.body.lr.ph.i ], [ %8, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i ]
  %s.addr.016.i = phi ptr [ @_ZZ7putsizeR6StringS0_PKciE3blk, %while.body.lr.ph.i ], [ %incdec.ptr.i, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i ]
  %incdec.ptr.i = getelementptr inbounds i8, ptr %s.addr.016.i, i64 1
  %4 = load i32, ptr %archive, align 8, !tbaa !262
  %5 = load i32, ptr %reserved.i.i, align 4, !tbaa !267
  %cmp.i3.i = icmp eq i32 %4, %5
  br i1 %cmp.i3.i, label %if.then.i4.i, label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i

if.then.i4.i:                                     ; preds = %while.body.i
  %mul.i.i = shl nsw i32 %4, 1
  %cond.i.i.i = tail call i32 @llvm.smax.i32(i32 %mul.i.i, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %archive, i32 noundef %cond.i.i.i)
  store i32 %4, ptr %archive, align 8, !tbaa !262
  %.pre.i = load i8, ptr %s.addr.016.i, align 1, !tbaa !9
  br label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i

_ZN5ArrayIcLi0EE9push_backERKc.exit.i:            ; preds = %if.then.i4.i, %while.body.i
  %6 = phi i8 [ %3, %while.body.i ], [ %.pre.i, %if.then.i4.i ]
  %7 = load ptr, ptr %data.i.i, align 8, !tbaa !260
  %inc.i.i = add nsw i32 %4, 1
  store i32 %inc.i.i, ptr %archive, align 8, !tbaa !262
  %idxprom.i.i = sext i32 %4 to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %7, i64 %idxprom.i.i
  store i8 %6, ptr %arrayidx.i.i, align 1, !tbaa !9
  %8 = load i8, ptr %incdec.ptr.i, align 1, !tbaa !9
  %tobool.not.i = icmp eq i8 %8, 0
  br i1 %tobool.not.i, label %while.end.loopexit.i, label %while.body.i, !llvm.loop !268

while.end.loopexit.i:                             ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i
  %.pre17.i = load i32, ptr %archive, align 8, !tbaa !262
  br label %while.end.i

while.end.i:                                      ; preds = %while.end.loopexit.i, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i
  %9 = phi i32 [ %.pre17.i, %while.end.loopexit.i ], [ %1, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i ]
  %reserved.i5.i = getelementptr inbounds %class.Array.12, ptr %archive, i64 0, i32 1
  %10 = load i32, ptr %reserved.i5.i, align 4, !tbaa !267
  %cmp.i6.i = icmp eq i32 %9, %10
  br i1 %cmp.i6.i, label %if.then.i9.i, label %_ZN6StringpLEPKc.exit

if.then.i9.i:                                     ; preds = %while.end.i
  %mul.i7.i = shl nsw i32 %9, 1
  %cond.i.i8.i = tail call i32 @llvm.smax.i32(i32 %mul.i7.i, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %archive, i32 noundef %cond.i.i8.i)
  br label %_ZN6StringpLEPKc.exit

_ZN6StringpLEPKc.exit:                            ; preds = %while.end.i, %if.then.i9.i
  %data.i10.i = getelementptr inbounds %class.Array.12, ptr %archive, i64 0, i32 3
  %11 = load ptr, ptr %data.i10.i, align 8, !tbaa !260
  %inc.i11.i = add nsw i32 %9, 1
  store i32 %inc.i11.i, ptr %archive, align 8, !tbaa !262
  %idxprom.i12.i = sext i32 %9 to i64
  %arrayidx.i13.i = getelementptr inbounds i8, ptr %11, i64 %idxprom.i12.i
  store i8 0, ptr %arrayidx.i13.i, align 1, !tbaa !9
  %idx.ext = sext i32 %base to i64
  %add.ptr = getelementptr inbounds i8, ptr %fname, i64 %idx.ext
  %12 = load i32, ptr %archive, align 8, !tbaa !262
  %cmp.i.i17 = icmp sgt i32 %12, 0
  br i1 %cmp.i.i17, label %if.then.i.i19, label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i21

if.then.i.i19:                                    ; preds = %_ZN6StringpLEPKc.exit
  %dec.i.i18 = add nsw i32 %12, -1
  store i32 %dec.i.i18, ptr %archive, align 8, !tbaa !262
  br label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i21

_ZN5ArrayIcLi0EE8pop_backEv.exit.i21:             ; preds = %if.then.i.i19, %_ZN6StringpLEPKc.exit
  %13 = phi i32 [ %12, %_ZN6StringpLEPKc.exit ], [ %dec.i.i18, %if.then.i.i19 ]
  %14 = load i8, ptr %add.ptr, align 1, !tbaa !9
  %tobool.not15.i20 = icmp eq i8 %14, 0
  br i1 %tobool.not15.i20, label %while.end.i42, label %while.body.i28

while.body.i28:                                   ; preds = %_ZN5ArrayIcLi0EE8pop_backEv.exit.i21, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i37
  %15 = phi i8 [ %20, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i37 ], [ %14, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i21 ]
  %s.addr.016.i25 = phi ptr [ %incdec.ptr.i26, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i37 ], [ %add.ptr, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i21 ]
  %incdec.ptr.i26 = getelementptr inbounds i8, ptr %s.addr.016.i25, i64 1
  %16 = load i32, ptr %archive, align 8, !tbaa !262
  %17 = load i32, ptr %reserved.i5.i, align 4, !tbaa !267
  %cmp.i3.i27 = icmp eq i32 %16, %17
  br i1 %cmp.i3.i27, label %if.then.i4.i32, label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i37

if.then.i4.i32:                                   ; preds = %while.body.i28
  %mul.i.i29 = shl nsw i32 %16, 1
  %cond.i.i.i30 = tail call i32 @llvm.smax.i32(i32 %mul.i.i29, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %archive, i32 noundef %cond.i.i.i30)
  store i32 %16, ptr %archive, align 8, !tbaa !262
  %.pre.i31 = load i8, ptr %s.addr.016.i25, align 1, !tbaa !9
  br label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i37

_ZN5ArrayIcLi0EE9push_backERKc.exit.i37:          ; preds = %if.then.i4.i32, %while.body.i28
  %18 = phi i8 [ %15, %while.body.i28 ], [ %.pre.i31, %if.then.i4.i32 ]
  %19 = load ptr, ptr %data.i10.i, align 8, !tbaa !260
  %inc.i.i33 = add nsw i32 %16, 1
  store i32 %inc.i.i33, ptr %archive, align 8, !tbaa !262
  %idxprom.i.i34 = sext i32 %16 to i64
  %arrayidx.i.i35 = getelementptr inbounds i8, ptr %19, i64 %idxprom.i.i34
  store i8 %18, ptr %arrayidx.i.i35, align 1, !tbaa !9
  %20 = load i8, ptr %incdec.ptr.i26, align 1, !tbaa !9
  %tobool.not.i36 = icmp eq i8 %20, 0
  br i1 %tobool.not.i36, label %while.end.loopexit.i39, label %while.body.i28, !llvm.loop !268

while.end.loopexit.i39:                           ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i37
  %.pre17.i38 = load i32, ptr %archive, align 8, !tbaa !262
  br label %while.end.i42

while.end.i42:                                    ; preds = %while.end.loopexit.i39, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i21
  %21 = phi i32 [ %.pre17.i38, %while.end.loopexit.i39 ], [ %13, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i21 ]
  %22 = load i32, ptr %reserved.i5.i, align 4, !tbaa !267
  %cmp.i6.i41 = icmp eq i32 %21, %22
  br i1 %cmp.i6.i41, label %if.then.i9.i45, label %_ZN6StringpLEPKc.exit50

if.then.i9.i45:                                   ; preds = %while.end.i42
  %mul.i7.i43 = shl nsw i32 %21, 1
  %cond.i.i8.i44 = tail call i32 @llvm.smax.i32(i32 %mul.i7.i43, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %archive, i32 noundef %cond.i.i8.i44)
  br label %_ZN6StringpLEPKc.exit50

_ZN6StringpLEPKc.exit50:                          ; preds = %while.end.i42, %if.then.i9.i45
  %23 = load ptr, ptr %data.i10.i, align 8, !tbaa !260
  %inc.i11.i47 = add nsw i32 %21, 1
  store i32 %inc.i11.i47, ptr %archive, align 8, !tbaa !262
  %idxprom.i12.i48 = sext i32 %21 to i64
  %arrayidx.i13.i49 = getelementptr inbounds i8, ptr %23, i64 %idxprom.i12.i48
  store i8 0, ptr %arrayidx.i13.i49, align 1, !tbaa !9
  %24 = load i32, ptr %archive, align 8, !tbaa !262
  %cmp.i.i51 = icmp sgt i32 %24, 0
  br i1 %cmp.i.i51, label %if.then.i.i53, label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i54

if.then.i.i53:                                    ; preds = %_ZN6StringpLEPKc.exit50
  %dec.i.i52 = add nsw i32 %24, -1
  store i32 %dec.i.i52, ptr %archive, align 8, !tbaa !262
  br label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i54

_ZN5ArrayIcLi0EE8pop_backEv.exit.i54:             ; preds = %if.then.i.i53, %_ZN6StringpLEPKc.exit50
  %25 = phi i32 [ %dec.i.i52, %if.then.i.i53 ], [ %24, %_ZN6StringpLEPKc.exit50 ]
  %26 = load i32, ptr %reserved.i5.i, align 4, !tbaa !267
  %cmp.i3.i60 = icmp eq i32 %25, %26
  br i1 %cmp.i3.i60, label %if.then.i4.i65, label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i70

if.then.i4.i65:                                   ; preds = %_ZN5ArrayIcLi0EE8pop_backEv.exit.i54
  %mul.i.i62 = shl nsw i32 %25, 1
  %cond.i.i.i63 = tail call i32 @llvm.smax.i32(i32 %mul.i.i62, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %archive, i32 noundef %cond.i.i.i63)
  br label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i70

_ZN5ArrayIcLi0EE9push_backERKc.exit.i70:          ; preds = %if.then.i4.i65, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i54
  %27 = load ptr, ptr %data.i10.i, align 8, !tbaa !260
  %inc.i.i66 = add nsw i32 %25, 1
  store i32 %inc.i.i66, ptr %archive, align 8, !tbaa !262
  %idxprom.i.i67 = sext i32 %25 to i64
  %arrayidx.i.i68 = getelementptr inbounds i8, ptr %27, i64 %idxprom.i.i67
  store i8 13, ptr %arrayidx.i.i68, align 1, !tbaa !9
  %28 = load i32, ptr %archive, align 8, !tbaa !262
  %29 = load i32, ptr %reserved.i5.i, align 4, !tbaa !267
  %cmp.i3.i60.1 = icmp eq i32 %28, %29
  br i1 %cmp.i3.i60.1, label %if.then.i4.i65.1, label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i70.1

if.then.i4.i65.1:                                 ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i70
  %mul.i.i62.1 = shl nsw i32 %28, 1
  %cond.i.i.i63.1 = tail call i32 @llvm.smax.i32(i32 %mul.i.i62.1, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %archive, i32 noundef %cond.i.i.i63.1)
  br label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i70.1

_ZN5ArrayIcLi0EE9push_backERKc.exit.i70.1:        ; preds = %if.then.i4.i65.1, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i70
  %30 = load ptr, ptr %data.i10.i, align 8, !tbaa !260
  %inc.i.i66.1 = add nsw i32 %28, 1
  store i32 %inc.i.i66.1, ptr %archive, align 8, !tbaa !262
  %idxprom.i.i67.1 = sext i32 %28 to i64
  %arrayidx.i.i68.1 = getelementptr inbounds i8, ptr %30, i64 %idxprom.i.i67.1
  store i8 10, ptr %arrayidx.i.i68.1, align 1, !tbaa !9
  %.pre17.i71 = load i32, ptr %archive, align 8, !tbaa !262
  %31 = load i32, ptr %reserved.i5.i, align 4, !tbaa !267
  %cmp.i6.i74 = icmp eq i32 %.pre17.i71, %31
  br i1 %cmp.i6.i74, label %if.then.i9.i78, label %_ZN6StringpLEPKc.exit83

if.then.i9.i78:                                   ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i70.1
  %mul.i7.i76 = shl nsw i32 %.pre17.i71, 1
  %cond.i.i8.i77 = tail call i32 @llvm.smax.i32(i32 %mul.i7.i76, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %archive, i32 noundef %cond.i.i8.i77)
  br label %_ZN6StringpLEPKc.exit83

_ZN6StringpLEPKc.exit83:                          ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i70.1, %if.then.i9.i78
  %32 = load ptr, ptr %data.i10.i, align 8, !tbaa !260
  %inc.i11.i80 = add nsw i32 %.pre17.i71, 1
  store i32 %inc.i11.i80, ptr %archive, align 8, !tbaa !262
  %idxprom.i12.i81 = sext i32 %.pre17.i71 to i64
  %arrayidx.i13.i82 = getelementptr inbounds i8, ptr %32, i64 %idxprom.i12.i81
  store i8 0, ptr %arrayidx.i13.i82, align 1, !tbaa !9
  %33 = load i32, ptr %s, align 8, !tbaa !262
  %cmp.i.i84 = icmp sgt i32 %33, 0
  br i1 %cmp.i.i84, label %if.then.i.i86, label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i88

if.then.i.i86:                                    ; preds = %_ZN6StringpLEPKc.exit83
  %dec.i.i85 = add nsw i32 %33, -1
  store i32 %dec.i.i85, ptr %s, align 8, !tbaa !262
  br label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i88

_ZN5ArrayIcLi0EE8pop_backEv.exit.i88:             ; preds = %if.then.i.i86, %_ZN6StringpLEPKc.exit83
  %34 = phi i32 [ %33, %_ZN6StringpLEPKc.exit83 ], [ %dec.i.i85, %if.then.i.i86 ]
  %35 = load i8, ptr %fname, align 1, !tbaa !9
  %tobool.not15.i87 = icmp eq i8 %35, 0
  br i1 %tobool.not15.i87, label %while.end.i109, label %while.body.lr.ph.i91

while.body.lr.ph.i91:                             ; preds = %_ZN5ArrayIcLi0EE8pop_backEv.exit.i88
  %reserved.i.i89 = getelementptr inbounds %class.Array.12, ptr %s, i64 0, i32 1
  %data.i.i90 = getelementptr inbounds %class.Array.12, ptr %s, i64 0, i32 3
  br label %while.body.i95

while.body.i95:                                   ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i104, %while.body.lr.ph.i91
  %36 = phi i8 [ %35, %while.body.lr.ph.i91 ], [ %41, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i104 ]
  %s.addr.016.i92 = phi ptr [ %fname, %while.body.lr.ph.i91 ], [ %incdec.ptr.i93, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i104 ]
  %incdec.ptr.i93 = getelementptr inbounds i8, ptr %s.addr.016.i92, i64 1
  %37 = load i32, ptr %s, align 8, !tbaa !262
  %38 = load i32, ptr %reserved.i.i89, align 4, !tbaa !267
  %cmp.i3.i94 = icmp eq i32 %37, %38
  br i1 %cmp.i3.i94, label %if.then.i4.i99, label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i104

if.then.i4.i99:                                   ; preds = %while.body.i95
  %mul.i.i96 = shl nsw i32 %37, 1
  %cond.i.i.i97 = tail call i32 @llvm.smax.i32(i32 %mul.i.i96, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %s, i32 noundef %cond.i.i.i97)
  store i32 %37, ptr %s, align 8, !tbaa !262
  %.pre.i98 = load i8, ptr %s.addr.016.i92, align 1, !tbaa !9
  br label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i104

_ZN5ArrayIcLi0EE9push_backERKc.exit.i104:         ; preds = %if.then.i4.i99, %while.body.i95
  %39 = phi i8 [ %36, %while.body.i95 ], [ %.pre.i98, %if.then.i4.i99 ]
  %40 = load ptr, ptr %data.i.i90, align 8, !tbaa !260
  %inc.i.i100 = add nsw i32 %37, 1
  store i32 %inc.i.i100, ptr %s, align 8, !tbaa !262
  %idxprom.i.i101 = sext i32 %37 to i64
  %arrayidx.i.i102 = getelementptr inbounds i8, ptr %40, i64 %idxprom.i.i101
  store i8 %39, ptr %arrayidx.i.i102, align 1, !tbaa !9
  %41 = load i8, ptr %incdec.ptr.i93, align 1, !tbaa !9
  %tobool.not.i103 = icmp eq i8 %41, 0
  br i1 %tobool.not.i103, label %while.end.loopexit.i106, label %while.body.i95, !llvm.loop !268

while.end.loopexit.i106:                          ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i104
  %.pre17.i105 = load i32, ptr %s, align 8, !tbaa !262
  br label %while.end.i109

while.end.i109:                                   ; preds = %while.end.loopexit.i106, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i88
  %42 = phi i32 [ %.pre17.i105, %while.end.loopexit.i106 ], [ %34, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i88 ]
  %reserved.i5.i107 = getelementptr inbounds %class.Array.12, ptr %s, i64 0, i32 1
  %43 = load i32, ptr %reserved.i5.i107, align 4, !tbaa !267
  %cmp.i6.i108 = icmp eq i32 %42, %43
  br i1 %cmp.i6.i108, label %if.then.i9.i112, label %_ZN6StringpLEPKc.exit117

if.then.i9.i112:                                  ; preds = %while.end.i109
  %mul.i7.i110 = shl nsw i32 %42, 1
  %cond.i.i8.i111 = tail call i32 @llvm.smax.i32(i32 %mul.i7.i110, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %s, i32 noundef %cond.i.i8.i111)
  br label %_ZN6StringpLEPKc.exit117

_ZN6StringpLEPKc.exit117:                         ; preds = %while.end.i109, %if.then.i9.i112
  %data.i10.i113 = getelementptr inbounds %class.Array.12, ptr %s, i64 0, i32 3
  %44 = load ptr, ptr %data.i10.i113, align 8, !tbaa !260
  %inc.i11.i114 = add nsw i32 %42, 1
  store i32 %inc.i11.i114, ptr %s, align 8, !tbaa !262
  %idxprom.i12.i115 = sext i32 %42 to i64
  %arrayidx.i13.i116 = getelementptr inbounds i8, ptr %44, i64 %idxprom.i12.i115
  store i8 0, ptr %arrayidx.i13.i116, align 1, !tbaa !9
  %45 = load i32, ptr %s, align 8, !tbaa !262
  %cmp.i.i118 = icmp sgt i32 %45, 0
  br i1 %cmp.i.i118, label %if.then.i.i120, label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i121

if.then.i.i120:                                   ; preds = %_ZN6StringpLEPKc.exit117
  %dec.i.i119 = add nsw i32 %45, -1
  store i32 %dec.i.i119, ptr %s, align 8, !tbaa !262
  br label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i121

_ZN5ArrayIcLi0EE8pop_backEv.exit.i121:            ; preds = %if.then.i.i120, %_ZN6StringpLEPKc.exit117
  %46 = phi i32 [ %dec.i.i119, %if.then.i.i120 ], [ %45, %_ZN6StringpLEPKc.exit117 ]
  %47 = load i32, ptr %reserved.i5.i107, align 4, !tbaa !267
  %cmp.i3.i127 = icmp eq i32 %46, %47
  br i1 %cmp.i3.i127, label %if.then.i4.i132, label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i137

if.then.i4.i132:                                  ; preds = %_ZN5ArrayIcLi0EE8pop_backEv.exit.i121
  %mul.i.i129 = shl nsw i32 %46, 1
  %cond.i.i.i130 = tail call i32 @llvm.smax.i32(i32 %mul.i.i129, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %s, i32 noundef %cond.i.i.i130)
  br label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i137

_ZN5ArrayIcLi0EE9push_backERKc.exit.i137:         ; preds = %if.then.i4.i132, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i121
  %48 = load ptr, ptr %data.i10.i113, align 8, !tbaa !260
  %inc.i.i133 = add nsw i32 %46, 1
  store i32 %inc.i.i133, ptr %s, align 8, !tbaa !262
  %idxprom.i.i134 = sext i32 %46 to i64
  %arrayidx.i.i135 = getelementptr inbounds i8, ptr %48, i64 %idxprom.i.i134
  store i8 10, ptr %arrayidx.i.i135, align 1, !tbaa !9
  %.pre17.i138 = load i32, ptr %s, align 8, !tbaa !262
  %49 = load i32, ptr %reserved.i5.i107, align 4, !tbaa !267
  %cmp.i6.i141 = icmp eq i32 %.pre17.i138, %49
  br i1 %cmp.i6.i141, label %if.then.i9.i145, label %_ZN6StringpLEPKc.exit150

if.then.i9.i145:                                  ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i137
  %mul.i7.i143 = shl nsw i32 %.pre17.i138, 1
  %cond.i.i8.i144 = tail call i32 @llvm.smax.i32(i32 %mul.i7.i143, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %s, i32 noundef %cond.i.i8.i144)
  br label %_ZN6StringpLEPKc.exit150

_ZN6StringpLEPKc.exit150:                         ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i137, %if.then.i9.i145
  %50 = load ptr, ptr %data.i10.i113, align 8, !tbaa !260
  %inc.i11.i147 = add nsw i32 %.pre17.i138, 1
  store i32 %inc.i11.i147, ptr %s, align 8, !tbaa !262
  %idxprom.i12.i148 = sext i32 %.pre17.i138 to i64
  %arrayidx.i13.i149 = getelementptr inbounds i8, ptr %50, i64 %idxprom.i12.i148
  store i8 0, ptr %arrayidx.i13.i149, align 1, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %_ZN6StringpLEPKc.exit150, %if.then
  %result.0 = phi i32 [ 1, %_ZN6StringpLEPKc.exit150 ], [ 0, %if.then ]
  %call5 = tail call i32 @fclose(ptr noundef nonnull %call)
  br label %if.end6

if.end6:                                          ; preds = %if.end, %entry
  %result.1 = phi i32 [ %result.0, %if.end ], [ 0, %entry ]
  ret i32 %result.1
}

; Function Attrs: nofree nounwind
declare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z6expandR6StringS0_PKci(ptr noundef nonnull align 8 dereferenceable(24) %archive, ptr noundef nonnull align 8 dereferenceable(24) %s, ptr nocapture noundef readonly %fname, i32 noundef %base) local_unnamed_addr #14 {
entry:
  %call = tail call noundef i32 @_Z7putsizeR6StringS0_PKci(ptr noundef nonnull align 8 dereferenceable(24) %archive, ptr noundef nonnull align 8 dereferenceable(24) %s, ptr noundef %fname, i32 noundef %base), !range !270
  ret i32 %call
}

; Function Attrs: uwtable
define dso_local noundef i32 @_Z7paqmainiPPc(i32 noundef %argc, ptr nocapture noundef readonly %argv) local_unnamed_addr #5 personality ptr @__gxx_personality_v0 {
entry:
  %fname = alloca %class.Array.13, align 8
  %fsize = alloca %class.Array.14, align 8
  %archiveName = alloca %class.String, align 8
  %filenames = alloca %class.String, align 8
  %header_string = alloca %class.String, align 8
  %name = alloca %class.String, align 8
  %en = alloca %class.Encoder, align 8
  %dir = alloca %class.String, align 8
  %out = alloca %class.String, align 8
  %0 = load ptr, ptr %argv, align 8, !tbaa !5
  %call.i = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %0, i32 noundef 47) #44
  %tobool.not.i = icmp eq ptr %call.i, null
  %add.ptr.i = getelementptr inbounds i8, ptr %call.i, i64 1
  %cond.i = select i1 %tobool.not.i, ptr %0, ptr %add.ptr.i
  %cmp = icmp slt i32 %argc, 3
  %frombool = zext i1 %cmp to i8
  %cmp1 = icmp sgt i32 %argc, 1
  br i1 %cmp1, label %land.lhs.true, label %if.then34

land.lhs.true:                                    ; preds = %entry
  %arrayidx2 = getelementptr inbounds ptr, ptr %argv, i64 1
  %1 = load ptr, ptr %arrayidx2, align 8, !tbaa !5
  %2 = load i8, ptr %1, align 1, !tbaa !9
  %cmp4 = icmp eq i8 %2, 45
  br i1 %cmp4, label %land.lhs.true5, label %if.end38

land.lhs.true5:                                   ; preds = %land.lhs.true
  %arrayidx7 = getelementptr inbounds i8, ptr %1, i64 1
  %3 = load i8, ptr %arrayidx7, align 1, !tbaa !9
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.end38, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %land.lhs.true5
  %arrayidx10 = getelementptr inbounds i8, ptr %1, i64 2
  %4 = load i8, ptr %arrayidx10, align 1, !tbaa !9
  %tobool11.not = icmp eq i8 %4, 0
  br i1 %tobool11.not, label %if.then, label %if.end38

if.then:                                          ; preds = %land.lhs.true8
  %5 = add i8 %3, -58
  %or.cond989 = icmp ult i8 %5, -10
  br i1 %or.cond989, label %if.else, label %if.then21

if.then21:                                        ; preds = %if.then
  %conv14 = zext i8 %3 to i32
  %sub = add nsw i32 %conv14, -48
  store i32 %sub, ptr @level, align 4, !tbaa !25
  br label %if.end32

if.else:                                          ; preds = %if.then
  %cmp28 = icmp eq i8 %3, 100
  br i1 %cmp28, label %if.end32, label %if.else30

if.else30:                                        ; preds = %if.else
  %exception.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.39, ptr %exception.i, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc unwind label %lpad

.noexc:                                           ; preds = %if.else30
  unreachable

lpad:                                             ; preds = %if.then34, %if.else30
  %pause.0 = phi i8 [ %frombool, %if.else30 ], [ %pause.11006, %if.then34 ]
  %6 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup487

if.end32:                                         ; preds = %if.then21, %if.else
  %dec = add nsw i32 %argc, -1
  %cmp33 = icmp ult i32 %argc, 3
  br i1 %cmp33, label %if.then34, label %if.end38

if.then34:                                        ; preds = %entry, %if.end32
  %pause.11006 = phi i8 [ 0, %if.end32 ], [ %frombool, %entry ]
  %call36 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.40, i32 noundef 5)
  %exception.i631 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %exception.i631, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i631, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc632 unwind label %lpad

.noexc632:                                        ; preds = %if.then34
  unreachable

if.end38:                                         ; preds = %land.lhs.true, %land.lhs.true5, %land.lhs.true8, %if.end32
  %argc.addr.0999 = phi i32 [ %dec, %if.end32 ], [ %argc, %land.lhs.true8 ], [ %argc, %land.lhs.true5 ], [ %argc, %land.lhs.true ]
  %argv.addr.0998 = phi ptr [ %arrayidx2, %if.end32 ], [ %argv, %land.lhs.true8 ], [ %argv, %land.lhs.true5 ], [ %argv, %land.lhs.true ]
  %pause.1997 = phi i8 [ 0, %if.end32 ], [ %frombool, %land.lhs.true8 ], [ %frombool, %land.lhs.true5 ], [ %frombool, %land.lhs.true ]
  %doExtract.1996 = phi i1 [ %or.cond989, %if.end32 ], [ false, %land.lhs.true8 ], [ false, %land.lhs.true5 ], [ false, %land.lhs.true ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fname) #39
  %reserved.i.i = getelementptr inbounds %class.Array.13, ptr %fname, i64 0, i32 1
  store i32 1, ptr %reserved.i.i, align 4, !tbaa !271
  store i32 1, ptr %fname, align 8, !tbaa !273
  %7 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i = add nsw i32 %7, 8
  store i32 %add.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %8 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i = icmp sgt i32 %add.i.i.i, %8
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i

if.then.i.i.i:                                    ; preds = %if.end38
  store i32 %add.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i

_ZN14ProgramChecker5allocEi.exit.i.i:             ; preds = %if.then.i.i.i, %if.end38
  %9 = phi i32 [ %add.i.i.i, %if.then.i.i.i ], [ %8, %if.end38 ]
  %call.i.i = tail call noalias dereferenceable_or_null(8) ptr @calloc(i64 noundef 8, i64 noundef 1) #41
  %ptr5.i.i = getelementptr inbounds %class.Array.13, ptr %fname, i64 0, i32 2
  store ptr %call.i.i, ptr %ptr5.i.i, align 8, !tbaa !274
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.then7.i.i, label %_ZN5ArrayIPcLi0EEC2Ei.exit

if.then7.i.i:                                     ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %exception.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc634 unwind label %lpad39

.noexc634:                                        ; preds = %if.then7.i.i
  unreachable

_ZN5ArrayIPcLi0EEC2Ei.exit:                       ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i
  %data10.i.i = getelementptr inbounds %class.Array.13, ptr %fname, i64 0, i32 3
  store ptr %call.i.i, ptr %data10.i.i, align 8, !tbaa !275
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fsize) #39
  %reserved.i.i635 = getelementptr inbounds %class.Array.14, ptr %fsize, i64 0, i32 1
  store i32 1, ptr %reserved.i.i635, align 4, !tbaa !276
  store i32 1, ptr %fsize, align 8, !tbaa !278
  %add.i.i.i636 = add nsw i32 %7, 16
  store i32 %add.i.i.i636, ptr @programChecker, align 8, !tbaa !13
  %cmp.i.i.i637 = icmp sgt i32 %add.i.i.i636, %9
  br i1 %cmp.i.i.i637, label %if.then.i.i.i638, label %_ZN14ProgramChecker5allocEi.exit.i.i642

if.then.i.i.i638:                                 ; preds = %_ZN5ArrayIPcLi0EEC2Ei.exit
  store i32 %add.i.i.i636, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i642

_ZN14ProgramChecker5allocEi.exit.i.i642:          ; preds = %if.then.i.i.i638, %_ZN5ArrayIPcLi0EEC2Ei.exit
  %call.i.i639 = tail call noalias dereferenceable_or_null(8) ptr @calloc(i64 noundef 8, i64 noundef 1) #41
  %ptr5.i.i640 = getelementptr inbounds %class.Array.14, ptr %fsize, i64 0, i32 2
  store ptr %call.i.i639, ptr %ptr5.i.i640, align 8, !tbaa !279
  %tobool.not.i.i641 = icmp eq ptr %call.i.i639, null
  br i1 %tobool.not.i.i641, label %if.then7.i.i644, label %_ZN5ArrayIlLi0EEC2Ei.exit

if.then7.i.i644:                                  ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i642
  %exception.i.i.i643 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i643, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i.i.i643, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc646 unwind label %lpad41

.noexc646:                                        ; preds = %if.then7.i.i644
  unreachable

_ZN5ArrayIlLi0EEC2Ei.exit:                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i642
  %data10.i.i645 = getelementptr inbounds %class.Array.14, ptr %fsize, i64 0, i32 3
  store ptr %call.i.i639, ptr %data10.i.i645, align 8, !tbaa !280
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %archiveName) #39
  %arrayidx43 = getelementptr inbounds ptr, ptr %argv.addr.0998, i64 1
  %10 = load ptr, ptr %arrayidx43, align 8, !tbaa !5
  %call.i647 = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %10, i32 noundef 47) #44
  %tobool.not.i648 = icmp eq ptr %call.i647, null
  %add.ptr.i649 = getelementptr inbounds i8, ptr %call.i647, i64 1
  %cond.i650 = select i1 %tobool.not.i648, ptr %10, ptr %add.ptr.i649
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %archiveName, ptr noundef %cond.i650)
          to label %invoke.cont47 unwind label %lpad44

invoke.cont47:                                    ; preds = %_ZN5ArrayIlLi0EEC2Ei.exit
  %call48 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %cond.i) #44
  %conv49 = trunc i64 %call48 to i32
  %11 = load ptr, ptr %arrayidx43, align 8, !tbaa !5
  %call51 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %11) #44
  %conv52 = trunc i64 %call51 to i32
  %add = add nsw i32 %conv49, 1
  %cmp53 = icmp slt i32 %add, %conv52
  br i1 %cmp53, label %land.lhs.true54, label %if.else68

land.lhs.true54:                                  ; preds = %invoke.cont47
  %12 = xor i64 %call48, -1
  %sub57 = add i64 %call51, %12
  %sext = shl i64 %sub57, 32
  %idxprom = ashr exact i64 %sext, 32
  %arrayidx58 = getelementptr inbounds i8, ptr %11, i64 %idxprom
  %13 = load i8, ptr %arrayidx58, align 1, !tbaa !9
  %cmp60 = icmp eq i8 %13, 46
  br i1 %cmp60, label %land.lhs.true61, label %if.else68

land.lhs.true61:                                  ; preds = %land.lhs.true54
  %sext987 = shl i64 %call51, 32
  %idx.ext = ashr exact i64 %sext987, 32
  %add.ptr = getelementptr inbounds i8, ptr %11, i64 %idx.ext
  %sext988 = shl i64 %call48, 32
  %idx.ext63 = ashr exact i64 %sext988, 32
  %idx.neg = sub nsw i64 0, %idx.ext63
  %add.ptr64 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.neg
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %land.lhs.true61
  %a.addr.0.i = phi ptr [ %cond.i, %land.lhs.true61 ], [ %incdec.ptr.i, %while.body.i ]
  %b.addr.0.i = phi ptr [ %add.ptr64, %land.lhs.true61 ], [ %incdec.ptr13.i, %while.body.i ]
  %14 = load i8, ptr %a.addr.0.i, align 1, !tbaa !9
  %tobool.not.i651 = icmp eq i8 %14, 0
  %.pre.i = load i8, ptr %b.addr.0.i, align 1, !tbaa !9
  br i1 %tobool.not.i651, label %while.end.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %while.cond.i
  %tobool1.not.i = icmp eq i8 %.pre.i, 0
  br i1 %tobool1.not.i, label %while.end.i, label %while.body.i

while.body.i:                                     ; preds = %land.rhs.i
  %conv.i = sext i8 %14 to i32
  %15 = add i8 %14, -65
  %or.cond.i = icmp ult i8 %15, 26
  %add.i = add nuw nsw i32 %conv.i, 32
  %spec.select.i = select i1 %or.cond.i, i32 %add.i, i32 %conv.i
  %conv3.i = sext i8 %.pre.i to i32
  %16 = add i8 %.pre.i, -65
  %or.cond19.i = icmp ult i8 %16, 26
  %add8.i = add nuw nsw i32 %conv3.i, 32
  %c2.0.i = select i1 %or.cond19.i, i32 %add8.i, i32 %conv3.i
  %cmp10.not.not.i = icmp eq i32 %spec.select.i, %c2.0.i
  %incdec.ptr.i = getelementptr inbounds i8, ptr %a.addr.0.i, i64 1
  %incdec.ptr13.i = getelementptr inbounds i8, ptr %b.addr.0.i, i64 1
  br i1 %cmp10.not.not.i, label %while.cond.i, label %_Z6equalsPKcS0_.exit

while.end.i:                                      ; preds = %land.rhs.i, %while.cond.i
  %17 = phi i8 [ %.pre.i, %while.cond.i ], [ 0, %land.rhs.i ]
  %cmp17.i = icmp eq i8 %14, %17
  br label %_Z6equalsPKcS0_.exit

_Z6equalsPKcS0_.exit:                             ; preds = %while.body.i, %while.end.i
  %retval.2.i = phi i1 [ %cmp17.i, %while.end.i ], [ false, %while.body.i ]
  %brmerge = or i1 %doExtract.1996, %retval.2.i
  br i1 %brmerge, label %if.end76, label %if.else71

lpad39:                                           ; preds = %if.then7.i.i
  %18 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup484

lpad41:                                           ; preds = %if.then7.i.i644
  %19 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup482

lpad44:                                           ; preds = %_ZN5ArrayIlLi0EEC2Ei.exit
  %20 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup479

if.else68:                                        ; preds = %land.lhs.true54, %invoke.cont47
  br i1 %doExtract.1996, label %if.end76, label %if.else71

if.else71:                                        ; preds = %_Z6equalsPKcS0_.exit, %if.else68
  %21 = load i32, ptr %archiveName, align 8, !tbaa !262
  %cmp.i.i = icmp sgt i32 %21, 0
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i

if.then.i.i:                                      ; preds = %if.else71
  %dec.i.i = add nsw i32 %21, -1
  store i32 %dec.i.i, ptr %archiveName, align 8, !tbaa !262
  br label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i

_ZN5ArrayIcLi0EE8pop_backEv.exit.i:               ; preds = %if.then.i.i, %if.else71
  %22 = phi i32 [ %dec.i.i, %if.then.i.i ], [ %21, %if.else71 ]
  %reserved.i.i652 = getelementptr inbounds %class.Array.12, ptr %archiveName, i64 0, i32 1
  %data.i.i = getelementptr inbounds %class.Array.12, ptr %archiveName, i64 0, i32 3
  %23 = load i32, ptr %reserved.i.i652, align 4, !tbaa !267
  %cmp.i3.i = icmp eq i32 %22, %23
  br i1 %cmp.i3.i, label %if.then.i4.i, label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i

if.then.i4.i:                                     ; preds = %_ZN5ArrayIcLi0EE8pop_backEv.exit.i
  %mul.i.i = shl nsw i32 %22, 1
  %cond.i.i.i = call i32 @llvm.smax.i32(i32 %mul.i.i, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %archiveName, i32 noundef %cond.i.i.i)
          to label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i unwind label %lpad72.loopexit.split-lp.loopexit

_ZN5ArrayIcLi0EE9push_backERKc.exit.i:            ; preds = %if.then.i4.i, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i
  %24 = load ptr, ptr %data.i.i, align 8, !tbaa !260
  %inc.i.i = add nsw i32 %22, 1
  store i32 %inc.i.i, ptr %archiveName, align 8, !tbaa !262
  %idxprom.i.i = sext i32 %22 to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %24, i64 %idxprom.i.i
  store i8 46, ptr %arrayidx.i.i, align 1, !tbaa !9
  %.pre17.i = load i32, ptr %archiveName, align 8, !tbaa !262
  %25 = load i32, ptr %reserved.i.i652, align 4, !tbaa !267
  %cmp.i6.i = icmp eq i32 %.pre17.i, %25
  br i1 %cmp.i6.i, label %if.then.i9.i, label %_ZN6StringpLEPKc.exit

if.then.i9.i:                                     ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i
  %mul.i7.i = shl nsw i32 %.pre17.i, 1
  %cond.i.i8.i = call i32 @llvm.smax.i32(i32 %mul.i7.i, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %archiveName, i32 noundef %cond.i.i8.i)
          to label %_ZN6StringpLEPKc.exit unwind label %lpad72.loopexit.split-lp.loopexit.split-lp

_ZN6StringpLEPKc.exit:                            ; preds = %if.then.i9.i, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i
  %26 = load ptr, ptr %data.i.i, align 8, !tbaa !260
  %inc.i11.i = add nsw i32 %.pre17.i, 1
  store i32 %inc.i11.i, ptr %archiveName, align 8, !tbaa !262
  %idxprom.i12.i = sext i32 %.pre17.i to i64
  %arrayidx.i13.i = getelementptr inbounds i8, ptr %26, i64 %idxprom.i12.i
  store i8 0, ptr %arrayidx.i13.i, align 1, !tbaa !9
  %27 = load i32, ptr %archiveName, align 8, !tbaa !262
  %cmp.i.i660 = icmp sgt i32 %27, 0
  br i1 %cmp.i.i660, label %if.then.i.i662, label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i663

if.then.i.i662:                                   ; preds = %_ZN6StringpLEPKc.exit
  %dec.i.i661 = add nsw i32 %27, -1
  store i32 %dec.i.i661, ptr %archiveName, align 8, !tbaa !262
  br label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i663

_ZN5ArrayIcLi0EE8pop_backEv.exit.i663:            ; preds = %if.then.i.i662, %_ZN6StringpLEPKc.exit
  %28 = phi i32 [ %27, %_ZN6StringpLEPKc.exit ], [ %dec.i.i661, %if.then.i.i662 ]
  %29 = load i8, ptr %cond.i, align 1, !tbaa !9
  %tobool.not15.i = icmp eq i8 %29, 0
  br i1 %tobool.not15.i, label %while.end.i683, label %while.body.i669

while.body.i669:                                  ; preds = %_ZN5ArrayIcLi0EE8pop_backEv.exit.i663, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i678
  %30 = phi i8 [ %35, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i678 ], [ %29, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i663 ]
  %s.addr.016.i666 = phi ptr [ %incdec.ptr.i667, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i678 ], [ %cond.i, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i663 ]
  %incdec.ptr.i667 = getelementptr inbounds i8, ptr %s.addr.016.i666, i64 1
  %31 = load i32, ptr %archiveName, align 8, !tbaa !262
  %32 = load i32, ptr %reserved.i.i652, align 4, !tbaa !267
  %cmp.i3.i668 = icmp eq i32 %31, %32
  br i1 %cmp.i3.i668, label %if.then.i4.i673, label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i678

if.then.i4.i673:                                  ; preds = %while.body.i669
  %mul.i.i670 = shl nsw i32 %31, 1
  %cond.i.i.i671 = call i32 @llvm.smax.i32(i32 %mul.i.i670, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %archiveName, i32 noundef %cond.i.i.i671)
          to label %.noexc691 unwind label %lpad72.loopexit

.noexc691:                                        ; preds = %if.then.i4.i673
  %.pre.i672 = load i8, ptr %s.addr.016.i666, align 1, !tbaa !9
  br label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i678

_ZN5ArrayIcLi0EE9push_backERKc.exit.i678:         ; preds = %.noexc691, %while.body.i669
  %33 = phi i8 [ %30, %while.body.i669 ], [ %.pre.i672, %.noexc691 ]
  %34 = load ptr, ptr %data.i.i, align 8, !tbaa !260
  %inc.i.i674 = add nsw i32 %31, 1
  store i32 %inc.i.i674, ptr %archiveName, align 8, !tbaa !262
  %idxprom.i.i675 = sext i32 %31 to i64
  %arrayidx.i.i676 = getelementptr inbounds i8, ptr %34, i64 %idxprom.i.i675
  store i8 %33, ptr %arrayidx.i.i676, align 1, !tbaa !9
  %35 = load i8, ptr %incdec.ptr.i667, align 1, !tbaa !9
  %tobool.not.i677 = icmp eq i8 %35, 0
  br i1 %tobool.not.i677, label %while.end.loopexit.i680, label %while.body.i669, !llvm.loop !268

while.end.loopexit.i680:                          ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i678
  %.pre17.i679 = load i32, ptr %archiveName, align 8, !tbaa !262
  br label %while.end.i683

while.end.i683:                                   ; preds = %while.end.loopexit.i680, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i663
  %36 = phi i32 [ %.pre17.i679, %while.end.loopexit.i680 ], [ %28, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i663 ]
  %37 = load i32, ptr %reserved.i.i652, align 4, !tbaa !267
  %cmp.i6.i682 = icmp eq i32 %36, %37
  br i1 %cmp.i6.i682, label %if.then.i9.i686, label %_ZN6StringpLEPKc.exit693

if.then.i9.i686:                                  ; preds = %while.end.i683
  %mul.i7.i684 = shl nsw i32 %36, 1
  %cond.i.i8.i685 = call i32 @llvm.smax.i32(i32 %mul.i7.i684, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %archiveName, i32 noundef %cond.i.i8.i685)
          to label %_ZN6StringpLEPKc.exit693 unwind label %lpad72.loopexit.split-lp.loopexit.split-lp

_ZN6StringpLEPKc.exit693:                         ; preds = %if.then.i9.i686, %while.end.i683
  %38 = load ptr, ptr %data.i.i, align 8, !tbaa !260
  %inc.i11.i688 = add nsw i32 %36, 1
  store i32 %inc.i11.i688, ptr %archiveName, align 8, !tbaa !262
  %idxprom.i12.i689 = sext i32 %36 to i64
  %arrayidx.i13.i690 = getelementptr inbounds i8, ptr %38, i64 %idxprom.i12.i689
  store i8 0, ptr %arrayidx.i13.i690, align 1, !tbaa !9
  br label %if.end76

lpad72.loopexit:                                  ; preds = %if.then.i4.i673
  %lpad.loopexit1018 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup478

lpad72.loopexit.split-lp.loopexit:                ; preds = %if.then.i4.i
  %lpad.loopexit1021 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup478

lpad72.loopexit.split-lp.loopexit.split-lp:       ; preds = %if.then.i9.i686, %if.then.i9.i
  %lpad.loopexit.split-lp1022 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup478

if.end76:                                         ; preds = %_Z6equalsPKcS0_.exit, %if.else68, %_ZN6StringpLEPKc.exit693
  %cmp79 = phi i1 [ true, %_ZN6StringpLEPKc.exit693 ], [ false, %_Z6equalsPKcS0_.exit ], [ false, %if.else68 ]
  %cmp218 = phi i1 [ false, %_ZN6StringpLEPKc.exit693 ], [ true, %_Z6equalsPKcS0_.exit ], [ true, %if.else68 ]
  %mode.0 = phi i32 [ 0, %_ZN6StringpLEPKc.exit693 ], [ 1, %_Z6equalsPKcS0_.exit ], [ 1, %if.else68 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %filenames) #39
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %filenames, ptr noundef nonnull @.str.36)
          to label %invoke.cont78 unwind label %lpad77

invoke.cont78:                                    ; preds = %if.end76
  br i1 %cmp79, label %if.then80, label %if.end217

if.then80:                                        ; preds = %invoke.cont78
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %header_string) #39
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %header_string, ptr noundef nonnull @.str.36)
          to label %for.cond.preheader unwind label %lpad81

for.cond.preheader:                               ; preds = %if.then80
  %cmp831042 = icmp sgt i32 %argc.addr.0999, 1
  br i1 %cmp831042, label %for.body.lr.ph, label %if.then160

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %data.i = getelementptr inbounds %class.Array.12, ptr %name, i64 0, i32 3
  %cmp145 = icmp eq i32 %argc.addr.0999, 2
  %ptr.i717 = getelementptr inbounds %class.Array.12, ptr %name, i64 0, i32 2
  %wide.trip.count1096 = zext i32 %argc.addr.0999 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %_ZN5ArrayIcLi0EED2Ev.exit718
  %indvars.iv1092 = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next1093, %_ZN5ArrayIcLi0EED2Ev.exit718 ]
  %files.01043 = phi i32 [ 0, %for.body.lr.ph ], [ %add152, %_ZN5ArrayIcLi0EED2Ev.exit718 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %name) #39
  %arrayidx85 = getelementptr inbounds ptr, ptr %argv.addr.0998, i64 %indvars.iv1092
  %39 = load ptr, ptr %arrayidx85, align 8, !tbaa !5
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %name, ptr noundef %39)
          to label %invoke.cont87 unwind label %lpad86

invoke.cont87:                                    ; preds = %for.body
  %40 = load i32, ptr %name, align 8, !tbaa !262
  %sub91 = add i32 %40, -1
  %cmp93.not.not1037 = icmp sgt i32 %40, 0
  br i1 %cmp93.not.not1037, label %for.body94.preheader, label %while.end

for.body94.preheader:                             ; preds = %invoke.cont87
  %wide.trip.count = zext i32 %40 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %while.cond.preheader.unr-lcssa, label %for.body94.preheader.new

for.body94.preheader.new:                         ; preds = %for.body94.preheader
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body94

while.cond.preheader.unr-lcssa:                   ; preds = %for.inc.1, %for.body94.preheader
  %indvars.iv.unr = phi i64 [ 0, %for.body94.preheader ], [ %indvars.iv.next.1, %for.inc.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %while.cond.preheader, label %for.body94.epil

for.body94.epil:                                  ; preds = %while.cond.preheader.unr-lcssa
  %42 = load ptr, ptr %data.i, align 8, !tbaa !260
  %arrayidx.i.epil = getelementptr inbounds i8, ptr %42, i64 %indvars.iv.unr
  %43 = load i8, ptr %arrayidx.i.epil, align 1, !tbaa !9
  %cmp99.epil = icmp eq i8 %43, 92
  br i1 %cmp99.epil, label %if.then100.epil, label %while.cond.preheader

if.then100.epil:                                  ; preds = %for.body94.epil
  store i8 47, ptr %arrayidx.i.epil, align 1, !tbaa !9
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %for.body94.epil, %if.then100.epil, %while.cond.preheader.unr-lcssa
  %cmp1041039 = icmp sgt i32 %40, 1
  br i1 %cmp1041039, label %land.rhs.preheader, label %while.end

land.rhs.preheader:                               ; preds = %while.cond.preheader
  %44 = zext i32 %sub91 to i64
  br label %land.rhs

lpad77:                                           ; preds = %if.end76
  %45 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup477

lpad81:                                           ; preds = %if.then80
  %46 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup216

lpad86:                                           ; preds = %for.body
  %47 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup155

for.body94:                                       ; preds = %for.inc.1, %for.body94.preheader.new
  %indvars.iv = phi i64 [ 0, %for.body94.preheader.new ], [ %indvars.iv.next.1, %for.inc.1 ]
  %niter = phi i64 [ 0, %for.body94.preheader.new ], [ %niter.next.1, %for.inc.1 ]
  %48 = load ptr, ptr %data.i, align 8, !tbaa !260
  %arrayidx.i = getelementptr inbounds i8, ptr %48, i64 %indvars.iv
  %49 = load i8, ptr %arrayidx.i, align 1, !tbaa !9
  %cmp99 = icmp eq i8 %49, 92
  br i1 %cmp99, label %if.then100, label %for.inc

if.then100:                                       ; preds = %for.body94
  store i8 47, ptr %arrayidx.i, align 1, !tbaa !9
  br label %for.inc

for.inc:                                          ; preds = %for.body94, %if.then100
  %indvars.iv.next = or i64 %indvars.iv, 1
  %50 = load ptr, ptr %data.i, align 8, !tbaa !260
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %50, i64 %indvars.iv.next
  %51 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !9
  %cmp99.1 = icmp eq i8 %51, 92
  br i1 %cmp99.1, label %if.then100.1, label %for.inc.1

if.then100.1:                                     ; preds = %for.inc
  store i8 47, ptr %arrayidx.i.1, align 1, !tbaa !9
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then100.1, %for.inc
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %while.cond.preheader.unr-lcssa, label %for.body94, !llvm.loop !281

land.rhs:                                         ; preds = %land.rhs.preheader, %while.body
  %indvars.iv1084 = phi i64 [ %44, %land.rhs.preheader ], [ %indvars.iv.next1085, %while.body ]
  %sub105 = add nuw i64 %indvars.iv1084, 4294967295
  %52 = load ptr, ptr %data.i, align 8, !tbaa !260
  %idxprom.i698 = and i64 %sub105, 4294967295
  %arrayidx.i699 = getelementptr inbounds i8, ptr %52, i64 %idxprom.i698
  %53 = load i8, ptr %arrayidx.i699, align 1, !tbaa !9
  %cmp109 = icmp eq i8 %53, 47
  br i1 %cmp109, label %while.body, label %while.end.loopexit.split.loop.exit1148

while.body:                                       ; preds = %land.rhs
  %indvars.iv.next1085 = add nsw i64 %indvars.iv1084, -1
  %idxprom.i701 = and i64 %indvars.iv.next1085, 4294967295
  %arrayidx.i702 = getelementptr inbounds i8, ptr %52, i64 %idxprom.i701
  store i8 0, ptr %arrayidx.i702, align 1, !tbaa !9
  %cmp104 = icmp sgt i64 %indvars.iv1084, 1
  br i1 %cmp104, label %land.rhs, label %while.end, !llvm.loop !282

while.end.loopexit.split.loop.exit1148:           ; preds = %land.rhs
  %indvars1086.le = trunc i64 %indvars.iv1084 to i32
  br label %while.end

while.end:                                        ; preds = %while.body, %while.end.loopexit.split.loop.exit1148, %invoke.cont87, %while.cond.preheader
  %len.0.lcssa = phi i32 [ %sub91, %while.cond.preheader ], [ %sub91, %invoke.cont87 ], [ %indvars1086.le, %while.end.loopexit.split.loop.exit1148 ], [ 0, %while.body ]
  %54 = load ptr, ptr %data.i, align 8
  %55 = zext i32 %len.0.lcssa to i64
  br label %while.cond114

while.cond114:                                    ; preds = %land.rhs116, %while.end
  %indvars.iv1087 = phi i64 [ %57, %land.rhs116 ], [ %55, %while.end ]
  %56 = trunc i64 %indvars.iv1087 to i32
  %cmp115 = icmp sgt i32 %56, 0
  br i1 %cmp115, label %land.rhs116, label %while.end125

land.rhs116:                                      ; preds = %while.cond114
  %57 = add nsw i64 %indvars.iv1087, -1
  %arrayidx.i705 = getelementptr inbounds i8, ptr %54, i64 %57
  %58 = load i8, ptr %arrayidx.i705, align 1, !tbaa !9
  %cmp121.not = icmp eq i8 %58, 47
  br i1 %cmp121.not, label %if.end136, label %while.cond114, !llvm.loop !283

while.end125:                                     ; preds = %while.cond114
  %cmp127 = icmp eq i32 %56, 0
  %cmp129 = icmp sgt i32 %len.0.lcssa, 1
  %or.cond = and i1 %cmp129, %cmp127
  br i1 %or.cond, label %land.lhs.true130, label %if.end136

land.lhs.true130:                                 ; preds = %while.end125
  %arrayidx.i707 = getelementptr inbounds i8, ptr %54, i64 1
  %59 = load i8, ptr %arrayidx.i707, align 1, !tbaa !9
  %cmp134 = icmp eq i8 %59, 58
  %spec.select = select i1 %cmp134, i32 2, i32 0
  br label %if.end136

if.end136:                                        ; preds = %land.rhs116, %land.lhs.true130, %while.end125
  %base.1 = phi i32 [ %56, %while.end125 ], [ %spec.select, %land.lhs.true130 ], [ %56, %land.rhs116 ]
  %call.i709710 = invoke noundef i32 @_Z7putsizeR6StringS0_PKci(ptr noundef nonnull align 8 dereferenceable(24) %header_string, ptr noundef nonnull align 8 dereferenceable(24) %filenames, ptr noundef %54, i32 noundef %base.1)
          to label %invoke.cont140 unwind label %lpad137

invoke.cont140:                                   ; preds = %if.end136
  %tobool142.not = icmp eq i32 %call.i709710, 0
  %cmp144 = icmp ugt i64 %indvars.iv1092, 1
  %or.cond506 = or i1 %cmp145, %cmp144
  %or.cond1064 = and i1 %tobool142.not, %or.cond506
  br i1 %or.cond1064, label %invoke.cont147, label %if.end151

invoke.cont147:                                   ; preds = %invoke.cont140
  %60 = load ptr, ptr %data.i, align 8, !tbaa !260
  %call150 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.42, ptr noundef %60)
  br label %if.end151

lpad137:                                          ; preds = %if.end136
  %61 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  %62 = load i32, ptr %name, align 8, !tbaa !262
  %63 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = sub i32 %63, %62
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %64 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i712 = icmp sgt i32 %add.i.i, %64
  br i1 %cmp.i.i712, label %if.then.i.i713, label %_ZN5ArrayIcLi0EED2Ev.exit

if.then.i.i713:                                   ; preds = %lpad137
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIcLi0EED2Ev.exit

_ZN5ArrayIcLi0EED2Ev.exit:                        ; preds = %lpad137, %if.then.i.i713
  %65 = load ptr, ptr %ptr.i717, align 8, !tbaa !264
  call void @free(ptr noundef %65) #39
  br label %ehcleanup155

if.end151:                                        ; preds = %invoke.cont147, %invoke.cont140
  %add152 = add nsw i32 %call.i709710, %files.01043
  %66 = load i32, ptr %name, align 8, !tbaa !262
  %67 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i714 = sub i32 %67, %66
  store i32 %add.i.i714, ptr @programChecker, align 8, !tbaa !13
  %68 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i715 = icmp sgt i32 %add.i.i714, %68
  br i1 %cmp.i.i715, label %if.then.i.i716, label %_ZN5ArrayIcLi0EED2Ev.exit718

if.then.i.i716:                                   ; preds = %if.end151
  store i32 %add.i.i714, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIcLi0EED2Ev.exit718

_ZN5ArrayIcLi0EED2Ev.exit718:                     ; preds = %if.end151, %if.then.i.i716
  %69 = load ptr, ptr %ptr.i717, align 8, !tbaa !264
  call void @free(ptr noundef %69) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %name) #39
  %indvars.iv.next1093 = add nuw nsw i64 %indvars.iv1092, 1
  %exitcond1097.not = icmp eq i64 %indvars.iv.next1093, %wide.trip.count1096
  br i1 %exitcond1097.not, label %for.end158, label %for.body, !llvm.loop !284

ehcleanup155:                                     ; preds = %_ZN5ArrayIcLi0EED2Ev.exit, %lpad86
  %.pn983 = phi { ptr, i32 } [ %61, %_ZN5ArrayIcLi0EED2Ev.exit ], [ %47, %lpad86 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %name) #39
  br label %ehcleanup214

for.end158:                                       ; preds = %_ZN5ArrayIcLi0EED2Ev.exit718
  %cmp159 = icmp slt i32 %add152, 1
  br i1 %cmp159, label %if.then160, label %if.end163

if.then160:                                       ; preds = %for.cond.preheader, %for.end158
  %exception.i719 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.43, ptr %exception.i719, align 16, !tbaa !5
  br label %invoke.cont170.invoke

lpad161:                                          ; preds = %invoke.cont170.invoke, %invoke.cont181, %invoke.cont175
  %70 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup214

if.end163:                                        ; preds = %for.end158
  %data.i.i722 = getelementptr inbounds %class.Array.12, ptr %archiveName, i64 0, i32 3
  %71 = load ptr, ptr %data.i.i722, align 8, !tbaa !260
  %call167 = call noalias ptr @fopen(ptr noundef %71, ptr noundef nonnull @.str.44)
  %tobool168.not = icmp eq ptr %call167, null
  br i1 %tobool168.not, label %invoke.cont170, label %invoke.cont175

invoke.cont170:                                   ; preds = %if.end163
  %72 = load ptr, ptr %data.i.i722, align 8, !tbaa !260
  call void @perror(ptr noundef %72) #45
  %exception.i724 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %exception.i724, align 16, !tbaa !5
  br label %invoke.cont170.invoke

invoke.cont170.invoke:                            ; preds = %if.then160, %invoke.cont170
  %73 = phi ptr [ %exception.i724, %invoke.cont170 ], [ %exception.i719, %if.then160 ]
  invoke void @__cxa_throw(ptr nonnull %73, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %invoke.cont170.cont unwind label %lpad161

invoke.cont170.cont:                              ; preds = %invoke.cont170.invoke
  unreachable

invoke.cont175:                                   ; preds = %if.end163
  %data.i.i727 = getelementptr inbounds %class.Array.12, ptr %header_string, i64 0, i32 3
  %74 = load ptr, ptr %data.i.i727, align 8, !tbaa !260
  %75 = load i32, ptr @level, align 4, !tbaa !25
  %call178 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %call167, ptr noundef nonnull @.str.45, i32 noundef %75, ptr noundef %74)
  %call180 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.46, i32 noundef %add152)
  invoke void @_ZN5ArrayIPcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %fname, i32 noundef %add152)
          to label %invoke.cont181 unwind label %lpad161

invoke.cont181:                                   ; preds = %invoke.cont175
  invoke void @_ZN5ArrayIlLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %fsize, i32 noundef %add152)
          to label %invoke.cont182 unwind label %lpad161

invoke.cont182:                                   ; preds = %invoke.cont181
  %data.i728 = getelementptr inbounds %class.Array.12, ptr %filenames, i64 0, i32 3
  %76 = load ptr, ptr %data.i728, align 8, !tbaa !260
  call void @rewind(ptr noundef nonnull %call167)
  %call188 = invoke noundef ptr @_Z7getlineP8_IO_FILE(ptr noundef nonnull %call167)
          to label %for.body191.preheader unwind label %lpad183

for.body191.preheader:                            ; preds = %invoke.cont182
  %wide.trip.count1102 = zext i32 %add152 to i64
  br label %for.body191

for.body191:                                      ; preds = %for.body191.preheader, %while.end205
  %indvars.iv1098 = phi i64 [ 0, %for.body191.preheader ], [ %indvars.iv.next1099, %while.end205 ]
  %p.01048 = phi ptr [ %76, %for.body191.preheader ], [ %incdec.ptr204, %while.end205 ]
  %call194 = invoke noundef ptr @_Z7getlineP8_IO_FILE(ptr noundef nonnull %call167)
          to label %invoke.cont193 unwind label %lpad192

invoke.cont193:                                   ; preds = %for.body191
  %call.i729 = call i64 @strtol(ptr nocapture noundef nonnull %call194, ptr noundef null, i32 noundef 10) #39
  %77 = load ptr, ptr %data10.i.i645, align 8, !tbaa !280
  %arrayidx.i732 = getelementptr inbounds i64, ptr %77, i64 %indvars.iv1098
  store i64 %call.i729, ptr %arrayidx.i732, align 8, !tbaa !285
  %78 = load ptr, ptr %data10.i.i, align 8, !tbaa !275
  %arrayidx.i735 = getelementptr inbounds ptr, ptr %78, i64 %indvars.iv1098
  store ptr %p.01048, ptr %arrayidx.i735, align 8, !tbaa !5
  br label %while.cond200

while.cond200:                                    ; preds = %while.cond200, %invoke.cont193
  %p.1 = phi ptr [ %p.01048, %invoke.cont193 ], [ %incdec.ptr204, %while.cond200 ]
  %79 = load i8, ptr %p.1, align 1, !tbaa !9
  %cmp202.not = icmp eq i8 %79, 10
  %incdec.ptr204 = getelementptr inbounds i8, ptr %p.1, i64 1
  br i1 %cmp202.not, label %while.end205, label %while.cond200, !llvm.loop !286

lpad183:                                          ; preds = %invoke.cont182
  %80 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup214

lpad192:                                          ; preds = %for.body191
  %81 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup214

while.end205:                                     ; preds = %while.cond200
  store i8 0, ptr %p.1, align 1, !tbaa !9
  %indvars.iv.next1099 = add nuw nsw i64 %indvars.iv1098, 1
  %exitcond1103.not = icmp eq i64 %indvars.iv.next1099, %wide.trip.count1102
  br i1 %exitcond1103.not, label %for.end210, label %for.body191, !llvm.loop !287

for.end210:                                       ; preds = %while.end205
  %call212 = call i32 @fseek(ptr noundef nonnull %call167, i64 noundef 0, i32 noundef 2)
  %82 = load i32, ptr %header_string, align 8, !tbaa !262
  %83 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i736 = sub i32 %83, %82
  store i32 %add.i.i736, ptr @programChecker, align 8, !tbaa !13
  %84 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i737 = icmp sgt i32 %add.i.i736, %84
  br i1 %cmp.i.i737, label %if.then.i.i738, label %_ZN5ArrayIcLi0EED2Ev.exit740

if.then.i.i738:                                   ; preds = %for.end210
  store i32 %add.i.i736, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIcLi0EED2Ev.exit740

_ZN5ArrayIcLi0EED2Ev.exit740:                     ; preds = %for.end210, %if.then.i.i738
  %ptr.i739 = getelementptr inbounds %class.Array.12, ptr %header_string, i64 0, i32 2
  %85 = load ptr, ptr %ptr.i739, align 8, !tbaa !264
  call void @free(ptr noundef %85) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %header_string) #39
  br label %if.end217

ehcleanup214:                                     ; preds = %lpad183, %lpad192, %lpad161, %ehcleanup155
  %.pn983.pn = phi { ptr, i32 } [ %.pn983, %ehcleanup155 ], [ %70, %lpad161 ], [ %81, %lpad192 ], [ %80, %lpad183 ]
  %86 = load i32, ptr %header_string, align 8, !tbaa !262
  %87 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i741 = sub i32 %87, %86
  store i32 %add.i.i741, ptr @programChecker, align 8, !tbaa !13
  %88 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i742 = icmp sgt i32 %add.i.i741, %88
  br i1 %cmp.i.i742, label %if.then.i.i743, label %_ZN5ArrayIcLi0EED2Ev.exit745

if.then.i.i743:                                   ; preds = %ehcleanup214
  store i32 %add.i.i741, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIcLi0EED2Ev.exit745

_ZN5ArrayIcLi0EED2Ev.exit745:                     ; preds = %ehcleanup214, %if.then.i.i743
  %ptr.i744 = getelementptr inbounds %class.Array.12, ptr %header_string, i64 0, i32 2
  %89 = load ptr, ptr %ptr.i744, align 8, !tbaa !264
  call void @free(ptr noundef %89) #39
  br label %ehcleanup216

ehcleanup216:                                     ; preds = %_ZN5ArrayIcLi0EED2Ev.exit745, %lpad81
  %.pn983.pn.pn = phi { ptr, i32 } [ %.pn983.pn, %_ZN5ArrayIcLi0EED2Ev.exit745 ], [ %46, %lpad81 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %header_string) #39
  br label %ehcleanup476

if.end217:                                        ; preds = %_ZN5ArrayIcLi0EED2Ev.exit740, %invoke.cont78
  %files.1 = phi i32 [ %add152, %_ZN5ArrayIcLi0EED2Ev.exit740 ], [ 0, %invoke.cont78 ]
  %archive.0 = phi ptr [ %call167, %_ZN5ArrayIcLi0EED2Ev.exit740 ], [ null, %invoke.cont78 ]
  br i1 %cmp218, label %if.then219, label %if.end337

if.then219:                                       ; preds = %if.end217
  %data.i.i746 = getelementptr inbounds %class.Array.12, ptr %archiveName, i64 0, i32 3
  %90 = load ptr, ptr %data.i.i746, align 8, !tbaa !260
  %call224 = call noalias ptr @fopen(ptr noundef %90, ptr noundef nonnull @.str.47)
  %tobool225.not = icmp eq ptr %call224, null
  br i1 %tobool225.not, label %invoke.cont227, label %if.end231

invoke.cont227:                                   ; preds = %if.then219
  %91 = load ptr, ptr %data.i.i746, align 8, !tbaa !260
  call void @perror(ptr noundef %91) #45
  %exception.i748 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %exception.i748, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i748, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc749 unwind label %lpad220

.noexc749:                                        ; preds = %invoke.cont227
  unreachable

lpad220:                                          ; preds = %if.end.i, %invoke.cont227
  %92 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup476

if.end231:                                        ; preds = %if.then219
  %call234 = invoke noundef ptr @_Z7getlineP8_IO_FILE(ptr noundef nonnull %call224)
          to label %invoke.cont233 unwind label %lpad232.loopexit.split-lp

invoke.cont233:                                   ; preds = %if.end231
  %call235 = call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %call234, ptr noundef nonnull dereferenceable(8) @.str.48, i64 noundef 7) #44
  %tobool236.not = icmp eq i32 %call235, 0
  br i1 %tobool236.not, label %if.end243, label %invoke.cont238

invoke.cont238:                                   ; preds = %invoke.cont233
  %93 = load ptr, ptr %data.i.i746, align 8, !tbaa !260
  %call241 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.49, ptr noundef %93, ptr noundef nonnull @.str.50)
  %exception.i752 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %exception.i752, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i752, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc753 unwind label %lpad232.loopexit.split-lp

.noexc753:                                        ; preds = %invoke.cont238
  unreachable

lpad232.loopexit:                                 ; preds = %while.cond252
  %lpad.loopexit1015 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup476

lpad232.loopexit.split-lp:                        ; preds = %if.end231, %invoke.cont238
  %lpad.loopexit.split-lp1016 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup476

if.end243:                                        ; preds = %invoke.cont233
  %arrayidx244 = getelementptr inbounds i8, ptr %call234, i64 7
  %94 = load i8, ptr %arrayidx244, align 1, !tbaa !9
  %conv245 = sext i8 %94 to i32
  %sub246 = add nsw i32 %conv245, -48
  %95 = add i8 %94, -58
  %or.cond507 = icmp ult i8 %95, -10
  %spec.store.select = select i1 %or.cond507, i32 5, i32 %sub246
  store i32 %spec.store.select, ptr @level, align 4
  br label %while.cond252

while.cond252:                                    ; preds = %while.body256, %if.end243
  %files.2 = phi i32 [ %files.1, %if.end243 ], [ %inc257, %while.body256 ]
  %call254 = invoke noundef ptr @_Z7getlineP8_IO_FILE(ptr noundef nonnull %call224)
          to label %invoke.cont253 unwind label %lpad232.loopexit

invoke.cont253:                                   ; preds = %while.cond252
  %tobool255.not = icmp eq ptr %call254, null
  br i1 %tobool255.not, label %while.end258, label %while.body256

while.body256:                                    ; preds = %invoke.cont253
  %inc257 = add nsw i32 %files.2, 1
  br label %while.cond252, !llvm.loop !288

while.end258:                                     ; preds = %invoke.cont253
  %96 = load i32, ptr @level, align 4, !tbaa !25
  %call260 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.51, i32 noundef %files.2, i32 noundef %96)
  %call263 = call i64 @ftell(ptr noundef nonnull %call224)
  %97 = trunc i64 %call263 to i32
  %conv265 = add i32 %97, 4
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %filenames, i32 noundef %conv265)
          to label %invoke.cont266 unwind label %lpad261

invoke.cont266:                                   ; preds = %while.end258
  call void @rewind(ptr noundef nonnull %call224)
  %data.i755 = getelementptr inbounds %class.Array.12, ptr %filenames, i64 0, i32 3
  %98 = load ptr, ptr %data.i755, align 8, !tbaa !260
  %call271 = call i64 @fread(ptr noundef %98, i64 noundef 1, i64 noundef %call263, ptr noundef nonnull %call224)
  invoke void @_ZN5ArrayIPcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %fname, i32 noundef %files.2)
          to label %invoke.cont272 unwind label %lpad261

invoke.cont272:                                   ; preds = %invoke.cont266
  invoke void @_ZN5ArrayIlLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %fsize, i32 noundef %files.2)
          to label %invoke.cont273 unwind label %lpad261

invoke.cont273:                                   ; preds = %invoke.cont272
  %99 = load ptr, ptr %data.i755, align 8, !tbaa !260
  br label %while.cond278

while.cond278:                                    ; preds = %while.body284, %invoke.cont273
  %p274.0 = phi ptr [ %99, %invoke.cont273 ], [ %incdec.ptr285, %while.body284 ]
  %100 = load i8, ptr %p274.0, align 1, !tbaa !9
  switch i8 %100, label %while.body284 [
    i8 0, label %while.end286
    i8 13, label %while.end286
  ]

while.body284:                                    ; preds = %while.cond278
  %incdec.ptr285 = getelementptr inbounds i8, ptr %p274.0, i64 1
  br label %while.cond278, !llvm.loop !289

lpad261:                                          ; preds = %invoke.cont272, %invoke.cont266, %while.end258
  %101 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup476

while.end286:                                     ; preds = %while.cond278, %while.cond278
  %cmp2901049 = icmp sgt i32 %files.2, 0
  br i1 %cmp2901049, label %for.body292.preheader, label %if.end337

for.body292.preheader:                            ; preds = %while.end286
  %wide.trip.count1109 = zext i32 %files.2 to i64
  br label %for.body292

for.body292:                                      ; preds = %for.body292.preheader, %if.end328
  %indvars.iv1104 = phi i64 [ 0, %for.body292.preheader ], [ %indvars.iv.next1105, %if.end328 ]
  %p274.0.pn1050 = phi ptr [ %p274.0, %for.body292.preheader ], [ %p274.3, %if.end328 ]
  %add.ptr293 = getelementptr inbounds i8, ptr %p274.0.pn1050, i64 2
  %call.i757 = call i64 @strtol(ptr nocapture noundef nonnull %add.ptr293, ptr noundef null, i32 noundef 10) #39
  %102 = load ptr, ptr %data10.i.i645, align 8, !tbaa !280
  %arrayidx.i760 = getelementptr inbounds i64, ptr %102, i64 %indvars.iv1104
  store i64 %call.i757, ptr %arrayidx.i760, align 8, !tbaa !285
  br label %while.cond298

while.cond298:                                    ; preds = %while.cond298, %for.body292
  %p274.0.pn.pn = phi ptr [ %p274.0.pn1050, %for.body292 ], [ %p274.2, %while.cond298 ]
  %p274.2 = getelementptr inbounds i8, ptr %p274.0.pn.pn, i64 1
  %103 = load i8, ptr %p274.2, align 1, !tbaa !9
  switch i8 %103, label %while.cond298 [
    i8 0, label %while.end306
    i8 9, label %while.end306
  ], !llvm.loop !290

lpad295:                                          ; preds = %invoke.cont321
  %104 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup476

while.end306:                                     ; preds = %while.cond298, %while.cond298
  %add.ptr307 = getelementptr inbounds i8, ptr %p274.0.pn.pn, i64 2
  %105 = load ptr, ptr %data10.i.i, align 8, !tbaa !275
  %arrayidx.i763 = getelementptr inbounds ptr, ptr %105, i64 %indvars.iv1104
  store ptr %add.ptr307, ptr %arrayidx.i763, align 8, !tbaa !5
  br label %while.cond310

while.cond310:                                    ; preds = %while.body316, %while.end306
  %p274.3 = phi ptr [ %p274.2, %while.end306 ], [ %incdec.ptr317, %while.body316 ]
  %106 = load i8, ptr %p274.3, align 1, !tbaa !9
  switch i8 %106, label %while.body316 [
    i8 0, label %invoke.cont321
    i8 13, label %if.end328
  ]

while.body316:                                    ; preds = %while.cond310
  %incdec.ptr317 = getelementptr inbounds i8, ptr %p274.3, i64 1
  br label %while.cond310, !llvm.loop !291

invoke.cont321:                                   ; preds = %while.cond310
  %107 = load ptr, ptr %data.i.i746, align 8, !tbaa !260
  %108 = load ptr, ptr %data.i755, align 8, !tbaa !260
  %sub.ptr.lhs.cast = ptrtoint ptr %p274.3 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %108 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call326 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.52, ptr noundef %107, i64 noundef %sub.ptr.sub)
  %exception.i766 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %exception.i766, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i766, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc767 unwind label %lpad295

.noexc767:                                        ; preds = %invoke.cont321
  unreachable

if.end328:                                        ; preds = %while.cond310
  store i8 0, ptr %p274.3, align 1, !tbaa !9
  %indvars.iv.next1105 = add nuw nsw i64 %indvars.iv1104, 1
  %exitcond1110.not = icmp eq i64 %indvars.iv.next1105, %wide.trip.count1109
  br i1 %exitcond1110.not, label %if.end337, label %for.body292, !llvm.loop !292

if.end337:                                        ; preds = %if.end328, %while.end286, %if.end217
  %files.3 = phi i32 [ %files.1, %if.end217 ], [ %files.2, %while.end286 ], [ %files.2, %if.end328 ]
  %archive.1 = phi ptr [ %archive.0, %if.end217 ], [ %call224, %while.end286 ], [ %call224, %if.end328 ]
  %109 = load i32, ptr @level, align 4, !tbaa !25
  %tobool.not.i769 = icmp ugt i32 %109, 12
  br i1 %tobool.not.i769, label %invoke.cont338, label %if.end.i

if.end.i:                                         ; preds = %if.end337
  %mul = shl nuw i32 524288, %109
  invoke void @_ZN5ArrayIhLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) @buf, i32 noundef %mul)
          to label %invoke.cont338 unwind label %lpad220

invoke.cont338:                                   ; preds = %if.end337, %if.end.i
  %cmp3411052 = icmp sgt i32 %files.3, 0
  br i1 %cmp3411052, label %for.body343.lr.ph, label %for.cond.cleanup342

for.body343.lr.ph:                                ; preds = %invoke.cont338
  %110 = load ptr, ptr %data10.i.i645, align 8, !tbaa !280
  %wide.trip.count1115 = zext i32 %files.3 to i64
  %min.iters.check = icmp ult i32 %files.3, 4
  br i1 %min.iters.check, label %for.body343.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body343.lr.ph
  %n.vec = and i64 %wide.trip.count1115, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <2 x i64> [ zeroinitializer, %vector.ph ], [ %113, %vector.body ]
  %vec.phi1161 = phi <2 x i64> [ zeroinitializer, %vector.ph ], [ %114, %vector.body ]
  %111 = getelementptr inbounds i64, ptr %110, i64 %index
  %wide.load = load <2 x i64>, ptr %111, align 8, !tbaa !285
  %112 = getelementptr inbounds i64, ptr %111, i64 2
  %wide.load1162 = load <2 x i64>, ptr %112, align 8, !tbaa !285
  %113 = add <2 x i64> %wide.load, %vec.phi
  %114 = add <2 x i64> %wide.load1162, %vec.phi1161
  %index.next = add nuw i64 %index, 4
  %115 = icmp eq i64 %index.next, %n.vec
  br i1 %115, label %middle.block, label %vector.body, !llvm.loop !293

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add <2 x i64> %114, %113
  %116 = call i64 @llvm.vector.reduce.add.v2i64(<2 x i64> %bin.rdx)
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count1115
  br i1 %cmp.n, label %for.cond.cleanup342, label %for.body343.preheader

for.body343.preheader:                            ; preds = %for.body343.lr.ph, %middle.block
  %indvars.iv1111.ph = phi i64 [ 0, %for.body343.lr.ph ], [ %n.vec, %middle.block ]
  %total_size.01053.ph = phi i64 [ 0, %for.body343.lr.ph ], [ %116, %middle.block ]
  br label %for.body343

for.cond.cleanup342:                              ; preds = %for.body343, %middle.block, %invoke.cont338
  %total_size.0.lcssa = phi i64 [ 0, %invoke.cont338 ], [ %116, %middle.block ], [ %add347, %for.body343 ]
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %en) #39
  store i32 2048, ptr %en, align 8, !tbaa !230
  %mode.i = getelementptr inbounds %class.Encoder, ptr %en, i64 0, i32 1
  store i32 %mode.0, ptr %mode.i, align 4, !tbaa !232
  %archive.i = getelementptr inbounds %class.Encoder, ptr %en, i64 0, i32 2
  store ptr %archive.1, ptr %archive.i, align 8, !tbaa !235
  %x1.i = getelementptr inbounds %class.Encoder, ptr %en, i64 0, i32 3
  store i32 0, ptr %x1.i, align 8, !tbaa !236
  %x2.i = getelementptr inbounds %class.Encoder, ptr %en, i64 0, i32 4
  store i32 -1, ptr %x2.i, align 4, !tbaa !237
  %x.i = getelementptr inbounds %class.Encoder, ptr %en, i64 0, i32 5
  store i32 0, ptr %x.i, align 8, !tbaa !238
  %alt.i = getelementptr inbounds %class.Encoder, ptr %en, i64 0, i32 6
  store ptr null, ptr %alt.i, align 8, !tbaa !239
  %117 = load i32, ptr @level, align 4, !tbaa !25
  %cmp.i = icmp sgt i32 %117, 0
  %or.cond.i771 = and i1 %cmp218, %cmp.i
  br i1 %or.cond.i771, label %for.body.preheader.i, label %for.body12.i.preheader

for.body.preheader.i:                             ; preds = %for.cond.cleanup342
  %call.i772 = call i32 @getc(ptr noundef %archive.1)
  %and.i = and i32 %call.i772, 255
  store i32 %and.i, ptr %x.i, align 8, !tbaa !238
  %shl.1.i = shl nuw nsw i32 %and.i, 8
  %118 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call.1.i = call i32 @getc(ptr noundef %118)
  %and.1.i = and i32 %call.1.i, 255
  %add.1.i = or i32 %and.1.i, %shl.1.i
  store i32 %add.1.i, ptr %x.i, align 8, !tbaa !238
  %shl.2.i = shl nuw nsw i32 %add.1.i, 8
  %119 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call.2.i = call i32 @getc(ptr noundef %119)
  %and.2.i = and i32 %call.2.i, 255
  %add.2.i = or i32 %and.2.i, %shl.2.i
  store i32 %add.2.i, ptr %x.i, align 8, !tbaa !238
  %shl.3.i = shl nuw i32 %add.2.i, 8
  %120 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call.3.i = call i32 @getc(ptr noundef %120)
  %and.3.i = and i32 %call.3.i, 255
  %add.3.i = or i32 %and.3.i, %shl.3.i
  store i32 %add.3.i, ptr %x.i, align 8, !tbaa !238
  br label %for.body12.i.preheader

for.body12.i.preheader:                           ; preds = %for.body.preheader.i, %for.cond.cleanup342
  br label %for.body12.i

for.body12.i:                                     ; preds = %for.body12.i, %for.body12.i.preheader
  %indvars.iv.i = phi i64 [ 0, %for.body12.i.preheader ], [ %indvars.iv.next.i.1, %for.body12.i ]
  %i8.025.tr.i = trunc i64 %indvars.iv.i to i16
  %121 = shl i16 %i8.025.tr.i, 1
  %div.rhs.trunc.i = or i16 %121, 3
  %div23.i = udiv i16 16384, %div.rhs.trunc.i
  %div.zext.i = zext i16 %div23.i to i32
  %arrayidx.i774 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %indvars.iv.i
  store i32 %div.zext.i, ptr %arrayidx.i774, align 8, !tbaa !25
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %i8.025.tr.i.1 = trunc i64 %indvars.iv.next.i to i16
  %122 = shl i16 %i8.025.tr.i.1, 1
  %div.rhs.trunc.i.1 = add nuw nsw i16 %122, 3
  %div23.i.1 = udiv i16 16384, %div.rhs.trunc.i.1
  %div.zext.i.1 = zext i16 %div23.i.1 to i32
  %arrayidx.i774.1 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %indvars.iv.next.i
  store i32 %div.zext.i.1, ptr %arrayidx.i774.1, align 4, !tbaa !25
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %exitcond.not.i.1 = icmp eq i64 %indvars.iv.next.i.1, 1024
  br i1 %exitcond.not.i.1, label %invoke.cont353, label %for.body12.i, !llvm.loop !240

for.body343:                                      ; preds = %for.body343.preheader, %for.body343
  %indvars.iv1111 = phi i64 [ %indvars.iv.next1112, %for.body343 ], [ %indvars.iv1111.ph, %for.body343.preheader ]
  %total_size.01053 = phi i64 [ %add347, %for.body343 ], [ %total_size.01053.ph, %for.body343.preheader ]
  %arrayidx.i777 = getelementptr inbounds i64, ptr %110, i64 %indvars.iv1111
  %123 = load i64, ptr %arrayidx.i777, align 8, !tbaa !285
  %add347 = add nsw i64 %123, %total_size.01053
  %indvars.iv.next1112 = add nuw nsw i64 %indvars.iv1111, 1
  %exitcond1116.not = icmp eq i64 %indvars.iv.next1112, %wide.trip.count1115
  br i1 %exitcond1116.not, label %for.cond.cleanup342, label %for.body343, !llvm.loop !294

invoke.cont353:                                   ; preds = %for.body12.i
  br i1 %cmp79, label %for.cond357.preheader, label %if.else376

for.cond357.preheader:                            ; preds = %invoke.cont353
  br i1 %cmp3411052, label %for.body360.preheader, label %for.cond.cleanup359

for.body360.preheader:                            ; preds = %for.cond357.preheader
  %wide.trip.count1131 = zext i32 %files.3 to i64
  br label %for.body360

for.cond.cleanup359:                              ; preds = %for.inc367, %for.cond357.preheader
  %124 = load i32, ptr %mode.i, align 4, !tbaa !232
  %cmp.i779 = icmp eq i32 %124, 0
  %125 = load i32, ptr @level, align 4
  %cmp2.i = icmp sgt i32 %125, 0
  %or.cond.i780 = select i1 %cmp.i779, i1 %cmp2.i, i1 false
  br i1 %or.cond.i780, label %if.then.i, label %invoke.cont371

if.then.i:                                        ; preds = %for.cond.cleanup359
  %126 = load i32, ptr %x1.i, align 8, !tbaa !236
  %shr.i = lshr i32 %126, 24
  %127 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call.i783 = call i32 @putc(i32 noundef %shr.i, ptr noundef %127)
  br label %invoke.cont371

for.body360:                                      ; preds = %for.body360.preheader, %for.inc367
  %indvars.iv1127 = phi i64 [ 0, %for.body360.preheader ], [ %indvars.iv.next1128, %for.inc367 ]
  %128 = load ptr, ptr %data10.i.i, align 8, !tbaa !275
  %arrayidx.i787 = getelementptr inbounds ptr, ptr %128, i64 %indvars.iv1127
  %129 = load ptr, ptr %arrayidx.i787, align 8, !tbaa !5
  %130 = load ptr, ptr %data10.i.i645, align 8, !tbaa !280
  %arrayidx.i790 = getelementptr inbounds i64, ptr %130, i64 %indvars.iv1127
  %131 = load i64, ptr %arrayidx.i790, align 8, !tbaa !285
  invoke void @_Z8compressPKclR7Encoder(ptr noundef %129, i64 noundef %131, ptr noundef nonnull align 8 dereferenceable(40) %en)
          to label %for.inc367 unwind label %lpad361

for.inc367:                                       ; preds = %for.body360
  %indvars.iv.next1128 = add nuw nsw i64 %indvars.iv1127, 1
  %exitcond1132.not = icmp eq i64 %indvars.iv.next1128, %wide.trip.count1131
  br i1 %exitcond1132.not, label %for.cond.cleanup359, label %for.body360, !llvm.loop !295

lpad361:                                          ; preds = %for.body360
  %132 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup474

invoke.cont371:                                   ; preds = %if.then.i, %for.cond.cleanup359
  %133 = load ptr, ptr %archive.i, align 8, !tbaa !235
  %call.i792 = call i64 @ftell(ptr noundef %133)
  %call375 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.53, i64 noundef %total_size.0.lcssa, i64 noundef %call.i792)
  br label %if.end470

if.else376:                                       ; preds = %invoke.cont353
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %dir) #39
  %cmp377 = icmp sgt i32 %argc.addr.0999, 2
  %arrayidx378 = getelementptr inbounds ptr, ptr %argv.addr.0998, i64 2
  %cond.in = select i1 %cmp377, ptr %arrayidx378, ptr %arrayidx43
  %cond = load ptr, ptr %cond.in, align 8, !tbaa !5
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %dir, ptr noundef %cond)
          to label %invoke.cont381 unwind label %lpad380

invoke.cont381:                                   ; preds = %if.else376
  %cmp382 = icmp eq i32 %argc.addr.0999, 2
  br i1 %cmp382, label %if.then383, label %if.end424

if.then383:                                       ; preds = %invoke.cont381
  %134 = load i32, ptr %dir, align 8, !tbaa !262
  %sub388 = add i32 %134, -2
  %cmp3901057 = icmp sgt i32 %134, 1
  br i1 %cmp3901057, label %for.body391.lr.ph, label %for.end418

for.body391.lr.ph:                                ; preds = %if.then383
  %data.i793 = getelementptr inbounds %class.Array.12, ptr %dir, i64 0, i32 3
  %135 = load ptr, ptr %data.i793, align 8, !tbaa !260
  %arrayidx.i803 = getelementptr inbounds i8, ptr %135, i64 1
  %136 = zext i32 %sub388 to i64
  br label %for.body391

for.body391:                                      ; preds = %for.body391.lr.ph, %for.inc416
  %indvars.iv1117 = phi i64 [ %136, %for.body391.lr.ph ], [ %indvars.iv.next1118, %for.inc416 ]
  %arrayidx.i795 = getelementptr inbounds i8, ptr %135, i64 %indvars.iv1117
  %137 = load i8, ptr %arrayidx.i795, align 1, !tbaa !9
  switch i8 %137, label %if.end404 [
    i8 47, label %if.then401
    i8 92, label %if.then401
  ]

if.then401:                                       ; preds = %for.body391, %for.body391
  %arrayidx.i795.le = getelementptr inbounds i8, ptr %135, i64 %indvars.iv1117
  store i8 0, ptr %arrayidx.i795.le, align 1, !tbaa !9
  br label %if.end424

lpad380:                                          ; preds = %if.else376
  %138 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup469

lpad385:                                          ; preds = %if.then420
  %139 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup468

if.end404:                                        ; preds = %for.body391
  %cmp405 = icmp eq i64 %indvars.iv1117, 1
  br i1 %cmp405, label %land.lhs.true406, label %for.inc416

land.lhs.true406:                                 ; preds = %if.end404
  %140 = load i8, ptr %arrayidx.i803, align 1, !tbaa !9
  %cmp410 = icmp eq i8 %140, 58
  br i1 %cmp410, label %if.then411, label %for.inc416

if.then411:                                       ; preds = %land.lhs.true406
  %arrayidx.i805 = getelementptr inbounds i8, ptr %135, i64 2
  store i8 0, ptr %arrayidx.i805, align 1, !tbaa !9
  br label %if.end424

for.inc416:                                       ; preds = %if.end404, %land.lhs.true406
  %indvars.iv.next1118 = add nsw i64 %indvars.iv1117, -1
  %cmp390 = icmp sgt i64 %indvars.iv1117, 0
  br i1 %cmp390, label %for.body391, label %if.then420, !llvm.loop !296

for.end418:                                       ; preds = %if.then383
  %cmp419 = icmp eq i32 %sub388, -1
  br i1 %cmp419, label %if.then420, label %if.end424

if.then420:                                       ; preds = %for.inc416, %for.end418
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %dir, i32 noundef 2)
          to label %_ZN6StringaSEPKc.exit unwind label %lpad385

_ZN6StringaSEPKc.exit:                            ; preds = %if.then420
  %data.i.i808 = getelementptr inbounds %class.Array.12, ptr %dir, i64 0, i32 3
  %141 = load ptr, ptr %data.i.i808, align 8, !tbaa !260
  store i16 46, ptr %141, align 1
  br label %if.end424

if.end424:                                        ; preds = %if.then401, %if.then411, %for.end418, %_ZN6StringaSEPKc.exit, %invoke.cont381
  %data.i.i810 = getelementptr inbounds %class.Array.12, ptr %dir, i64 0, i32 3
  %142 = load ptr, ptr %data.i.i810, align 8, !tbaa !260
  %call.i811 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %142) #44
  %143 = trunc i64 %call.i811 to i32
  %conv.i812 = add i32 %143, 1
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %dir, i32 noundef %conv.i812)
          to label %_ZN6StringaSEPKc.exit816 unwind label %lpad425.loopexit.split-lp

_ZN6StringaSEPKc.exit816:                         ; preds = %if.end424
  %144 = load ptr, ptr %data.i.i810, align 8, !tbaa !260
  %call3.i814 = call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %144, ptr noundef nonnull dereferenceable(1) %142) #39
  %145 = load ptr, ptr %data.i.i810, align 8, !tbaa !260
  %146 = load i8, ptr %145, align 1, !tbaa !9
  %tobool431.not = icmp eq i8 %146, 0
  br i1 %tobool431.not, label %if.end443, label %land.lhs.true432

land.lhs.true432:                                 ; preds = %_ZN6StringaSEPKc.exit816
  %147 = load i32, ptr %dir, align 8, !tbaa !262
  %cmp435.not = icmp eq i32 %147, 3
  br i1 %cmp435.not, label %lor.lhs.false436, label %if.then441

lor.lhs.false436:                                 ; preds = %land.lhs.true432
  %arrayidx.i819 = getelementptr inbounds i8, ptr %145, i64 1
  %148 = load i8, ptr %arrayidx.i819, align 1, !tbaa !9
  %cmp440.not = icmp eq i8 %148, 58
  br i1 %cmp440.not, label %if.end443, label %if.then.i.i822

if.then441:                                       ; preds = %land.lhs.true432
  %cmp.i.i820 = icmp sgt i32 %147, 0
  br i1 %cmp.i.i820, label %if.then.i.i822, label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i823

if.then.i.i822:                                   ; preds = %lor.lhs.false436, %if.then441
  %dec.i.i821 = add nsw i32 %147, -1
  store i32 %dec.i.i821, ptr %dir, align 8, !tbaa !262
  br label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i823

_ZN5ArrayIcLi0EE8pop_backEv.exit.i823:            ; preds = %if.then.i.i822, %if.then441
  %149 = phi i32 [ %dec.i.i821, %if.then.i.i822 ], [ %147, %if.then441 ]
  %reserved.i.i824 = getelementptr inbounds %class.Array.12, ptr %dir, i64 0, i32 1
  %150 = load i32, ptr %reserved.i.i824, align 4, !tbaa !267
  %cmp.i3.i829 = icmp eq i32 %149, %150
  br i1 %cmp.i3.i829, label %if.then.i4.i834, label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i839

if.then.i4.i834:                                  ; preds = %_ZN5ArrayIcLi0EE8pop_backEv.exit.i823
  %mul.i.i831 = shl nsw i32 %149, 1
  %cond.i.i.i832 = call i32 @llvm.smax.i32(i32 %mul.i.i831, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %dir, i32 noundef %cond.i.i.i832)
          to label %.noexc852 unwind label %lpad425.loopexit

.noexc852:                                        ; preds = %if.then.i4.i834
  %.pre = load ptr, ptr %data.i.i810, align 8, !tbaa !260
  br label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i839

_ZN5ArrayIcLi0EE9push_backERKc.exit.i839:         ; preds = %.noexc852, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i823
  %151 = phi ptr [ %.pre, %.noexc852 ], [ %145, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i823 ]
  %inc.i.i835 = add nsw i32 %149, 1
  store i32 %inc.i.i835, ptr %dir, align 8, !tbaa !262
  %idxprom.i.i836 = sext i32 %149 to i64
  %arrayidx.i.i837 = getelementptr inbounds i8, ptr %151, i64 %idxprom.i.i836
  store i8 47, ptr %arrayidx.i.i837, align 1, !tbaa !9
  %.pre17.i840 = load i32, ptr %dir, align 8, !tbaa !262
  %152 = load i32, ptr %reserved.i.i824, align 4, !tbaa !267
  %cmp.i6.i843 = icmp eq i32 %.pre17.i840, %152
  br i1 %cmp.i6.i843, label %if.then.i9.i847, label %_ZN6StringpLEPKc.exit854

if.then.i9.i847:                                  ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i839
  %mul.i7.i845 = shl nsw i32 %.pre17.i840, 1
  %cond.i.i8.i846 = call i32 @llvm.smax.i32(i32 %mul.i7.i845, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %dir, i32 noundef %cond.i.i8.i846)
          to label %_ZN6StringpLEPKc.exit854 unwind label %lpad425.loopexit.split-lp

_ZN6StringpLEPKc.exit854:                         ; preds = %if.then.i9.i847, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i839
  %153 = load ptr, ptr %data.i.i810, align 8, !tbaa !260
  %inc.i11.i849 = add nsw i32 %.pre17.i840, 1
  store i32 %inc.i11.i849, ptr %dir, align 8, !tbaa !262
  %idxprom.i12.i850 = sext i32 %.pre17.i840 to i64
  %arrayidx.i13.i851 = getelementptr inbounds i8, ptr %153, i64 %idxprom.i12.i850
  store i8 0, ptr %arrayidx.i13.i851, align 1, !tbaa !9
  br label %if.end443

lpad425.loopexit:                                 ; preds = %if.then.i4.i834
  %lpad.loopexit1012 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup468

lpad425.loopexit.split-lp:                        ; preds = %if.end424, %if.then.i9.i847
  %lpad.loopexit.split-lp1013 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup468

if.end443:                                        ; preds = %_ZN6StringpLEPKc.exit854, %lor.lhs.false436, %_ZN6StringaSEPKc.exit816
  br i1 %cmp3411052, label %for.body448.lr.ph, label %for.cond.cleanup447

for.body448.lr.ph:                                ; preds = %if.end443
  %reserved.i.i869 = getelementptr inbounds %class.Array.12, ptr %out, i64 0, i32 1
  %data.i.i870 = getelementptr inbounds %class.Array.12, ptr %out, i64 0, i32 3
  %ptr.i959 = getelementptr inbounds %class.Array.12, ptr %out, i64 0, i32 2
  %wide.trip.count1125 = zext i32 %files.3 to i64
  br label %for.body448

for.cond.cleanup447:                              ; preds = %_ZN5ArrayIcLi0EED2Ev.exit908, %if.end443
  %154 = load i32, ptr %dir, align 8, !tbaa !262
  %155 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i855 = sub i32 %155, %154
  store i32 %add.i.i855, ptr @programChecker, align 8, !tbaa !13
  %156 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i856 = icmp sgt i32 %add.i.i855, %156
  br i1 %cmp.i.i856, label %if.then.i.i857, label %_ZN5ArrayIcLi0EED2Ev.exit859

if.then.i.i857:                                   ; preds = %for.cond.cleanup447
  store i32 %add.i.i855, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIcLi0EED2Ev.exit859

_ZN5ArrayIcLi0EED2Ev.exit859:                     ; preds = %for.cond.cleanup447, %if.then.i.i857
  %ptr.i858 = getelementptr inbounds %class.Array.12, ptr %dir, i64 0, i32 2
  %157 = load ptr, ptr %ptr.i858, align 8, !tbaa !264
  call void @free(ptr noundef %157) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %dir) #39
  br label %if.end470

for.body448:                                      ; preds = %for.body448.lr.ph, %_ZN5ArrayIcLi0EED2Ev.exit908
  %indvars.iv1121 = phi i64 [ 0, %for.body448.lr.ph ], [ %indvars.iv.next1122, %_ZN5ArrayIcLi0EED2Ev.exit908 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %out) #39
  %158 = load ptr, ptr %data.i.i810, align 8, !tbaa !260
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %out, ptr noundef %158)
          to label %invoke.cont452 unwind label %lpad449

invoke.cont452:                                   ; preds = %for.body448
  %159 = load ptr, ptr %data10.i.i, align 8, !tbaa !275
  %arrayidx.i863 = getelementptr inbounds ptr, ptr %159, i64 %indvars.iv1121
  %160 = load ptr, ptr %arrayidx.i863, align 8, !tbaa !5
  %161 = load i32, ptr %out, align 8, !tbaa !262
  %cmp.i.i864 = icmp sgt i32 %161, 0
  br i1 %cmp.i.i864, label %if.then.i.i866, label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i868

if.then.i.i866:                                   ; preds = %invoke.cont452
  %dec.i.i865 = add nsw i32 %161, -1
  store i32 %dec.i.i865, ptr %out, align 8, !tbaa !262
  br label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i868

_ZN5ArrayIcLi0EE8pop_backEv.exit.i868:            ; preds = %if.then.i.i866, %invoke.cont452
  %162 = phi i32 [ %161, %invoke.cont452 ], [ %dec.i.i865, %if.then.i.i866 ]
  %163 = load i8, ptr %160, align 1, !tbaa !9
  %tobool.not15.i867 = icmp eq i8 %163, 0
  br i1 %tobool.not15.i867, label %while.end.i889, label %while.body.i875

while.body.i875:                                  ; preds = %_ZN5ArrayIcLi0EE8pop_backEv.exit.i868, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i884
  %164 = phi i8 [ %174, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i884 ], [ %163, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i868 ]
  %s.addr.016.i872 = phi ptr [ %incdec.ptr.i873, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i884 ], [ %160, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i868 ]
  %incdec.ptr.i873 = getelementptr inbounds i8, ptr %s.addr.016.i872, i64 1
  %165 = load i32, ptr %out, align 8, !tbaa !262
  %166 = load i32, ptr %reserved.i.i869, align 4, !tbaa !267
  %cmp.i3.i874 = icmp eq i32 %165, %166
  br i1 %cmp.i3.i874, label %if.then.i4.i879, label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i884

if.then.i4.i879:                                  ; preds = %while.body.i875
  %mul.i.i876 = shl nsw i32 %165, 1
  %cond.i.i.i877 = call i32 @llvm.smax.i32(i32 %mul.i.i876, i32 1)
  %cmp.not.i = icmp slt i32 %165, %cond.i.i.i877
  br i1 %cmp.not.i, label %if.end.i961, label %.noexc897

if.end.i961:                                      ; preds = %if.then.i4.i879
  %167 = load ptr, ptr %ptr.i959, align 8, !tbaa !264
  %168 = load ptr, ptr %data.i.i870, align 8, !tbaa !260
  store i32 %cond.i.i.i877, ptr %reserved.i.i869, align 4, !tbaa !267
  store i32 %cond.i.i.i877, ptr %out, align 8, !tbaa !262
  %conv.i.i = zext i32 %cond.i.i.i877 to i64
  %169 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i962 = add nsw i32 %169, %cond.i.i.i877
  store i32 %add.i.i.i962, ptr @programChecker, align 8, !tbaa !13
  %170 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i963 = icmp sgt i32 %add.i.i.i962, %170
  br i1 %cmp.i.i.i963, label %if.then.i.i.i964, label %_ZN14ProgramChecker5allocEi.exit.i.i967

if.then.i.i.i964:                                 ; preds = %if.end.i961
  store i32 %add.i.i.i962, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i967

_ZN14ProgramChecker5allocEi.exit.i.i967:          ; preds = %if.then.i.i.i964, %if.end.i961
  %171 = phi i32 [ %add.i.i.i962, %if.then.i.i.i964 ], [ %170, %if.end.i961 ]
  %call.i.i965 = call noalias ptr @calloc(i64 noundef %conv.i.i, i64 noundef 1) #41
  store ptr %call.i.i965, ptr %ptr.i959, align 8, !tbaa !264
  %tobool.not.i.i966 = icmp eq ptr %call.i.i965, null
  br i1 %tobool.not.i.i966, label %if.then7.i.i969, label %if.end8.i.i

if.then7.i.i969:                                  ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i967
  %exception.i.i.i968 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i968, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %exception.i.i.i968, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %.noexc973 unwind label %lpad453.loopexit.split-lp

.noexc973:                                        ; preds = %if.then7.i.i969
  unreachable

if.end8.i.i:                                      ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i967
  store ptr %call.i.i965, ptr %data.i.i870, align 8, !tbaa !260
  %tobool.not.i970 = icmp eq ptr %167, null
  br i1 %tobool.not.i970, label %.noexc897, label %if.then3.i

if.then3.i:                                       ; preds = %if.end8.i.i
  %tobool4.not.i = icmp eq ptr %168, null
  br i1 %tobool4.not.i, label %if.end11.i, label %if.then5.i

if.then5.i:                                       ; preds = %if.then3.i
  %cond.i.i = call i32 @llvm.smin.i32(i32 %cond.i.i.i877, i32 %165)
  %conv.i971 = sext i32 %cond.i.i to i64
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %call.i.i965, ptr nonnull align 1 %168, i64 %conv.i971, i1 false)
  store i32 %169, ptr @programChecker, align 8, !tbaa !13
  %cmp.i19.i = icmp sgt i32 %169, %171
  br i1 %cmp.i19.i, label %if.then.i20.i, label %if.end11.i

if.then.i20.i:                                    ; preds = %if.then5.i
  store i32 %169, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then.i20.i, %if.then5.i, %if.then3.i
  call void @free(ptr noundef nonnull %167) #39
  br label %.noexc897

.noexc897:                                        ; preds = %if.then.i4.i879, %if.end11.i, %if.end8.i.i
  store i32 %165, ptr %out, align 8, !tbaa !262
  %.pre.i878 = load i8, ptr %s.addr.016.i872, align 1, !tbaa !9
  br label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i884

_ZN5ArrayIcLi0EE9push_backERKc.exit.i884:         ; preds = %.noexc897, %while.body.i875
  %172 = phi i8 [ %164, %while.body.i875 ], [ %.pre.i878, %.noexc897 ]
  %173 = load ptr, ptr %data.i.i870, align 8, !tbaa !260
  %inc.i.i880 = add nsw i32 %165, 1
  store i32 %inc.i.i880, ptr %out, align 8, !tbaa !262
  %idxprom.i.i881 = sext i32 %165 to i64
  %arrayidx.i.i882 = getelementptr inbounds i8, ptr %173, i64 %idxprom.i.i881
  store i8 %172, ptr %arrayidx.i.i882, align 1, !tbaa !9
  %174 = load i8, ptr %incdec.ptr.i873, align 1, !tbaa !9
  %tobool.not.i883 = icmp eq i8 %174, 0
  br i1 %tobool.not.i883, label %while.end.loopexit.i886, label %while.body.i875, !llvm.loop !268

while.end.loopexit.i886:                          ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i884
  %.pre17.i885 = load i32, ptr %out, align 8, !tbaa !262
  br label %while.end.i889

while.end.i889:                                   ; preds = %while.end.loopexit.i886, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i868
  %175 = phi i32 [ %.pre17.i885, %while.end.loopexit.i886 ], [ %162, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i868 ]
  %176 = load i32, ptr %reserved.i.i869, align 4, !tbaa !267
  %cmp.i6.i888 = icmp eq i32 %175, %176
  br i1 %cmp.i6.i888, label %if.then.i9.i892, label %_ZN6StringpLEPKc.exit899

if.then.i9.i892:                                  ; preds = %while.end.i889
  %mul.i7.i890 = shl nsw i32 %175, 1
  %cond.i.i8.i891 = call i32 @llvm.smax.i32(i32 %mul.i7.i890, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %out, i32 noundef %cond.i.i8.i891)
          to label %_ZN6StringpLEPKc.exit899 unwind label %lpad453.loopexit

_ZN6StringpLEPKc.exit899:                         ; preds = %if.then.i9.i892, %while.end.i889
  %177 = load ptr, ptr %data.i.i870, align 8, !tbaa !260
  %inc.i11.i894 = add nsw i32 %175, 1
  store i32 %inc.i11.i894, ptr %out, align 8, !tbaa !262
  %idxprom.i12.i895 = sext i32 %175 to i64
  %arrayidx.i13.i896 = getelementptr inbounds i8, ptr %177, i64 %idxprom.i12.i895
  store i8 0, ptr %arrayidx.i13.i896, align 1, !tbaa !9
  %178 = load ptr, ptr %data.i.i870, align 8, !tbaa !260
  %179 = load ptr, ptr %data10.i.i645, align 8, !tbaa !280
  %arrayidx.i903 = getelementptr inbounds i64, ptr %179, i64 %indvars.iv1121
  %180 = load i64, ptr %arrayidx.i903, align 8, !tbaa !285
  invoke void @_Z10decompressPKclR7Encoder(ptr noundef %178, i64 noundef %180, ptr noundef nonnull align 8 dereferenceable(40) %en)
          to label %invoke.cont461 unwind label %lpad453.loopexit

invoke.cont461:                                   ; preds = %_ZN6StringpLEPKc.exit899
  %181 = load i32, ptr %out, align 8, !tbaa !262
  %182 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i904 = sub i32 %182, %181
  store i32 %add.i.i904, ptr @programChecker, align 8, !tbaa !13
  %183 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i905 = icmp sgt i32 %add.i.i904, %183
  br i1 %cmp.i.i905, label %if.then.i.i906, label %_ZN5ArrayIcLi0EED2Ev.exit908

if.then.i.i906:                                   ; preds = %invoke.cont461
  store i32 %add.i.i904, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIcLi0EED2Ev.exit908

_ZN5ArrayIcLi0EED2Ev.exit908:                     ; preds = %invoke.cont461, %if.then.i.i906
  %184 = load ptr, ptr %ptr.i959, align 8, !tbaa !264
  call void @free(ptr noundef %184) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %out) #39
  %indvars.iv.next1122 = add nuw nsw i64 %indvars.iv1121, 1
  %exitcond1126.not = icmp eq i64 %indvars.iv.next1122, %wide.trip.count1125
  br i1 %exitcond1126.not, label %for.cond.cleanup447, label %for.body448, !llvm.loop !297

lpad449:                                          ; preds = %for.body448
  %185 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %ehcleanup463

lpad453.loopexit:                                 ; preds = %_ZN6StringpLEPKc.exit899, %if.then.i9.i892
  %lpad.loopexit = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %lpad453

lpad453.loopexit.split-lp:                        ; preds = %if.then7.i.i969
  %lpad.loopexit.split-lp = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %lpad453

lpad453:                                          ; preds = %lpad453.loopexit.split-lp, %lpad453.loopexit
  %lpad.phi = phi { ptr, i32 } [ %lpad.loopexit, %lpad453.loopexit ], [ %lpad.loopexit.split-lp, %lpad453.loopexit.split-lp ]
  %186 = load i32, ptr %out, align 8, !tbaa !262
  %187 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i909 = sub i32 %187, %186
  store i32 %add.i.i909, ptr @programChecker, align 8, !tbaa !13
  %188 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i910 = icmp sgt i32 %add.i.i909, %188
  br i1 %cmp.i.i910, label %if.then.i.i911, label %_ZN5ArrayIcLi0EED2Ev.exit913

if.then.i.i911:                                   ; preds = %lpad453
  store i32 %add.i.i909, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIcLi0EED2Ev.exit913

_ZN5ArrayIcLi0EED2Ev.exit913:                     ; preds = %lpad453, %if.then.i.i911
  %189 = load ptr, ptr %ptr.i959, align 8, !tbaa !264
  call void @free(ptr noundef %189) #39
  br label %ehcleanup463

ehcleanup463:                                     ; preds = %_ZN5ArrayIcLi0EED2Ev.exit913, %lpad449
  %.pn = phi { ptr, i32 } [ %lpad.phi, %_ZN5ArrayIcLi0EED2Ev.exit913 ], [ %185, %lpad449 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %out) #39
  br label %ehcleanup468

ehcleanup468:                                     ; preds = %lpad425.loopexit, %lpad425.loopexit.split-lp, %ehcleanup463, %lpad385
  %.pn.pn = phi { ptr, i32 } [ %.pn, %ehcleanup463 ], [ %139, %lpad385 ], [ %lpad.loopexit1012, %lpad425.loopexit ], [ %lpad.loopexit.split-lp1013, %lpad425.loopexit.split-lp ]
  %190 = load i32, ptr %dir, align 8, !tbaa !262
  %191 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i914 = sub i32 %191, %190
  store i32 %add.i.i914, ptr @programChecker, align 8, !tbaa !13
  %192 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i915 = icmp sgt i32 %add.i.i914, %192
  br i1 %cmp.i.i915, label %if.then.i.i916, label %_ZN5ArrayIcLi0EED2Ev.exit918

if.then.i.i916:                                   ; preds = %ehcleanup468
  store i32 %add.i.i914, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIcLi0EED2Ev.exit918

_ZN5ArrayIcLi0EED2Ev.exit918:                     ; preds = %ehcleanup468, %if.then.i.i916
  %ptr.i917 = getelementptr inbounds %class.Array.12, ptr %dir, i64 0, i32 2
  %193 = load ptr, ptr %ptr.i917, align 8, !tbaa !264
  call void @free(ptr noundef %193) #39
  br label %ehcleanup469

ehcleanup469:                                     ; preds = %_ZN5ArrayIcLi0EED2Ev.exit918, %lpad380
  %.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn, %_ZN5ArrayIcLi0EED2Ev.exit918 ], [ %138, %lpad380 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %dir) #39
  br label %ehcleanup474

if.end470:                                        ; preds = %_ZN5ArrayIcLi0EED2Ev.exit859, %invoke.cont371
  %call472 = call i32 @fclose(ptr noundef %archive.1)
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %en) #39
  %194 = load i32, ptr %filenames, align 8, !tbaa !262
  %195 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i919 = sub i32 %195, %194
  store i32 %add.i.i919, ptr @programChecker, align 8, !tbaa !13
  %196 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i920 = icmp sgt i32 %add.i.i919, %196
  br i1 %cmp.i.i920, label %if.then.i.i921, label %_ZN5ArrayIcLi0EED2Ev.exit923

if.then.i.i921:                                   ; preds = %if.end470
  store i32 %add.i.i919, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIcLi0EED2Ev.exit923

_ZN5ArrayIcLi0EED2Ev.exit923:                     ; preds = %if.end470, %if.then.i.i921
  %ptr.i922 = getelementptr inbounds %class.Array.12, ptr %filenames, i64 0, i32 2
  %197 = load ptr, ptr %ptr.i922, align 8, !tbaa !264
  call void @free(ptr noundef %197) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %filenames) #39
  %198 = load i32, ptr %archiveName, align 8, !tbaa !262
  %199 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i924 = sub i32 %199, %198
  store i32 %add.i.i924, ptr @programChecker, align 8, !tbaa !13
  %200 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i925 = icmp sgt i32 %add.i.i924, %200
  br i1 %cmp.i.i925, label %if.then.i.i926, label %_ZN5ArrayIcLi0EED2Ev.exit928

if.then.i.i926:                                   ; preds = %_ZN5ArrayIcLi0EED2Ev.exit923
  store i32 %add.i.i924, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIcLi0EED2Ev.exit928

_ZN5ArrayIcLi0EED2Ev.exit928:                     ; preds = %_ZN5ArrayIcLi0EED2Ev.exit923, %if.then.i.i926
  %ptr.i927 = getelementptr inbounds %class.Array.12, ptr %archiveName, i64 0, i32 2
  %201 = load ptr, ptr %ptr.i927, align 8, !tbaa !264
  call void @free(ptr noundef %201) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %archiveName) #39
  %202 = load i32, ptr %fsize, align 8, !tbaa !278
  %203 = load i32, ptr @programChecker, align 8, !tbaa !13
  %204 = shl i32 %202, 3
  %add.i.i929 = sub i32 %203, %204
  store i32 %add.i.i929, ptr @programChecker, align 8, !tbaa !13
  %205 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i930 = icmp sgt i32 %add.i.i929, %205
  br i1 %cmp.i.i930, label %if.then.i.i931, label %_ZN5ArrayIlLi0EED2Ev.exit

if.then.i.i931:                                   ; preds = %_ZN5ArrayIcLi0EED2Ev.exit928
  store i32 %add.i.i929, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIlLi0EED2Ev.exit

_ZN5ArrayIlLi0EED2Ev.exit:                        ; preds = %_ZN5ArrayIcLi0EED2Ev.exit928, %if.then.i.i931
  %206 = load ptr, ptr %ptr5.i.i640, align 8, !tbaa !279
  call void @free(ptr noundef %206) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fsize) #39
  %207 = load i32, ptr %fname, align 8, !tbaa !273
  %208 = load i32, ptr @programChecker, align 8, !tbaa !13
  %209 = shl i32 %207, 3
  %add.i.i933 = sub i32 %208, %209
  store i32 %add.i.i933, ptr @programChecker, align 8, !tbaa !13
  %210 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i934 = icmp sgt i32 %add.i.i933, %210
  br i1 %cmp.i.i934, label %if.then.i.i935, label %_ZN5ArrayIPcLi0EED2Ev.exit

if.then.i.i935:                                   ; preds = %_ZN5ArrayIlLi0EED2Ev.exit
  store i32 %add.i.i933, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIPcLi0EED2Ev.exit

_ZN5ArrayIPcLi0EED2Ev.exit:                       ; preds = %_ZN5ArrayIlLi0EED2Ev.exit, %if.then.i.i935
  %211 = load ptr, ptr %ptr5.i.i, align 8, !tbaa !274
  call void @free(ptr noundef %211) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fname) #39
  br label %try.cont

ehcleanup474:                                     ; preds = %ehcleanup469, %lpad361
  %.pn1065 = phi { ptr, i32 } [ %132, %lpad361 ], [ %.pn.pn.pn, %ehcleanup469 ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %en) #39
  br label %ehcleanup476

ehcleanup476:                                     ; preds = %lpad295, %lpad261, %lpad232.loopexit.split-lp, %lpad232.loopexit, %ehcleanup474, %lpad220, %ehcleanup216
  %.pn983.pn.pn.pn = phi { ptr, i32 } [ %.pn983.pn.pn, %ehcleanup216 ], [ %.pn1065, %ehcleanup474 ], [ %92, %lpad220 ], [ %104, %lpad295 ], [ %101, %lpad261 ], [ %lpad.loopexit1015, %lpad232.loopexit ], [ %lpad.loopexit.split-lp1016, %lpad232.loopexit.split-lp ]
  %212 = load i32, ptr %filenames, align 8, !tbaa !262
  %213 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i937 = sub i32 %213, %212
  store i32 %add.i.i937, ptr @programChecker, align 8, !tbaa !13
  %214 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i938 = icmp sgt i32 %add.i.i937, %214
  br i1 %cmp.i.i938, label %if.then.i.i939, label %_ZN5ArrayIcLi0EED2Ev.exit941

if.then.i.i939:                                   ; preds = %ehcleanup476
  store i32 %add.i.i937, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIcLi0EED2Ev.exit941

_ZN5ArrayIcLi0EED2Ev.exit941:                     ; preds = %ehcleanup476, %if.then.i.i939
  %ptr.i940 = getelementptr inbounds %class.Array.12, ptr %filenames, i64 0, i32 2
  %215 = load ptr, ptr %ptr.i940, align 8, !tbaa !264
  call void @free(ptr noundef %215) #39
  br label %ehcleanup477

ehcleanup477:                                     ; preds = %_ZN5ArrayIcLi0EED2Ev.exit941, %lpad77
  %.pn983.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn983.pn.pn.pn, %_ZN5ArrayIcLi0EED2Ev.exit941 ], [ %45, %lpad77 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %filenames) #39
  br label %ehcleanup478

ehcleanup478:                                     ; preds = %lpad72.loopexit, %lpad72.loopexit.split-lp.loopexit.split-lp, %lpad72.loopexit.split-lp.loopexit, %ehcleanup477
  %.pn983.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn983.pn.pn.pn.pn, %ehcleanup477 ], [ %lpad.loopexit1018, %lpad72.loopexit ], [ %lpad.loopexit1021, %lpad72.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp1022, %lpad72.loopexit.split-lp.loopexit.split-lp ]
  %216 = load i32, ptr %archiveName, align 8, !tbaa !262
  %217 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i942 = sub i32 %217, %216
  store i32 %add.i.i942, ptr @programChecker, align 8, !tbaa !13
  %218 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i943 = icmp sgt i32 %add.i.i942, %218
  br i1 %cmp.i.i943, label %if.then.i.i944, label %_ZN5ArrayIcLi0EED2Ev.exit946

if.then.i.i944:                                   ; preds = %ehcleanup478
  store i32 %add.i.i942, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIcLi0EED2Ev.exit946

_ZN5ArrayIcLi0EED2Ev.exit946:                     ; preds = %ehcleanup478, %if.then.i.i944
  %ptr.i945 = getelementptr inbounds %class.Array.12, ptr %archiveName, i64 0, i32 2
  %219 = load ptr, ptr %ptr.i945, align 8, !tbaa !264
  call void @free(ptr noundef %219) #39
  br label %ehcleanup479

ehcleanup479:                                     ; preds = %_ZN5ArrayIcLi0EED2Ev.exit946, %lpad44
  %.pn983.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn983.pn.pn.pn.pn.pn, %_ZN5ArrayIcLi0EED2Ev.exit946 ], [ %20, %lpad44 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %archiveName) #39
  %220 = load i32, ptr %fsize, align 8, !tbaa !278
  %221 = load i32, ptr @programChecker, align 8, !tbaa !13
  %222 = shl i32 %220, 3
  %add.i.i947 = sub i32 %221, %222
  store i32 %add.i.i947, ptr @programChecker, align 8, !tbaa !13
  %223 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i948 = icmp sgt i32 %add.i.i947, %223
  br i1 %cmp.i.i948, label %if.then.i.i949, label %_ZN5ArrayIlLi0EED2Ev.exit951

if.then.i.i949:                                   ; preds = %ehcleanup479
  store i32 %add.i.i947, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIlLi0EED2Ev.exit951

_ZN5ArrayIlLi0EED2Ev.exit951:                     ; preds = %ehcleanup479, %if.then.i.i949
  %224 = load ptr, ptr %ptr5.i.i640, align 8, !tbaa !279
  call void @free(ptr noundef %224) #39
  br label %ehcleanup482

ehcleanup482:                                     ; preds = %_ZN5ArrayIlLi0EED2Ev.exit951, %lpad41
  %.pn983.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn983.pn.pn.pn.pn.pn.pn, %_ZN5ArrayIlLi0EED2Ev.exit951 ], [ %19, %lpad41 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fsize) #39
  %225 = load i32, ptr %fname, align 8, !tbaa !273
  %226 = load i32, ptr @programChecker, align 8, !tbaa !13
  %227 = shl i32 %225, 3
  %add.i.i952 = sub i32 %226, %227
  store i32 %add.i.i952, ptr @programChecker, align 8, !tbaa !13
  %228 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i953 = icmp sgt i32 %add.i.i952, %228
  br i1 %cmp.i.i953, label %if.then.i.i954, label %_ZN5ArrayIPcLi0EED2Ev.exit956

if.then.i.i954:                                   ; preds = %ehcleanup482
  store i32 %add.i.i952, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIPcLi0EED2Ev.exit956

_ZN5ArrayIPcLi0EED2Ev.exit956:                    ; preds = %ehcleanup482, %if.then.i.i954
  %229 = load ptr, ptr %ptr5.i.i, align 8, !tbaa !274
  call void @free(ptr noundef %229) #39
  br label %ehcleanup484

ehcleanup484:                                     ; preds = %_ZN5ArrayIPcLi0EED2Ev.exit956, %lpad39
  %.pn983.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn983.pn.pn.pn.pn.pn.pn.pn, %_ZN5ArrayIPcLi0EED2Ev.exit956 ], [ %18, %lpad39 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fname) #39
  br label %ehcleanup487

ehcleanup487:                                     ; preds = %ehcleanup484, %lpad
  %.pn983.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn983.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup484 ], [ %6, %lpad ]
  %pause.2 = phi i8 [ %pause.1997, %ehcleanup484 ], [ %pause.0, %lpad ]
  %ehselector.slot.16 = extractvalue { ptr, i32 } %.pn983.pn.pn.pn.pn.pn.pn.pn.pn.pn, 1
  %230 = call i32 @llvm.eh.typeid.for(ptr nonnull @_ZTIPKc) #39
  %matches = icmp eq i32 %ehselector.slot.16, %230
  br i1 %matches, label %catch, label %ehcleanup501

catch:                                            ; preds = %ehcleanup487
  %exn.slot.16 = extractvalue { ptr, i32 } %.pn983.pn.pn.pn.pn.pn.pn.pn.pn.pn, 0
  %231 = call ptr @__cxa_begin_catch(ptr %exn.slot.16) #39
  %tobool488.not = icmp eq ptr %231, null
  br i1 %tobool488.not, label %if.end493, label %if.then489

if.then489:                                       ; preds = %catch
  %puts974 = call i32 @puts(ptr nonnull dereferenceable(1) %231)
  br label %if.end493

if.end493:                                        ; preds = %if.then489, %catch
  call void @__cxa_end_catch() #39
  br label %try.cont

try.cont:                                         ; preds = %if.end493, %_ZN5ArrayIPcLi0EED2Ev.exit
  %pause.3 = phi i8 [ %pause.2, %if.end493 ], [ %pause.1997, %_ZN5ArrayIPcLi0EED2Ev.exit ]
  %232 = and i8 %pause.3, 1
  %tobool496.not = icmp eq i8 %232, 0
  br i1 %tobool496.not, label %if.end500, label %if.then497

if.then497:                                       ; preds = %try.cont
  %puts = call i32 @puts(ptr nonnull dereferenceable(1) @str.63)
  %233 = load ptr, ptr @stdin, align 8, !tbaa !5
  %call.i957 = call i32 @getc(ptr noundef %233)
  br label %if.end500

if.end500:                                        ; preds = %if.then497, %try.cont
  ret i32 0

ehcleanup501:                                     ; preds = %ehcleanup487
  resume { ptr, i32 } %.pn983.pn.pn.pn.pn.pn.pn.pn.pn.pn
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #27

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN5ArrayIPcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %i) local_unnamed_addr #14 comdat align 2 {
entry:
  %reserved = getelementptr inbounds %class.Array.13, ptr %this, i64 0, i32 1
  %0 = load i32, ptr %reserved, align 4, !tbaa !271
  %cmp.not = icmp slt i32 %0, %i
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 %i, ptr %this, align 8, !tbaa !273
  br label %return

if.end:                                           ; preds = %entry
  %ptr = getelementptr inbounds %class.Array.13, ptr %this, i64 0, i32 2
  %1 = load ptr, ptr %ptr, align 8, !tbaa !274
  %data = getelementptr inbounds %class.Array.13, ptr %this, i64 0, i32 3
  %2 = load ptr, ptr %data, align 8, !tbaa !275
  %3 = load i32, ptr %this, align 8, !tbaa !273
  store i32 %i, ptr %reserved, align 4, !tbaa !271
  store i32 %i, ptr %this, align 8, !tbaa !273
  %cmp.i = icmp slt i32 %i, 1
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr, i8 0, i64 16, i1 false)
  br label %_ZN5ArrayIPcLi0EE6createEi.exit

if.end.i:                                         ; preds = %if.end
  %mul.i = shl i32 %i, 3
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = add nsw i32 %4, %mul.i
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %5
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN14ProgramChecker5allocEi.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i

_ZN14ProgramChecker5allocEi.exit.i:               ; preds = %if.then.i.i, %if.end.i
  %conv4.i = sext i32 %mul.i to i64
  %call.i = tail call noalias ptr @calloc(i64 noundef %conv4.i, i64 noundef 1) #41
  store ptr %call.i, ptr %ptr, align 8, !tbaa !274
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then7.i, label %if.end8.i

if.then7.i:                                       ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  %exception.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end8.i:                                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  store ptr %call.i, ptr %data, align 8, !tbaa !275
  br label %_ZN5ArrayIPcLi0EE6createEi.exit

_ZN5ArrayIPcLi0EE6createEi.exit:                  ; preds = %if.then.i, %if.end8.i
  %6 = phi ptr [ null, %if.then.i ], [ %call.i, %if.end8.i ]
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %return, label %if.then3

if.then3:                                         ; preds = %_ZN5ArrayIPcLi0EE6createEi.exit
  %tobool4.not = icmp eq ptr %2, null
  br i1 %tobool4.not, label %if.end11, label %if.then5

if.then5:                                         ; preds = %if.then3
  %cond.i = tail call i32 @llvm.smin.i32(i32 %i, i32 %3)
  %conv = sext i32 %cond.i to i64
  %mul = shl nsw i64 %conv, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr nonnull align 8 %2, i64 %mul, i1 false)
  %7 = load i32, ptr @programChecker, align 8, !tbaa !13
  %8 = shl i32 %i, 3
  %add.i = sub i32 %7, %8
  store i32 %add.i, ptr @programChecker, align 8, !tbaa !13
  %9 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i19 = icmp sgt i32 %add.i, %9
  br i1 %cmp.i19, label %if.then.i20, label %if.end11

if.then.i20:                                      ; preds = %if.then5
  store i32 %add.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %if.end11

if.end11:                                         ; preds = %if.then.i20, %if.then5, %if.then3
  tail call void @free(ptr noundef nonnull %1) #39
  br label %return

return:                                           ; preds = %_ZN5ArrayIPcLi0EE6createEi.exit, %if.end11, %if.then
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN5ArrayIlLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %i) local_unnamed_addr #14 comdat align 2 {
entry:
  %reserved = getelementptr inbounds %class.Array.14, ptr %this, i64 0, i32 1
  %0 = load i32, ptr %reserved, align 4, !tbaa !276
  %cmp.not = icmp slt i32 %0, %i
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 %i, ptr %this, align 8, !tbaa !278
  br label %return

if.end:                                           ; preds = %entry
  %ptr = getelementptr inbounds %class.Array.14, ptr %this, i64 0, i32 2
  %1 = load ptr, ptr %ptr, align 8, !tbaa !279
  %data = getelementptr inbounds %class.Array.14, ptr %this, i64 0, i32 3
  %2 = load ptr, ptr %data, align 8, !tbaa !280
  %3 = load i32, ptr %this, align 8, !tbaa !278
  store i32 %i, ptr %reserved, align 4, !tbaa !276
  store i32 %i, ptr %this, align 8, !tbaa !278
  %cmp.i = icmp slt i32 %i, 1
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr, i8 0, i64 16, i1 false)
  br label %_ZN5ArrayIlLi0EE6createEi.exit

if.end.i:                                         ; preds = %if.end
  %mul.i = shl i32 %i, 3
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = add nsw i32 %4, %mul.i
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %5
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN14ProgramChecker5allocEi.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i

_ZN14ProgramChecker5allocEi.exit.i:               ; preds = %if.then.i.i, %if.end.i
  %conv4.i = sext i32 %mul.i to i64
  %call.i = tail call noalias ptr @calloc(i64 noundef %conv4.i, i64 noundef 1) #41
  store ptr %call.i, ptr %ptr, align 8, !tbaa !279
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then7.i, label %if.end8.i

if.then7.i:                                       ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  %exception.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end8.i:                                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  store ptr %call.i, ptr %data, align 8, !tbaa !280
  br label %_ZN5ArrayIlLi0EE6createEi.exit

_ZN5ArrayIlLi0EE6createEi.exit:                   ; preds = %if.then.i, %if.end8.i
  %6 = phi ptr [ null, %if.then.i ], [ %call.i, %if.end8.i ]
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %return, label %if.then3

if.then3:                                         ; preds = %_ZN5ArrayIlLi0EE6createEi.exit
  %tobool4.not = icmp eq ptr %2, null
  br i1 %tobool4.not, label %if.end11, label %if.then5

if.then5:                                         ; preds = %if.then3
  %cond.i = tail call i32 @llvm.smin.i32(i32 %i, i32 %3)
  %conv = sext i32 %cond.i to i64
  %mul = shl nsw i64 %conv, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr nonnull align 8 %2, i64 %mul, i1 false)
  %7 = load i32, ptr @programChecker, align 8, !tbaa !13
  %8 = shl i32 %i, 3
  %add.i = sub i32 %7, %8
  store i32 %add.i, ptr @programChecker, align 8, !tbaa !13
  %9 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i19 = icmp sgt i32 %add.i, %9
  br i1 %cmp.i19, label %if.then.i20, label %if.end11

if.then.i20:                                      ; preds = %if.then5
  store i32 %add.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %if.end11

if.end11:                                         ; preds = %if.then.i20, %if.then5, %if.then3
  tail call void @free(ptr noundef nonnull %1) #39
  br label %return

return:                                           ; preds = %_ZN5ArrayIlLi0EE6createEi.exit, %if.end11, %if.then
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #27

; Function Attrs: nofree nosync nounwind memory(none)
declare i32 @llvm.eh.typeid.for(ptr) #28

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: norecurse uwtable
define dso_local noundef i32 @main(i32 noundef %argc, ptr nocapture noundef readonly %argv) local_unnamed_addr #29 personality ptr @__gxx_personality_v0 {
entry:
  %rc = alloca i32, align 4
  %deargv = alloca [3 x ptr], align 16
  %archiveName = alloca %class.String, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rc) #39
  store i32 1, ptr %rc, align 4, !tbaa !25
  %call = tail call i32 @fork() #39
  switch i32 %call, label %if.end4 [
    i32 0, label %if.then
    i32 -1, label %if.then3
  ]

if.then:                                          ; preds = %entry
  %call1 = tail call noundef i32 @_Z7paqmainiPPc(i32 noundef %argc, ptr noundef %argv)
  tail call void @exit(i32 noundef 0) #46
  unreachable

if.then3:                                         ; preds = %entry
  tail call void @perror(ptr noundef nonnull @.str.57) #45
  tail call void @exit(i32 noundef 1) #46
  unreachable

if.end4:                                          ; preds = %entry
  %call5 = call i32 @wait(ptr noundef nonnull %rc)
  %0 = load i32, ptr %rc, align 4, !tbaa !25
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end7, label %cleanup37

if.end7:                                          ; preds = %if.end4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %deargv) #39
  %1 = load ptr, ptr %argv, align 8, !tbaa !5
  store ptr %1, ptr %deargv, align 16, !tbaa !5
  %call9 = call noalias dereferenceable_or_null(3) ptr @strdup(ptr noundef nonnull @.str.58) #39
  %arrayidx10 = getelementptr inbounds [3 x ptr], ptr %deargv, i64 0, i64 1
  store ptr %call9, ptr %arrayidx10, align 8, !tbaa !5
  br label %while.cond

while.cond:                                       ; preds = %land.rhs, %if.end7
  %argv.pn = phi ptr [ %argv, %if.end7 ], [ %argv.addr.0, %land.rhs ]
  %argc.addr.0.in = phi i32 [ %argc, %if.end7 ], [ %argc.addr.0, %land.rhs ]
  %argv.addr.0 = getelementptr inbounds ptr, ptr %argv.pn, i64 1
  %argc.addr.0 = add nsw i32 %argc.addr.0.in, -1
  %tobool11.not = icmp eq i32 %argc.addr.0, 0
  %.pre = load ptr, ptr %argv.addr.0, align 8, !tbaa !5
  br i1 %tobool11.not, label %while.end, label %land.rhs

land.rhs:                                         ; preds = %while.cond
  %2 = load i8, ptr %.pre, align 1, !tbaa !9
  %cmp14 = icmp eq i8 %2, 45
  br i1 %cmp14, label %while.cond, label %while.end, !llvm.loop !298

while.end:                                        ; preds = %land.rhs, %while.cond
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %archiveName) #39
  call void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %archiveName, ptr noundef %.pre)
  %3 = load i32, ptr %archiveName, align 8, !tbaa !262
  %cmp.i.i = icmp sgt i32 %3, 0
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i

if.then.i.i:                                      ; preds = %while.end
  %dec.i.i = add nsw i32 %3, -1
  store i32 %dec.i.i, ptr %archiveName, align 8, !tbaa !262
  br label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i

_ZN5ArrayIcLi0EE8pop_backEv.exit.i:               ; preds = %if.then.i.i, %while.end
  %4 = phi i32 [ %dec.i.i, %if.then.i.i ], [ %3, %while.end ]
  %reserved.i.i = getelementptr inbounds %class.Array.12, ptr %archiveName, i64 0, i32 1
  %data.i.i = getelementptr inbounds %class.Array.12, ptr %archiveName, i64 0, i32 3
  %5 = load i32, ptr %reserved.i.i, align 4, !tbaa !267
  %cmp.i3.i = icmp eq i32 %4, %5
  br i1 %cmp.i3.i, label %if.then.i4.i, label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i

if.then.i4.i:                                     ; preds = %_ZN5ArrayIcLi0EE8pop_backEv.exit.i
  %mul.i.i = shl nsw i32 %4, 1
  %cond.i.i.i = call i32 @llvm.smax.i32(i32 %mul.i.i, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %archiveName, i32 noundef %cond.i.i.i)
          to label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i unwind label %lpad.loopexit.split-lp.loopexit

_ZN5ArrayIcLi0EE9push_backERKc.exit.i:            ; preds = %if.then.i4.i, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i
  %6 = load ptr, ptr %data.i.i, align 8, !tbaa !260
  %inc.i.i = add nsw i32 %4, 1
  store i32 %inc.i.i, ptr %archiveName, align 8, !tbaa !262
  %idxprom.i.i = sext i32 %4 to i64
  %arrayidx.i.i = getelementptr inbounds i8, ptr %6, i64 %idxprom.i.i
  store i8 46, ptr %arrayidx.i.i, align 1, !tbaa !9
  %.pre17.i = load i32, ptr %archiveName, align 8, !tbaa !262
  %7 = load i32, ptr %reserved.i.i, align 4, !tbaa !267
  %cmp.i6.i = icmp eq i32 %.pre17.i, %7
  br i1 %cmp.i6.i, label %if.then.i9.i, label %_ZN6StringpLEPKc.exit

if.then.i9.i:                                     ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i
  %mul.i7.i = shl nsw i32 %.pre17.i, 1
  %cond.i.i8.i = call i32 @llvm.smax.i32(i32 %mul.i7.i, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %archiveName, i32 noundef %cond.i.i8.i)
          to label %_ZN6StringpLEPKc.exit unwind label %lpad.loopexit.split-lp.loopexit.split-lp

_ZN6StringpLEPKc.exit:                            ; preds = %if.then.i9.i, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i
  %8 = load ptr, ptr %data.i.i, align 8, !tbaa !260
  %inc.i11.i = add nsw i32 %.pre17.i, 1
  store i32 %inc.i11.i, ptr %archiveName, align 8, !tbaa !262
  %idxprom.i12.i = sext i32 %.pre17.i to i64
  %arrayidx.i13.i = getelementptr inbounds i8, ptr %8, i64 %idxprom.i12.i
  store i8 0, ptr %arrayidx.i13.i, align 1, !tbaa !9
  %call.i = call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %1, i32 noundef 47) #44
  %tobool.not.i50 = icmp eq ptr %call.i, null
  %add.ptr.i = getelementptr inbounds i8, ptr %call.i, i64 1
  %cond.i = select i1 %tobool.not.i50, ptr %1, ptr %add.ptr.i
  %9 = load i32, ptr %archiveName, align 8, !tbaa !262
  %cmp.i.i51 = icmp sgt i32 %9, 0
  br i1 %cmp.i.i51, label %if.then.i.i53, label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i54

if.then.i.i53:                                    ; preds = %_ZN6StringpLEPKc.exit
  %dec.i.i52 = add nsw i32 %9, -1
  store i32 %dec.i.i52, ptr %archiveName, align 8, !tbaa !262
  br label %_ZN5ArrayIcLi0EE8pop_backEv.exit.i54

_ZN5ArrayIcLi0EE8pop_backEv.exit.i54:             ; preds = %if.then.i.i53, %_ZN6StringpLEPKc.exit
  %10 = phi i32 [ %9, %_ZN6StringpLEPKc.exit ], [ %dec.i.i52, %if.then.i.i53 ]
  %11 = load i8, ptr %cond.i, align 1, !tbaa !9
  %tobool.not15.i = icmp eq i8 %11, 0
  br i1 %tobool.not15.i, label %while.end.i, label %while.body.i60

while.body.i60:                                   ; preds = %_ZN5ArrayIcLi0EE8pop_backEv.exit.i54, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i69
  %12 = phi i8 [ %17, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i69 ], [ %11, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i54 ]
  %s.addr.016.i57 = phi ptr [ %incdec.ptr.i58, %_ZN5ArrayIcLi0EE9push_backERKc.exit.i69 ], [ %cond.i, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i54 ]
  %incdec.ptr.i58 = getelementptr inbounds i8, ptr %s.addr.016.i57, i64 1
  %13 = load i32, ptr %archiveName, align 8, !tbaa !262
  %14 = load i32, ptr %reserved.i.i, align 4, !tbaa !267
  %cmp.i3.i59 = icmp eq i32 %13, %14
  br i1 %cmp.i3.i59, label %if.then.i4.i64, label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i69

if.then.i4.i64:                                   ; preds = %while.body.i60
  %mul.i.i61 = shl nsw i32 %13, 1
  %cond.i.i.i62 = call i32 @llvm.smax.i32(i32 %mul.i.i61, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %archiveName, i32 noundef %cond.i.i.i62)
          to label %.noexc81 unwind label %lpad.loopexit

.noexc81:                                         ; preds = %if.then.i4.i64
  store i32 %13, ptr %archiveName, align 8, !tbaa !262
  %.pre.i63 = load i8, ptr %s.addr.016.i57, align 1, !tbaa !9
  br label %_ZN5ArrayIcLi0EE9push_backERKc.exit.i69

_ZN5ArrayIcLi0EE9push_backERKc.exit.i69:          ; preds = %.noexc81, %while.body.i60
  %15 = phi i8 [ %12, %while.body.i60 ], [ %.pre.i63, %.noexc81 ]
  %16 = load ptr, ptr %data.i.i, align 8, !tbaa !260
  %inc.i.i65 = add nsw i32 %13, 1
  store i32 %inc.i.i65, ptr %archiveName, align 8, !tbaa !262
  %idxprom.i.i66 = sext i32 %13 to i64
  %arrayidx.i.i67 = getelementptr inbounds i8, ptr %16, i64 %idxprom.i.i66
  store i8 %15, ptr %arrayidx.i.i67, align 1, !tbaa !9
  %17 = load i8, ptr %incdec.ptr.i58, align 1, !tbaa !9
  %tobool.not.i68 = icmp eq i8 %17, 0
  br i1 %tobool.not.i68, label %while.end.loopexit.i71, label %while.body.i60, !llvm.loop !268

while.end.loopexit.i71:                           ; preds = %_ZN5ArrayIcLi0EE9push_backERKc.exit.i69
  %.pre17.i70 = load i32, ptr %archiveName, align 8, !tbaa !262
  br label %while.end.i

while.end.i:                                      ; preds = %while.end.loopexit.i71, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i54
  %18 = phi i32 [ %.pre17.i70, %while.end.loopexit.i71 ], [ %10, %_ZN5ArrayIcLi0EE8pop_backEv.exit.i54 ]
  %19 = load i32, ptr %reserved.i.i, align 4, !tbaa !267
  %cmp.i6.i73 = icmp eq i32 %18, %19
  br i1 %cmp.i6.i73, label %if.then.i9.i76, label %_ZN6StringpLEPKc.exit83

if.then.i9.i76:                                   ; preds = %while.end.i
  %mul.i7.i74 = shl nsw i32 %18, 1
  %cond.i.i8.i75 = call i32 @llvm.smax.i32(i32 %mul.i7.i74, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %archiveName, i32 noundef %cond.i.i8.i75)
          to label %_ZN6StringpLEPKc.exit83 unwind label %lpad.loopexit.split-lp.loopexit.split-lp

_ZN6StringpLEPKc.exit83:                          ; preds = %if.then.i9.i76, %while.end.i
  %20 = load ptr, ptr %data.i.i, align 8, !tbaa !260
  %inc.i11.i78 = add nsw i32 %18, 1
  store i32 %inc.i11.i78, ptr %archiveName, align 8, !tbaa !262
  %idxprom.i12.i79 = sext i32 %18 to i64
  %arrayidx.i13.i80 = getelementptr inbounds i8, ptr %20, i64 %idxprom.i12.i79
  store i8 0, ptr %arrayidx.i13.i80, align 1, !tbaa !9
  %21 = load ptr, ptr %data.i.i, align 8, !tbaa !260
  %call24 = call noalias ptr @strdup(ptr noundef %21) #39
  %arrayidx25 = getelementptr inbounds [3 x ptr], ptr %deargv, i64 0, i64 2
  store ptr %call24, ptr %arrayidx25, align 16, !tbaa !5
  %call27 = invoke noundef i32 @_Z7paqmainiPPc(i32 noundef 3, ptr noundef nonnull %deargv)
          to label %if.end30 unwind label %lpad.loopexit.split-lp.loopexit.split-lp

lpad.loopexit:                                    ; preds = %if.then.i4.i64
  %lpad.loopexit92 = landingpad { ptr, i32 }
          cleanup
  br label %lpad

lpad.loopexit.split-lp.loopexit:                  ; preds = %if.then.i4.i
  %lpad.loopexit94 = landingpad { ptr, i32 }
          cleanup
  br label %lpad

lpad.loopexit.split-lp.loopexit.split-lp:         ; preds = %if.then.i9.i76, %if.then.i9.i, %_ZN6StringpLEPKc.exit83
  %lpad.loopexit.split-lp95 = landingpad { ptr, i32 }
          cleanup
  br label %lpad

lpad:                                             ; preds = %lpad.loopexit.split-lp.loopexit, %lpad.loopexit.split-lp.loopexit.split-lp, %lpad.loopexit
  %lpad.phi = phi { ptr, i32 } [ %lpad.loopexit92, %lpad.loopexit ], [ %lpad.loopexit94, %lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp95, %lpad.loopexit.split-lp.loopexit.split-lp ]
  %22 = load i32, ptr %archiveName, align 8, !tbaa !262
  %23 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = sub i32 %23, %22
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %24 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i85 = icmp sgt i32 %add.i.i, %24
  br i1 %cmp.i.i85, label %if.then.i.i86, label %_ZN5ArrayIcLi0EED2Ev.exit

if.then.i.i86:                                    ; preds = %lpad
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIcLi0EED2Ev.exit

_ZN5ArrayIcLi0EED2Ev.exit:                        ; preds = %lpad, %if.then.i.i86
  %ptr.i = getelementptr inbounds %class.Array.12, ptr %archiveName, i64 0, i32 2
  %25 = load ptr, ptr %ptr.i, align 8, !tbaa !264
  call void @free(ptr noundef %25) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %archiveName) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %deargv) #39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rc) #39
  resume { ptr, i32 } %lpad.phi

if.end30:                                         ; preds = %_ZN6StringpLEPKc.exit83
  call void @free(ptr noundef %call9) #39
  %call33 = call i32 @unlink(ptr noundef %call24) #39
  call void @free(ptr noundef %call24) #39
  %26 = load i32, ptr %archiveName, align 8, !tbaa !262
  %27 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i87 = sub i32 %27, %26
  store i32 %add.i.i87, ptr @programChecker, align 8, !tbaa !13
  %28 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i88 = icmp sgt i32 %add.i.i87, %28
  br i1 %cmp.i.i88, label %if.then.i.i89, label %_ZN5ArrayIcLi0EED2Ev.exit91

if.then.i.i89:                                    ; preds = %if.end30
  store i32 %add.i.i87, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN5ArrayIcLi0EED2Ev.exit91

_ZN5ArrayIcLi0EED2Ev.exit91:                      ; preds = %if.end30, %if.then.i.i89
  %ptr.i90 = getelementptr inbounds %class.Array.12, ptr %archiveName, i64 0, i32 2
  %29 = load ptr, ptr %ptr.i90, align 8, !tbaa !264
  call void @free(ptr noundef %29) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %archiveName) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %deargv) #39
  br label %cleanup37

cleanup37:                                        ; preds = %if.end4, %_ZN5ArrayIcLi0EED2Ev.exit91
  %retval.1 = phi i32 [ 0, %_ZN5ArrayIcLi0EED2Ev.exit91 ], [ %0, %if.end4 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rc) #39
  ret i32 %retval.1
}

; Function Attrs: nofree nounwind
declare i32 @fork() local_unnamed_addr #18

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #30

declare i32 @wait(ptr noundef) local_unnamed_addr #31

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite)
declare noalias ptr @strdup(ptr nocapture noundef readonly) local_unnamed_addr #32

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #33

; Function Attrs: nofree nounwind
declare noundef i32 @unlink(ptr nocapture noundef readonly) local_unnamed_addr #18

; Function Attrs: nounwind
declare i64 @clock() local_unnamed_addr #34

; Function Attrs: mustprogress nofree nounwind willreturn
declare i64 @strtol(ptr noundef readonly, ptr nocapture noundef, i32 noundef) local_unnamed_addr #35

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef ptr @_ZN2BHILi4EEixEj(ptr noundef nonnull align 8 dereferenceable(28) %this, i32 noundef %i) local_unnamed_addr #17 comdat align 2 {
entry:
  %shr = lshr i32 %i, 16
  %i.masked = and i32 %i, 65535
  %and = xor i32 %shr, %i.masked
  %mul = shl i32 %i, 3
  %n = getelementptr inbounds %class.BH.10, ptr %this, i64 0, i32 1
  %0 = load i32, ptr %n, align 8, !tbaa !229
  %and2 = and i32 %0, %mul
  %data.i = getelementptr inbounds %class.Array.8, ptr %this, i64 0, i32 3
  %1 = load ptr, ptr %data.i, align 8, !tbaa !162
  %mul3 = shl i32 %and2, 2
  %idxprom.i = sext i32 %mul3 to i64
  %arrayidx.i = getelementptr inbounds i8, ptr %1, i64 %idxprom.i
  %arrayidx = getelementptr inbounds i8, ptr %arrayidx.i, i64 2
  %2 = load i8, ptr %arrayidx, align 1, !tbaa !9
  %cmp4 = icmp eq i8 %2, 0
  br i1 %cmp4, label %for.end, label %if.end

if.end:                                           ; preds = %entry
  %3 = load i16, ptr %arrayidx.i, align 2, !tbaa !31
  %conv6 = zext i16 %3 to i32
  %cmp7 = icmp eq i32 %and, %conv6
  br i1 %cmp7, label %if.then11, label %for.inc

for.inc:                                          ; preds = %if.end
  %4 = shl i32 %and2, 2
  %mul3.1 = or i32 %4, 4
  %idxprom.i.1 = sext i32 %mul3.1 to i64
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i.1
  %arrayidx.1 = getelementptr inbounds i8, ptr %arrayidx.i.1, i64 2
  %5 = load i8, ptr %arrayidx.1, align 1, !tbaa !9
  %cmp4.1 = icmp eq i8 %5, 0
  br i1 %cmp4.1, label %for.end.thread114, label %if.end.1

if.end.1:                                         ; preds = %for.inc
  %6 = load i16, ptr %arrayidx.i.1, align 2, !tbaa !31
  %conv6.1 = zext i16 %6 to i32
  %cmp7.1 = icmp eq i32 %and, %conv6.1
  br i1 %cmp7.1, label %if.else, label %for.inc.1

for.inc.1:                                        ; preds = %if.end.1
  %7 = shl i32 %and2, 2
  %mul3.2 = or i32 %7, 8
  %idxprom.i.2 = sext i32 %mul3.2 to i64
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i.2
  %arrayidx.2 = getelementptr inbounds i8, ptr %arrayidx.i.2, i64 2
  %8 = load i8, ptr %arrayidx.2, align 1, !tbaa !9
  %cmp4.2 = icmp eq i8 %8, 0
  br i1 %cmp4.2, label %for.end.thread114, label %if.end.2

if.end.2:                                         ; preds = %for.inc.1
  %9 = load i16, ptr %arrayidx.i.2, align 2, !tbaa !31
  %conv6.2 = zext i16 %9 to i32
  %cmp7.2 = icmp eq i32 %and, %conv6.2
  br i1 %cmp7.2, label %if.else, label %for.inc.2

for.inc.2:                                        ; preds = %if.end.2
  %10 = shl i32 %and2, 2
  %mul3.3 = or i32 %10, 12
  %idxprom.i.3 = sext i32 %mul3.3 to i64
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i.3
  %arrayidx.3 = getelementptr inbounds i8, ptr %arrayidx.i.3, i64 2
  %11 = load i8, ptr %arrayidx.3, align 1, !tbaa !9
  %cmp4.3 = icmp eq i8 %11, 0
  br i1 %cmp4.3, label %for.end.thread114, label %if.end.3

if.end.3:                                         ; preds = %for.inc.2
  %12 = load i16, ptr %arrayidx.i.3, align 2, !tbaa !31
  %conv6.3 = zext i16 %12 to i32
  %cmp7.3 = icmp eq i32 %and, %conv6.3
  br i1 %cmp7.3, label %if.else, label %for.inc.3

for.inc.3:                                        ; preds = %if.end.3
  %13 = shl i32 %and2, 2
  %mul3.4 = or i32 %13, 16
  %idxprom.i.4 = sext i32 %mul3.4 to i64
  %arrayidx.i.4 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i.4
  %arrayidx.4 = getelementptr inbounds i8, ptr %arrayidx.i.4, i64 2
  %14 = load i8, ptr %arrayidx.4, align 1, !tbaa !9
  %cmp4.4 = icmp eq i8 %14, 0
  br i1 %cmp4.4, label %for.end.thread114, label %if.end.4

if.end.4:                                         ; preds = %for.inc.3
  %15 = load i16, ptr %arrayidx.i.4, align 2, !tbaa !31
  %conv6.4 = zext i16 %15 to i32
  %cmp7.4 = icmp eq i32 %and, %conv6.4
  br i1 %cmp7.4, label %if.else, label %for.inc.4

for.inc.4:                                        ; preds = %if.end.4
  %16 = shl i32 %and2, 2
  %mul3.5 = or i32 %16, 20
  %idxprom.i.5 = sext i32 %mul3.5 to i64
  %arrayidx.i.5 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i.5
  %arrayidx.5 = getelementptr inbounds i8, ptr %arrayidx.i.5, i64 2
  %17 = load i8, ptr %arrayidx.5, align 1, !tbaa !9
  %cmp4.5 = icmp eq i8 %17, 0
  br i1 %cmp4.5, label %for.end.thread114, label %if.end.5

if.end.5:                                         ; preds = %for.inc.4
  %18 = load i16, ptr %arrayidx.i.5, align 2, !tbaa !31
  %conv6.5 = zext i16 %18 to i32
  %cmp7.5 = icmp eq i32 %and, %conv6.5
  br i1 %cmp7.5, label %if.else, label %for.inc.5

for.inc.5:                                        ; preds = %if.end.5
  %19 = shl i32 %and2, 2
  %mul3.6 = or i32 %19, 24
  %idxprom.i.6 = sext i32 %mul3.6 to i64
  %arrayidx.i.6 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i.6
  %arrayidx.6 = getelementptr inbounds i8, ptr %arrayidx.i.6, i64 2
  %20 = load i8, ptr %arrayidx.6, align 1, !tbaa !9
  %cmp4.6 = icmp eq i8 %20, 0
  br i1 %cmp4.6, label %for.end.thread114, label %if.end.6

if.end.6:                                         ; preds = %for.inc.5
  %21 = load i16, ptr %arrayidx.i.6, align 2, !tbaa !31
  %conv6.6 = zext i16 %21 to i32
  %cmp7.6 = icmp eq i32 %and, %conv6.6
  br i1 %cmp7.6, label %if.else, label %for.inc.6

for.inc.6:                                        ; preds = %if.end.6
  %22 = shl i32 %and2, 2
  %mul3.7 = or i32 %22, 28
  %idxprom.i.7 = sext i32 %mul3.7 to i64
  %arrayidx.i.7 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i.7
  %arrayidx.7 = getelementptr inbounds i8, ptr %arrayidx.i.7, i64 2
  %23 = load i8, ptr %arrayidx.7, align 1, !tbaa !9
  %cmp4.7 = icmp eq i8 %23, 0
  br i1 %cmp4.7, label %for.end.thread114, label %if.end.7

if.end.7:                                         ; preds = %for.inc.6
  %24 = load i16, ptr %arrayidx.i.7, align 2, !tbaa !31
  %conv6.7 = zext i16 %24 to i32
  %cmp7.7 = icmp eq i32 %and, %conv6.7
  br i1 %cmp7.7, label %if.else, label %if.then14

for.end.thread114:                                ; preds = %for.inc, %for.inc.1, %for.inc.2, %for.inc.3, %for.inc.4, %for.inc.5, %for.inc.6
  %j.096.lcssa.wide.ph = phi i64 [ 28, %for.inc.6 ], [ 24, %for.inc.5 ], [ 20, %for.inc.4 ], [ 16, %for.inc.3 ], [ 12, %for.inc.2 ], [ 8, %for.inc.1 ], [ 4, %for.inc ]
  %arrayidx.i.lcssa.ph = phi ptr [ %arrayidx.i.7, %for.inc.6 ], [ %arrayidx.i.6, %for.inc.5 ], [ %arrayidx.i.5, %for.inc.4 ], [ %arrayidx.i.4, %for.inc.3 ], [ %arrayidx.i.3, %for.inc.2 ], [ %arrayidx.i.2, %for.inc.1 ], [ %arrayidx.i.1, %for.inc ]
  %conv5117 = trunc i32 %and to i16
  store i16 %conv5117, ptr %arrayidx.i.lcssa.ph, align 2, !tbaa !31
  br label %if.else

for.end:                                          ; preds = %entry
  %conv5 = trunc i32 %and to i16
  store i16 %conv5, ptr %arrayidx.i, align 2, !tbaa !31
  br label %if.then11

if.then11:                                        ; preds = %if.end, %for.end
  %add.ptr = getelementptr inbounds i8, ptr %arrayidx.i, i64 1
  br label %cleanup

if.then14:                                        ; preds = %if.end.7
  store i32 0, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  %conv15 = trunc i32 %and to i16
  store i16 %conv15, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1, !tbaa !31
  %add19 = or i32 %mul3, 30
  %idxprom.i77 = sext i32 %add19 to i64
  %arrayidx.i78 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i77
  %25 = load i8, ptr %arrayidx.i78, align 1, !tbaa !9
  %add25 = or i32 %mul3, 26
  %idxprom.i80 = sext i32 %add25 to i64
  %arrayidx.i81 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i80
  %26 = load i8, ptr %arrayidx.i81, align 1, !tbaa !9
  %cmp28 = icmp ugt i8 %25, %26
  %spec.select = select i1 %cmp28, i64 24, i64 28
  br label %if.end32

if.else:                                          ; preds = %if.end.7, %if.end.6, %if.end.5, %if.end.4, %if.end.3, %if.end.2, %if.end.1, %for.end.thread114
  %j.095105 = phi i64 [ %j.096.lcssa.wide.ph, %for.end.thread114 ], [ 28, %if.end.7 ], [ 24, %if.end.6 ], [ 20, %if.end.5 ], [ 16, %if.end.4 ], [ 12, %if.end.3 ], [ 8, %if.end.2 ], [ 4, %if.end.1 ]
  %arrayidx.i98104 = phi ptr [ %arrayidx.i.lcssa.ph, %for.end.thread114 ], [ %arrayidx.i.7, %if.end.7 ], [ %arrayidx.i.6, %if.end.6 ], [ %arrayidx.i.5, %if.end.5 ], [ %arrayidx.i.4, %if.end.4 ], [ %arrayidx.i.3, %if.end.3 ], [ %arrayidx.i.2, %if.end.2 ], [ %arrayidx.i.1, %if.end.1 ]
  %27 = load i32, ptr %arrayidx.i98104, align 2
  store i32 %27, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  br label %if.end32

if.end32:                                         ; preds = %if.then14, %if.else
  %j.1 = phi i64 [ %j.095105, %if.else ], [ %spec.select, %if.then14 ]
  %mul35 = or i32 %mul3, 4
  %idxprom.i83 = sext i32 %mul35 to i64
  %arrayidx.i84 = getelementptr inbounds i8, ptr %1, i64 %idxprom.i83
  %conv41 = and i64 %j.1, 4294967295
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %arrayidx.i84, ptr nonnull align 1 %arrayidx.i, i64 %conv41, i1 false)
  %28 = load ptr, ptr %data.i, align 8, !tbaa !162
  %arrayidx.i90 = getelementptr inbounds i8, ptr %28, i64 %idxprom.i
  %29 = load i32, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  store i32 %29, ptr %arrayidx.i90, align 1
  %add47 = or i32 %mul3, 1
  %30 = load ptr, ptr %data.i, align 8, !tbaa !162
  %idxprom.i92 = sext i32 %add47 to i64
  %arrayidx.i93 = getelementptr inbounds i8, ptr %30, i64 %idxprom.i92
  br label %cleanup

cleanup:                                          ; preds = %if.end32, %if.then11
  %retval.0 = phi ptr [ %add.ptr, %if.then11 ], [ %arrayidx.i93, %if.end32 ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @calloc(i64 noundef, i64 noundef) local_unnamed_addr #36

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #26

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %this, i32 noundef %i) local_unnamed_addr #14 comdat align 2 {
entry:
  %0 = load i32, ptr %this, align 8, !tbaa !230
  %cmp = icmp slt i32 %0, 2048
  %conv = zext i1 %cmp to i32
  %add = add nsw i32 %0, %conv
  %x1 = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 3
  %1 = load i32, ptr %x1, align 8, !tbaa !236
  %x2 = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 4
  %2 = load i32, ptr %x2, align 4, !tbaa !237
  %sub = sub i32 %2, %1
  %shr = lshr i32 %sub, 12
  %mul = mul i32 %shr, %add
  %add3 = add i32 %mul, %1
  %and = and i32 %sub, 4095
  %mul7 = mul i32 %and, %add
  %shr8 = lshr i32 %mul7, 12
  %add9 = add i32 %add3, %shr8
  %mode = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 1
  %3 = load i32, ptr %mode, align 4, !tbaa !232
  %cmp10 = icmp eq i32 %3, 1
  %x = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 5
  %4 = load i32, ptr %x, align 8
  %cmp11 = icmp ule i32 %4, %add9
  %conv12 = zext i1 %cmp11 to i32
  %storemerge = select i1 %cmp10, i32 %conv12, i32 %i
  store i32 %storemerge, ptr @y, align 4, !tbaa !25
  %tobool.not = icmp eq i32 %storemerge, 0
  br i1 %tobool.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  store i32 %add9, ptr %x2, align 4, !tbaa !237
  br label %cond.end

cond.false:                                       ; preds = %entry
  %add14 = add i32 %add9, 1
  store i32 %add14, ptr %x1, align 8, !tbaa !236
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %this)
  %5 = load i32, ptr %x1, align 8, !tbaa !236
  %6 = load i32, ptr %x2, align 4, !tbaa !237
  %xor49 = xor i32 %6, %5
  %cmp2050 = icmp ult i32 %xor49, 16777216
  br i1 %cmp2050, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %cond.end
  %archive = getelementptr inbounds %class.Encoder, ptr %this, i64 0, i32 2
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.end43
  %7 = phi i32 [ %5, %while.body.lr.ph ], [ %17, %if.end43 ]
  %8 = phi i32 [ %6, %while.body.lr.ph ], [ %16, %if.end43 ]
  %9 = load i32, ptr %mode, align 4, !tbaa !232
  %cmp22 = icmp eq i32 %9, 0
  br i1 %cmp22, label %if.then23, label %if.end27

if.then23:                                        ; preds = %while.body
  %shr25 = lshr i32 %8, 24
  %10 = load ptr, ptr %archive, align 8, !tbaa !235
  %call26 = tail call i32 @putc(i32 noundef %shr25, ptr noundef %10)
  %.pre = load i32, ptr %x1, align 8, !tbaa !236
  %.pre51 = load i32, ptr %x2, align 4, !tbaa !237
  %.pre52 = load i32, ptr %mode, align 4, !tbaa !232
  br label %if.end27

if.end27:                                         ; preds = %if.then23, %while.body
  %11 = phi i32 [ %.pre52, %if.then23 ], [ %9, %while.body ]
  %12 = phi i32 [ %.pre51, %if.then23 ], [ %8, %while.body ]
  %13 = phi i32 [ %.pre, %if.then23 ], [ %7, %while.body ]
  %shl = shl i32 %13, 8
  store i32 %shl, ptr %x1, align 8, !tbaa !236
  %shl30 = shl i32 %12, 8
  %add31 = or i32 %shl30, 255
  store i32 %add31, ptr %x2, align 4, !tbaa !237
  %cmp34 = icmp eq i32 %11, 1
  br i1 %cmp34, label %if.then35, label %if.end43

if.then35:                                        ; preds = %if.end27
  %14 = load i32, ptr %x, align 8, !tbaa !238
  %shl37 = shl i32 %14, 8
  %15 = load ptr, ptr %archive, align 8, !tbaa !235
  %call39 = tail call i32 @getc(ptr noundef %15)
  %and40 = and i32 %call39, 255
  %add41 = or i32 %and40, %shl37
  store i32 %add41, ptr %x, align 8, !tbaa !238
  %.pre53 = load i32, ptr %x1, align 8, !tbaa !236
  %.pre54 = load i32, ptr %x2, align 4, !tbaa !237
  br label %if.end43

if.end43:                                         ; preds = %if.then35, %if.end27
  %16 = phi i32 [ %.pre54, %if.then35 ], [ %add31, %if.end27 ]
  %17 = phi i32 [ %.pre53, %if.then35 ], [ %shl, %if.end27 ]
  %xor = xor i32 %16, %17
  %cmp20 = icmp ult i32 %xor, 16777216
  br i1 %cmp20, label %while.body, label %while.end, !llvm.loop !255

while.end:                                        ; preds = %if.end43, %cond.end
  %18 = load i32, ptr @y, align 4, !tbaa !25
  ret i32 %18
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare noundef ptr @strrchr(ptr noundef, i32 noundef) local_unnamed_addr #27

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN5ArrayIhLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %i) local_unnamed_addr #14 comdat align 2 {
entry:
  %reserved = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 1
  %0 = load i32, ptr %reserved, align 4, !tbaa !18
  %cmp.not = icmp slt i32 %0, %i
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 %i, ptr %this, align 8, !tbaa !20
  br label %return

if.end:                                           ; preds = %entry
  %ptr = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 2
  %1 = load ptr, ptr %ptr, align 8, !tbaa !21
  %data = getelementptr inbounds %class.Array.0, ptr %this, i64 0, i32 3
  %2 = load ptr, ptr %data, align 8, !tbaa !22
  %3 = load i32, ptr %this, align 8, !tbaa !20
  store i32 %i, ptr %reserved, align 4, !tbaa !18
  store i32 %i, ptr %this, align 8, !tbaa !20
  %cmp.i = icmp slt i32 %i, 1
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ptr, i8 0, i64 16, i1 false)
  br label %_ZN5ArrayIhLi0EE6createEi.exit

if.end.i:                                         ; preds = %if.end
  %conv.i = zext i32 %i to i64
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i = add nsw i32 %4, %i
  store i32 %add.i.i, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i = icmp sgt i32 %add.i.i, %5
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN14ProgramChecker5allocEi.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  store i32 %add.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i

_ZN14ProgramChecker5allocEi.exit.i:               ; preds = %if.then.i.i, %if.end.i
  %call.i = tail call noalias ptr @calloc(i64 noundef %conv.i, i64 noundef 1) #41
  store ptr %call.i, ptr %ptr, align 8, !tbaa !21
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then7.i, label %if.end8.i

if.then7.i:                                       ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  %exception.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

if.end8.i:                                        ; preds = %_ZN14ProgramChecker5allocEi.exit.i
  store ptr %call.i, ptr %data, align 8, !tbaa !22
  br label %_ZN5ArrayIhLi0EE6createEi.exit

_ZN5ArrayIhLi0EE6createEi.exit:                   ; preds = %if.then.i, %if.end8.i
  %6 = phi ptr [ null, %if.then.i ], [ %call.i, %if.end8.i ]
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %return, label %if.then3

if.then3:                                         ; preds = %_ZN5ArrayIhLi0EE6createEi.exit
  %tobool4.not = icmp eq ptr %2, null
  br i1 %tobool4.not, label %if.end11, label %if.then5

if.then5:                                         ; preds = %if.then3
  %cond.i = tail call i32 @llvm.smin.i32(i32 %i, i32 %3)
  %conv = sext i32 %cond.i to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %6, ptr nonnull align 1 %2, i64 %conv, i1 false)
  %7 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i = sub i32 %7, %i
  store i32 %add.i, ptr @programChecker, align 8, !tbaa !13
  %8 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i19 = icmp sgt i32 %add.i, %8
  br i1 %cmp.i19, label %if.then.i20, label %if.end11

if.then.i20:                                      ; preds = %if.then5
  store i32 %add.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %if.end11

if.end11:                                         ; preds = %if.then.i20, %if.then5, %if.then3
  tail call void @free(ptr noundef nonnull %1) #39
  br label %return

return:                                           ; preds = %_ZN5ArrayIhLi0EE6createEi.exit, %if.end11, %if.then
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
declare ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #37

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_paq8p.cpp() #5 section ".text.startup" personality ptr @__gxx_personality_v0 {
entry:
  store i32 0, ptr @programChecker, align 8, !tbaa !13
  store i32 0, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %call.i.i = tail call i64 @clock() #39
  store i64 %call.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 2), align 8, !tbaa !299
  store i32 64, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 0, i32 1), align 4, !tbaa !83
  store i32 64, ptr @rnd, align 8, !tbaa !10
  %0 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i.i.i = add nsw i32 %0, 256
  store i32 %add.i.i.i.i.i, ptr @programChecker, align 8, !tbaa !13
  %1 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i.i.i = icmp sgt i32 %add.i.i.i.i.i, %1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i.i.i.i, label %_ZN14ProgramChecker5allocEi.exit.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %entry
  store i32 %add.i.i.i.i.i, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i.i.i

_ZN14ProgramChecker5allocEi.exit.i.i.i.i:         ; preds = %if.then.i.i.i.i.i, %entry
  %call.i.i.i.i = tail call noalias dereferenceable_or_null(256) ptr @calloc(i64 noundef 256, i64 noundef 1) #41
  store ptr %call.i.i.i.i, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 0, i32 2), align 8, !tbaa !17
  %tobool.not.i.i.i.i = icmp eq ptr %call.i.i.i.i, null
  br i1 %tobool.not.i.i.i.i, label %if.then7.i.i.i.i, label %_ZN5ArrayIjLi0EEC2Ei.exit.i.i

if.then7.i.i.i.i:                                 ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i.i.i
  %exception.i.i.i.i.i = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i.i.i, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i.i.i, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

_ZN5ArrayIjLi0EEC2Ei.exit.i.i:                    ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i.i.i
  store ptr %call.i.i.i.i, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 0, i32 3), align 8, !tbaa !84
  store i32 123456789, ptr %call.i.i.i.i, align 4, !tbaa !25
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i.i.i.i, i64 1
  store i32 987654321, ptr %arrayidx.i.i.i, align 4, !tbaa !25
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %_ZN5ArrayIjLi0EEC2Ei.exit.i.i
  %2 = phi i32 [ 987654321, %_ZN5ArrayIjLi0EEC2Ei.exit.i.i ], [ %add14.i.i.1, %for.body.i.i ]
  %indvars.iv.i.i = phi i64 [ 0, %_ZN5ArrayIjLi0EEC2Ei.exit.i.i ], [ %indvars.iv.next.i.i.1, %for.body.i.i ]
  %indvars.iv.next.i.i = or i64 %indvars.iv.i.i, 1
  %mul.i.i = mul i32 %2, 11
  %arrayidx.i29.i.i = getelementptr inbounds i32, ptr %call.i.i.i.i, i64 %indvars.iv.i.i
  %3 = load i32, ptr %arrayidx.i29.i.i, align 4, !tbaa !25
  %mul13.i.i = mul i32 %3, 23
  %div33.i.i = lshr i32 %mul13.i.i, 4
  %add14.i.i = add i32 %div33.i.i, %mul.i.i
  %4 = add nuw nsw i64 %indvars.iv.i.i, 2
  %arrayidx.i32.i.i = getelementptr inbounds i32, ptr %call.i.i.i.i, i64 %4
  store i32 %add14.i.i, ptr %arrayidx.i32.i.i, align 4, !tbaa !25
  %indvars.iv.next.i.i.1 = add nuw nsw i64 %indvars.iv.i.i, 2
  %mul.i.i.1 = mul i32 %add14.i.i, 11
  %arrayidx.i29.i.i.1 = getelementptr inbounds i32, ptr %call.i.i.i.i, i64 %indvars.iv.next.i.i
  %5 = load i32, ptr %arrayidx.i29.i.i.1, align 4, !tbaa !25
  %mul13.i.i.1 = mul i32 %5, 23
  %div33.i.i.1 = lshr i32 %mul13.i.i.1, 4
  %add14.i.i.1 = add i32 %div33.i.i.1, %mul.i.i.1
  %6 = add nuw i64 %indvars.iv.i.i, 3
  %arrayidx.i32.i.i.1 = getelementptr inbounds i32, ptr %call.i.i.i.i, i64 %6
  store i32 %add14.i.i.1, ptr %arrayidx.i32.i.i.1, align 4, !tbaa !25
  %exitcond.not.i.i.1 = icmp eq i64 %indvars.iv.next.i.i.1, 62
  br i1 %exitcond.not.i.i.1, label %__cxx_global_var_init.1.exit, label %for.body.i.i, !llvm.loop !300

__cxx_global_var_init.1.exit:                     ; preds = %for.body.i.i
  store i32 0, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 1), align 8, !tbaa !105
  %7 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN6RandomD2Ev, ptr nonnull @rnd, ptr nonnull @__dso_handle) #39
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @buf, i8 0, i64 24, i1 false)
  %8 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN3BufD2Ev, ptr nonnull @buf, ptr nonnull @__dso_handle) #39
  store i32 65536, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 1), align 4, !tbaa !18
  store i32 65536, ptr @ilog, align 8, !tbaa !20
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %add.i.i.i.i.i1 = add nsw i32 %9, 65536
  store i32 %add.i.i.i.i.i1, ptr @programChecker, align 8, !tbaa !13
  %10 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %cmp.i.i.i.i.i2 = icmp sgt i32 %add.i.i.i.i.i1, %10
  br i1 %cmp.i.i.i.i.i2, label %if.then.i.i.i.i.i3, label %_ZN14ProgramChecker5allocEi.exit.i.i.i.i6

if.then.i.i.i.i.i3:                               ; preds = %__cxx_global_var_init.1.exit
  store i32 %add.i.i.i.i.i1, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %_ZN14ProgramChecker5allocEi.exit.i.i.i.i6

_ZN14ProgramChecker5allocEi.exit.i.i.i.i6:        ; preds = %if.then.i.i.i.i.i3, %__cxx_global_var_init.1.exit
  %call.i.i.i.i4 = tail call noalias dereferenceable_or_null(65536) ptr @calloc(i64 noundef 65536, i64 noundef 1) #41
  store ptr %call.i.i.i.i4, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 2), align 8, !tbaa !21
  %tobool.not.i.i.i.i5 = icmp eq ptr %call.i.i.i.i4, null
  br i1 %tobool.not.i.i.i.i5, label %if.then7.i.i.i.i8, label %_ZN5ArrayIhLi0EEC2Ei.exit.i.i

if.then7.i.i.i.i8:                                ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i.i.i6
  %exception.i.i.i.i.i7 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %exception.i.i.i.i.i7, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %exception.i.i.i.i.i7, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

_ZN5ArrayIhLi0EEC2Ei.exit.i.i:                    ; preds = %_ZN14ProgramChecker5allocEi.exit.i.i.i.i6
  store ptr %call.i.i.i.i4, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  br label %for.body.i.i13

for.body.i.i13:                                   ; preds = %for.body.i.i13, %_ZN5ArrayIhLi0EEC2Ei.exit.i.i
  %indvars.iv.i.i9 = phi i64 [ 2, %_ZN5ArrayIhLi0EEC2Ei.exit.i.i ], [ %indvars.iv.next.i.i11.1, %for.body.i.i13 ]
  %x.08.i.i = phi i32 [ 14155776, %_ZN5ArrayIhLi0EEC2Ei.exit.i.i ], [ %add.i.i.1, %for.body.i.i13 ]
  %indvars.iv.tr.i.i = trunc i64 %indvars.iv.i.i9 to i32
  %11 = shl i32 %indvars.iv.tr.i.i, 1
  %12 = add nsw i32 %11, -1
  %div.udiv.i.i = udiv i32 774541002, %12
  %add.i.i = add i32 %div.udiv.i.i, %x.08.i.i
  %shr.i.i = lshr i32 %add.i.i, 24
  %conv.i.i = trunc i32 %shr.i.i to i8
  %13 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %arrayidx.i.i.i10 = getelementptr inbounds i8, ptr %13, i64 %indvars.iv.i.i9
  store i8 %conv.i.i, ptr %arrayidx.i.i.i10, align 1, !tbaa !9
  %indvars.iv.next.i.i11 = or i64 %indvars.iv.i.i9, 1
  %indvars.iv.tr.i.i.1 = trunc i64 %indvars.iv.next.i.i11 to i32
  %14 = shl i32 %indvars.iv.tr.i.i.1, 1
  %15 = add nsw i32 %14, -1
  %div.udiv.i.i.1 = udiv i32 774541002, %15
  %add.i.i.1 = add i32 %div.udiv.i.i.1, %add.i.i
  %shr.i.i.1 = lshr i32 %add.i.i.1, 24
  %conv.i.i.1 = trunc i32 %shr.i.i.1 to i8
  %16 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %arrayidx.i.i.i10.1 = getelementptr inbounds i8, ptr %16, i64 %indvars.iv.next.i.i11
  store i8 %conv.i.i.1, ptr %arrayidx.i.i.i10.1, align 1, !tbaa !9
  %indvars.iv.next.i.i11.1 = add nuw nsw i64 %indvars.iv.i.i9, 2
  %exitcond.not.i.i12.1 = icmp eq i64 %indvars.iv.next.i.i11.1, 65536
  br i1 %exitcond.not.i.i12.1, label %__cxx_global_var_init.3.exit, label %for.body.i.i13, !llvm.loop !23

__cxx_global_var_init.3.exit:                     ; preds = %for.body.i.i13
  %17 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4IlogD2Ev, ptr nonnull @ilog, ptr nonnull @__dso_handle) #39
  tail call void @_ZN7StretchC2Ev(ptr noundef nonnull align 8 dereferenceable(24) @stretch)
  %18 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN7StretchD2Ev, ptr nonnull @stretch, ptr nonnull @__dso_handle) #39
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #38

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.abs.i16(i16, i1 immarg) #38

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i32> @llvm.smax.v8i32(<8 x i32>, <8 x i32>) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i32> @llvm.smin.v8i32(<8 x i32>, <8 x i32>) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.vector.reduce.add.v2i64(<2 x i64>) #38

attributes #0 = { mustprogress noreturn uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { inlinehint nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nounwind }
attributes #5 = { uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nofree nosync nounwind memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { mustprogress nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { inlinehint mustprogress nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress nounwind willreturn uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { mustprogress nofree nounwind willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { inlinehint mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { mustprogress nofree nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #22 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #23 = { mustprogress nofree nounwind willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { nofree nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #27 = { mustprogress nofree nounwind willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { nofree nosync nounwind memory(none) }
attributes #29 = { norecurse uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #30 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #31 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #32 = { mustprogress nofree nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #33 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #34 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #35 = { mustprogress nofree nounwind willreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #36 = { mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #37 = { mustprogress nofree nounwind willreturn memory(argmem: readwrite) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #38 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #39 = { nounwind }
attributes #40 = { noreturn }
attributes #41 = { nounwind allocsize(0,1) }
attributes #42 = { builtin nounwind }
attributes #43 = { builtin allocsize(0) }
attributes #44 = { nounwind willreturn memory(read) }
attributes #45 = { cold }
attributes #46 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!7, !7, i64 0}
!10 = !{!11, !12, i64 0}
!11 = !{!"_ZTS5ArrayIjLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!12 = !{!"int", !7, i64 0}
!13 = !{!14, !12, i64 0}
!14 = !{!"_ZTS14ProgramChecker", !12, i64 0, !12, i64 4, !15, i64 8}
!15 = !{!"long", !7, i64 0}
!16 = !{!14, !12, i64 4}
!17 = !{!11, !6, i64 8}
!18 = !{!19, !12, i64 4}
!19 = !{!"_ZTS5ArrayIhLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!20 = !{!19, !12, i64 0}
!21 = !{!19, !6, i64 8}
!22 = !{!19, !6, i64 16}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.mustprogress"}
!25 = !{!12, !12, i64 0}
!26 = !{!27, !12, i64 0}
!27 = !{!"_ZTS5ArrayIsLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!28 = !{!27, !6, i64 8}
!29 = !{!27, !12, i64 4}
!30 = !{!27, !6, i64 16}
!31 = !{!32, !32, i64 0}
!32 = !{!"short", !7, i64 0}
!33 = distinct !{!33, !24, !34, !35}
!34 = !{!"llvm.loop.isvectorized", i32 1}
!35 = !{!"llvm.loop.unroll.runtime.disable"}
!36 = distinct !{!36, !24}
!37 = distinct !{!37, !24, !35, !34}
!38 = distinct !{!38, !24, !34, !35}
!39 = distinct !{!39, !24, !35, !34}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !24, !34, !35}
!46 = distinct !{!46, !24, !34}
!47 = !{!48, !6, i64 128}
!48 = !{!"_ZTS5Mixer", !12, i64 0, !12, i64 4, !12, i64 8, !49, i64 16, !49, i64 40, !50, i64 64, !12, i64 88, !12, i64 92, !12, i64 96, !50, i64 104, !6, i64 128}
!49 = !{!"_ZTS5ArrayIsLi16EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!50 = !{!"_ZTS5ArrayIiLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!51 = !{!50, !12, i64 0}
!52 = !{!50, !6, i64 8}
!53 = !{!49, !12, i64 0}
!54 = !{!49, !6, i64 8}
!55 = !{!48, !12, i64 0}
!56 = !{!48, !12, i64 4}
!57 = !{!48, !12, i64 8}
!58 = !{!49, !12, i64 4}
!59 = !{!49, !6, i64 16}
!60 = !{!50, !12, i64 4}
!61 = !{!50, !6, i64 16}
!62 = !{!48, !12, i64 88}
!63 = !{!48, !12, i64 92}
!64 = !{!48, !12, i64 96}
!65 = distinct !{!65, !24, !34, !35}
!66 = distinct !{!66, !24, !34, !35}
!67 = distinct !{!67, !24, !35, !34}
!68 = distinct !{!68, !24, !35, !34}
!69 = !{!70, !12, i64 0}
!70 = !{!"_ZTS4APM1", !12, i64 0, !12, i64 4, !71, i64 8}
!71 = !{!"_ZTS5ArrayItLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!72 = !{!70, !12, i64 4}
!73 = !{!71, !12, i64 4}
!74 = !{!71, !12, i64 0}
!75 = !{!71, !6, i64 8}
!76 = !{!71, !6, i64 16}
!77 = distinct !{!77, !24, !78}
!78 = !{!"llvm.loop.peeled.count", i32 1}
!79 = distinct !{!79, !24}
!80 = !{!81, !12, i64 0}
!81 = !{!"_ZTS8StateMap", !12, i64 0, !12, i64 4, !11, i64 8}
!82 = !{!81, !12, i64 4}
!83 = !{!11, !12, i64 4}
!84 = !{!11, !6, i64 16}
!85 = distinct !{!85, !24, !34, !35}
!86 = distinct !{!86, !24, !35, !34}
!87 = distinct !{!87, !24, !34, !35}
!88 = distinct !{!88, !24, !35, !34}
!89 = distinct !{!89, !24}
!90 = !{!91, !12, i64 0}
!91 = !{!"_ZTS10ContextMap", !12, i64 0, !92, i64 8, !93, i64 32, !93, i64 56, !11, i64 80, !93, i64 104, !6, i64 128, !12, i64 136}
!92 = !{!"_ZTS5ArrayIN10ContextMap1EELi64EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!93 = !{!"_ZTS5ArrayIPhLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!94 = !{!92, !12, i64 4}
!95 = !{!92, !12, i64 0}
!96 = !{!92, !6, i64 8}
!97 = !{!92, !6, i64 16}
!98 = !{!93, !12, i64 4}
!99 = !{!93, !12, i64 0}
!100 = !{!93, !6, i64 8}
!101 = !{!93, !6, i64 16}
!102 = !{!91, !12, i64 136}
!103 = !{!91, !6, i64 128}
!104 = distinct !{!104, !24}
!105 = !{!106, !12, i64 24}
!106 = !{!"_ZTS6Random", !11, i64 0, !12, i64 24}
!107 = distinct !{!107, !24}
!108 = !{!109, !7, i64 14}
!109 = !{!"_ZTSN10ContextMap1EE", !7, i64 0, !7, i64 14, !7, i64 15}
!110 = !{!"branch_weights", i32 1, i32 1048575}
!111 = distinct !{!111, !24}
!112 = !{!113, !12, i64 24}
!113 = !{!"_ZTS25SmallStationaryContextMap", !71, i64 0, !12, i64 24, !6, i64 32}
!114 = !{!113, !6, i64 32}
!115 = distinct !{!115, !24, !34, !35}
!116 = distinct !{!116, !24, !35, !34}
!117 = distinct !{!117, !24}
!118 = distinct !{!118, !24}
!119 = distinct !{!119, !24}
!120 = distinct !{!120, !24}
!121 = distinct !{!121, !24}
!122 = distinct !{!122, !24}
!123 = distinct !{!123, !24}
!124 = !{!125, !6, i64 16}
!125 = !{!"_ZTS5ArrayI3HUFLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!126 = !{!125, !12, i64 0}
!127 = distinct !{!127, !24}
!128 = distinct !{!128, !24}
!129 = !{!130, !12, i64 0}
!130 = !{!"_ZTS3HUF", !12, i64 0, !12, i64 4, !12, i64 8}
!131 = !{!130, !12, i64 4}
!132 = !{!130, !12, i64 8}
!133 = distinct !{!133, !24}
!134 = distinct !{!134, !24}
!135 = distinct !{!135, !24}
!136 = distinct !{!136, !24}
!137 = distinct !{!137, !24}
!138 = distinct !{!138, !24}
!139 = distinct !{!139, !24}
!140 = distinct !{!140, !24}
!141 = distinct !{!141, !24}
!142 = distinct !{!142, !24}
!143 = distinct !{!143, !24, !78}
!144 = distinct !{!144, !24}
!145 = !{!146}
!146 = distinct !{!146, !147}
!147 = distinct !{!147, !"LVerDomain"}
!148 = !{!149}
!149 = distinct !{!149, !147}
!150 = distinct !{!150, !24, !34, !35}
!151 = distinct !{!151, !24, !34}
!152 = distinct !{!152, !24}
!153 = distinct !{!153, !24}
!154 = distinct !{!154, !24}
!155 = distinct !{!155, !24}
!156 = !{!125, !12, i64 4}
!157 = !{!125, !6, i64 8}
!158 = !{!159, !12, i64 4}
!159 = !{!"_ZTS5ArrayIhLi64EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!160 = !{!159, !12, i64 0}
!161 = !{!159, !6, i64 8}
!162 = !{!159, !6, i64 16}
!163 = !{!164, !12, i64 24}
!164 = !{!"_ZTS2BHILi9EE", !159, i64 0, !12, i64 24}
!165 = distinct !{!165, !24}
!166 = !{!167}
!167 = distinct !{!167, !168}
!168 = distinct !{!168, !"LVerDomain"}
!169 = !{!170}
!170 = distinct !{!170, !168}
!171 = distinct !{!171, !24, !34, !35}
!172 = distinct !{!172, !24, !34}
!173 = distinct !{!173, !24, !34, !35}
!174 = distinct !{!174, !24, !35, !34}
!175 = distinct !{!175, !24}
!176 = distinct !{!176, !24, !34, !35}
!177 = distinct !{!177, !24, !35, !34}
!178 = !{!179, !179, i64 0}
!179 = !{!"double", !7, i64 0}
!180 = distinct !{!180, !24, !34, !35}
!181 = distinct !{!181, !24, !35, !34}
!182 = distinct !{!182, !183}
!183 = !{!"llvm.loop.unroll.disable"}
!184 = distinct !{!184, !24}
!185 = distinct !{!185, !24}
!186 = distinct !{!186, !24}
!187 = distinct !{!187, !24}
!188 = distinct !{!188, !24}
!189 = distinct !{!189, !24}
!190 = distinct !{!190, !24}
!191 = distinct !{!191, !24}
!192 = distinct !{!192, !24}
!193 = distinct !{!193, !24}
!194 = distinct !{!194, !24}
!195 = distinct !{!195, !24}
!196 = distinct !{!196, !24}
!197 = distinct !{!197, !183}
!198 = distinct !{!198, !24}
!199 = distinct !{!199, !24}
!200 = distinct !{!200, !24}
!201 = distinct !{!201, !24}
!202 = distinct !{!202, !24}
!203 = distinct !{!203, !24}
!204 = distinct !{!204, !24}
!205 = distinct !{!205, !24, !78}
!206 = !{!207, !6, i64 16}
!207 = !{!"_ZTS5ArrayI7DMCNodeLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!208 = !{!209, !7, i64 8}
!209 = !{!"_ZTS7DMCNode", !7, i64 0, !7, i64 8, !12, i64 9, !12, i64 10}
!210 = !{!207, !12, i64 0}
!211 = distinct !{!211, !24}
!212 = distinct !{!212, !24}
!213 = !{!207, !12, i64 4}
!214 = !{!207, !6, i64 8}
!215 = !{!216, !216, i64 0}
!216 = !{!"_ZTS8Filetype", !7, i64 0}
!217 = !{!218}
!218 = distinct !{!218, !219}
!219 = distinct !{!219, !"LVerDomain"}
!220 = !{!221}
!221 = distinct !{!221, !219}
!222 = distinct !{!222, !24, !34, !35}
!223 = distinct !{!223, !24, !34}
!224 = !{i32 0, i32 -2147483648}
!225 = !{i32 0, i32 65536}
!226 = !{!227, !6, i64 32}
!227 = !{!"_ZTS13RunContextMap", !228, i64 0, !6, i64 32}
!228 = !{!"_ZTS2BHILi4EE", !159, i64 0, !12, i64 24}
!229 = !{!228, !12, i64 24}
!230 = !{!231, !12, i64 0}
!231 = !{!"_ZTS9Predictor", !12, i64 0}
!232 = !{!233, !234, i64 4}
!233 = !{!"_ZTS7Encoder", !231, i64 0, !234, i64 4, !6, i64 8, !12, i64 16, !12, i64 20, !12, i64 24, !6, i64 32}
!234 = !{!"_ZTS4Mode", !7, i64 0}
!235 = !{!233, !6, i64 8}
!236 = !{!233, !12, i64 16}
!237 = !{!233, !12, i64 20}
!238 = !{!233, !12, i64 24}
!239 = !{!233, !6, i64 32}
!240 = distinct !{!240, !24}
!241 = distinct !{!241, !24}
!242 = distinct !{!242, !24}
!243 = distinct !{!243, !24}
!244 = distinct !{!244, !24}
!245 = distinct !{!245, !24}
!246 = distinct !{!246, !24}
!247 = distinct !{!247, !24}
!248 = distinct !{!248, !24}
!249 = distinct !{!249, !24}
!250 = distinct !{!250, !24}
!251 = distinct !{!251, !24}
!252 = distinct !{!252, !24}
!253 = !{i32 0, i32 256}
!254 = distinct !{!254, !24}
!255 = distinct !{!255, !24}
!256 = distinct !{!256, !24}
!257 = distinct !{!257, !24}
!258 = distinct !{!258, !24}
!259 = distinct !{!259, !24}
!260 = !{!261, !6, i64 16}
!261 = !{!"_ZTS5ArrayIcLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!262 = !{!261, !12, i64 0}
!263 = distinct !{!263, !24}
!264 = !{!261, !6, i64 8}
!265 = distinct !{!265, !24}
!266 = distinct !{!266, !24}
!267 = !{!261, !12, i64 4}
!268 = distinct !{!268, !24}
!269 = distinct !{!269, !24}
!270 = !{i32 0, i32 2}
!271 = !{!272, !12, i64 4}
!272 = !{!"_ZTS5ArrayIPcLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!273 = !{!272, !12, i64 0}
!274 = !{!272, !6, i64 8}
!275 = !{!272, !6, i64 16}
!276 = !{!277, !12, i64 4}
!277 = !{!"_ZTS5ArrayIlLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!278 = !{!277, !12, i64 0}
!279 = !{!277, !6, i64 8}
!280 = !{!277, !6, i64 16}
!281 = distinct !{!281, !24}
!282 = distinct !{!282, !24}
!283 = distinct !{!283, !24}
!284 = distinct !{!284, !24}
!285 = !{!15, !15, i64 0}
!286 = distinct !{!286, !24}
!287 = distinct !{!287, !24}
!288 = distinct !{!288, !24}
!289 = distinct !{!289, !24}
!290 = distinct !{!290, !24}
!291 = distinct !{!291, !24}
!292 = distinct !{!292, !24}
!293 = distinct !{!293, !24, !34, !35}
!294 = distinct !{!294, !24, !35, !34}
!295 = distinct !{!295, !24}
!296 = distinct !{!296, !24}
!297 = distinct !{!297, !24}
!298 = distinct !{!298, !24}
!299 = !{!14, !15, i64 8}
!300 = distinct !{!300, !24}
