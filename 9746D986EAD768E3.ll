; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MicroBenchmarks/libs/benchmark/test/user_counters_test.cc'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MicroBenchmarks/libs/benchmark/test/user_counters_test.cc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.benchmark::internal::LogType" = type { ptr }
%"class.std::basic_ostream" = type { ptr, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", ptr, i8, i8, ptr, ptr, ptr, ptr }
%"class.std::ios_base" = type { ptr, i64, i64, i32, i32, i32, ptr, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, ptr, %"class.std::locale" }
%"struct.std::ios_base::_Words" = type { ptr, i64 }
%"class.std::locale" = type { ptr }
%"struct.std::piecewise_construct_t" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { ptr }
%union.anon = type { i64, [8 x i8] }
%"class.benchmark::State" = type { i64, i64, i64, i8, i8, i8, %"class.std::vector", i64, %"class.std::map", i32, i32, ptr, ptr, ptr }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<long, std::allocator<long>>::_Vector_impl" }
%"struct.std::_Vector_base<long, std::allocator<long>>::_Vector_impl" = type { %"struct.std::_Vector_base<long, std::allocator<long>>::_Vector_impl_data" }
%"struct.std::_Vector_base<long, std::allocator<long>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>>, std::less<std::__cxx11::basic_string<char>>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>>, std::less<std::__cxx11::basic_string<char>>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, ptr, ptr, ptr }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base" }
%"struct.std::_Head_base" = type { ptr }
%"class.std::tuple.50" = type { i8 }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.51" }
%"struct.__gnu_cxx::__aligned_membuf.51" = type { [48 x i8] }
%"class.benchmark::internal::CheckHandler" = type { ptr }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], ptr, i8, [7 x i8], ptr, ptr, ptr, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ ptr, i32 }>
%"class.std::__cxx11::basic_stringstream" = type { %"class.std::basic_iostream.base", %"class.std::__cxx11::basic_stringbuf", %"class.std::basic_ios" }
%"class.std::basic_iostream.base" = type { %"class.std::basic_istream.base", %"class.std::basic_ostream.base" }
%"class.std::basic_istream.base" = type { ptr, i64 }
%"class.std::basic_ostream.base" = type { ptr }
%"class.std::__cxx11::basic_stringbuf" = type { %"class.std::basic_streambuf", i32, %"class.std::__cxx11::basic_string" }
%"class.std::basic_streambuf" = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, %"class.std::locale" }
%"class.std::basic_istream" = type { ptr, i64, %"class.std::basic_ios" }
%"class.std::_Sp_counted_base" = type { ptr, i32, i32 }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node" = type { ptr, ptr }
%struct.Results = type { %"class.std::__cxx11::basic_string", %"class.std::map.34" }
%"class.std::map.34" = type { %"class.std::_Rb_tree.35" }
%"class.std::_Rb_tree.35" = type { %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>>>, std::less<std::__cxx11::basic_string<char>>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>>>, std::less<std::__cxx11::basic_string<char>>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_node.59" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.60" }
%"struct.__gnu_cxx::__aligned_membuf.60" = type { [64 x i8] }
%"class.std::function" = type { %"class.std::_Function_base", ptr }
%"class.std::_Function_base" = type { %"union.std::_Any_data", ptr }
%"union.std::_Any_data" = type { %"union.std::_Nocopy_types" }
%"union.std::_Nocopy_types" = type { { i64, i64 } }
%struct.TestCase = type { %"class.std::__cxx11::basic_string", i32, %"class.std::__cxx11::basic_string", %"class.std::shared_ptr" }
%"class.std::shared_ptr" = type { %"class.std::__shared_ptr" }
%"class.std::__shared_ptr" = type { ptr, %"class.std::__shared_count" }
%"class.std::__shared_count" = type { ptr }
%"class.benchmark::internal::FunctionBenchmark" = type { %"class.benchmark::internal::Benchmark", ptr }
%"class.benchmark::internal::Benchmark" = type { ptr, %"class.std::__cxx11::basic_string", i32, %"class.std::vector.9", %"class.std::vector.14", i32, i8, i32, double, i64, i32, i8, i8, i8, i32, ptr, %"class.std::vector.19", %"class.std::vector.29", ptr, ptr }
%"class.std::vector.9" = type { %"struct.std::_Vector_base.10" }
%"struct.std::_Vector_base.10" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.14" = type { %"struct.std::_Vector_base.15" }
%"struct.std::_Vector_base.15" = type { %"struct.std::_Vector_base<std::vector<long>, std::allocator<std::vector<long>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<long>, std::allocator<std::vector<long>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<long>, std::allocator<std::vector<long>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<long>, std::allocator<std::vector<long>>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.19" = type { %"struct.std::_Vector_base.20" }
%"struct.std::_Vector_base.20" = type { %"struct.std::_Vector_base<benchmark::internal::Statistics, std::allocator<benchmark::internal::Statistics>>::_Vector_impl" }
%"struct.std::_Vector_base<benchmark::internal::Statistics, std::allocator<benchmark::internal::Statistics>>::_Vector_impl" = type { %"struct.std::_Vector_base<benchmark::internal::Statistics, std::allocator<benchmark::internal::Statistics>>::_Vector_impl_data" }
%"struct.std::_Vector_base<benchmark::internal::Statistics, std::allocator<benchmark::internal::Statistics>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.29" = type { %"struct.std::_Vector_base.30" }
%"struct.std::_Vector_base.30" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { ptr, ptr, ptr }

$_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_ = comdat any

$_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i = comdat any

$_ZN9benchmark8internal12CheckHandlerD2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNK7Results5GetAsIdEET_PKc = comdat any

$_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv = comdat any

$_ZN9benchmark8internal16CallAbortHandlerEv = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESL_IJEEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_ = comdat any

$_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E9_M_invokeERKSt9_Any_dataS2_ = comdat any

$_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation = comdat any

$_ZNK7Results3GetB5cxx11EPKc = comdat any

$_ZZN9benchmark8internal18GetNullLogInstanceEvE3log = comdat any

$_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log = comdat any

$_ZZN9benchmark8internal19GetErrorLogInstanceEvE3log = comdat any

$_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE3log = comdat any

$_ZTSPFvRK7ResultsE = comdat any

$_ZTSFvRK7ResultsE = comdat any

$_ZTIFvRK7ResultsE = comdat any

$_ZTIPFvRK7ResultsE = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@dummy16 = hidden local_unnamed_addr global i32 0, align 4
@.str = private unnamed_addr constant [7 x i8] c"^[-]+$\00", align 1
@.str.3 = private unnamed_addr constant [57 x i8] c"^Benchmark %s Time %s CPU %s Iterations UserCounters...$\00", align 1
@dummy17 = hidden local_unnamed_addr global i32 0, align 4
@.str.5 = private unnamed_addr constant [24 x i8] c"%csv_header,\22bar\22,\22foo\22\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"foo\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"bar\00", align 1
@_ZL27benchmark_uniq_2_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.9 = private unnamed_addr constant [19 x i8] c"BM_Counters_Simple\00", align 1
@dummy33 = hidden local_unnamed_addr global i32 0, align 4
@.str.11 = private unnamed_addr constant [63 x i8] c"^BM_Counters_Simple %console_report bar=%hrfloat foo=%hrfloat$\00", align 1
@dummy48 = hidden local_unnamed_addr global i32 0, align 4
@.str.13 = private unnamed_addr constant [31 x i8] c"\22name\22: \22BM_Counters_Simple\22,$\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"\22family_index\22: 0,$\00", align 1
@.str.15 = private unnamed_addr constant [33 x i8] c"\22per_family_instance_index\22: 0,$\00", align 1
@.str.16 = private unnamed_addr constant [35 x i8] c"\22run_name\22: \22BM_Counters_Simple\22,$\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"\22run_type\22: \22iteration\22,$\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"\22repetitions\22: 1,$\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"\22repetition_index\22: 0,$\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"\22threads\22: 1,$\00", align 1
@.str.21 = private unnamed_addr constant [21 x i8] c"\22iterations\22: %int,$\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"\22real_time\22: %float,$\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"\22cpu_time\22: %float,$\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"\22time_unit\22: \22ns\22,$\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"\22bar\22: %float,$\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"\22foo\22: %float$\00", align 1
@dummy49 = hidden local_unnamed_addr global i32 0, align 4
@.str.29 = private unnamed_addr constant [49 x i8] c"^\22BM_Counters_Simple\22,%csv_report,%float,%float$\00", align 1
@.str.30 = private unnamed_addr constant [40 x i8] c"(e.GetCounterAs< int >(\22foo\22)) == ((1))\00", align 1
@.str.31 = private unnamed_addr constant [107 x i8] c"/usr/local/google/home/aeubanks/repos/test-suite/MicroBenchmarks/libs/benchmark/test/user_counters_test.cc\00", align 1
@__func__._Z11CheckSimpleRK7Results = private unnamed_addr constant [12 x i8] c"CheckSimple\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c":\0A\00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"expected (\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.39 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c" to be EQ to \00", align 1
@.str.41 = private unnamed_addr constant [85 x i8] c"std::fabs((e.GetCounterAs< double >(\22bar\22)) - ((2. * its))) < ((0.001) * (2. * its))\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"double\00", align 1
@.str.43 = private unnamed_addr constant [19 x i8] c"with tolerance of \00", align 1
@.str.44 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"%), \00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"but delta was \00", align 1
@.str.47 = private unnamed_addr constant [3 x i8] c"%)\00", align 1
@dummy58 = hidden local_unnamed_addr global i64 0, align 8
@_ZN12_GLOBAL__N_110num_calls1E = internal unnamed_addr global i32 0, align 4
@_ZL27benchmark_uniq_3_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.50 = private unnamed_addr constant [34 x i8] c"BM_Counters_WithBytesAndItemsPSec\00", align 1
@dummy80 = hidden local_unnamed_addr global i32 0, align 4
@.str.52 = private unnamed_addr constant [134 x i8] c"^BM_Counters_WithBytesAndItemsPSec %console_report bar=%hrfloat bytes_per_second=%hrfloat/s foo=%hrfloat items_per_second=%hrfloat/s$\00", align 1
@dummy98 = hidden local_unnamed_addr global i32 0, align 4
@.str.54 = private unnamed_addr constant [46 x i8] c"\22name\22: \22BM_Counters_WithBytesAndItemsPSec\22,$\00", align 1
@.str.55 = private unnamed_addr constant [20 x i8] c"\22family_index\22: 1,$\00", align 1
@.str.56 = private unnamed_addr constant [50 x i8] c"\22run_name\22: \22BM_Counters_WithBytesAndItemsPSec\22,$\00", align 1
@.str.57 = private unnamed_addr constant [29 x i8] c"\22bytes_per_second\22: %float,$\00", align 1
@.str.58 = private unnamed_addr constant [16 x i8] c"\22foo\22: %float,$\00", align 1
@.str.59 = private unnamed_addr constant [28 x i8] c"\22items_per_second\22: %float$\00", align 1
@dummy100 = hidden local_unnamed_addr global i32 0, align 4
@.str.61 = private unnamed_addr constant [76 x i8] c"^\22BM_Counters_WithBytesAndItemsPSec\22,%csv_bytes_items_report,%float,%float$\00", align 1
@__func__._Z22CheckBytesAndItemsPSecRK7Results = private unnamed_addr constant [23 x i8] c"CheckBytesAndItemsPSec\00", align 1
@.str.62 = private unnamed_addr constant [49 x i8] c"(e.GetCounterAs< int >(\22bar\22)) == ((num_calls1))\00", align 1
@.str.63 = private unnamed_addr constant [17 x i8] c"bytes_per_second\00", align 1
@.str.64 = private unnamed_addr constant [91 x i8] c"std::fabs((e.GetAs< double >(\22bytes_per_second\22)) - ((364. / t))) < ((0.001) * (364. / t))\00", align 1
@.str.65 = private unnamed_addr constant [17 x i8] c"items_per_second\00", align 1
@.str.66 = private unnamed_addr constant [91 x i8] c"std::fabs((e.GetAs< double >(\22items_per_second\22)) - ((150. / t))) < ((0.001) * (150. / t))\00", align 1
@dummy112 = hidden local_unnamed_addr global i64 0, align 8
@_ZL27benchmark_uniq_4_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.69 = private unnamed_addr constant [17 x i8] c"BM_Counters_Rate\00", align 1
@dummy130 = hidden local_unnamed_addr global i32 0, align 4
@.str.71 = private unnamed_addr constant [65 x i8] c"^BM_Counters_Rate %console_report bar=%hrfloat/s foo=%hrfloat/s$\00", align 1
@dummy145 = hidden local_unnamed_addr global i32 0, align 4
@.str.73 = private unnamed_addr constant [29 x i8] c"\22name\22: \22BM_Counters_Rate\22,$\00", align 1
@.str.74 = private unnamed_addr constant [20 x i8] c"\22family_index\22: 2,$\00", align 1
@.str.75 = private unnamed_addr constant [33 x i8] c"\22run_name\22: \22BM_Counters_Rate\22,$\00", align 1
@dummy146 = hidden local_unnamed_addr global i32 0, align 4
@.str.77 = private unnamed_addr constant [47 x i8] c"^\22BM_Counters_Rate\22,%csv_report,%float,%float$\00", align 1
@.str.78 = private unnamed_addr constant [81 x i8] c"std::fabs((e.GetCounterAs< double >(\22foo\22)) - ((1. / t))) < ((0.001) * (1. / t))\00", align 1
@__func__._Z9CheckRateRK7Results = private unnamed_addr constant [10 x i8] c"CheckRate\00", align 1
@.str.79 = private unnamed_addr constant [81 x i8] c"std::fabs((e.GetCounterAs< double >(\22bar\22)) - ((2. / t))) < ((0.001) * (2. / t))\00", align 1
@dummy155 = hidden local_unnamed_addr global i64 0, align 8
@_ZL27benchmark_uniq_5_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.82 = private unnamed_addr constant [10 x i8] c"BM_Invert\00", align 1
@dummy172 = hidden local_unnamed_addr global i32 0, align 4
@.str.84 = private unnamed_addr constant [56 x i8] c"^BM_Invert %console_report bar=%hrfloatu foo=%hrfloatk$\00", align 1
@dummy187 = hidden local_unnamed_addr global i32 0, align 4
@.str.86 = private unnamed_addr constant [22 x i8] c"\22name\22: \22BM_Invert\22,$\00", align 1
@.str.87 = private unnamed_addr constant [20 x i8] c"\22family_index\22: 3,$\00", align 1
@.str.88 = private unnamed_addr constant [26 x i8] c"\22run_name\22: \22BM_Invert\22,$\00", align 1
@dummy188 = hidden local_unnamed_addr global i32 0, align 4
@.str.90 = private unnamed_addr constant [40 x i8] c"^\22BM_Invert\22,%csv_report,%float,%float$\00", align 1
@.str.91 = private unnamed_addr constant [80 x i8] c"std::fabs((e.GetCounterAs< double >(\22foo\22)) - ((10000))) < ((0.0001) * (10000))\00", align 1
@__func__._Z11CheckInvertRK7Results = private unnamed_addr constant [12 x i8] c"CheckInvert\00", align 1
@.str.92 = private unnamed_addr constant [82 x i8] c"std::fabs((e.GetCounterAs< double >(\22bar\22)) - ((0.0001))) < ((0.0001) * (0.0001))\00", align 1
@dummy195 = hidden local_unnamed_addr global i64 0, align 8
@_ZL27benchmark_uniq_6_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.95 = private unnamed_addr constant [25 x i8] c"BM_Counters_InvertedRate\00", align 1
@dummy215 = hidden local_unnamed_addr global i32 0, align 4
@.str.97 = private unnamed_addr constant [71 x i8] c"^BM_Counters_InvertedRate %console_report bar=%hrfloats foo=%hrfloats$\00", align 1
@dummy231 = hidden local_unnamed_addr global i32 0, align 4
@.str.99 = private unnamed_addr constant [37 x i8] c"\22name\22: \22BM_Counters_InvertedRate\22,$\00", align 1
@.str.100 = private unnamed_addr constant [20 x i8] c"\22family_index\22: 4,$\00", align 1
@.str.101 = private unnamed_addr constant [41 x i8] c"\22run_name\22: \22BM_Counters_InvertedRate\22,$\00", align 1
@dummy233 = hidden local_unnamed_addr global i32 0, align 4
@.str.103 = private unnamed_addr constant [55 x i8] c"^\22BM_Counters_InvertedRate\22,%csv_report,%float,%float$\00", align 1
@.str.104 = private unnamed_addr constant [71 x i8] c"std::fabs((e.GetCounterAs< double >(\22foo\22)) - ((t))) < ((0.001) * (t))\00", align 1
@__func__._Z17CheckInvertedRateRK7Results = private unnamed_addr constant [18 x i8] c"CheckInvertedRate\00", align 1
@.str.105 = private unnamed_addr constant [89 x i8] c"std::fabs((e.GetCounterAs< double >(\22bar\22)) - ((t / 8192.0))) < ((0.001) * (t / 8192.0))\00", align 1
@dummy242 = hidden local_unnamed_addr global i64 0, align 8
@_ZL27benchmark_uniq_7_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.108 = private unnamed_addr constant [20 x i8] c"BM_Counters_Threads\00", align 1
@dummy256 = hidden local_unnamed_addr global i32 0, align 4
@.str.110 = private unnamed_addr constant [77 x i8] c"^BM_Counters_Threads/threads:%int %console_report bar=%hrfloat foo=%hrfloat$\00", align 1
@dummy272 = hidden local_unnamed_addr global i32 0, align 4
@.str.112 = private unnamed_addr constant [45 x i8] c"\22name\22: \22BM_Counters_Threads/threads:%int\22,$\00", align 1
@.str.113 = private unnamed_addr constant [20 x i8] c"\22family_index\22: 5,$\00", align 1
@.str.114 = private unnamed_addr constant [49 x i8] c"\22run_name\22: \22BM_Counters_Threads/threads:%int\22,$\00", align 1
@dummy275 = hidden local_unnamed_addr global i32 0, align 4
@.str.116 = private unnamed_addr constant [63 x i8] c"^\22BM_Counters_Threads/threads:%int\22,%csv_report,%float,%float$\00", align 1
@.str.117 = private unnamed_addr constant [53 x i8] c"(e.GetCounterAs< int >(\22foo\22)) == ((e.NumThreads()))\00", align 1
@__func__._Z12CheckThreadsRK7Results = private unnamed_addr constant [13 x i8] c"CheckThreads\00", align 1
@.str.118 = private unnamed_addr constant [57 x i8] c"(e.GetCounterAs< int >(\22bar\22)) == ((2 * e.NumThreads()))\00", align 1
@dummy282 = hidden local_unnamed_addr global i64 0, align 8
@.str.120 = private unnamed_addr constant [33 x i8] c"BM_Counters_Threads/threads:%int\00", align 1
@_ZL27benchmark_uniq_8_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.122 = private unnamed_addr constant [23 x i8] c"BM_Counters_AvgThreads\00", align 1
@dummy297 = hidden local_unnamed_addr global i32 0, align 4
@.str.124 = private unnamed_addr constant [80 x i8] c"^BM_Counters_AvgThreads/threads:%int %console_report bar=%hrfloat foo=%hrfloat$\00", align 1
@dummy313 = hidden local_unnamed_addr global i32 0, align 4
@.str.126 = private unnamed_addr constant [48 x i8] c"\22name\22: \22BM_Counters_AvgThreads/threads:%int\22,$\00", align 1
@.str.127 = private unnamed_addr constant [20 x i8] c"\22family_index\22: 6,$\00", align 1
@.str.128 = private unnamed_addr constant [52 x i8] c"\22run_name\22: \22BM_Counters_AvgThreads/threads:%int\22,$\00", align 1
@dummy316 = hidden local_unnamed_addr global i32 0, align 4
@.str.130 = private unnamed_addr constant [66 x i8] c"^\22BM_Counters_AvgThreads/threads:%int\22,%csv_report,%float,%float$\00", align 1
@__func__._Z15CheckAvgThreadsRK7Results = private unnamed_addr constant [16 x i8] c"CheckAvgThreads\00", align 1
@.str.131 = private unnamed_addr constant [40 x i8] c"(e.GetCounterAs< int >(\22bar\22)) == ((2))\00", align 1
@dummy324 = hidden local_unnamed_addr global i64 0, align 8
@.str.133 = private unnamed_addr constant [36 x i8] c"BM_Counters_AvgThreads/threads:%int\00", align 1
@_ZL27benchmark_uniq_9_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.135 = private unnamed_addr constant [27 x i8] c"BM_Counters_AvgThreadsRate\00", align 1
@dummy341 = hidden local_unnamed_addr global i32 0, align 4
@.str.137 = private unnamed_addr constant [88 x i8] c"^BM_Counters_AvgThreadsRate/threads:%int %console_report bar=%hrfloat/s foo=%hrfloat/s$\00", align 1
@dummy358 = hidden local_unnamed_addr global i32 0, align 4
@.str.139 = private unnamed_addr constant [52 x i8] c"\22name\22: \22BM_Counters_AvgThreadsRate/threads:%int\22,$\00", align 1
@.str.140 = private unnamed_addr constant [20 x i8] c"\22family_index\22: 7,$\00", align 1
@.str.141 = private unnamed_addr constant [56 x i8] c"\22run_name\22: \22BM_Counters_AvgThreadsRate/threads:%int\22,$\00", align 1
@dummy360 = hidden local_unnamed_addr global i32 0, align 4
@.str.143 = private unnamed_addr constant [70 x i8] c"^\22BM_Counters_AvgThreadsRate/threads:%int\22,%csv_report,%float,%float$\00", align 1
@.str.144 = private unnamed_addr constant [117 x i8] c"std::fabs((e.GetCounterAs< double >(\22foo\22)) - ((1. / e.DurationCPUTime()))) < ((0.001) * (1. / e.DurationCPUTime()))\00", align 1
@__func__._Z19CheckAvgThreadsRateRK7Results = private unnamed_addr constant [20 x i8] c"CheckAvgThreadsRate\00", align 1
@.str.145 = private unnamed_addr constant [117 x i8] c"std::fabs((e.GetCounterAs< double >(\22bar\22)) - ((2. / e.DurationCPUTime()))) < ((0.001) * (2. / e.DurationCPUTime()))\00", align 1
@dummy368 = hidden local_unnamed_addr global i64 0, align 8
@.str.147 = private unnamed_addr constant [40 x i8] c"BM_Counters_AvgThreadsRate/threads:%int\00", align 1
@_ZL28benchmark_uniq_10_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.149 = private unnamed_addr constant [31 x i8] c"BM_Counters_IterationInvariant\00", align 1
@dummy383 = hidden local_unnamed_addr global i32 0, align 4
@.str.151 = private unnamed_addr constant [75 x i8] c"^BM_Counters_IterationInvariant %console_report bar=%hrfloat foo=%hrfloat$\00", align 1
@dummy399 = hidden local_unnamed_addr global i32 0, align 4
@.str.153 = private unnamed_addr constant [43 x i8] c"\22name\22: \22BM_Counters_IterationInvariant\22,$\00", align 1
@.str.154 = private unnamed_addr constant [20 x i8] c"\22family_index\22: 8,$\00", align 1
@.str.155 = private unnamed_addr constant [47 x i8] c"\22run_name\22: \22BM_Counters_IterationInvariant\22,$\00", align 1
@dummy401 = hidden local_unnamed_addr global i32 0, align 4
@.str.157 = private unnamed_addr constant [61 x i8] c"^\22BM_Counters_IterationInvariant\22,%csv_report,%float,%float$\00", align 1
@.str.158 = private unnamed_addr constant [75 x i8] c"std::fabs((e.GetCounterAs< double >(\22foo\22)) - ((its))) < ((0.001) * (its))\00", align 1
@__func__._Z23CheckIterationInvariantRK7Results = private unnamed_addr constant [24 x i8] c"CheckIterationInvariant\00", align 1
@dummy411 = hidden local_unnamed_addr global i64 0, align 8
@_ZL28benchmark_uniq_11_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.161 = private unnamed_addr constant [38 x i8] c"BM_Counters_kIsIterationInvariantRate\00", align 1
@dummy430 = hidden local_unnamed_addr global i32 0, align 4
@.str.163 = private unnamed_addr constant [86 x i8] c"^BM_Counters_kIsIterationInvariantRate %console_report bar=%hrfloat/s foo=%hrfloat/s$\00", align 1
@dummy447 = hidden local_unnamed_addr global i32 0, align 4
@.str.165 = private unnamed_addr constant [50 x i8] c"\22name\22: \22BM_Counters_kIsIterationInvariantRate\22,$\00", align 1
@.str.166 = private unnamed_addr constant [20 x i8] c"\22family_index\22: 9,$\00", align 1
@.str.167 = private unnamed_addr constant [54 x i8] c"\22run_name\22: \22BM_Counters_kIsIterationInvariantRate\22,$\00", align 1
@dummy449 = hidden local_unnamed_addr global i32 0, align 4
@.str.169 = private unnamed_addr constant [68 x i8] c"^\22BM_Counters_kIsIterationInvariantRate\22,%csv_report,%float,%float$\00", align 1
@.str.170 = private unnamed_addr constant [93 x i8] c"std::fabs((e.GetCounterAs< double >(\22foo\22)) - ((its * 1. / t))) < ((0.001) * (its * 1. / t))\00", align 1
@__func__._Z29CheckIsIterationInvariantRateRK7Results = private unnamed_addr constant [30 x i8] c"CheckIsIterationInvariantRate\00", align 1
@.str.171 = private unnamed_addr constant [93 x i8] c"std::fabs((e.GetCounterAs< double >(\22bar\22)) - ((its * 2. / t))) < ((0.001) * (its * 2. / t))\00", align 1
@dummy460 = hidden local_unnamed_addr global i64 0, align 8
@_ZL28benchmark_uniq_12_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.174 = private unnamed_addr constant [26 x i8] c"BM_Counters_AvgIterations\00", align 1
@dummy475 = hidden local_unnamed_addr global i32 0, align 4
@.str.176 = private unnamed_addr constant [70 x i8] c"^BM_Counters_AvgIterations %console_report bar=%hrfloat foo=%hrfloat$\00", align 1
@dummy491 = hidden local_unnamed_addr global i32 0, align 4
@.str.178 = private unnamed_addr constant [38 x i8] c"\22name\22: \22BM_Counters_AvgIterations\22,$\00", align 1
@.str.179 = private unnamed_addr constant [21 x i8] c"\22family_index\22: 10,$\00", align 1
@.str.180 = private unnamed_addr constant [42 x i8] c"\22run_name\22: \22BM_Counters_AvgIterations\22,$\00", align 1
@dummy493 = hidden local_unnamed_addr global i32 0, align 4
@.str.182 = private unnamed_addr constant [56 x i8] c"^\22BM_Counters_AvgIterations\22,%csv_report,%float,%float$\00", align 1
@.str.183 = private unnamed_addr constant [85 x i8] c"std::fabs((e.GetCounterAs< double >(\22foo\22)) - ((1. / its))) < ((0.001) * (1. / its))\00", align 1
@__func__._Z18CheckAvgIterationsRK7Results = private unnamed_addr constant [19 x i8] c"CheckAvgIterations\00", align 1
@.str.184 = private unnamed_addr constant [85 x i8] c"std::fabs((e.GetCounterAs< double >(\22bar\22)) - ((2. / its))) < ((0.001) * (2. / its))\00", align 1
@dummy502 = hidden local_unnamed_addr global i64 0, align 8
@_ZL28benchmark_uniq_13_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.187 = private unnamed_addr constant [31 x i8] c"BM_Counters_kAvgIterationsRate\00", align 1
@dummy520 = hidden local_unnamed_addr global i32 0, align 4
@.str.189 = private unnamed_addr constant [79 x i8] c"^BM_Counters_kAvgIterationsRate %console_report bar=%hrfloat/s foo=%hrfloat/s$\00", align 1
@dummy536 = hidden local_unnamed_addr global i32 0, align 4
@.str.191 = private unnamed_addr constant [43 x i8] c"\22name\22: \22BM_Counters_kAvgIterationsRate\22,$\00", align 1
@.str.192 = private unnamed_addr constant [21 x i8] c"\22family_index\22: 11,$\00", align 1
@.str.193 = private unnamed_addr constant [47 x i8] c"\22run_name\22: \22BM_Counters_kAvgIterationsRate\22,$\00", align 1
@dummy538 = hidden local_unnamed_addr global i32 0, align 4
@.str.195 = private unnamed_addr constant [61 x i8] c"^\22BM_Counters_kAvgIterationsRate\22,%csv_report,%float,%float$\00", align 1
@.str.196 = private unnamed_addr constant [93 x i8] c"std::fabs((e.GetCounterAs< double >(\22foo\22)) - ((1. / its / t))) < ((0.001) * (1. / its / t))\00", align 1
@__func__._Z22CheckAvgIterationsRateRK7Results = private unnamed_addr constant [23 x i8] c"CheckAvgIterationsRate\00", align 1
@.str.197 = private unnamed_addr constant [93 x i8] c"std::fabs((e.GetCounterAs< double >(\22bar\22)) - ((2. / its / t))) < ((0.001) * (2. / its / t))\00", align 1
@dummy549 = hidden local_unnamed_addr global i64 0, align 8
@__libc_single_threaded = external local_unnamed_addr global i8, align 1
@_ZTVN9benchmark8internal17FunctionBenchmarkE = external unnamed_addr constant { [5 x ptr] }, align 8
@_ZZN9benchmark8internal18GetNullLogInstanceEvE3log = linkonce_odr hidden local_unnamed_addr global %"class.benchmark::internal::LogType" zeroinitializer, comdat, align 8
@_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log = linkonce_odr hidden global i64 0, comdat, align 8
@.str.201 = private unnamed_addr constant [10 x i8] c": Check `\00", align 1
@.str.202 = private unnamed_addr constant [11 x i8] c"' failed. \00", align 1
@_ZZN9benchmark8internal19GetErrorLogInstanceEvE3log = linkonce_odr hidden global %"class.benchmark::internal::LogType" zeroinitializer, comdat, align 8
@_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE3log = linkonce_odr hidden global i64 0, comdat, align 8
@_ZSt4clog = external global %"class.std::basic_ostream", align 8
@.str.203 = private unnamed_addr constant [50 x i8] c"basic_string: construction from null is not valid\00", align 1
@_ZStL19piecewise_construct = internal constant %"struct.std::piecewise_construct_t" undef, align 1
@_ZTVN10__cxxabiv119__pointer_type_infoE = external global ptr
@_ZTSPFvRK7ResultsE = linkonce_odr hidden constant [15 x i8] c"PFvRK7ResultsE\00", comdat, align 1
@_ZTVN10__cxxabiv120__function_type_infoE = external global ptr
@_ZTSFvRK7ResultsE = linkonce_odr hidden constant [14 x i8] c"FvRK7ResultsE\00", comdat, align 1
@_ZTIFvRK7ResultsE = linkonce_odr hidden constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__function_type_infoE, i64 2), ptr @_ZTSFvRK7ResultsE }, comdat, align 8
@_ZTIPFvRK7ResultsE = linkonce_odr hidden constant { ptr, ptr, i32, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv119__pointer_type_infoE, i64 2), ptr @_ZTSPFvRK7ResultsE, i32 0, ptr @_ZTIFvRK7ResultsE }, comdat, align 8
@.str.204 = private unnamed_addr constant [30 x i8] c"sv != nullptr && !sv->empty()\00", align 1
@.str.205 = private unnamed_addr constant [99 x i8] c"/usr/local/google/home/aeubanks/repos/test-suite/MicroBenchmarks/libs/benchmark/test/output_test.h\00", align 1
@__func__._ZNK7Results5GetAsIdEET_PKc = private unnamed_addr constant [6 x i8] c"GetAs\00", align 1
@.str.206 = private unnamed_addr constant [11 x i8] c"!ss.fail()\00", align 1
@_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE = external unnamed_addr constant [10 x ptr], align 8
@_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE = external unnamed_addr constant { [16 x ptr] }, align 8
@_ZTVSt15basic_streambufIcSt11char_traitsIcEE = external unnamed_addr constant { [16 x ptr] }, align 8
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_user_counters_test.cc, ptr null }]

declare noundef i32 @_ZN9benchmark8internal17InitializeStreamsEv() local_unnamed_addr #0

declare void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(ptr noundef nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(ptr, ptr, ptr) local_unnamed_addr #2

declare noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef, ptr, i64) local_unnamed_addr #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

declare i32 @__gxx_personality_v0(...)

declare void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88), ptr noundef, i32 noundef) unnamed_addr #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: uwtable
define hidden void @_Z18BM_Counters_SimpleRN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  tail call void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  tail call void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %5 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #21
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 2
  store ptr %6, ptr %2, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %6, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  store i64 3, ptr %7, align 8, !tbaa !10
  %8 = getelementptr inbounds i8, ptr %2, i64 19
  store i8 0, ptr %8, align 1, !tbaa !13
  %9 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %5, ptr noundef nonnull align 8 dereferenceable(32) %2)
          to label %10 unwind label %42

10:                                               ; preds = %1
  store double 1.000000e+00, ptr %9, align 8, !tbaa.struct !14
  %11 = getelementptr inbounds i8, ptr %9, i64 8
  store i32 0, ptr %11, align 8, !tbaa.struct !21
  %12 = getelementptr inbounds i8, ptr %9, i64 12
  store i32 1000, ptr %12, align 4, !tbaa.struct !22
  %13 = load ptr, ptr %2, align 8, !tbaa !23
  %14 = icmp eq ptr %13, %6
  br i1 %14, label %16, label %15

15:                                               ; preds = %10
  call void @_ZdlPv(ptr noundef %13) #22
  br label %16

16:                                               ; preds = %10, %15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  %17 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 3
  %18 = load i8, ptr %17, align 8, !tbaa !24, !range !40, !noundef !41
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %29, label %20, !prof !42

20:                                               ; preds = %16
  %21 = load i64, ptr %4, align 8, !tbaa !43
  %22 = load i64, ptr %0, align 8, !tbaa !44
  %23 = sub i64 %21, %22
  %24 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !45
  %26 = add i64 %23, %25
  %27 = uitofp i64 %26 to double
  %28 = fmul double %27, 2.000000e+00
  br label %29

29:                                               ; preds = %16, %20
  %30 = phi double [ %28, %20 ], [ 0.000000e+00, %16 ]
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #21
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  store ptr %31, ptr %3, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %31, ptr noundef nonnull align 1 dereferenceable(3) @.str.7, i64 3, i1 false)
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  store i64 3, ptr %32, align 8, !tbaa !10
  %33 = getelementptr inbounds i8, ptr %3, i64 19
  store i8 0, ptr %33, align 1, !tbaa !13
  %34 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %5, ptr noundef nonnull align 8 dereferenceable(32) %3)
          to label %35 unwind label %48

35:                                               ; preds = %29
  store double %30, ptr %34, align 8, !tbaa.struct !14
  %36 = getelementptr inbounds i8, ptr %34, i64 8
  store i32 0, ptr %36, align 8, !tbaa.struct !21
  %37 = getelementptr inbounds i8, ptr %34, i64 12
  store i32 1000, ptr %37, align 4, !tbaa.struct !22
  %38 = load ptr, ptr %3, align 8, !tbaa !23
  %39 = icmp eq ptr %38, %31
  br i1 %39, label %41, label %40

40:                                               ; preds = %35
  call void @_ZdlPv(ptr noundef %38) #22
  br label %41

41:                                               ; preds = %35, %40
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  ret void

42:                                               ; preds = %1
  %43 = landingpad { ptr, i32 }
          cleanup
  %44 = load ptr, ptr %2, align 8, !tbaa !23
  %45 = icmp eq ptr %44, %6
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  call void @_ZdlPv(ptr noundef %44) #22
  br label %47

47:                                               ; preds = %46, %42
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  br label %54

48:                                               ; preds = %29
  %49 = landingpad { ptr, i32 }
          cleanup
  %50 = load ptr, ptr %3, align 8, !tbaa !23
  %51 = icmp eq ptr %50, %31
  br i1 %51, label %53, label %52

52:                                               ; preds = %48
  call void @_ZdlPv(ptr noundef %50) #22
  br label %53

53:                                               ; preds = %52, %48
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  br label %54

54:                                               ; preds = %53, %47
  %55 = phi { ptr, i32 } [ %49, %53 ], [ %43, %47 ]
  resume { ptr, i32 } %55
}

; Function Attrs: uwtable
define linkonce_odr hidden noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) local_unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::tuple", align 8
  %4 = alloca %"class.std::tuple.50", align 1
  %5 = getelementptr inbounds i8, ptr %0, i64 16
  %6 = load ptr, ptr %5, align 8, !tbaa !46
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  %8 = icmp eq ptr %6, null
  br i1 %8, label %59, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %11 = load i64, ptr %10, align 8, !tbaa !10
  %12 = load ptr, ptr %1, align 8
  br label %13

13:                                               ; preds = %30, %9
  %14 = phi ptr [ %6, %9 ], [ %37, %30 ]
  %15 = phi ptr [ %7, %9 ], [ %35, %30 ]
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %14, i64 0, i32 1, i32 0, i64 8
  %17 = load i64, ptr %16, align 8, !tbaa !10
  %18 = tail call i64 @llvm.umin.i64(i64 %17, i64 %11)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %14, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !23
  %23 = tail call i32 @memcmp(ptr noundef %22, ptr noundef %12, i64 noundef %18) #21
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %20, %13
  %26 = sub i64 %17, %11
  %27 = tail call i64 @llvm.smax.i64(i64 %26, i64 -2147483648)
  %28 = tail call i64 @llvm.smin.i64(i64 %27, i64 2147483647)
  %29 = trunc i64 %28 to i32
  br label %30

30:                                               ; preds = %25, %20
  %31 = phi i32 [ %23, %20 ], [ %29, %25 ]
  %32 = icmp slt i32 %31, 0
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %14, i64 0, i32 3
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %14, i64 0, i32 2
  %35 = select i1 %32, ptr %15, ptr %14
  %36 = select i1 %32, ptr %33, ptr %34
  %37 = load ptr, ptr %36, align 8, !tbaa !47
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %13, !llvm.loop !48

39:                                               ; preds = %30
  %40 = icmp eq ptr %35, %7
  br i1 %40, label %59, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %35, i64 0, i32 1, i32 0, i64 8
  %43 = load i64, ptr %42, align 8, !tbaa !10
  %44 = tail call i64 @llvm.umin.i64(i64 %11, i64 %43)
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %35, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !23
  %49 = tail call i32 @memcmp(ptr noundef %12, ptr noundef %48, i64 noundef %44) #21
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %46, %41
  %52 = sub i64 %11, %43
  %53 = tail call i64 @llvm.smax.i64(i64 %52, i64 -2147483648)
  %54 = tail call i64 @llvm.smin.i64(i64 %53, i64 2147483647)
  %55 = trunc i64 %54 to i32
  br label %56

56:                                               ; preds = %46, %51
  %57 = phi i32 [ %49, %46 ], [ %55, %51 ]
  %58 = icmp slt i32 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %2, %39, %56
  %60 = phi ptr [ %7, %39 ], [ %35, %56 ], [ %7, %2 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  store ptr %1, ptr %3, align 8, !tbaa !47, !alias.scope !50
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #21
  %61 = call ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESL_IJEEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %60, ptr noundef nonnull align 1 dereferenceable(1) @_ZStL19piecewise_construct, ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull align 1 dereferenceable(1) %4)
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #21
  br label %62

62:                                               ; preds = %59, %56
  %63 = phi ptr [ %61, %59 ], [ %35, %56 ]
  %64 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %63, i64 0, i32 1, i32 0, i64 32
  ret ptr %64
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #5

declare noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef) local_unnamed_addr #0

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #7

; Function Attrs: uwtable
define hidden void @_Z11CheckSimpleRK7Results(ptr noundef nonnull align 8 dereferenceable(80) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %3 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %4 = tail call noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
  %5 = tail call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
  %6 = fptosi double %5 to i32
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %15

8:                                                ; preds = %1
  %9 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %17, !prof !53

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %17

15:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %2, ptr noundef nonnull @.str.30, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z11CheckSimpleRK7Results, i32 noundef 54)
  %16 = load ptr, ptr %2, align 8, !tbaa !56
  br label %17

17:                                               ; preds = %14, %11, %8, %15
  %18 = phi ptr [ %16, %15 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %8 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %11 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %14 ]
  %19 = load ptr, ptr %18, align 8, !tbaa !54
  %20 = icmp eq ptr %19, null
  br i1 %20, label %101, label %21

21:                                               ; preds = %17
  %22 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %19, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %23 unwind label %126

23:                                               ; preds = %21
  %24 = load ptr, ptr %18, align 8, !tbaa !54
  %25 = icmp eq ptr %24, null
  br i1 %25, label %101, label %26

26:                                               ; preds = %23
  %27 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %24, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %28 unwind label %126

28:                                               ; preds = %26
  %29 = load ptr, ptr %18, align 8, !tbaa !54
  %30 = icmp eq ptr %29, null
  br i1 %30, label %101, label %31

31:                                               ; preds = %28
  %32 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %29, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %33 unwind label %126

33:                                               ; preds = %31
  %34 = load ptr, ptr %18, align 8, !tbaa !54
  %35 = icmp eq ptr %34, null
  br i1 %35, label %101, label %36

36:                                               ; preds = %33
  %37 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %34, i32 noundef 54)
          to label %38 unwind label %128

38:                                               ; preds = %36
  %39 = load ptr, ptr %18, align 8, !tbaa !54
  %40 = icmp eq ptr %39, null
  br i1 %40, label %101, label %41

41:                                               ; preds = %38
  %42 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %39, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %43 unwind label %128

43:                                               ; preds = %41
  %44 = load ptr, ptr %18, align 8, !tbaa !54
  %45 = icmp eq ptr %44, null
  br i1 %45, label %101, label %46

46:                                               ; preds = %43
  %47 = load ptr, ptr %0, align 8, !tbaa !23
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %49 = load i64, ptr %48, align 8, !tbaa !10
  %50 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %44, ptr noundef %47, i64 noundef %49)
          to label %51 unwind label %128

51:                                               ; preds = %46
  %52 = load ptr, ptr %18, align 8, !tbaa !54
  %53 = icmp eq ptr %52, null
  br i1 %53, label %101, label %54

54:                                               ; preds = %51
  %55 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %52, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %56 unwind label %128

56:                                               ; preds = %54
  %57 = load ptr, ptr %18, align 8, !tbaa !54
  %58 = icmp eq ptr %57, null
  br i1 %58, label %101, label %59

59:                                               ; preds = %56
  %60 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %57, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %61 unwind label %128

61:                                               ; preds = %59
  %62 = load ptr, ptr %18, align 8, !tbaa !54
  %63 = icmp eq ptr %62, null
  br i1 %63, label %101, label %64

64:                                               ; preds = %61
  %65 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %62, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %66 unwind label %128

66:                                               ; preds = %64
  %67 = load ptr, ptr %18, align 8, !tbaa !54
  %68 = icmp eq ptr %67, null
  br i1 %68, label %101, label %69

69:                                               ; preds = %66
  %70 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %67, i32 noundef 54)
          to label %71 unwind label %130

71:                                               ; preds = %69
  %72 = load ptr, ptr %18, align 8, !tbaa !54
  %73 = icmp eq ptr %72, null
  br i1 %73, label %101, label %74

74:                                               ; preds = %71
  %75 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %72, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %76 unwind label %130

76:                                               ; preds = %74
  %77 = load ptr, ptr %18, align 8, !tbaa !54
  %78 = icmp eq ptr %77, null
  br i1 %78, label %101, label %79

79:                                               ; preds = %76
  %80 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %77, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %81 unwind label %130

81:                                               ; preds = %79
  %82 = load ptr, ptr %18, align 8, !tbaa !54
  %83 = icmp eq ptr %82, null
  br i1 %83, label %101, label %84

84:                                               ; preds = %81
  %85 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %82, ptr noundef nonnull @.str.37, i64 noundef 3)
          to label %86 unwind label %130

86:                                               ; preds = %84
  %87 = load ptr, ptr %18, align 8, !tbaa !54
  %88 = icmp eq ptr %87, null
  br i1 %88, label %101, label %89

89:                                               ; preds = %86
  %90 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %87, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %91 unwind label %130

91:                                               ; preds = %89
  %92 = load ptr, ptr %18, align 8, !tbaa !54
  %93 = icmp eq ptr %92, null
  br i1 %93, label %101, label %94

94:                                               ; preds = %91
  %95 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %92, ptr noundef nonnull @.str.6, i64 noundef 3)
          to label %96 unwind label %130

96:                                               ; preds = %94
  %97 = load ptr, ptr %18, align 8, !tbaa !54
  %98 = icmp eq ptr %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %96
  %100 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %97, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %101 unwind label %130

101:                                              ; preds = %56, %51, %43, %38, %33, %28, %23, %17, %71, %76, %61, %66, %86, %81, %91, %96, %99
  %102 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %103 unwind label %132

103:                                              ; preds = %101
  %104 = load ptr, ptr %18, align 8, !tbaa !54
  %105 = icmp eq ptr %104, null
  br i1 %105, label %124, label %106

106:                                              ; preds = %103
  %107 = fptosi double %102 to i32
  %108 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %104, i32 noundef %107)
          to label %109 unwind label %132

109:                                              ; preds = %106
  %110 = load ptr, ptr %18, align 8, !tbaa !54
  %111 = icmp eq ptr %110, null
  br i1 %111, label %124, label %112

112:                                              ; preds = %109
  %113 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %110, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %114 unwind label %132

114:                                              ; preds = %112
  %115 = load ptr, ptr %18, align 8, !tbaa !54
  %116 = icmp eq ptr %115, null
  br i1 %116, label %124, label %117

117:                                              ; preds = %114
  %118 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %115, i32 noundef 1)
          to label %119 unwind label %134

119:                                              ; preds = %117
  %120 = load ptr, ptr %18, align 8, !tbaa !54
  %121 = icmp eq ptr %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %119
  %123 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %120, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %124 unwind label %134

124:                                              ; preds = %109, %103, %114, %119, %122
  br i1 %7, label %136, label %125

125:                                              ; preds = %124
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %2) #23
  unreachable

126:                                              ; preds = %31, %26, %21
  %127 = landingpad { ptr, i32 }
          cleanup
  br label %342

128:                                              ; preds = %64, %59, %54, %46, %41, %36
  %129 = landingpad { ptr, i32 }
          cleanup
  br label %342

130:                                              ; preds = %99, %94, %89, %84, %79, %74, %69
  %131 = landingpad { ptr, i32 }
          cleanup
  br label %342

132:                                              ; preds = %112, %106, %101
  %133 = landingpad { ptr, i32 }
          cleanup
  br label %342

134:                                              ; preds = %122, %117
  %135 = landingpad { ptr, i32 }
          cleanup
  br label %342

136:                                              ; preds = %124
  %137 = call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
  %138 = call double @llvm.fmuladd.f64(double %4, double -2.000000e+00, double %137)
  %139 = call double @llvm.fabs.f64(double %138)
  %140 = fmul double %4, 2.000000e+00
  %141 = fmul double %140, 1.000000e-03
  %142 = fcmp uge double %139, %141
  br i1 %142, label %150, label %143

143:                                              ; preds = %136
  %144 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %152, !prof !53

146:                                              ; preds = %143
  %147 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %152, label %149

149:                                              ; preds = %146
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %152

150:                                              ; preds = %136
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull @.str.41, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z11CheckSimpleRK7Results, i32 noundef 56)
  %151 = load ptr, ptr %3, align 8, !tbaa !56
  br label %152

152:                                              ; preds = %149, %146, %143, %150
  %153 = phi ptr [ %151, %150 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %143 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %146 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %149 ]
  %154 = load ptr, ptr %153, align 8, !tbaa !54
  %155 = icmp eq ptr %154, null
  br i1 %155, label %236, label %156

156:                                              ; preds = %152
  %157 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %154, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %158 unwind label %344

158:                                              ; preds = %156
  %159 = load ptr, ptr %153, align 8, !tbaa !54
  %160 = icmp eq ptr %159, null
  br i1 %160, label %236, label %161

161:                                              ; preds = %158
  %162 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %163 unwind label %344

163:                                              ; preds = %161
  %164 = load ptr, ptr %153, align 8, !tbaa !54
  %165 = icmp eq ptr %164, null
  br i1 %165, label %236, label %166

166:                                              ; preds = %163
  %167 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %164, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %168 unwind label %344

168:                                              ; preds = %166
  %169 = load ptr, ptr %153, align 8, !tbaa !54
  %170 = icmp eq ptr %169, null
  br i1 %170, label %236, label %171

171:                                              ; preds = %168
  %172 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %169, i32 noundef 56)
          to label %173 unwind label %346

173:                                              ; preds = %171
  %174 = load ptr, ptr %153, align 8, !tbaa !54
  %175 = icmp eq ptr %174, null
  br i1 %175, label %236, label %176

176:                                              ; preds = %173
  %177 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %174, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %178 unwind label %346

178:                                              ; preds = %176
  %179 = load ptr, ptr %153, align 8, !tbaa !54
  %180 = icmp eq ptr %179, null
  br i1 %180, label %236, label %181

181:                                              ; preds = %178
  %182 = load ptr, ptr %0, align 8, !tbaa !23
  %183 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %184 = load i64, ptr %183, align 8, !tbaa !10
  %185 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %179, ptr noundef %182, i64 noundef %184)
          to label %186 unwind label %346

186:                                              ; preds = %181
  %187 = load ptr, ptr %153, align 8, !tbaa !54
  %188 = icmp eq ptr %187, null
  br i1 %188, label %236, label %189

189:                                              ; preds = %186
  %190 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %187, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %191 unwind label %346

191:                                              ; preds = %189
  %192 = load ptr, ptr %153, align 8, !tbaa !54
  %193 = icmp eq ptr %192, null
  br i1 %193, label %236, label %194

194:                                              ; preds = %191
  %195 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %192, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %196 unwind label %346

196:                                              ; preds = %194
  %197 = load ptr, ptr %153, align 8, !tbaa !54
  %198 = icmp eq ptr %197, null
  br i1 %198, label %236, label %199

199:                                              ; preds = %196
  %200 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %197, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %201 unwind label %346

201:                                              ; preds = %199
  %202 = load ptr, ptr %153, align 8, !tbaa !54
  %203 = icmp eq ptr %202, null
  br i1 %203, label %236, label %204

204:                                              ; preds = %201
  %205 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %202, i32 noundef 56)
          to label %206 unwind label %348

206:                                              ; preds = %204
  %207 = load ptr, ptr %153, align 8, !tbaa !54
  %208 = icmp eq ptr %207, null
  br i1 %208, label %236, label %209

209:                                              ; preds = %206
  %210 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %207, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %211 unwind label %348

211:                                              ; preds = %209
  %212 = load ptr, ptr %153, align 8, !tbaa !54
  %213 = icmp eq ptr %212, null
  br i1 %213, label %236, label %214

214:                                              ; preds = %211
  %215 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %212, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %216 unwind label %348

216:                                              ; preds = %214
  %217 = load ptr, ptr %153, align 8, !tbaa !54
  %218 = icmp eq ptr %217, null
  br i1 %218, label %236, label %219

219:                                              ; preds = %216
  %220 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %217, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %221 unwind label %348

221:                                              ; preds = %219
  %222 = load ptr, ptr %153, align 8, !tbaa !54
  %223 = icmp eq ptr %222, null
  br i1 %223, label %236, label %224

224:                                              ; preds = %221
  %225 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %222, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %226 unwind label %348

226:                                              ; preds = %224
  %227 = load ptr, ptr %153, align 8, !tbaa !54
  %228 = icmp eq ptr %227, null
  br i1 %228, label %236, label %229

229:                                              ; preds = %226
  %230 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %227, ptr noundef nonnull @.str.7, i64 noundef 3)
          to label %231 unwind label %348

231:                                              ; preds = %229
  %232 = load ptr, ptr %153, align 8, !tbaa !54
  %233 = icmp eq ptr %232, null
  br i1 %233, label %236, label %234

234:                                              ; preds = %231
  %235 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %232, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %236 unwind label %348

236:                                              ; preds = %191, %186, %178, %173, %168, %163, %158, %152, %206, %211, %196, %201, %221, %216, %226, %231, %234
  %237 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %238 unwind label %350

238:                                              ; preds = %236
  %239 = load ptr, ptr %153, align 8, !tbaa !54
  %240 = icmp eq ptr %239, null
  br i1 %240, label %308, label %241

241:                                              ; preds = %238
  %242 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %239, double noundef %237)
          to label %243 unwind label %350

243:                                              ; preds = %241
  %244 = load ptr, ptr %153, align 8, !tbaa !54
  %245 = icmp eq ptr %244, null
  br i1 %245, label %308, label %246

246:                                              ; preds = %243
  %247 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %244, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %248 unwind label %350

248:                                              ; preds = %246
  %249 = load ptr, ptr %153, align 8, !tbaa !54
  %250 = icmp eq ptr %249, null
  br i1 %250, label %308, label %251

251:                                              ; preds = %248
  %252 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %249, double noundef %140)
          to label %253 unwind label %352

253:                                              ; preds = %251
  %254 = load ptr, ptr %153, align 8, !tbaa !54
  %255 = icmp eq ptr %254, null
  br i1 %255, label %308, label %256

256:                                              ; preds = %253
  %257 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %254, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %258 unwind label %352

258:                                              ; preds = %256
  %259 = load ptr, ptr %153, align 8, !tbaa !54
  %260 = icmp eq ptr %259, null
  br i1 %260, label %308, label %261

261:                                              ; preds = %258
  %262 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %259, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %263 unwind label %352

263:                                              ; preds = %261
  %264 = load ptr, ptr %153, align 8, !tbaa !54
  %265 = icmp eq ptr %264, null
  br i1 %265, label %308, label %266

266:                                              ; preds = %263
  %267 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %264, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %268 unwind label %352

268:                                              ; preds = %266
  %269 = load ptr, ptr %153, align 8, !tbaa !54
  %270 = icmp eq ptr %269, null
  br i1 %270, label %308, label %271

271:                                              ; preds = %268
  %272 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %269, i32 noundef 56)
          to label %273 unwind label %354

273:                                              ; preds = %271
  %274 = load ptr, ptr %153, align 8, !tbaa !54
  %275 = icmp eq ptr %274, null
  br i1 %275, label %308, label %276

276:                                              ; preds = %273
  %277 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %274, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %278 unwind label %354

278:                                              ; preds = %276
  %279 = load ptr, ptr %153, align 8, !tbaa !54
  %280 = icmp eq ptr %279, null
  br i1 %280, label %308, label %281

281:                                              ; preds = %278
  %282 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %279, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %283 unwind label %354

283:                                              ; preds = %281
  %284 = load ptr, ptr %153, align 8, !tbaa !54
  %285 = icmp eq ptr %284, null
  br i1 %285, label %308, label %286

286:                                              ; preds = %283
  %287 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %284, double noundef %141)
          to label %288 unwind label %356

288:                                              ; preds = %286
  %289 = load ptr, ptr %153, align 8, !tbaa !54
  %290 = icmp eq ptr %289, null
  br i1 %290, label %308, label %291

291:                                              ; preds = %288
  %292 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %289, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %293 unwind label %356

293:                                              ; preds = %291
  %294 = load ptr, ptr %153, align 8, !tbaa !54
  %295 = icmp eq ptr %294, null
  br i1 %295, label %308, label %296

296:                                              ; preds = %293
  %297 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %294, double noundef 1.000000e-01)
          to label %298 unwind label %358

298:                                              ; preds = %296
  %299 = load ptr, ptr %153, align 8, !tbaa !54
  %300 = icmp eq ptr %299, null
  br i1 %300, label %308, label %301

301:                                              ; preds = %298
  %302 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %299, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %303 unwind label %358

303:                                              ; preds = %301
  %304 = load ptr, ptr %153, align 8, !tbaa !54
  %305 = icmp eq ptr %304, null
  br i1 %305, label %308, label %306

306:                                              ; preds = %303
  %307 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %304, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %308 unwind label %358

308:                                              ; preds = %263, %258, %253, %248, %243, %238, %278, %283, %268, %273, %293, %288, %298, %303, %306
  %309 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %310 unwind label %360

310:                                              ; preds = %308
  %311 = load ptr, ptr %153, align 8, !tbaa !54
  %312 = icmp eq ptr %311, null
  br i1 %312, label %321, label %313

313:                                              ; preds = %310
  %314 = call double @llvm.fmuladd.f64(double %4, double -2.000000e+00, double %309)
  %315 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %311, double noundef %314)
          to label %316 unwind label %360

316:                                              ; preds = %313
  %317 = load ptr, ptr %153, align 8, !tbaa !54
  %318 = icmp eq ptr %317, null
  br i1 %318, label %321, label %319

319:                                              ; preds = %316
  %320 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %317, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %321 unwind label %360

321:                                              ; preds = %310, %316, %319
  %322 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %323 unwind label %362

323:                                              ; preds = %321
  %324 = load ptr, ptr %153, align 8, !tbaa !54
  %325 = icmp eq ptr %324, null
  br i1 %325, label %340, label %326

326:                                              ; preds = %323
  %327 = fcmp ogt double %140, 1.000000e-05
  %328 = fcmp olt double %140, -1.000000e-05
  %329 = or i1 %327, %328
  %330 = select i1 %329, double %140, double 1.000000e-05
  %331 = call double @llvm.fmuladd.f64(double %4, double -2.000000e+00, double %322)
  %332 = fdiv double %331, %330
  %333 = fmul double %332, 1.000000e+02
  %334 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %324, double noundef %333)
          to label %335 unwind label %362

335:                                              ; preds = %326
  %336 = load ptr, ptr %153, align 8, !tbaa !54
  %337 = icmp eq ptr %336, null
  br i1 %337, label %340, label %338

338:                                              ; preds = %335
  %339 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %336, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %340 unwind label %362

340:                                              ; preds = %323, %335, %338
  br i1 %142, label %341, label %364

341:                                              ; preds = %340
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #23
  unreachable

342:                                              ; preds = %128, %132, %134, %130, %126
  %343 = phi { ptr, i32 } [ %127, %126 ], [ %129, %128 ], [ %131, %130 ], [ %135, %134 ], [ %133, %132 ]
  br i1 %7, label %370, label %367

344:                                              ; preds = %166, %161, %156
  %345 = landingpad { ptr, i32 }
          cleanup
  br label %365

346:                                              ; preds = %199, %194, %189, %181, %176, %171
  %347 = landingpad { ptr, i32 }
          cleanup
  br label %365

348:                                              ; preds = %234, %229, %224, %219, %214, %209, %204
  %349 = landingpad { ptr, i32 }
          cleanup
  br label %365

350:                                              ; preds = %246, %241, %236
  %351 = landingpad { ptr, i32 }
          cleanup
  br label %365

352:                                              ; preds = %266, %261, %256, %251
  %353 = landingpad { ptr, i32 }
          cleanup
  br label %365

354:                                              ; preds = %281, %276, %271
  %355 = landingpad { ptr, i32 }
          cleanup
  br label %365

356:                                              ; preds = %291, %286
  %357 = landingpad { ptr, i32 }
          cleanup
  br label %365

358:                                              ; preds = %306, %301, %296
  %359 = landingpad { ptr, i32 }
          cleanup
  br label %365

360:                                              ; preds = %319, %313, %308
  %361 = landingpad { ptr, i32 }
          cleanup
  br label %365

362:                                              ; preds = %338, %326, %321
  %363 = landingpad { ptr, i32 }
          cleanup
  br label %365

364:                                              ; preds = %340
  ret void

365:                                              ; preds = %346, %350, %354, %358, %362, %360, %356, %352, %348, %344
  %366 = phi { ptr, i32 } [ %345, %344 ], [ %347, %346 ], [ %349, %348 ], [ %351, %350 ], [ %353, %352 ], [ %355, %354 ], [ %357, %356 ], [ %359, %358 ], [ %363, %362 ], [ %361, %360 ]
  br i1 %142, label %367, label %370

367:                                              ; preds = %365, %342
  %368 = phi ptr [ %2, %342 ], [ %3, %365 ]
  invoke void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %368) #23
          to label %369 unwind label %372

369:                                              ; preds = %367
  unreachable

370:                                              ; preds = %365, %342
  %371 = phi { ptr, i32 } [ %343, %342 ], [ %366, %365 ]
  resume { ptr, i32 } %371

372:                                              ; preds = %367
  %373 = landingpad { ptr, i32 }
          catch ptr null
  %374 = extractvalue { ptr, i32 } %373, 0
  call void @__clang_call_terminate(ptr %374) #24
  unreachable
}

declare noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80)) local_unnamed_addr #0

; Function Attrs: uwtable
define linkonce_odr hidden void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = load atomic i8, ptr @_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE3log acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %12, !prof !53

8:                                                ; preds = %5
  %9 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE3log) #21
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  store ptr @_ZSt4clog, ptr @_ZZN9benchmark8internal19GetErrorLogInstanceEvE3log, align 8, !tbaa !54
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE3log) #21
  br label %12

12:                                               ; preds = %5, %8, %11
  store ptr @_ZZN9benchmark8internal19GetErrorLogInstanceEvE3log, ptr %0, align 8, !tbaa !47
  %13 = load ptr, ptr @_ZZN9benchmark8internal19GetErrorLogInstanceEvE3log, align 8, !tbaa !54
  %14 = icmp eq ptr %13, null
  br i1 %14, label %81, label %15

15:                                               ; preds = %12
  %16 = icmp eq ptr %2, null
  br i1 %16, label %17, label %25

17:                                               ; preds = %15
  %18 = load ptr, ptr %13, align 8, !tbaa !58
  %19 = getelementptr i8, ptr %18, i64 -24
  %20 = load i64, ptr %19, align 8
  %21 = getelementptr inbounds i8, ptr %13, i64 %20
  %22 = getelementptr inbounds %"class.std::ios_base", ptr %21, i64 0, i32 5
  %23 = load i32, ptr %22, align 8, !tbaa !60
  %24 = or i32 %23, 1
  tail call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(ptr noundef nonnull align 8 dereferenceable(264) %21, i32 noundef %24)
  br label %28

25:                                               ; preds = %15
  %26 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %2) #21
  %27 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %13, ptr noundef nonnull %2, i64 noundef %26)
  br label %28

28:                                               ; preds = %17, %25
  %29 = load ptr, ptr @_ZZN9benchmark8internal19GetErrorLogInstanceEvE3log, align 8, !tbaa !54
  %30 = icmp eq ptr %29, null
  br i1 %30, label %81, label %31

31:                                               ; preds = %28
  %32 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %29, ptr noundef nonnull @.str.33, i64 noundef 1)
  %33 = load ptr, ptr @_ZZN9benchmark8internal19GetErrorLogInstanceEvE3log, align 8, !tbaa !54
  %34 = icmp eq ptr %33, null
  br i1 %34, label %81, label %35

35:                                               ; preds = %31
  %36 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %33, i32 noundef %4)
  %37 = load ptr, ptr @_ZZN9benchmark8internal19GetErrorLogInstanceEvE3log, align 8, !tbaa !54
  %38 = icmp eq ptr %37, null
  br i1 %38, label %81, label %39

39:                                               ; preds = %35
  %40 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %37, ptr noundef nonnull @.str.34, i64 noundef 2)
  %41 = load ptr, ptr @_ZZN9benchmark8internal19GetErrorLogInstanceEvE3log, align 8, !tbaa !54
  %42 = icmp eq ptr %41, null
  br i1 %42, label %81, label %43

43:                                               ; preds = %39
  %44 = icmp eq ptr %3, null
  br i1 %44, label %45, label %53

45:                                               ; preds = %43
  %46 = load ptr, ptr %41, align 8, !tbaa !58
  %47 = getelementptr i8, ptr %46, i64 -24
  %48 = load i64, ptr %47, align 8
  %49 = getelementptr inbounds i8, ptr %41, i64 %48
  %50 = getelementptr inbounds %"class.std::ios_base", ptr %49, i64 0, i32 5
  %51 = load i32, ptr %50, align 8, !tbaa !60
  %52 = or i32 %51, 1
  tail call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(ptr noundef nonnull align 8 dereferenceable(264) %49, i32 noundef %52)
  br label %56

53:                                               ; preds = %43
  %54 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %3) #21
  %55 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %41, ptr noundef nonnull %3, i64 noundef %54)
  br label %56

56:                                               ; preds = %45, %53
  %57 = load ptr, ptr @_ZZN9benchmark8internal19GetErrorLogInstanceEvE3log, align 8, !tbaa !54
  %58 = icmp eq ptr %57, null
  br i1 %58, label %81, label %59

59:                                               ; preds = %56
  %60 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %57, ptr noundef nonnull @.str.201, i64 noundef 9)
  %61 = load ptr, ptr @_ZZN9benchmark8internal19GetErrorLogInstanceEvE3log, align 8, !tbaa !54
  %62 = icmp eq ptr %61, null
  br i1 %62, label %81, label %63

63:                                               ; preds = %59
  %64 = icmp eq ptr %1, null
  br i1 %64, label %65, label %73

65:                                               ; preds = %63
  %66 = load ptr, ptr %61, align 8, !tbaa !58
  %67 = getelementptr i8, ptr %66, i64 -24
  %68 = load i64, ptr %67, align 8
  %69 = getelementptr inbounds i8, ptr %61, i64 %68
  %70 = getelementptr inbounds %"class.std::ios_base", ptr %69, i64 0, i32 5
  %71 = load i32, ptr %70, align 8, !tbaa !60
  %72 = or i32 %71, 1
  tail call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(ptr noundef nonnull align 8 dereferenceable(264) %69, i32 noundef %72)
  br label %76

73:                                               ; preds = %63
  %74 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #21
  %75 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %61, ptr noundef nonnull %1, i64 noundef %74)
  br label %76

76:                                               ; preds = %65, %73
  %77 = load ptr, ptr @_ZZN9benchmark8internal19GetErrorLogInstanceEvE3log, align 8, !tbaa !54
  %78 = icmp eq ptr %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %77, ptr noundef nonnull @.str.202, i64 noundef 10)
  br label %81

81:                                               ; preds = %31, %35, %12, %28, %56, %39, %59, %76, %79
  ret void
}

; Function Attrs: noreturn uwtable
define linkonce_odr hidden void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %0) unnamed_addr #8 comdat align 2 {
  %2 = load ptr, ptr %0, align 8, !tbaa !56
  %3 = load ptr, ptr %2, align 8, !tbaa !54
  %4 = icmp eq ptr %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = load ptr, ptr %3, align 8, !tbaa !58
  %7 = getelementptr i8, ptr %6, i64 -24
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds i8, ptr %3, i64 %8
  %10 = getelementptr inbounds %"class.std::basic_ios", ptr %9, i64 0, i32 5
  %11 = load ptr, ptr %10, align 8, !tbaa !66
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %5
  tail call void @_ZSt16__throw_bad_castv() #23
  unreachable

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.std::ctype", ptr %11, i64 0, i32 8
  %16 = load i8, ptr %15, align 8, !tbaa !68
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.std::ctype", ptr %11, i64 0, i32 9, i64 10
  %20 = load i8, ptr %19, align 1, !tbaa !13
  br label %26

21:                                               ; preds = %14
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %11)
  %22 = load ptr, ptr %11, align 8, !tbaa !58
  %23 = getelementptr inbounds ptr, ptr %22, i64 6
  %24 = load ptr, ptr %23, align 8
  %25 = tail call noundef signext i8 %24(ptr noundef nonnull align 8 dereferenceable(570) %11, i8 noundef signext 10)
  br label %26

26:                                               ; preds = %18, %21
  %27 = phi i8 [ %20, %18 ], [ %25, %21 ]
  %28 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %3, i8 noundef signext %27)
  %29 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %28)
  br label %30

30:                                               ; preds = %1, %26
  tail call void @_ZN9benchmark8internal16CallAbortHandlerEv() #23
  unreachable
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(ptr noundef %0) local_unnamed_addr #9 comdat {
  %2 = tail call ptr @__cxa_begin_catch(ptr %0) #21
  tail call void @_ZSt9terminatev() #24
  unreachable
}

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #10

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fabs.f64(double) #10

declare noundef i64 @_Z10AddCheckerPKcRKSt8functionIFvRK7ResultsEE(ptr noundef, ptr noundef nonnull align 8 dereferenceable(32)) local_unnamed_addr #0

; Function Attrs: uwtable
define hidden void @_Z33BM_Counters_WithBytesAndItemsPSecRN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca i64, align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %9 = load i8, ptr %8, align 2, !tbaa !71, !range !40, !noundef !41
  %10 = icmp ne i8 %9, 0
  %11 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %12 = load i64, ptr %11, align 8
  tail call void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %13 = icmp eq i64 %12, 0
  %14 = select i1 %10, i1 true, i1 %13
  br i1 %14, label %18, label %15, !prof !42

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 1
  br label %24

18:                                               ; preds = %34, %1
  tail call void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %19 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #21
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 2
  store ptr %20, ptr %6, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %20, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 1
  store i64 3, ptr %21, align 8, !tbaa !10
  %22 = getelementptr inbounds i8, ptr %6, i64 19
  store i8 0, ptr %22, align 1, !tbaa !13
  %23 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %19, ptr noundef nonnull align 8 dereferenceable(32) %6)
          to label %38 unwind label %101

24:                                               ; preds = %15, %34
  %25 = phi i64 [ %12, %15 ], [ %36, %34 ]
  %26 = load i8, ptr %16, align 8, !tbaa !24, !range !40, !noundef !41
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %34, label %28, !prof !42

28:                                               ; preds = %24
  %29 = load i64, ptr %11, align 8, !tbaa !43
  %30 = load i64, ptr %0, align 8, !tbaa !44
  %31 = sub i64 %29, %30
  %32 = load i64, ptr %17, align 8, !tbaa !45
  %33 = add i64 %31, %32
  br label %34

34:                                               ; preds = %24, %28
  %35 = phi i64 [ %33, %28 ], [ 0, %24 ]
  tail call void asm sideeffect "", "r|m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64 %35) #21, !srcloc !72
  %36 = add i64 %25, -1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %18, label %24, !prof !42

38:                                               ; preds = %18
  store double 1.000000e+00, ptr %23, align 8, !tbaa.struct !14
  %39 = getelementptr inbounds i8, ptr %23, i64 8
  store i32 0, ptr %39, align 8, !tbaa.struct !21
  %40 = getelementptr inbounds i8, ptr %23, i64 12
  store i32 1000, ptr %40, align 4, !tbaa.struct !22
  %41 = load ptr, ptr %6, align 8, !tbaa !23
  %42 = icmp eq ptr %41, %20
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @_ZdlPv(ptr noundef %41) #22
  br label %44

44:                                               ; preds = %38, %43
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #21
  %45 = load i32, ptr @_ZN12_GLOBAL__N_110num_calls1E, align 4, !tbaa !73
  %46 = add nsw i32 %45, 1
  store i32 %46, ptr @_ZN12_GLOBAL__N_110num_calls1E, align 4, !tbaa !73
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #21
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 2
  store ptr %47, ptr %7, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %47, ptr noundef nonnull align 1 dereferenceable(3) @.str.7, i64 3, i1 false)
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 1
  store i64 3, ptr %48, align 8, !tbaa !10
  %49 = getelementptr inbounds i8, ptr %7, i64 19
  store i8 0, ptr %49, align 1, !tbaa !13
  %50 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %19, ptr noundef nonnull align 8 dereferenceable(32) %7)
          to label %51 unwind label %107

51:                                               ; preds = %44
  %52 = sitofp i32 %46 to double
  store double %52, ptr %50, align 8, !tbaa.struct !14
  %53 = getelementptr inbounds i8, ptr %50, i64 8
  store i32 0, ptr %53, align 8, !tbaa.struct !21
  %54 = getelementptr inbounds i8, ptr %50, i64 12
  store i32 1000, ptr %54, align 4, !tbaa.struct !22
  %55 = load ptr, ptr %7, align 8, !tbaa !23
  %56 = icmp eq ptr %55, %47
  br i1 %56, label %58, label %57

57:                                               ; preds = %51
  call void @_ZdlPv(ptr noundef %55) #22
  br label %58

58:                                               ; preds = %51, %57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #21
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 2
  store ptr %59, ptr %5, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #21
  store i64 16, ptr %4, align 8, !tbaa !74
  %60 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
  store ptr %60, ptr %5, align 8, !tbaa !23
  %61 = load i64, ptr %4, align 8, !tbaa !74
  store i64 %61, ptr %59, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %60, ptr noundef nonnull align 1 dereferenceable(16) @.str.63, i64 16, i1 false)
  %62 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 1
  store i64 %61, ptr %62, align 8, !tbaa !10
  %63 = load ptr, ptr %5, align 8, !tbaa !23
  %64 = getelementptr inbounds i8, ptr %63, i64 %61
  store i8 0, ptr %64, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #21
  %65 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %19, ptr noundef nonnull align 8 dereferenceable(32) %5)
          to label %66 unwind label %72

66:                                               ; preds = %58
  store double 3.640000e+02, ptr %65, align 8, !tbaa.struct !14
  %67 = getelementptr inbounds i8, ptr %65, i64 8
  store i32 1, ptr %67, align 8, !tbaa.struct !21
  %68 = getelementptr inbounds i8, ptr %65, i64 12
  store i32 1024, ptr %68, align 4, !tbaa.struct !22
  %69 = load ptr, ptr %5, align 8, !tbaa !23
  %70 = icmp eq ptr %69, %59
  br i1 %70, label %80, label %71

71:                                               ; preds = %66
  call void @_ZdlPv(ptr noundef %69) #22
  br label %80

72:                                               ; preds = %58
  %73 = landingpad { ptr, i32 }
          cleanup
  %74 = load ptr, ptr %5, align 8, !tbaa !23
  %75 = icmp eq ptr %74, %59
  br i1 %75, label %79, label %76

76:                                               ; preds = %72
  call void @_ZdlPv(ptr noundef %74) #22
  br label %79

77:                                               ; preds = %106, %112, %99, %79
  %78 = phi { ptr, i32 } [ %73, %79 ], [ %95, %99 ], [ %108, %112 ], [ %102, %106 ]
  resume { ptr, i32 } %78

79:                                               ; preds = %76, %72
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #21
  br label %77

80:                                               ; preds = %66, %71
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #21
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  store ptr %81, ptr %3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  store i64 16, ptr %2, align 8, !tbaa !74
  %82 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull align 8 dereferenceable(8) %2, i64 noundef 0)
  store ptr %82, ptr %3, align 8, !tbaa !23
  %83 = load i64, ptr %2, align 8, !tbaa !74
  store i64 %83, ptr %81, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %82, ptr noundef nonnull align 1 dereferenceable(16) @.str.65, i64 16, i1 false)
  %84 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  store i64 %83, ptr %84, align 8, !tbaa !10
  %85 = load ptr, ptr %3, align 8, !tbaa !23
  %86 = getelementptr inbounds i8, ptr %85, i64 %83
  store i8 0, ptr %86, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #21
  %87 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %19, ptr noundef nonnull align 8 dereferenceable(32) %3)
          to label %88 unwind label %94

88:                                               ; preds = %80
  store double 1.500000e+02, ptr %87, align 8, !tbaa.struct !14
  %89 = getelementptr inbounds i8, ptr %87, i64 8
  store i32 1, ptr %89, align 8, !tbaa.struct !21
  %90 = getelementptr inbounds i8, ptr %87, i64 12
  store i32 1000, ptr %90, align 4, !tbaa.struct !22
  %91 = load ptr, ptr %3, align 8, !tbaa !23
  %92 = icmp eq ptr %91, %81
  br i1 %92, label %100, label %93

93:                                               ; preds = %88
  call void @_ZdlPv(ptr noundef %91) #22
  br label %100

94:                                               ; preds = %80
  %95 = landingpad { ptr, i32 }
          cleanup
  %96 = load ptr, ptr %3, align 8, !tbaa !23
  %97 = icmp eq ptr %96, %81
  br i1 %97, label %99, label %98

98:                                               ; preds = %94
  call void @_ZdlPv(ptr noundef %96) #22
  br label %99

99:                                               ; preds = %98, %94
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  br label %77

100:                                              ; preds = %88, %93
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  ret void

101:                                              ; preds = %18
  %102 = landingpad { ptr, i32 }
          cleanup
  %103 = load ptr, ptr %6, align 8, !tbaa !23
  %104 = icmp eq ptr %103, %20
  br i1 %104, label %106, label %105

105:                                              ; preds = %101
  call void @_ZdlPv(ptr noundef %103) #22
  br label %106

106:                                              ; preds = %105, %101
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #21
  br label %77

107:                                              ; preds = %44
  %108 = landingpad { ptr, i32 }
          cleanup
  %109 = load ptr, ptr %7, align 8, !tbaa !23
  %110 = icmp eq ptr %109, %47
  br i1 %110, label %112, label %111

111:                                              ; preds = %107
  call void @_ZdlPv(ptr noundef %109) #22
  br label %112

112:                                              ; preds = %111, %107
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #21
  br label %77
}

; Function Attrs: uwtable
define hidden void @_Z22CheckBytesAndItemsPSecRK7Results(ptr noundef nonnull align 8 dereferenceable(80) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %3 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %4 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %5 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %6 = tail call noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
  %7 = tail call noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
  %8 = fmul double %6, %7
  %9 = tail call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
  %10 = fptosi double %9 to i32
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %1
  %13 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %21, !prof !53

15:                                               ; preds = %12
  %16 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %21

19:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %2, ptr noundef nonnull @.str.30, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z22CheckBytesAndItemsPSecRK7Results, i32 noundef 105)
  %20 = load ptr, ptr %2, align 8, !tbaa !56
  br label %21

21:                                               ; preds = %18, %15, %12, %19
  %22 = phi ptr [ %20, %19 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %12 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %15 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %18 ]
  %23 = load ptr, ptr %22, align 8, !tbaa !54
  %24 = icmp eq ptr %23, null
  br i1 %24, label %105, label %25

25:                                               ; preds = %21
  %26 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %23, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %27 unwind label %130

27:                                               ; preds = %25
  %28 = load ptr, ptr %22, align 8, !tbaa !54
  %29 = icmp eq ptr %28, null
  br i1 %29, label %105, label %30

30:                                               ; preds = %27
  %31 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %28, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %32 unwind label %130

32:                                               ; preds = %30
  %33 = load ptr, ptr %22, align 8, !tbaa !54
  %34 = icmp eq ptr %33, null
  br i1 %34, label %105, label %35

35:                                               ; preds = %32
  %36 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %33, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %37 unwind label %130

37:                                               ; preds = %35
  %38 = load ptr, ptr %22, align 8, !tbaa !54
  %39 = icmp eq ptr %38, null
  br i1 %39, label %105, label %40

40:                                               ; preds = %37
  %41 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %38, i32 noundef 105)
          to label %42 unwind label %132

42:                                               ; preds = %40
  %43 = load ptr, ptr %22, align 8, !tbaa !54
  %44 = icmp eq ptr %43, null
  br i1 %44, label %105, label %45

45:                                               ; preds = %42
  %46 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %43, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %47 unwind label %132

47:                                               ; preds = %45
  %48 = load ptr, ptr %22, align 8, !tbaa !54
  %49 = icmp eq ptr %48, null
  br i1 %49, label %105, label %50

50:                                               ; preds = %47
  %51 = load ptr, ptr %0, align 8, !tbaa !23
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %53 = load i64, ptr %52, align 8, !tbaa !10
  %54 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %48, ptr noundef %51, i64 noundef %53)
          to label %55 unwind label %132

55:                                               ; preds = %50
  %56 = load ptr, ptr %22, align 8, !tbaa !54
  %57 = icmp eq ptr %56, null
  br i1 %57, label %105, label %58

58:                                               ; preds = %55
  %59 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %56, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %60 unwind label %132

60:                                               ; preds = %58
  %61 = load ptr, ptr %22, align 8, !tbaa !54
  %62 = icmp eq ptr %61, null
  br i1 %62, label %105, label %63

63:                                               ; preds = %60
  %64 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %61, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %65 unwind label %132

65:                                               ; preds = %63
  %66 = load ptr, ptr %22, align 8, !tbaa !54
  %67 = icmp eq ptr %66, null
  br i1 %67, label %105, label %68

68:                                               ; preds = %65
  %69 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %66, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %70 unwind label %132

70:                                               ; preds = %68
  %71 = load ptr, ptr %22, align 8, !tbaa !54
  %72 = icmp eq ptr %71, null
  br i1 %72, label %105, label %73

73:                                               ; preds = %70
  %74 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %71, i32 noundef 105)
          to label %75 unwind label %134

75:                                               ; preds = %73
  %76 = load ptr, ptr %22, align 8, !tbaa !54
  %77 = icmp eq ptr %76, null
  br i1 %77, label %105, label %78

78:                                               ; preds = %75
  %79 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %76, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %80 unwind label %134

80:                                               ; preds = %78
  %81 = load ptr, ptr %22, align 8, !tbaa !54
  %82 = icmp eq ptr %81, null
  br i1 %82, label %105, label %83

83:                                               ; preds = %80
  %84 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %81, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %85 unwind label %134

85:                                               ; preds = %83
  %86 = load ptr, ptr %22, align 8, !tbaa !54
  %87 = icmp eq ptr %86, null
  br i1 %87, label %105, label %88

88:                                               ; preds = %85
  %89 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %86, ptr noundef nonnull @.str.37, i64 noundef 3)
          to label %90 unwind label %134

90:                                               ; preds = %88
  %91 = load ptr, ptr %22, align 8, !tbaa !54
  %92 = icmp eq ptr %91, null
  br i1 %92, label %105, label %93

93:                                               ; preds = %90
  %94 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %91, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %95 unwind label %134

95:                                               ; preds = %93
  %96 = load ptr, ptr %22, align 8, !tbaa !54
  %97 = icmp eq ptr %96, null
  br i1 %97, label %105, label %98

98:                                               ; preds = %95
  %99 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %96, ptr noundef nonnull @.str.6, i64 noundef 3)
          to label %100 unwind label %134

100:                                              ; preds = %98
  %101 = load ptr, ptr %22, align 8, !tbaa !54
  %102 = icmp eq ptr %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %100
  %104 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %101, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %105 unwind label %134

105:                                              ; preds = %60, %55, %47, %42, %37, %32, %27, %21, %75, %80, %65, %70, %90, %85, %95, %100, %103
  %106 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %107 unwind label %136

107:                                              ; preds = %105
  %108 = load ptr, ptr %22, align 8, !tbaa !54
  %109 = icmp eq ptr %108, null
  br i1 %109, label %128, label %110

110:                                              ; preds = %107
  %111 = fptosi double %106 to i32
  %112 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %108, i32 noundef %111)
          to label %113 unwind label %136

113:                                              ; preds = %110
  %114 = load ptr, ptr %22, align 8, !tbaa !54
  %115 = icmp eq ptr %114, null
  br i1 %115, label %128, label %116

116:                                              ; preds = %113
  %117 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %114, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %118 unwind label %136

118:                                              ; preds = %116
  %119 = load ptr, ptr %22, align 8, !tbaa !54
  %120 = icmp eq ptr %119, null
  br i1 %120, label %128, label %121

121:                                              ; preds = %118
  %122 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %119, i32 noundef 1)
          to label %123 unwind label %138

123:                                              ; preds = %121
  %124 = load ptr, ptr %22, align 8, !tbaa !54
  %125 = icmp eq ptr %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %123
  %127 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %124, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %128 unwind label %138

128:                                              ; preds = %113, %107, %118, %123, %126
  br i1 %11, label %140, label %129

129:                                              ; preds = %128
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %2) #23
  unreachable

130:                                              ; preds = %35, %30, %25
  %131 = landingpad { ptr, i32 }
          cleanup
  br label %264

132:                                              ; preds = %68, %63, %58, %50, %45, %40
  %133 = landingpad { ptr, i32 }
          cleanup
  br label %264

134:                                              ; preds = %103, %98, %93, %88, %83, %78, %73
  %135 = landingpad { ptr, i32 }
          cleanup
  br label %264

136:                                              ; preds = %116, %110, %105
  %137 = landingpad { ptr, i32 }
          cleanup
  br label %264

138:                                              ; preds = %126, %121
  %139 = landingpad { ptr, i32 }
          cleanup
  br label %264

140:                                              ; preds = %128
  %141 = call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
  %142 = fptosi double %141 to i32
  %143 = load i32, ptr @_ZN12_GLOBAL__N_110num_calls1E, align 4, !tbaa !73
  %144 = icmp eq i32 %143, %142
  br i1 %144, label %145, label %152

145:                                              ; preds = %140
  %146 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %148, label %154, !prof !53

148:                                              ; preds = %145
  %149 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %154, label %151

151:                                              ; preds = %148
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %154

152:                                              ; preds = %140
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull @.str.62, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z22CheckBytesAndItemsPSecRK7Results, i32 noundef 106)
  %153 = load ptr, ptr %3, align 8, !tbaa !56
  br label %154

154:                                              ; preds = %151, %148, %145, %152
  %155 = phi ptr [ %153, %152 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %145 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %148 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %151 ]
  %156 = load ptr, ptr %155, align 8, !tbaa !54
  %157 = icmp eq ptr %156, null
  br i1 %157, label %238, label %158

158:                                              ; preds = %154
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %156, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %160 unwind label %266

160:                                              ; preds = %158
  %161 = load ptr, ptr %155, align 8, !tbaa !54
  %162 = icmp eq ptr %161, null
  br i1 %162, label %238, label %163

163:                                              ; preds = %160
  %164 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %161, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %165 unwind label %266

165:                                              ; preds = %163
  %166 = load ptr, ptr %155, align 8, !tbaa !54
  %167 = icmp eq ptr %166, null
  br i1 %167, label %238, label %168

168:                                              ; preds = %165
  %169 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %166, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %170 unwind label %266

170:                                              ; preds = %168
  %171 = load ptr, ptr %155, align 8, !tbaa !54
  %172 = icmp eq ptr %171, null
  br i1 %172, label %238, label %173

173:                                              ; preds = %170
  %174 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %171, i32 noundef 106)
          to label %175 unwind label %268

175:                                              ; preds = %173
  %176 = load ptr, ptr %155, align 8, !tbaa !54
  %177 = icmp eq ptr %176, null
  br i1 %177, label %238, label %178

178:                                              ; preds = %175
  %179 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %176, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %180 unwind label %268

180:                                              ; preds = %178
  %181 = load ptr, ptr %155, align 8, !tbaa !54
  %182 = icmp eq ptr %181, null
  br i1 %182, label %238, label %183

183:                                              ; preds = %180
  %184 = load ptr, ptr %0, align 8, !tbaa !23
  %185 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %186 = load i64, ptr %185, align 8, !tbaa !10
  %187 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %181, ptr noundef %184, i64 noundef %186)
          to label %188 unwind label %268

188:                                              ; preds = %183
  %189 = load ptr, ptr %155, align 8, !tbaa !54
  %190 = icmp eq ptr %189, null
  br i1 %190, label %238, label %191

191:                                              ; preds = %188
  %192 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %189, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %193 unwind label %268

193:                                              ; preds = %191
  %194 = load ptr, ptr %155, align 8, !tbaa !54
  %195 = icmp eq ptr %194, null
  br i1 %195, label %238, label %196

196:                                              ; preds = %193
  %197 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %194, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %198 unwind label %268

198:                                              ; preds = %196
  %199 = load ptr, ptr %155, align 8, !tbaa !54
  %200 = icmp eq ptr %199, null
  br i1 %200, label %238, label %201

201:                                              ; preds = %198
  %202 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %199, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %203 unwind label %268

203:                                              ; preds = %201
  %204 = load ptr, ptr %155, align 8, !tbaa !54
  %205 = icmp eq ptr %204, null
  br i1 %205, label %238, label %206

206:                                              ; preds = %203
  %207 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %204, i32 noundef 106)
          to label %208 unwind label %270

208:                                              ; preds = %206
  %209 = load ptr, ptr %155, align 8, !tbaa !54
  %210 = icmp eq ptr %209, null
  br i1 %210, label %238, label %211

211:                                              ; preds = %208
  %212 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %209, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %213 unwind label %270

213:                                              ; preds = %211
  %214 = load ptr, ptr %155, align 8, !tbaa !54
  %215 = icmp eq ptr %214, null
  br i1 %215, label %238, label %216

216:                                              ; preds = %213
  %217 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %214, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %218 unwind label %270

218:                                              ; preds = %216
  %219 = load ptr, ptr %155, align 8, !tbaa !54
  %220 = icmp eq ptr %219, null
  br i1 %220, label %238, label %221

221:                                              ; preds = %218
  %222 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %219, ptr noundef nonnull @.str.37, i64 noundef 3)
          to label %223 unwind label %270

223:                                              ; preds = %221
  %224 = load ptr, ptr %155, align 8, !tbaa !54
  %225 = icmp eq ptr %224, null
  br i1 %225, label %238, label %226

226:                                              ; preds = %223
  %227 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %224, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %228 unwind label %270

228:                                              ; preds = %226
  %229 = load ptr, ptr %155, align 8, !tbaa !54
  %230 = icmp eq ptr %229, null
  br i1 %230, label %238, label %231

231:                                              ; preds = %228
  %232 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %229, ptr noundef nonnull @.str.7, i64 noundef 3)
          to label %233 unwind label %270

233:                                              ; preds = %231
  %234 = load ptr, ptr %155, align 8, !tbaa !54
  %235 = icmp eq ptr %234, null
  br i1 %235, label %238, label %236

236:                                              ; preds = %233
  %237 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %234, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %238 unwind label %270

238:                                              ; preds = %193, %188, %180, %175, %170, %165, %160, %154, %208, %213, %198, %203, %223, %218, %228, %233, %236
  %239 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %240 unwind label %272

240:                                              ; preds = %238
  %241 = load ptr, ptr %155, align 8, !tbaa !54
  %242 = icmp eq ptr %241, null
  br i1 %242, label %262, label %243

243:                                              ; preds = %240
  %244 = fptosi double %239 to i32
  %245 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %241, i32 noundef %244)
          to label %246 unwind label %272

246:                                              ; preds = %243
  %247 = load ptr, ptr %155, align 8, !tbaa !54
  %248 = icmp eq ptr %247, null
  br i1 %248, label %262, label %249

249:                                              ; preds = %246
  %250 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %247, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %251 unwind label %272

251:                                              ; preds = %249
  %252 = load ptr, ptr %155, align 8, !tbaa !54
  %253 = icmp eq ptr %252, null
  br i1 %253, label %262, label %254

254:                                              ; preds = %251
  %255 = load i32, ptr @_ZN12_GLOBAL__N_110num_calls1E, align 4, !tbaa !73
  %256 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %252, i32 noundef %255)
          to label %257 unwind label %272

257:                                              ; preds = %254
  %258 = load ptr, ptr %155, align 8, !tbaa !54
  %259 = icmp eq ptr %258, null
  br i1 %259, label %262, label %260

260:                                              ; preds = %257
  %261 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %258, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %262 unwind label %272

262:                                              ; preds = %246, %240, %251, %257, %260
  br i1 %144, label %274, label %263

263:                                              ; preds = %262
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #23
  unreachable

264:                                              ; preds = %132, %136, %138, %134, %130
  %265 = phi { ptr, i32 } [ %131, %130 ], [ %133, %132 ], [ %135, %134 ], [ %139, %138 ], [ %137, %136 ]
  br i1 %11, label %736, label %733

266:                                              ; preds = %168, %163, %158
  %267 = landingpad { ptr, i32 }
          cleanup
  br label %480

268:                                              ; preds = %201, %196, %191, %183, %178, %173
  %269 = landingpad { ptr, i32 }
          cleanup
  br label %480

270:                                              ; preds = %236, %231, %226, %221, %216, %211, %206
  %271 = landingpad { ptr, i32 }
          cleanup
  br label %480

272:                                              ; preds = %260, %254, %249, %243, %238
  %273 = landingpad { ptr, i32 }
          cleanup
  br label %480

274:                                              ; preds = %262
  %275 = call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.63)
  %276 = fdiv double 3.640000e+02, %8
  %277 = fsub double %275, %276
  %278 = call double @llvm.fabs.f64(double %277)
  %279 = fmul double %276, 1.000000e-03
  %280 = fcmp uge double %278, %279
  br i1 %280, label %288, label %281

281:                                              ; preds = %274
  %282 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %284, label %290, !prof !53

284:                                              ; preds = %281
  %285 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %290, label %287

287:                                              ; preds = %284
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %290

288:                                              ; preds = %274
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %4, ptr noundef nonnull @.str.64, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z22CheckBytesAndItemsPSecRK7Results, i32 noundef 108)
  %289 = load ptr, ptr %4, align 8, !tbaa !56
  br label %290

290:                                              ; preds = %287, %284, %281, %288
  %291 = phi ptr [ %289, %288 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %281 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %284 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %287 ]
  %292 = load ptr, ptr %291, align 8, !tbaa !54
  %293 = icmp eq ptr %292, null
  br i1 %293, label %374, label %294

294:                                              ; preds = %290
  %295 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %292, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %296 unwind label %482

296:                                              ; preds = %294
  %297 = load ptr, ptr %291, align 8, !tbaa !54
  %298 = icmp eq ptr %297, null
  br i1 %298, label %374, label %299

299:                                              ; preds = %296
  %300 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %297, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %301 unwind label %482

301:                                              ; preds = %299
  %302 = load ptr, ptr %291, align 8, !tbaa !54
  %303 = icmp eq ptr %302, null
  br i1 %303, label %374, label %304

304:                                              ; preds = %301
  %305 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %302, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %306 unwind label %482

306:                                              ; preds = %304
  %307 = load ptr, ptr %291, align 8, !tbaa !54
  %308 = icmp eq ptr %307, null
  br i1 %308, label %374, label %309

309:                                              ; preds = %306
  %310 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %307, i32 noundef 108)
          to label %311 unwind label %484

311:                                              ; preds = %309
  %312 = load ptr, ptr %291, align 8, !tbaa !54
  %313 = icmp eq ptr %312, null
  br i1 %313, label %374, label %314

314:                                              ; preds = %311
  %315 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %312, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %316 unwind label %484

316:                                              ; preds = %314
  %317 = load ptr, ptr %291, align 8, !tbaa !54
  %318 = icmp eq ptr %317, null
  br i1 %318, label %374, label %319

319:                                              ; preds = %316
  %320 = load ptr, ptr %0, align 8, !tbaa !23
  %321 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %322 = load i64, ptr %321, align 8, !tbaa !10
  %323 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %317, ptr noundef %320, i64 noundef %322)
          to label %324 unwind label %484

324:                                              ; preds = %319
  %325 = load ptr, ptr %291, align 8, !tbaa !54
  %326 = icmp eq ptr %325, null
  br i1 %326, label %374, label %327

327:                                              ; preds = %324
  %328 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %325, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %329 unwind label %484

329:                                              ; preds = %327
  %330 = load ptr, ptr %291, align 8, !tbaa !54
  %331 = icmp eq ptr %330, null
  br i1 %331, label %374, label %332

332:                                              ; preds = %329
  %333 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %330, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %334 unwind label %484

334:                                              ; preds = %332
  %335 = load ptr, ptr %291, align 8, !tbaa !54
  %336 = icmp eq ptr %335, null
  br i1 %336, label %374, label %337

337:                                              ; preds = %334
  %338 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %335, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %339 unwind label %484

339:                                              ; preds = %337
  %340 = load ptr, ptr %291, align 8, !tbaa !54
  %341 = icmp eq ptr %340, null
  br i1 %341, label %374, label %342

342:                                              ; preds = %339
  %343 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %340, i32 noundef 108)
          to label %344 unwind label %486

344:                                              ; preds = %342
  %345 = load ptr, ptr %291, align 8, !tbaa !54
  %346 = icmp eq ptr %345, null
  br i1 %346, label %374, label %347

347:                                              ; preds = %344
  %348 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %345, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %349 unwind label %486

349:                                              ; preds = %347
  %350 = load ptr, ptr %291, align 8, !tbaa !54
  %351 = icmp eq ptr %350, null
  br i1 %351, label %374, label %352

352:                                              ; preds = %349
  %353 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %350, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %354 unwind label %486

354:                                              ; preds = %352
  %355 = load ptr, ptr %291, align 8, !tbaa !54
  %356 = icmp eq ptr %355, null
  br i1 %356, label %374, label %357

357:                                              ; preds = %354
  %358 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %355, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %359 unwind label %486

359:                                              ; preds = %357
  %360 = load ptr, ptr %291, align 8, !tbaa !54
  %361 = icmp eq ptr %360, null
  br i1 %361, label %374, label %362

362:                                              ; preds = %359
  %363 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %360, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %364 unwind label %486

364:                                              ; preds = %362
  %365 = load ptr, ptr %291, align 8, !tbaa !54
  %366 = icmp eq ptr %365, null
  br i1 %366, label %374, label %367

367:                                              ; preds = %364
  %368 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %365, ptr noundef nonnull @.str.63, i64 noundef 16)
          to label %369 unwind label %486

369:                                              ; preds = %367
  %370 = load ptr, ptr %291, align 8, !tbaa !54
  %371 = icmp eq ptr %370, null
  br i1 %371, label %374, label %372

372:                                              ; preds = %369
  %373 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %370, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %374 unwind label %486

374:                                              ; preds = %329, %324, %316, %311, %306, %301, %296, %290, %344, %349, %334, %339, %359, %354, %364, %369, %372
  %375 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.63)
          to label %376 unwind label %488

376:                                              ; preds = %374
  %377 = load ptr, ptr %291, align 8, !tbaa !54
  %378 = icmp eq ptr %377, null
  br i1 %378, label %446, label %379

379:                                              ; preds = %376
  %380 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %377, double noundef %375)
          to label %381 unwind label %488

381:                                              ; preds = %379
  %382 = load ptr, ptr %291, align 8, !tbaa !54
  %383 = icmp eq ptr %382, null
  br i1 %383, label %446, label %384

384:                                              ; preds = %381
  %385 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %382, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %386 unwind label %488

386:                                              ; preds = %384
  %387 = load ptr, ptr %291, align 8, !tbaa !54
  %388 = icmp eq ptr %387, null
  br i1 %388, label %446, label %389

389:                                              ; preds = %386
  %390 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %387, double noundef %276)
          to label %391 unwind label %490

391:                                              ; preds = %389
  %392 = load ptr, ptr %291, align 8, !tbaa !54
  %393 = icmp eq ptr %392, null
  br i1 %393, label %446, label %394

394:                                              ; preds = %391
  %395 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %392, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %396 unwind label %490

396:                                              ; preds = %394
  %397 = load ptr, ptr %291, align 8, !tbaa !54
  %398 = icmp eq ptr %397, null
  br i1 %398, label %446, label %399

399:                                              ; preds = %396
  %400 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %397, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %401 unwind label %490

401:                                              ; preds = %399
  %402 = load ptr, ptr %291, align 8, !tbaa !54
  %403 = icmp eq ptr %402, null
  br i1 %403, label %446, label %404

404:                                              ; preds = %401
  %405 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %402, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %406 unwind label %490

406:                                              ; preds = %404
  %407 = load ptr, ptr %291, align 8, !tbaa !54
  %408 = icmp eq ptr %407, null
  br i1 %408, label %446, label %409

409:                                              ; preds = %406
  %410 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %407, i32 noundef 108)
          to label %411 unwind label %492

411:                                              ; preds = %409
  %412 = load ptr, ptr %291, align 8, !tbaa !54
  %413 = icmp eq ptr %412, null
  br i1 %413, label %446, label %414

414:                                              ; preds = %411
  %415 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %412, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %416 unwind label %492

416:                                              ; preds = %414
  %417 = load ptr, ptr %291, align 8, !tbaa !54
  %418 = icmp eq ptr %417, null
  br i1 %418, label %446, label %419

419:                                              ; preds = %416
  %420 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %417, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %421 unwind label %492

421:                                              ; preds = %419
  %422 = load ptr, ptr %291, align 8, !tbaa !54
  %423 = icmp eq ptr %422, null
  br i1 %423, label %446, label %424

424:                                              ; preds = %421
  %425 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %422, double noundef %279)
          to label %426 unwind label %494

426:                                              ; preds = %424
  %427 = load ptr, ptr %291, align 8, !tbaa !54
  %428 = icmp eq ptr %427, null
  br i1 %428, label %446, label %429

429:                                              ; preds = %426
  %430 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %427, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %431 unwind label %494

431:                                              ; preds = %429
  %432 = load ptr, ptr %291, align 8, !tbaa !54
  %433 = icmp eq ptr %432, null
  br i1 %433, label %446, label %434

434:                                              ; preds = %431
  %435 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %432, double noundef 1.000000e-01)
          to label %436 unwind label %496

436:                                              ; preds = %434
  %437 = load ptr, ptr %291, align 8, !tbaa !54
  %438 = icmp eq ptr %437, null
  br i1 %438, label %446, label %439

439:                                              ; preds = %436
  %440 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %437, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %441 unwind label %496

441:                                              ; preds = %439
  %442 = load ptr, ptr %291, align 8, !tbaa !54
  %443 = icmp eq ptr %442, null
  br i1 %443, label %446, label %444

444:                                              ; preds = %441
  %445 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %442, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %446 unwind label %496

446:                                              ; preds = %401, %396, %391, %386, %381, %376, %416, %421, %406, %411, %431, %426, %436, %441, %444
  %447 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.63)
          to label %448 unwind label %498

448:                                              ; preds = %446
  %449 = load ptr, ptr %291, align 8, !tbaa !54
  %450 = icmp eq ptr %449, null
  br i1 %450, label %459, label %451

451:                                              ; preds = %448
  %452 = fsub double %447, %276
  %453 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %449, double noundef %452)
          to label %454 unwind label %498

454:                                              ; preds = %451
  %455 = load ptr, ptr %291, align 8, !tbaa !54
  %456 = icmp eq ptr %455, null
  br i1 %456, label %459, label %457

457:                                              ; preds = %454
  %458 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %455, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %459 unwind label %498

459:                                              ; preds = %448, %454, %457
  %460 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.63)
          to label %461 unwind label %500

461:                                              ; preds = %459
  %462 = load ptr, ptr %291, align 8, !tbaa !54
  %463 = icmp eq ptr %462, null
  br i1 %463, label %478, label %464

464:                                              ; preds = %461
  %465 = fcmp ogt double %276, 1.000000e-05
  %466 = fcmp olt double %276, -1.000000e-05
  %467 = or i1 %465, %466
  %468 = select i1 %467, double %276, double 1.000000e-05
  %469 = fsub double %460, %276
  %470 = fdiv double %469, %468
  %471 = fmul double %470, 1.000000e+02
  %472 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %462, double noundef %471)
          to label %473 unwind label %500

473:                                              ; preds = %464
  %474 = load ptr, ptr %291, align 8, !tbaa !54
  %475 = icmp eq ptr %474, null
  br i1 %475, label %478, label %476

476:                                              ; preds = %473
  %477 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %474, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %478 unwind label %500

478:                                              ; preds = %461, %473, %476
  br i1 %280, label %479, label %502

479:                                              ; preds = %478
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %4) #23
  unreachable

480:                                              ; preds = %268, %272, %270, %266
  %481 = phi { ptr, i32 } [ %267, %266 ], [ %269, %268 ], [ %273, %272 ], [ %271, %270 ]
  br i1 %144, label %736, label %733

482:                                              ; preds = %304, %299, %294
  %483 = landingpad { ptr, i32 }
          cleanup
  br label %708

484:                                              ; preds = %337, %332, %327, %319, %314, %309
  %485 = landingpad { ptr, i32 }
          cleanup
  br label %708

486:                                              ; preds = %372, %367, %362, %357, %352, %347, %342
  %487 = landingpad { ptr, i32 }
          cleanup
  br label %708

488:                                              ; preds = %384, %379, %374
  %489 = landingpad { ptr, i32 }
          cleanup
  br label %708

490:                                              ; preds = %404, %399, %394, %389
  %491 = landingpad { ptr, i32 }
          cleanup
  br label %708

492:                                              ; preds = %419, %414, %409
  %493 = landingpad { ptr, i32 }
          cleanup
  br label %708

494:                                              ; preds = %429, %424
  %495 = landingpad { ptr, i32 }
          cleanup
  br label %708

496:                                              ; preds = %444, %439, %434
  %497 = landingpad { ptr, i32 }
          cleanup
  br label %708

498:                                              ; preds = %457, %451, %446
  %499 = landingpad { ptr, i32 }
          cleanup
  br label %708

500:                                              ; preds = %476, %464, %459
  %501 = landingpad { ptr, i32 }
          cleanup
  br label %708

502:                                              ; preds = %478
  %503 = call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.65)
  %504 = fdiv double 1.500000e+02, %8
  %505 = fsub double %503, %504
  %506 = call double @llvm.fabs.f64(double %505)
  %507 = fmul double %504, 1.000000e-03
  %508 = fcmp uge double %506, %507
  br i1 %508, label %516, label %509

509:                                              ; preds = %502
  %510 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %511 = icmp eq i8 %510, 0
  br i1 %511, label %512, label %518, !prof !53

512:                                              ; preds = %509
  %513 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %518, label %515

515:                                              ; preds = %512
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %518

516:                                              ; preds = %502
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %5, ptr noundef nonnull @.str.66, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z22CheckBytesAndItemsPSecRK7Results, i32 noundef 109)
  %517 = load ptr, ptr %5, align 8, !tbaa !56
  br label %518

518:                                              ; preds = %515, %512, %509, %516
  %519 = phi ptr [ %517, %516 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %509 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %512 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %515 ]
  %520 = load ptr, ptr %519, align 8, !tbaa !54
  %521 = icmp eq ptr %520, null
  br i1 %521, label %602, label %522

522:                                              ; preds = %518
  %523 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %520, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %524 unwind label %710

524:                                              ; preds = %522
  %525 = load ptr, ptr %519, align 8, !tbaa !54
  %526 = icmp eq ptr %525, null
  br i1 %526, label %602, label %527

527:                                              ; preds = %524
  %528 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %525, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %529 unwind label %710

529:                                              ; preds = %527
  %530 = load ptr, ptr %519, align 8, !tbaa !54
  %531 = icmp eq ptr %530, null
  br i1 %531, label %602, label %532

532:                                              ; preds = %529
  %533 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %530, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %534 unwind label %710

534:                                              ; preds = %532
  %535 = load ptr, ptr %519, align 8, !tbaa !54
  %536 = icmp eq ptr %535, null
  br i1 %536, label %602, label %537

537:                                              ; preds = %534
  %538 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %535, i32 noundef 109)
          to label %539 unwind label %712

539:                                              ; preds = %537
  %540 = load ptr, ptr %519, align 8, !tbaa !54
  %541 = icmp eq ptr %540, null
  br i1 %541, label %602, label %542

542:                                              ; preds = %539
  %543 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %540, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %544 unwind label %712

544:                                              ; preds = %542
  %545 = load ptr, ptr %519, align 8, !tbaa !54
  %546 = icmp eq ptr %545, null
  br i1 %546, label %602, label %547

547:                                              ; preds = %544
  %548 = load ptr, ptr %0, align 8, !tbaa !23
  %549 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %550 = load i64, ptr %549, align 8, !tbaa !10
  %551 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %545, ptr noundef %548, i64 noundef %550)
          to label %552 unwind label %712

552:                                              ; preds = %547
  %553 = load ptr, ptr %519, align 8, !tbaa !54
  %554 = icmp eq ptr %553, null
  br i1 %554, label %602, label %555

555:                                              ; preds = %552
  %556 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %553, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %557 unwind label %712

557:                                              ; preds = %555
  %558 = load ptr, ptr %519, align 8, !tbaa !54
  %559 = icmp eq ptr %558, null
  br i1 %559, label %602, label %560

560:                                              ; preds = %557
  %561 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %558, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %562 unwind label %712

562:                                              ; preds = %560
  %563 = load ptr, ptr %519, align 8, !tbaa !54
  %564 = icmp eq ptr %563, null
  br i1 %564, label %602, label %565

565:                                              ; preds = %562
  %566 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %563, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %567 unwind label %712

567:                                              ; preds = %565
  %568 = load ptr, ptr %519, align 8, !tbaa !54
  %569 = icmp eq ptr %568, null
  br i1 %569, label %602, label %570

570:                                              ; preds = %567
  %571 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %568, i32 noundef 109)
          to label %572 unwind label %714

572:                                              ; preds = %570
  %573 = load ptr, ptr %519, align 8, !tbaa !54
  %574 = icmp eq ptr %573, null
  br i1 %574, label %602, label %575

575:                                              ; preds = %572
  %576 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %573, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %577 unwind label %714

577:                                              ; preds = %575
  %578 = load ptr, ptr %519, align 8, !tbaa !54
  %579 = icmp eq ptr %578, null
  br i1 %579, label %602, label %580

580:                                              ; preds = %577
  %581 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %578, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %582 unwind label %714

582:                                              ; preds = %580
  %583 = load ptr, ptr %519, align 8, !tbaa !54
  %584 = icmp eq ptr %583, null
  br i1 %584, label %602, label %585

585:                                              ; preds = %582
  %586 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %583, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %587 unwind label %714

587:                                              ; preds = %585
  %588 = load ptr, ptr %519, align 8, !tbaa !54
  %589 = icmp eq ptr %588, null
  br i1 %589, label %602, label %590

590:                                              ; preds = %587
  %591 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %588, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %592 unwind label %714

592:                                              ; preds = %590
  %593 = load ptr, ptr %519, align 8, !tbaa !54
  %594 = icmp eq ptr %593, null
  br i1 %594, label %602, label %595

595:                                              ; preds = %592
  %596 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %593, ptr noundef nonnull @.str.65, i64 noundef 16)
          to label %597 unwind label %714

597:                                              ; preds = %595
  %598 = load ptr, ptr %519, align 8, !tbaa !54
  %599 = icmp eq ptr %598, null
  br i1 %599, label %602, label %600

600:                                              ; preds = %597
  %601 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %598, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %602 unwind label %714

602:                                              ; preds = %557, %552, %544, %539, %534, %529, %524, %518, %572, %577, %562, %567, %587, %582, %592, %597, %600
  %603 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.65)
          to label %604 unwind label %716

604:                                              ; preds = %602
  %605 = load ptr, ptr %519, align 8, !tbaa !54
  %606 = icmp eq ptr %605, null
  br i1 %606, label %674, label %607

607:                                              ; preds = %604
  %608 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %605, double noundef %603)
          to label %609 unwind label %716

609:                                              ; preds = %607
  %610 = load ptr, ptr %519, align 8, !tbaa !54
  %611 = icmp eq ptr %610, null
  br i1 %611, label %674, label %612

612:                                              ; preds = %609
  %613 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %610, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %614 unwind label %716

614:                                              ; preds = %612
  %615 = load ptr, ptr %519, align 8, !tbaa !54
  %616 = icmp eq ptr %615, null
  br i1 %616, label %674, label %617

617:                                              ; preds = %614
  %618 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %615, double noundef %504)
          to label %619 unwind label %718

619:                                              ; preds = %617
  %620 = load ptr, ptr %519, align 8, !tbaa !54
  %621 = icmp eq ptr %620, null
  br i1 %621, label %674, label %622

622:                                              ; preds = %619
  %623 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %620, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %624 unwind label %718

624:                                              ; preds = %622
  %625 = load ptr, ptr %519, align 8, !tbaa !54
  %626 = icmp eq ptr %625, null
  br i1 %626, label %674, label %627

627:                                              ; preds = %624
  %628 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %625, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %629 unwind label %718

629:                                              ; preds = %627
  %630 = load ptr, ptr %519, align 8, !tbaa !54
  %631 = icmp eq ptr %630, null
  br i1 %631, label %674, label %632

632:                                              ; preds = %629
  %633 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %630, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %634 unwind label %718

634:                                              ; preds = %632
  %635 = load ptr, ptr %519, align 8, !tbaa !54
  %636 = icmp eq ptr %635, null
  br i1 %636, label %674, label %637

637:                                              ; preds = %634
  %638 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %635, i32 noundef 109)
          to label %639 unwind label %720

639:                                              ; preds = %637
  %640 = load ptr, ptr %519, align 8, !tbaa !54
  %641 = icmp eq ptr %640, null
  br i1 %641, label %674, label %642

642:                                              ; preds = %639
  %643 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %640, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %644 unwind label %720

644:                                              ; preds = %642
  %645 = load ptr, ptr %519, align 8, !tbaa !54
  %646 = icmp eq ptr %645, null
  br i1 %646, label %674, label %647

647:                                              ; preds = %644
  %648 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %645, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %649 unwind label %720

649:                                              ; preds = %647
  %650 = load ptr, ptr %519, align 8, !tbaa !54
  %651 = icmp eq ptr %650, null
  br i1 %651, label %674, label %652

652:                                              ; preds = %649
  %653 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %650, double noundef %507)
          to label %654 unwind label %722

654:                                              ; preds = %652
  %655 = load ptr, ptr %519, align 8, !tbaa !54
  %656 = icmp eq ptr %655, null
  br i1 %656, label %674, label %657

657:                                              ; preds = %654
  %658 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %655, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %659 unwind label %722

659:                                              ; preds = %657
  %660 = load ptr, ptr %519, align 8, !tbaa !54
  %661 = icmp eq ptr %660, null
  br i1 %661, label %674, label %662

662:                                              ; preds = %659
  %663 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %660, double noundef 1.000000e-01)
          to label %664 unwind label %724

664:                                              ; preds = %662
  %665 = load ptr, ptr %519, align 8, !tbaa !54
  %666 = icmp eq ptr %665, null
  br i1 %666, label %674, label %667

667:                                              ; preds = %664
  %668 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %665, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %669 unwind label %724

669:                                              ; preds = %667
  %670 = load ptr, ptr %519, align 8, !tbaa !54
  %671 = icmp eq ptr %670, null
  br i1 %671, label %674, label %672

672:                                              ; preds = %669
  %673 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %670, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %674 unwind label %724

674:                                              ; preds = %629, %624, %619, %614, %609, %604, %644, %649, %634, %639, %659, %654, %664, %669, %672
  %675 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.65)
          to label %676 unwind label %726

676:                                              ; preds = %674
  %677 = load ptr, ptr %519, align 8, !tbaa !54
  %678 = icmp eq ptr %677, null
  br i1 %678, label %687, label %679

679:                                              ; preds = %676
  %680 = fsub double %675, %504
  %681 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %677, double noundef %680)
          to label %682 unwind label %726

682:                                              ; preds = %679
  %683 = load ptr, ptr %519, align 8, !tbaa !54
  %684 = icmp eq ptr %683, null
  br i1 %684, label %687, label %685

685:                                              ; preds = %682
  %686 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %683, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %687 unwind label %726

687:                                              ; preds = %676, %682, %685
  %688 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.65)
          to label %689 unwind label %728

689:                                              ; preds = %687
  %690 = load ptr, ptr %519, align 8, !tbaa !54
  %691 = icmp eq ptr %690, null
  br i1 %691, label %706, label %692

692:                                              ; preds = %689
  %693 = fcmp ogt double %504, 1.000000e-05
  %694 = fcmp olt double %504, -1.000000e-05
  %695 = or i1 %693, %694
  %696 = select i1 %695, double %504, double 1.000000e-05
  %697 = fsub double %688, %504
  %698 = fdiv double %697, %696
  %699 = fmul double %698, 1.000000e+02
  %700 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %690, double noundef %699)
          to label %701 unwind label %728

701:                                              ; preds = %692
  %702 = load ptr, ptr %519, align 8, !tbaa !54
  %703 = icmp eq ptr %702, null
  br i1 %703, label %706, label %704

704:                                              ; preds = %701
  %705 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %702, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %706 unwind label %728

706:                                              ; preds = %689, %701, %704
  br i1 %508, label %707, label %730

707:                                              ; preds = %706
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %5) #23
  unreachable

708:                                              ; preds = %484, %488, %492, %496, %500, %498, %494, %490, %486, %482
  %709 = phi { ptr, i32 } [ %483, %482 ], [ %485, %484 ], [ %487, %486 ], [ %489, %488 ], [ %491, %490 ], [ %493, %492 ], [ %495, %494 ], [ %497, %496 ], [ %501, %500 ], [ %499, %498 ]
  br i1 %280, label %733, label %736

710:                                              ; preds = %532, %527, %522
  %711 = landingpad { ptr, i32 }
          cleanup
  br label %731

712:                                              ; preds = %565, %560, %555, %547, %542, %537
  %713 = landingpad { ptr, i32 }
          cleanup
  br label %731

714:                                              ; preds = %600, %595, %590, %585, %580, %575, %570
  %715 = landingpad { ptr, i32 }
          cleanup
  br label %731

716:                                              ; preds = %612, %607, %602
  %717 = landingpad { ptr, i32 }
          cleanup
  br label %731

718:                                              ; preds = %632, %627, %622, %617
  %719 = landingpad { ptr, i32 }
          cleanup
  br label %731

720:                                              ; preds = %647, %642, %637
  %721 = landingpad { ptr, i32 }
          cleanup
  br label %731

722:                                              ; preds = %657, %652
  %723 = landingpad { ptr, i32 }
          cleanup
  br label %731

724:                                              ; preds = %672, %667, %662
  %725 = landingpad { ptr, i32 }
          cleanup
  br label %731

726:                                              ; preds = %685, %679, %674
  %727 = landingpad { ptr, i32 }
          cleanup
  br label %731

728:                                              ; preds = %704, %692, %687
  %729 = landingpad { ptr, i32 }
          cleanup
  br label %731

730:                                              ; preds = %706
  ret void

731:                                              ; preds = %712, %716, %720, %724, %728, %726, %722, %718, %714, %710
  %732 = phi { ptr, i32 } [ %711, %710 ], [ %713, %712 ], [ %715, %714 ], [ %717, %716 ], [ %719, %718 ], [ %721, %720 ], [ %723, %722 ], [ %725, %724 ], [ %729, %728 ], [ %727, %726 ]
  br i1 %508, label %733, label %736

733:                                              ; preds = %731, %708, %480, %264
  %734 = phi ptr [ %2, %264 ], [ %3, %480 ], [ %4, %708 ], [ %5, %731 ]
  invoke void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %734) #23
          to label %735 unwind label %738

735:                                              ; preds = %733
  unreachable

736:                                              ; preds = %731, %708, %480, %264
  %737 = phi { ptr, i32 } [ %265, %264 ], [ %481, %480 ], [ %709, %708 ], [ %732, %731 ]
  resume { ptr, i32 } %737

738:                                              ; preds = %733
  %739 = landingpad { ptr, i32 }
          catch ptr null
  %740 = extractvalue { ptr, i32 } %739, 0
  call void @__clang_call_terminate(ptr %740) #24
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr hidden noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1) local_unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %4 = alloca %"class.std::__cxx11::basic_stringstream", align 8
  %5 = alloca double, align 8
  %6 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %7 = tail call noundef ptr @_ZNK7Results3GetB5cxx11EPKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1)
  %8 = icmp eq ptr %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 1
  %11 = load i64, ptr %10, align 8, !tbaa !10
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %21, !prof !53

16:                                               ; preds = %13
  %17 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %16
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %21

20:                                               ; preds = %9, %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull @.str.204, ptr noundef nonnull @.str.205, ptr noundef nonnull @__func__._ZNK7Results5GetAsIdEET_PKc, i32 noundef 144)
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #23
  unreachable

21:                                               ; preds = %13, %16, %19
  call void @llvm.lifetime.start.p0(i64 392, ptr nonnull %4) #21
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(ptr noundef nonnull align 8 dereferenceable(128) %4)
  %22 = getelementptr inbounds i8, ptr %4, i64 16
  %23 = load ptr, ptr %7, align 8, !tbaa !23
  %24 = load i64, ptr %10, align 8, !tbaa !10
  %25 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %22, ptr noundef %23, i64 noundef %24)
          to label %26 unwind label %47

26:                                               ; preds = %21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #21
  %27 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi10_M_extractIdEERSiRT_(ptr noundef nonnull align 8 dereferenceable(16) %4, ptr noundef nonnull align 8 dereferenceable(8) %5)
          to label %28 unwind label %49

28:                                               ; preds = %26
  %29 = load ptr, ptr %4, align 8, !tbaa !58
  %30 = getelementptr i8, ptr %29, i64 -24
  %31 = load i64, ptr %30, align 8
  %32 = getelementptr inbounds i8, ptr %4, i64 %31
  %33 = getelementptr inbounds %"class.std::ios_base", ptr %32, i64 0, i32 5
  %34 = load i32, ptr %33, align 8, !tbaa !60
  %35 = and i32 %34, 5
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %44

37:                                               ; preds = %28
  %38 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %51, !prof !53

40:                                               ; preds = %37
  %41 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %51

44:                                               ; preds = %28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #21
  invoke void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %6, ptr noundef nonnull @.str.206, ptr noundef nonnull @.str.205, ptr noundef nonnull @__func__._ZNK7Results5GetAsIdEET_PKc, i32 noundef 149)
          to label %45 unwind label %74

45:                                               ; preds = %44
  invoke void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %6) #23
          to label %46 unwind label %74

46:                                               ; preds = %45
  unreachable

47:                                               ; preds = %21
  %48 = landingpad { ptr, i32 }
          cleanup
  br label %78

49:                                               ; preds = %26
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %76

51:                                               ; preds = %43, %40, %37
  %52 = load double, ptr %5, align 8, !tbaa !15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #21
  %53 = load ptr, ptr @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, align 8
  store ptr %53, ptr %4, align 8, !tbaa !58
  %54 = load ptr, ptr getelementptr inbounds ([10 x ptr], ptr @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 8), align 8
  %55 = getelementptr i8, ptr %53, i64 -24
  %56 = load i64, ptr %55, align 8
  %57 = getelementptr inbounds i8, ptr %4, i64 %56
  store ptr %54, ptr %57, align 8, !tbaa !58
  %58 = load ptr, ptr getelementptr inbounds ([10 x ptr], ptr @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 9), align 8
  store ptr %58, ptr %22, align 8, !tbaa !58
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %4, i64 0, i32 1
  store ptr getelementptr inbounds ({ [16 x ptr] }, ptr @_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 0, i64 2), ptr %59, align 8, !tbaa !58
  %60 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %4, i64 0, i32 1, i32 2
  %61 = load ptr, ptr %60, align 8, !tbaa !23
  %62 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %4, i64 0, i32 1, i32 2, i32 2
  %63 = icmp eq ptr %61, %62
  br i1 %63, label %65, label %64

64:                                               ; preds = %51
  call void @_ZdlPv(ptr noundef %61) #22
  br label %65

65:                                               ; preds = %51, %64
  store ptr getelementptr inbounds ({ [16 x ptr] }, ptr @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2), ptr %59, align 8, !tbaa !58
  %66 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %4, i64 0, i32 1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %66) #21
  %67 = load ptr, ptr getelementptr inbounds ([10 x ptr], ptr @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 2), align 8
  store ptr %67, ptr %4, align 8, !tbaa !58
  %68 = load ptr, ptr getelementptr inbounds ([10 x ptr], ptr @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 3), align 8
  %69 = getelementptr i8, ptr %67, i64 -24
  %70 = load i64, ptr %69, align 8
  %71 = getelementptr inbounds i8, ptr %4, i64 %70
  store ptr %68, ptr %71, align 8, !tbaa !58
  %72 = getelementptr inbounds %"class.std::basic_istream", ptr %4, i64 0, i32 1
  store i64 0, ptr %72, align 8, !tbaa !75
  %73 = getelementptr inbounds i8, ptr %4, i64 128
  call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %73) #21
  call void @llvm.lifetime.end.p0(i64 392, ptr nonnull %4) #21
  ret double %52

74:                                               ; preds = %44, %45
  %75 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #21
  br label %76

76:                                               ; preds = %74, %49
  %77 = phi { ptr, i32 } [ %75, %74 ], [ %50, %49 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #21
  br label %78

78:                                               ; preds = %76, %47
  %79 = phi { ptr, i32 } [ %77, %76 ], [ %48, %47 ]
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %4) #21
  call void @llvm.lifetime.end.p0(i64 392, ptr nonnull %4) #21
  resume { ptr, i32 } %79
}

; Function Attrs: uwtable
define hidden void @_Z16BM_Counters_RateRN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !71, !range !40, !noundef !41
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %8 = load i64, ptr %7, align 8
  tail call void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %9 = icmp eq i64 %8, 0
  %10 = select i1 %6, i1 true, i1 %9
  br i1 %10, label %14, label %11, !prof !42

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 1
  br label %20

14:                                               ; preds = %30, %1
  tail call void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %15 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #21
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 2
  store ptr %16, ptr %2, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %16, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  store i64 3, ptr %17, align 8, !tbaa !10
  %18 = getelementptr inbounds i8, ptr %2, i64 19
  store i8 0, ptr %18, align 1, !tbaa !13
  %19 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %15, ptr noundef nonnull align 8 dereferenceable(32) %2)
          to label %34 unwind label %52

20:                                               ; preds = %11, %30
  %21 = phi i64 [ %8, %11 ], [ %32, %30 ]
  %22 = load i8, ptr %12, align 8, !tbaa !24, !range !40, !noundef !41
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %24, !prof !42

24:                                               ; preds = %20
  %25 = load i64, ptr %7, align 8, !tbaa !43
  %26 = load i64, ptr %0, align 8, !tbaa !44
  %27 = sub i64 %25, %26
  %28 = load i64, ptr %13, align 8, !tbaa !45
  %29 = add i64 %27, %28
  br label %30

30:                                               ; preds = %20, %24
  %31 = phi i64 [ %29, %24 ], [ 0, %20 ]
  tail call void asm sideeffect "", "r|m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64 %31) #21, !srcloc !72
  %32 = add i64 %21, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %14, label %20, !prof !42

34:                                               ; preds = %14
  store double 1.000000e+00, ptr %19, align 8, !tbaa.struct !14
  %35 = getelementptr inbounds i8, ptr %19, i64 8
  store i32 1, ptr %35, align 8, !tbaa.struct !21
  %36 = getelementptr inbounds i8, ptr %19, i64 12
  store i32 1000, ptr %36, align 4, !tbaa.struct !22
  %37 = load ptr, ptr %2, align 8, !tbaa !23
  %38 = icmp eq ptr %37, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @_ZdlPv(ptr noundef %37) #22
  br label %40

40:                                               ; preds = %34, %39
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #21
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  store ptr %41, ptr %3, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %41, ptr noundef nonnull align 1 dereferenceable(3) @.str.7, i64 3, i1 false)
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  store i64 3, ptr %42, align 8, !tbaa !10
  %43 = getelementptr inbounds i8, ptr %3, i64 19
  store i8 0, ptr %43, align 1, !tbaa !13
  %44 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %15, ptr noundef nonnull align 8 dereferenceable(32) %3)
          to label %45 unwind label %58

45:                                               ; preds = %40
  store double 2.000000e+00, ptr %44, align 8, !tbaa.struct !14
  %46 = getelementptr inbounds i8, ptr %44, i64 8
  store i32 1, ptr %46, align 8, !tbaa.struct !21
  %47 = getelementptr inbounds i8, ptr %44, i64 12
  store i32 1000, ptr %47, align 4, !tbaa.struct !22
  %48 = load ptr, ptr %3, align 8, !tbaa !23
  %49 = icmp eq ptr %48, %41
  br i1 %49, label %51, label %50

50:                                               ; preds = %45
  call void @_ZdlPv(ptr noundef %48) #22
  br label %51

51:                                               ; preds = %45, %50
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  ret void

52:                                               ; preds = %14
  %53 = landingpad { ptr, i32 }
          cleanup
  %54 = load ptr, ptr %2, align 8, !tbaa !23
  %55 = icmp eq ptr %54, %16
  br i1 %55, label %57, label %56

56:                                               ; preds = %52
  call void @_ZdlPv(ptr noundef %54) #22
  br label %57

57:                                               ; preds = %56, %52
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  br label %64

58:                                               ; preds = %40
  %59 = landingpad { ptr, i32 }
          cleanup
  %60 = load ptr, ptr %3, align 8, !tbaa !23
  %61 = icmp eq ptr %60, %41
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  call void @_ZdlPv(ptr noundef %60) #22
  br label %63

63:                                               ; preds = %62, %58
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  br label %64

64:                                               ; preds = %63, %57
  %65 = phi { ptr, i32 } [ %59, %63 ], [ %53, %57 ]
  resume { ptr, i32 } %65
}

; Function Attrs: uwtable
define hidden void @_Z9CheckRateRK7Results(ptr noundef nonnull align 8 dereferenceable(80) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %3 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %4 = tail call noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
  %5 = tail call noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
  %6 = fmul double %4, %5
  %7 = tail call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
  %8 = fdiv double 1.000000e+00, %6
  %9 = fsub double %7, %8
  %10 = tail call double @llvm.fabs.f64(double %9)
  %11 = fmul double %8, 1.000000e-03
  %12 = fcmp uge double %10, %11
  br i1 %12, label %20, label %13

13:                                               ; preds = %1
  %14 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %22, !prof !53

16:                                               ; preds = %13
  %17 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %22

20:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %2, ptr noundef nonnull @.str.78, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z9CheckRateRK7Results, i32 noundef 152)
  %21 = load ptr, ptr %2, align 8, !tbaa !56
  br label %22

22:                                               ; preds = %19, %16, %13, %20
  %23 = phi ptr [ %21, %20 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %13 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %16 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %19 ]
  %24 = load ptr, ptr %23, align 8, !tbaa !54
  %25 = icmp eq ptr %24, null
  br i1 %25, label %106, label %26

26:                                               ; preds = %22
  %27 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %24, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %28 unwind label %212

28:                                               ; preds = %26
  %29 = load ptr, ptr %23, align 8, !tbaa !54
  %30 = icmp eq ptr %29, null
  br i1 %30, label %106, label %31

31:                                               ; preds = %28
  %32 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %29, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %33 unwind label %212

33:                                               ; preds = %31
  %34 = load ptr, ptr %23, align 8, !tbaa !54
  %35 = icmp eq ptr %34, null
  br i1 %35, label %106, label %36

36:                                               ; preds = %33
  %37 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %34, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %38 unwind label %212

38:                                               ; preds = %36
  %39 = load ptr, ptr %23, align 8, !tbaa !54
  %40 = icmp eq ptr %39, null
  br i1 %40, label %106, label %41

41:                                               ; preds = %38
  %42 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %39, i32 noundef 152)
          to label %43 unwind label %214

43:                                               ; preds = %41
  %44 = load ptr, ptr %23, align 8, !tbaa !54
  %45 = icmp eq ptr %44, null
  br i1 %45, label %106, label %46

46:                                               ; preds = %43
  %47 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %44, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %48 unwind label %214

48:                                               ; preds = %46
  %49 = load ptr, ptr %23, align 8, !tbaa !54
  %50 = icmp eq ptr %49, null
  br i1 %50, label %106, label %51

51:                                               ; preds = %48
  %52 = load ptr, ptr %0, align 8, !tbaa !23
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %54 = load i64, ptr %53, align 8, !tbaa !10
  %55 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %49, ptr noundef %52, i64 noundef %54)
          to label %56 unwind label %214

56:                                               ; preds = %51
  %57 = load ptr, ptr %23, align 8, !tbaa !54
  %58 = icmp eq ptr %57, null
  br i1 %58, label %106, label %59

59:                                               ; preds = %56
  %60 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %57, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %61 unwind label %214

61:                                               ; preds = %59
  %62 = load ptr, ptr %23, align 8, !tbaa !54
  %63 = icmp eq ptr %62, null
  br i1 %63, label %106, label %64

64:                                               ; preds = %61
  %65 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %62, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %66 unwind label %214

66:                                               ; preds = %64
  %67 = load ptr, ptr %23, align 8, !tbaa !54
  %68 = icmp eq ptr %67, null
  br i1 %68, label %106, label %69

69:                                               ; preds = %66
  %70 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %67, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %71 unwind label %214

71:                                               ; preds = %69
  %72 = load ptr, ptr %23, align 8, !tbaa !54
  %73 = icmp eq ptr %72, null
  br i1 %73, label %106, label %74

74:                                               ; preds = %71
  %75 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %72, i32 noundef 152)
          to label %76 unwind label %216

76:                                               ; preds = %74
  %77 = load ptr, ptr %23, align 8, !tbaa !54
  %78 = icmp eq ptr %77, null
  br i1 %78, label %106, label %79

79:                                               ; preds = %76
  %80 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %77, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %81 unwind label %216

81:                                               ; preds = %79
  %82 = load ptr, ptr %23, align 8, !tbaa !54
  %83 = icmp eq ptr %82, null
  br i1 %83, label %106, label %84

84:                                               ; preds = %81
  %85 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %82, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %86 unwind label %216

86:                                               ; preds = %84
  %87 = load ptr, ptr %23, align 8, !tbaa !54
  %88 = icmp eq ptr %87, null
  br i1 %88, label %106, label %89

89:                                               ; preds = %86
  %90 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %87, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %91 unwind label %216

91:                                               ; preds = %89
  %92 = load ptr, ptr %23, align 8, !tbaa !54
  %93 = icmp eq ptr %92, null
  br i1 %93, label %106, label %94

94:                                               ; preds = %91
  %95 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %92, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %96 unwind label %216

96:                                               ; preds = %94
  %97 = load ptr, ptr %23, align 8, !tbaa !54
  %98 = icmp eq ptr %97, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %96
  %100 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %97, ptr noundef nonnull @.str.6, i64 noundef 3)
          to label %101 unwind label %216

101:                                              ; preds = %99
  %102 = load ptr, ptr %23, align 8, !tbaa !54
  %103 = icmp eq ptr %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %102, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %106 unwind label %216

106:                                              ; preds = %61, %56, %48, %43, %38, %33, %28, %22, %76, %81, %66, %71, %91, %86, %96, %101, %104
  %107 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %108 unwind label %218

108:                                              ; preds = %106
  %109 = load ptr, ptr %23, align 8, !tbaa !54
  %110 = icmp eq ptr %109, null
  br i1 %110, label %178, label %111

111:                                              ; preds = %108
  %112 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %109, double noundef %107)
          to label %113 unwind label %218

113:                                              ; preds = %111
  %114 = load ptr, ptr %23, align 8, !tbaa !54
  %115 = icmp eq ptr %114, null
  br i1 %115, label %178, label %116

116:                                              ; preds = %113
  %117 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %114, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %118 unwind label %218

118:                                              ; preds = %116
  %119 = load ptr, ptr %23, align 8, !tbaa !54
  %120 = icmp eq ptr %119, null
  br i1 %120, label %178, label %121

121:                                              ; preds = %118
  %122 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %119, double noundef %8)
          to label %123 unwind label %220

123:                                              ; preds = %121
  %124 = load ptr, ptr %23, align 8, !tbaa !54
  %125 = icmp eq ptr %124, null
  br i1 %125, label %178, label %126

126:                                              ; preds = %123
  %127 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %124, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %128 unwind label %220

128:                                              ; preds = %126
  %129 = load ptr, ptr %23, align 8, !tbaa !54
  %130 = icmp eq ptr %129, null
  br i1 %130, label %178, label %131

131:                                              ; preds = %128
  %132 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %129, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %133 unwind label %220

133:                                              ; preds = %131
  %134 = load ptr, ptr %23, align 8, !tbaa !54
  %135 = icmp eq ptr %134, null
  br i1 %135, label %178, label %136

136:                                              ; preds = %133
  %137 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %134, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %138 unwind label %220

138:                                              ; preds = %136
  %139 = load ptr, ptr %23, align 8, !tbaa !54
  %140 = icmp eq ptr %139, null
  br i1 %140, label %178, label %141

141:                                              ; preds = %138
  %142 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %139, i32 noundef 152)
          to label %143 unwind label %222

143:                                              ; preds = %141
  %144 = load ptr, ptr %23, align 8, !tbaa !54
  %145 = icmp eq ptr %144, null
  br i1 %145, label %178, label %146

146:                                              ; preds = %143
  %147 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %144, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %148 unwind label %222

148:                                              ; preds = %146
  %149 = load ptr, ptr %23, align 8, !tbaa !54
  %150 = icmp eq ptr %149, null
  br i1 %150, label %178, label %151

151:                                              ; preds = %148
  %152 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %149, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %153 unwind label %222

153:                                              ; preds = %151
  %154 = load ptr, ptr %23, align 8, !tbaa !54
  %155 = icmp eq ptr %154, null
  br i1 %155, label %178, label %156

156:                                              ; preds = %153
  %157 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %154, double noundef %11)
          to label %158 unwind label %224

158:                                              ; preds = %156
  %159 = load ptr, ptr %23, align 8, !tbaa !54
  %160 = icmp eq ptr %159, null
  br i1 %160, label %178, label %161

161:                                              ; preds = %158
  %162 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %163 unwind label %224

163:                                              ; preds = %161
  %164 = load ptr, ptr %23, align 8, !tbaa !54
  %165 = icmp eq ptr %164, null
  br i1 %165, label %178, label %166

166:                                              ; preds = %163
  %167 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %164, double noundef 1.000000e-01)
          to label %168 unwind label %226

168:                                              ; preds = %166
  %169 = load ptr, ptr %23, align 8, !tbaa !54
  %170 = icmp eq ptr %169, null
  br i1 %170, label %178, label %171

171:                                              ; preds = %168
  %172 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %169, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %173 unwind label %226

173:                                              ; preds = %171
  %174 = load ptr, ptr %23, align 8, !tbaa !54
  %175 = icmp eq ptr %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %173
  %177 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %174, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %178 unwind label %226

178:                                              ; preds = %133, %128, %123, %118, %113, %108, %148, %153, %138, %143, %163, %158, %168, %173, %176
  %179 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %180 unwind label %228

180:                                              ; preds = %178
  %181 = load ptr, ptr %23, align 8, !tbaa !54
  %182 = icmp eq ptr %181, null
  br i1 %182, label %191, label %183

183:                                              ; preds = %180
  %184 = fsub double %179, %8
  %185 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %181, double noundef %184)
          to label %186 unwind label %228

186:                                              ; preds = %183
  %187 = load ptr, ptr %23, align 8, !tbaa !54
  %188 = icmp eq ptr %187, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %186
  %190 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %187, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %191 unwind label %228

191:                                              ; preds = %180, %186, %189
  %192 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %193 unwind label %230

193:                                              ; preds = %191
  %194 = load ptr, ptr %23, align 8, !tbaa !54
  %195 = icmp eq ptr %194, null
  br i1 %195, label %210, label %196

196:                                              ; preds = %193
  %197 = fcmp ogt double %8, 1.000000e-05
  %198 = fcmp olt double %8, -1.000000e-05
  %199 = or i1 %197, %198
  %200 = select i1 %199, double %8, double 1.000000e-05
  %201 = fsub double %192, %8
  %202 = fdiv double %201, %200
  %203 = fmul double %202, 1.000000e+02
  %204 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %194, double noundef %203)
          to label %205 unwind label %230

205:                                              ; preds = %196
  %206 = load ptr, ptr %23, align 8, !tbaa !54
  %207 = icmp eq ptr %206, null
  br i1 %207, label %210, label %208

208:                                              ; preds = %205
  %209 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %206, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %210 unwind label %230

210:                                              ; preds = %193, %205, %208
  br i1 %12, label %211, label %232

211:                                              ; preds = %210
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %2) #23
  unreachable

212:                                              ; preds = %36, %31, %26
  %213 = landingpad { ptr, i32 }
          cleanup
  br label %438

214:                                              ; preds = %69, %64, %59, %51, %46, %41
  %215 = landingpad { ptr, i32 }
          cleanup
  br label %438

216:                                              ; preds = %104, %99, %94, %89, %84, %79, %74
  %217 = landingpad { ptr, i32 }
          cleanup
  br label %438

218:                                              ; preds = %116, %111, %106
  %219 = landingpad { ptr, i32 }
          cleanup
  br label %438

220:                                              ; preds = %136, %131, %126, %121
  %221 = landingpad { ptr, i32 }
          cleanup
  br label %438

222:                                              ; preds = %151, %146, %141
  %223 = landingpad { ptr, i32 }
          cleanup
  br label %438

224:                                              ; preds = %161, %156
  %225 = landingpad { ptr, i32 }
          cleanup
  br label %438

226:                                              ; preds = %176, %171, %166
  %227 = landingpad { ptr, i32 }
          cleanup
  br label %438

228:                                              ; preds = %189, %183, %178
  %229 = landingpad { ptr, i32 }
          cleanup
  br label %438

230:                                              ; preds = %208, %196, %191
  %231 = landingpad { ptr, i32 }
          cleanup
  br label %438

232:                                              ; preds = %210
  %233 = call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
  %234 = fdiv double 2.000000e+00, %6
  %235 = fsub double %233, %234
  %236 = call double @llvm.fabs.f64(double %235)
  %237 = fmul double %234, 1.000000e-03
  %238 = fcmp uge double %236, %237
  br i1 %238, label %246, label %239

239:                                              ; preds = %232
  %240 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %242, label %248, !prof !53

242:                                              ; preds = %239
  %243 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %248, label %245

245:                                              ; preds = %242
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %248

246:                                              ; preds = %232
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull @.str.79, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z9CheckRateRK7Results, i32 noundef 153)
  %247 = load ptr, ptr %3, align 8, !tbaa !56
  br label %248

248:                                              ; preds = %245, %242, %239, %246
  %249 = phi ptr [ %247, %246 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %239 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %242 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %245 ]
  %250 = load ptr, ptr %249, align 8, !tbaa !54
  %251 = icmp eq ptr %250, null
  br i1 %251, label %332, label %252

252:                                              ; preds = %248
  %253 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %250, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %254 unwind label %440

254:                                              ; preds = %252
  %255 = load ptr, ptr %249, align 8, !tbaa !54
  %256 = icmp eq ptr %255, null
  br i1 %256, label %332, label %257

257:                                              ; preds = %254
  %258 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %255, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %259 unwind label %440

259:                                              ; preds = %257
  %260 = load ptr, ptr %249, align 8, !tbaa !54
  %261 = icmp eq ptr %260, null
  br i1 %261, label %332, label %262

262:                                              ; preds = %259
  %263 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %260, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %264 unwind label %440

264:                                              ; preds = %262
  %265 = load ptr, ptr %249, align 8, !tbaa !54
  %266 = icmp eq ptr %265, null
  br i1 %266, label %332, label %267

267:                                              ; preds = %264
  %268 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %265, i32 noundef 153)
          to label %269 unwind label %442

269:                                              ; preds = %267
  %270 = load ptr, ptr %249, align 8, !tbaa !54
  %271 = icmp eq ptr %270, null
  br i1 %271, label %332, label %272

272:                                              ; preds = %269
  %273 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %270, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %274 unwind label %442

274:                                              ; preds = %272
  %275 = load ptr, ptr %249, align 8, !tbaa !54
  %276 = icmp eq ptr %275, null
  br i1 %276, label %332, label %277

277:                                              ; preds = %274
  %278 = load ptr, ptr %0, align 8, !tbaa !23
  %279 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %280 = load i64, ptr %279, align 8, !tbaa !10
  %281 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %275, ptr noundef %278, i64 noundef %280)
          to label %282 unwind label %442

282:                                              ; preds = %277
  %283 = load ptr, ptr %249, align 8, !tbaa !54
  %284 = icmp eq ptr %283, null
  br i1 %284, label %332, label %285

285:                                              ; preds = %282
  %286 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %283, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %287 unwind label %442

287:                                              ; preds = %285
  %288 = load ptr, ptr %249, align 8, !tbaa !54
  %289 = icmp eq ptr %288, null
  br i1 %289, label %332, label %290

290:                                              ; preds = %287
  %291 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %288, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %292 unwind label %442

292:                                              ; preds = %290
  %293 = load ptr, ptr %249, align 8, !tbaa !54
  %294 = icmp eq ptr %293, null
  br i1 %294, label %332, label %295

295:                                              ; preds = %292
  %296 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %293, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %297 unwind label %442

297:                                              ; preds = %295
  %298 = load ptr, ptr %249, align 8, !tbaa !54
  %299 = icmp eq ptr %298, null
  br i1 %299, label %332, label %300

300:                                              ; preds = %297
  %301 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %298, i32 noundef 153)
          to label %302 unwind label %444

302:                                              ; preds = %300
  %303 = load ptr, ptr %249, align 8, !tbaa !54
  %304 = icmp eq ptr %303, null
  br i1 %304, label %332, label %305

305:                                              ; preds = %302
  %306 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %303, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %307 unwind label %444

307:                                              ; preds = %305
  %308 = load ptr, ptr %249, align 8, !tbaa !54
  %309 = icmp eq ptr %308, null
  br i1 %309, label %332, label %310

310:                                              ; preds = %307
  %311 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %308, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %312 unwind label %444

312:                                              ; preds = %310
  %313 = load ptr, ptr %249, align 8, !tbaa !54
  %314 = icmp eq ptr %313, null
  br i1 %314, label %332, label %315

315:                                              ; preds = %312
  %316 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %313, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %317 unwind label %444

317:                                              ; preds = %315
  %318 = load ptr, ptr %249, align 8, !tbaa !54
  %319 = icmp eq ptr %318, null
  br i1 %319, label %332, label %320

320:                                              ; preds = %317
  %321 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %318, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %322 unwind label %444

322:                                              ; preds = %320
  %323 = load ptr, ptr %249, align 8, !tbaa !54
  %324 = icmp eq ptr %323, null
  br i1 %324, label %332, label %325

325:                                              ; preds = %322
  %326 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %323, ptr noundef nonnull @.str.7, i64 noundef 3)
          to label %327 unwind label %444

327:                                              ; preds = %325
  %328 = load ptr, ptr %249, align 8, !tbaa !54
  %329 = icmp eq ptr %328, null
  br i1 %329, label %332, label %330

330:                                              ; preds = %327
  %331 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %328, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %332 unwind label %444

332:                                              ; preds = %287, %282, %274, %269, %264, %259, %254, %248, %302, %307, %292, %297, %317, %312, %322, %327, %330
  %333 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %334 unwind label %446

334:                                              ; preds = %332
  %335 = load ptr, ptr %249, align 8, !tbaa !54
  %336 = icmp eq ptr %335, null
  br i1 %336, label %404, label %337

337:                                              ; preds = %334
  %338 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %335, double noundef %333)
          to label %339 unwind label %446

339:                                              ; preds = %337
  %340 = load ptr, ptr %249, align 8, !tbaa !54
  %341 = icmp eq ptr %340, null
  br i1 %341, label %404, label %342

342:                                              ; preds = %339
  %343 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %340, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %344 unwind label %446

344:                                              ; preds = %342
  %345 = load ptr, ptr %249, align 8, !tbaa !54
  %346 = icmp eq ptr %345, null
  br i1 %346, label %404, label %347

347:                                              ; preds = %344
  %348 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %345, double noundef %234)
          to label %349 unwind label %448

349:                                              ; preds = %347
  %350 = load ptr, ptr %249, align 8, !tbaa !54
  %351 = icmp eq ptr %350, null
  br i1 %351, label %404, label %352

352:                                              ; preds = %349
  %353 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %350, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %354 unwind label %448

354:                                              ; preds = %352
  %355 = load ptr, ptr %249, align 8, !tbaa !54
  %356 = icmp eq ptr %355, null
  br i1 %356, label %404, label %357

357:                                              ; preds = %354
  %358 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %355, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %359 unwind label %448

359:                                              ; preds = %357
  %360 = load ptr, ptr %249, align 8, !tbaa !54
  %361 = icmp eq ptr %360, null
  br i1 %361, label %404, label %362

362:                                              ; preds = %359
  %363 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %360, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %364 unwind label %448

364:                                              ; preds = %362
  %365 = load ptr, ptr %249, align 8, !tbaa !54
  %366 = icmp eq ptr %365, null
  br i1 %366, label %404, label %367

367:                                              ; preds = %364
  %368 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %365, i32 noundef 153)
          to label %369 unwind label %450

369:                                              ; preds = %367
  %370 = load ptr, ptr %249, align 8, !tbaa !54
  %371 = icmp eq ptr %370, null
  br i1 %371, label %404, label %372

372:                                              ; preds = %369
  %373 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %370, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %374 unwind label %450

374:                                              ; preds = %372
  %375 = load ptr, ptr %249, align 8, !tbaa !54
  %376 = icmp eq ptr %375, null
  br i1 %376, label %404, label %377

377:                                              ; preds = %374
  %378 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %375, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %379 unwind label %450

379:                                              ; preds = %377
  %380 = load ptr, ptr %249, align 8, !tbaa !54
  %381 = icmp eq ptr %380, null
  br i1 %381, label %404, label %382

382:                                              ; preds = %379
  %383 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %380, double noundef %237)
          to label %384 unwind label %452

384:                                              ; preds = %382
  %385 = load ptr, ptr %249, align 8, !tbaa !54
  %386 = icmp eq ptr %385, null
  br i1 %386, label %404, label %387

387:                                              ; preds = %384
  %388 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %385, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %389 unwind label %452

389:                                              ; preds = %387
  %390 = load ptr, ptr %249, align 8, !tbaa !54
  %391 = icmp eq ptr %390, null
  br i1 %391, label %404, label %392

392:                                              ; preds = %389
  %393 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %390, double noundef 1.000000e-01)
          to label %394 unwind label %454

394:                                              ; preds = %392
  %395 = load ptr, ptr %249, align 8, !tbaa !54
  %396 = icmp eq ptr %395, null
  br i1 %396, label %404, label %397

397:                                              ; preds = %394
  %398 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %395, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %399 unwind label %454

399:                                              ; preds = %397
  %400 = load ptr, ptr %249, align 8, !tbaa !54
  %401 = icmp eq ptr %400, null
  br i1 %401, label %404, label %402

402:                                              ; preds = %399
  %403 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %400, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %404 unwind label %454

404:                                              ; preds = %359, %354, %349, %344, %339, %334, %374, %379, %364, %369, %389, %384, %394, %399, %402
  %405 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %406 unwind label %456

406:                                              ; preds = %404
  %407 = load ptr, ptr %249, align 8, !tbaa !54
  %408 = icmp eq ptr %407, null
  br i1 %408, label %417, label %409

409:                                              ; preds = %406
  %410 = fsub double %405, %234
  %411 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %407, double noundef %410)
          to label %412 unwind label %456

412:                                              ; preds = %409
  %413 = load ptr, ptr %249, align 8, !tbaa !54
  %414 = icmp eq ptr %413, null
  br i1 %414, label %417, label %415

415:                                              ; preds = %412
  %416 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %413, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %417 unwind label %456

417:                                              ; preds = %406, %412, %415
  %418 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %419 unwind label %458

419:                                              ; preds = %417
  %420 = load ptr, ptr %249, align 8, !tbaa !54
  %421 = icmp eq ptr %420, null
  br i1 %421, label %436, label %422

422:                                              ; preds = %419
  %423 = fcmp ogt double %234, 1.000000e-05
  %424 = fcmp olt double %234, -1.000000e-05
  %425 = or i1 %423, %424
  %426 = select i1 %425, double %234, double 1.000000e-05
  %427 = fsub double %418, %234
  %428 = fdiv double %427, %426
  %429 = fmul double %428, 1.000000e+02
  %430 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %420, double noundef %429)
          to label %431 unwind label %458

431:                                              ; preds = %422
  %432 = load ptr, ptr %249, align 8, !tbaa !54
  %433 = icmp eq ptr %432, null
  br i1 %433, label %436, label %434

434:                                              ; preds = %431
  %435 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %432, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %436 unwind label %458

436:                                              ; preds = %419, %431, %434
  br i1 %238, label %437, label %460

437:                                              ; preds = %436
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #23
  unreachable

438:                                              ; preds = %214, %218, %222, %226, %230, %228, %224, %220, %216, %212
  %439 = phi { ptr, i32 } [ %213, %212 ], [ %215, %214 ], [ %217, %216 ], [ %219, %218 ], [ %221, %220 ], [ %223, %222 ], [ %225, %224 ], [ %227, %226 ], [ %231, %230 ], [ %229, %228 ]
  br i1 %12, label %463, label %466

440:                                              ; preds = %262, %257, %252
  %441 = landingpad { ptr, i32 }
          cleanup
  br label %461

442:                                              ; preds = %295, %290, %285, %277, %272, %267
  %443 = landingpad { ptr, i32 }
          cleanup
  br label %461

444:                                              ; preds = %330, %325, %320, %315, %310, %305, %300
  %445 = landingpad { ptr, i32 }
          cleanup
  br label %461

446:                                              ; preds = %342, %337, %332
  %447 = landingpad { ptr, i32 }
          cleanup
  br label %461

448:                                              ; preds = %362, %357, %352, %347
  %449 = landingpad { ptr, i32 }
          cleanup
  br label %461

450:                                              ; preds = %377, %372, %367
  %451 = landingpad { ptr, i32 }
          cleanup
  br label %461

452:                                              ; preds = %387, %382
  %453 = landingpad { ptr, i32 }
          cleanup
  br label %461

454:                                              ; preds = %402, %397, %392
  %455 = landingpad { ptr, i32 }
          cleanup
  br label %461

456:                                              ; preds = %415, %409, %404
  %457 = landingpad { ptr, i32 }
          cleanup
  br label %461

458:                                              ; preds = %434, %422, %417
  %459 = landingpad { ptr, i32 }
          cleanup
  br label %461

460:                                              ; preds = %436
  ret void

461:                                              ; preds = %442, %446, %450, %454, %458, %456, %452, %448, %444, %440
  %462 = phi { ptr, i32 } [ %441, %440 ], [ %443, %442 ], [ %445, %444 ], [ %447, %446 ], [ %449, %448 ], [ %451, %450 ], [ %453, %452 ], [ %455, %454 ], [ %459, %458 ], [ %457, %456 ]
  br i1 %238, label %463, label %466

463:                                              ; preds = %461, %438
  %464 = phi ptr [ %2, %438 ], [ %3, %461 ]
  invoke void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %464) #23
          to label %465 unwind label %468

465:                                              ; preds = %463
  unreachable

466:                                              ; preds = %461, %438
  %467 = phi { ptr, i32 } [ %439, %438 ], [ %462, %461 ]
  resume { ptr, i32 } %467

468:                                              ; preds = %463
  %469 = landingpad { ptr, i32 }
          catch ptr null
  %470 = extractvalue { ptr, i32 } %469, 0
  call void @__clang_call_terminate(ptr %470) #24
  unreachable
}

; Function Attrs: uwtable
define hidden void @_Z9BM_InvertRN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !71, !range !40, !noundef !41
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %8 = load i64, ptr %7, align 8
  tail call void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %9 = icmp eq i64 %8, 0
  %10 = select i1 %6, i1 true, i1 %9
  br i1 %10, label %14, label %11, !prof !42

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 1
  br label %20

14:                                               ; preds = %30, %1
  tail call void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %15 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #21
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 2
  store ptr %16, ptr %2, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %16, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  store i64 3, ptr %17, align 8, !tbaa !10
  %18 = getelementptr inbounds i8, ptr %2, i64 19
  store i8 0, ptr %18, align 1, !tbaa !13
  %19 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %15, ptr noundef nonnull align 8 dereferenceable(32) %2)
          to label %34 unwind label %52

20:                                               ; preds = %11, %30
  %21 = phi i64 [ %8, %11 ], [ %32, %30 ]
  %22 = load i8, ptr %12, align 8, !tbaa !24, !range !40, !noundef !41
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %24, !prof !42

24:                                               ; preds = %20
  %25 = load i64, ptr %7, align 8, !tbaa !43
  %26 = load i64, ptr %0, align 8, !tbaa !44
  %27 = sub i64 %25, %26
  %28 = load i64, ptr %13, align 8, !tbaa !45
  %29 = add i64 %27, %28
  br label %30

30:                                               ; preds = %20, %24
  %31 = phi i64 [ %29, %24 ], [ 0, %20 ]
  tail call void asm sideeffect "", "r|m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64 %31) #21, !srcloc !72
  %32 = add i64 %21, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %14, label %20, !prof !42

34:                                               ; preds = %14
  store double 1.000000e-04, ptr %19, align 8, !tbaa.struct !14
  %35 = getelementptr inbounds i8, ptr %19, i64 8
  store i32 -2147483648, ptr %35, align 8, !tbaa.struct !21
  %36 = getelementptr inbounds i8, ptr %19, i64 12
  store i32 1000, ptr %36, align 4, !tbaa.struct !22
  %37 = load ptr, ptr %2, align 8, !tbaa !23
  %38 = icmp eq ptr %37, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @_ZdlPv(ptr noundef %37) #22
  br label %40

40:                                               ; preds = %34, %39
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #21
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  store ptr %41, ptr %3, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %41, ptr noundef nonnull align 1 dereferenceable(3) @.str.7, i64 3, i1 false)
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  store i64 3, ptr %42, align 8, !tbaa !10
  %43 = getelementptr inbounds i8, ptr %3, i64 19
  store i8 0, ptr %43, align 1, !tbaa !13
  %44 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %15, ptr noundef nonnull align 8 dereferenceable(32) %3)
          to label %45 unwind label %58

45:                                               ; preds = %40
  store double 1.000000e+04, ptr %44, align 8, !tbaa.struct !14
  %46 = getelementptr inbounds i8, ptr %44, i64 8
  store i32 -2147483648, ptr %46, align 8, !tbaa.struct !21
  %47 = getelementptr inbounds i8, ptr %44, i64 12
  store i32 1000, ptr %47, align 4, !tbaa.struct !22
  %48 = load ptr, ptr %3, align 8, !tbaa !23
  %49 = icmp eq ptr %48, %41
  br i1 %49, label %51, label %50

50:                                               ; preds = %45
  call void @_ZdlPv(ptr noundef %48) #22
  br label %51

51:                                               ; preds = %45, %50
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  ret void

52:                                               ; preds = %14
  %53 = landingpad { ptr, i32 }
          cleanup
  %54 = load ptr, ptr %2, align 8, !tbaa !23
  %55 = icmp eq ptr %54, %16
  br i1 %55, label %57, label %56

56:                                               ; preds = %52
  call void @_ZdlPv(ptr noundef %54) #22
  br label %57

57:                                               ; preds = %56, %52
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  br label %64

58:                                               ; preds = %40
  %59 = landingpad { ptr, i32 }
          cleanup
  %60 = load ptr, ptr %3, align 8, !tbaa !23
  %61 = icmp eq ptr %60, %41
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  call void @_ZdlPv(ptr noundef %60) #22
  br label %63

63:                                               ; preds = %62, %58
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  br label %64

64:                                               ; preds = %63, %57
  %65 = phi { ptr, i32 } [ %59, %63 ], [ %53, %57 ]
  resume { ptr, i32 } %65
}

; Function Attrs: uwtable
define hidden void @_Z11CheckInvertRK7Results(ptr noundef nonnull align 8 dereferenceable(80) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %3 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %4 = tail call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
  %5 = fadd double %4, -1.000000e+04
  %6 = tail call double @llvm.fabs.f64(double %5)
  %7 = fcmp uge double %6, 1.000000e+00
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  %9 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %17, !prof !53

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %17

15:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %2, ptr noundef nonnull @.str.91, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z11CheckInvertRK7Results, i32 noundef 192)
  %16 = load ptr, ptr %2, align 8, !tbaa !56
  br label %17

17:                                               ; preds = %14, %11, %8, %15
  %18 = phi ptr [ %16, %15 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %8 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %11 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %14 ]
  %19 = load ptr, ptr %18, align 8, !tbaa !54
  %20 = icmp eq ptr %19, null
  br i1 %20, label %101, label %21

21:                                               ; preds = %17
  %22 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %19, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %23 unwind label %203

23:                                               ; preds = %21
  %24 = load ptr, ptr %18, align 8, !tbaa !54
  %25 = icmp eq ptr %24, null
  br i1 %25, label %101, label %26

26:                                               ; preds = %23
  %27 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %24, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %28 unwind label %203

28:                                               ; preds = %26
  %29 = load ptr, ptr %18, align 8, !tbaa !54
  %30 = icmp eq ptr %29, null
  br i1 %30, label %101, label %31

31:                                               ; preds = %28
  %32 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %29, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %33 unwind label %203

33:                                               ; preds = %31
  %34 = load ptr, ptr %18, align 8, !tbaa !54
  %35 = icmp eq ptr %34, null
  br i1 %35, label %101, label %36

36:                                               ; preds = %33
  %37 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %34, i32 noundef 192)
          to label %38 unwind label %205

38:                                               ; preds = %36
  %39 = load ptr, ptr %18, align 8, !tbaa !54
  %40 = icmp eq ptr %39, null
  br i1 %40, label %101, label %41

41:                                               ; preds = %38
  %42 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %39, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %43 unwind label %205

43:                                               ; preds = %41
  %44 = load ptr, ptr %18, align 8, !tbaa !54
  %45 = icmp eq ptr %44, null
  br i1 %45, label %101, label %46

46:                                               ; preds = %43
  %47 = load ptr, ptr %0, align 8, !tbaa !23
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %49 = load i64, ptr %48, align 8, !tbaa !10
  %50 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %44, ptr noundef %47, i64 noundef %49)
          to label %51 unwind label %205

51:                                               ; preds = %46
  %52 = load ptr, ptr %18, align 8, !tbaa !54
  %53 = icmp eq ptr %52, null
  br i1 %53, label %101, label %54

54:                                               ; preds = %51
  %55 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %52, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %56 unwind label %205

56:                                               ; preds = %54
  %57 = load ptr, ptr %18, align 8, !tbaa !54
  %58 = icmp eq ptr %57, null
  br i1 %58, label %101, label %59

59:                                               ; preds = %56
  %60 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %57, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %61 unwind label %205

61:                                               ; preds = %59
  %62 = load ptr, ptr %18, align 8, !tbaa !54
  %63 = icmp eq ptr %62, null
  br i1 %63, label %101, label %64

64:                                               ; preds = %61
  %65 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %62, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %66 unwind label %205

66:                                               ; preds = %64
  %67 = load ptr, ptr %18, align 8, !tbaa !54
  %68 = icmp eq ptr %67, null
  br i1 %68, label %101, label %69

69:                                               ; preds = %66
  %70 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %67, i32 noundef 192)
          to label %71 unwind label %207

71:                                               ; preds = %69
  %72 = load ptr, ptr %18, align 8, !tbaa !54
  %73 = icmp eq ptr %72, null
  br i1 %73, label %101, label %74

74:                                               ; preds = %71
  %75 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %72, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %76 unwind label %207

76:                                               ; preds = %74
  %77 = load ptr, ptr %18, align 8, !tbaa !54
  %78 = icmp eq ptr %77, null
  br i1 %78, label %101, label %79

79:                                               ; preds = %76
  %80 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %77, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %81 unwind label %207

81:                                               ; preds = %79
  %82 = load ptr, ptr %18, align 8, !tbaa !54
  %83 = icmp eq ptr %82, null
  br i1 %83, label %101, label %84

84:                                               ; preds = %81
  %85 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %82, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %86 unwind label %207

86:                                               ; preds = %84
  %87 = load ptr, ptr %18, align 8, !tbaa !54
  %88 = icmp eq ptr %87, null
  br i1 %88, label %101, label %89

89:                                               ; preds = %86
  %90 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %87, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %91 unwind label %207

91:                                               ; preds = %89
  %92 = load ptr, ptr %18, align 8, !tbaa !54
  %93 = icmp eq ptr %92, null
  br i1 %93, label %101, label %94

94:                                               ; preds = %91
  %95 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %92, ptr noundef nonnull @.str.6, i64 noundef 3)
          to label %96 unwind label %207

96:                                               ; preds = %94
  %97 = load ptr, ptr %18, align 8, !tbaa !54
  %98 = icmp eq ptr %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %96
  %100 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %97, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %101 unwind label %207

101:                                              ; preds = %56, %51, %43, %38, %33, %28, %23, %17, %71, %76, %61, %66, %86, %81, %91, %96, %99
  %102 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %103 unwind label %209

103:                                              ; preds = %101
  %104 = load ptr, ptr %18, align 8, !tbaa !54
  %105 = icmp eq ptr %104, null
  br i1 %105, label %173, label %106

106:                                              ; preds = %103
  %107 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %104, double noundef %102)
          to label %108 unwind label %209

108:                                              ; preds = %106
  %109 = load ptr, ptr %18, align 8, !tbaa !54
  %110 = icmp eq ptr %109, null
  br i1 %110, label %173, label %111

111:                                              ; preds = %108
  %112 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %109, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %113 unwind label %209

113:                                              ; preds = %111
  %114 = load ptr, ptr %18, align 8, !tbaa !54
  %115 = icmp eq ptr %114, null
  br i1 %115, label %173, label %116

116:                                              ; preds = %113
  %117 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %114, i32 noundef 10000)
          to label %118 unwind label %211

118:                                              ; preds = %116
  %119 = load ptr, ptr %18, align 8, !tbaa !54
  %120 = icmp eq ptr %119, null
  br i1 %120, label %173, label %121

121:                                              ; preds = %118
  %122 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %119, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %123 unwind label %211

123:                                              ; preds = %121
  %124 = load ptr, ptr %18, align 8, !tbaa !54
  %125 = icmp eq ptr %124, null
  br i1 %125, label %173, label %126

126:                                              ; preds = %123
  %127 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %124, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %128 unwind label %211

128:                                              ; preds = %126
  %129 = load ptr, ptr %18, align 8, !tbaa !54
  %130 = icmp eq ptr %129, null
  br i1 %130, label %173, label %131

131:                                              ; preds = %128
  %132 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %129, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %133 unwind label %211

133:                                              ; preds = %131
  %134 = load ptr, ptr %18, align 8, !tbaa !54
  %135 = icmp eq ptr %134, null
  br i1 %135, label %173, label %136

136:                                              ; preds = %133
  %137 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %134, i32 noundef 192)
          to label %138 unwind label %213

138:                                              ; preds = %136
  %139 = load ptr, ptr %18, align 8, !tbaa !54
  %140 = icmp eq ptr %139, null
  br i1 %140, label %173, label %141

141:                                              ; preds = %138
  %142 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %139, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %143 unwind label %213

143:                                              ; preds = %141
  %144 = load ptr, ptr %18, align 8, !tbaa !54
  %145 = icmp eq ptr %144, null
  br i1 %145, label %173, label %146

146:                                              ; preds = %143
  %147 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %144, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %148 unwind label %213

148:                                              ; preds = %146
  %149 = load ptr, ptr %18, align 8, !tbaa !54
  %150 = icmp eq ptr %149, null
  br i1 %150, label %173, label %151

151:                                              ; preds = %148
  %152 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %149, double noundef 1.000000e+00)
          to label %153 unwind label %215

153:                                              ; preds = %151
  %154 = load ptr, ptr %18, align 8, !tbaa !54
  %155 = icmp eq ptr %154, null
  br i1 %155, label %173, label %156

156:                                              ; preds = %153
  %157 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %154, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %158 unwind label %215

158:                                              ; preds = %156
  %159 = load ptr, ptr %18, align 8, !tbaa !54
  %160 = icmp eq ptr %159, null
  br i1 %160, label %173, label %161

161:                                              ; preds = %158
  %162 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %159, double noundef 1.000000e-02)
          to label %163 unwind label %217

163:                                              ; preds = %161
  %164 = load ptr, ptr %18, align 8, !tbaa !54
  %165 = icmp eq ptr %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %163
  %167 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %164, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %168 unwind label %217

168:                                              ; preds = %166
  %169 = load ptr, ptr %18, align 8, !tbaa !54
  %170 = icmp eq ptr %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %168
  %172 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %169, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %173 unwind label %217

173:                                              ; preds = %128, %123, %118, %113, %108, %103, %143, %148, %133, %138, %158, %153, %163, %168, %171
  %174 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %175 unwind label %219

175:                                              ; preds = %173
  %176 = load ptr, ptr %18, align 8, !tbaa !54
  %177 = icmp eq ptr %176, null
  br i1 %177, label %186, label %178

178:                                              ; preds = %175
  %179 = fadd double %174, -1.000000e+04
  %180 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %176, double noundef %179)
          to label %181 unwind label %219

181:                                              ; preds = %178
  %182 = load ptr, ptr %18, align 8, !tbaa !54
  %183 = icmp eq ptr %182, null
  br i1 %183, label %186, label %184

184:                                              ; preds = %181
  %185 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %182, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %186 unwind label %219

186:                                              ; preds = %175, %181, %184
  %187 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %188 unwind label %221

188:                                              ; preds = %186
  %189 = load ptr, ptr %18, align 8, !tbaa !54
  %190 = icmp eq ptr %189, null
  br i1 %190, label %201, label %191

191:                                              ; preds = %188
  %192 = fadd double %187, -1.000000e+04
  %193 = fdiv double %192, 1.000000e+04
  %194 = fmul double %193, 1.000000e+02
  %195 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %189, double noundef %194)
          to label %196 unwind label %221

196:                                              ; preds = %191
  %197 = load ptr, ptr %18, align 8, !tbaa !54
  %198 = icmp eq ptr %197, null
  br i1 %198, label %201, label %199

199:                                              ; preds = %196
  %200 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %197, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %201 unwind label %221

201:                                              ; preds = %188, %196, %199
  br i1 %7, label %202, label %223

202:                                              ; preds = %201
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %2) #23
  unreachable

203:                                              ; preds = %31, %26, %21
  %204 = landingpad { ptr, i32 }
          cleanup
  br label %423

205:                                              ; preds = %64, %59, %54, %46, %41, %36
  %206 = landingpad { ptr, i32 }
          cleanup
  br label %423

207:                                              ; preds = %99, %94, %89, %84, %79, %74, %69
  %208 = landingpad { ptr, i32 }
          cleanup
  br label %423

209:                                              ; preds = %111, %106, %101
  %210 = landingpad { ptr, i32 }
          cleanup
  br label %423

211:                                              ; preds = %131, %126, %121, %116
  %212 = landingpad { ptr, i32 }
          cleanup
  br label %423

213:                                              ; preds = %146, %141, %136
  %214 = landingpad { ptr, i32 }
          cleanup
  br label %423

215:                                              ; preds = %156, %151
  %216 = landingpad { ptr, i32 }
          cleanup
  br label %423

217:                                              ; preds = %171, %166, %161
  %218 = landingpad { ptr, i32 }
          cleanup
  br label %423

219:                                              ; preds = %184, %178, %173
  %220 = landingpad { ptr, i32 }
          cleanup
  br label %423

221:                                              ; preds = %199, %191, %186
  %222 = landingpad { ptr, i32 }
          cleanup
  br label %423

223:                                              ; preds = %201
  %224 = call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
  %225 = fadd double %224, -1.000000e-04
  %226 = call double @llvm.fabs.f64(double %225)
  %227 = fcmp uge double %226, 1.000000e-08
  br i1 %227, label %235, label %228

228:                                              ; preds = %223
  %229 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %231, label %237, !prof !53

231:                                              ; preds = %228
  %232 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %237, label %234

234:                                              ; preds = %231
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %237

235:                                              ; preds = %223
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull @.str.92, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z11CheckInvertRK7Results, i32 noundef 193)
  %236 = load ptr, ptr %3, align 8, !tbaa !56
  br label %237

237:                                              ; preds = %234, %231, %228, %235
  %238 = phi ptr [ %236, %235 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %228 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %231 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %234 ]
  %239 = load ptr, ptr %238, align 8, !tbaa !54
  %240 = icmp eq ptr %239, null
  br i1 %240, label %321, label %241

241:                                              ; preds = %237
  %242 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %239, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %243 unwind label %425

243:                                              ; preds = %241
  %244 = load ptr, ptr %238, align 8, !tbaa !54
  %245 = icmp eq ptr %244, null
  br i1 %245, label %321, label %246

246:                                              ; preds = %243
  %247 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %244, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %248 unwind label %425

248:                                              ; preds = %246
  %249 = load ptr, ptr %238, align 8, !tbaa !54
  %250 = icmp eq ptr %249, null
  br i1 %250, label %321, label %251

251:                                              ; preds = %248
  %252 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %249, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %253 unwind label %425

253:                                              ; preds = %251
  %254 = load ptr, ptr %238, align 8, !tbaa !54
  %255 = icmp eq ptr %254, null
  br i1 %255, label %321, label %256

256:                                              ; preds = %253
  %257 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %254, i32 noundef 193)
          to label %258 unwind label %427

258:                                              ; preds = %256
  %259 = load ptr, ptr %238, align 8, !tbaa !54
  %260 = icmp eq ptr %259, null
  br i1 %260, label %321, label %261

261:                                              ; preds = %258
  %262 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %259, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %263 unwind label %427

263:                                              ; preds = %261
  %264 = load ptr, ptr %238, align 8, !tbaa !54
  %265 = icmp eq ptr %264, null
  br i1 %265, label %321, label %266

266:                                              ; preds = %263
  %267 = load ptr, ptr %0, align 8, !tbaa !23
  %268 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %269 = load i64, ptr %268, align 8, !tbaa !10
  %270 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %264, ptr noundef %267, i64 noundef %269)
          to label %271 unwind label %427

271:                                              ; preds = %266
  %272 = load ptr, ptr %238, align 8, !tbaa !54
  %273 = icmp eq ptr %272, null
  br i1 %273, label %321, label %274

274:                                              ; preds = %271
  %275 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %272, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %276 unwind label %427

276:                                              ; preds = %274
  %277 = load ptr, ptr %238, align 8, !tbaa !54
  %278 = icmp eq ptr %277, null
  br i1 %278, label %321, label %279

279:                                              ; preds = %276
  %280 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %277, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %281 unwind label %427

281:                                              ; preds = %279
  %282 = load ptr, ptr %238, align 8, !tbaa !54
  %283 = icmp eq ptr %282, null
  br i1 %283, label %321, label %284

284:                                              ; preds = %281
  %285 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %282, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %286 unwind label %427

286:                                              ; preds = %284
  %287 = load ptr, ptr %238, align 8, !tbaa !54
  %288 = icmp eq ptr %287, null
  br i1 %288, label %321, label %289

289:                                              ; preds = %286
  %290 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %287, i32 noundef 193)
          to label %291 unwind label %429

291:                                              ; preds = %289
  %292 = load ptr, ptr %238, align 8, !tbaa !54
  %293 = icmp eq ptr %292, null
  br i1 %293, label %321, label %294

294:                                              ; preds = %291
  %295 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %292, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %296 unwind label %429

296:                                              ; preds = %294
  %297 = load ptr, ptr %238, align 8, !tbaa !54
  %298 = icmp eq ptr %297, null
  br i1 %298, label %321, label %299

299:                                              ; preds = %296
  %300 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %297, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %301 unwind label %429

301:                                              ; preds = %299
  %302 = load ptr, ptr %238, align 8, !tbaa !54
  %303 = icmp eq ptr %302, null
  br i1 %303, label %321, label %304

304:                                              ; preds = %301
  %305 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %302, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %306 unwind label %429

306:                                              ; preds = %304
  %307 = load ptr, ptr %238, align 8, !tbaa !54
  %308 = icmp eq ptr %307, null
  br i1 %308, label %321, label %309

309:                                              ; preds = %306
  %310 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %307, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %311 unwind label %429

311:                                              ; preds = %309
  %312 = load ptr, ptr %238, align 8, !tbaa !54
  %313 = icmp eq ptr %312, null
  br i1 %313, label %321, label %314

314:                                              ; preds = %311
  %315 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %312, ptr noundef nonnull @.str.7, i64 noundef 3)
          to label %316 unwind label %429

316:                                              ; preds = %314
  %317 = load ptr, ptr %238, align 8, !tbaa !54
  %318 = icmp eq ptr %317, null
  br i1 %318, label %321, label %319

319:                                              ; preds = %316
  %320 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %317, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %321 unwind label %429

321:                                              ; preds = %276, %271, %263, %258, %253, %248, %243, %237, %291, %296, %281, %286, %306, %301, %311, %316, %319
  %322 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %323 unwind label %431

323:                                              ; preds = %321
  %324 = load ptr, ptr %238, align 8, !tbaa !54
  %325 = icmp eq ptr %324, null
  br i1 %325, label %393, label %326

326:                                              ; preds = %323
  %327 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %324, double noundef %322)
          to label %328 unwind label %431

328:                                              ; preds = %326
  %329 = load ptr, ptr %238, align 8, !tbaa !54
  %330 = icmp eq ptr %329, null
  br i1 %330, label %393, label %331

331:                                              ; preds = %328
  %332 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %329, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %333 unwind label %431

333:                                              ; preds = %331
  %334 = load ptr, ptr %238, align 8, !tbaa !54
  %335 = icmp eq ptr %334, null
  br i1 %335, label %393, label %336

336:                                              ; preds = %333
  %337 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %334, double noundef 1.000000e-04)
          to label %338 unwind label %433

338:                                              ; preds = %336
  %339 = load ptr, ptr %238, align 8, !tbaa !54
  %340 = icmp eq ptr %339, null
  br i1 %340, label %393, label %341

341:                                              ; preds = %338
  %342 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %339, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %343 unwind label %433

343:                                              ; preds = %341
  %344 = load ptr, ptr %238, align 8, !tbaa !54
  %345 = icmp eq ptr %344, null
  br i1 %345, label %393, label %346

346:                                              ; preds = %343
  %347 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %344, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %348 unwind label %433

348:                                              ; preds = %346
  %349 = load ptr, ptr %238, align 8, !tbaa !54
  %350 = icmp eq ptr %349, null
  br i1 %350, label %393, label %351

351:                                              ; preds = %348
  %352 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %349, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %353 unwind label %433

353:                                              ; preds = %351
  %354 = load ptr, ptr %238, align 8, !tbaa !54
  %355 = icmp eq ptr %354, null
  br i1 %355, label %393, label %356

356:                                              ; preds = %353
  %357 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %354, i32 noundef 193)
          to label %358 unwind label %435

358:                                              ; preds = %356
  %359 = load ptr, ptr %238, align 8, !tbaa !54
  %360 = icmp eq ptr %359, null
  br i1 %360, label %393, label %361

361:                                              ; preds = %358
  %362 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %359, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %363 unwind label %435

363:                                              ; preds = %361
  %364 = load ptr, ptr %238, align 8, !tbaa !54
  %365 = icmp eq ptr %364, null
  br i1 %365, label %393, label %366

366:                                              ; preds = %363
  %367 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %364, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %368 unwind label %435

368:                                              ; preds = %366
  %369 = load ptr, ptr %238, align 8, !tbaa !54
  %370 = icmp eq ptr %369, null
  br i1 %370, label %393, label %371

371:                                              ; preds = %368
  %372 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %369, double noundef 1.000000e-08)
          to label %373 unwind label %437

373:                                              ; preds = %371
  %374 = load ptr, ptr %238, align 8, !tbaa !54
  %375 = icmp eq ptr %374, null
  br i1 %375, label %393, label %376

376:                                              ; preds = %373
  %377 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %374, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %378 unwind label %437

378:                                              ; preds = %376
  %379 = load ptr, ptr %238, align 8, !tbaa !54
  %380 = icmp eq ptr %379, null
  br i1 %380, label %393, label %381

381:                                              ; preds = %378
  %382 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %379, double noundef 1.000000e-02)
          to label %383 unwind label %439

383:                                              ; preds = %381
  %384 = load ptr, ptr %238, align 8, !tbaa !54
  %385 = icmp eq ptr %384, null
  br i1 %385, label %393, label %386

386:                                              ; preds = %383
  %387 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %384, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %388 unwind label %439

388:                                              ; preds = %386
  %389 = load ptr, ptr %238, align 8, !tbaa !54
  %390 = icmp eq ptr %389, null
  br i1 %390, label %393, label %391

391:                                              ; preds = %388
  %392 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %389, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %393 unwind label %439

393:                                              ; preds = %348, %343, %338, %333, %328, %323, %363, %368, %353, %358, %378, %373, %383, %388, %391
  %394 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %395 unwind label %441

395:                                              ; preds = %393
  %396 = load ptr, ptr %238, align 8, !tbaa !54
  %397 = icmp eq ptr %396, null
  br i1 %397, label %406, label %398

398:                                              ; preds = %395
  %399 = fadd double %394, -1.000000e-04
  %400 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %396, double noundef %399)
          to label %401 unwind label %441

401:                                              ; preds = %398
  %402 = load ptr, ptr %238, align 8, !tbaa !54
  %403 = icmp eq ptr %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %401
  %405 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %402, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %406 unwind label %441

406:                                              ; preds = %395, %401, %404
  %407 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %408 unwind label %443

408:                                              ; preds = %406
  %409 = load ptr, ptr %238, align 8, !tbaa !54
  %410 = icmp eq ptr %409, null
  br i1 %410, label %421, label %411

411:                                              ; preds = %408
  %412 = fadd double %407, -1.000000e-04
  %413 = fdiv double %412, 1.000000e-04
  %414 = fmul double %413, 1.000000e+02
  %415 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %409, double noundef %414)
          to label %416 unwind label %443

416:                                              ; preds = %411
  %417 = load ptr, ptr %238, align 8, !tbaa !54
  %418 = icmp eq ptr %417, null
  br i1 %418, label %421, label %419

419:                                              ; preds = %416
  %420 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %417, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %421 unwind label %443

421:                                              ; preds = %408, %416, %419
  br i1 %227, label %422, label %445

422:                                              ; preds = %421
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #23
  unreachable

423:                                              ; preds = %205, %209, %213, %217, %221, %219, %215, %211, %207, %203
  %424 = phi { ptr, i32 } [ %204, %203 ], [ %206, %205 ], [ %208, %207 ], [ %210, %209 ], [ %212, %211 ], [ %214, %213 ], [ %216, %215 ], [ %218, %217 ], [ %222, %221 ], [ %220, %219 ]
  br i1 %7, label %448, label %451

425:                                              ; preds = %251, %246, %241
  %426 = landingpad { ptr, i32 }
          cleanup
  br label %446

427:                                              ; preds = %284, %279, %274, %266, %261, %256
  %428 = landingpad { ptr, i32 }
          cleanup
  br label %446

429:                                              ; preds = %319, %314, %309, %304, %299, %294, %289
  %430 = landingpad { ptr, i32 }
          cleanup
  br label %446

431:                                              ; preds = %331, %326, %321
  %432 = landingpad { ptr, i32 }
          cleanup
  br label %446

433:                                              ; preds = %351, %346, %341, %336
  %434 = landingpad { ptr, i32 }
          cleanup
  br label %446

435:                                              ; preds = %366, %361, %356
  %436 = landingpad { ptr, i32 }
          cleanup
  br label %446

437:                                              ; preds = %376, %371
  %438 = landingpad { ptr, i32 }
          cleanup
  br label %446

439:                                              ; preds = %391, %386, %381
  %440 = landingpad { ptr, i32 }
          cleanup
  br label %446

441:                                              ; preds = %404, %398, %393
  %442 = landingpad { ptr, i32 }
          cleanup
  br label %446

443:                                              ; preds = %419, %411, %406
  %444 = landingpad { ptr, i32 }
          cleanup
  br label %446

445:                                              ; preds = %421
  ret void

446:                                              ; preds = %427, %431, %435, %439, %443, %441, %437, %433, %429, %425
  %447 = phi { ptr, i32 } [ %426, %425 ], [ %428, %427 ], [ %430, %429 ], [ %432, %431 ], [ %434, %433 ], [ %436, %435 ], [ %438, %437 ], [ %440, %439 ], [ %444, %443 ], [ %442, %441 ]
  br i1 %227, label %448, label %451

448:                                              ; preds = %446, %423
  %449 = phi ptr [ %2, %423 ], [ %3, %446 ]
  invoke void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %449) #23
          to label %450 unwind label %453

450:                                              ; preds = %448
  unreachable

451:                                              ; preds = %446, %423
  %452 = phi { ptr, i32 } [ %424, %423 ], [ %447, %446 ]
  resume { ptr, i32 } %452

453:                                              ; preds = %448
  %454 = landingpad { ptr, i32 }
          catch ptr null
  %455 = extractvalue { ptr, i32 } %454, 0
  call void @__clang_call_terminate(ptr %455) #24
  unreachable
}

; Function Attrs: uwtable
define hidden void @_Z24BM_Counters_InvertedRateRN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !71, !range !40, !noundef !41
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %8 = load i64, ptr %7, align 8
  tail call void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %9 = icmp eq i64 %8, 0
  %10 = select i1 %6, i1 true, i1 %9
  br i1 %10, label %14, label %11, !prof !42

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 1
  br label %20

14:                                               ; preds = %30, %1
  tail call void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %15 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #21
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 2
  store ptr %16, ptr %2, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %16, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  store i64 3, ptr %17, align 8, !tbaa !10
  %18 = getelementptr inbounds i8, ptr %2, i64 19
  store i8 0, ptr %18, align 1, !tbaa !13
  %19 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %15, ptr noundef nonnull align 8 dereferenceable(32) %2)
          to label %34 unwind label %52

20:                                               ; preds = %11, %30
  %21 = phi i64 [ %8, %11 ], [ %32, %30 ]
  %22 = load i8, ptr %12, align 8, !tbaa !24, !range !40, !noundef !41
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %24, !prof !42

24:                                               ; preds = %20
  %25 = load i64, ptr %7, align 8, !tbaa !43
  %26 = load i64, ptr %0, align 8, !tbaa !44
  %27 = sub i64 %25, %26
  %28 = load i64, ptr %13, align 8, !tbaa !45
  %29 = add i64 %27, %28
  br label %30

30:                                               ; preds = %20, %24
  %31 = phi i64 [ %29, %24 ], [ 0, %20 ]
  tail call void asm sideeffect "", "r|m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64 %31) #21, !srcloc !72
  %32 = add i64 %21, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %14, label %20, !prof !42

34:                                               ; preds = %14
  store double 1.000000e+00, ptr %19, align 8, !tbaa.struct !14
  %35 = getelementptr inbounds i8, ptr %19, i64 8
  store i32 -2147483647, ptr %35, align 8, !tbaa.struct !21
  %36 = getelementptr inbounds i8, ptr %19, i64 12
  store i32 1000, ptr %36, align 4, !tbaa.struct !22
  %37 = load ptr, ptr %2, align 8, !tbaa !23
  %38 = icmp eq ptr %37, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @_ZdlPv(ptr noundef %37) #22
  br label %40

40:                                               ; preds = %34, %39
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #21
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  store ptr %41, ptr %3, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %41, ptr noundef nonnull align 1 dereferenceable(3) @.str.7, i64 3, i1 false)
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  store i64 3, ptr %42, align 8, !tbaa !10
  %43 = getelementptr inbounds i8, ptr %3, i64 19
  store i8 0, ptr %43, align 1, !tbaa !13
  %44 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %15, ptr noundef nonnull align 8 dereferenceable(32) %3)
          to label %45 unwind label %58

45:                                               ; preds = %40
  store double 8.192000e+03, ptr %44, align 8, !tbaa.struct !14
  %46 = getelementptr inbounds i8, ptr %44, i64 8
  store i32 -2147483647, ptr %46, align 8, !tbaa.struct !21
  %47 = getelementptr inbounds i8, ptr %44, i64 12
  store i32 1000, ptr %47, align 4, !tbaa.struct !22
  %48 = load ptr, ptr %3, align 8, !tbaa !23
  %49 = icmp eq ptr %48, %41
  br i1 %49, label %51, label %50

50:                                               ; preds = %45
  call void @_ZdlPv(ptr noundef %48) #22
  br label %51

51:                                               ; preds = %45, %50
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  ret void

52:                                               ; preds = %14
  %53 = landingpad { ptr, i32 }
          cleanup
  %54 = load ptr, ptr %2, align 8, !tbaa !23
  %55 = icmp eq ptr %54, %16
  br i1 %55, label %57, label %56

56:                                               ; preds = %52
  call void @_ZdlPv(ptr noundef %54) #22
  br label %57

57:                                               ; preds = %56, %52
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  br label %64

58:                                               ; preds = %40
  %59 = landingpad { ptr, i32 }
          cleanup
  %60 = load ptr, ptr %3, align 8, !tbaa !23
  %61 = icmp eq ptr %60, %41
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  call void @_ZdlPv(ptr noundef %60) #22
  br label %63

63:                                               ; preds = %62, %58
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  br label %64

64:                                               ; preds = %63, %57
  %65 = phi { ptr, i32 } [ %59, %63 ], [ %53, %57 ]
  resume { ptr, i32 } %65
}

; Function Attrs: uwtable
define hidden void @_Z17CheckInvertedRateRK7Results(ptr noundef nonnull align 8 dereferenceable(80) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %3 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %4 = tail call noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
  %5 = tail call noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
  %6 = fmul double %4, %5
  %7 = tail call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
  %8 = fsub double %7, %6
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fmul double %6, 1.000000e-03
  %11 = fcmp uge double %9, %10
  br i1 %11, label %19, label %12

12:                                               ; preds = %1
  %13 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %21, !prof !53

15:                                               ; preds = %12
  %16 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %21

19:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %2, ptr noundef nonnull @.str.104, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z17CheckInvertedRateRK7Results, i32 noundef 239)
  %20 = load ptr, ptr %2, align 8, !tbaa !56
  br label %21

21:                                               ; preds = %18, %15, %12, %19
  %22 = phi ptr [ %20, %19 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %12 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %15 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %18 ]
  %23 = load ptr, ptr %22, align 8, !tbaa !54
  %24 = icmp eq ptr %23, null
  br i1 %24, label %105, label %25

25:                                               ; preds = %21
  %26 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %23, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %27 unwind label %211

27:                                               ; preds = %25
  %28 = load ptr, ptr %22, align 8, !tbaa !54
  %29 = icmp eq ptr %28, null
  br i1 %29, label %105, label %30

30:                                               ; preds = %27
  %31 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %28, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %32 unwind label %211

32:                                               ; preds = %30
  %33 = load ptr, ptr %22, align 8, !tbaa !54
  %34 = icmp eq ptr %33, null
  br i1 %34, label %105, label %35

35:                                               ; preds = %32
  %36 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %33, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %37 unwind label %211

37:                                               ; preds = %35
  %38 = load ptr, ptr %22, align 8, !tbaa !54
  %39 = icmp eq ptr %38, null
  br i1 %39, label %105, label %40

40:                                               ; preds = %37
  %41 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %38, i32 noundef 239)
          to label %42 unwind label %213

42:                                               ; preds = %40
  %43 = load ptr, ptr %22, align 8, !tbaa !54
  %44 = icmp eq ptr %43, null
  br i1 %44, label %105, label %45

45:                                               ; preds = %42
  %46 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %43, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %47 unwind label %213

47:                                               ; preds = %45
  %48 = load ptr, ptr %22, align 8, !tbaa !54
  %49 = icmp eq ptr %48, null
  br i1 %49, label %105, label %50

50:                                               ; preds = %47
  %51 = load ptr, ptr %0, align 8, !tbaa !23
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %53 = load i64, ptr %52, align 8, !tbaa !10
  %54 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %48, ptr noundef %51, i64 noundef %53)
          to label %55 unwind label %213

55:                                               ; preds = %50
  %56 = load ptr, ptr %22, align 8, !tbaa !54
  %57 = icmp eq ptr %56, null
  br i1 %57, label %105, label %58

58:                                               ; preds = %55
  %59 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %56, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %60 unwind label %213

60:                                               ; preds = %58
  %61 = load ptr, ptr %22, align 8, !tbaa !54
  %62 = icmp eq ptr %61, null
  br i1 %62, label %105, label %63

63:                                               ; preds = %60
  %64 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %61, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %65 unwind label %213

65:                                               ; preds = %63
  %66 = load ptr, ptr %22, align 8, !tbaa !54
  %67 = icmp eq ptr %66, null
  br i1 %67, label %105, label %68

68:                                               ; preds = %65
  %69 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %66, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %70 unwind label %213

70:                                               ; preds = %68
  %71 = load ptr, ptr %22, align 8, !tbaa !54
  %72 = icmp eq ptr %71, null
  br i1 %72, label %105, label %73

73:                                               ; preds = %70
  %74 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %71, i32 noundef 239)
          to label %75 unwind label %215

75:                                               ; preds = %73
  %76 = load ptr, ptr %22, align 8, !tbaa !54
  %77 = icmp eq ptr %76, null
  br i1 %77, label %105, label %78

78:                                               ; preds = %75
  %79 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %76, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %80 unwind label %215

80:                                               ; preds = %78
  %81 = load ptr, ptr %22, align 8, !tbaa !54
  %82 = icmp eq ptr %81, null
  br i1 %82, label %105, label %83

83:                                               ; preds = %80
  %84 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %81, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %85 unwind label %215

85:                                               ; preds = %83
  %86 = load ptr, ptr %22, align 8, !tbaa !54
  %87 = icmp eq ptr %86, null
  br i1 %87, label %105, label %88

88:                                               ; preds = %85
  %89 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %86, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %90 unwind label %215

90:                                               ; preds = %88
  %91 = load ptr, ptr %22, align 8, !tbaa !54
  %92 = icmp eq ptr %91, null
  br i1 %92, label %105, label %93

93:                                               ; preds = %90
  %94 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %91, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %95 unwind label %215

95:                                               ; preds = %93
  %96 = load ptr, ptr %22, align 8, !tbaa !54
  %97 = icmp eq ptr %96, null
  br i1 %97, label %105, label %98

98:                                               ; preds = %95
  %99 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %96, ptr noundef nonnull @.str.6, i64 noundef 3)
          to label %100 unwind label %215

100:                                              ; preds = %98
  %101 = load ptr, ptr %22, align 8, !tbaa !54
  %102 = icmp eq ptr %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %100
  %104 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %101, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %105 unwind label %215

105:                                              ; preds = %60, %55, %47, %42, %37, %32, %27, %21, %75, %80, %65, %70, %90, %85, %95, %100, %103
  %106 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %107 unwind label %217

107:                                              ; preds = %105
  %108 = load ptr, ptr %22, align 8, !tbaa !54
  %109 = icmp eq ptr %108, null
  br i1 %109, label %177, label %110

110:                                              ; preds = %107
  %111 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %108, double noundef %106)
          to label %112 unwind label %217

112:                                              ; preds = %110
  %113 = load ptr, ptr %22, align 8, !tbaa !54
  %114 = icmp eq ptr %113, null
  br i1 %114, label %177, label %115

115:                                              ; preds = %112
  %116 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %113, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %117 unwind label %217

117:                                              ; preds = %115
  %118 = load ptr, ptr %22, align 8, !tbaa !54
  %119 = icmp eq ptr %118, null
  br i1 %119, label %177, label %120

120:                                              ; preds = %117
  %121 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %118, double noundef %6)
          to label %122 unwind label %217

122:                                              ; preds = %120
  %123 = load ptr, ptr %22, align 8, !tbaa !54
  %124 = icmp eq ptr %123, null
  br i1 %124, label %177, label %125

125:                                              ; preds = %122
  %126 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %123, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %127 unwind label %217

127:                                              ; preds = %125
  %128 = load ptr, ptr %22, align 8, !tbaa !54
  %129 = icmp eq ptr %128, null
  br i1 %129, label %177, label %130

130:                                              ; preds = %127
  %131 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %128, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %132 unwind label %217

132:                                              ; preds = %130
  %133 = load ptr, ptr %22, align 8, !tbaa !54
  %134 = icmp eq ptr %133, null
  br i1 %134, label %177, label %135

135:                                              ; preds = %132
  %136 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %133, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %137 unwind label %217

137:                                              ; preds = %135
  %138 = load ptr, ptr %22, align 8, !tbaa !54
  %139 = icmp eq ptr %138, null
  br i1 %139, label %177, label %140

140:                                              ; preds = %137
  %141 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %138, i32 noundef 239)
          to label %142 unwind label %219

142:                                              ; preds = %140
  %143 = load ptr, ptr %22, align 8, !tbaa !54
  %144 = icmp eq ptr %143, null
  br i1 %144, label %177, label %145

145:                                              ; preds = %142
  %146 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %143, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %147 unwind label %219

147:                                              ; preds = %145
  %148 = load ptr, ptr %22, align 8, !tbaa !54
  %149 = icmp eq ptr %148, null
  br i1 %149, label %177, label %150

150:                                              ; preds = %147
  %151 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %148, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %152 unwind label %219

152:                                              ; preds = %150
  %153 = load ptr, ptr %22, align 8, !tbaa !54
  %154 = icmp eq ptr %153, null
  br i1 %154, label %177, label %155

155:                                              ; preds = %152
  %156 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %153, double noundef %10)
          to label %157 unwind label %221

157:                                              ; preds = %155
  %158 = load ptr, ptr %22, align 8, !tbaa !54
  %159 = icmp eq ptr %158, null
  br i1 %159, label %177, label %160

160:                                              ; preds = %157
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %158, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %162 unwind label %221

162:                                              ; preds = %160
  %163 = load ptr, ptr %22, align 8, !tbaa !54
  %164 = icmp eq ptr %163, null
  br i1 %164, label %177, label %165

165:                                              ; preds = %162
  %166 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %163, double noundef 1.000000e-01)
          to label %167 unwind label %223

167:                                              ; preds = %165
  %168 = load ptr, ptr %22, align 8, !tbaa !54
  %169 = icmp eq ptr %168, null
  br i1 %169, label %177, label %170

170:                                              ; preds = %167
  %171 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %168, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %172 unwind label %223

172:                                              ; preds = %170
  %173 = load ptr, ptr %22, align 8, !tbaa !54
  %174 = icmp eq ptr %173, null
  br i1 %174, label %177, label %175

175:                                              ; preds = %172
  %176 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %173, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %177 unwind label %223

177:                                              ; preds = %132, %127, %122, %117, %112, %107, %147, %152, %137, %142, %162, %157, %167, %172, %175
  %178 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %179 unwind label %225

179:                                              ; preds = %177
  %180 = load ptr, ptr %22, align 8, !tbaa !54
  %181 = icmp eq ptr %180, null
  br i1 %181, label %190, label %182

182:                                              ; preds = %179
  %183 = fsub double %178, %6
  %184 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %180, double noundef %183)
          to label %185 unwind label %225

185:                                              ; preds = %182
  %186 = load ptr, ptr %22, align 8, !tbaa !54
  %187 = icmp eq ptr %186, null
  br i1 %187, label %190, label %188

188:                                              ; preds = %185
  %189 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %186, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %190 unwind label %225

190:                                              ; preds = %179, %185, %188
  %191 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %192 unwind label %227

192:                                              ; preds = %190
  %193 = load ptr, ptr %22, align 8, !tbaa !54
  %194 = icmp eq ptr %193, null
  br i1 %194, label %209, label %195

195:                                              ; preds = %192
  %196 = fsub double %191, %6
  %197 = fcmp ogt double %6, 1.000000e-05
  %198 = fcmp olt double %6, -1.000000e-05
  %199 = or i1 %197, %198
  %200 = select i1 %199, double %6, double 1.000000e-05
  %201 = fdiv double %196, %200
  %202 = fmul double %201, 1.000000e+02
  %203 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %193, double noundef %202)
          to label %204 unwind label %227

204:                                              ; preds = %195
  %205 = load ptr, ptr %22, align 8, !tbaa !54
  %206 = icmp eq ptr %205, null
  br i1 %206, label %209, label %207

207:                                              ; preds = %204
  %208 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %205, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %209 unwind label %227

209:                                              ; preds = %192, %204, %207
  br i1 %11, label %210, label %229

210:                                              ; preds = %209
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %2) #23
  unreachable

211:                                              ; preds = %35, %30, %25
  %212 = landingpad { ptr, i32 }
          cleanup
  br label %435

213:                                              ; preds = %68, %63, %58, %50, %45, %40
  %214 = landingpad { ptr, i32 }
          cleanup
  br label %435

215:                                              ; preds = %103, %98, %93, %88, %83, %78, %73
  %216 = landingpad { ptr, i32 }
          cleanup
  br label %435

217:                                              ; preds = %135, %130, %125, %120, %115, %110, %105
  %218 = landingpad { ptr, i32 }
          cleanup
  br label %435

219:                                              ; preds = %150, %145, %140
  %220 = landingpad { ptr, i32 }
          cleanup
  br label %435

221:                                              ; preds = %160, %155
  %222 = landingpad { ptr, i32 }
          cleanup
  br label %435

223:                                              ; preds = %175, %170, %165
  %224 = landingpad { ptr, i32 }
          cleanup
  br label %435

225:                                              ; preds = %188, %182, %177
  %226 = landingpad { ptr, i32 }
          cleanup
  br label %435

227:                                              ; preds = %207, %195, %190
  %228 = landingpad { ptr, i32 }
          cleanup
  br label %435

229:                                              ; preds = %209
  %230 = call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
  %231 = fmul double %6, 0x3F20000000000000
  %232 = fsub double %230, %231
  %233 = call double @llvm.fabs.f64(double %232)
  %234 = fmul double %231, 1.000000e-03
  %235 = fcmp uge double %233, %234
  br i1 %235, label %243, label %236

236:                                              ; preds = %229
  %237 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %238 = icmp eq i8 %237, 0
  br i1 %238, label %239, label %245, !prof !53

239:                                              ; preds = %236
  %240 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %245, label %242

242:                                              ; preds = %239
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %245

243:                                              ; preds = %229
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull @.str.105, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z17CheckInvertedRateRK7Results, i32 noundef 240)
  %244 = load ptr, ptr %3, align 8, !tbaa !56
  br label %245

245:                                              ; preds = %242, %239, %236, %243
  %246 = phi ptr [ %244, %243 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %236 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %239 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %242 ]
  %247 = load ptr, ptr %246, align 8, !tbaa !54
  %248 = icmp eq ptr %247, null
  br i1 %248, label %329, label %249

249:                                              ; preds = %245
  %250 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %247, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %251 unwind label %437

251:                                              ; preds = %249
  %252 = load ptr, ptr %246, align 8, !tbaa !54
  %253 = icmp eq ptr %252, null
  br i1 %253, label %329, label %254

254:                                              ; preds = %251
  %255 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %252, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %256 unwind label %437

256:                                              ; preds = %254
  %257 = load ptr, ptr %246, align 8, !tbaa !54
  %258 = icmp eq ptr %257, null
  br i1 %258, label %329, label %259

259:                                              ; preds = %256
  %260 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %257, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %261 unwind label %437

261:                                              ; preds = %259
  %262 = load ptr, ptr %246, align 8, !tbaa !54
  %263 = icmp eq ptr %262, null
  br i1 %263, label %329, label %264

264:                                              ; preds = %261
  %265 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %262, i32 noundef 240)
          to label %266 unwind label %439

266:                                              ; preds = %264
  %267 = load ptr, ptr %246, align 8, !tbaa !54
  %268 = icmp eq ptr %267, null
  br i1 %268, label %329, label %269

269:                                              ; preds = %266
  %270 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %267, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %271 unwind label %439

271:                                              ; preds = %269
  %272 = load ptr, ptr %246, align 8, !tbaa !54
  %273 = icmp eq ptr %272, null
  br i1 %273, label %329, label %274

274:                                              ; preds = %271
  %275 = load ptr, ptr %0, align 8, !tbaa !23
  %276 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %277 = load i64, ptr %276, align 8, !tbaa !10
  %278 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %272, ptr noundef %275, i64 noundef %277)
          to label %279 unwind label %439

279:                                              ; preds = %274
  %280 = load ptr, ptr %246, align 8, !tbaa !54
  %281 = icmp eq ptr %280, null
  br i1 %281, label %329, label %282

282:                                              ; preds = %279
  %283 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %280, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %284 unwind label %439

284:                                              ; preds = %282
  %285 = load ptr, ptr %246, align 8, !tbaa !54
  %286 = icmp eq ptr %285, null
  br i1 %286, label %329, label %287

287:                                              ; preds = %284
  %288 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %285, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %289 unwind label %439

289:                                              ; preds = %287
  %290 = load ptr, ptr %246, align 8, !tbaa !54
  %291 = icmp eq ptr %290, null
  br i1 %291, label %329, label %292

292:                                              ; preds = %289
  %293 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %290, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %294 unwind label %439

294:                                              ; preds = %292
  %295 = load ptr, ptr %246, align 8, !tbaa !54
  %296 = icmp eq ptr %295, null
  br i1 %296, label %329, label %297

297:                                              ; preds = %294
  %298 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %295, i32 noundef 240)
          to label %299 unwind label %441

299:                                              ; preds = %297
  %300 = load ptr, ptr %246, align 8, !tbaa !54
  %301 = icmp eq ptr %300, null
  br i1 %301, label %329, label %302

302:                                              ; preds = %299
  %303 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %300, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %304 unwind label %441

304:                                              ; preds = %302
  %305 = load ptr, ptr %246, align 8, !tbaa !54
  %306 = icmp eq ptr %305, null
  br i1 %306, label %329, label %307

307:                                              ; preds = %304
  %308 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %305, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %309 unwind label %441

309:                                              ; preds = %307
  %310 = load ptr, ptr %246, align 8, !tbaa !54
  %311 = icmp eq ptr %310, null
  br i1 %311, label %329, label %312

312:                                              ; preds = %309
  %313 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %310, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %314 unwind label %441

314:                                              ; preds = %312
  %315 = load ptr, ptr %246, align 8, !tbaa !54
  %316 = icmp eq ptr %315, null
  br i1 %316, label %329, label %317

317:                                              ; preds = %314
  %318 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %315, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %319 unwind label %441

319:                                              ; preds = %317
  %320 = load ptr, ptr %246, align 8, !tbaa !54
  %321 = icmp eq ptr %320, null
  br i1 %321, label %329, label %322

322:                                              ; preds = %319
  %323 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %320, ptr noundef nonnull @.str.7, i64 noundef 3)
          to label %324 unwind label %441

324:                                              ; preds = %322
  %325 = load ptr, ptr %246, align 8, !tbaa !54
  %326 = icmp eq ptr %325, null
  br i1 %326, label %329, label %327

327:                                              ; preds = %324
  %328 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %325, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %329 unwind label %441

329:                                              ; preds = %284, %279, %271, %266, %261, %256, %251, %245, %299, %304, %289, %294, %314, %309, %319, %324, %327
  %330 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %331 unwind label %443

331:                                              ; preds = %329
  %332 = load ptr, ptr %246, align 8, !tbaa !54
  %333 = icmp eq ptr %332, null
  br i1 %333, label %401, label %334

334:                                              ; preds = %331
  %335 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %332, double noundef %330)
          to label %336 unwind label %443

336:                                              ; preds = %334
  %337 = load ptr, ptr %246, align 8, !tbaa !54
  %338 = icmp eq ptr %337, null
  br i1 %338, label %401, label %339

339:                                              ; preds = %336
  %340 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %337, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %341 unwind label %443

341:                                              ; preds = %339
  %342 = load ptr, ptr %246, align 8, !tbaa !54
  %343 = icmp eq ptr %342, null
  br i1 %343, label %401, label %344

344:                                              ; preds = %341
  %345 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %342, double noundef %231)
          to label %346 unwind label %445

346:                                              ; preds = %344
  %347 = load ptr, ptr %246, align 8, !tbaa !54
  %348 = icmp eq ptr %347, null
  br i1 %348, label %401, label %349

349:                                              ; preds = %346
  %350 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %347, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %351 unwind label %445

351:                                              ; preds = %349
  %352 = load ptr, ptr %246, align 8, !tbaa !54
  %353 = icmp eq ptr %352, null
  br i1 %353, label %401, label %354

354:                                              ; preds = %351
  %355 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %352, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %356 unwind label %445

356:                                              ; preds = %354
  %357 = load ptr, ptr %246, align 8, !tbaa !54
  %358 = icmp eq ptr %357, null
  br i1 %358, label %401, label %359

359:                                              ; preds = %356
  %360 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %357, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %361 unwind label %445

361:                                              ; preds = %359
  %362 = load ptr, ptr %246, align 8, !tbaa !54
  %363 = icmp eq ptr %362, null
  br i1 %363, label %401, label %364

364:                                              ; preds = %361
  %365 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %362, i32 noundef 240)
          to label %366 unwind label %447

366:                                              ; preds = %364
  %367 = load ptr, ptr %246, align 8, !tbaa !54
  %368 = icmp eq ptr %367, null
  br i1 %368, label %401, label %369

369:                                              ; preds = %366
  %370 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %367, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %371 unwind label %447

371:                                              ; preds = %369
  %372 = load ptr, ptr %246, align 8, !tbaa !54
  %373 = icmp eq ptr %372, null
  br i1 %373, label %401, label %374

374:                                              ; preds = %371
  %375 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %372, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %376 unwind label %447

376:                                              ; preds = %374
  %377 = load ptr, ptr %246, align 8, !tbaa !54
  %378 = icmp eq ptr %377, null
  br i1 %378, label %401, label %379

379:                                              ; preds = %376
  %380 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %377, double noundef %234)
          to label %381 unwind label %449

381:                                              ; preds = %379
  %382 = load ptr, ptr %246, align 8, !tbaa !54
  %383 = icmp eq ptr %382, null
  br i1 %383, label %401, label %384

384:                                              ; preds = %381
  %385 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %382, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %386 unwind label %449

386:                                              ; preds = %384
  %387 = load ptr, ptr %246, align 8, !tbaa !54
  %388 = icmp eq ptr %387, null
  br i1 %388, label %401, label %389

389:                                              ; preds = %386
  %390 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %387, double noundef 1.000000e-01)
          to label %391 unwind label %451

391:                                              ; preds = %389
  %392 = load ptr, ptr %246, align 8, !tbaa !54
  %393 = icmp eq ptr %392, null
  br i1 %393, label %401, label %394

394:                                              ; preds = %391
  %395 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %392, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %396 unwind label %451

396:                                              ; preds = %394
  %397 = load ptr, ptr %246, align 8, !tbaa !54
  %398 = icmp eq ptr %397, null
  br i1 %398, label %401, label %399

399:                                              ; preds = %396
  %400 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %397, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %401 unwind label %451

401:                                              ; preds = %356, %351, %346, %341, %336, %331, %371, %376, %361, %366, %386, %381, %391, %396, %399
  %402 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %403 unwind label %453

403:                                              ; preds = %401
  %404 = load ptr, ptr %246, align 8, !tbaa !54
  %405 = icmp eq ptr %404, null
  br i1 %405, label %414, label %406

406:                                              ; preds = %403
  %407 = fsub double %402, %231
  %408 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %404, double noundef %407)
          to label %409 unwind label %453

409:                                              ; preds = %406
  %410 = load ptr, ptr %246, align 8, !tbaa !54
  %411 = icmp eq ptr %410, null
  br i1 %411, label %414, label %412

412:                                              ; preds = %409
  %413 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %410, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %414 unwind label %453

414:                                              ; preds = %403, %409, %412
  %415 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %416 unwind label %455

416:                                              ; preds = %414
  %417 = load ptr, ptr %246, align 8, !tbaa !54
  %418 = icmp eq ptr %417, null
  br i1 %418, label %433, label %419

419:                                              ; preds = %416
  %420 = fcmp ogt double %231, 1.000000e-05
  %421 = fcmp olt double %231, -1.000000e-05
  %422 = or i1 %420, %421
  %423 = select i1 %422, double %231, double 1.000000e-05
  %424 = fsub double %415, %231
  %425 = fdiv double %424, %423
  %426 = fmul double %425, 1.000000e+02
  %427 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %417, double noundef %426)
          to label %428 unwind label %455

428:                                              ; preds = %419
  %429 = load ptr, ptr %246, align 8, !tbaa !54
  %430 = icmp eq ptr %429, null
  br i1 %430, label %433, label %431

431:                                              ; preds = %428
  %432 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %429, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %433 unwind label %455

433:                                              ; preds = %416, %428, %431
  br i1 %235, label %434, label %457

434:                                              ; preds = %433
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #23
  unreachable

435:                                              ; preds = %213, %217, %221, %225, %227, %223, %219, %215, %211
  %436 = phi { ptr, i32 } [ %212, %211 ], [ %214, %213 ], [ %216, %215 ], [ %218, %217 ], [ %220, %219 ], [ %222, %221 ], [ %224, %223 ], [ %228, %227 ], [ %226, %225 ]
  br i1 %11, label %460, label %463

437:                                              ; preds = %259, %254, %249
  %438 = landingpad { ptr, i32 }
          cleanup
  br label %458

439:                                              ; preds = %292, %287, %282, %274, %269, %264
  %440 = landingpad { ptr, i32 }
          cleanup
  br label %458

441:                                              ; preds = %327, %322, %317, %312, %307, %302, %297
  %442 = landingpad { ptr, i32 }
          cleanup
  br label %458

443:                                              ; preds = %339, %334, %329
  %444 = landingpad { ptr, i32 }
          cleanup
  br label %458

445:                                              ; preds = %359, %354, %349, %344
  %446 = landingpad { ptr, i32 }
          cleanup
  br label %458

447:                                              ; preds = %374, %369, %364
  %448 = landingpad { ptr, i32 }
          cleanup
  br label %458

449:                                              ; preds = %384, %379
  %450 = landingpad { ptr, i32 }
          cleanup
  br label %458

451:                                              ; preds = %399, %394, %389
  %452 = landingpad { ptr, i32 }
          cleanup
  br label %458

453:                                              ; preds = %412, %406, %401
  %454 = landingpad { ptr, i32 }
          cleanup
  br label %458

455:                                              ; preds = %431, %419, %414
  %456 = landingpad { ptr, i32 }
          cleanup
  br label %458

457:                                              ; preds = %433
  ret void

458:                                              ; preds = %439, %443, %447, %451, %455, %453, %449, %445, %441, %437
  %459 = phi { ptr, i32 } [ %438, %437 ], [ %440, %439 ], [ %442, %441 ], [ %444, %443 ], [ %446, %445 ], [ %448, %447 ], [ %450, %449 ], [ %452, %451 ], [ %456, %455 ], [ %454, %453 ]
  br i1 %235, label %460, label %463

460:                                              ; preds = %458, %435
  %461 = phi ptr [ %2, %435 ], [ %3, %458 ]
  invoke void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %461) #23
          to label %462 unwind label %465

462:                                              ; preds = %460
  unreachable

463:                                              ; preds = %458, %435
  %464 = phi { ptr, i32 } [ %436, %435 ], [ %459, %458 ]
  resume { ptr, i32 } %464

465:                                              ; preds = %460
  %466 = landingpad { ptr, i32 }
          catch ptr null
  %467 = extractvalue { ptr, i32 } %466, 0
  call void @__clang_call_terminate(ptr %467) #24
  unreachable
}

; Function Attrs: uwtable
define hidden void @_Z19BM_Counters_ThreadsRN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  tail call void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  tail call void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %4 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #21
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 2
  store ptr %5, ptr %2, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %5, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  store i64 3, ptr %6, align 8, !tbaa !10
  %7 = getelementptr inbounds i8, ptr %2, i64 19
  store i8 0, ptr %7, align 1, !tbaa !13
  %8 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %4, ptr noundef nonnull align 8 dereferenceable(32) %2)
          to label %9 unwind label %27

9:                                                ; preds = %1
  store double 1.000000e+00, ptr %8, align 8, !tbaa.struct !14
  %10 = getelementptr inbounds i8, ptr %8, i64 8
  store i32 0, ptr %10, align 8, !tbaa.struct !21
  %11 = getelementptr inbounds i8, ptr %8, i64 12
  store i32 1000, ptr %11, align 4, !tbaa.struct !22
  %12 = load ptr, ptr %2, align 8, !tbaa !23
  %13 = icmp eq ptr %12, %5
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  call void @_ZdlPv(ptr noundef %12) #22
  br label %15

15:                                               ; preds = %9, %14
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #21
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  store ptr %16, ptr %3, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %16, ptr noundef nonnull align 1 dereferenceable(3) @.str.7, i64 3, i1 false)
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  store i64 3, ptr %17, align 8, !tbaa !10
  %18 = getelementptr inbounds i8, ptr %3, i64 19
  store i8 0, ptr %18, align 1, !tbaa !13
  %19 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %4, ptr noundef nonnull align 8 dereferenceable(32) %3)
          to label %20 unwind label %33

20:                                               ; preds = %15
  store double 2.000000e+00, ptr %19, align 8, !tbaa.struct !14
  %21 = getelementptr inbounds i8, ptr %19, i64 8
  store i32 0, ptr %21, align 8, !tbaa.struct !21
  %22 = getelementptr inbounds i8, ptr %19, i64 12
  store i32 1000, ptr %22, align 4, !tbaa.struct !22
  %23 = load ptr, ptr %3, align 8, !tbaa !23
  %24 = icmp eq ptr %23, %16
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  call void @_ZdlPv(ptr noundef %23) #22
  br label %26

26:                                               ; preds = %20, %25
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  ret void

27:                                               ; preds = %1
  %28 = landingpad { ptr, i32 }
          cleanup
  %29 = load ptr, ptr %2, align 8, !tbaa !23
  %30 = icmp eq ptr %29, %5
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  call void @_ZdlPv(ptr noundef %29) #22
  br label %32

32:                                               ; preds = %31, %27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  br label %39

33:                                               ; preds = %15
  %34 = landingpad { ptr, i32 }
          cleanup
  %35 = load ptr, ptr %3, align 8, !tbaa !23
  %36 = icmp eq ptr %35, %16
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  call void @_ZdlPv(ptr noundef %35) #22
  br label %38

38:                                               ; preds = %37, %33
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  br label %39

39:                                               ; preds = %38, %32
  %40 = phi { ptr, i32 } [ %34, %38 ], [ %28, %32 ]
  resume { ptr, i32 } %40
}

declare noundef ptr @_ZN9benchmark8internal9Benchmark11ThreadRangeEii(ptr noundef nonnull align 8 dereferenceable(216), i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: uwtable
define hidden void @_Z12CheckThreadsRK7Results(ptr noundef nonnull align 8 dereferenceable(80) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %3 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %4 = tail call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
  %5 = fptosi double %4 to i32
  %6 = tail call noundef i32 @_ZNK7Results10NumThreadsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
  %7 = icmp eq i32 %6, %5
  br i1 %7, label %8, label %15

8:                                                ; preds = %1
  %9 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %17, !prof !53

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %17

15:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %2, ptr noundef nonnull @.str.117, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z12CheckThreadsRK7Results, i32 noundef 279)
  %16 = load ptr, ptr %2, align 8, !tbaa !56
  br label %17

17:                                               ; preds = %14, %11, %8, %15
  %18 = phi ptr [ %16, %15 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %8 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %11 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %14 ]
  %19 = load ptr, ptr %18, align 8, !tbaa !54
  %20 = icmp eq ptr %19, null
  br i1 %20, label %101, label %21

21:                                               ; preds = %17
  %22 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %19, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %23 unwind label %128

23:                                               ; preds = %21
  %24 = load ptr, ptr %18, align 8, !tbaa !54
  %25 = icmp eq ptr %24, null
  br i1 %25, label %101, label %26

26:                                               ; preds = %23
  %27 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %24, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %28 unwind label %128

28:                                               ; preds = %26
  %29 = load ptr, ptr %18, align 8, !tbaa !54
  %30 = icmp eq ptr %29, null
  br i1 %30, label %101, label %31

31:                                               ; preds = %28
  %32 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %29, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %33 unwind label %128

33:                                               ; preds = %31
  %34 = load ptr, ptr %18, align 8, !tbaa !54
  %35 = icmp eq ptr %34, null
  br i1 %35, label %101, label %36

36:                                               ; preds = %33
  %37 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %34, i32 noundef 279)
          to label %38 unwind label %130

38:                                               ; preds = %36
  %39 = load ptr, ptr %18, align 8, !tbaa !54
  %40 = icmp eq ptr %39, null
  br i1 %40, label %101, label %41

41:                                               ; preds = %38
  %42 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %39, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %43 unwind label %130

43:                                               ; preds = %41
  %44 = load ptr, ptr %18, align 8, !tbaa !54
  %45 = icmp eq ptr %44, null
  br i1 %45, label %101, label %46

46:                                               ; preds = %43
  %47 = load ptr, ptr %0, align 8, !tbaa !23
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %49 = load i64, ptr %48, align 8, !tbaa !10
  %50 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %44, ptr noundef %47, i64 noundef %49)
          to label %51 unwind label %130

51:                                               ; preds = %46
  %52 = load ptr, ptr %18, align 8, !tbaa !54
  %53 = icmp eq ptr %52, null
  br i1 %53, label %101, label %54

54:                                               ; preds = %51
  %55 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %52, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %56 unwind label %130

56:                                               ; preds = %54
  %57 = load ptr, ptr %18, align 8, !tbaa !54
  %58 = icmp eq ptr %57, null
  br i1 %58, label %101, label %59

59:                                               ; preds = %56
  %60 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %57, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %61 unwind label %130

61:                                               ; preds = %59
  %62 = load ptr, ptr %18, align 8, !tbaa !54
  %63 = icmp eq ptr %62, null
  br i1 %63, label %101, label %64

64:                                               ; preds = %61
  %65 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %62, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %66 unwind label %130

66:                                               ; preds = %64
  %67 = load ptr, ptr %18, align 8, !tbaa !54
  %68 = icmp eq ptr %67, null
  br i1 %68, label %101, label %69

69:                                               ; preds = %66
  %70 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %67, i32 noundef 279)
          to label %71 unwind label %132

71:                                               ; preds = %69
  %72 = load ptr, ptr %18, align 8, !tbaa !54
  %73 = icmp eq ptr %72, null
  br i1 %73, label %101, label %74

74:                                               ; preds = %71
  %75 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %72, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %76 unwind label %132

76:                                               ; preds = %74
  %77 = load ptr, ptr %18, align 8, !tbaa !54
  %78 = icmp eq ptr %77, null
  br i1 %78, label %101, label %79

79:                                               ; preds = %76
  %80 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %77, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %81 unwind label %132

81:                                               ; preds = %79
  %82 = load ptr, ptr %18, align 8, !tbaa !54
  %83 = icmp eq ptr %82, null
  br i1 %83, label %101, label %84

84:                                               ; preds = %81
  %85 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %82, ptr noundef nonnull @.str.37, i64 noundef 3)
          to label %86 unwind label %132

86:                                               ; preds = %84
  %87 = load ptr, ptr %18, align 8, !tbaa !54
  %88 = icmp eq ptr %87, null
  br i1 %88, label %101, label %89

89:                                               ; preds = %86
  %90 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %87, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %91 unwind label %132

91:                                               ; preds = %89
  %92 = load ptr, ptr %18, align 8, !tbaa !54
  %93 = icmp eq ptr %92, null
  br i1 %93, label %101, label %94

94:                                               ; preds = %91
  %95 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %92, ptr noundef nonnull @.str.6, i64 noundef 3)
          to label %96 unwind label %132

96:                                               ; preds = %94
  %97 = load ptr, ptr %18, align 8, !tbaa !54
  %98 = icmp eq ptr %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %96
  %100 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %97, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %101 unwind label %132

101:                                              ; preds = %56, %51, %43, %38, %33, %28, %23, %17, %71, %76, %61, %66, %86, %81, %91, %96, %99
  %102 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %103 unwind label %134

103:                                              ; preds = %101
  %104 = load ptr, ptr %18, align 8, !tbaa !54
  %105 = icmp eq ptr %104, null
  br i1 %105, label %114, label %106

106:                                              ; preds = %103
  %107 = fptosi double %102 to i32
  %108 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %104, i32 noundef %107)
          to label %109 unwind label %134

109:                                              ; preds = %106
  %110 = load ptr, ptr %18, align 8, !tbaa !54
  %111 = icmp eq ptr %110, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %109
  %113 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %110, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %114 unwind label %134

114:                                              ; preds = %103, %109, %112
  %115 = invoke noundef i32 @_ZNK7Results10NumThreadsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %116 unwind label %136

116:                                              ; preds = %114
  %117 = load ptr, ptr %18, align 8, !tbaa !54
  %118 = icmp eq ptr %117, null
  br i1 %118, label %126, label %119

119:                                              ; preds = %116
  %120 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %117, i32 noundef %115)
          to label %121 unwind label %136

121:                                              ; preds = %119
  %122 = load ptr, ptr %18, align 8, !tbaa !54
  %123 = icmp eq ptr %122, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %121
  %125 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %122, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %126 unwind label %136

126:                                              ; preds = %116, %121, %124
  br i1 %7, label %138, label %127

127:                                              ; preds = %126
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %2) #23
  unreachable

128:                                              ; preds = %31, %26, %21
  %129 = landingpad { ptr, i32 }
          cleanup
  br label %265

130:                                              ; preds = %64, %59, %54, %46, %41, %36
  %131 = landingpad { ptr, i32 }
          cleanup
  br label %265

132:                                              ; preds = %99, %94, %89, %84, %79, %74, %69
  %133 = landingpad { ptr, i32 }
          cleanup
  br label %265

134:                                              ; preds = %112, %106, %101
  %135 = landingpad { ptr, i32 }
          cleanup
  br label %265

136:                                              ; preds = %124, %119, %114
  %137 = landingpad { ptr, i32 }
          cleanup
  br label %265

138:                                              ; preds = %126
  %139 = call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
  %140 = fptosi double %139 to i32
  %141 = call noundef i32 @_ZNK7Results10NumThreadsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
  %142 = shl nsw i32 %141, 1
  %143 = icmp eq i32 %142, %140
  br i1 %143, label %144, label %151

144:                                              ; preds = %138
  %145 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %153, !prof !53

147:                                              ; preds = %144
  %148 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %153, label %150

150:                                              ; preds = %147
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %153

151:                                              ; preds = %138
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull @.str.118, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z12CheckThreadsRK7Results, i32 noundef 280)
  %152 = load ptr, ptr %3, align 8, !tbaa !56
  br label %153

153:                                              ; preds = %150, %147, %144, %151
  %154 = phi ptr [ %152, %151 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %144 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %147 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %150 ]
  %155 = load ptr, ptr %154, align 8, !tbaa !54
  %156 = icmp eq ptr %155, null
  br i1 %156, label %237, label %157

157:                                              ; preds = %153
  %158 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %155, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %159 unwind label %267

159:                                              ; preds = %157
  %160 = load ptr, ptr %154, align 8, !tbaa !54
  %161 = icmp eq ptr %160, null
  br i1 %161, label %237, label %162

162:                                              ; preds = %159
  %163 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %160, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %164 unwind label %267

164:                                              ; preds = %162
  %165 = load ptr, ptr %154, align 8, !tbaa !54
  %166 = icmp eq ptr %165, null
  br i1 %166, label %237, label %167

167:                                              ; preds = %164
  %168 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %165, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %169 unwind label %267

169:                                              ; preds = %167
  %170 = load ptr, ptr %154, align 8, !tbaa !54
  %171 = icmp eq ptr %170, null
  br i1 %171, label %237, label %172

172:                                              ; preds = %169
  %173 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %170, i32 noundef 280)
          to label %174 unwind label %269

174:                                              ; preds = %172
  %175 = load ptr, ptr %154, align 8, !tbaa !54
  %176 = icmp eq ptr %175, null
  br i1 %176, label %237, label %177

177:                                              ; preds = %174
  %178 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %175, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %179 unwind label %269

179:                                              ; preds = %177
  %180 = load ptr, ptr %154, align 8, !tbaa !54
  %181 = icmp eq ptr %180, null
  br i1 %181, label %237, label %182

182:                                              ; preds = %179
  %183 = load ptr, ptr %0, align 8, !tbaa !23
  %184 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %185 = load i64, ptr %184, align 8, !tbaa !10
  %186 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %180, ptr noundef %183, i64 noundef %185)
          to label %187 unwind label %269

187:                                              ; preds = %182
  %188 = load ptr, ptr %154, align 8, !tbaa !54
  %189 = icmp eq ptr %188, null
  br i1 %189, label %237, label %190

190:                                              ; preds = %187
  %191 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %188, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %192 unwind label %269

192:                                              ; preds = %190
  %193 = load ptr, ptr %154, align 8, !tbaa !54
  %194 = icmp eq ptr %193, null
  br i1 %194, label %237, label %195

195:                                              ; preds = %192
  %196 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %193, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %197 unwind label %269

197:                                              ; preds = %195
  %198 = load ptr, ptr %154, align 8, !tbaa !54
  %199 = icmp eq ptr %198, null
  br i1 %199, label %237, label %200

200:                                              ; preds = %197
  %201 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %198, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %202 unwind label %269

202:                                              ; preds = %200
  %203 = load ptr, ptr %154, align 8, !tbaa !54
  %204 = icmp eq ptr %203, null
  br i1 %204, label %237, label %205

205:                                              ; preds = %202
  %206 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %203, i32 noundef 280)
          to label %207 unwind label %271

207:                                              ; preds = %205
  %208 = load ptr, ptr %154, align 8, !tbaa !54
  %209 = icmp eq ptr %208, null
  br i1 %209, label %237, label %210

210:                                              ; preds = %207
  %211 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %208, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %212 unwind label %271

212:                                              ; preds = %210
  %213 = load ptr, ptr %154, align 8, !tbaa !54
  %214 = icmp eq ptr %213, null
  br i1 %214, label %237, label %215

215:                                              ; preds = %212
  %216 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %213, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %217 unwind label %271

217:                                              ; preds = %215
  %218 = load ptr, ptr %154, align 8, !tbaa !54
  %219 = icmp eq ptr %218, null
  br i1 %219, label %237, label %220

220:                                              ; preds = %217
  %221 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %218, ptr noundef nonnull @.str.37, i64 noundef 3)
          to label %222 unwind label %271

222:                                              ; preds = %220
  %223 = load ptr, ptr %154, align 8, !tbaa !54
  %224 = icmp eq ptr %223, null
  br i1 %224, label %237, label %225

225:                                              ; preds = %222
  %226 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %223, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %227 unwind label %271

227:                                              ; preds = %225
  %228 = load ptr, ptr %154, align 8, !tbaa !54
  %229 = icmp eq ptr %228, null
  br i1 %229, label %237, label %230

230:                                              ; preds = %227
  %231 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %228, ptr noundef nonnull @.str.7, i64 noundef 3)
          to label %232 unwind label %271

232:                                              ; preds = %230
  %233 = load ptr, ptr %154, align 8, !tbaa !54
  %234 = icmp eq ptr %233, null
  br i1 %234, label %237, label %235

235:                                              ; preds = %232
  %236 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %233, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %237 unwind label %271

237:                                              ; preds = %192, %187, %179, %174, %169, %164, %159, %153, %207, %212, %197, %202, %222, %217, %227, %232, %235
  %238 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %239 unwind label %273

239:                                              ; preds = %237
  %240 = load ptr, ptr %154, align 8, !tbaa !54
  %241 = icmp eq ptr %240, null
  br i1 %241, label %250, label %242

242:                                              ; preds = %239
  %243 = fptosi double %238 to i32
  %244 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %240, i32 noundef %243)
          to label %245 unwind label %273

245:                                              ; preds = %242
  %246 = load ptr, ptr %154, align 8, !tbaa !54
  %247 = icmp eq ptr %246, null
  br i1 %247, label %250, label %248

248:                                              ; preds = %245
  %249 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %246, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %250 unwind label %273

250:                                              ; preds = %239, %245, %248
  %251 = invoke noundef i32 @_ZNK7Results10NumThreadsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %252 unwind label %275

252:                                              ; preds = %250
  %253 = load ptr, ptr %154, align 8, !tbaa !54
  %254 = icmp eq ptr %253, null
  br i1 %254, label %263, label %255

255:                                              ; preds = %252
  %256 = shl nsw i32 %251, 1
  %257 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %253, i32 noundef %256)
          to label %258 unwind label %275

258:                                              ; preds = %255
  %259 = load ptr, ptr %154, align 8, !tbaa !54
  %260 = icmp eq ptr %259, null
  br i1 %260, label %263, label %261

261:                                              ; preds = %258
  %262 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %259, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %263 unwind label %275

263:                                              ; preds = %252, %258, %261
  br i1 %143, label %277, label %264

264:                                              ; preds = %263
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #23
  unreachable

265:                                              ; preds = %130, %134, %136, %132, %128
  %266 = phi { ptr, i32 } [ %129, %128 ], [ %131, %130 ], [ %133, %132 ], [ %137, %136 ], [ %135, %134 ]
  br i1 %7, label %283, label %280

267:                                              ; preds = %167, %162, %157
  %268 = landingpad { ptr, i32 }
          cleanup
  br label %278

269:                                              ; preds = %200, %195, %190, %182, %177, %172
  %270 = landingpad { ptr, i32 }
          cleanup
  br label %278

271:                                              ; preds = %235, %230, %225, %220, %215, %210, %205
  %272 = landingpad { ptr, i32 }
          cleanup
  br label %278

273:                                              ; preds = %248, %242, %237
  %274 = landingpad { ptr, i32 }
          cleanup
  br label %278

275:                                              ; preds = %261, %255, %250
  %276 = landingpad { ptr, i32 }
          cleanup
  br label %278

277:                                              ; preds = %263
  ret void

278:                                              ; preds = %269, %273, %275, %271, %267
  %279 = phi { ptr, i32 } [ %268, %267 ], [ %270, %269 ], [ %272, %271 ], [ %276, %275 ], [ %274, %273 ]
  br i1 %143, label %283, label %280

280:                                              ; preds = %278, %265
  %281 = phi ptr [ %2, %265 ], [ %3, %278 ]
  invoke void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %281) #23
          to label %282 unwind label %285

282:                                              ; preds = %280
  unreachable

283:                                              ; preds = %278, %265
  %284 = phi { ptr, i32 } [ %266, %265 ], [ %279, %278 ]
  resume { ptr, i32 } %284

285:                                              ; preds = %280
  %286 = landingpad { ptr, i32 }
          catch ptr null
  %287 = extractvalue { ptr, i32 } %286, 0
  call void @__clang_call_terminate(ptr %287) #24
  unreachable
}

declare noundef i32 @_ZNK7Results10NumThreadsEv(ptr noundef nonnull align 8 dereferenceable(80)) local_unnamed_addr #0

; Function Attrs: uwtable
define hidden void @_Z22BM_Counters_AvgThreadsRN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  tail call void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  tail call void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %4 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #21
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 2
  store ptr %5, ptr %2, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %5, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  store i64 3, ptr %6, align 8, !tbaa !10
  %7 = getelementptr inbounds i8, ptr %2, i64 19
  store i8 0, ptr %7, align 1, !tbaa !13
  %8 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %4, ptr noundef nonnull align 8 dereferenceable(32) %2)
          to label %9 unwind label %27

9:                                                ; preds = %1
  store double 1.000000e+00, ptr %8, align 8, !tbaa.struct !14
  %10 = getelementptr inbounds i8, ptr %8, i64 8
  store i32 2, ptr %10, align 8, !tbaa.struct !21
  %11 = getelementptr inbounds i8, ptr %8, i64 12
  store i32 1000, ptr %11, align 4, !tbaa.struct !22
  %12 = load ptr, ptr %2, align 8, !tbaa !23
  %13 = icmp eq ptr %12, %5
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  call void @_ZdlPv(ptr noundef %12) #22
  br label %15

15:                                               ; preds = %9, %14
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #21
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  store ptr %16, ptr %3, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %16, ptr noundef nonnull align 1 dereferenceable(3) @.str.7, i64 3, i1 false)
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  store i64 3, ptr %17, align 8, !tbaa !10
  %18 = getelementptr inbounds i8, ptr %3, i64 19
  store i8 0, ptr %18, align 1, !tbaa !13
  %19 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %4, ptr noundef nonnull align 8 dereferenceable(32) %3)
          to label %20 unwind label %33

20:                                               ; preds = %15
  store double 2.000000e+00, ptr %19, align 8, !tbaa.struct !14
  %21 = getelementptr inbounds i8, ptr %19, i64 8
  store i32 2, ptr %21, align 8, !tbaa.struct !21
  %22 = getelementptr inbounds i8, ptr %19, i64 12
  store i32 1000, ptr %22, align 4, !tbaa.struct !22
  %23 = load ptr, ptr %3, align 8, !tbaa !23
  %24 = icmp eq ptr %23, %16
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  call void @_ZdlPv(ptr noundef %23) #22
  br label %26

26:                                               ; preds = %20, %25
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  ret void

27:                                               ; preds = %1
  %28 = landingpad { ptr, i32 }
          cleanup
  %29 = load ptr, ptr %2, align 8, !tbaa !23
  %30 = icmp eq ptr %29, %5
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  call void @_ZdlPv(ptr noundef %29) #22
  br label %32

32:                                               ; preds = %31, %27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  br label %39

33:                                               ; preds = %15
  %34 = landingpad { ptr, i32 }
          cleanup
  %35 = load ptr, ptr %3, align 8, !tbaa !23
  %36 = icmp eq ptr %35, %16
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  call void @_ZdlPv(ptr noundef %35) #22
  br label %38

38:                                               ; preds = %37, %33
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  br label %39

39:                                               ; preds = %38, %32
  %40 = phi { ptr, i32 } [ %34, %38 ], [ %28, %32 ]
  resume { ptr, i32 } %40
}

; Function Attrs: uwtable
define hidden void @_Z15CheckAvgThreadsRK7Results(ptr noundef nonnull align 8 dereferenceable(80) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %3 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %4 = tail call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
  %5 = fptosi double %4 to i32
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %16, !prof !53

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %16

14:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %2, ptr noundef nonnull @.str.30, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z15CheckAvgThreadsRK7Results, i32 noundef 320)
  %15 = load ptr, ptr %2, align 8, !tbaa !56
  br label %16

16:                                               ; preds = %13, %10, %7, %14
  %17 = phi ptr [ %15, %14 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %7 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %10 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %13 ]
  %18 = load ptr, ptr %17, align 8, !tbaa !54
  %19 = icmp eq ptr %18, null
  br i1 %19, label %100, label %20

20:                                               ; preds = %16
  %21 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %18, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %22 unwind label %125

22:                                               ; preds = %20
  %23 = load ptr, ptr %17, align 8, !tbaa !54
  %24 = icmp eq ptr %23, null
  br i1 %24, label %100, label %25

25:                                               ; preds = %22
  %26 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %23, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %27 unwind label %125

27:                                               ; preds = %25
  %28 = load ptr, ptr %17, align 8, !tbaa !54
  %29 = icmp eq ptr %28, null
  br i1 %29, label %100, label %30

30:                                               ; preds = %27
  %31 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %28, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %32 unwind label %125

32:                                               ; preds = %30
  %33 = load ptr, ptr %17, align 8, !tbaa !54
  %34 = icmp eq ptr %33, null
  br i1 %34, label %100, label %35

35:                                               ; preds = %32
  %36 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %33, i32 noundef 320)
          to label %37 unwind label %127

37:                                               ; preds = %35
  %38 = load ptr, ptr %17, align 8, !tbaa !54
  %39 = icmp eq ptr %38, null
  br i1 %39, label %100, label %40

40:                                               ; preds = %37
  %41 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %38, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %42 unwind label %127

42:                                               ; preds = %40
  %43 = load ptr, ptr %17, align 8, !tbaa !54
  %44 = icmp eq ptr %43, null
  br i1 %44, label %100, label %45

45:                                               ; preds = %42
  %46 = load ptr, ptr %0, align 8, !tbaa !23
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %48 = load i64, ptr %47, align 8, !tbaa !10
  %49 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %43, ptr noundef %46, i64 noundef %48)
          to label %50 unwind label %127

50:                                               ; preds = %45
  %51 = load ptr, ptr %17, align 8, !tbaa !54
  %52 = icmp eq ptr %51, null
  br i1 %52, label %100, label %53

53:                                               ; preds = %50
  %54 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %51, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %55 unwind label %127

55:                                               ; preds = %53
  %56 = load ptr, ptr %17, align 8, !tbaa !54
  %57 = icmp eq ptr %56, null
  br i1 %57, label %100, label %58

58:                                               ; preds = %55
  %59 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %56, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %60 unwind label %127

60:                                               ; preds = %58
  %61 = load ptr, ptr %17, align 8, !tbaa !54
  %62 = icmp eq ptr %61, null
  br i1 %62, label %100, label %63

63:                                               ; preds = %60
  %64 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %61, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %65 unwind label %127

65:                                               ; preds = %63
  %66 = load ptr, ptr %17, align 8, !tbaa !54
  %67 = icmp eq ptr %66, null
  br i1 %67, label %100, label %68

68:                                               ; preds = %65
  %69 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %66, i32 noundef 320)
          to label %70 unwind label %129

70:                                               ; preds = %68
  %71 = load ptr, ptr %17, align 8, !tbaa !54
  %72 = icmp eq ptr %71, null
  br i1 %72, label %100, label %73

73:                                               ; preds = %70
  %74 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %71, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %75 unwind label %129

75:                                               ; preds = %73
  %76 = load ptr, ptr %17, align 8, !tbaa !54
  %77 = icmp eq ptr %76, null
  br i1 %77, label %100, label %78

78:                                               ; preds = %75
  %79 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %76, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %80 unwind label %129

80:                                               ; preds = %78
  %81 = load ptr, ptr %17, align 8, !tbaa !54
  %82 = icmp eq ptr %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %80
  %84 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %81, ptr noundef nonnull @.str.37, i64 noundef 3)
          to label %85 unwind label %129

85:                                               ; preds = %83
  %86 = load ptr, ptr %17, align 8, !tbaa !54
  %87 = icmp eq ptr %86, null
  br i1 %87, label %100, label %88

88:                                               ; preds = %85
  %89 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %86, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %90 unwind label %129

90:                                               ; preds = %88
  %91 = load ptr, ptr %17, align 8, !tbaa !54
  %92 = icmp eq ptr %91, null
  br i1 %92, label %100, label %93

93:                                               ; preds = %90
  %94 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %91, ptr noundef nonnull @.str.6, i64 noundef 3)
          to label %95 unwind label %129

95:                                               ; preds = %93
  %96 = load ptr, ptr %17, align 8, !tbaa !54
  %97 = icmp eq ptr %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %95
  %99 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %96, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %100 unwind label %129

100:                                              ; preds = %55, %50, %42, %37, %32, %27, %22, %16, %70, %75, %60, %65, %85, %80, %90, %95, %98
  %101 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %102 unwind label %131

102:                                              ; preds = %100
  %103 = load ptr, ptr %17, align 8, !tbaa !54
  %104 = icmp eq ptr %103, null
  br i1 %104, label %123, label %105

105:                                              ; preds = %102
  %106 = fptosi double %101 to i32
  %107 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %103, i32 noundef %106)
          to label %108 unwind label %131

108:                                              ; preds = %105
  %109 = load ptr, ptr %17, align 8, !tbaa !54
  %110 = icmp eq ptr %109, null
  br i1 %110, label %123, label %111

111:                                              ; preds = %108
  %112 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %109, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %113 unwind label %131

113:                                              ; preds = %111
  %114 = load ptr, ptr %17, align 8, !tbaa !54
  %115 = icmp eq ptr %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %113
  %117 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %114, i32 noundef 1)
          to label %118 unwind label %133

118:                                              ; preds = %116
  %119 = load ptr, ptr %17, align 8, !tbaa !54
  %120 = icmp eq ptr %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %118
  %122 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %119, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %123 unwind label %133

123:                                              ; preds = %108, %102, %113, %118, %121
  br i1 %6, label %135, label %124

124:                                              ; preds = %123
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %2) #23
  unreachable

125:                                              ; preds = %30, %25, %20
  %126 = landingpad { ptr, i32 }
          cleanup
  br label %257

127:                                              ; preds = %63, %58, %53, %45, %40, %35
  %128 = landingpad { ptr, i32 }
          cleanup
  br label %257

129:                                              ; preds = %98, %93, %88, %83, %78, %73, %68
  %130 = landingpad { ptr, i32 }
          cleanup
  br label %257

131:                                              ; preds = %111, %105, %100
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %257

133:                                              ; preds = %121, %116
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %257

135:                                              ; preds = %123
  %136 = call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
  %137 = fptosi double %136 to i32
  %138 = icmp eq i32 %137, 2
  br i1 %138, label %139, label %146

139:                                              ; preds = %135
  %140 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %148, !prof !53

142:                                              ; preds = %139
  %143 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %148, label %145

145:                                              ; preds = %142
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %148

146:                                              ; preds = %135
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull @.str.131, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z15CheckAvgThreadsRK7Results, i32 noundef 321)
  %147 = load ptr, ptr %3, align 8, !tbaa !56
  br label %148

148:                                              ; preds = %145, %142, %139, %146
  %149 = phi ptr [ %147, %146 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %139 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %142 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %145 ]
  %150 = load ptr, ptr %149, align 8, !tbaa !54
  %151 = icmp eq ptr %150, null
  br i1 %151, label %232, label %152

152:                                              ; preds = %148
  %153 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %150, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %154 unwind label %259

154:                                              ; preds = %152
  %155 = load ptr, ptr %149, align 8, !tbaa !54
  %156 = icmp eq ptr %155, null
  br i1 %156, label %232, label %157

157:                                              ; preds = %154
  %158 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %155, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %159 unwind label %259

159:                                              ; preds = %157
  %160 = load ptr, ptr %149, align 8, !tbaa !54
  %161 = icmp eq ptr %160, null
  br i1 %161, label %232, label %162

162:                                              ; preds = %159
  %163 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %160, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %164 unwind label %259

164:                                              ; preds = %162
  %165 = load ptr, ptr %149, align 8, !tbaa !54
  %166 = icmp eq ptr %165, null
  br i1 %166, label %232, label %167

167:                                              ; preds = %164
  %168 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %165, i32 noundef 321)
          to label %169 unwind label %261

169:                                              ; preds = %167
  %170 = load ptr, ptr %149, align 8, !tbaa !54
  %171 = icmp eq ptr %170, null
  br i1 %171, label %232, label %172

172:                                              ; preds = %169
  %173 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %170, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %174 unwind label %261

174:                                              ; preds = %172
  %175 = load ptr, ptr %149, align 8, !tbaa !54
  %176 = icmp eq ptr %175, null
  br i1 %176, label %232, label %177

177:                                              ; preds = %174
  %178 = load ptr, ptr %0, align 8, !tbaa !23
  %179 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %180 = load i64, ptr %179, align 8, !tbaa !10
  %181 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %175, ptr noundef %178, i64 noundef %180)
          to label %182 unwind label %261

182:                                              ; preds = %177
  %183 = load ptr, ptr %149, align 8, !tbaa !54
  %184 = icmp eq ptr %183, null
  br i1 %184, label %232, label %185

185:                                              ; preds = %182
  %186 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %183, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %187 unwind label %261

187:                                              ; preds = %185
  %188 = load ptr, ptr %149, align 8, !tbaa !54
  %189 = icmp eq ptr %188, null
  br i1 %189, label %232, label %190

190:                                              ; preds = %187
  %191 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %188, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %192 unwind label %261

192:                                              ; preds = %190
  %193 = load ptr, ptr %149, align 8, !tbaa !54
  %194 = icmp eq ptr %193, null
  br i1 %194, label %232, label %195

195:                                              ; preds = %192
  %196 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %193, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %197 unwind label %261

197:                                              ; preds = %195
  %198 = load ptr, ptr %149, align 8, !tbaa !54
  %199 = icmp eq ptr %198, null
  br i1 %199, label %232, label %200

200:                                              ; preds = %197
  %201 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %198, i32 noundef 321)
          to label %202 unwind label %263

202:                                              ; preds = %200
  %203 = load ptr, ptr %149, align 8, !tbaa !54
  %204 = icmp eq ptr %203, null
  br i1 %204, label %232, label %205

205:                                              ; preds = %202
  %206 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %203, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %207 unwind label %263

207:                                              ; preds = %205
  %208 = load ptr, ptr %149, align 8, !tbaa !54
  %209 = icmp eq ptr %208, null
  br i1 %209, label %232, label %210

210:                                              ; preds = %207
  %211 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %208, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %212 unwind label %263

212:                                              ; preds = %210
  %213 = load ptr, ptr %149, align 8, !tbaa !54
  %214 = icmp eq ptr %213, null
  br i1 %214, label %232, label %215

215:                                              ; preds = %212
  %216 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %213, ptr noundef nonnull @.str.37, i64 noundef 3)
          to label %217 unwind label %263

217:                                              ; preds = %215
  %218 = load ptr, ptr %149, align 8, !tbaa !54
  %219 = icmp eq ptr %218, null
  br i1 %219, label %232, label %220

220:                                              ; preds = %217
  %221 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %218, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %222 unwind label %263

222:                                              ; preds = %220
  %223 = load ptr, ptr %149, align 8, !tbaa !54
  %224 = icmp eq ptr %223, null
  br i1 %224, label %232, label %225

225:                                              ; preds = %222
  %226 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %223, ptr noundef nonnull @.str.7, i64 noundef 3)
          to label %227 unwind label %263

227:                                              ; preds = %225
  %228 = load ptr, ptr %149, align 8, !tbaa !54
  %229 = icmp eq ptr %228, null
  br i1 %229, label %232, label %230

230:                                              ; preds = %227
  %231 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %228, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %232 unwind label %263

232:                                              ; preds = %187, %182, %174, %169, %164, %159, %154, %148, %202, %207, %192, %197, %217, %212, %222, %227, %230
  %233 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %234 unwind label %265

234:                                              ; preds = %232
  %235 = load ptr, ptr %149, align 8, !tbaa !54
  %236 = icmp eq ptr %235, null
  br i1 %236, label %255, label %237

237:                                              ; preds = %234
  %238 = fptosi double %233 to i32
  %239 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %235, i32 noundef %238)
          to label %240 unwind label %265

240:                                              ; preds = %237
  %241 = load ptr, ptr %149, align 8, !tbaa !54
  %242 = icmp eq ptr %241, null
  br i1 %242, label %255, label %243

243:                                              ; preds = %240
  %244 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %241, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %245 unwind label %265

245:                                              ; preds = %243
  %246 = load ptr, ptr %149, align 8, !tbaa !54
  %247 = icmp eq ptr %246, null
  br i1 %247, label %255, label %248

248:                                              ; preds = %245
  %249 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %246, i32 noundef 2)
          to label %250 unwind label %267

250:                                              ; preds = %248
  %251 = load ptr, ptr %149, align 8, !tbaa !54
  %252 = icmp eq ptr %251, null
  br i1 %252, label %255, label %253

253:                                              ; preds = %250
  %254 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %251, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %255 unwind label %267

255:                                              ; preds = %240, %234, %245, %250, %253
  br i1 %138, label %269, label %256

256:                                              ; preds = %255
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #23
  unreachable

257:                                              ; preds = %127, %131, %133, %129, %125
  %258 = phi { ptr, i32 } [ %126, %125 ], [ %128, %127 ], [ %130, %129 ], [ %134, %133 ], [ %132, %131 ]
  br i1 %6, label %275, label %272

259:                                              ; preds = %162, %157, %152
  %260 = landingpad { ptr, i32 }
          cleanup
  br label %270

261:                                              ; preds = %195, %190, %185, %177, %172, %167
  %262 = landingpad { ptr, i32 }
          cleanup
  br label %270

263:                                              ; preds = %230, %225, %220, %215, %210, %205, %200
  %264 = landingpad { ptr, i32 }
          cleanup
  br label %270

265:                                              ; preds = %243, %237, %232
  %266 = landingpad { ptr, i32 }
          cleanup
  br label %270

267:                                              ; preds = %253, %248
  %268 = landingpad { ptr, i32 }
          cleanup
  br label %270

269:                                              ; preds = %255
  ret void

270:                                              ; preds = %261, %265, %267, %263, %259
  %271 = phi { ptr, i32 } [ %260, %259 ], [ %262, %261 ], [ %264, %263 ], [ %268, %267 ], [ %266, %265 ]
  br i1 %138, label %275, label %272

272:                                              ; preds = %270, %257
  %273 = phi ptr [ %2, %257 ], [ %3, %270 ]
  invoke void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %273) #23
          to label %274 unwind label %277

274:                                              ; preds = %272
  unreachable

275:                                              ; preds = %270, %257
  %276 = phi { ptr, i32 } [ %258, %257 ], [ %271, %270 ]
  resume { ptr, i32 } %276

277:                                              ; preds = %272
  %278 = landingpad { ptr, i32 }
          catch ptr null
  %279 = extractvalue { ptr, i32 } %278, 0
  call void @__clang_call_terminate(ptr %279) #24
  unreachable
}

; Function Attrs: uwtable
define hidden void @_Z26BM_Counters_AvgThreadsRateRN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !71, !range !40, !noundef !41
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %8 = load i64, ptr %7, align 8
  tail call void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %9 = icmp eq i64 %8, 0
  %10 = select i1 %6, i1 true, i1 %9
  br i1 %10, label %14, label %11, !prof !42

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 1
  br label %20

14:                                               ; preds = %30, %1
  tail call void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %15 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #21
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 2
  store ptr %16, ptr %2, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %16, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  store i64 3, ptr %17, align 8, !tbaa !10
  %18 = getelementptr inbounds i8, ptr %2, i64 19
  store i8 0, ptr %18, align 1, !tbaa !13
  %19 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %15, ptr noundef nonnull align 8 dereferenceable(32) %2)
          to label %34 unwind label %52

20:                                               ; preds = %11, %30
  %21 = phi i64 [ %8, %11 ], [ %32, %30 ]
  %22 = load i8, ptr %12, align 8, !tbaa !24, !range !40, !noundef !41
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %24, !prof !42

24:                                               ; preds = %20
  %25 = load i64, ptr %7, align 8, !tbaa !43
  %26 = load i64, ptr %0, align 8, !tbaa !44
  %27 = sub i64 %25, %26
  %28 = load i64, ptr %13, align 8, !tbaa !45
  %29 = add i64 %27, %28
  br label %30

30:                                               ; preds = %20, %24
  %31 = phi i64 [ %29, %24 ], [ 0, %20 ]
  tail call void asm sideeffect "", "r|m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64 %31) #21, !srcloc !72
  %32 = add i64 %21, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %14, label %20, !prof !42

34:                                               ; preds = %14
  store double 1.000000e+00, ptr %19, align 8, !tbaa.struct !14
  %35 = getelementptr inbounds i8, ptr %19, i64 8
  store i32 3, ptr %35, align 8, !tbaa.struct !21
  %36 = getelementptr inbounds i8, ptr %19, i64 12
  store i32 1000, ptr %36, align 4, !tbaa.struct !22
  %37 = load ptr, ptr %2, align 8, !tbaa !23
  %38 = icmp eq ptr %37, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @_ZdlPv(ptr noundef %37) #22
  br label %40

40:                                               ; preds = %34, %39
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #21
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  store ptr %41, ptr %3, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %41, ptr noundef nonnull align 1 dereferenceable(3) @.str.7, i64 3, i1 false)
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  store i64 3, ptr %42, align 8, !tbaa !10
  %43 = getelementptr inbounds i8, ptr %3, i64 19
  store i8 0, ptr %43, align 1, !tbaa !13
  %44 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %15, ptr noundef nonnull align 8 dereferenceable(32) %3)
          to label %45 unwind label %58

45:                                               ; preds = %40
  store double 2.000000e+00, ptr %44, align 8, !tbaa.struct !14
  %46 = getelementptr inbounds i8, ptr %44, i64 8
  store i32 3, ptr %46, align 8, !tbaa.struct !21
  %47 = getelementptr inbounds i8, ptr %44, i64 12
  store i32 1000, ptr %47, align 4, !tbaa.struct !22
  %48 = load ptr, ptr %3, align 8, !tbaa !23
  %49 = icmp eq ptr %48, %41
  br i1 %49, label %51, label %50

50:                                               ; preds = %45
  call void @_ZdlPv(ptr noundef %48) #22
  br label %51

51:                                               ; preds = %45, %50
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  ret void

52:                                               ; preds = %14
  %53 = landingpad { ptr, i32 }
          cleanup
  %54 = load ptr, ptr %2, align 8, !tbaa !23
  %55 = icmp eq ptr %54, %16
  br i1 %55, label %57, label %56

56:                                               ; preds = %52
  call void @_ZdlPv(ptr noundef %54) #22
  br label %57

57:                                               ; preds = %56, %52
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  br label %64

58:                                               ; preds = %40
  %59 = landingpad { ptr, i32 }
          cleanup
  %60 = load ptr, ptr %3, align 8, !tbaa !23
  %61 = icmp eq ptr %60, %41
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  call void @_ZdlPv(ptr noundef %60) #22
  br label %63

63:                                               ; preds = %62, %58
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  br label %64

64:                                               ; preds = %63, %57
  %65 = phi { ptr, i32 } [ %59, %63 ], [ %53, %57 ]
  resume { ptr, i32 } %65
}

; Function Attrs: uwtable
define hidden void @_Z19CheckAvgThreadsRateRK7Results(ptr noundef nonnull align 8 dereferenceable(80) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %3 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %4 = tail call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
  %5 = tail call noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
  %6 = tail call noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
  %7 = fmul double %5, %6
  %8 = fdiv double 1.000000e+00, %7
  %9 = fsub double %4, %8
  %10 = tail call double @llvm.fabs.f64(double %9)
  %11 = tail call noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
  %12 = tail call noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
  %13 = fmul double %11, %12
  %14 = fdiv double 1.000000e+00, %13
  %15 = fmul double %14, 1.000000e-03
  %16 = fcmp uge double %10, %15
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %26, !prof !53

20:                                               ; preds = %17
  %21 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %26

24:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %2, ptr noundef nonnull @.str.144, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z19CheckAvgThreadsRateRK7Results, i32 noundef 364)
  %25 = load ptr, ptr %2, align 8, !tbaa !56
  br label %26

26:                                               ; preds = %23, %20, %17, %24
  %27 = phi ptr [ %25, %24 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %17 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %20 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %23 ]
  %28 = load ptr, ptr %27, align 8, !tbaa !54
  %29 = icmp eq ptr %28, null
  br i1 %29, label %110, label %30

30:                                               ; preds = %26
  %31 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %28, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %32 unwind label %261

32:                                               ; preds = %30
  %33 = load ptr, ptr %27, align 8, !tbaa !54
  %34 = icmp eq ptr %33, null
  br i1 %34, label %110, label %35

35:                                               ; preds = %32
  %36 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %33, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %37 unwind label %261

37:                                               ; preds = %35
  %38 = load ptr, ptr %27, align 8, !tbaa !54
  %39 = icmp eq ptr %38, null
  br i1 %39, label %110, label %40

40:                                               ; preds = %37
  %41 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %38, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %42 unwind label %261

42:                                               ; preds = %40
  %43 = load ptr, ptr %27, align 8, !tbaa !54
  %44 = icmp eq ptr %43, null
  br i1 %44, label %110, label %45

45:                                               ; preds = %42
  %46 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %43, i32 noundef 364)
          to label %47 unwind label %263

47:                                               ; preds = %45
  %48 = load ptr, ptr %27, align 8, !tbaa !54
  %49 = icmp eq ptr %48, null
  br i1 %49, label %110, label %50

50:                                               ; preds = %47
  %51 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %48, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %52 unwind label %263

52:                                               ; preds = %50
  %53 = load ptr, ptr %27, align 8, !tbaa !54
  %54 = icmp eq ptr %53, null
  br i1 %54, label %110, label %55

55:                                               ; preds = %52
  %56 = load ptr, ptr %0, align 8, !tbaa !23
  %57 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %58 = load i64, ptr %57, align 8, !tbaa !10
  %59 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %53, ptr noundef %56, i64 noundef %58)
          to label %60 unwind label %263

60:                                               ; preds = %55
  %61 = load ptr, ptr %27, align 8, !tbaa !54
  %62 = icmp eq ptr %61, null
  br i1 %62, label %110, label %63

63:                                               ; preds = %60
  %64 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %61, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %65 unwind label %263

65:                                               ; preds = %63
  %66 = load ptr, ptr %27, align 8, !tbaa !54
  %67 = icmp eq ptr %66, null
  br i1 %67, label %110, label %68

68:                                               ; preds = %65
  %69 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %66, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %70 unwind label %263

70:                                               ; preds = %68
  %71 = load ptr, ptr %27, align 8, !tbaa !54
  %72 = icmp eq ptr %71, null
  br i1 %72, label %110, label %73

73:                                               ; preds = %70
  %74 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %71, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %75 unwind label %263

75:                                               ; preds = %73
  %76 = load ptr, ptr %27, align 8, !tbaa !54
  %77 = icmp eq ptr %76, null
  br i1 %77, label %110, label %78

78:                                               ; preds = %75
  %79 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %76, i32 noundef 364)
          to label %80 unwind label %265

80:                                               ; preds = %78
  %81 = load ptr, ptr %27, align 8, !tbaa !54
  %82 = icmp eq ptr %81, null
  br i1 %82, label %110, label %83

83:                                               ; preds = %80
  %84 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %81, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %85 unwind label %265

85:                                               ; preds = %83
  %86 = load ptr, ptr %27, align 8, !tbaa !54
  %87 = icmp eq ptr %86, null
  br i1 %87, label %110, label %88

88:                                               ; preds = %85
  %89 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %86, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %90 unwind label %265

90:                                               ; preds = %88
  %91 = load ptr, ptr %27, align 8, !tbaa !54
  %92 = icmp eq ptr %91, null
  br i1 %92, label %110, label %93

93:                                               ; preds = %90
  %94 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %91, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %95 unwind label %265

95:                                               ; preds = %93
  %96 = load ptr, ptr %27, align 8, !tbaa !54
  %97 = icmp eq ptr %96, null
  br i1 %97, label %110, label %98

98:                                               ; preds = %95
  %99 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %96, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %100 unwind label %265

100:                                              ; preds = %98
  %101 = load ptr, ptr %27, align 8, !tbaa !54
  %102 = icmp eq ptr %101, null
  br i1 %102, label %110, label %103

103:                                              ; preds = %100
  %104 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %101, ptr noundef nonnull @.str.6, i64 noundef 3)
          to label %105 unwind label %265

105:                                              ; preds = %103
  %106 = load ptr, ptr %27, align 8, !tbaa !54
  %107 = icmp eq ptr %106, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %105
  %109 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %106, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %110 unwind label %265

110:                                              ; preds = %65, %60, %52, %47, %42, %37, %32, %26, %80, %85, %70, %75, %95, %90, %100, %105, %108
  %111 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %112 unwind label %267

112:                                              ; preds = %110
  %113 = load ptr, ptr %27, align 8, !tbaa !54
  %114 = icmp eq ptr %113, null
  br i1 %114, label %122, label %115

115:                                              ; preds = %112
  %116 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %113, double noundef %111)
          to label %117 unwind label %267

117:                                              ; preds = %115
  %118 = load ptr, ptr %27, align 8, !tbaa !54
  %119 = icmp eq ptr %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %117
  %121 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %118, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %122 unwind label %267

122:                                              ; preds = %112, %117, %120
  %123 = invoke noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %124 unwind label %269

124:                                              ; preds = %122
  %125 = invoke noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
          to label %126 unwind label %269

126:                                              ; preds = %124
  %127 = load ptr, ptr %27, align 8, !tbaa !54
  %128 = icmp eq ptr %127, null
  br i1 %128, label %163, label %129

129:                                              ; preds = %126
  %130 = fmul double %123, %125
  %131 = fdiv double 1.000000e+00, %130
  %132 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %127, double noundef %131)
          to label %133 unwind label %269

133:                                              ; preds = %129
  %134 = load ptr, ptr %27, align 8, !tbaa !54
  %135 = icmp eq ptr %134, null
  br i1 %135, label %163, label %136

136:                                              ; preds = %133
  %137 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %134, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %138 unwind label %269

138:                                              ; preds = %136
  %139 = load ptr, ptr %27, align 8, !tbaa !54
  %140 = icmp eq ptr %139, null
  br i1 %140, label %163, label %141

141:                                              ; preds = %138
  %142 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %139, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %143 unwind label %269

143:                                              ; preds = %141
  %144 = load ptr, ptr %27, align 8, !tbaa !54
  %145 = icmp eq ptr %144, null
  br i1 %145, label %163, label %146

146:                                              ; preds = %143
  %147 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %144, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %148 unwind label %269

148:                                              ; preds = %146
  %149 = load ptr, ptr %27, align 8, !tbaa !54
  %150 = icmp eq ptr %149, null
  br i1 %150, label %163, label %151

151:                                              ; preds = %148
  %152 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %149, i32 noundef 364)
          to label %153 unwind label %271

153:                                              ; preds = %151
  %154 = load ptr, ptr %27, align 8, !tbaa !54
  %155 = icmp eq ptr %154, null
  br i1 %155, label %163, label %156

156:                                              ; preds = %153
  %157 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %154, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %158 unwind label %271

158:                                              ; preds = %156
  %159 = load ptr, ptr %27, align 8, !tbaa !54
  %160 = icmp eq ptr %159, null
  br i1 %160, label %163, label %161

161:                                              ; preds = %158
  %162 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %163 unwind label %271

163:                                              ; preds = %126, %133, %143, %138, %148, %153, %158, %161
  %164 = invoke noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %165 unwind label %273

165:                                              ; preds = %163
  %166 = invoke noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
          to label %167 unwind label %273

167:                                              ; preds = %165
  %168 = load ptr, ptr %27, align 8, !tbaa !54
  %169 = icmp eq ptr %168, null
  br i1 %169, label %195, label %170

170:                                              ; preds = %167
  %171 = fmul double %164, %166
  %172 = fdiv double 1.000000e+00, %171
  %173 = fmul double %172, 1.000000e-03
  %174 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %168, double noundef %173)
          to label %175 unwind label %273

175:                                              ; preds = %170
  %176 = load ptr, ptr %27, align 8, !tbaa !54
  %177 = icmp eq ptr %176, null
  br i1 %177, label %195, label %178

178:                                              ; preds = %175
  %179 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %176, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %180 unwind label %273

180:                                              ; preds = %178
  %181 = load ptr, ptr %27, align 8, !tbaa !54
  %182 = icmp eq ptr %181, null
  br i1 %182, label %195, label %183

183:                                              ; preds = %180
  %184 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %181, double noundef 1.000000e-01)
          to label %185 unwind label %275

185:                                              ; preds = %183
  %186 = load ptr, ptr %27, align 8, !tbaa !54
  %187 = icmp eq ptr %186, null
  br i1 %187, label %195, label %188

188:                                              ; preds = %185
  %189 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %186, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %190 unwind label %275

190:                                              ; preds = %188
  %191 = load ptr, ptr %27, align 8, !tbaa !54
  %192 = icmp eq ptr %191, null
  br i1 %192, label %195, label %193

193:                                              ; preds = %190
  %194 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %191, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %195 unwind label %275

195:                                              ; preds = %175, %167, %180, %185, %190, %193
  %196 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %197 unwind label %277

197:                                              ; preds = %195
  %198 = invoke noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %199 unwind label %277

199:                                              ; preds = %197
  %200 = invoke noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
          to label %201 unwind label %277

201:                                              ; preds = %199
  %202 = load ptr, ptr %27, align 8, !tbaa !54
  %203 = icmp eq ptr %202, null
  br i1 %203, label %214, label %204

204:                                              ; preds = %201
  %205 = fmul double %198, %200
  %206 = fdiv double 1.000000e+00, %205
  %207 = fsub double %196, %206
  %208 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %202, double noundef %207)
          to label %209 unwind label %277

209:                                              ; preds = %204
  %210 = load ptr, ptr %27, align 8, !tbaa !54
  %211 = icmp eq ptr %210, null
  br i1 %211, label %214, label %212

212:                                              ; preds = %209
  %213 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %210, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %214 unwind label %277

214:                                              ; preds = %201, %209, %212
  %215 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %216 unwind label %279

216:                                              ; preds = %214
  %217 = invoke noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %218 unwind label %279

218:                                              ; preds = %216
  %219 = invoke noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
          to label %220 unwind label %279

220:                                              ; preds = %218
  %221 = fmul double %217, %219
  %222 = fdiv double 1.000000e+00, %221
  %223 = fsub double %215, %222
  %224 = invoke noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %225 unwind label %279

225:                                              ; preds = %220
  %226 = invoke noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
          to label %227 unwind label %279

227:                                              ; preds = %225
  %228 = fmul double %224, %226
  %229 = fdiv double 1.000000e+00, %228
  %230 = fcmp ogt double %229, 1.000000e-05
  br i1 %230, label %239, label %231

231:                                              ; preds = %227
  %232 = invoke noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %233 unwind label %279

233:                                              ; preds = %231
  %234 = invoke noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
          to label %235 unwind label %279

235:                                              ; preds = %233
  %236 = fmul double %232, %234
  %237 = fdiv double 1.000000e+00, %236
  %238 = fcmp olt double %237, -1.000000e-05
  br i1 %238, label %239, label %246

239:                                              ; preds = %235, %227
  %240 = invoke noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %241 unwind label %279

241:                                              ; preds = %239
  %242 = invoke noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
          to label %243 unwind label %279

243:                                              ; preds = %241
  %244 = fmul double %240, %242
  %245 = fdiv double 1.000000e+00, %244
  br label %246

246:                                              ; preds = %235, %243
  %247 = phi double [ %245, %243 ], [ 1.000000e-05, %235 ]
  %248 = load ptr, ptr %27, align 8, !tbaa !54
  %249 = icmp eq ptr %248, null
  br i1 %249, label %259, label %250

250:                                              ; preds = %246
  %251 = fdiv double %223, %247
  %252 = fmul double %251, 1.000000e+02
  %253 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %248, double noundef %252)
          to label %254 unwind label %279

254:                                              ; preds = %250
  %255 = load ptr, ptr %27, align 8, !tbaa !54
  %256 = icmp eq ptr %255, null
  br i1 %256, label %259, label %257

257:                                              ; preds = %254
  %258 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %255, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %259 unwind label %279

259:                                              ; preds = %246, %254, %257
  br i1 %16, label %260, label %281

260:                                              ; preds = %259
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %2) #23
  unreachable

261:                                              ; preds = %40, %35, %30
  %262 = landingpad { ptr, i32 }
          cleanup
  br label %539

263:                                              ; preds = %73, %68, %63, %55, %50, %45
  %264 = landingpad { ptr, i32 }
          cleanup
  br label %539

265:                                              ; preds = %108, %103, %98, %93, %88, %83, %78
  %266 = landingpad { ptr, i32 }
          cleanup
  br label %539

267:                                              ; preds = %120, %115, %110
  %268 = landingpad { ptr, i32 }
          cleanup
  br label %539

269:                                              ; preds = %146, %141, %136, %129, %124, %122
  %270 = landingpad { ptr, i32 }
          cleanup
  br label %539

271:                                              ; preds = %161, %156, %151
  %272 = landingpad { ptr, i32 }
          cleanup
  br label %539

273:                                              ; preds = %178, %170, %165, %163
  %274 = landingpad { ptr, i32 }
          cleanup
  br label %539

275:                                              ; preds = %193, %188, %183
  %276 = landingpad { ptr, i32 }
          cleanup
  br label %539

277:                                              ; preds = %212, %204, %199, %197, %195
  %278 = landingpad { ptr, i32 }
          cleanup
  br label %539

279:                                              ; preds = %257, %250, %241, %239, %233, %231, %225, %220, %218, %216, %214
  %280 = landingpad { ptr, i32 }
          cleanup
  br label %539

281:                                              ; preds = %259
  %282 = call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
  %283 = call noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
  %284 = call noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
  %285 = fmul double %283, %284
  %286 = fdiv double 2.000000e+00, %285
  %287 = fsub double %282, %286
  %288 = call double @llvm.fabs.f64(double %287)
  %289 = call noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
  %290 = call noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
  %291 = fmul double %289, %290
  %292 = fdiv double 2.000000e+00, %291
  %293 = fmul double %292, 1.000000e-03
  %294 = fcmp uge double %288, %293
  br i1 %294, label %302, label %295

295:                                              ; preds = %281
  %296 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %298, label %304, !prof !53

298:                                              ; preds = %295
  %299 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %304, label %301

301:                                              ; preds = %298
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %304

302:                                              ; preds = %281
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull @.str.145, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z19CheckAvgThreadsRateRK7Results, i32 noundef 365)
  %303 = load ptr, ptr %3, align 8, !tbaa !56
  br label %304

304:                                              ; preds = %301, %298, %295, %302
  %305 = phi ptr [ %303, %302 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %295 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %298 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %301 ]
  %306 = load ptr, ptr %305, align 8, !tbaa !54
  %307 = icmp eq ptr %306, null
  br i1 %307, label %388, label %308

308:                                              ; preds = %304
  %309 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %306, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %310 unwind label %541

310:                                              ; preds = %308
  %311 = load ptr, ptr %305, align 8, !tbaa !54
  %312 = icmp eq ptr %311, null
  br i1 %312, label %388, label %313

313:                                              ; preds = %310
  %314 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %311, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %315 unwind label %541

315:                                              ; preds = %313
  %316 = load ptr, ptr %305, align 8, !tbaa !54
  %317 = icmp eq ptr %316, null
  br i1 %317, label %388, label %318

318:                                              ; preds = %315
  %319 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %316, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %320 unwind label %541

320:                                              ; preds = %318
  %321 = load ptr, ptr %305, align 8, !tbaa !54
  %322 = icmp eq ptr %321, null
  br i1 %322, label %388, label %323

323:                                              ; preds = %320
  %324 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %321, i32 noundef 365)
          to label %325 unwind label %543

325:                                              ; preds = %323
  %326 = load ptr, ptr %305, align 8, !tbaa !54
  %327 = icmp eq ptr %326, null
  br i1 %327, label %388, label %328

328:                                              ; preds = %325
  %329 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %326, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %330 unwind label %543

330:                                              ; preds = %328
  %331 = load ptr, ptr %305, align 8, !tbaa !54
  %332 = icmp eq ptr %331, null
  br i1 %332, label %388, label %333

333:                                              ; preds = %330
  %334 = load ptr, ptr %0, align 8, !tbaa !23
  %335 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %336 = load i64, ptr %335, align 8, !tbaa !10
  %337 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %331, ptr noundef %334, i64 noundef %336)
          to label %338 unwind label %543

338:                                              ; preds = %333
  %339 = load ptr, ptr %305, align 8, !tbaa !54
  %340 = icmp eq ptr %339, null
  br i1 %340, label %388, label %341

341:                                              ; preds = %338
  %342 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %339, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %343 unwind label %543

343:                                              ; preds = %341
  %344 = load ptr, ptr %305, align 8, !tbaa !54
  %345 = icmp eq ptr %344, null
  br i1 %345, label %388, label %346

346:                                              ; preds = %343
  %347 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %344, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %348 unwind label %543

348:                                              ; preds = %346
  %349 = load ptr, ptr %305, align 8, !tbaa !54
  %350 = icmp eq ptr %349, null
  br i1 %350, label %388, label %351

351:                                              ; preds = %348
  %352 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %349, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %353 unwind label %543

353:                                              ; preds = %351
  %354 = load ptr, ptr %305, align 8, !tbaa !54
  %355 = icmp eq ptr %354, null
  br i1 %355, label %388, label %356

356:                                              ; preds = %353
  %357 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %354, i32 noundef 365)
          to label %358 unwind label %545

358:                                              ; preds = %356
  %359 = load ptr, ptr %305, align 8, !tbaa !54
  %360 = icmp eq ptr %359, null
  br i1 %360, label %388, label %361

361:                                              ; preds = %358
  %362 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %359, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %363 unwind label %545

363:                                              ; preds = %361
  %364 = load ptr, ptr %305, align 8, !tbaa !54
  %365 = icmp eq ptr %364, null
  br i1 %365, label %388, label %366

366:                                              ; preds = %363
  %367 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %364, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %368 unwind label %545

368:                                              ; preds = %366
  %369 = load ptr, ptr %305, align 8, !tbaa !54
  %370 = icmp eq ptr %369, null
  br i1 %370, label %388, label %371

371:                                              ; preds = %368
  %372 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %369, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %373 unwind label %545

373:                                              ; preds = %371
  %374 = load ptr, ptr %305, align 8, !tbaa !54
  %375 = icmp eq ptr %374, null
  br i1 %375, label %388, label %376

376:                                              ; preds = %373
  %377 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %374, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %378 unwind label %545

378:                                              ; preds = %376
  %379 = load ptr, ptr %305, align 8, !tbaa !54
  %380 = icmp eq ptr %379, null
  br i1 %380, label %388, label %381

381:                                              ; preds = %378
  %382 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %379, ptr noundef nonnull @.str.7, i64 noundef 3)
          to label %383 unwind label %545

383:                                              ; preds = %381
  %384 = load ptr, ptr %305, align 8, !tbaa !54
  %385 = icmp eq ptr %384, null
  br i1 %385, label %388, label %386

386:                                              ; preds = %383
  %387 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %384, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %388 unwind label %545

388:                                              ; preds = %343, %338, %330, %325, %320, %315, %310, %304, %358, %363, %348, %353, %373, %368, %378, %383, %386
  %389 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %390 unwind label %547

390:                                              ; preds = %388
  %391 = load ptr, ptr %305, align 8, !tbaa !54
  %392 = icmp eq ptr %391, null
  br i1 %392, label %400, label %393

393:                                              ; preds = %390
  %394 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %391, double noundef %389)
          to label %395 unwind label %547

395:                                              ; preds = %393
  %396 = load ptr, ptr %305, align 8, !tbaa !54
  %397 = icmp eq ptr %396, null
  br i1 %397, label %400, label %398

398:                                              ; preds = %395
  %399 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %396, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %400 unwind label %547

400:                                              ; preds = %390, %395, %398
  %401 = invoke noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %402 unwind label %549

402:                                              ; preds = %400
  %403 = invoke noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
          to label %404 unwind label %549

404:                                              ; preds = %402
  %405 = load ptr, ptr %305, align 8, !tbaa !54
  %406 = icmp eq ptr %405, null
  br i1 %406, label %441, label %407

407:                                              ; preds = %404
  %408 = fmul double %401, %403
  %409 = fdiv double 2.000000e+00, %408
  %410 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %405, double noundef %409)
          to label %411 unwind label %549

411:                                              ; preds = %407
  %412 = load ptr, ptr %305, align 8, !tbaa !54
  %413 = icmp eq ptr %412, null
  br i1 %413, label %441, label %414

414:                                              ; preds = %411
  %415 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %412, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %416 unwind label %549

416:                                              ; preds = %414
  %417 = load ptr, ptr %305, align 8, !tbaa !54
  %418 = icmp eq ptr %417, null
  br i1 %418, label %441, label %419

419:                                              ; preds = %416
  %420 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %417, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %421 unwind label %549

421:                                              ; preds = %419
  %422 = load ptr, ptr %305, align 8, !tbaa !54
  %423 = icmp eq ptr %422, null
  br i1 %423, label %441, label %424

424:                                              ; preds = %421
  %425 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %422, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %426 unwind label %549

426:                                              ; preds = %424
  %427 = load ptr, ptr %305, align 8, !tbaa !54
  %428 = icmp eq ptr %427, null
  br i1 %428, label %441, label %429

429:                                              ; preds = %426
  %430 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %427, i32 noundef 365)
          to label %431 unwind label %551

431:                                              ; preds = %429
  %432 = load ptr, ptr %305, align 8, !tbaa !54
  %433 = icmp eq ptr %432, null
  br i1 %433, label %441, label %434

434:                                              ; preds = %431
  %435 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %432, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %436 unwind label %551

436:                                              ; preds = %434
  %437 = load ptr, ptr %305, align 8, !tbaa !54
  %438 = icmp eq ptr %437, null
  br i1 %438, label %441, label %439

439:                                              ; preds = %436
  %440 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %437, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %441 unwind label %551

441:                                              ; preds = %404, %411, %421, %416, %426, %431, %436, %439
  %442 = invoke noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %443 unwind label %553

443:                                              ; preds = %441
  %444 = invoke noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
          to label %445 unwind label %553

445:                                              ; preds = %443
  %446 = load ptr, ptr %305, align 8, !tbaa !54
  %447 = icmp eq ptr %446, null
  br i1 %447, label %473, label %448

448:                                              ; preds = %445
  %449 = fmul double %442, %444
  %450 = fdiv double 2.000000e+00, %449
  %451 = fmul double %450, 1.000000e-03
  %452 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %446, double noundef %451)
          to label %453 unwind label %553

453:                                              ; preds = %448
  %454 = load ptr, ptr %305, align 8, !tbaa !54
  %455 = icmp eq ptr %454, null
  br i1 %455, label %473, label %456

456:                                              ; preds = %453
  %457 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %454, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %458 unwind label %553

458:                                              ; preds = %456
  %459 = load ptr, ptr %305, align 8, !tbaa !54
  %460 = icmp eq ptr %459, null
  br i1 %460, label %473, label %461

461:                                              ; preds = %458
  %462 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %459, double noundef 1.000000e-01)
          to label %463 unwind label %555

463:                                              ; preds = %461
  %464 = load ptr, ptr %305, align 8, !tbaa !54
  %465 = icmp eq ptr %464, null
  br i1 %465, label %473, label %466

466:                                              ; preds = %463
  %467 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %464, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %468 unwind label %555

468:                                              ; preds = %466
  %469 = load ptr, ptr %305, align 8, !tbaa !54
  %470 = icmp eq ptr %469, null
  br i1 %470, label %473, label %471

471:                                              ; preds = %468
  %472 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %469, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %473 unwind label %555

473:                                              ; preds = %453, %445, %458, %463, %468, %471
  %474 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %475 unwind label %557

475:                                              ; preds = %473
  %476 = invoke noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %477 unwind label %557

477:                                              ; preds = %475
  %478 = invoke noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
          to label %479 unwind label %557

479:                                              ; preds = %477
  %480 = load ptr, ptr %305, align 8, !tbaa !54
  %481 = icmp eq ptr %480, null
  br i1 %481, label %492, label %482

482:                                              ; preds = %479
  %483 = fmul double %476, %478
  %484 = fdiv double 2.000000e+00, %483
  %485 = fsub double %474, %484
  %486 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %480, double noundef %485)
          to label %487 unwind label %557

487:                                              ; preds = %482
  %488 = load ptr, ptr %305, align 8, !tbaa !54
  %489 = icmp eq ptr %488, null
  br i1 %489, label %492, label %490

490:                                              ; preds = %487
  %491 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %488, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %492 unwind label %557

492:                                              ; preds = %479, %487, %490
  %493 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %494 unwind label %559

494:                                              ; preds = %492
  %495 = invoke noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %496 unwind label %559

496:                                              ; preds = %494
  %497 = invoke noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
          to label %498 unwind label %559

498:                                              ; preds = %496
  %499 = fmul double %495, %497
  %500 = fdiv double 2.000000e+00, %499
  %501 = fsub double %493, %500
  %502 = invoke noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %503 unwind label %559

503:                                              ; preds = %498
  %504 = invoke noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
          to label %505 unwind label %559

505:                                              ; preds = %503
  %506 = fmul double %502, %504
  %507 = fdiv double 2.000000e+00, %506
  %508 = fcmp ogt double %507, 1.000000e-05
  br i1 %508, label %517, label %509

509:                                              ; preds = %505
  %510 = invoke noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %511 unwind label %559

511:                                              ; preds = %509
  %512 = invoke noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
          to label %513 unwind label %559

513:                                              ; preds = %511
  %514 = fmul double %510, %512
  %515 = fdiv double 2.000000e+00, %514
  %516 = fcmp olt double %515, -1.000000e-05
  br i1 %516, label %517, label %524

517:                                              ; preds = %513, %505
  %518 = invoke noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %519 unwind label %559

519:                                              ; preds = %517
  %520 = invoke noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
          to label %521 unwind label %559

521:                                              ; preds = %519
  %522 = fmul double %518, %520
  %523 = fdiv double 2.000000e+00, %522
  br label %524

524:                                              ; preds = %513, %521
  %525 = phi double [ %523, %521 ], [ 1.000000e-05, %513 ]
  %526 = load ptr, ptr %305, align 8, !tbaa !54
  %527 = icmp eq ptr %526, null
  br i1 %527, label %537, label %528

528:                                              ; preds = %524
  %529 = fdiv double %501, %525
  %530 = fmul double %529, 1.000000e+02
  %531 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %526, double noundef %530)
          to label %532 unwind label %559

532:                                              ; preds = %528
  %533 = load ptr, ptr %305, align 8, !tbaa !54
  %534 = icmp eq ptr %533, null
  br i1 %534, label %537, label %535

535:                                              ; preds = %532
  %536 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %533, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %537 unwind label %559

537:                                              ; preds = %524, %532, %535
  br i1 %294, label %538, label %561

538:                                              ; preds = %537
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #23
  unreachable

539:                                              ; preds = %263, %267, %271, %275, %279, %277, %273, %269, %265, %261
  %540 = phi { ptr, i32 } [ %262, %261 ], [ %264, %263 ], [ %266, %265 ], [ %268, %267 ], [ %270, %269 ], [ %272, %271 ], [ %274, %273 ], [ %276, %275 ], [ %280, %279 ], [ %278, %277 ]
  br i1 %16, label %564, label %567

541:                                              ; preds = %318, %313, %308
  %542 = landingpad { ptr, i32 }
          cleanup
  br label %562

543:                                              ; preds = %351, %346, %341, %333, %328, %323
  %544 = landingpad { ptr, i32 }
          cleanup
  br label %562

545:                                              ; preds = %386, %381, %376, %371, %366, %361, %356
  %546 = landingpad { ptr, i32 }
          cleanup
  br label %562

547:                                              ; preds = %398, %393, %388
  %548 = landingpad { ptr, i32 }
          cleanup
  br label %562

549:                                              ; preds = %424, %419, %414, %407, %402, %400
  %550 = landingpad { ptr, i32 }
          cleanup
  br label %562

551:                                              ; preds = %439, %434, %429
  %552 = landingpad { ptr, i32 }
          cleanup
  br label %562

553:                                              ; preds = %456, %448, %443, %441
  %554 = landingpad { ptr, i32 }
          cleanup
  br label %562

555:                                              ; preds = %471, %466, %461
  %556 = landingpad { ptr, i32 }
          cleanup
  br label %562

557:                                              ; preds = %490, %482, %477, %475, %473
  %558 = landingpad { ptr, i32 }
          cleanup
  br label %562

559:                                              ; preds = %535, %528, %519, %517, %511, %509, %503, %498, %496, %494, %492
  %560 = landingpad { ptr, i32 }
          cleanup
  br label %562

561:                                              ; preds = %537
  ret void

562:                                              ; preds = %543, %547, %551, %555, %559, %557, %553, %549, %545, %541
  %563 = phi { ptr, i32 } [ %542, %541 ], [ %544, %543 ], [ %546, %545 ], [ %548, %547 ], [ %550, %549 ], [ %552, %551 ], [ %554, %553 ], [ %556, %555 ], [ %560, %559 ], [ %558, %557 ]
  br i1 %294, label %564, label %567

564:                                              ; preds = %562, %539
  %565 = phi ptr [ %2, %539 ], [ %3, %562 ]
  invoke void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %565) #23
          to label %566 unwind label %569

566:                                              ; preds = %564
  unreachable

567:                                              ; preds = %562, %539
  %568 = phi { ptr, i32 } [ %540, %539 ], [ %563, %562 ]
  resume { ptr, i32 } %568

569:                                              ; preds = %564
  %570 = landingpad { ptr, i32 }
          catch ptr null
  %571 = extractvalue { ptr, i32 } %570, 0
  call void @__clang_call_terminate(ptr %571) #24
  unreachable
}

; Function Attrs: uwtable
define hidden void @_Z30BM_Counters_IterationInvariantRN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  tail call void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  tail call void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %4 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #21
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 2
  store ptr %5, ptr %2, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %5, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  store i64 3, ptr %6, align 8, !tbaa !10
  %7 = getelementptr inbounds i8, ptr %2, i64 19
  store i8 0, ptr %7, align 1, !tbaa !13
  %8 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %4, ptr noundef nonnull align 8 dereferenceable(32) %2)
          to label %9 unwind label %27

9:                                                ; preds = %1
  store double 1.000000e+00, ptr %8, align 8, !tbaa.struct !14
  %10 = getelementptr inbounds i8, ptr %8, i64 8
  store i32 4, ptr %10, align 8, !tbaa.struct !21
  %11 = getelementptr inbounds i8, ptr %8, i64 12
  store i32 1000, ptr %11, align 4, !tbaa.struct !22
  %12 = load ptr, ptr %2, align 8, !tbaa !23
  %13 = icmp eq ptr %12, %5
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  call void @_ZdlPv(ptr noundef %12) #22
  br label %15

15:                                               ; preds = %9, %14
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #21
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  store ptr %16, ptr %3, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %16, ptr noundef nonnull align 1 dereferenceable(3) @.str.7, i64 3, i1 false)
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  store i64 3, ptr %17, align 8, !tbaa !10
  %18 = getelementptr inbounds i8, ptr %3, i64 19
  store i8 0, ptr %18, align 1, !tbaa !13
  %19 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %4, ptr noundef nonnull align 8 dereferenceable(32) %3)
          to label %20 unwind label %33

20:                                               ; preds = %15
  store double 2.000000e+00, ptr %19, align 8, !tbaa.struct !14
  %21 = getelementptr inbounds i8, ptr %19, i64 8
  store i32 4, ptr %21, align 8, !tbaa.struct !21
  %22 = getelementptr inbounds i8, ptr %19, i64 12
  store i32 1000, ptr %22, align 4, !tbaa.struct !22
  %23 = load ptr, ptr %3, align 8, !tbaa !23
  %24 = icmp eq ptr %23, %16
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  call void @_ZdlPv(ptr noundef %23) #22
  br label %26

26:                                               ; preds = %20, %25
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  ret void

27:                                               ; preds = %1
  %28 = landingpad { ptr, i32 }
          cleanup
  %29 = load ptr, ptr %2, align 8, !tbaa !23
  %30 = icmp eq ptr %29, %5
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  call void @_ZdlPv(ptr noundef %29) #22
  br label %32

32:                                               ; preds = %31, %27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  br label %39

33:                                               ; preds = %15
  %34 = landingpad { ptr, i32 }
          cleanup
  %35 = load ptr, ptr %3, align 8, !tbaa !23
  %36 = icmp eq ptr %35, %16
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  call void @_ZdlPv(ptr noundef %35) #22
  br label %38

38:                                               ; preds = %37, %33
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  br label %39

39:                                               ; preds = %38, %32
  %40 = phi { ptr, i32 } [ %34, %38 ], [ %28, %32 ]
  resume { ptr, i32 } %40
}

; Function Attrs: uwtable
define hidden void @_Z23CheckIterationInvariantRK7Results(ptr noundef nonnull align 8 dereferenceable(80) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %3 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %4 = tail call noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
  %5 = tail call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
  %6 = fsub double %5, %4
  %7 = tail call double @llvm.fabs.f64(double %6)
  %8 = fmul double %4, 1.000000e-03
  %9 = fcmp uge double %7, %8
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19, !prof !53

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %19

17:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %2, ptr noundef nonnull @.str.158, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z23CheckIterationInvariantRK7Results, i32 noundef 407)
  %18 = load ptr, ptr %2, align 8, !tbaa !56
  br label %19

19:                                               ; preds = %16, %13, %10, %17
  %20 = phi ptr [ %18, %17 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %10 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %13 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %16 ]
  %21 = load ptr, ptr %20, align 8, !tbaa !54
  %22 = icmp eq ptr %21, null
  br i1 %22, label %103, label %23

23:                                               ; preds = %19
  %24 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %21, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %25 unwind label %209

25:                                               ; preds = %23
  %26 = load ptr, ptr %20, align 8, !tbaa !54
  %27 = icmp eq ptr %26, null
  br i1 %27, label %103, label %28

28:                                               ; preds = %25
  %29 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %26, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %30 unwind label %209

30:                                               ; preds = %28
  %31 = load ptr, ptr %20, align 8, !tbaa !54
  %32 = icmp eq ptr %31, null
  br i1 %32, label %103, label %33

33:                                               ; preds = %30
  %34 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %31, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %35 unwind label %209

35:                                               ; preds = %33
  %36 = load ptr, ptr %20, align 8, !tbaa !54
  %37 = icmp eq ptr %36, null
  br i1 %37, label %103, label %38

38:                                               ; preds = %35
  %39 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %36, i32 noundef 407)
          to label %40 unwind label %211

40:                                               ; preds = %38
  %41 = load ptr, ptr %20, align 8, !tbaa !54
  %42 = icmp eq ptr %41, null
  br i1 %42, label %103, label %43

43:                                               ; preds = %40
  %44 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %41, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %45 unwind label %211

45:                                               ; preds = %43
  %46 = load ptr, ptr %20, align 8, !tbaa !54
  %47 = icmp eq ptr %46, null
  br i1 %47, label %103, label %48

48:                                               ; preds = %45
  %49 = load ptr, ptr %0, align 8, !tbaa !23
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %51 = load i64, ptr %50, align 8, !tbaa !10
  %52 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %46, ptr noundef %49, i64 noundef %51)
          to label %53 unwind label %211

53:                                               ; preds = %48
  %54 = load ptr, ptr %20, align 8, !tbaa !54
  %55 = icmp eq ptr %54, null
  br i1 %55, label %103, label %56

56:                                               ; preds = %53
  %57 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %54, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %58 unwind label %211

58:                                               ; preds = %56
  %59 = load ptr, ptr %20, align 8, !tbaa !54
  %60 = icmp eq ptr %59, null
  br i1 %60, label %103, label %61

61:                                               ; preds = %58
  %62 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %59, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %63 unwind label %211

63:                                               ; preds = %61
  %64 = load ptr, ptr %20, align 8, !tbaa !54
  %65 = icmp eq ptr %64, null
  br i1 %65, label %103, label %66

66:                                               ; preds = %63
  %67 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %64, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %68 unwind label %211

68:                                               ; preds = %66
  %69 = load ptr, ptr %20, align 8, !tbaa !54
  %70 = icmp eq ptr %69, null
  br i1 %70, label %103, label %71

71:                                               ; preds = %68
  %72 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %69, i32 noundef 407)
          to label %73 unwind label %213

73:                                               ; preds = %71
  %74 = load ptr, ptr %20, align 8, !tbaa !54
  %75 = icmp eq ptr %74, null
  br i1 %75, label %103, label %76

76:                                               ; preds = %73
  %77 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %74, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %78 unwind label %213

78:                                               ; preds = %76
  %79 = load ptr, ptr %20, align 8, !tbaa !54
  %80 = icmp eq ptr %79, null
  br i1 %80, label %103, label %81

81:                                               ; preds = %78
  %82 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %79, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %83 unwind label %213

83:                                               ; preds = %81
  %84 = load ptr, ptr %20, align 8, !tbaa !54
  %85 = icmp eq ptr %84, null
  br i1 %85, label %103, label %86

86:                                               ; preds = %83
  %87 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %84, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %88 unwind label %213

88:                                               ; preds = %86
  %89 = load ptr, ptr %20, align 8, !tbaa !54
  %90 = icmp eq ptr %89, null
  br i1 %90, label %103, label %91

91:                                               ; preds = %88
  %92 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %89, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %93 unwind label %213

93:                                               ; preds = %91
  %94 = load ptr, ptr %20, align 8, !tbaa !54
  %95 = icmp eq ptr %94, null
  br i1 %95, label %103, label %96

96:                                               ; preds = %93
  %97 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %94, ptr noundef nonnull @.str.6, i64 noundef 3)
          to label %98 unwind label %213

98:                                               ; preds = %96
  %99 = load ptr, ptr %20, align 8, !tbaa !54
  %100 = icmp eq ptr %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %98
  %102 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %99, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %103 unwind label %213

103:                                              ; preds = %58, %53, %45, %40, %35, %30, %25, %19, %73, %78, %63, %68, %88, %83, %93, %98, %101
  %104 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %105 unwind label %215

105:                                              ; preds = %103
  %106 = load ptr, ptr %20, align 8, !tbaa !54
  %107 = icmp eq ptr %106, null
  br i1 %107, label %175, label %108

108:                                              ; preds = %105
  %109 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %106, double noundef %104)
          to label %110 unwind label %215

110:                                              ; preds = %108
  %111 = load ptr, ptr %20, align 8, !tbaa !54
  %112 = icmp eq ptr %111, null
  br i1 %112, label %175, label %113

113:                                              ; preds = %110
  %114 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %111, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %115 unwind label %215

115:                                              ; preds = %113
  %116 = load ptr, ptr %20, align 8, !tbaa !54
  %117 = icmp eq ptr %116, null
  br i1 %117, label %175, label %118

118:                                              ; preds = %115
  %119 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %116, double noundef %4)
          to label %120 unwind label %215

120:                                              ; preds = %118
  %121 = load ptr, ptr %20, align 8, !tbaa !54
  %122 = icmp eq ptr %121, null
  br i1 %122, label %175, label %123

123:                                              ; preds = %120
  %124 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %121, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %125 unwind label %215

125:                                              ; preds = %123
  %126 = load ptr, ptr %20, align 8, !tbaa !54
  %127 = icmp eq ptr %126, null
  br i1 %127, label %175, label %128

128:                                              ; preds = %125
  %129 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %126, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %130 unwind label %215

130:                                              ; preds = %128
  %131 = load ptr, ptr %20, align 8, !tbaa !54
  %132 = icmp eq ptr %131, null
  br i1 %132, label %175, label %133

133:                                              ; preds = %130
  %134 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %131, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %135 unwind label %215

135:                                              ; preds = %133
  %136 = load ptr, ptr %20, align 8, !tbaa !54
  %137 = icmp eq ptr %136, null
  br i1 %137, label %175, label %138

138:                                              ; preds = %135
  %139 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %136, i32 noundef 407)
          to label %140 unwind label %217

140:                                              ; preds = %138
  %141 = load ptr, ptr %20, align 8, !tbaa !54
  %142 = icmp eq ptr %141, null
  br i1 %142, label %175, label %143

143:                                              ; preds = %140
  %144 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %141, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %145 unwind label %217

145:                                              ; preds = %143
  %146 = load ptr, ptr %20, align 8, !tbaa !54
  %147 = icmp eq ptr %146, null
  br i1 %147, label %175, label %148

148:                                              ; preds = %145
  %149 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %146, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %150 unwind label %217

150:                                              ; preds = %148
  %151 = load ptr, ptr %20, align 8, !tbaa !54
  %152 = icmp eq ptr %151, null
  br i1 %152, label %175, label %153

153:                                              ; preds = %150
  %154 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %151, double noundef %8)
          to label %155 unwind label %219

155:                                              ; preds = %153
  %156 = load ptr, ptr %20, align 8, !tbaa !54
  %157 = icmp eq ptr %156, null
  br i1 %157, label %175, label %158

158:                                              ; preds = %155
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %156, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %160 unwind label %219

160:                                              ; preds = %158
  %161 = load ptr, ptr %20, align 8, !tbaa !54
  %162 = icmp eq ptr %161, null
  br i1 %162, label %175, label %163

163:                                              ; preds = %160
  %164 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %161, double noundef 1.000000e-01)
          to label %165 unwind label %221

165:                                              ; preds = %163
  %166 = load ptr, ptr %20, align 8, !tbaa !54
  %167 = icmp eq ptr %166, null
  br i1 %167, label %175, label %168

168:                                              ; preds = %165
  %169 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %166, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %170 unwind label %221

170:                                              ; preds = %168
  %171 = load ptr, ptr %20, align 8, !tbaa !54
  %172 = icmp eq ptr %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %170
  %174 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %171, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %175 unwind label %221

175:                                              ; preds = %130, %125, %120, %115, %110, %105, %145, %150, %135, %140, %160, %155, %165, %170, %173
  %176 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %177 unwind label %223

177:                                              ; preds = %175
  %178 = load ptr, ptr %20, align 8, !tbaa !54
  %179 = icmp eq ptr %178, null
  br i1 %179, label %188, label %180

180:                                              ; preds = %177
  %181 = fsub double %176, %4
  %182 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %178, double noundef %181)
          to label %183 unwind label %223

183:                                              ; preds = %180
  %184 = load ptr, ptr %20, align 8, !tbaa !54
  %185 = icmp eq ptr %184, null
  br i1 %185, label %188, label %186

186:                                              ; preds = %183
  %187 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %184, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %188 unwind label %223

188:                                              ; preds = %177, %183, %186
  %189 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %190 unwind label %225

190:                                              ; preds = %188
  %191 = load ptr, ptr %20, align 8, !tbaa !54
  %192 = icmp eq ptr %191, null
  br i1 %192, label %207, label %193

193:                                              ; preds = %190
  %194 = fsub double %189, %4
  %195 = fcmp ogt double %4, 1.000000e-05
  %196 = fcmp olt double %4, -1.000000e-05
  %197 = or i1 %195, %196
  %198 = select i1 %197, double %4, double 1.000000e-05
  %199 = fdiv double %194, %198
  %200 = fmul double %199, 1.000000e+02
  %201 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %191, double noundef %200)
          to label %202 unwind label %225

202:                                              ; preds = %193
  %203 = load ptr, ptr %20, align 8, !tbaa !54
  %204 = icmp eq ptr %203, null
  br i1 %204, label %207, label %205

205:                                              ; preds = %202
  %206 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %203, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %207 unwind label %225

207:                                              ; preds = %190, %202, %205
  br i1 %9, label %208, label %227

208:                                              ; preds = %207
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %2) #23
  unreachable

209:                                              ; preds = %33, %28, %23
  %210 = landingpad { ptr, i32 }
          cleanup
  br label %433

211:                                              ; preds = %66, %61, %56, %48, %43, %38
  %212 = landingpad { ptr, i32 }
          cleanup
  br label %433

213:                                              ; preds = %101, %96, %91, %86, %81, %76, %71
  %214 = landingpad { ptr, i32 }
          cleanup
  br label %433

215:                                              ; preds = %133, %128, %123, %118, %113, %108, %103
  %216 = landingpad { ptr, i32 }
          cleanup
  br label %433

217:                                              ; preds = %148, %143, %138
  %218 = landingpad { ptr, i32 }
          cleanup
  br label %433

219:                                              ; preds = %158, %153
  %220 = landingpad { ptr, i32 }
          cleanup
  br label %433

221:                                              ; preds = %173, %168, %163
  %222 = landingpad { ptr, i32 }
          cleanup
  br label %433

223:                                              ; preds = %186, %180, %175
  %224 = landingpad { ptr, i32 }
          cleanup
  br label %433

225:                                              ; preds = %205, %193, %188
  %226 = landingpad { ptr, i32 }
          cleanup
  br label %433

227:                                              ; preds = %207
  %228 = call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
  %229 = call double @llvm.fmuladd.f64(double %4, double -2.000000e+00, double %228)
  %230 = call double @llvm.fabs.f64(double %229)
  %231 = fmul double %4, 2.000000e+00
  %232 = fmul double %231, 1.000000e-03
  %233 = fcmp uge double %230, %232
  br i1 %233, label %241, label %234

234:                                              ; preds = %227
  %235 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %237, label %243, !prof !53

237:                                              ; preds = %234
  %238 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %243, label %240

240:                                              ; preds = %237
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %243

241:                                              ; preds = %227
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull @.str.41, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z23CheckIterationInvariantRK7Results, i32 noundef 408)
  %242 = load ptr, ptr %3, align 8, !tbaa !56
  br label %243

243:                                              ; preds = %240, %237, %234, %241
  %244 = phi ptr [ %242, %241 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %234 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %237 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %240 ]
  %245 = load ptr, ptr %244, align 8, !tbaa !54
  %246 = icmp eq ptr %245, null
  br i1 %246, label %327, label %247

247:                                              ; preds = %243
  %248 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %245, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %249 unwind label %435

249:                                              ; preds = %247
  %250 = load ptr, ptr %244, align 8, !tbaa !54
  %251 = icmp eq ptr %250, null
  br i1 %251, label %327, label %252

252:                                              ; preds = %249
  %253 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %250, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %254 unwind label %435

254:                                              ; preds = %252
  %255 = load ptr, ptr %244, align 8, !tbaa !54
  %256 = icmp eq ptr %255, null
  br i1 %256, label %327, label %257

257:                                              ; preds = %254
  %258 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %255, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %259 unwind label %435

259:                                              ; preds = %257
  %260 = load ptr, ptr %244, align 8, !tbaa !54
  %261 = icmp eq ptr %260, null
  br i1 %261, label %327, label %262

262:                                              ; preds = %259
  %263 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %260, i32 noundef 408)
          to label %264 unwind label %437

264:                                              ; preds = %262
  %265 = load ptr, ptr %244, align 8, !tbaa !54
  %266 = icmp eq ptr %265, null
  br i1 %266, label %327, label %267

267:                                              ; preds = %264
  %268 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %265, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %269 unwind label %437

269:                                              ; preds = %267
  %270 = load ptr, ptr %244, align 8, !tbaa !54
  %271 = icmp eq ptr %270, null
  br i1 %271, label %327, label %272

272:                                              ; preds = %269
  %273 = load ptr, ptr %0, align 8, !tbaa !23
  %274 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %275 = load i64, ptr %274, align 8, !tbaa !10
  %276 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %270, ptr noundef %273, i64 noundef %275)
          to label %277 unwind label %437

277:                                              ; preds = %272
  %278 = load ptr, ptr %244, align 8, !tbaa !54
  %279 = icmp eq ptr %278, null
  br i1 %279, label %327, label %280

280:                                              ; preds = %277
  %281 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %278, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %282 unwind label %437

282:                                              ; preds = %280
  %283 = load ptr, ptr %244, align 8, !tbaa !54
  %284 = icmp eq ptr %283, null
  br i1 %284, label %327, label %285

285:                                              ; preds = %282
  %286 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %283, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %287 unwind label %437

287:                                              ; preds = %285
  %288 = load ptr, ptr %244, align 8, !tbaa !54
  %289 = icmp eq ptr %288, null
  br i1 %289, label %327, label %290

290:                                              ; preds = %287
  %291 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %288, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %292 unwind label %437

292:                                              ; preds = %290
  %293 = load ptr, ptr %244, align 8, !tbaa !54
  %294 = icmp eq ptr %293, null
  br i1 %294, label %327, label %295

295:                                              ; preds = %292
  %296 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %293, i32 noundef 408)
          to label %297 unwind label %439

297:                                              ; preds = %295
  %298 = load ptr, ptr %244, align 8, !tbaa !54
  %299 = icmp eq ptr %298, null
  br i1 %299, label %327, label %300

300:                                              ; preds = %297
  %301 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %298, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %302 unwind label %439

302:                                              ; preds = %300
  %303 = load ptr, ptr %244, align 8, !tbaa !54
  %304 = icmp eq ptr %303, null
  br i1 %304, label %327, label %305

305:                                              ; preds = %302
  %306 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %303, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %307 unwind label %439

307:                                              ; preds = %305
  %308 = load ptr, ptr %244, align 8, !tbaa !54
  %309 = icmp eq ptr %308, null
  br i1 %309, label %327, label %310

310:                                              ; preds = %307
  %311 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %308, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %312 unwind label %439

312:                                              ; preds = %310
  %313 = load ptr, ptr %244, align 8, !tbaa !54
  %314 = icmp eq ptr %313, null
  br i1 %314, label %327, label %315

315:                                              ; preds = %312
  %316 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %313, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %317 unwind label %439

317:                                              ; preds = %315
  %318 = load ptr, ptr %244, align 8, !tbaa !54
  %319 = icmp eq ptr %318, null
  br i1 %319, label %327, label %320

320:                                              ; preds = %317
  %321 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %318, ptr noundef nonnull @.str.7, i64 noundef 3)
          to label %322 unwind label %439

322:                                              ; preds = %320
  %323 = load ptr, ptr %244, align 8, !tbaa !54
  %324 = icmp eq ptr %323, null
  br i1 %324, label %327, label %325

325:                                              ; preds = %322
  %326 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %323, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %327 unwind label %439

327:                                              ; preds = %282, %277, %269, %264, %259, %254, %249, %243, %297, %302, %287, %292, %312, %307, %317, %322, %325
  %328 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %329 unwind label %441

329:                                              ; preds = %327
  %330 = load ptr, ptr %244, align 8, !tbaa !54
  %331 = icmp eq ptr %330, null
  br i1 %331, label %399, label %332

332:                                              ; preds = %329
  %333 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %330, double noundef %328)
          to label %334 unwind label %441

334:                                              ; preds = %332
  %335 = load ptr, ptr %244, align 8, !tbaa !54
  %336 = icmp eq ptr %335, null
  br i1 %336, label %399, label %337

337:                                              ; preds = %334
  %338 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %335, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %339 unwind label %441

339:                                              ; preds = %337
  %340 = load ptr, ptr %244, align 8, !tbaa !54
  %341 = icmp eq ptr %340, null
  br i1 %341, label %399, label %342

342:                                              ; preds = %339
  %343 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %340, double noundef %231)
          to label %344 unwind label %443

344:                                              ; preds = %342
  %345 = load ptr, ptr %244, align 8, !tbaa !54
  %346 = icmp eq ptr %345, null
  br i1 %346, label %399, label %347

347:                                              ; preds = %344
  %348 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %345, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %349 unwind label %443

349:                                              ; preds = %347
  %350 = load ptr, ptr %244, align 8, !tbaa !54
  %351 = icmp eq ptr %350, null
  br i1 %351, label %399, label %352

352:                                              ; preds = %349
  %353 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %350, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %354 unwind label %443

354:                                              ; preds = %352
  %355 = load ptr, ptr %244, align 8, !tbaa !54
  %356 = icmp eq ptr %355, null
  br i1 %356, label %399, label %357

357:                                              ; preds = %354
  %358 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %355, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %359 unwind label %443

359:                                              ; preds = %357
  %360 = load ptr, ptr %244, align 8, !tbaa !54
  %361 = icmp eq ptr %360, null
  br i1 %361, label %399, label %362

362:                                              ; preds = %359
  %363 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %360, i32 noundef 408)
          to label %364 unwind label %445

364:                                              ; preds = %362
  %365 = load ptr, ptr %244, align 8, !tbaa !54
  %366 = icmp eq ptr %365, null
  br i1 %366, label %399, label %367

367:                                              ; preds = %364
  %368 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %365, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %369 unwind label %445

369:                                              ; preds = %367
  %370 = load ptr, ptr %244, align 8, !tbaa !54
  %371 = icmp eq ptr %370, null
  br i1 %371, label %399, label %372

372:                                              ; preds = %369
  %373 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %370, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %374 unwind label %445

374:                                              ; preds = %372
  %375 = load ptr, ptr %244, align 8, !tbaa !54
  %376 = icmp eq ptr %375, null
  br i1 %376, label %399, label %377

377:                                              ; preds = %374
  %378 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %375, double noundef %232)
          to label %379 unwind label %447

379:                                              ; preds = %377
  %380 = load ptr, ptr %244, align 8, !tbaa !54
  %381 = icmp eq ptr %380, null
  br i1 %381, label %399, label %382

382:                                              ; preds = %379
  %383 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %380, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %384 unwind label %447

384:                                              ; preds = %382
  %385 = load ptr, ptr %244, align 8, !tbaa !54
  %386 = icmp eq ptr %385, null
  br i1 %386, label %399, label %387

387:                                              ; preds = %384
  %388 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %385, double noundef 1.000000e-01)
          to label %389 unwind label %449

389:                                              ; preds = %387
  %390 = load ptr, ptr %244, align 8, !tbaa !54
  %391 = icmp eq ptr %390, null
  br i1 %391, label %399, label %392

392:                                              ; preds = %389
  %393 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %390, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %394 unwind label %449

394:                                              ; preds = %392
  %395 = load ptr, ptr %244, align 8, !tbaa !54
  %396 = icmp eq ptr %395, null
  br i1 %396, label %399, label %397

397:                                              ; preds = %394
  %398 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %395, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %399 unwind label %449

399:                                              ; preds = %354, %349, %344, %339, %334, %329, %369, %374, %359, %364, %384, %379, %389, %394, %397
  %400 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %401 unwind label %451

401:                                              ; preds = %399
  %402 = load ptr, ptr %244, align 8, !tbaa !54
  %403 = icmp eq ptr %402, null
  br i1 %403, label %412, label %404

404:                                              ; preds = %401
  %405 = call double @llvm.fmuladd.f64(double %4, double -2.000000e+00, double %400)
  %406 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %402, double noundef %405)
          to label %407 unwind label %451

407:                                              ; preds = %404
  %408 = load ptr, ptr %244, align 8, !tbaa !54
  %409 = icmp eq ptr %408, null
  br i1 %409, label %412, label %410

410:                                              ; preds = %407
  %411 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %408, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %412 unwind label %451

412:                                              ; preds = %401, %407, %410
  %413 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %414 unwind label %453

414:                                              ; preds = %412
  %415 = load ptr, ptr %244, align 8, !tbaa !54
  %416 = icmp eq ptr %415, null
  br i1 %416, label %431, label %417

417:                                              ; preds = %414
  %418 = fcmp ogt double %231, 1.000000e-05
  %419 = fcmp olt double %231, -1.000000e-05
  %420 = or i1 %418, %419
  %421 = select i1 %420, double %231, double 1.000000e-05
  %422 = call double @llvm.fmuladd.f64(double %4, double -2.000000e+00, double %413)
  %423 = fdiv double %422, %421
  %424 = fmul double %423, 1.000000e+02
  %425 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %415, double noundef %424)
          to label %426 unwind label %453

426:                                              ; preds = %417
  %427 = load ptr, ptr %244, align 8, !tbaa !54
  %428 = icmp eq ptr %427, null
  br i1 %428, label %431, label %429

429:                                              ; preds = %426
  %430 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %427, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %431 unwind label %453

431:                                              ; preds = %414, %426, %429
  br i1 %233, label %432, label %455

432:                                              ; preds = %431
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #23
  unreachable

433:                                              ; preds = %211, %215, %219, %223, %225, %221, %217, %213, %209
  %434 = phi { ptr, i32 } [ %210, %209 ], [ %212, %211 ], [ %214, %213 ], [ %216, %215 ], [ %218, %217 ], [ %220, %219 ], [ %222, %221 ], [ %226, %225 ], [ %224, %223 ]
  br i1 %9, label %458, label %461

435:                                              ; preds = %257, %252, %247
  %436 = landingpad { ptr, i32 }
          cleanup
  br label %456

437:                                              ; preds = %290, %285, %280, %272, %267, %262
  %438 = landingpad { ptr, i32 }
          cleanup
  br label %456

439:                                              ; preds = %325, %320, %315, %310, %305, %300, %295
  %440 = landingpad { ptr, i32 }
          cleanup
  br label %456

441:                                              ; preds = %337, %332, %327
  %442 = landingpad { ptr, i32 }
          cleanup
  br label %456

443:                                              ; preds = %357, %352, %347, %342
  %444 = landingpad { ptr, i32 }
          cleanup
  br label %456

445:                                              ; preds = %372, %367, %362
  %446 = landingpad { ptr, i32 }
          cleanup
  br label %456

447:                                              ; preds = %382, %377
  %448 = landingpad { ptr, i32 }
          cleanup
  br label %456

449:                                              ; preds = %397, %392, %387
  %450 = landingpad { ptr, i32 }
          cleanup
  br label %456

451:                                              ; preds = %410, %404, %399
  %452 = landingpad { ptr, i32 }
          cleanup
  br label %456

453:                                              ; preds = %429, %417, %412
  %454 = landingpad { ptr, i32 }
          cleanup
  br label %456

455:                                              ; preds = %431
  ret void

456:                                              ; preds = %437, %441, %445, %449, %453, %451, %447, %443, %439, %435
  %457 = phi { ptr, i32 } [ %436, %435 ], [ %438, %437 ], [ %440, %439 ], [ %442, %441 ], [ %444, %443 ], [ %446, %445 ], [ %448, %447 ], [ %450, %449 ], [ %454, %453 ], [ %452, %451 ]
  br i1 %233, label %458, label %461

458:                                              ; preds = %456, %433
  %459 = phi ptr [ %2, %433 ], [ %3, %456 ]
  invoke void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %459) #23
          to label %460 unwind label %463

460:                                              ; preds = %458
  unreachable

461:                                              ; preds = %456, %433
  %462 = phi { ptr, i32 } [ %434, %433 ], [ %457, %456 ]
  resume { ptr, i32 } %462

463:                                              ; preds = %458
  %464 = landingpad { ptr, i32 }
          catch ptr null
  %465 = extractvalue { ptr, i32 } %464, 0
  call void @__clang_call_terminate(ptr %465) #24
  unreachable
}

; Function Attrs: uwtable
define hidden void @_Z37BM_Counters_kIsIterationInvariantRateRN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !71, !range !40, !noundef !41
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %8 = load i64, ptr %7, align 8
  tail call void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %9 = icmp eq i64 %8, 0
  %10 = select i1 %6, i1 true, i1 %9
  br i1 %10, label %14, label %11, !prof !42

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 1
  br label %20

14:                                               ; preds = %30, %1
  tail call void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %15 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #21
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 2
  store ptr %16, ptr %2, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %16, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  store i64 3, ptr %17, align 8, !tbaa !10
  %18 = getelementptr inbounds i8, ptr %2, i64 19
  store i8 0, ptr %18, align 1, !tbaa !13
  %19 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %15, ptr noundef nonnull align 8 dereferenceable(32) %2)
          to label %34 unwind label %52

20:                                               ; preds = %11, %30
  %21 = phi i64 [ %8, %11 ], [ %32, %30 ]
  %22 = load i8, ptr %12, align 8, !tbaa !24, !range !40, !noundef !41
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %24, !prof !42

24:                                               ; preds = %20
  %25 = load i64, ptr %7, align 8, !tbaa !43
  %26 = load i64, ptr %0, align 8, !tbaa !44
  %27 = sub i64 %25, %26
  %28 = load i64, ptr %13, align 8, !tbaa !45
  %29 = add i64 %27, %28
  br label %30

30:                                               ; preds = %20, %24
  %31 = phi i64 [ %29, %24 ], [ 0, %20 ]
  tail call void asm sideeffect "", "r|m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64 %31) #21, !srcloc !72
  %32 = add i64 %21, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %14, label %20, !prof !42

34:                                               ; preds = %14
  store double 1.000000e+00, ptr %19, align 8, !tbaa.struct !14
  %35 = getelementptr inbounds i8, ptr %19, i64 8
  store i32 5, ptr %35, align 8, !tbaa.struct !21
  %36 = getelementptr inbounds i8, ptr %19, i64 12
  store i32 1000, ptr %36, align 4, !tbaa.struct !22
  %37 = load ptr, ptr %2, align 8, !tbaa !23
  %38 = icmp eq ptr %37, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @_ZdlPv(ptr noundef %37) #22
  br label %40

40:                                               ; preds = %34, %39
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #21
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  store ptr %41, ptr %3, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %41, ptr noundef nonnull align 1 dereferenceable(3) @.str.7, i64 3, i1 false)
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  store i64 3, ptr %42, align 8, !tbaa !10
  %43 = getelementptr inbounds i8, ptr %3, i64 19
  store i8 0, ptr %43, align 1, !tbaa !13
  %44 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %15, ptr noundef nonnull align 8 dereferenceable(32) %3)
          to label %45 unwind label %58

45:                                               ; preds = %40
  store double 2.000000e+00, ptr %44, align 8, !tbaa.struct !14
  %46 = getelementptr inbounds i8, ptr %44, i64 8
  store i32 5, ptr %46, align 8, !tbaa.struct !21
  %47 = getelementptr inbounds i8, ptr %44, i64 12
  store i32 1000, ptr %47, align 4, !tbaa.struct !22
  %48 = load ptr, ptr %3, align 8, !tbaa !23
  %49 = icmp eq ptr %48, %41
  br i1 %49, label %51, label %50

50:                                               ; preds = %45
  call void @_ZdlPv(ptr noundef %48) #22
  br label %51

51:                                               ; preds = %45, %50
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  ret void

52:                                               ; preds = %14
  %53 = landingpad { ptr, i32 }
          cleanup
  %54 = load ptr, ptr %2, align 8, !tbaa !23
  %55 = icmp eq ptr %54, %16
  br i1 %55, label %57, label %56

56:                                               ; preds = %52
  call void @_ZdlPv(ptr noundef %54) #22
  br label %57

57:                                               ; preds = %56, %52
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  br label %64

58:                                               ; preds = %40
  %59 = landingpad { ptr, i32 }
          cleanup
  %60 = load ptr, ptr %3, align 8, !tbaa !23
  %61 = icmp eq ptr %60, %41
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  call void @_ZdlPv(ptr noundef %60) #22
  br label %63

63:                                               ; preds = %62, %58
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  br label %64

64:                                               ; preds = %63, %57
  %65 = phi { ptr, i32 } [ %59, %63 ], [ %53, %57 ]
  resume { ptr, i32 } %65
}

; Function Attrs: uwtable
define hidden void @_Z29CheckIsIterationInvariantRateRK7Results(ptr noundef nonnull align 8 dereferenceable(80) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %3 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %4 = tail call noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
  %5 = tail call noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
  %6 = tail call noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
  %7 = fmul double %5, %6
  %8 = tail call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
  %9 = fdiv double %4, %7
  %10 = fsub double %8, %9
  %11 = tail call double @llvm.fabs.f64(double %10)
  %12 = fmul double %9, 1.000000e-03
  %13 = fcmp uge double %11, %12
  br i1 %13, label %21, label %14

14:                                               ; preds = %1
  %15 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %23, !prof !53

17:                                               ; preds = %14
  %18 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %23

21:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %2, ptr noundef nonnull @.str.170, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z29CheckIsIterationInvariantRateRK7Results, i32 noundef 456)
  %22 = load ptr, ptr %2, align 8, !tbaa !56
  br label %23

23:                                               ; preds = %20, %17, %14, %21
  %24 = phi ptr [ %22, %21 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %14 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %17 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %20 ]
  %25 = load ptr, ptr %24, align 8, !tbaa !54
  %26 = icmp eq ptr %25, null
  br i1 %26, label %107, label %27

27:                                               ; preds = %23
  %28 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %25, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %29 unwind label %213

29:                                               ; preds = %27
  %30 = load ptr, ptr %24, align 8, !tbaa !54
  %31 = icmp eq ptr %30, null
  br i1 %31, label %107, label %32

32:                                               ; preds = %29
  %33 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %30, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %34 unwind label %213

34:                                               ; preds = %32
  %35 = load ptr, ptr %24, align 8, !tbaa !54
  %36 = icmp eq ptr %35, null
  br i1 %36, label %107, label %37

37:                                               ; preds = %34
  %38 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %35, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %39 unwind label %213

39:                                               ; preds = %37
  %40 = load ptr, ptr %24, align 8, !tbaa !54
  %41 = icmp eq ptr %40, null
  br i1 %41, label %107, label %42

42:                                               ; preds = %39
  %43 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %40, i32 noundef 456)
          to label %44 unwind label %215

44:                                               ; preds = %42
  %45 = load ptr, ptr %24, align 8, !tbaa !54
  %46 = icmp eq ptr %45, null
  br i1 %46, label %107, label %47

47:                                               ; preds = %44
  %48 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %45, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %49 unwind label %215

49:                                               ; preds = %47
  %50 = load ptr, ptr %24, align 8, !tbaa !54
  %51 = icmp eq ptr %50, null
  br i1 %51, label %107, label %52

52:                                               ; preds = %49
  %53 = load ptr, ptr %0, align 8, !tbaa !23
  %54 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %55 = load i64, ptr %54, align 8, !tbaa !10
  %56 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %50, ptr noundef %53, i64 noundef %55)
          to label %57 unwind label %215

57:                                               ; preds = %52
  %58 = load ptr, ptr %24, align 8, !tbaa !54
  %59 = icmp eq ptr %58, null
  br i1 %59, label %107, label %60

60:                                               ; preds = %57
  %61 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %58, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %62 unwind label %215

62:                                               ; preds = %60
  %63 = load ptr, ptr %24, align 8, !tbaa !54
  %64 = icmp eq ptr %63, null
  br i1 %64, label %107, label %65

65:                                               ; preds = %62
  %66 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %63, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %67 unwind label %215

67:                                               ; preds = %65
  %68 = load ptr, ptr %24, align 8, !tbaa !54
  %69 = icmp eq ptr %68, null
  br i1 %69, label %107, label %70

70:                                               ; preds = %67
  %71 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %68, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %72 unwind label %215

72:                                               ; preds = %70
  %73 = load ptr, ptr %24, align 8, !tbaa !54
  %74 = icmp eq ptr %73, null
  br i1 %74, label %107, label %75

75:                                               ; preds = %72
  %76 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %73, i32 noundef 456)
          to label %77 unwind label %217

77:                                               ; preds = %75
  %78 = load ptr, ptr %24, align 8, !tbaa !54
  %79 = icmp eq ptr %78, null
  br i1 %79, label %107, label %80

80:                                               ; preds = %77
  %81 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %78, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %82 unwind label %217

82:                                               ; preds = %80
  %83 = load ptr, ptr %24, align 8, !tbaa !54
  %84 = icmp eq ptr %83, null
  br i1 %84, label %107, label %85

85:                                               ; preds = %82
  %86 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %83, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %87 unwind label %217

87:                                               ; preds = %85
  %88 = load ptr, ptr %24, align 8, !tbaa !54
  %89 = icmp eq ptr %88, null
  br i1 %89, label %107, label %90

90:                                               ; preds = %87
  %91 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %88, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %92 unwind label %217

92:                                               ; preds = %90
  %93 = load ptr, ptr %24, align 8, !tbaa !54
  %94 = icmp eq ptr %93, null
  br i1 %94, label %107, label %95

95:                                               ; preds = %92
  %96 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %93, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %97 unwind label %217

97:                                               ; preds = %95
  %98 = load ptr, ptr %24, align 8, !tbaa !54
  %99 = icmp eq ptr %98, null
  br i1 %99, label %107, label %100

100:                                              ; preds = %97
  %101 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %98, ptr noundef nonnull @.str.6, i64 noundef 3)
          to label %102 unwind label %217

102:                                              ; preds = %100
  %103 = load ptr, ptr %24, align 8, !tbaa !54
  %104 = icmp eq ptr %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %103, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %107 unwind label %217

107:                                              ; preds = %62, %57, %49, %44, %39, %34, %29, %23, %77, %82, %67, %72, %92, %87, %97, %102, %105
  %108 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %109 unwind label %219

109:                                              ; preds = %107
  %110 = load ptr, ptr %24, align 8, !tbaa !54
  %111 = icmp eq ptr %110, null
  br i1 %111, label %179, label %112

112:                                              ; preds = %109
  %113 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %110, double noundef %108)
          to label %114 unwind label %219

114:                                              ; preds = %112
  %115 = load ptr, ptr %24, align 8, !tbaa !54
  %116 = icmp eq ptr %115, null
  br i1 %116, label %179, label %117

117:                                              ; preds = %114
  %118 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %115, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %119 unwind label %219

119:                                              ; preds = %117
  %120 = load ptr, ptr %24, align 8, !tbaa !54
  %121 = icmp eq ptr %120, null
  br i1 %121, label %179, label %122

122:                                              ; preds = %119
  %123 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %120, double noundef %9)
          to label %124 unwind label %221

124:                                              ; preds = %122
  %125 = load ptr, ptr %24, align 8, !tbaa !54
  %126 = icmp eq ptr %125, null
  br i1 %126, label %179, label %127

127:                                              ; preds = %124
  %128 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %125, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %129 unwind label %221

129:                                              ; preds = %127
  %130 = load ptr, ptr %24, align 8, !tbaa !54
  %131 = icmp eq ptr %130, null
  br i1 %131, label %179, label %132

132:                                              ; preds = %129
  %133 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %130, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %134 unwind label %221

134:                                              ; preds = %132
  %135 = load ptr, ptr %24, align 8, !tbaa !54
  %136 = icmp eq ptr %135, null
  br i1 %136, label %179, label %137

137:                                              ; preds = %134
  %138 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %135, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %139 unwind label %221

139:                                              ; preds = %137
  %140 = load ptr, ptr %24, align 8, !tbaa !54
  %141 = icmp eq ptr %140, null
  br i1 %141, label %179, label %142

142:                                              ; preds = %139
  %143 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %140, i32 noundef 456)
          to label %144 unwind label %223

144:                                              ; preds = %142
  %145 = load ptr, ptr %24, align 8, !tbaa !54
  %146 = icmp eq ptr %145, null
  br i1 %146, label %179, label %147

147:                                              ; preds = %144
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %145, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %149 unwind label %223

149:                                              ; preds = %147
  %150 = load ptr, ptr %24, align 8, !tbaa !54
  %151 = icmp eq ptr %150, null
  br i1 %151, label %179, label %152

152:                                              ; preds = %149
  %153 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %150, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %154 unwind label %223

154:                                              ; preds = %152
  %155 = load ptr, ptr %24, align 8, !tbaa !54
  %156 = icmp eq ptr %155, null
  br i1 %156, label %179, label %157

157:                                              ; preds = %154
  %158 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %155, double noundef %12)
          to label %159 unwind label %225

159:                                              ; preds = %157
  %160 = load ptr, ptr %24, align 8, !tbaa !54
  %161 = icmp eq ptr %160, null
  br i1 %161, label %179, label %162

162:                                              ; preds = %159
  %163 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %160, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %164 unwind label %225

164:                                              ; preds = %162
  %165 = load ptr, ptr %24, align 8, !tbaa !54
  %166 = icmp eq ptr %165, null
  br i1 %166, label %179, label %167

167:                                              ; preds = %164
  %168 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %165, double noundef 1.000000e-01)
          to label %169 unwind label %227

169:                                              ; preds = %167
  %170 = load ptr, ptr %24, align 8, !tbaa !54
  %171 = icmp eq ptr %170, null
  br i1 %171, label %179, label %172

172:                                              ; preds = %169
  %173 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %170, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %174 unwind label %227

174:                                              ; preds = %172
  %175 = load ptr, ptr %24, align 8, !tbaa !54
  %176 = icmp eq ptr %175, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %174
  %178 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %175, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %179 unwind label %227

179:                                              ; preds = %134, %129, %124, %119, %114, %109, %149, %154, %139, %144, %164, %159, %169, %174, %177
  %180 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %181 unwind label %229

181:                                              ; preds = %179
  %182 = load ptr, ptr %24, align 8, !tbaa !54
  %183 = icmp eq ptr %182, null
  br i1 %183, label %192, label %184

184:                                              ; preds = %181
  %185 = fsub double %180, %9
  %186 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %182, double noundef %185)
          to label %187 unwind label %229

187:                                              ; preds = %184
  %188 = load ptr, ptr %24, align 8, !tbaa !54
  %189 = icmp eq ptr %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  %191 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %188, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %192 unwind label %229

192:                                              ; preds = %181, %187, %190
  %193 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %194 unwind label %231

194:                                              ; preds = %192
  %195 = load ptr, ptr %24, align 8, !tbaa !54
  %196 = icmp eq ptr %195, null
  br i1 %196, label %211, label %197

197:                                              ; preds = %194
  %198 = fcmp ogt double %9, 1.000000e-05
  %199 = fcmp olt double %9, -1.000000e-05
  %200 = or i1 %198, %199
  %201 = select i1 %200, double %9, double 1.000000e-05
  %202 = fsub double %193, %9
  %203 = fdiv double %202, %201
  %204 = fmul double %203, 1.000000e+02
  %205 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %195, double noundef %204)
          to label %206 unwind label %231

206:                                              ; preds = %197
  %207 = load ptr, ptr %24, align 8, !tbaa !54
  %208 = icmp eq ptr %207, null
  br i1 %208, label %211, label %209

209:                                              ; preds = %206
  %210 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %207, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %211 unwind label %231

211:                                              ; preds = %194, %206, %209
  br i1 %13, label %212, label %233

212:                                              ; preds = %211
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %2) #23
  unreachable

213:                                              ; preds = %37, %32, %27
  %214 = landingpad { ptr, i32 }
          cleanup
  br label %440

215:                                              ; preds = %70, %65, %60, %52, %47, %42
  %216 = landingpad { ptr, i32 }
          cleanup
  br label %440

217:                                              ; preds = %105, %100, %95, %90, %85, %80, %75
  %218 = landingpad { ptr, i32 }
          cleanup
  br label %440

219:                                              ; preds = %117, %112, %107
  %220 = landingpad { ptr, i32 }
          cleanup
  br label %440

221:                                              ; preds = %137, %132, %127, %122
  %222 = landingpad { ptr, i32 }
          cleanup
  br label %440

223:                                              ; preds = %152, %147, %142
  %224 = landingpad { ptr, i32 }
          cleanup
  br label %440

225:                                              ; preds = %162, %157
  %226 = landingpad { ptr, i32 }
          cleanup
  br label %440

227:                                              ; preds = %177, %172, %167
  %228 = landingpad { ptr, i32 }
          cleanup
  br label %440

229:                                              ; preds = %190, %184, %179
  %230 = landingpad { ptr, i32 }
          cleanup
  br label %440

231:                                              ; preds = %209, %197, %192
  %232 = landingpad { ptr, i32 }
          cleanup
  br label %440

233:                                              ; preds = %211
  %234 = call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
  %235 = fmul double %4, 2.000000e+00
  %236 = fdiv double %235, %7
  %237 = fsub double %234, %236
  %238 = call double @llvm.fabs.f64(double %237)
  %239 = fmul double %236, 1.000000e-03
  %240 = fcmp uge double %238, %239
  br i1 %240, label %248, label %241

241:                                              ; preds = %233
  %242 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %244, label %250, !prof !53

244:                                              ; preds = %241
  %245 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %250, label %247

247:                                              ; preds = %244
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %250

248:                                              ; preds = %233
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull @.str.171, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z29CheckIsIterationInvariantRateRK7Results, i32 noundef 457)
  %249 = load ptr, ptr %3, align 8, !tbaa !56
  br label %250

250:                                              ; preds = %247, %244, %241, %248
  %251 = phi ptr [ %249, %248 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %241 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %244 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %247 ]
  %252 = load ptr, ptr %251, align 8, !tbaa !54
  %253 = icmp eq ptr %252, null
  br i1 %253, label %334, label %254

254:                                              ; preds = %250
  %255 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %252, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %256 unwind label %442

256:                                              ; preds = %254
  %257 = load ptr, ptr %251, align 8, !tbaa !54
  %258 = icmp eq ptr %257, null
  br i1 %258, label %334, label %259

259:                                              ; preds = %256
  %260 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %257, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %261 unwind label %442

261:                                              ; preds = %259
  %262 = load ptr, ptr %251, align 8, !tbaa !54
  %263 = icmp eq ptr %262, null
  br i1 %263, label %334, label %264

264:                                              ; preds = %261
  %265 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %262, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %266 unwind label %442

266:                                              ; preds = %264
  %267 = load ptr, ptr %251, align 8, !tbaa !54
  %268 = icmp eq ptr %267, null
  br i1 %268, label %334, label %269

269:                                              ; preds = %266
  %270 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %267, i32 noundef 457)
          to label %271 unwind label %444

271:                                              ; preds = %269
  %272 = load ptr, ptr %251, align 8, !tbaa !54
  %273 = icmp eq ptr %272, null
  br i1 %273, label %334, label %274

274:                                              ; preds = %271
  %275 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %272, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %276 unwind label %444

276:                                              ; preds = %274
  %277 = load ptr, ptr %251, align 8, !tbaa !54
  %278 = icmp eq ptr %277, null
  br i1 %278, label %334, label %279

279:                                              ; preds = %276
  %280 = load ptr, ptr %0, align 8, !tbaa !23
  %281 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %282 = load i64, ptr %281, align 8, !tbaa !10
  %283 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %277, ptr noundef %280, i64 noundef %282)
          to label %284 unwind label %444

284:                                              ; preds = %279
  %285 = load ptr, ptr %251, align 8, !tbaa !54
  %286 = icmp eq ptr %285, null
  br i1 %286, label %334, label %287

287:                                              ; preds = %284
  %288 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %285, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %289 unwind label %444

289:                                              ; preds = %287
  %290 = load ptr, ptr %251, align 8, !tbaa !54
  %291 = icmp eq ptr %290, null
  br i1 %291, label %334, label %292

292:                                              ; preds = %289
  %293 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %290, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %294 unwind label %444

294:                                              ; preds = %292
  %295 = load ptr, ptr %251, align 8, !tbaa !54
  %296 = icmp eq ptr %295, null
  br i1 %296, label %334, label %297

297:                                              ; preds = %294
  %298 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %295, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %299 unwind label %444

299:                                              ; preds = %297
  %300 = load ptr, ptr %251, align 8, !tbaa !54
  %301 = icmp eq ptr %300, null
  br i1 %301, label %334, label %302

302:                                              ; preds = %299
  %303 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %300, i32 noundef 457)
          to label %304 unwind label %446

304:                                              ; preds = %302
  %305 = load ptr, ptr %251, align 8, !tbaa !54
  %306 = icmp eq ptr %305, null
  br i1 %306, label %334, label %307

307:                                              ; preds = %304
  %308 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %305, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %309 unwind label %446

309:                                              ; preds = %307
  %310 = load ptr, ptr %251, align 8, !tbaa !54
  %311 = icmp eq ptr %310, null
  br i1 %311, label %334, label %312

312:                                              ; preds = %309
  %313 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %310, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %314 unwind label %446

314:                                              ; preds = %312
  %315 = load ptr, ptr %251, align 8, !tbaa !54
  %316 = icmp eq ptr %315, null
  br i1 %316, label %334, label %317

317:                                              ; preds = %314
  %318 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %315, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %319 unwind label %446

319:                                              ; preds = %317
  %320 = load ptr, ptr %251, align 8, !tbaa !54
  %321 = icmp eq ptr %320, null
  br i1 %321, label %334, label %322

322:                                              ; preds = %319
  %323 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %320, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %324 unwind label %446

324:                                              ; preds = %322
  %325 = load ptr, ptr %251, align 8, !tbaa !54
  %326 = icmp eq ptr %325, null
  br i1 %326, label %334, label %327

327:                                              ; preds = %324
  %328 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %325, ptr noundef nonnull @.str.7, i64 noundef 3)
          to label %329 unwind label %446

329:                                              ; preds = %327
  %330 = load ptr, ptr %251, align 8, !tbaa !54
  %331 = icmp eq ptr %330, null
  br i1 %331, label %334, label %332

332:                                              ; preds = %329
  %333 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %330, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %334 unwind label %446

334:                                              ; preds = %289, %284, %276, %271, %266, %261, %256, %250, %304, %309, %294, %299, %319, %314, %324, %329, %332
  %335 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %336 unwind label %448

336:                                              ; preds = %334
  %337 = load ptr, ptr %251, align 8, !tbaa !54
  %338 = icmp eq ptr %337, null
  br i1 %338, label %406, label %339

339:                                              ; preds = %336
  %340 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %337, double noundef %335)
          to label %341 unwind label %448

341:                                              ; preds = %339
  %342 = load ptr, ptr %251, align 8, !tbaa !54
  %343 = icmp eq ptr %342, null
  br i1 %343, label %406, label %344

344:                                              ; preds = %341
  %345 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %342, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %346 unwind label %448

346:                                              ; preds = %344
  %347 = load ptr, ptr %251, align 8, !tbaa !54
  %348 = icmp eq ptr %347, null
  br i1 %348, label %406, label %349

349:                                              ; preds = %346
  %350 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %347, double noundef %236)
          to label %351 unwind label %450

351:                                              ; preds = %349
  %352 = load ptr, ptr %251, align 8, !tbaa !54
  %353 = icmp eq ptr %352, null
  br i1 %353, label %406, label %354

354:                                              ; preds = %351
  %355 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %352, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %356 unwind label %450

356:                                              ; preds = %354
  %357 = load ptr, ptr %251, align 8, !tbaa !54
  %358 = icmp eq ptr %357, null
  br i1 %358, label %406, label %359

359:                                              ; preds = %356
  %360 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %357, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %361 unwind label %450

361:                                              ; preds = %359
  %362 = load ptr, ptr %251, align 8, !tbaa !54
  %363 = icmp eq ptr %362, null
  br i1 %363, label %406, label %364

364:                                              ; preds = %361
  %365 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %362, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %366 unwind label %450

366:                                              ; preds = %364
  %367 = load ptr, ptr %251, align 8, !tbaa !54
  %368 = icmp eq ptr %367, null
  br i1 %368, label %406, label %369

369:                                              ; preds = %366
  %370 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %367, i32 noundef 457)
          to label %371 unwind label %452

371:                                              ; preds = %369
  %372 = load ptr, ptr %251, align 8, !tbaa !54
  %373 = icmp eq ptr %372, null
  br i1 %373, label %406, label %374

374:                                              ; preds = %371
  %375 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %372, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %376 unwind label %452

376:                                              ; preds = %374
  %377 = load ptr, ptr %251, align 8, !tbaa !54
  %378 = icmp eq ptr %377, null
  br i1 %378, label %406, label %379

379:                                              ; preds = %376
  %380 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %377, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %381 unwind label %452

381:                                              ; preds = %379
  %382 = load ptr, ptr %251, align 8, !tbaa !54
  %383 = icmp eq ptr %382, null
  br i1 %383, label %406, label %384

384:                                              ; preds = %381
  %385 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %382, double noundef %239)
          to label %386 unwind label %454

386:                                              ; preds = %384
  %387 = load ptr, ptr %251, align 8, !tbaa !54
  %388 = icmp eq ptr %387, null
  br i1 %388, label %406, label %389

389:                                              ; preds = %386
  %390 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %387, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %391 unwind label %454

391:                                              ; preds = %389
  %392 = load ptr, ptr %251, align 8, !tbaa !54
  %393 = icmp eq ptr %392, null
  br i1 %393, label %406, label %394

394:                                              ; preds = %391
  %395 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %392, double noundef 1.000000e-01)
          to label %396 unwind label %456

396:                                              ; preds = %394
  %397 = load ptr, ptr %251, align 8, !tbaa !54
  %398 = icmp eq ptr %397, null
  br i1 %398, label %406, label %399

399:                                              ; preds = %396
  %400 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %397, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %401 unwind label %456

401:                                              ; preds = %399
  %402 = load ptr, ptr %251, align 8, !tbaa !54
  %403 = icmp eq ptr %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %401
  %405 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %402, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %406 unwind label %456

406:                                              ; preds = %361, %356, %351, %346, %341, %336, %376, %381, %366, %371, %391, %386, %396, %401, %404
  %407 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %408 unwind label %458

408:                                              ; preds = %406
  %409 = load ptr, ptr %251, align 8, !tbaa !54
  %410 = icmp eq ptr %409, null
  br i1 %410, label %419, label %411

411:                                              ; preds = %408
  %412 = fsub double %407, %236
  %413 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %409, double noundef %412)
          to label %414 unwind label %458

414:                                              ; preds = %411
  %415 = load ptr, ptr %251, align 8, !tbaa !54
  %416 = icmp eq ptr %415, null
  br i1 %416, label %419, label %417

417:                                              ; preds = %414
  %418 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %415, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %419 unwind label %458

419:                                              ; preds = %408, %414, %417
  %420 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %421 unwind label %460

421:                                              ; preds = %419
  %422 = load ptr, ptr %251, align 8, !tbaa !54
  %423 = icmp eq ptr %422, null
  br i1 %423, label %438, label %424

424:                                              ; preds = %421
  %425 = fcmp ogt double %236, 1.000000e-05
  %426 = fcmp olt double %236, -1.000000e-05
  %427 = or i1 %425, %426
  %428 = select i1 %427, double %236, double 1.000000e-05
  %429 = fsub double %420, %236
  %430 = fdiv double %429, %428
  %431 = fmul double %430, 1.000000e+02
  %432 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %422, double noundef %431)
          to label %433 unwind label %460

433:                                              ; preds = %424
  %434 = load ptr, ptr %251, align 8, !tbaa !54
  %435 = icmp eq ptr %434, null
  br i1 %435, label %438, label %436

436:                                              ; preds = %433
  %437 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %434, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %438 unwind label %460

438:                                              ; preds = %421, %433, %436
  br i1 %240, label %439, label %462

439:                                              ; preds = %438
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #23
  unreachable

440:                                              ; preds = %215, %219, %223, %227, %231, %229, %225, %221, %217, %213
  %441 = phi { ptr, i32 } [ %214, %213 ], [ %216, %215 ], [ %218, %217 ], [ %220, %219 ], [ %222, %221 ], [ %224, %223 ], [ %226, %225 ], [ %228, %227 ], [ %232, %231 ], [ %230, %229 ]
  br i1 %13, label %465, label %468

442:                                              ; preds = %264, %259, %254
  %443 = landingpad { ptr, i32 }
          cleanup
  br label %463

444:                                              ; preds = %297, %292, %287, %279, %274, %269
  %445 = landingpad { ptr, i32 }
          cleanup
  br label %463

446:                                              ; preds = %332, %327, %322, %317, %312, %307, %302
  %447 = landingpad { ptr, i32 }
          cleanup
  br label %463

448:                                              ; preds = %344, %339, %334
  %449 = landingpad { ptr, i32 }
          cleanup
  br label %463

450:                                              ; preds = %364, %359, %354, %349
  %451 = landingpad { ptr, i32 }
          cleanup
  br label %463

452:                                              ; preds = %379, %374, %369
  %453 = landingpad { ptr, i32 }
          cleanup
  br label %463

454:                                              ; preds = %389, %384
  %455 = landingpad { ptr, i32 }
          cleanup
  br label %463

456:                                              ; preds = %404, %399, %394
  %457 = landingpad { ptr, i32 }
          cleanup
  br label %463

458:                                              ; preds = %417, %411, %406
  %459 = landingpad { ptr, i32 }
          cleanup
  br label %463

460:                                              ; preds = %436, %424, %419
  %461 = landingpad { ptr, i32 }
          cleanup
  br label %463

462:                                              ; preds = %438
  ret void

463:                                              ; preds = %444, %448, %452, %456, %460, %458, %454, %450, %446, %442
  %464 = phi { ptr, i32 } [ %443, %442 ], [ %445, %444 ], [ %447, %446 ], [ %449, %448 ], [ %451, %450 ], [ %453, %452 ], [ %455, %454 ], [ %457, %456 ], [ %461, %460 ], [ %459, %458 ]
  br i1 %240, label %465, label %468

465:                                              ; preds = %463, %440
  %466 = phi ptr [ %2, %440 ], [ %3, %463 ]
  invoke void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %466) #23
          to label %467 unwind label %470

467:                                              ; preds = %465
  unreachable

468:                                              ; preds = %463, %440
  %469 = phi { ptr, i32 } [ %441, %440 ], [ %464, %463 ]
  resume { ptr, i32 } %469

470:                                              ; preds = %465
  %471 = landingpad { ptr, i32 }
          catch ptr null
  %472 = extractvalue { ptr, i32 } %471, 0
  call void @__clang_call_terminate(ptr %472) #24
  unreachable
}

; Function Attrs: uwtable
define hidden void @_Z25BM_Counters_AvgIterationsRN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  tail call void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  tail call void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %4 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #21
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 2
  store ptr %5, ptr %2, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %5, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  store i64 3, ptr %6, align 8, !tbaa !10
  %7 = getelementptr inbounds i8, ptr %2, i64 19
  store i8 0, ptr %7, align 1, !tbaa !13
  %8 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %4, ptr noundef nonnull align 8 dereferenceable(32) %2)
          to label %9 unwind label %27

9:                                                ; preds = %1
  store double 1.000000e+00, ptr %8, align 8, !tbaa.struct !14
  %10 = getelementptr inbounds i8, ptr %8, i64 8
  store i32 8, ptr %10, align 8, !tbaa.struct !21
  %11 = getelementptr inbounds i8, ptr %8, i64 12
  store i32 1000, ptr %11, align 4, !tbaa.struct !22
  %12 = load ptr, ptr %2, align 8, !tbaa !23
  %13 = icmp eq ptr %12, %5
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  call void @_ZdlPv(ptr noundef %12) #22
  br label %15

15:                                               ; preds = %9, %14
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #21
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  store ptr %16, ptr %3, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %16, ptr noundef nonnull align 1 dereferenceable(3) @.str.7, i64 3, i1 false)
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  store i64 3, ptr %17, align 8, !tbaa !10
  %18 = getelementptr inbounds i8, ptr %3, i64 19
  store i8 0, ptr %18, align 1, !tbaa !13
  %19 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %4, ptr noundef nonnull align 8 dereferenceable(32) %3)
          to label %20 unwind label %33

20:                                               ; preds = %15
  store double 2.000000e+00, ptr %19, align 8, !tbaa.struct !14
  %21 = getelementptr inbounds i8, ptr %19, i64 8
  store i32 8, ptr %21, align 8, !tbaa.struct !21
  %22 = getelementptr inbounds i8, ptr %19, i64 12
  store i32 1000, ptr %22, align 4, !tbaa.struct !22
  %23 = load ptr, ptr %3, align 8, !tbaa !23
  %24 = icmp eq ptr %23, %16
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  call void @_ZdlPv(ptr noundef %23) #22
  br label %26

26:                                               ; preds = %20, %25
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  ret void

27:                                               ; preds = %1
  %28 = landingpad { ptr, i32 }
          cleanup
  %29 = load ptr, ptr %2, align 8, !tbaa !23
  %30 = icmp eq ptr %29, %5
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  call void @_ZdlPv(ptr noundef %29) #22
  br label %32

32:                                               ; preds = %31, %27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  br label %39

33:                                               ; preds = %15
  %34 = landingpad { ptr, i32 }
          cleanup
  %35 = load ptr, ptr %3, align 8, !tbaa !23
  %36 = icmp eq ptr %35, %16
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  call void @_ZdlPv(ptr noundef %35) #22
  br label %38

38:                                               ; preds = %37, %33
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  br label %39

39:                                               ; preds = %38, %32
  %40 = phi { ptr, i32 } [ %34, %38 ], [ %28, %32 ]
  resume { ptr, i32 } %40
}

; Function Attrs: uwtable
define hidden void @_Z18CheckAvgIterationsRK7Results(ptr noundef nonnull align 8 dereferenceable(80) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %3 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %4 = tail call noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
  %5 = tail call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
  %6 = fdiv double 1.000000e+00, %4
  %7 = fsub double %5, %6
  %8 = tail call double @llvm.fabs.f64(double %7)
  %9 = fmul double %6, 1.000000e-03
  %10 = fcmp uge double %8, %9
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %20, !prof !53

14:                                               ; preds = %11
  %15 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %20

18:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %2, ptr noundef nonnull @.str.183, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z18CheckAvgIterationsRK7Results, i32 noundef 499)
  %19 = load ptr, ptr %2, align 8, !tbaa !56
  br label %20

20:                                               ; preds = %17, %14, %11, %18
  %21 = phi ptr [ %19, %18 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %11 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %14 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %17 ]
  %22 = load ptr, ptr %21, align 8, !tbaa !54
  %23 = icmp eq ptr %22, null
  br i1 %23, label %104, label %24

24:                                               ; preds = %20
  %25 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %22, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %26 unwind label %210

26:                                               ; preds = %24
  %27 = load ptr, ptr %21, align 8, !tbaa !54
  %28 = icmp eq ptr %27, null
  br i1 %28, label %104, label %29

29:                                               ; preds = %26
  %30 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %27, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %31 unwind label %210

31:                                               ; preds = %29
  %32 = load ptr, ptr %21, align 8, !tbaa !54
  %33 = icmp eq ptr %32, null
  br i1 %33, label %104, label %34

34:                                               ; preds = %31
  %35 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %32, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %36 unwind label %210

36:                                               ; preds = %34
  %37 = load ptr, ptr %21, align 8, !tbaa !54
  %38 = icmp eq ptr %37, null
  br i1 %38, label %104, label %39

39:                                               ; preds = %36
  %40 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %37, i32 noundef 499)
          to label %41 unwind label %212

41:                                               ; preds = %39
  %42 = load ptr, ptr %21, align 8, !tbaa !54
  %43 = icmp eq ptr %42, null
  br i1 %43, label %104, label %44

44:                                               ; preds = %41
  %45 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %42, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %46 unwind label %212

46:                                               ; preds = %44
  %47 = load ptr, ptr %21, align 8, !tbaa !54
  %48 = icmp eq ptr %47, null
  br i1 %48, label %104, label %49

49:                                               ; preds = %46
  %50 = load ptr, ptr %0, align 8, !tbaa !23
  %51 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %52 = load i64, ptr %51, align 8, !tbaa !10
  %53 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %47, ptr noundef %50, i64 noundef %52)
          to label %54 unwind label %212

54:                                               ; preds = %49
  %55 = load ptr, ptr %21, align 8, !tbaa !54
  %56 = icmp eq ptr %55, null
  br i1 %56, label %104, label %57

57:                                               ; preds = %54
  %58 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %55, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %59 unwind label %212

59:                                               ; preds = %57
  %60 = load ptr, ptr %21, align 8, !tbaa !54
  %61 = icmp eq ptr %60, null
  br i1 %61, label %104, label %62

62:                                               ; preds = %59
  %63 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %60, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %64 unwind label %212

64:                                               ; preds = %62
  %65 = load ptr, ptr %21, align 8, !tbaa !54
  %66 = icmp eq ptr %65, null
  br i1 %66, label %104, label %67

67:                                               ; preds = %64
  %68 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %65, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %69 unwind label %212

69:                                               ; preds = %67
  %70 = load ptr, ptr %21, align 8, !tbaa !54
  %71 = icmp eq ptr %70, null
  br i1 %71, label %104, label %72

72:                                               ; preds = %69
  %73 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %70, i32 noundef 499)
          to label %74 unwind label %214

74:                                               ; preds = %72
  %75 = load ptr, ptr %21, align 8, !tbaa !54
  %76 = icmp eq ptr %75, null
  br i1 %76, label %104, label %77

77:                                               ; preds = %74
  %78 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %75, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %79 unwind label %214

79:                                               ; preds = %77
  %80 = load ptr, ptr %21, align 8, !tbaa !54
  %81 = icmp eq ptr %80, null
  br i1 %81, label %104, label %82

82:                                               ; preds = %79
  %83 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %80, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %84 unwind label %214

84:                                               ; preds = %82
  %85 = load ptr, ptr %21, align 8, !tbaa !54
  %86 = icmp eq ptr %85, null
  br i1 %86, label %104, label %87

87:                                               ; preds = %84
  %88 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %85, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %89 unwind label %214

89:                                               ; preds = %87
  %90 = load ptr, ptr %21, align 8, !tbaa !54
  %91 = icmp eq ptr %90, null
  br i1 %91, label %104, label %92

92:                                               ; preds = %89
  %93 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %90, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %94 unwind label %214

94:                                               ; preds = %92
  %95 = load ptr, ptr %21, align 8, !tbaa !54
  %96 = icmp eq ptr %95, null
  br i1 %96, label %104, label %97

97:                                               ; preds = %94
  %98 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %95, ptr noundef nonnull @.str.6, i64 noundef 3)
          to label %99 unwind label %214

99:                                               ; preds = %97
  %100 = load ptr, ptr %21, align 8, !tbaa !54
  %101 = icmp eq ptr %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %100, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %104 unwind label %214

104:                                              ; preds = %59, %54, %46, %41, %36, %31, %26, %20, %74, %79, %64, %69, %89, %84, %94, %99, %102
  %105 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %106 unwind label %216

106:                                              ; preds = %104
  %107 = load ptr, ptr %21, align 8, !tbaa !54
  %108 = icmp eq ptr %107, null
  br i1 %108, label %176, label %109

109:                                              ; preds = %106
  %110 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %107, double noundef %105)
          to label %111 unwind label %216

111:                                              ; preds = %109
  %112 = load ptr, ptr %21, align 8, !tbaa !54
  %113 = icmp eq ptr %112, null
  br i1 %113, label %176, label %114

114:                                              ; preds = %111
  %115 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %112, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %116 unwind label %216

116:                                              ; preds = %114
  %117 = load ptr, ptr %21, align 8, !tbaa !54
  %118 = icmp eq ptr %117, null
  br i1 %118, label %176, label %119

119:                                              ; preds = %116
  %120 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %117, double noundef %6)
          to label %121 unwind label %218

121:                                              ; preds = %119
  %122 = load ptr, ptr %21, align 8, !tbaa !54
  %123 = icmp eq ptr %122, null
  br i1 %123, label %176, label %124

124:                                              ; preds = %121
  %125 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %122, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %126 unwind label %218

126:                                              ; preds = %124
  %127 = load ptr, ptr %21, align 8, !tbaa !54
  %128 = icmp eq ptr %127, null
  br i1 %128, label %176, label %129

129:                                              ; preds = %126
  %130 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %127, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %131 unwind label %218

131:                                              ; preds = %129
  %132 = load ptr, ptr %21, align 8, !tbaa !54
  %133 = icmp eq ptr %132, null
  br i1 %133, label %176, label %134

134:                                              ; preds = %131
  %135 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %132, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %136 unwind label %218

136:                                              ; preds = %134
  %137 = load ptr, ptr %21, align 8, !tbaa !54
  %138 = icmp eq ptr %137, null
  br i1 %138, label %176, label %139

139:                                              ; preds = %136
  %140 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %137, i32 noundef 499)
          to label %141 unwind label %220

141:                                              ; preds = %139
  %142 = load ptr, ptr %21, align 8, !tbaa !54
  %143 = icmp eq ptr %142, null
  br i1 %143, label %176, label %144

144:                                              ; preds = %141
  %145 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %142, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %146 unwind label %220

146:                                              ; preds = %144
  %147 = load ptr, ptr %21, align 8, !tbaa !54
  %148 = icmp eq ptr %147, null
  br i1 %148, label %176, label %149

149:                                              ; preds = %146
  %150 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %147, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %151 unwind label %220

151:                                              ; preds = %149
  %152 = load ptr, ptr %21, align 8, !tbaa !54
  %153 = icmp eq ptr %152, null
  br i1 %153, label %176, label %154

154:                                              ; preds = %151
  %155 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %152, double noundef %9)
          to label %156 unwind label %222

156:                                              ; preds = %154
  %157 = load ptr, ptr %21, align 8, !tbaa !54
  %158 = icmp eq ptr %157, null
  br i1 %158, label %176, label %159

159:                                              ; preds = %156
  %160 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %157, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %161 unwind label %222

161:                                              ; preds = %159
  %162 = load ptr, ptr %21, align 8, !tbaa !54
  %163 = icmp eq ptr %162, null
  br i1 %163, label %176, label %164

164:                                              ; preds = %161
  %165 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %162, double noundef 1.000000e-01)
          to label %166 unwind label %224

166:                                              ; preds = %164
  %167 = load ptr, ptr %21, align 8, !tbaa !54
  %168 = icmp eq ptr %167, null
  br i1 %168, label %176, label %169

169:                                              ; preds = %166
  %170 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %167, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %171 unwind label %224

171:                                              ; preds = %169
  %172 = load ptr, ptr %21, align 8, !tbaa !54
  %173 = icmp eq ptr %172, null
  br i1 %173, label %176, label %174

174:                                              ; preds = %171
  %175 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %172, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %176 unwind label %224

176:                                              ; preds = %131, %126, %121, %116, %111, %106, %146, %151, %136, %141, %161, %156, %166, %171, %174
  %177 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %178 unwind label %226

178:                                              ; preds = %176
  %179 = load ptr, ptr %21, align 8, !tbaa !54
  %180 = icmp eq ptr %179, null
  br i1 %180, label %189, label %181

181:                                              ; preds = %178
  %182 = fsub double %177, %6
  %183 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %179, double noundef %182)
          to label %184 unwind label %226

184:                                              ; preds = %181
  %185 = load ptr, ptr %21, align 8, !tbaa !54
  %186 = icmp eq ptr %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %184
  %188 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %185, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %189 unwind label %226

189:                                              ; preds = %178, %184, %187
  %190 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %191 unwind label %228

191:                                              ; preds = %189
  %192 = load ptr, ptr %21, align 8, !tbaa !54
  %193 = icmp eq ptr %192, null
  br i1 %193, label %208, label %194

194:                                              ; preds = %191
  %195 = fcmp ogt double %6, 1.000000e-05
  %196 = fcmp olt double %6, -1.000000e-05
  %197 = or i1 %195, %196
  %198 = select i1 %197, double %6, double 1.000000e-05
  %199 = fsub double %190, %6
  %200 = fdiv double %199, %198
  %201 = fmul double %200, 1.000000e+02
  %202 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %192, double noundef %201)
          to label %203 unwind label %228

203:                                              ; preds = %194
  %204 = load ptr, ptr %21, align 8, !tbaa !54
  %205 = icmp eq ptr %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %203
  %207 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %204, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %208 unwind label %228

208:                                              ; preds = %191, %203, %206
  br i1 %10, label %209, label %230

209:                                              ; preds = %208
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %2) #23
  unreachable

210:                                              ; preds = %34, %29, %24
  %211 = landingpad { ptr, i32 }
          cleanup
  br label %436

212:                                              ; preds = %67, %62, %57, %49, %44, %39
  %213 = landingpad { ptr, i32 }
          cleanup
  br label %436

214:                                              ; preds = %102, %97, %92, %87, %82, %77, %72
  %215 = landingpad { ptr, i32 }
          cleanup
  br label %436

216:                                              ; preds = %114, %109, %104
  %217 = landingpad { ptr, i32 }
          cleanup
  br label %436

218:                                              ; preds = %134, %129, %124, %119
  %219 = landingpad { ptr, i32 }
          cleanup
  br label %436

220:                                              ; preds = %149, %144, %139
  %221 = landingpad { ptr, i32 }
          cleanup
  br label %436

222:                                              ; preds = %159, %154
  %223 = landingpad { ptr, i32 }
          cleanup
  br label %436

224:                                              ; preds = %174, %169, %164
  %225 = landingpad { ptr, i32 }
          cleanup
  br label %436

226:                                              ; preds = %187, %181, %176
  %227 = landingpad { ptr, i32 }
          cleanup
  br label %436

228:                                              ; preds = %206, %194, %189
  %229 = landingpad { ptr, i32 }
          cleanup
  br label %436

230:                                              ; preds = %208
  %231 = call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
  %232 = fdiv double 2.000000e+00, %4
  %233 = fsub double %231, %232
  %234 = call double @llvm.fabs.f64(double %233)
  %235 = fmul double %232, 1.000000e-03
  %236 = fcmp uge double %234, %235
  br i1 %236, label %244, label %237

237:                                              ; preds = %230
  %238 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %240, label %246, !prof !53

240:                                              ; preds = %237
  %241 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %246, label %243

243:                                              ; preds = %240
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %246

244:                                              ; preds = %230
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull @.str.184, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z18CheckAvgIterationsRK7Results, i32 noundef 500)
  %245 = load ptr, ptr %3, align 8, !tbaa !56
  br label %246

246:                                              ; preds = %243, %240, %237, %244
  %247 = phi ptr [ %245, %244 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %237 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %240 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %243 ]
  %248 = load ptr, ptr %247, align 8, !tbaa !54
  %249 = icmp eq ptr %248, null
  br i1 %249, label %330, label %250

250:                                              ; preds = %246
  %251 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %248, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %252 unwind label %438

252:                                              ; preds = %250
  %253 = load ptr, ptr %247, align 8, !tbaa !54
  %254 = icmp eq ptr %253, null
  br i1 %254, label %330, label %255

255:                                              ; preds = %252
  %256 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %253, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %257 unwind label %438

257:                                              ; preds = %255
  %258 = load ptr, ptr %247, align 8, !tbaa !54
  %259 = icmp eq ptr %258, null
  br i1 %259, label %330, label %260

260:                                              ; preds = %257
  %261 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %258, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %262 unwind label %438

262:                                              ; preds = %260
  %263 = load ptr, ptr %247, align 8, !tbaa !54
  %264 = icmp eq ptr %263, null
  br i1 %264, label %330, label %265

265:                                              ; preds = %262
  %266 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %263, i32 noundef 500)
          to label %267 unwind label %440

267:                                              ; preds = %265
  %268 = load ptr, ptr %247, align 8, !tbaa !54
  %269 = icmp eq ptr %268, null
  br i1 %269, label %330, label %270

270:                                              ; preds = %267
  %271 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %268, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %272 unwind label %440

272:                                              ; preds = %270
  %273 = load ptr, ptr %247, align 8, !tbaa !54
  %274 = icmp eq ptr %273, null
  br i1 %274, label %330, label %275

275:                                              ; preds = %272
  %276 = load ptr, ptr %0, align 8, !tbaa !23
  %277 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %278 = load i64, ptr %277, align 8, !tbaa !10
  %279 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %273, ptr noundef %276, i64 noundef %278)
          to label %280 unwind label %440

280:                                              ; preds = %275
  %281 = load ptr, ptr %247, align 8, !tbaa !54
  %282 = icmp eq ptr %281, null
  br i1 %282, label %330, label %283

283:                                              ; preds = %280
  %284 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %281, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %285 unwind label %440

285:                                              ; preds = %283
  %286 = load ptr, ptr %247, align 8, !tbaa !54
  %287 = icmp eq ptr %286, null
  br i1 %287, label %330, label %288

288:                                              ; preds = %285
  %289 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %286, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %290 unwind label %440

290:                                              ; preds = %288
  %291 = load ptr, ptr %247, align 8, !tbaa !54
  %292 = icmp eq ptr %291, null
  br i1 %292, label %330, label %293

293:                                              ; preds = %290
  %294 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %291, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %295 unwind label %440

295:                                              ; preds = %293
  %296 = load ptr, ptr %247, align 8, !tbaa !54
  %297 = icmp eq ptr %296, null
  br i1 %297, label %330, label %298

298:                                              ; preds = %295
  %299 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %296, i32 noundef 500)
          to label %300 unwind label %442

300:                                              ; preds = %298
  %301 = load ptr, ptr %247, align 8, !tbaa !54
  %302 = icmp eq ptr %301, null
  br i1 %302, label %330, label %303

303:                                              ; preds = %300
  %304 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %301, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %305 unwind label %442

305:                                              ; preds = %303
  %306 = load ptr, ptr %247, align 8, !tbaa !54
  %307 = icmp eq ptr %306, null
  br i1 %307, label %330, label %308

308:                                              ; preds = %305
  %309 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %306, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %310 unwind label %442

310:                                              ; preds = %308
  %311 = load ptr, ptr %247, align 8, !tbaa !54
  %312 = icmp eq ptr %311, null
  br i1 %312, label %330, label %313

313:                                              ; preds = %310
  %314 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %311, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %315 unwind label %442

315:                                              ; preds = %313
  %316 = load ptr, ptr %247, align 8, !tbaa !54
  %317 = icmp eq ptr %316, null
  br i1 %317, label %330, label %318

318:                                              ; preds = %315
  %319 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %316, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %320 unwind label %442

320:                                              ; preds = %318
  %321 = load ptr, ptr %247, align 8, !tbaa !54
  %322 = icmp eq ptr %321, null
  br i1 %322, label %330, label %323

323:                                              ; preds = %320
  %324 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %321, ptr noundef nonnull @.str.7, i64 noundef 3)
          to label %325 unwind label %442

325:                                              ; preds = %323
  %326 = load ptr, ptr %247, align 8, !tbaa !54
  %327 = icmp eq ptr %326, null
  br i1 %327, label %330, label %328

328:                                              ; preds = %325
  %329 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %326, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %330 unwind label %442

330:                                              ; preds = %285, %280, %272, %267, %262, %257, %252, %246, %300, %305, %290, %295, %315, %310, %320, %325, %328
  %331 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %332 unwind label %444

332:                                              ; preds = %330
  %333 = load ptr, ptr %247, align 8, !tbaa !54
  %334 = icmp eq ptr %333, null
  br i1 %334, label %402, label %335

335:                                              ; preds = %332
  %336 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %333, double noundef %331)
          to label %337 unwind label %444

337:                                              ; preds = %335
  %338 = load ptr, ptr %247, align 8, !tbaa !54
  %339 = icmp eq ptr %338, null
  br i1 %339, label %402, label %340

340:                                              ; preds = %337
  %341 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %338, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %342 unwind label %444

342:                                              ; preds = %340
  %343 = load ptr, ptr %247, align 8, !tbaa !54
  %344 = icmp eq ptr %343, null
  br i1 %344, label %402, label %345

345:                                              ; preds = %342
  %346 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %343, double noundef %232)
          to label %347 unwind label %446

347:                                              ; preds = %345
  %348 = load ptr, ptr %247, align 8, !tbaa !54
  %349 = icmp eq ptr %348, null
  br i1 %349, label %402, label %350

350:                                              ; preds = %347
  %351 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %348, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %352 unwind label %446

352:                                              ; preds = %350
  %353 = load ptr, ptr %247, align 8, !tbaa !54
  %354 = icmp eq ptr %353, null
  br i1 %354, label %402, label %355

355:                                              ; preds = %352
  %356 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %353, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %357 unwind label %446

357:                                              ; preds = %355
  %358 = load ptr, ptr %247, align 8, !tbaa !54
  %359 = icmp eq ptr %358, null
  br i1 %359, label %402, label %360

360:                                              ; preds = %357
  %361 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %358, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %362 unwind label %446

362:                                              ; preds = %360
  %363 = load ptr, ptr %247, align 8, !tbaa !54
  %364 = icmp eq ptr %363, null
  br i1 %364, label %402, label %365

365:                                              ; preds = %362
  %366 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %363, i32 noundef 500)
          to label %367 unwind label %448

367:                                              ; preds = %365
  %368 = load ptr, ptr %247, align 8, !tbaa !54
  %369 = icmp eq ptr %368, null
  br i1 %369, label %402, label %370

370:                                              ; preds = %367
  %371 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %368, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %372 unwind label %448

372:                                              ; preds = %370
  %373 = load ptr, ptr %247, align 8, !tbaa !54
  %374 = icmp eq ptr %373, null
  br i1 %374, label %402, label %375

375:                                              ; preds = %372
  %376 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %373, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %377 unwind label %448

377:                                              ; preds = %375
  %378 = load ptr, ptr %247, align 8, !tbaa !54
  %379 = icmp eq ptr %378, null
  br i1 %379, label %402, label %380

380:                                              ; preds = %377
  %381 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %378, double noundef %235)
          to label %382 unwind label %450

382:                                              ; preds = %380
  %383 = load ptr, ptr %247, align 8, !tbaa !54
  %384 = icmp eq ptr %383, null
  br i1 %384, label %402, label %385

385:                                              ; preds = %382
  %386 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %383, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %387 unwind label %450

387:                                              ; preds = %385
  %388 = load ptr, ptr %247, align 8, !tbaa !54
  %389 = icmp eq ptr %388, null
  br i1 %389, label %402, label %390

390:                                              ; preds = %387
  %391 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %388, double noundef 1.000000e-01)
          to label %392 unwind label %452

392:                                              ; preds = %390
  %393 = load ptr, ptr %247, align 8, !tbaa !54
  %394 = icmp eq ptr %393, null
  br i1 %394, label %402, label %395

395:                                              ; preds = %392
  %396 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %393, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %397 unwind label %452

397:                                              ; preds = %395
  %398 = load ptr, ptr %247, align 8, !tbaa !54
  %399 = icmp eq ptr %398, null
  br i1 %399, label %402, label %400

400:                                              ; preds = %397
  %401 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %398, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %402 unwind label %452

402:                                              ; preds = %357, %352, %347, %342, %337, %332, %372, %377, %362, %367, %387, %382, %392, %397, %400
  %403 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %404 unwind label %454

404:                                              ; preds = %402
  %405 = load ptr, ptr %247, align 8, !tbaa !54
  %406 = icmp eq ptr %405, null
  br i1 %406, label %415, label %407

407:                                              ; preds = %404
  %408 = fsub double %403, %232
  %409 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %405, double noundef %408)
          to label %410 unwind label %454

410:                                              ; preds = %407
  %411 = load ptr, ptr %247, align 8, !tbaa !54
  %412 = icmp eq ptr %411, null
  br i1 %412, label %415, label %413

413:                                              ; preds = %410
  %414 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %411, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %415 unwind label %454

415:                                              ; preds = %404, %410, %413
  %416 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %417 unwind label %456

417:                                              ; preds = %415
  %418 = load ptr, ptr %247, align 8, !tbaa !54
  %419 = icmp eq ptr %418, null
  br i1 %419, label %434, label %420

420:                                              ; preds = %417
  %421 = fcmp ogt double %232, 1.000000e-05
  %422 = fcmp olt double %232, -1.000000e-05
  %423 = or i1 %421, %422
  %424 = select i1 %423, double %232, double 1.000000e-05
  %425 = fsub double %416, %232
  %426 = fdiv double %425, %424
  %427 = fmul double %426, 1.000000e+02
  %428 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %418, double noundef %427)
          to label %429 unwind label %456

429:                                              ; preds = %420
  %430 = load ptr, ptr %247, align 8, !tbaa !54
  %431 = icmp eq ptr %430, null
  br i1 %431, label %434, label %432

432:                                              ; preds = %429
  %433 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %430, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %434 unwind label %456

434:                                              ; preds = %417, %429, %432
  br i1 %236, label %435, label %458

435:                                              ; preds = %434
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #23
  unreachable

436:                                              ; preds = %212, %216, %220, %224, %228, %226, %222, %218, %214, %210
  %437 = phi { ptr, i32 } [ %211, %210 ], [ %213, %212 ], [ %215, %214 ], [ %217, %216 ], [ %219, %218 ], [ %221, %220 ], [ %223, %222 ], [ %225, %224 ], [ %229, %228 ], [ %227, %226 ]
  br i1 %10, label %461, label %464

438:                                              ; preds = %260, %255, %250
  %439 = landingpad { ptr, i32 }
          cleanup
  br label %459

440:                                              ; preds = %293, %288, %283, %275, %270, %265
  %441 = landingpad { ptr, i32 }
          cleanup
  br label %459

442:                                              ; preds = %328, %323, %318, %313, %308, %303, %298
  %443 = landingpad { ptr, i32 }
          cleanup
  br label %459

444:                                              ; preds = %340, %335, %330
  %445 = landingpad { ptr, i32 }
          cleanup
  br label %459

446:                                              ; preds = %360, %355, %350, %345
  %447 = landingpad { ptr, i32 }
          cleanup
  br label %459

448:                                              ; preds = %375, %370, %365
  %449 = landingpad { ptr, i32 }
          cleanup
  br label %459

450:                                              ; preds = %385, %380
  %451 = landingpad { ptr, i32 }
          cleanup
  br label %459

452:                                              ; preds = %400, %395, %390
  %453 = landingpad { ptr, i32 }
          cleanup
  br label %459

454:                                              ; preds = %413, %407, %402
  %455 = landingpad { ptr, i32 }
          cleanup
  br label %459

456:                                              ; preds = %432, %420, %415
  %457 = landingpad { ptr, i32 }
          cleanup
  br label %459

458:                                              ; preds = %434
  ret void

459:                                              ; preds = %440, %444, %448, %452, %456, %454, %450, %446, %442, %438
  %460 = phi { ptr, i32 } [ %439, %438 ], [ %441, %440 ], [ %443, %442 ], [ %445, %444 ], [ %447, %446 ], [ %449, %448 ], [ %451, %450 ], [ %453, %452 ], [ %457, %456 ], [ %455, %454 ]
  br i1 %236, label %461, label %464

461:                                              ; preds = %459, %436
  %462 = phi ptr [ %2, %436 ], [ %3, %459 ]
  invoke void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %462) #23
          to label %463 unwind label %466

463:                                              ; preds = %461
  unreachable

464:                                              ; preds = %459, %436
  %465 = phi { ptr, i32 } [ %437, %436 ], [ %460, %459 ]
  resume { ptr, i32 } %465

466:                                              ; preds = %461
  %467 = landingpad { ptr, i32 }
          catch ptr null
  %468 = extractvalue { ptr, i32 } %467, 0
  call void @__clang_call_terminate(ptr %468) #24
  unreachable
}

; Function Attrs: uwtable
define hidden void @_Z30BM_Counters_kAvgIterationsRateRN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !71, !range !40, !noundef !41
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %8 = load i64, ptr %7, align 8
  tail call void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %9 = icmp eq i64 %8, 0
  %10 = select i1 %6, i1 true, i1 %9
  br i1 %10, label %14, label %11, !prof !42

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 1
  br label %20

14:                                               ; preds = %30, %1
  tail call void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
  %15 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #21
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 2
  store ptr %16, ptr %2, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %16, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  store i64 3, ptr %17, align 8, !tbaa !10
  %18 = getelementptr inbounds i8, ptr %2, i64 19
  store i8 0, ptr %18, align 1, !tbaa !13
  %19 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %15, ptr noundef nonnull align 8 dereferenceable(32) %2)
          to label %34 unwind label %52

20:                                               ; preds = %11, %30
  %21 = phi i64 [ %8, %11 ], [ %32, %30 ]
  %22 = load i8, ptr %12, align 8, !tbaa !24, !range !40, !noundef !41
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %24, !prof !42

24:                                               ; preds = %20
  %25 = load i64, ptr %7, align 8, !tbaa !43
  %26 = load i64, ptr %0, align 8, !tbaa !44
  %27 = sub i64 %25, %26
  %28 = load i64, ptr %13, align 8, !tbaa !45
  %29 = add i64 %27, %28
  br label %30

30:                                               ; preds = %20, %24
  %31 = phi i64 [ %29, %24 ], [ 0, %20 ]
  tail call void asm sideeffect "", "r|m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64 %31) #21, !srcloc !72
  %32 = add i64 %21, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %14, label %20, !prof !42

34:                                               ; preds = %14
  store double 1.000000e+00, ptr %19, align 8, !tbaa.struct !14
  %35 = getelementptr inbounds i8, ptr %19, i64 8
  store i32 9, ptr %35, align 8, !tbaa.struct !21
  %36 = getelementptr inbounds i8, ptr %19, i64 12
  store i32 1000, ptr %36, align 4, !tbaa.struct !22
  %37 = load ptr, ptr %2, align 8, !tbaa !23
  %38 = icmp eq ptr %37, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @_ZdlPv(ptr noundef %37) #22
  br label %40

40:                                               ; preds = %34, %39
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #21
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  store ptr %41, ptr %3, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %41, ptr noundef nonnull align 1 dereferenceable(3) @.str.7, i64 3, i1 false)
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  store i64 3, ptr %42, align 8, !tbaa !10
  %43 = getelementptr inbounds i8, ptr %3, i64 19
  store i8 0, ptr %43, align 1, !tbaa !13
  %44 = invoke noundef nonnull align 8 dereferenceable(16) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEEixEOS5_(ptr noundef nonnull align 8 dereferenceable(48) %15, ptr noundef nonnull align 8 dereferenceable(32) %3)
          to label %45 unwind label %58

45:                                               ; preds = %40
  store double 2.000000e+00, ptr %44, align 8, !tbaa.struct !14
  %46 = getelementptr inbounds i8, ptr %44, i64 8
  store i32 9, ptr %46, align 8, !tbaa.struct !21
  %47 = getelementptr inbounds i8, ptr %44, i64 12
  store i32 1000, ptr %47, align 4, !tbaa.struct !22
  %48 = load ptr, ptr %3, align 8, !tbaa !23
  %49 = icmp eq ptr %48, %41
  br i1 %49, label %51, label %50

50:                                               ; preds = %45
  call void @_ZdlPv(ptr noundef %48) #22
  br label %51

51:                                               ; preds = %45, %50
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  ret void

52:                                               ; preds = %14
  %53 = landingpad { ptr, i32 }
          cleanup
  %54 = load ptr, ptr %2, align 8, !tbaa !23
  %55 = icmp eq ptr %54, %16
  br i1 %55, label %57, label %56

56:                                               ; preds = %52
  call void @_ZdlPv(ptr noundef %54) #22
  br label %57

57:                                               ; preds = %56, %52
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  br label %64

58:                                               ; preds = %40
  %59 = landingpad { ptr, i32 }
          cleanup
  %60 = load ptr, ptr %3, align 8, !tbaa !23
  %61 = icmp eq ptr %60, %41
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  call void @_ZdlPv(ptr noundef %60) #22
  br label %63

63:                                               ; preds = %62, %58
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  br label %64

64:                                               ; preds = %63, %57
  %65 = phi { ptr, i32 } [ %59, %63 ], [ %53, %57 ]
  resume { ptr, i32 } %65
}

; Function Attrs: uwtable
define hidden void @_Z22CheckAvgIterationsRateRK7Results(ptr noundef nonnull align 8 dereferenceable(80) %0) #4 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %3 = alloca %"class.benchmark::internal::CheckHandler", align 8
  %4 = tail call noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
  %5 = tail call noundef double @_ZNK7Results13NumIterationsEv(ptr noundef nonnull align 8 dereferenceable(80) %0)
  %6 = tail call noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80) %0, i32 noundef 0)
  %7 = fmul double %5, %6
  %8 = tail call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
  %9 = fdiv double 1.000000e+00, %4
  %10 = fdiv double %9, %7
  %11 = fsub double %8, %10
  %12 = tail call double @llvm.fabs.f64(double %11)
  %13 = fmul double %10, 1.000000e-03
  %14 = fcmp uge double %12, %13
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %24, !prof !53

18:                                               ; preds = %15
  %19 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %24

22:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %2, ptr noundef nonnull @.str.196, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z22CheckAvgIterationsRateRK7Results, i32 noundef 545)
  %23 = load ptr, ptr %2, align 8, !tbaa !56
  br label %24

24:                                               ; preds = %21, %18, %15, %22
  %25 = phi ptr [ %23, %22 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %15 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %18 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %21 ]
  %26 = load ptr, ptr %25, align 8, !tbaa !54
  %27 = icmp eq ptr %26, null
  br i1 %27, label %108, label %28

28:                                               ; preds = %24
  %29 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %26, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %30 unwind label %214

30:                                               ; preds = %28
  %31 = load ptr, ptr %25, align 8, !tbaa !54
  %32 = icmp eq ptr %31, null
  br i1 %32, label %108, label %33

33:                                               ; preds = %30
  %34 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %31, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %35 unwind label %214

35:                                               ; preds = %33
  %36 = load ptr, ptr %25, align 8, !tbaa !54
  %37 = icmp eq ptr %36, null
  br i1 %37, label %108, label %38

38:                                               ; preds = %35
  %39 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %36, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %40 unwind label %214

40:                                               ; preds = %38
  %41 = load ptr, ptr %25, align 8, !tbaa !54
  %42 = icmp eq ptr %41, null
  br i1 %42, label %108, label %43

43:                                               ; preds = %40
  %44 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %41, i32 noundef 545)
          to label %45 unwind label %216

45:                                               ; preds = %43
  %46 = load ptr, ptr %25, align 8, !tbaa !54
  %47 = icmp eq ptr %46, null
  br i1 %47, label %108, label %48

48:                                               ; preds = %45
  %49 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %46, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %50 unwind label %216

50:                                               ; preds = %48
  %51 = load ptr, ptr %25, align 8, !tbaa !54
  %52 = icmp eq ptr %51, null
  br i1 %52, label %108, label %53

53:                                               ; preds = %50
  %54 = load ptr, ptr %0, align 8, !tbaa !23
  %55 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %56 = load i64, ptr %55, align 8, !tbaa !10
  %57 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %51, ptr noundef %54, i64 noundef %56)
          to label %58 unwind label %216

58:                                               ; preds = %53
  %59 = load ptr, ptr %25, align 8, !tbaa !54
  %60 = icmp eq ptr %59, null
  br i1 %60, label %108, label %61

61:                                               ; preds = %58
  %62 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %59, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %63 unwind label %216

63:                                               ; preds = %61
  %64 = load ptr, ptr %25, align 8, !tbaa !54
  %65 = icmp eq ptr %64, null
  br i1 %65, label %108, label %66

66:                                               ; preds = %63
  %67 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %64, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %68 unwind label %216

68:                                               ; preds = %66
  %69 = load ptr, ptr %25, align 8, !tbaa !54
  %70 = icmp eq ptr %69, null
  br i1 %70, label %108, label %71

71:                                               ; preds = %68
  %72 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %69, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %73 unwind label %216

73:                                               ; preds = %71
  %74 = load ptr, ptr %25, align 8, !tbaa !54
  %75 = icmp eq ptr %74, null
  br i1 %75, label %108, label %76

76:                                               ; preds = %73
  %77 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %74, i32 noundef 545)
          to label %78 unwind label %218

78:                                               ; preds = %76
  %79 = load ptr, ptr %25, align 8, !tbaa !54
  %80 = icmp eq ptr %79, null
  br i1 %80, label %108, label %81

81:                                               ; preds = %78
  %82 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %79, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %83 unwind label %218

83:                                               ; preds = %81
  %84 = load ptr, ptr %25, align 8, !tbaa !54
  %85 = icmp eq ptr %84, null
  br i1 %85, label %108, label %86

86:                                               ; preds = %83
  %87 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %84, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %88 unwind label %218

88:                                               ; preds = %86
  %89 = load ptr, ptr %25, align 8, !tbaa !54
  %90 = icmp eq ptr %89, null
  br i1 %90, label %108, label %91

91:                                               ; preds = %88
  %92 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %89, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %93 unwind label %218

93:                                               ; preds = %91
  %94 = load ptr, ptr %25, align 8, !tbaa !54
  %95 = icmp eq ptr %94, null
  br i1 %95, label %108, label %96

96:                                               ; preds = %93
  %97 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %94, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %98 unwind label %218

98:                                               ; preds = %96
  %99 = load ptr, ptr %25, align 8, !tbaa !54
  %100 = icmp eq ptr %99, null
  br i1 %100, label %108, label %101

101:                                              ; preds = %98
  %102 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %99, ptr noundef nonnull @.str.6, i64 noundef 3)
          to label %103 unwind label %218

103:                                              ; preds = %101
  %104 = load ptr, ptr %25, align 8, !tbaa !54
  %105 = icmp eq ptr %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %103
  %107 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %104, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %108 unwind label %218

108:                                              ; preds = %63, %58, %50, %45, %40, %35, %30, %24, %78, %83, %68, %73, %93, %88, %98, %103, %106
  %109 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %110 unwind label %220

110:                                              ; preds = %108
  %111 = load ptr, ptr %25, align 8, !tbaa !54
  %112 = icmp eq ptr %111, null
  br i1 %112, label %180, label %113

113:                                              ; preds = %110
  %114 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %111, double noundef %109)
          to label %115 unwind label %220

115:                                              ; preds = %113
  %116 = load ptr, ptr %25, align 8, !tbaa !54
  %117 = icmp eq ptr %116, null
  br i1 %117, label %180, label %118

118:                                              ; preds = %115
  %119 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %116, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %120 unwind label %220

120:                                              ; preds = %118
  %121 = load ptr, ptr %25, align 8, !tbaa !54
  %122 = icmp eq ptr %121, null
  br i1 %122, label %180, label %123

123:                                              ; preds = %120
  %124 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %121, double noundef %10)
          to label %125 unwind label %222

125:                                              ; preds = %123
  %126 = load ptr, ptr %25, align 8, !tbaa !54
  %127 = icmp eq ptr %126, null
  br i1 %127, label %180, label %128

128:                                              ; preds = %125
  %129 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %126, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %130 unwind label %222

130:                                              ; preds = %128
  %131 = load ptr, ptr %25, align 8, !tbaa !54
  %132 = icmp eq ptr %131, null
  br i1 %132, label %180, label %133

133:                                              ; preds = %130
  %134 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %131, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %135 unwind label %222

135:                                              ; preds = %133
  %136 = load ptr, ptr %25, align 8, !tbaa !54
  %137 = icmp eq ptr %136, null
  br i1 %137, label %180, label %138

138:                                              ; preds = %135
  %139 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %136, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %140 unwind label %222

140:                                              ; preds = %138
  %141 = load ptr, ptr %25, align 8, !tbaa !54
  %142 = icmp eq ptr %141, null
  br i1 %142, label %180, label %143

143:                                              ; preds = %140
  %144 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %141, i32 noundef 545)
          to label %145 unwind label %224

145:                                              ; preds = %143
  %146 = load ptr, ptr %25, align 8, !tbaa !54
  %147 = icmp eq ptr %146, null
  br i1 %147, label %180, label %148

148:                                              ; preds = %145
  %149 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %146, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %150 unwind label %224

150:                                              ; preds = %148
  %151 = load ptr, ptr %25, align 8, !tbaa !54
  %152 = icmp eq ptr %151, null
  br i1 %152, label %180, label %153

153:                                              ; preds = %150
  %154 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %151, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %155 unwind label %224

155:                                              ; preds = %153
  %156 = load ptr, ptr %25, align 8, !tbaa !54
  %157 = icmp eq ptr %156, null
  br i1 %157, label %180, label %158

158:                                              ; preds = %155
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %156, double noundef %13)
          to label %160 unwind label %226

160:                                              ; preds = %158
  %161 = load ptr, ptr %25, align 8, !tbaa !54
  %162 = icmp eq ptr %161, null
  br i1 %162, label %180, label %163

163:                                              ; preds = %160
  %164 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %161, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %165 unwind label %226

165:                                              ; preds = %163
  %166 = load ptr, ptr %25, align 8, !tbaa !54
  %167 = icmp eq ptr %166, null
  br i1 %167, label %180, label %168

168:                                              ; preds = %165
  %169 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %166, double noundef 1.000000e-01)
          to label %170 unwind label %228

170:                                              ; preds = %168
  %171 = load ptr, ptr %25, align 8, !tbaa !54
  %172 = icmp eq ptr %171, null
  br i1 %172, label %180, label %173

173:                                              ; preds = %170
  %174 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %171, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %175 unwind label %228

175:                                              ; preds = %173
  %176 = load ptr, ptr %25, align 8, !tbaa !54
  %177 = icmp eq ptr %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %175
  %179 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %176, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %180 unwind label %228

180:                                              ; preds = %135, %130, %125, %120, %115, %110, %150, %155, %140, %145, %165, %160, %170, %175, %178
  %181 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %182 unwind label %230

182:                                              ; preds = %180
  %183 = load ptr, ptr %25, align 8, !tbaa !54
  %184 = icmp eq ptr %183, null
  br i1 %184, label %193, label %185

185:                                              ; preds = %182
  %186 = fsub double %181, %10
  %187 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %183, double noundef %186)
          to label %188 unwind label %230

188:                                              ; preds = %185
  %189 = load ptr, ptr %25, align 8, !tbaa !54
  %190 = icmp eq ptr %189, null
  br i1 %190, label %193, label %191

191:                                              ; preds = %188
  %192 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %189, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %193 unwind label %230

193:                                              ; preds = %182, %188, %191
  %194 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.6)
          to label %195 unwind label %232

195:                                              ; preds = %193
  %196 = load ptr, ptr %25, align 8, !tbaa !54
  %197 = icmp eq ptr %196, null
  br i1 %197, label %212, label %198

198:                                              ; preds = %195
  %199 = fcmp ogt double %10, 1.000000e-05
  %200 = fcmp olt double %10, -1.000000e-05
  %201 = or i1 %199, %200
  %202 = select i1 %201, double %10, double 1.000000e-05
  %203 = fsub double %194, %10
  %204 = fdiv double %203, %202
  %205 = fmul double %204, 1.000000e+02
  %206 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %196, double noundef %205)
          to label %207 unwind label %232

207:                                              ; preds = %198
  %208 = load ptr, ptr %25, align 8, !tbaa !54
  %209 = icmp eq ptr %208, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %207
  %211 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %208, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %212 unwind label %232

212:                                              ; preds = %195, %207, %210
  br i1 %14, label %213, label %234

213:                                              ; preds = %212
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %2) #23
  unreachable

214:                                              ; preds = %38, %33, %28
  %215 = landingpad { ptr, i32 }
          cleanup
  br label %441

216:                                              ; preds = %71, %66, %61, %53, %48, %43
  %217 = landingpad { ptr, i32 }
          cleanup
  br label %441

218:                                              ; preds = %106, %101, %96, %91, %86, %81, %76
  %219 = landingpad { ptr, i32 }
          cleanup
  br label %441

220:                                              ; preds = %118, %113, %108
  %221 = landingpad { ptr, i32 }
          cleanup
  br label %441

222:                                              ; preds = %138, %133, %128, %123
  %223 = landingpad { ptr, i32 }
          cleanup
  br label %441

224:                                              ; preds = %153, %148, %143
  %225 = landingpad { ptr, i32 }
          cleanup
  br label %441

226:                                              ; preds = %163, %158
  %227 = landingpad { ptr, i32 }
          cleanup
  br label %441

228:                                              ; preds = %178, %173, %168
  %229 = landingpad { ptr, i32 }
          cleanup
  br label %441

230:                                              ; preds = %191, %185, %180
  %231 = landingpad { ptr, i32 }
          cleanup
  br label %441

232:                                              ; preds = %210, %198, %193
  %233 = landingpad { ptr, i32 }
          cleanup
  br label %441

234:                                              ; preds = %212
  %235 = call noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
  %236 = fdiv double 2.000000e+00, %4
  %237 = fdiv double %236, %7
  %238 = fsub double %235, %237
  %239 = call double @llvm.fabs.f64(double %238)
  %240 = fmul double %237, 1.000000e-03
  %241 = fcmp uge double %239, %240
  br i1 %241, label %249, label %242

242:                                              ; preds = %234
  %243 = load atomic i8, ptr @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log acquire, align 8
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %245, label %251, !prof !53

245:                                              ; preds = %242
  %246 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %251, label %248

248:                                              ; preds = %245
  store ptr null, ptr @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, align 8, !tbaa !54
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE3log) #21
  br label %251

249:                                              ; preds = %234
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  call void @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull @.str.197, ptr noundef nonnull @.str.31, ptr noundef nonnull @__func__._Z22CheckAvgIterationsRateRK7Results, i32 noundef 546)
  %250 = load ptr, ptr %3, align 8, !tbaa !56
  br label %251

251:                                              ; preds = %248, %245, %242, %249
  %252 = phi ptr [ %250, %249 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %242 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %245 ], [ @_ZZN9benchmark8internal18GetNullLogInstanceEvE3log, %248 ]
  %253 = load ptr, ptr %252, align 8, !tbaa !54
  %254 = icmp eq ptr %253, null
  br i1 %254, label %335, label %255

255:                                              ; preds = %251
  %256 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %253, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %257 unwind label %443

257:                                              ; preds = %255
  %258 = load ptr, ptr %252, align 8, !tbaa !54
  %259 = icmp eq ptr %258, null
  br i1 %259, label %335, label %260

260:                                              ; preds = %257
  %261 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %258, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %262 unwind label %443

262:                                              ; preds = %260
  %263 = load ptr, ptr %252, align 8, !tbaa !54
  %264 = icmp eq ptr %263, null
  br i1 %264, label %335, label %265

265:                                              ; preds = %262
  %266 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %263, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %267 unwind label %443

267:                                              ; preds = %265
  %268 = load ptr, ptr %252, align 8, !tbaa !54
  %269 = icmp eq ptr %268, null
  br i1 %269, label %335, label %270

270:                                              ; preds = %267
  %271 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %268, i32 noundef 546)
          to label %272 unwind label %445

272:                                              ; preds = %270
  %273 = load ptr, ptr %252, align 8, !tbaa !54
  %274 = icmp eq ptr %273, null
  br i1 %274, label %335, label %275

275:                                              ; preds = %272
  %276 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %273, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %277 unwind label %445

277:                                              ; preds = %275
  %278 = load ptr, ptr %252, align 8, !tbaa !54
  %279 = icmp eq ptr %278, null
  br i1 %279, label %335, label %280

280:                                              ; preds = %277
  %281 = load ptr, ptr %0, align 8, !tbaa !23
  %282 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %283 = load i64, ptr %282, align 8, !tbaa !10
  %284 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %278, ptr noundef %281, i64 noundef %283)
          to label %285 unwind label %445

285:                                              ; preds = %280
  %286 = load ptr, ptr %252, align 8, !tbaa !54
  %287 = icmp eq ptr %286, null
  br i1 %287, label %335, label %288

288:                                              ; preds = %285
  %289 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %286, ptr noundef nonnull @.str.35, i64 noundef 2)
          to label %290 unwind label %445

290:                                              ; preds = %288
  %291 = load ptr, ptr %252, align 8, !tbaa !54
  %292 = icmp eq ptr %291, null
  br i1 %292, label %335, label %293

293:                                              ; preds = %290
  %294 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %291, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %295 unwind label %445

295:                                              ; preds = %293
  %296 = load ptr, ptr %252, align 8, !tbaa !54
  %297 = icmp eq ptr %296, null
  br i1 %297, label %335, label %298

298:                                              ; preds = %295
  %299 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %296, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %300 unwind label %445

300:                                              ; preds = %298
  %301 = load ptr, ptr %252, align 8, !tbaa !54
  %302 = icmp eq ptr %301, null
  br i1 %302, label %335, label %303

303:                                              ; preds = %300
  %304 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %301, i32 noundef 546)
          to label %305 unwind label %447

305:                                              ; preds = %303
  %306 = load ptr, ptr %252, align 8, !tbaa !54
  %307 = icmp eq ptr %306, null
  br i1 %307, label %335, label %308

308:                                              ; preds = %305
  %309 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %306, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %310 unwind label %447

310:                                              ; preds = %308
  %311 = load ptr, ptr %252, align 8, !tbaa !54
  %312 = icmp eq ptr %311, null
  br i1 %312, label %335, label %313

313:                                              ; preds = %310
  %314 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %311, ptr noundef nonnull @.str.36, i64 noundef 10)
          to label %315 unwind label %447

315:                                              ; preds = %313
  %316 = load ptr, ptr %252, align 8, !tbaa !54
  %317 = icmp eq ptr %316, null
  br i1 %317, label %335, label %318

318:                                              ; preds = %315
  %319 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %316, ptr noundef nonnull @.str.42, i64 noundef 6)
          to label %320 unwind label %447

320:                                              ; preds = %318
  %321 = load ptr, ptr %252, align 8, !tbaa !54
  %322 = icmp eq ptr %321, null
  br i1 %322, label %335, label %323

323:                                              ; preds = %320
  %324 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %321, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %325 unwind label %447

325:                                              ; preds = %323
  %326 = load ptr, ptr %252, align 8, !tbaa !54
  %327 = icmp eq ptr %326, null
  br i1 %327, label %335, label %328

328:                                              ; preds = %325
  %329 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %326, ptr noundef nonnull @.str.7, i64 noundef 3)
          to label %330 unwind label %447

330:                                              ; preds = %328
  %331 = load ptr, ptr %252, align 8, !tbaa !54
  %332 = icmp eq ptr %331, null
  br i1 %332, label %335, label %333

333:                                              ; preds = %330
  %334 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %331, ptr noundef nonnull @.str.39, i64 noundef 1)
          to label %335 unwind label %447

335:                                              ; preds = %290, %285, %277, %272, %267, %262, %257, %251, %305, %310, %295, %300, %320, %315, %325, %330, %333
  %336 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %337 unwind label %449

337:                                              ; preds = %335
  %338 = load ptr, ptr %252, align 8, !tbaa !54
  %339 = icmp eq ptr %338, null
  br i1 %339, label %407, label %340

340:                                              ; preds = %337
  %341 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %338, double noundef %336)
          to label %342 unwind label %449

342:                                              ; preds = %340
  %343 = load ptr, ptr %252, align 8, !tbaa !54
  %344 = icmp eq ptr %343, null
  br i1 %344, label %407, label %345

345:                                              ; preds = %342
  %346 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %343, ptr noundef nonnull @.str.40, i64 noundef 13)
          to label %347 unwind label %449

347:                                              ; preds = %345
  %348 = load ptr, ptr %252, align 8, !tbaa !54
  %349 = icmp eq ptr %348, null
  br i1 %349, label %407, label %350

350:                                              ; preds = %347
  %351 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %348, double noundef %237)
          to label %352 unwind label %451

352:                                              ; preds = %350
  %353 = load ptr, ptr %252, align 8, !tbaa !54
  %354 = icmp eq ptr %353, null
  br i1 %354, label %407, label %355

355:                                              ; preds = %352
  %356 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %353, ptr noundef nonnull @.str.32, i64 noundef 1)
          to label %357 unwind label %451

357:                                              ; preds = %355
  %358 = load ptr, ptr %252, align 8, !tbaa !54
  %359 = icmp eq ptr %358, null
  br i1 %359, label %407, label %360

360:                                              ; preds = %357
  %361 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %358, ptr noundef nonnull @.str.31, i64 noundef 106)
          to label %362 unwind label %451

362:                                              ; preds = %360
  %363 = load ptr, ptr %252, align 8, !tbaa !54
  %364 = icmp eq ptr %363, null
  br i1 %364, label %407, label %365

365:                                              ; preds = %362
  %366 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %363, ptr noundef nonnull @.str.33, i64 noundef 1)
          to label %367 unwind label %451

367:                                              ; preds = %365
  %368 = load ptr, ptr %252, align 8, !tbaa !54
  %369 = icmp eq ptr %368, null
  br i1 %369, label %407, label %370

370:                                              ; preds = %367
  %371 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %368, i32 noundef 546)
          to label %372 unwind label %453

372:                                              ; preds = %370
  %373 = load ptr, ptr %252, align 8, !tbaa !54
  %374 = icmp eq ptr %373, null
  br i1 %374, label %407, label %375

375:                                              ; preds = %372
  %376 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %373, ptr noundef nonnull @.str.34, i64 noundef 2)
          to label %377 unwind label %453

377:                                              ; preds = %375
  %378 = load ptr, ptr %252, align 8, !tbaa !54
  %379 = icmp eq ptr %378, null
  br i1 %379, label %407, label %380

380:                                              ; preds = %377
  %381 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %378, ptr noundef nonnull @.str.43, i64 noundef 18)
          to label %382 unwind label %453

382:                                              ; preds = %380
  %383 = load ptr, ptr %252, align 8, !tbaa !54
  %384 = icmp eq ptr %383, null
  br i1 %384, label %407, label %385

385:                                              ; preds = %382
  %386 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %383, double noundef %240)
          to label %387 unwind label %455

387:                                              ; preds = %385
  %388 = load ptr, ptr %252, align 8, !tbaa !54
  %389 = icmp eq ptr %388, null
  br i1 %389, label %407, label %390

390:                                              ; preds = %387
  %391 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %388, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %392 unwind label %455

392:                                              ; preds = %390
  %393 = load ptr, ptr %252, align 8, !tbaa !54
  %394 = icmp eq ptr %393, null
  br i1 %394, label %407, label %395

395:                                              ; preds = %392
  %396 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %393, double noundef 1.000000e-01)
          to label %397 unwind label %457

397:                                              ; preds = %395
  %398 = load ptr, ptr %252, align 8, !tbaa !54
  %399 = icmp eq ptr %398, null
  br i1 %399, label %407, label %400

400:                                              ; preds = %397
  %401 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %398, ptr noundef nonnull @.str.45, i64 noundef 4)
          to label %402 unwind label %457

402:                                              ; preds = %400
  %403 = load ptr, ptr %252, align 8, !tbaa !54
  %404 = icmp eq ptr %403, null
  br i1 %404, label %407, label %405

405:                                              ; preds = %402
  %406 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %403, ptr noundef nonnull @.str.46, i64 noundef 14)
          to label %407 unwind label %457

407:                                              ; preds = %362, %357, %352, %347, %342, %337, %377, %382, %367, %372, %392, %387, %397, %402, %405
  %408 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %409 unwind label %459

409:                                              ; preds = %407
  %410 = load ptr, ptr %252, align 8, !tbaa !54
  %411 = icmp eq ptr %410, null
  br i1 %411, label %420, label %412

412:                                              ; preds = %409
  %413 = fsub double %408, %237
  %414 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %410, double noundef %413)
          to label %415 unwind label %459

415:                                              ; preds = %412
  %416 = load ptr, ptr %252, align 8, !tbaa !54
  %417 = icmp eq ptr %416, null
  br i1 %417, label %420, label %418

418:                                              ; preds = %415
  %419 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %416, ptr noundef nonnull @.str.44, i64 noundef 2)
          to label %420 unwind label %459

420:                                              ; preds = %409, %415, %418
  %421 = invoke noundef double @_ZNK7Results5GetAsIdEET_PKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull @.str.7)
          to label %422 unwind label %461

422:                                              ; preds = %420
  %423 = load ptr, ptr %252, align 8, !tbaa !54
  %424 = icmp eq ptr %423, null
  br i1 %424, label %439, label %425

425:                                              ; preds = %422
  %426 = fcmp ogt double %237, 1.000000e-05
  %427 = fcmp olt double %237, -1.000000e-05
  %428 = or i1 %426, %427
  %429 = select i1 %428, double %237, double 1.000000e-05
  %430 = fsub double %421, %237
  %431 = fdiv double %430, %429
  %432 = fmul double %431, 1.000000e+02
  %433 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %423, double noundef %432)
          to label %434 unwind label %461

434:                                              ; preds = %425
  %435 = load ptr, ptr %252, align 8, !tbaa !54
  %436 = icmp eq ptr %435, null
  br i1 %436, label %439, label %437

437:                                              ; preds = %434
  %438 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %435, ptr noundef nonnull @.str.47, i64 noundef 2)
          to label %439 unwind label %461

439:                                              ; preds = %422, %434, %437
  br i1 %241, label %440, label %463

440:                                              ; preds = %439
  call void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #23
  unreachable

441:                                              ; preds = %216, %220, %224, %228, %232, %230, %226, %222, %218, %214
  %442 = phi { ptr, i32 } [ %215, %214 ], [ %217, %216 ], [ %219, %218 ], [ %221, %220 ], [ %223, %222 ], [ %225, %224 ], [ %227, %226 ], [ %229, %228 ], [ %233, %232 ], [ %231, %230 ]
  br i1 %14, label %466, label %469

443:                                              ; preds = %265, %260, %255
  %444 = landingpad { ptr, i32 }
          cleanup
  br label %464

445:                                              ; preds = %298, %293, %288, %280, %275, %270
  %446 = landingpad { ptr, i32 }
          cleanup
  br label %464

447:                                              ; preds = %333, %328, %323, %318, %313, %308, %303
  %448 = landingpad { ptr, i32 }
          cleanup
  br label %464

449:                                              ; preds = %345, %340, %335
  %450 = landingpad { ptr, i32 }
          cleanup
  br label %464

451:                                              ; preds = %365, %360, %355, %350
  %452 = landingpad { ptr, i32 }
          cleanup
  br label %464

453:                                              ; preds = %380, %375, %370
  %454 = landingpad { ptr, i32 }
          cleanup
  br label %464

455:                                              ; preds = %390, %385
  %456 = landingpad { ptr, i32 }
          cleanup
  br label %464

457:                                              ; preds = %405, %400, %395
  %458 = landingpad { ptr, i32 }
          cleanup
  br label %464

459:                                              ; preds = %418, %412, %407
  %460 = landingpad { ptr, i32 }
          cleanup
  br label %464

461:                                              ; preds = %437, %425, %420
  %462 = landingpad { ptr, i32 }
          cleanup
  br label %464

463:                                              ; preds = %439
  ret void

464:                                              ; preds = %445, %449, %453, %457, %461, %459, %455, %451, %447, %443
  %465 = phi { ptr, i32 } [ %444, %443 ], [ %446, %445 ], [ %448, %447 ], [ %450, %449 ], [ %452, %451 ], [ %454, %453 ], [ %456, %455 ], [ %458, %457 ], [ %462, %461 ], [ %460, %459 ]
  br i1 %241, label %466, label %469

466:                                              ; preds = %464, %441
  %467 = phi ptr [ %2, %441 ], [ %3, %464 ]
  invoke void @_ZN9benchmark8internal12CheckHandlerD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %467) #23
          to label %468 unwind label %471

468:                                              ; preds = %466
  unreachable

469:                                              ; preds = %464, %441
  %470 = phi { ptr, i32 } [ %442, %441 ], [ %465, %464 ]
  resume { ptr, i32 } %470

471:                                              ; preds = %466
  %472 = landingpad { ptr, i32 }
          catch ptr null
  %473 = extractvalue { ptr, i32 } %472, 0
  call void @__clang_call_terminate(ptr %473) #24
  unreachable
}

; Function Attrs: mustprogress norecurse uwtable
define hidden noundef i32 @main(i32 noundef %0, ptr noundef %1) local_unnamed_addr #11 {
  tail call void @_Z14RunOutputTestsiPPc(i32 noundef %0, ptr noundef %1)
  ret i32 0
}

declare void @_Z14RunOutputTestsiPPc(i32 noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: mustprogress noinline nounwind uwtable
define linkonce_odr hidden void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %0) local_unnamed_addr #12 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !58
  %3 = getelementptr inbounds ptr, ptr %2, i64 2
  %4 = load ptr, ptr %3, align 8
  tail call void %4(ptr noundef nonnull align 8 dereferenceable(16) %0) #21
  %5 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %0, i64 0, i32 2
  %6 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = load i32, ptr %5, align 4, !tbaa !73
  %10 = add nsw i32 %9, -1
  store i32 %10, ptr %5, align 4, !tbaa !73
  br label %13

11:                                               ; preds = %1
  %12 = atomicrmw volatile add ptr %5, i32 -1 acq_rel, align 4
  br label %13

13:                                               ; preds = %11, %8
  %14 = phi i32 [ %9, %8 ], [ %12, %11 ]
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %20

16:                                               ; preds = %13
  %17 = load ptr, ptr %0, align 8, !tbaa !58
  %18 = getelementptr inbounds ptr, ptr %17, i64 3
  %19 = load ptr, ptr %18, align 8
  tail call void %19(ptr noundef nonnull align 8 dereferenceable(16) %0) #21
  br label %20

20:                                               ; preds = %13, %16
  ret void
}

declare void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144)) local_unnamed_addr #0

declare void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144)) local_unnamed_addr #0

declare void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216), ptr noundef) unnamed_addr #0

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(ptr) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(ptr) local_unnamed_addr #2

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, i64 noundef) local_unnamed_addr #0

declare void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(ptr noundef nonnull align 8 dereferenceable(264), i32 noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #13

; Function Attrs: inlinehint mustprogress noreturn uwtable
define linkonce_odr hidden void @_ZN9benchmark8internal16CallAbortHandlerEv() local_unnamed_addr #14 comdat {
  %1 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZN9benchmark8internal15GetAbortHandlerEv()
  %2 = load ptr, ptr %1, align 8, !tbaa !47
  tail call void %2()
  tail call void @abort() #24
  unreachable
}

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8), i8 noundef signext) local_unnamed_addr #0

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @_ZSt16__throw_bad_castv() local_unnamed_addr #15

declare void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZN9benchmark8internal15GetAbortHandlerEv() local_unnamed_addr #0

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #16

declare noundef double @_ZNK7Results7GetTimeENS_13BenchmarkTimeE(ptr noundef nonnull align 8 dereferenceable(80), i32 noundef) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @_ZSt19__throw_logic_errorPKc(ptr noundef) local_unnamed_addr #15

declare noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef nonnull align 8 dereferenceable(8), i64 noundef) local_unnamed_addr #0

; Function Attrs: uwtable
define linkonce_odr hidden ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESL_IJEEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 1 dereferenceable(1) %2, ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull align 1 dereferenceable(1) %4) local_unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #21
  store ptr %0, ptr %6, align 8, !tbaa !47
  %7 = tail call noalias noundef nonnull dereferenceable(80) ptr @_Znwm(i64 noundef 80) #25
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %7, i64 0, i32 1
  %9 = load i64, ptr %3, align 8, !tbaa !47
  %10 = inttoptr i64 %9 to ptr
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %7, i64 0, i32 1, i32 0, i64 16
  store ptr %11, ptr %8, align 8, !tbaa !5
  %12 = load ptr, ptr %10, align 8, !tbaa !23
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 2
  %14 = icmp eq ptr %12, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 1
  %17 = load i64, ptr %16, align 8, !tbaa !10
  %18 = add i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %11, ptr nonnull align 8 %12, i64 %18, i1 false)
  br label %23

21:                                               ; preds = %5
  store ptr %12, ptr %8, align 8, !tbaa !23
  %22 = load i64, ptr %13, align 8, !tbaa !13
  store i64 %22, ptr %11, align 8, !tbaa !13
  br label %23

23:                                               ; preds = %15, %20, %21
  %24 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %6, i64 0, i32 1
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !10
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %7, i64 0, i32 1, i32 0, i64 8
  store i64 %26, ptr %27, align 8, !tbaa !10
  store ptr %13, ptr %10, align 8, !tbaa !23
  store i64 0, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %13, align 8, !tbaa !13
  %28 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %7, i64 0, i32 1, i32 0, i64 32
  store double 0.000000e+00, ptr %28, align 8, !tbaa !77
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %7, i64 0, i32 1, i32 0, i64 40
  store i32 0, ptr %29, align 8, !tbaa !79
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %7, i64 0, i32 1, i32 0, i64 44
  store i32 1000, ptr %30, align 4, !tbaa !80
  store ptr %7, ptr %24, align 8, !tbaa !81
  %31 = invoke { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(32) %8)
          to label %32 unwind label %66

32:                                               ; preds = %23
  %33 = extractvalue { ptr, ptr } %31, 0
  %34 = extractvalue { ptr, ptr } %31, 1
  %35 = icmp eq ptr %34, null
  br i1 %35, label %68, label %36

36:                                               ; preds = %32
  %37 = icmp ne ptr %33, null
  %38 = getelementptr inbounds i8, ptr %0, i64 8
  %39 = icmp eq ptr %38, %34
  %40 = select i1 %37, i1 true, i1 %39
  br i1 %40, label %61, label %41

41:                                               ; preds = %36
  %42 = load i64, ptr %27, align 8, !tbaa !10
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %34, i64 0, i32 1, i32 0, i64 8
  %44 = load i64, ptr %43, align 8, !tbaa !10
  %45 = tail call i64 @llvm.umin.i64(i64 %42, i64 %44)
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %34, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !23
  %50 = load ptr, ptr %8, align 8, !tbaa !23
  %51 = tail call i32 @memcmp(ptr noundef %50, ptr noundef %49, i64 noundef %45) #21
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %47, %41
  %54 = sub i64 %42, %44
  %55 = tail call i64 @llvm.smax.i64(i64 %54, i64 -2147483648)
  %56 = tail call i64 @llvm.smin.i64(i64 %55, i64 2147483647)
  %57 = trunc i64 %56 to i32
  br label %58

58:                                               ; preds = %53, %47
  %59 = phi i32 [ %51, %47 ], [ %57, %53 ]
  %60 = icmp slt i32 %59, 0
  br label %61

61:                                               ; preds = %58, %36
  %62 = phi i1 [ true, %36 ], [ %60, %58 ]
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %62, ptr noundef nonnull %7, ptr noundef nonnull %34, ptr noundef nonnull align 8 dereferenceable(32) %38) #21
  %63 = getelementptr inbounds i8, ptr %0, i64 40
  %64 = load i64, ptr %63, align 8, !tbaa !83
  %65 = add i64 %64, 1
  store i64 %65, ptr %63, align 8, !tbaa !83
  br label %73

66:                                               ; preds = %23
  %67 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %6) #21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #21
  resume { ptr, i32 } %67

68:                                               ; preds = %32
  %69 = load ptr, ptr %8, align 8, !tbaa !23
  %70 = icmp eq ptr %69, %11
  br i1 %70, label %72, label %71

71:                                               ; preds = %68
  tail call void @_ZdlPv(ptr noundef %69) #22
  br label %72

72:                                               ; preds = %71, %68
  tail call void @_ZdlPv(ptr noundef nonnull %7) #22
  br label %73

73:                                               ; preds = %61, %72
  %74 = phi ptr [ %7, %61 ], [ %33, %72 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #21
  ret ptr %74
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @memcmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #13

; Function Attrs: uwtable
define linkonce_odr hidden { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = icmp eq ptr %4, %1
  br i1 %5, label %6, label %37

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, ptr %0, i64 40
  %8 = load i64, ptr %7, align 8, !tbaa !83
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %33, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds i8, ptr %0, i64 32
  %12 = load ptr, ptr %11, align 8, !tbaa !47
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %12, i64 0, i32 1, i32 0, i64 8
  %14 = load i64, ptr %13, align 8, !tbaa !10
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %16 = load i64, ptr %15, align 8, !tbaa !10
  %17 = tail call i64 @llvm.umin.i64(i64 %14, i64 %16)
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %12, i64 0, i32 1
  %21 = load ptr, ptr %2, align 8, !tbaa !23
  %22 = load ptr, ptr %20, align 8, !tbaa !23
  %23 = tail call i32 @memcmp(ptr noundef %22, ptr noundef %21, i64 noundef %17) #21
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %19, %10
  %26 = sub i64 %14, %16
  %27 = tail call i64 @llvm.smax.i64(i64 %26, i64 -2147483648)
  %28 = tail call i64 @llvm.smin.i64(i64 %27, i64 2147483647)
  %29 = trunc i64 %28 to i32
  br label %30

30:                                               ; preds = %19, %25
  %31 = phi i32 [ %23, %19 ], [ %29, %25 ]
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %143, label %33

33:                                               ; preds = %30, %6
  %34 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2)
  %35 = extractvalue { ptr, ptr } %34, 0
  %36 = extractvalue { ptr, ptr } %34, 1
  br label %143

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %39 = load i64, ptr %38, align 8, !tbaa !10
  %40 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1, i64 0, i32 1, i32 0, i64 8
  %41 = load i64, ptr %40, align 8, !tbaa !10
  %42 = tail call i64 @llvm.umin.i64(i64 %39, i64 %41)
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !23
  %47 = load ptr, ptr %2, align 8, !tbaa !23
  %48 = tail call i32 @memcmp(ptr noundef %47, ptr noundef %46, i64 noundef %42) #21
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %56, label %62

50:                                               ; preds = %37
  %51 = sub i64 %39, %41
  %52 = tail call i64 @llvm.smax.i64(i64 %51, i64 -2147483648)
  %53 = tail call i64 @llvm.smin.i64(i64 %52, i64 2147483647)
  %54 = and i64 %53, 2147483648
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %101, label %64

56:                                               ; preds = %44
  %57 = sub i64 %39, %41
  %58 = tail call i64 @llvm.smax.i64(i64 %57, i64 -2147483648)
  %59 = tail call i64 @llvm.smin.i64(i64 %58, i64 2147483647)
  %60 = and i64 %59, 2147483648
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %98, label %64

62:                                               ; preds = %44
  %63 = icmp slt i32 %48, 0
  br i1 %63, label %64, label %98

64:                                               ; preds = %56, %62, %50
  %65 = getelementptr inbounds i8, ptr %0, i64 24
  %66 = load ptr, ptr %65, align 8, !tbaa !47
  %67 = icmp eq ptr %66, %1
  br i1 %67, label %143, label %68

68:                                               ; preds = %64
  %69 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1) #26
  %70 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %69, i64 0, i32 1, i32 0, i64 8
  %71 = load i64, ptr %70, align 8, !tbaa !10
  %72 = tail call i64 @llvm.umin.i64(i64 %71, i64 %39)
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %69, i64 0, i32 1
  %76 = load ptr, ptr %2, align 8, !tbaa !23
  %77 = load ptr, ptr %75, align 8, !tbaa !23
  %78 = tail call i32 @memcmp(ptr noundef %77, ptr noundef %76, i64 noundef %72) #21
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %74, %68
  %81 = sub i64 %71, %39
  %82 = tail call i64 @llvm.smax.i64(i64 %81, i64 -2147483648)
  %83 = tail call i64 @llvm.smin.i64(i64 %82, i64 2147483647)
  %84 = trunc i64 %83 to i32
  br label %85

85:                                               ; preds = %74, %80
  %86 = phi i32 [ %78, %74 ], [ %84, %80 ]
  %87 = icmp slt i32 %86, 0
  br i1 %87, label %88, label %94

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %69, i64 0, i32 3
  %90 = load ptr, ptr %89, align 8, !tbaa !84
  %91 = icmp eq ptr %90, null
  %92 = select i1 %91, ptr null, ptr %1
  %93 = select i1 %91, ptr %69, ptr %1
  br label %143

94:                                               ; preds = %85
  %95 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2)
  %96 = extractvalue { ptr, ptr } %95, 0
  %97 = extractvalue { ptr, ptr } %95, 1
  br label %143

98:                                               ; preds = %56, %62
  %99 = tail call i32 @memcmp(ptr noundef %46, ptr noundef %47, i64 noundef %42) #21
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %106

101:                                              ; preds = %50, %98
  %102 = sub i64 %41, %39
  %103 = tail call i64 @llvm.smax.i64(i64 %102, i64 -2147483648)
  %104 = tail call i64 @llvm.smin.i64(i64 %103, i64 2147483647)
  %105 = trunc i64 %104 to i32
  br label %106

106:                                              ; preds = %98, %101
  %107 = phi i32 [ %99, %98 ], [ %105, %101 ]
  %108 = icmp slt i32 %107, 0
  br i1 %108, label %109, label %143

109:                                              ; preds = %106
  %110 = getelementptr inbounds i8, ptr %0, i64 32
  %111 = load ptr, ptr %110, align 8, !tbaa !47
  %112 = icmp eq ptr %111, %1
  br i1 %112, label %143, label %113

113:                                              ; preds = %109
  %114 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1) #26
  %115 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %114, i64 0, i32 1, i32 0, i64 8
  %116 = load i64, ptr %115, align 8, !tbaa !10
  %117 = tail call i64 @llvm.umin.i64(i64 %39, i64 %116)
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %114, i64 0, i32 1
  %121 = load ptr, ptr %120, align 8, !tbaa !23
  %122 = load ptr, ptr %2, align 8, !tbaa !23
  %123 = tail call i32 @memcmp(ptr noundef %122, ptr noundef %121, i64 noundef %117) #21
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %130

125:                                              ; preds = %119, %113
  %126 = sub i64 %39, %116
  %127 = tail call i64 @llvm.smax.i64(i64 %126, i64 -2147483648)
  %128 = tail call i64 @llvm.smin.i64(i64 %127, i64 2147483647)
  %129 = trunc i64 %128 to i32
  br label %130

130:                                              ; preds = %119, %125
  %131 = phi i32 [ %123, %119 ], [ %129, %125 ]
  %132 = icmp slt i32 %131, 0
  br i1 %132, label %133, label %139

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 3
  %135 = load ptr, ptr %134, align 8, !tbaa !84
  %136 = icmp eq ptr %135, null
  %137 = select i1 %136, ptr null, ptr %114
  %138 = select i1 %136, ptr %1, ptr %114
  br label %143

139:                                              ; preds = %130
  %140 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2)
  %141 = extractvalue { ptr, ptr } %140, 0
  %142 = extractvalue { ptr, ptr } %140, 1
  br label %143

143:                                              ; preds = %109, %64, %30, %106, %139, %133, %94, %88, %33
  %144 = phi ptr [ %35, %33 ], [ %96, %94 ], [ %92, %88 ], [ %141, %139 ], [ %137, %133 ], [ %1, %106 ], [ null, %30 ], [ %1, %64 ], [ null, %109 ]
  %145 = phi ptr [ %36, %33 ], [ %97, %94 ], [ %93, %88 ], [ %142, %139 ], [ %138, %133 ], [ null, %106 ], [ %12, %30 ], [ %1, %64 ], [ %1, %109 ]
  %146 = insertvalue { ptr, ptr } poison, ptr %144, 0
  %147 = insertvalue { ptr, ptr } %146, ptr %145, 1
  ret { ptr, ptr } %147
}

; Function Attrs: nounwind uwtable
define linkonce_odr hidden void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) unnamed_addr #17 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !81
  %4 = icmp eq ptr %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %3, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !23
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %3, i64 0, i32 1, i32 0, i64 16
  %9 = icmp eq ptr %7, %8
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  tail call void @_ZdlPv(ptr noundef %7) #22
  br label %11

11:                                               ; preds = %5, %10
  tail call void @_ZdlPv(ptr noundef nonnull %3) #22
  br label %12

12:                                               ; preds = %11, %1
  ret void
}

; Function Attrs: uwtable
define linkonce_odr hidden { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) local_unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = load ptr, ptr %3, align 8, !tbaa !47
  %6 = icmp eq ptr %5, null
  br i1 %6, label %36, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %9 = load i64, ptr %8, align 8, !tbaa !10
  %10 = load ptr, ptr %1, align 8
  br label %11

11:                                               ; preds = %7, %27
  %12 = phi ptr [ %5, %7 ], [ %33, %27 ]
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %12, i64 0, i32 1, i32 0, i64 8
  %14 = load i64, ptr %13, align 8, !tbaa !10
  %15 = tail call i64 @llvm.umin.i64(i64 %9, i64 %14)
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %12, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !23
  %20 = tail call i32 @memcmp(ptr noundef %10, ptr noundef %19, i64 noundef %15) #21
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %17, %11
  %23 = sub i64 %9, %14
  %24 = tail call i64 @llvm.smax.i64(i64 %23, i64 -2147483648)
  %25 = tail call i64 @llvm.smin.i64(i64 %24, i64 2147483647)
  %26 = trunc i64 %25 to i32
  br label %27

27:                                               ; preds = %17, %22
  %28 = phi i32 [ %20, %17 ], [ %26, %22 ]
  %29 = icmp slt i32 %28, 0
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %12, i64 0, i32 2
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %12, i64 0, i32 3
  %32 = select i1 %29, ptr %30, ptr %31
  %33 = load ptr, ptr %32, align 8, !tbaa !47
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %11, !llvm.loop !85

35:                                               ; preds = %27
  br i1 %29, label %36, label %43

36:                                               ; preds = %2, %35
  %37 = phi ptr [ %12, %35 ], [ %4, %2 ]
  %38 = getelementptr inbounds i8, ptr %0, i64 24
  %39 = load ptr, ptr %38, align 8, !tbaa !86
  %40 = icmp eq ptr %37, %39
  br i1 %40, label %68, label %41

41:                                               ; preds = %36
  %42 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %37) #26
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi ptr [ %37, %41 ], [ %12, %35 ]
  %45 = phi ptr [ %42, %41 ], [ %12, %35 ]
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %45, i64 0, i32 1, i32 0, i64 8
  %47 = load i64, ptr %46, align 8, !tbaa !10
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %49 = load i64, ptr %48, align 8, !tbaa !10
  %50 = tail call i64 @llvm.umin.i64(i64 %47, i64 %49)
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %45, i64 0, i32 1
  %54 = load ptr, ptr %1, align 8, !tbaa !23
  %55 = load ptr, ptr %53, align 8, !tbaa !23
  %56 = tail call i32 @memcmp(ptr noundef %55, ptr noundef %54, i64 noundef %50) #21
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %52, %43
  %59 = sub i64 %47, %49
  %60 = tail call i64 @llvm.smax.i64(i64 %59, i64 -2147483648)
  %61 = tail call i64 @llvm.smin.i64(i64 %60, i64 2147483647)
  %62 = trunc i64 %61 to i32
  br label %63

63:                                               ; preds = %52, %58
  %64 = phi i32 [ %56, %52 ], [ %62, %58 ]
  %65 = icmp slt i32 %64, 0
  %66 = select i1 %65, ptr null, ptr %45
  %67 = select i1 %65, ptr %44, ptr null
  br label %68

68:                                               ; preds = %63, %36
  %69 = phi ptr [ null, %36 ], [ %66, %63 ]
  %70 = phi ptr [ %37, %36 ], [ %67, %63 ]
  %71 = insertvalue { ptr, ptr } poison, ptr %69, 0
  %72 = insertvalue { ptr, ptr } %71, ptr %70, 1
  ret { ptr, ptr } %72
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef) local_unnamed_addr #18

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef) local_unnamed_addr #18

; Function Attrs: nounwind
declare void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext, ptr noundef, ptr noundef, ptr noundef nonnull align 8 dereferenceable(32)) local_unnamed_addr #1

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8), i32 noundef) local_unnamed_addr #0

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8), double noundef) local_unnamed_addr #0

; Function Attrs: mustprogress uwtable
define linkonce_odr hidden void @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E9_M_invokeERKSt9_Any_dataS2_(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(80) %1) #19 comdat align 2 {
  %3 = load ptr, ptr %0, align 8, !tbaa !47
  tail call void %3(ptr noundef nonnull align 8 dereferenceable(80) %1)
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr hidden noundef zeroext i1 @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %1, i32 noundef %2) #19 comdat align 2 personality ptr @__gxx_personality_v0 {
  switch i32 %2, label %9 [
    i32 0, label %7
    i32 1, label %4
    i32 2, label %5
  ]

4:                                                ; preds = %3
  br label %7

5:                                                ; preds = %3
  %6 = load ptr, ptr %1, align 8, !tbaa !47
  br label %7

7:                                                ; preds = %3, %4, %5
  %8 = phi ptr [ %6, %5 ], [ %1, %4 ], [ @_ZTIPFvRK7ResultsE, %3 ]
  store ptr %8, ptr %0, align 8, !tbaa !47
  br label %9

9:                                                ; preds = %7, %3
  ret i1 false
}

; Function Attrs: uwtable
define linkonce_odr hidden noundef ptr @_ZNK7Results3GetB5cxx11EPKc(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1) local_unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #21
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 2
  store ptr %5, ptr %4, align 8, !tbaa !5
  %6 = icmp eq ptr %1, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  call void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.203) #23
  unreachable

8:                                                ; preds = %2
  %9 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  store i64 %9, ptr %3, align 8, !tbaa !74
  %10 = icmp ugt i64 %9, 15
  br i1 %10, label %11, label %14

11:                                               ; preds = %8
  %12 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %4, ptr noundef nonnull align 8 dereferenceable(8) %3, i64 noundef 0)
  store ptr %12, ptr %4, align 8, !tbaa !23
  %13 = load i64, ptr %3, align 8, !tbaa !74
  store i64 %13, ptr %5, align 8, !tbaa !13
  br label %14

14:                                               ; preds = %11, %8
  %15 = phi ptr [ %12, %11 ], [ %5, %8 ]
  switch i64 %9, label %18 [
    i64 1, label %16
    i64 0, label %19
  ]

16:                                               ; preds = %14
  %17 = load i8, ptr %1, align 1, !tbaa !13
  store i8 %17, ptr %15, align 1, !tbaa !13
  br label %19

18:                                               ; preds = %14
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %15, ptr nonnull align 1 %1, i64 %9, i1 false)
  br label %19

19:                                               ; preds = %14, %16, %18
  %20 = load i64, ptr %3, align 8, !tbaa !74
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 1
  store i64 %20, ptr %21, align 8, !tbaa !10
  %22 = load ptr, ptr %4, align 8, !tbaa !23
  %23 = getelementptr inbounds i8, ptr %22, i64 %20
  store i8 0, ptr %23, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #21
  %24 = getelementptr inbounds %struct.Results, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !46
  %26 = getelementptr inbounds %struct.Results, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %27 = icmp eq ptr %25, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %19
  %29 = load ptr, ptr %4, align 8, !tbaa !23
  br label %79

30:                                               ; preds = %19
  %31 = load i64, ptr %21, align 8, !tbaa !10
  %32 = load ptr, ptr %4, align 8
  br label %33

33:                                               ; preds = %50, %30
  %34 = phi ptr [ %25, %30 ], [ %57, %50 ]
  %35 = phi ptr [ %26, %30 ], [ %55, %50 ]
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_node.59", ptr %34, i64 0, i32 1, i32 0, i64 8
  %37 = load i64, ptr %36, align 8, !tbaa !10
  %38 = call i64 @llvm.umin.i64(i64 %37, i64 %31)
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.std::_Rb_tree_node.59", ptr %34, i64 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !23
  %43 = call i32 @memcmp(ptr noundef %42, ptr noundef %32, i64 noundef %38) #21
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40, %33
  %46 = sub i64 %37, %31
  %47 = call i64 @llvm.smax.i64(i64 %46, i64 -2147483648)
  %48 = call i64 @llvm.smin.i64(i64 %47, i64 2147483647)
  %49 = trunc i64 %48 to i32
  br label %50

50:                                               ; preds = %45, %40
  %51 = phi i32 [ %43, %40 ], [ %49, %45 ]
  %52 = icmp slt i32 %51, 0
  %53 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %34, i64 0, i32 3
  %54 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %34, i64 0, i32 2
  %55 = select i1 %52, ptr %35, ptr %34
  %56 = select i1 %52, ptr %53, ptr %54
  %57 = load ptr, ptr %56, align 8, !tbaa !47
  %58 = icmp eq ptr %57, null
  br i1 %58, label %59, label %33, !llvm.loop !87

59:                                               ; preds = %50
  %60 = icmp eq ptr %55, %26
  br i1 %60, label %79, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"struct.std::_Rb_tree_node.59", ptr %55, i64 0, i32 1, i32 0, i64 8
  %63 = load i64, ptr %62, align 8, !tbaa !10
  %64 = call i64 @llvm.umin.i64(i64 %31, i64 %63)
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"struct.std::_Rb_tree_node.59", ptr %55, i64 0, i32 1
  %68 = load ptr, ptr %67, align 8, !tbaa !23
  %69 = call i32 @memcmp(ptr noundef %32, ptr noundef %68, i64 noundef %64) #21
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %66, %61
  %72 = sub i64 %31, %63
  %73 = call i64 @llvm.smax.i64(i64 %72, i64 -2147483648)
  %74 = call i64 @llvm.smin.i64(i64 %73, i64 2147483647)
  %75 = trunc i64 %74 to i32
  br label %76

76:                                               ; preds = %71, %66
  %77 = phi i32 [ %69, %66 ], [ %75, %71 ]
  %78 = icmp slt i32 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %28, %76, %59
  %80 = phi ptr [ %29, %28 ], [ %32, %76 ], [ %32, %59 ]
  br label %81

81:                                               ; preds = %79, %76
  %82 = phi ptr [ %80, %79 ], [ %32, %76 ]
  %83 = phi ptr [ %26, %79 ], [ %55, %76 ]
  %84 = icmp eq ptr %82, %5
  br i1 %84, label %86, label %85

85:                                               ; preds = %81
  call void @_ZdlPv(ptr noundef %82) #22
  br label %86

86:                                               ; preds = %81, %85
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #21
  %87 = icmp eq ptr %83, %26
  %88 = getelementptr inbounds %"struct.std::_Rb_tree_node.59", ptr %83, i64 0, i32 1, i32 0, i64 32
  %89 = select i1 %87, ptr null, ptr %88
  ret ptr %89
}

; Function Attrs: uwtable
declare void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(ptr noundef nonnull align 8 dereferenceable(128)) unnamed_addr #4 align 2

; Function Attrs: nounwind uwtable
declare void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev(ptr noundef nonnull align 8 dereferenceable(128)) unnamed_addr #17 align 2

; Function Attrs: nounwind
declare void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(216)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt6localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #1

declare noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi10_M_extractIdEERSiRT_(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_user_counters_test.cc() #4 section ".text.startup" personality ptr @__gxx_personality_v0 {
  %1 = alloca %"class.std::function", align 8
  %2 = alloca i64, align 8
  %3 = alloca [1 x %struct.TestCase], align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca [15 x %struct.TestCase], align 8
  %17 = alloca %"class.std::__cxx11::basic_string", align 8
  %18 = alloca %"class.std::__cxx11::basic_string", align 8
  %19 = alloca %"class.std::__cxx11::basic_string", align 8
  %20 = alloca %"class.std::__cxx11::basic_string", align 8
  %21 = alloca %"class.std::__cxx11::basic_string", align 8
  %22 = alloca %"class.std::__cxx11::basic_string", align 8
  %23 = alloca %"class.std::__cxx11::basic_string", align 8
  %24 = alloca %"class.std::__cxx11::basic_string", align 8
  %25 = alloca %"class.std::__cxx11::basic_string", align 8
  %26 = alloca %"class.std::__cxx11::basic_string", align 8
  %27 = alloca %"class.std::__cxx11::basic_string", align 8
  %28 = alloca %"class.std::__cxx11::basic_string", align 8
  %29 = alloca %"class.std::__cxx11::basic_string", align 8
  %30 = alloca %"class.std::__cxx11::basic_string", align 8
  %31 = alloca %"class.std::__cxx11::basic_string", align 8
  %32 = alloca i64, align 8
  %33 = alloca [1 x %struct.TestCase], align 8
  %34 = alloca %"class.std::__cxx11::basic_string", align 8
  %35 = alloca %"class.std::function", align 8
  %36 = alloca i64, align 8
  %37 = alloca [1 x %struct.TestCase], align 8
  %38 = alloca %"class.std::__cxx11::basic_string", align 8
  %39 = alloca i64, align 8
  %40 = alloca i64, align 8
  %41 = alloca i64, align 8
  %42 = alloca i64, align 8
  %43 = alloca i64, align 8
  %44 = alloca i64, align 8
  %45 = alloca i64, align 8
  %46 = alloca i64, align 8
  %47 = alloca i64, align 8
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca [15 x %struct.TestCase], align 8
  %51 = alloca %"class.std::__cxx11::basic_string", align 8
  %52 = alloca %"class.std::__cxx11::basic_string", align 8
  %53 = alloca %"class.std::__cxx11::basic_string", align 8
  %54 = alloca %"class.std::__cxx11::basic_string", align 8
  %55 = alloca %"class.std::__cxx11::basic_string", align 8
  %56 = alloca %"class.std::__cxx11::basic_string", align 8
  %57 = alloca %"class.std::__cxx11::basic_string", align 8
  %58 = alloca %"class.std::__cxx11::basic_string", align 8
  %59 = alloca %"class.std::__cxx11::basic_string", align 8
  %60 = alloca %"class.std::__cxx11::basic_string", align 8
  %61 = alloca %"class.std::__cxx11::basic_string", align 8
  %62 = alloca %"class.std::__cxx11::basic_string", align 8
  %63 = alloca %"class.std::__cxx11::basic_string", align 8
  %64 = alloca %"class.std::__cxx11::basic_string", align 8
  %65 = alloca %"class.std::__cxx11::basic_string", align 8
  %66 = alloca i64, align 8
  %67 = alloca [1 x %struct.TestCase], align 8
  %68 = alloca %"class.std::__cxx11::basic_string", align 8
  %69 = alloca %"class.std::function", align 8
  %70 = alloca i64, align 8
  %71 = alloca [1 x %struct.TestCase], align 8
  %72 = alloca %"class.std::__cxx11::basic_string", align 8
  %73 = alloca i64, align 8
  %74 = alloca i64, align 8
  %75 = alloca i64, align 8
  %76 = alloca i64, align 8
  %77 = alloca i64, align 8
  %78 = alloca i64, align 8
  %79 = alloca i64, align 8
  %80 = alloca i64, align 8
  %81 = alloca i64, align 8
  %82 = alloca i64, align 8
  %83 = alloca i64, align 8
  %84 = alloca [15 x %struct.TestCase], align 8
  %85 = alloca %"class.std::__cxx11::basic_string", align 8
  %86 = alloca %"class.std::__cxx11::basic_string", align 8
  %87 = alloca %"class.std::__cxx11::basic_string", align 8
  %88 = alloca %"class.std::__cxx11::basic_string", align 8
  %89 = alloca %"class.std::__cxx11::basic_string", align 8
  %90 = alloca %"class.std::__cxx11::basic_string", align 8
  %91 = alloca %"class.std::__cxx11::basic_string", align 8
  %92 = alloca %"class.std::__cxx11::basic_string", align 8
  %93 = alloca %"class.std::__cxx11::basic_string", align 8
  %94 = alloca %"class.std::__cxx11::basic_string", align 8
  %95 = alloca %"class.std::__cxx11::basic_string", align 8
  %96 = alloca %"class.std::__cxx11::basic_string", align 8
  %97 = alloca %"class.std::__cxx11::basic_string", align 8
  %98 = alloca %"class.std::__cxx11::basic_string", align 8
  %99 = alloca %"class.std::__cxx11::basic_string", align 8
  %100 = alloca i64, align 8
  %101 = alloca [1 x %struct.TestCase], align 8
  %102 = alloca %"class.std::__cxx11::basic_string", align 8
  %103 = alloca %"class.std::function", align 8
  %104 = alloca i64, align 8
  %105 = alloca [1 x %struct.TestCase], align 8
  %106 = alloca %"class.std::__cxx11::basic_string", align 8
  %107 = alloca i64, align 8
  %108 = alloca i64, align 8
  %109 = alloca i64, align 8
  %110 = alloca i64, align 8
  %111 = alloca i64, align 8
  %112 = alloca i64, align 8
  %113 = alloca i64, align 8
  %114 = alloca i64, align 8
  %115 = alloca i64, align 8
  %116 = alloca i64, align 8
  %117 = alloca i64, align 8
  %118 = alloca [15 x %struct.TestCase], align 8
  %119 = alloca %"class.std::__cxx11::basic_string", align 8
  %120 = alloca %"class.std::__cxx11::basic_string", align 8
  %121 = alloca %"class.std::__cxx11::basic_string", align 8
  %122 = alloca %"class.std::__cxx11::basic_string", align 8
  %123 = alloca %"class.std::__cxx11::basic_string", align 8
  %124 = alloca %"class.std::__cxx11::basic_string", align 8
  %125 = alloca %"class.std::__cxx11::basic_string", align 8
  %126 = alloca %"class.std::__cxx11::basic_string", align 8
  %127 = alloca %"class.std::__cxx11::basic_string", align 8
  %128 = alloca %"class.std::__cxx11::basic_string", align 8
  %129 = alloca %"class.std::__cxx11::basic_string", align 8
  %130 = alloca %"class.std::__cxx11::basic_string", align 8
  %131 = alloca %"class.std::__cxx11::basic_string", align 8
  %132 = alloca %"class.std::__cxx11::basic_string", align 8
  %133 = alloca %"class.std::__cxx11::basic_string", align 8
  %134 = alloca i64, align 8
  %135 = alloca [1 x %struct.TestCase], align 8
  %136 = alloca %"class.std::__cxx11::basic_string", align 8
  %137 = alloca %"class.std::function", align 8
  %138 = alloca i64, align 8
  %139 = alloca [1 x %struct.TestCase], align 8
  %140 = alloca %"class.std::__cxx11::basic_string", align 8
  %141 = alloca i64, align 8
  %142 = alloca i64, align 8
  %143 = alloca i64, align 8
  %144 = alloca i64, align 8
  %145 = alloca i64, align 8
  %146 = alloca i64, align 8
  %147 = alloca i64, align 8
  %148 = alloca i64, align 8
  %149 = alloca i64, align 8
  %150 = alloca i64, align 8
  %151 = alloca i64, align 8
  %152 = alloca [15 x %struct.TestCase], align 8
  %153 = alloca %"class.std::__cxx11::basic_string", align 8
  %154 = alloca %"class.std::__cxx11::basic_string", align 8
  %155 = alloca %"class.std::__cxx11::basic_string", align 8
  %156 = alloca %"class.std::__cxx11::basic_string", align 8
  %157 = alloca %"class.std::__cxx11::basic_string", align 8
  %158 = alloca %"class.std::__cxx11::basic_string", align 8
  %159 = alloca %"class.std::__cxx11::basic_string", align 8
  %160 = alloca %"class.std::__cxx11::basic_string", align 8
  %161 = alloca %"class.std::__cxx11::basic_string", align 8
  %162 = alloca %"class.std::__cxx11::basic_string", align 8
  %163 = alloca %"class.std::__cxx11::basic_string", align 8
  %164 = alloca %"class.std::__cxx11::basic_string", align 8
  %165 = alloca %"class.std::__cxx11::basic_string", align 8
  %166 = alloca %"class.std::__cxx11::basic_string", align 8
  %167 = alloca %"class.std::__cxx11::basic_string", align 8
  %168 = alloca i64, align 8
  %169 = alloca [1 x %struct.TestCase], align 8
  %170 = alloca %"class.std::__cxx11::basic_string", align 8
  %171 = alloca %"class.std::function", align 8
  %172 = alloca i64, align 8
  %173 = alloca [1 x %struct.TestCase], align 8
  %174 = alloca %"class.std::__cxx11::basic_string", align 8
  %175 = alloca i64, align 8
  %176 = alloca i64, align 8
  %177 = alloca i64, align 8
  %178 = alloca i64, align 8
  %179 = alloca i64, align 8
  %180 = alloca i64, align 8
  %181 = alloca i64, align 8
  %182 = alloca i64, align 8
  %183 = alloca i64, align 8
  %184 = alloca i64, align 8
  %185 = alloca i64, align 8
  %186 = alloca [15 x %struct.TestCase], align 8
  %187 = alloca %"class.std::__cxx11::basic_string", align 8
  %188 = alloca %"class.std::__cxx11::basic_string", align 8
  %189 = alloca %"class.std::__cxx11::basic_string", align 8
  %190 = alloca %"class.std::__cxx11::basic_string", align 8
  %191 = alloca %"class.std::__cxx11::basic_string", align 8
  %192 = alloca %"class.std::__cxx11::basic_string", align 8
  %193 = alloca %"class.std::__cxx11::basic_string", align 8
  %194 = alloca %"class.std::__cxx11::basic_string", align 8
  %195 = alloca %"class.std::__cxx11::basic_string", align 8
  %196 = alloca %"class.std::__cxx11::basic_string", align 8
  %197 = alloca %"class.std::__cxx11::basic_string", align 8
  %198 = alloca %"class.std::__cxx11::basic_string", align 8
  %199 = alloca %"class.std::__cxx11::basic_string", align 8
  %200 = alloca %"class.std::__cxx11::basic_string", align 8
  %201 = alloca %"class.std::__cxx11::basic_string", align 8
  %202 = alloca i64, align 8
  %203 = alloca [1 x %struct.TestCase], align 8
  %204 = alloca %"class.std::__cxx11::basic_string", align 8
  %205 = alloca %"class.std::function", align 8
  %206 = alloca i64, align 8
  %207 = alloca [1 x %struct.TestCase], align 8
  %208 = alloca %"class.std::__cxx11::basic_string", align 8
  %209 = alloca i64, align 8
  %210 = alloca i64, align 8
  %211 = alloca i64, align 8
  %212 = alloca i64, align 8
  %213 = alloca i64, align 8
  %214 = alloca i64, align 8
  %215 = alloca i64, align 8
  %216 = alloca i64, align 8
  %217 = alloca i64, align 8
  %218 = alloca i64, align 8
  %219 = alloca i64, align 8
  %220 = alloca [15 x %struct.TestCase], align 8
  %221 = alloca %"class.std::__cxx11::basic_string", align 8
  %222 = alloca %"class.std::__cxx11::basic_string", align 8
  %223 = alloca %"class.std::__cxx11::basic_string", align 8
  %224 = alloca %"class.std::__cxx11::basic_string", align 8
  %225 = alloca %"class.std::__cxx11::basic_string", align 8
  %226 = alloca %"class.std::__cxx11::basic_string", align 8
  %227 = alloca %"class.std::__cxx11::basic_string", align 8
  %228 = alloca %"class.std::__cxx11::basic_string", align 8
  %229 = alloca %"class.std::__cxx11::basic_string", align 8
  %230 = alloca %"class.std::__cxx11::basic_string", align 8
  %231 = alloca %"class.std::__cxx11::basic_string", align 8
  %232 = alloca %"class.std::__cxx11::basic_string", align 8
  %233 = alloca %"class.std::__cxx11::basic_string", align 8
  %234 = alloca %"class.std::__cxx11::basic_string", align 8
  %235 = alloca %"class.std::__cxx11::basic_string", align 8
  %236 = alloca i64, align 8
  %237 = alloca [1 x %struct.TestCase], align 8
  %238 = alloca %"class.std::__cxx11::basic_string", align 8
  %239 = alloca %"class.std::function", align 8
  %240 = alloca i64, align 8
  %241 = alloca [1 x %struct.TestCase], align 8
  %242 = alloca %"class.std::__cxx11::basic_string", align 8
  %243 = alloca i64, align 8
  %244 = alloca i64, align 8
  %245 = alloca i64, align 8
  %246 = alloca i64, align 8
  %247 = alloca i64, align 8
  %248 = alloca i64, align 8
  %249 = alloca i64, align 8
  %250 = alloca i64, align 8
  %251 = alloca i64, align 8
  %252 = alloca i64, align 8
  %253 = alloca i64, align 8
  %254 = alloca [15 x %struct.TestCase], align 8
  %255 = alloca %"class.std::__cxx11::basic_string", align 8
  %256 = alloca %"class.std::__cxx11::basic_string", align 8
  %257 = alloca %"class.std::__cxx11::basic_string", align 8
  %258 = alloca %"class.std::__cxx11::basic_string", align 8
  %259 = alloca %"class.std::__cxx11::basic_string", align 8
  %260 = alloca %"class.std::__cxx11::basic_string", align 8
  %261 = alloca %"class.std::__cxx11::basic_string", align 8
  %262 = alloca %"class.std::__cxx11::basic_string", align 8
  %263 = alloca %"class.std::__cxx11::basic_string", align 8
  %264 = alloca %"class.std::__cxx11::basic_string", align 8
  %265 = alloca %"class.std::__cxx11::basic_string", align 8
  %266 = alloca %"class.std::__cxx11::basic_string", align 8
  %267 = alloca %"class.std::__cxx11::basic_string", align 8
  %268 = alloca %"class.std::__cxx11::basic_string", align 8
  %269 = alloca %"class.std::__cxx11::basic_string", align 8
  %270 = alloca i64, align 8
  %271 = alloca [1 x %struct.TestCase], align 8
  %272 = alloca %"class.std::__cxx11::basic_string", align 8
  %273 = alloca %"class.std::function", align 8
  %274 = alloca i64, align 8
  %275 = alloca [1 x %struct.TestCase], align 8
  %276 = alloca %"class.std::__cxx11::basic_string", align 8
  %277 = alloca i64, align 8
  %278 = alloca i64, align 8
  %279 = alloca i64, align 8
  %280 = alloca i64, align 8
  %281 = alloca i64, align 8
  %282 = alloca i64, align 8
  %283 = alloca i64, align 8
  %284 = alloca i64, align 8
  %285 = alloca i64, align 8
  %286 = alloca i64, align 8
  %287 = alloca i64, align 8
  %288 = alloca [15 x %struct.TestCase], align 8
  %289 = alloca %"class.std::__cxx11::basic_string", align 8
  %290 = alloca %"class.std::__cxx11::basic_string", align 8
  %291 = alloca %"class.std::__cxx11::basic_string", align 8
  %292 = alloca %"class.std::__cxx11::basic_string", align 8
  %293 = alloca %"class.std::__cxx11::basic_string", align 8
  %294 = alloca %"class.std::__cxx11::basic_string", align 8
  %295 = alloca %"class.std::__cxx11::basic_string", align 8
  %296 = alloca %"class.std::__cxx11::basic_string", align 8
  %297 = alloca %"class.std::__cxx11::basic_string", align 8
  %298 = alloca %"class.std::__cxx11::basic_string", align 8
  %299 = alloca %"class.std::__cxx11::basic_string", align 8
  %300 = alloca %"class.std::__cxx11::basic_string", align 8
  %301 = alloca %"class.std::__cxx11::basic_string", align 8
  %302 = alloca %"class.std::__cxx11::basic_string", align 8
  %303 = alloca %"class.std::__cxx11::basic_string", align 8
  %304 = alloca i64, align 8
  %305 = alloca [1 x %struct.TestCase], align 8
  %306 = alloca %"class.std::__cxx11::basic_string", align 8
  %307 = alloca %"class.std::function", align 8
  %308 = alloca i64, align 8
  %309 = alloca [1 x %struct.TestCase], align 8
  %310 = alloca %"class.std::__cxx11::basic_string", align 8
  %311 = alloca i64, align 8
  %312 = alloca i64, align 8
  %313 = alloca i64, align 8
  %314 = alloca i64, align 8
  %315 = alloca i64, align 8
  %316 = alloca i64, align 8
  %317 = alloca i64, align 8
  %318 = alloca i64, align 8
  %319 = alloca i64, align 8
  %320 = alloca i64, align 8
  %321 = alloca i64, align 8
  %322 = alloca [15 x %struct.TestCase], align 8
  %323 = alloca %"class.std::__cxx11::basic_string", align 8
  %324 = alloca %"class.std::__cxx11::basic_string", align 8
  %325 = alloca %"class.std::__cxx11::basic_string", align 8
  %326 = alloca %"class.std::__cxx11::basic_string", align 8
  %327 = alloca %"class.std::__cxx11::basic_string", align 8
  %328 = alloca %"class.std::__cxx11::basic_string", align 8
  %329 = alloca %"class.std::__cxx11::basic_string", align 8
  %330 = alloca %"class.std::__cxx11::basic_string", align 8
  %331 = alloca %"class.std::__cxx11::basic_string", align 8
  %332 = alloca %"class.std::__cxx11::basic_string", align 8
  %333 = alloca %"class.std::__cxx11::basic_string", align 8
  %334 = alloca %"class.std::__cxx11::basic_string", align 8
  %335 = alloca %"class.std::__cxx11::basic_string", align 8
  %336 = alloca %"class.std::__cxx11::basic_string", align 8
  %337 = alloca %"class.std::__cxx11::basic_string", align 8
  %338 = alloca i64, align 8
  %339 = alloca [1 x %struct.TestCase], align 8
  %340 = alloca %"class.std::__cxx11::basic_string", align 8
  %341 = alloca %"class.std::function", align 8
  %342 = alloca i64, align 8
  %343 = alloca [1 x %struct.TestCase], align 8
  %344 = alloca %"class.std::__cxx11::basic_string", align 8
  %345 = alloca i64, align 8
  %346 = alloca i64, align 8
  %347 = alloca i64, align 8
  %348 = alloca i64, align 8
  %349 = alloca i64, align 8
  %350 = alloca i64, align 8
  %351 = alloca i64, align 8
  %352 = alloca i64, align 8
  %353 = alloca i64, align 8
  %354 = alloca i64, align 8
  %355 = alloca i64, align 8
  %356 = alloca i64, align 8
  %357 = alloca i64, align 8
  %358 = alloca [17 x %struct.TestCase], align 8
  %359 = alloca %"class.std::__cxx11::basic_string", align 8
  %360 = alloca %"class.std::__cxx11::basic_string", align 8
  %361 = alloca %"class.std::__cxx11::basic_string", align 8
  %362 = alloca %"class.std::__cxx11::basic_string", align 8
  %363 = alloca %"class.std::__cxx11::basic_string", align 8
  %364 = alloca %"class.std::__cxx11::basic_string", align 8
  %365 = alloca %"class.std::__cxx11::basic_string", align 8
  %366 = alloca %"class.std::__cxx11::basic_string", align 8
  %367 = alloca %"class.std::__cxx11::basic_string", align 8
  %368 = alloca %"class.std::__cxx11::basic_string", align 8
  %369 = alloca %"class.std::__cxx11::basic_string", align 8
  %370 = alloca %"class.std::__cxx11::basic_string", align 8
  %371 = alloca %"class.std::__cxx11::basic_string", align 8
  %372 = alloca %"class.std::__cxx11::basic_string", align 8
  %373 = alloca %"class.std::__cxx11::basic_string", align 8
  %374 = alloca %"class.std::__cxx11::basic_string", align 8
  %375 = alloca %"class.std::__cxx11::basic_string", align 8
  %376 = alloca i64, align 8
  %377 = alloca [1 x %struct.TestCase], align 8
  %378 = alloca %"class.std::__cxx11::basic_string", align 8
  %379 = alloca %"class.std::function", align 8
  %380 = alloca i64, align 8
  %381 = alloca [1 x %struct.TestCase], align 8
  %382 = alloca %"class.std::__cxx11::basic_string", align 8
  %383 = alloca i64, align 8
  %384 = alloca i64, align 8
  %385 = alloca i64, align 8
  %386 = alloca i64, align 8
  %387 = alloca i64, align 8
  %388 = alloca i64, align 8
  %389 = alloca i64, align 8
  %390 = alloca i64, align 8
  %391 = alloca i64, align 8
  %392 = alloca i64, align 8
  %393 = alloca i64, align 8
  %394 = alloca [15 x %struct.TestCase], align 8
  %395 = alloca %"class.std::__cxx11::basic_string", align 8
  %396 = alloca %"class.std::__cxx11::basic_string", align 8
  %397 = alloca %"class.std::__cxx11::basic_string", align 8
  %398 = alloca %"class.std::__cxx11::basic_string", align 8
  %399 = alloca %"class.std::__cxx11::basic_string", align 8
  %400 = alloca %"class.std::__cxx11::basic_string", align 8
  %401 = alloca %"class.std::__cxx11::basic_string", align 8
  %402 = alloca %"class.std::__cxx11::basic_string", align 8
  %403 = alloca %"class.std::__cxx11::basic_string", align 8
  %404 = alloca %"class.std::__cxx11::basic_string", align 8
  %405 = alloca %"class.std::__cxx11::basic_string", align 8
  %406 = alloca %"class.std::__cxx11::basic_string", align 8
  %407 = alloca %"class.std::__cxx11::basic_string", align 8
  %408 = alloca %"class.std::__cxx11::basic_string", align 8
  %409 = alloca %"class.std::__cxx11::basic_string", align 8
  %410 = alloca i64, align 8
  %411 = alloca [1 x %struct.TestCase], align 8
  %412 = alloca %"class.std::__cxx11::basic_string", align 8
  %413 = alloca i64, align 8
  %414 = alloca [1 x %struct.TestCase], align 8
  %415 = alloca %"class.std::__cxx11::basic_string", align 8
  %416 = alloca i64, align 8
  %417 = alloca [3 x %struct.TestCase], align 8
  %418 = alloca %"class.std::__cxx11::basic_string", align 8
  %419 = alloca %"class.std::__cxx11::basic_string", align 8
  %420 = alloca %"class.std::__cxx11::basic_string", align 8
  %421 = tail call noundef i32 @_ZN9benchmark8internal17InitializeStreamsEv()
  tail call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %422 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt8ios_base4InitD1Ev, ptr nonnull @_ZStL8__ioinit, ptr nonnull @__dso_handle) #21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %418)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %419)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %420)
  call void @llvm.lifetime.start.p0(i64 264, ptr nonnull %417) #21
  %423 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %418, i64 0, i32 2
  store ptr %423, ptr %418, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %423, ptr noundef nonnull align 1 dereferenceable(6) @.str, i64 6, i1 false)
  %424 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %418, i64 0, i32 1
  store i64 6, ptr %424, align 8, !tbaa !10
  %425 = getelementptr inbounds i8, ptr %418, i64 22
  store i8 0, ptr %425, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %417, ptr noundef nonnull %418, i32 noundef 1)
          to label %426 unwind label %570

426:                                              ; preds = %0
  %427 = getelementptr inbounds %struct.TestCase, ptr %417, i64 1
  %428 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %419, i64 0, i32 2
  store ptr %428, ptr %419, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %416) #21
  store i64 56, ptr %416, align 8, !tbaa !74
  %429 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %419, ptr noundef nonnull align 8 dereferenceable(8) %416, i64 noundef 0)
          to label %430 unwind label %572

430:                                              ; preds = %426
  store ptr %429, ptr %419, align 8, !tbaa !23
  %431 = load i64, ptr %416, align 8, !tbaa !74
  store i64 %431, ptr %428, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(56) %429, ptr noundef nonnull align 1 dereferenceable(56) @.str.3, i64 56, i1 false)
  %432 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %419, i64 0, i32 1
  store i64 %431, ptr %432, align 8, !tbaa !10
  %433 = getelementptr inbounds i8, ptr %429, i64 %431
  store i8 0, ptr %433, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %416) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %427, ptr noundef nonnull %419, i32 noundef 1)
          to label %434 unwind label %574

434:                                              ; preds = %430
  %435 = getelementptr inbounds %struct.TestCase, ptr %417, i64 2
  %436 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %420, i64 0, i32 2
  store ptr %436, ptr %420, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %436, ptr noundef nonnull align 1 dereferenceable(6) @.str, i64 6, i1 false)
  %437 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %420, i64 0, i32 1
  store i64 6, ptr %437, align 8, !tbaa !10
  %438 = getelementptr inbounds i8, ptr %420, i64 22
  store i8 0, ptr %438, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %435, ptr noundef nonnull %420, i32 noundef 1)
          to label %439 unwind label %576

439:                                              ; preds = %434
  %440 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 0, ptr nonnull %417, i64 3)
          to label %441 unwind label %578

441:                                              ; preds = %439
  %442 = getelementptr inbounds %struct.TestCase, ptr %417, i64 2, i32 3, i32 0, i32 1
  %443 = load ptr, ptr %442, align 8, !tbaa !88
  %444 = icmp eq ptr %443, null
  br i1 %444, label %469, label %445

445:                                              ; preds = %441
  %446 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %443, i64 0, i32 1
  %447 = load atomic i64, ptr %446 acquire, align 8
  %448 = icmp eq i64 %447, 4294967297
  %449 = trunc i64 %447 to i32
  br i1 %448, label %450, label %458

450:                                              ; preds = %445
  store i32 0, ptr %446, align 8, !tbaa !90
  %451 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %443, i64 0, i32 2
  store i32 0, ptr %451, align 4, !tbaa !92
  %452 = load ptr, ptr %443, align 8, !tbaa !58
  %453 = getelementptr inbounds ptr, ptr %452, i64 2
  %454 = load ptr, ptr %453, align 8
  call void %454(ptr noundef nonnull align 8 dereferenceable(16) %443) #21
  %455 = load ptr, ptr %443, align 8, !tbaa !58
  %456 = getelementptr inbounds ptr, ptr %455, i64 3
  %457 = load ptr, ptr %456, align 8
  call void %457(ptr noundef nonnull align 8 dereferenceable(16) %443) #21
  br label %469

458:                                              ; preds = %445
  %459 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %460 = icmp eq i8 %459, 0
  br i1 %460, label %463, label %461

461:                                              ; preds = %458
  %462 = add nsw i32 %449, -1
  store i32 %462, ptr %446, align 8, !tbaa !73
  br label %465

463:                                              ; preds = %458
  %464 = atomicrmw volatile add ptr %446, i32 -1 acq_rel, align 4
  br label %465

465:                                              ; preds = %463, %461
  %466 = phi i32 [ %449, %461 ], [ %464, %463 ]
  %467 = icmp eq i32 %466, 1
  br i1 %467, label %468, label %469, !prof !42

468:                                              ; preds = %465
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %443) #21
  br label %469

469:                                              ; preds = %468, %465, %450, %441
  %470 = getelementptr inbounds %struct.TestCase, ptr %417, i64 2, i32 2
  %471 = load ptr, ptr %470, align 8, !tbaa !23
  %472 = getelementptr inbounds %struct.TestCase, ptr %417, i64 2, i32 2, i32 2
  %473 = icmp eq ptr %471, %472
  br i1 %473, label %475, label %474

474:                                              ; preds = %469
  call void @_ZdlPv(ptr noundef %471) #22
  br label %475

475:                                              ; preds = %474, %469
  %476 = load ptr, ptr %435, align 8, !tbaa !23
  %477 = getelementptr inbounds %struct.TestCase, ptr %417, i64 2, i32 0, i32 2
  %478 = icmp eq ptr %476, %477
  br i1 %478, label %480, label %479

479:                                              ; preds = %475
  call void @_ZdlPv(ptr noundef %476) #22
  br label %480

480:                                              ; preds = %479, %475
  %481 = getelementptr inbounds %struct.TestCase, ptr %417, i64 1, i32 3, i32 0, i32 1
  %482 = load ptr, ptr %481, align 8, !tbaa !88
  %483 = icmp eq ptr %482, null
  br i1 %483, label %508, label %484

484:                                              ; preds = %480
  %485 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %482, i64 0, i32 1
  %486 = load atomic i64, ptr %485 acquire, align 8
  %487 = icmp eq i64 %486, 4294967297
  %488 = trunc i64 %486 to i32
  br i1 %487, label %500, label %489

489:                                              ; preds = %484
  %490 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %491 = icmp eq i8 %490, 0
  br i1 %491, label %494, label %492

492:                                              ; preds = %489
  %493 = add nsw i32 %488, -1
  store i32 %493, ptr %485, align 8, !tbaa !73
  br label %496

494:                                              ; preds = %489
  %495 = atomicrmw volatile add ptr %485, i32 -1 acq_rel, align 4
  br label %496

496:                                              ; preds = %494, %492
  %497 = phi i32 [ %488, %492 ], [ %495, %494 ]
  %498 = icmp eq i32 %497, 1
  br i1 %498, label %499, label %508, !prof !42

499:                                              ; preds = %496
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %482) #21
  br label %508

500:                                              ; preds = %484
  store i32 0, ptr %485, align 8, !tbaa !90
  %501 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %482, i64 0, i32 2
  store i32 0, ptr %501, align 4, !tbaa !92
  %502 = load ptr, ptr %482, align 8, !tbaa !58
  %503 = getelementptr inbounds ptr, ptr %502, i64 2
  %504 = load ptr, ptr %503, align 8
  call void %504(ptr noundef nonnull align 8 dereferenceable(16) %482) #21
  %505 = load ptr, ptr %482, align 8, !tbaa !58
  %506 = getelementptr inbounds ptr, ptr %505, i64 3
  %507 = load ptr, ptr %506, align 8
  call void %507(ptr noundef nonnull align 8 dereferenceable(16) %482) #21
  br label %508

508:                                              ; preds = %500, %499, %496, %480
  %509 = getelementptr inbounds %struct.TestCase, ptr %417, i64 1, i32 2
  %510 = load ptr, ptr %509, align 8, !tbaa !23
  %511 = getelementptr inbounds %struct.TestCase, ptr %417, i64 1, i32 2, i32 2
  %512 = icmp eq ptr %510, %511
  br i1 %512, label %514, label %513

513:                                              ; preds = %508
  call void @_ZdlPv(ptr noundef %510) #22
  br label %514

514:                                              ; preds = %513, %508
  %515 = load ptr, ptr %427, align 8, !tbaa !23
  %516 = getelementptr inbounds %struct.TestCase, ptr %417, i64 1, i32 0, i32 2
  %517 = icmp eq ptr %515, %516
  br i1 %517, label %519, label %518

518:                                              ; preds = %514
  call void @_ZdlPv(ptr noundef %515) #22
  br label %519

519:                                              ; preds = %518, %514
  %520 = getelementptr inbounds %struct.TestCase, ptr %417, i64 0, i32 3, i32 0, i32 1
  %521 = load ptr, ptr %520, align 8, !tbaa !88
  %522 = icmp eq ptr %521, null
  br i1 %522, label %547, label %523

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %521, i64 0, i32 1
  %525 = load atomic i64, ptr %524 acquire, align 8
  %526 = icmp eq i64 %525, 4294967297
  %527 = trunc i64 %525 to i32
  br i1 %526, label %539, label %528

528:                                              ; preds = %523
  %529 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %530 = icmp eq i8 %529, 0
  br i1 %530, label %533, label %531

531:                                              ; preds = %528
  %532 = add nsw i32 %527, -1
  store i32 %532, ptr %524, align 8, !tbaa !73
  br label %535

533:                                              ; preds = %528
  %534 = atomicrmw volatile add ptr %524, i32 -1 acq_rel, align 4
  br label %535

535:                                              ; preds = %533, %531
  %536 = phi i32 [ %527, %531 ], [ %534, %533 ]
  %537 = icmp eq i32 %536, 1
  br i1 %537, label %538, label %547, !prof !42

538:                                              ; preds = %535
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %521) #21
  br label %547

539:                                              ; preds = %523
  store i32 0, ptr %524, align 8, !tbaa !90
  %540 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %521, i64 0, i32 2
  store i32 0, ptr %540, align 4, !tbaa !92
  %541 = load ptr, ptr %521, align 8, !tbaa !58
  %542 = getelementptr inbounds ptr, ptr %541, i64 2
  %543 = load ptr, ptr %542, align 8
  call void %543(ptr noundef nonnull align 8 dereferenceable(16) %521) #21
  %544 = load ptr, ptr %521, align 8, !tbaa !58
  %545 = getelementptr inbounds ptr, ptr %544, i64 3
  %546 = load ptr, ptr %545, align 8
  call void %546(ptr noundef nonnull align 8 dereferenceable(16) %521) #21
  br label %547

547:                                              ; preds = %539, %538, %535, %519
  %548 = getelementptr inbounds %struct.TestCase, ptr %417, i64 0, i32 2
  %549 = load ptr, ptr %548, align 8, !tbaa !23
  %550 = getelementptr inbounds %struct.TestCase, ptr %417, i64 0, i32 2, i32 2
  %551 = icmp eq ptr %549, %550
  br i1 %551, label %553, label %552

552:                                              ; preds = %547
  call void @_ZdlPv(ptr noundef %549) #22
  br label %553

553:                                              ; preds = %552, %547
  %554 = load ptr, ptr %417, align 8, !tbaa !23
  %555 = getelementptr inbounds %struct.TestCase, ptr %417, i64 0, i32 0, i32 2
  %556 = icmp eq ptr %554, %555
  br i1 %556, label %558, label %557

557:                                              ; preds = %553
  call void @_ZdlPv(ptr noundef %554) #22
  br label %558

558:                                              ; preds = %557, %553
  %559 = load ptr, ptr %420, align 8, !tbaa !23
  %560 = icmp eq ptr %559, %436
  br i1 %560, label %562, label %561

561:                                              ; preds = %558
  call void @_ZdlPv(ptr noundef %559) #22
  br label %562

562:                                              ; preds = %561, %558
  %563 = load ptr, ptr %419, align 8, !tbaa !23
  %564 = icmp eq ptr %563, %428
  br i1 %564, label %566, label %565

565:                                              ; preds = %562
  call void @_ZdlPv(ptr noundef %563) #22
  br label %566

566:                                              ; preds = %565, %562
  %567 = load ptr, ptr %418, align 8, !tbaa !23
  %568 = icmp eq ptr %567, %423
  br i1 %568, label %765, label %569

569:                                              ; preds = %566
  call void @_ZdlPv(ptr noundef %567) #22
  br label %765

570:                                              ; preds = %0
  %571 = landingpad { ptr, i32 }
          cleanup
  br label %709

572:                                              ; preds = %426
  %573 = landingpad { ptr, i32 }
          cleanup
  br label %709

574:                                              ; preds = %430
  %575 = landingpad { ptr, i32 }
          cleanup
  br label %702

576:                                              ; preds = %434
  %577 = landingpad { ptr, i32 }
          cleanup
  br label %696

578:                                              ; preds = %439
  %579 = landingpad { ptr, i32 }
          cleanup
  %580 = getelementptr inbounds %struct.TestCase, ptr %417, i64 2, i32 3, i32 0, i32 1
  %581 = load ptr, ptr %580, align 8, !tbaa !88
  %582 = icmp eq ptr %581, null
  br i1 %582, label %607, label %583

583:                                              ; preds = %578
  %584 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %581, i64 0, i32 1
  %585 = load atomic i64, ptr %584 acquire, align 8
  %586 = icmp eq i64 %585, 4294967297
  %587 = trunc i64 %585 to i32
  br i1 %586, label %588, label %596

588:                                              ; preds = %583
  store i32 0, ptr %584, align 8, !tbaa !90
  %589 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %581, i64 0, i32 2
  store i32 0, ptr %589, align 4, !tbaa !92
  %590 = load ptr, ptr %581, align 8, !tbaa !58
  %591 = getelementptr inbounds ptr, ptr %590, i64 2
  %592 = load ptr, ptr %591, align 8
  call void %592(ptr noundef nonnull align 8 dereferenceable(16) %581) #21
  %593 = load ptr, ptr %581, align 8, !tbaa !58
  %594 = getelementptr inbounds ptr, ptr %593, i64 3
  %595 = load ptr, ptr %594, align 8
  call void %595(ptr noundef nonnull align 8 dereferenceable(16) %581) #21
  br label %607

596:                                              ; preds = %583
  %597 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %598 = icmp eq i8 %597, 0
  br i1 %598, label %601, label %599

599:                                              ; preds = %596
  %600 = add nsw i32 %587, -1
  store i32 %600, ptr %584, align 8, !tbaa !73
  br label %603

601:                                              ; preds = %596
  %602 = atomicrmw volatile add ptr %584, i32 -1 acq_rel, align 4
  br label %603

603:                                              ; preds = %601, %599
  %604 = phi i32 [ %587, %599 ], [ %602, %601 ]
  %605 = icmp eq i32 %604, 1
  br i1 %605, label %606, label %607, !prof !42

606:                                              ; preds = %603
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %581) #21
  br label %607

607:                                              ; preds = %606, %603, %588, %578
  %608 = getelementptr inbounds %struct.TestCase, ptr %417, i64 2, i32 2
  %609 = load ptr, ptr %608, align 8, !tbaa !23
  %610 = getelementptr inbounds %struct.TestCase, ptr %417, i64 2, i32 2, i32 2
  %611 = icmp eq ptr %609, %610
  br i1 %611, label %613, label %612

612:                                              ; preds = %607
  call void @_ZdlPv(ptr noundef %609) #22
  br label %613

613:                                              ; preds = %612, %607
  %614 = load ptr, ptr %435, align 8, !tbaa !23
  %615 = getelementptr inbounds %struct.TestCase, ptr %417, i64 2, i32 0, i32 2
  %616 = icmp eq ptr %614, %615
  br i1 %616, label %618, label %617

617:                                              ; preds = %613
  call void @_ZdlPv(ptr noundef %614) #22
  br label %618

618:                                              ; preds = %613, %617
  %619 = getelementptr inbounds %struct.TestCase, ptr %417, i64 1, i32 3, i32 0, i32 1
  %620 = load ptr, ptr %619, align 8, !tbaa !88
  %621 = icmp eq ptr %620, null
  br i1 %621, label %646, label %622

622:                                              ; preds = %618
  %623 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %620, i64 0, i32 1
  %624 = load atomic i64, ptr %623 acquire, align 8
  %625 = icmp eq i64 %624, 4294967297
  %626 = trunc i64 %624 to i32
  br i1 %625, label %627, label %635

627:                                              ; preds = %622
  store i32 0, ptr %623, align 8, !tbaa !90
  %628 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %620, i64 0, i32 2
  store i32 0, ptr %628, align 4, !tbaa !92
  %629 = load ptr, ptr %620, align 8, !tbaa !58
  %630 = getelementptr inbounds ptr, ptr %629, i64 2
  %631 = load ptr, ptr %630, align 8
  call void %631(ptr noundef nonnull align 8 dereferenceable(16) %620) #21
  %632 = load ptr, ptr %620, align 8, !tbaa !58
  %633 = getelementptr inbounds ptr, ptr %632, i64 3
  %634 = load ptr, ptr %633, align 8
  call void %634(ptr noundef nonnull align 8 dereferenceable(16) %620) #21
  br label %646

635:                                              ; preds = %622
  %636 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %637 = icmp eq i8 %636, 0
  br i1 %637, label %640, label %638

638:                                              ; preds = %635
  %639 = add nsw i32 %626, -1
  store i32 %639, ptr %623, align 8, !tbaa !73
  br label %642

640:                                              ; preds = %635
  %641 = atomicrmw volatile add ptr %623, i32 -1 acq_rel, align 4
  br label %642

642:                                              ; preds = %640, %638
  %643 = phi i32 [ %626, %638 ], [ %641, %640 ]
  %644 = icmp eq i32 %643, 1
  br i1 %644, label %645, label %646, !prof !42

645:                                              ; preds = %642
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %620) #21
  br label %646

646:                                              ; preds = %645, %642, %627, %618
  %647 = getelementptr inbounds %struct.TestCase, ptr %417, i64 1, i32 2
  %648 = load ptr, ptr %647, align 8, !tbaa !23
  %649 = getelementptr inbounds %struct.TestCase, ptr %417, i64 1, i32 2, i32 2
  %650 = icmp eq ptr %648, %649
  br i1 %650, label %652, label %651

651:                                              ; preds = %646
  call void @_ZdlPv(ptr noundef %648) #22
  br label %652

652:                                              ; preds = %651, %646
  %653 = load ptr, ptr %427, align 8, !tbaa !23
  %654 = getelementptr inbounds %struct.TestCase, ptr %417, i64 1, i32 0, i32 2
  %655 = icmp eq ptr %653, %654
  br i1 %655, label %657, label %656

656:                                              ; preds = %652
  call void @_ZdlPv(ptr noundef %653) #22
  br label %657

657:                                              ; preds = %652, %656
  %658 = getelementptr inbounds %struct.TestCase, ptr %417, i64 0, i32 3, i32 0, i32 1
  %659 = load ptr, ptr %658, align 8, !tbaa !88
  %660 = icmp eq ptr %659, null
  br i1 %660, label %685, label %661

661:                                              ; preds = %657
  %662 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %659, i64 0, i32 1
  %663 = load atomic i64, ptr %662 acquire, align 8
  %664 = icmp eq i64 %663, 4294967297
  %665 = trunc i64 %663 to i32
  br i1 %664, label %666, label %674

666:                                              ; preds = %661
  store i32 0, ptr %662, align 8, !tbaa !90
  %667 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %659, i64 0, i32 2
  store i32 0, ptr %667, align 4, !tbaa !92
  %668 = load ptr, ptr %659, align 8, !tbaa !58
  %669 = getelementptr inbounds ptr, ptr %668, i64 2
  %670 = load ptr, ptr %669, align 8
  call void %670(ptr noundef nonnull align 8 dereferenceable(16) %659) #21
  %671 = load ptr, ptr %659, align 8, !tbaa !58
  %672 = getelementptr inbounds ptr, ptr %671, i64 3
  %673 = load ptr, ptr %672, align 8
  call void %673(ptr noundef nonnull align 8 dereferenceable(16) %659) #21
  br label %685

674:                                              ; preds = %661
  %675 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %676 = icmp eq i8 %675, 0
  br i1 %676, label %679, label %677

677:                                              ; preds = %674
  %678 = add nsw i32 %665, -1
  store i32 %678, ptr %662, align 8, !tbaa !73
  br label %681

679:                                              ; preds = %674
  %680 = atomicrmw volatile add ptr %662, i32 -1 acq_rel, align 4
  br label %681

681:                                              ; preds = %679, %677
  %682 = phi i32 [ %665, %677 ], [ %680, %679 ]
  %683 = icmp eq i32 %682, 1
  br i1 %683, label %684, label %685, !prof !42

684:                                              ; preds = %681
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %659) #21
  br label %685

685:                                              ; preds = %684, %681, %666, %657
  %686 = getelementptr inbounds %struct.TestCase, ptr %417, i64 0, i32 2
  %687 = load ptr, ptr %686, align 8, !tbaa !23
  %688 = getelementptr inbounds %struct.TestCase, ptr %417, i64 0, i32 2, i32 2
  %689 = icmp eq ptr %687, %688
  br i1 %689, label %691, label %690

690:                                              ; preds = %685
  call void @_ZdlPv(ptr noundef %687) #22
  br label %691

691:                                              ; preds = %690, %685
  %692 = load ptr, ptr %417, align 8, !tbaa !23
  %693 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %417, i64 0, i32 2
  %694 = icmp eq ptr %692, %693
  br i1 %694, label %696, label %695

695:                                              ; preds = %691
  call void @_ZdlPv(ptr noundef %692) #22
  br label %696

696:                                              ; preds = %695, %691, %576
  %697 = phi { ptr, i32 } [ %577, %576 ], [ %579, %691 ], [ %579, %695 ]
  %698 = phi i1 [ true, %576 ], [ false, %691 ], [ false, %695 ]
  %699 = load ptr, ptr %420, align 8, !tbaa !23
  %700 = icmp eq ptr %699, %436
  br i1 %700, label %702, label %701

701:                                              ; preds = %696
  call void @_ZdlPv(ptr noundef %699) #22
  br label %702

702:                                              ; preds = %701, %696, %574
  %703 = phi ptr [ %427, %574 ], [ %435, %701 ], [ %435, %696 ]
  %704 = phi { ptr, i32 } [ %575, %574 ], [ %697, %701 ], [ %697, %696 ]
  %705 = phi i1 [ true, %574 ], [ %698, %701 ], [ %698, %696 ]
  %706 = load ptr, ptr %419, align 8, !tbaa !23
  %707 = icmp eq ptr %706, %428
  br i1 %707, label %709, label %708

708:                                              ; preds = %702
  call void @_ZdlPv(ptr noundef %706) #22
  br label %709

709:                                              ; preds = %708, %702, %572, %570
  %710 = phi ptr [ %417, %570 ], [ %427, %572 ], [ %703, %702 ], [ %703, %708 ]
  %711 = phi { ptr, i32 } [ %571, %570 ], [ %573, %572 ], [ %704, %702 ], [ %704, %708 ]
  %712 = phi i1 [ true, %570 ], [ true, %572 ], [ %705, %702 ], [ %705, %708 ]
  %713 = load ptr, ptr %418, align 8, !tbaa !23
  %714 = icmp eq ptr %713, %423
  br i1 %714, label %716, label %715

715:                                              ; preds = %709
  call void @_ZdlPv(ptr noundef %713) #22
  br label %716

716:                                              ; preds = %715, %709
  %717 = icmp ne ptr %417, %710
  %718 = select i1 %712, i1 %717, i1 false
  br i1 %718, label %719, label %764

719:                                              ; preds = %716, %760
  %720 = phi ptr [ %721, %760 ], [ %710, %716 ]
  %721 = getelementptr inbounds %struct.TestCase, ptr %720, i64 -1
  %722 = getelementptr %struct.TestCase, ptr %720, i64 -1, i32 3, i32 0, i32 1
  %723 = load ptr, ptr %722, align 8, !tbaa !88
  %724 = icmp eq ptr %723, null
  br i1 %724, label %749, label %725

725:                                              ; preds = %719
  %726 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %723, i64 0, i32 1
  %727 = load atomic i64, ptr %726 acquire, align 8
  %728 = icmp eq i64 %727, 4294967297
  %729 = trunc i64 %727 to i32
  br i1 %728, label %730, label %738

730:                                              ; preds = %725
  store i32 0, ptr %726, align 8, !tbaa !90
  %731 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %723, i64 0, i32 2
  store i32 0, ptr %731, align 4, !tbaa !92
  %732 = load ptr, ptr %723, align 8, !tbaa !58
  %733 = getelementptr inbounds ptr, ptr %732, i64 2
  %734 = load ptr, ptr %733, align 8
  call void %734(ptr noundef nonnull align 8 dereferenceable(16) %723) #21
  %735 = load ptr, ptr %723, align 8, !tbaa !58
  %736 = getelementptr inbounds ptr, ptr %735, i64 3
  %737 = load ptr, ptr %736, align 8
  call void %737(ptr noundef nonnull align 8 dereferenceable(16) %723) #21
  br label %749

738:                                              ; preds = %725
  %739 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %740 = icmp eq i8 %739, 0
  br i1 %740, label %743, label %741

741:                                              ; preds = %738
  %742 = add nsw i32 %729, -1
  store i32 %742, ptr %726, align 8, !tbaa !73
  br label %745

743:                                              ; preds = %738
  %744 = atomicrmw volatile add ptr %726, i32 -1 acq_rel, align 4
  br label %745

745:                                              ; preds = %743, %741
  %746 = phi i32 [ %729, %741 ], [ %744, %743 ]
  %747 = icmp eq i32 %746, 1
  br i1 %747, label %748, label %749, !prof !42

748:                                              ; preds = %745
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %723) #21
  br label %749

749:                                              ; preds = %748, %745, %730, %719
  %750 = getelementptr %struct.TestCase, ptr %720, i64 -1, i32 2
  %751 = load ptr, ptr %750, align 8, !tbaa !23
  %752 = getelementptr %struct.TestCase, ptr %720, i64 -1, i32 2, i32 2
  %753 = icmp eq ptr %751, %752
  br i1 %753, label %755, label %754

754:                                              ; preds = %749
  call void @_ZdlPv(ptr noundef %751) #22
  br label %755

755:                                              ; preds = %754, %749
  %756 = load ptr, ptr %721, align 8, !tbaa !23
  %757 = getelementptr %struct.TestCase, ptr %720, i64 -1, i32 0, i32 2
  %758 = icmp eq ptr %756, %757
  br i1 %758, label %760, label %759

759:                                              ; preds = %755
  call void @_ZdlPv(ptr noundef %756) #22
  br label %760

760:                                              ; preds = %755, %759
  %761 = icmp eq ptr %721, %417
  br i1 %761, label %764, label %719

762:                                              ; preds = %15830, %15807, %15708, %14699, %14597, %14594, %14571, %14472, %13463, %13361, %13358, %13335, %13236, %12227, %12125, %12122, %12099, %12000, %10991, %10889, %10886, %10863, %10764, %9755, %9652, %9649, %9626, %9527, %8518, %8415, %8412, %8389, %8290, %7281, %7178, %7175, %7152, %7053, %6044, %5942, %5939, %5916, %5817, %4806, %4704, %4701, %4678, %4579, %3568, %3466, %3463, %3440, %3341, %2206, %2104, %2101, %2078, %1979, %969, %867, %864, %764
  %763 = phi { ptr, i32 } [ %711, %764 ], [ %860, %864 ], [ %868, %867 ], [ %965, %969 ], [ %1928, %1979 ], [ %2074, %2078 ], [ %2093, %2101 ], [ %2105, %2104 ], [ %2202, %2206 ], [ %3290, %3341 ], [ %3436, %3440 ], [ %3455, %3463 ], [ %3467, %3466 ], [ %3564, %3568 ], [ %4528, %4579 ], [ %4674, %4678 ], [ %4693, %4701 ], [ %4705, %4704 ], [ %4802, %4806 ], [ %5766, %5817 ], [ %5912, %5916 ], [ %5931, %5939 ], [ %5943, %5942 ], [ %6040, %6044 ], [ %7002, %7053 ], [ %7148, %7152 ], [ %7167, %7175 ], [ %7179, %7178 ], [ %7277, %7281 ], [ %8239, %8290 ], [ %8385, %8389 ], [ %8404, %8412 ], [ %8416, %8415 ], [ %8514, %8518 ], [ %9476, %9527 ], [ %9622, %9626 ], [ %9641, %9649 ], [ %9653, %9652 ], [ %9751, %9755 ], [ %10713, %10764 ], [ %10859, %10863 ], [ %10878, %10886 ], [ %10890, %10889 ], [ %10987, %10991 ], [ %11949, %12000 ], [ %12095, %12099 ], [ %12114, %12122 ], [ %12126, %12125 ], [ %12223, %12227 ], [ %13185, %13236 ], [ %13331, %13335 ], [ %13350, %13358 ], [ %13362, %13361 ], [ %13459, %13463 ], [ %14421, %14472 ], [ %14567, %14571 ], [ %14586, %14594 ], [ %14598, %14597 ], [ %14695, %14699 ], [ %15657, %15708 ], [ %15803, %15807 ], [ %15822, %15830 ]
  resume { ptr, i32 } %763

764:                                              ; preds = %760, %716
  call void @llvm.lifetime.end.p0(i64 264, ptr nonnull %417) #21
  br label %762

765:                                              ; preds = %566, %569
  call void @llvm.lifetime.end.p0(i64 264, ptr nonnull %417) #21
  store i32 %440, ptr @dummy16, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %418)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %419)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %420)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %415)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %414) #21
  %766 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %415, i64 0, i32 2
  store ptr %766, ptr %415, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %413) #21
  store i64 23, ptr %413, align 8, !tbaa !74
  %767 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %415, ptr noundef nonnull align 8 dereferenceable(8) %413, i64 noundef 0)
  store ptr %767, ptr %415, align 8, !tbaa !23
  %768 = load i64, ptr %413, align 8, !tbaa !74
  store i64 %768, ptr %766, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(23) %767, ptr noundef nonnull align 1 dereferenceable(23) @.str.5, i64 23, i1 false)
  %769 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %415, i64 0, i32 1
  store i64 %768, ptr %769, align 8, !tbaa !10
  %770 = load ptr, ptr %415, align 8, !tbaa !23
  %771 = getelementptr inbounds i8, ptr %770, i64 %768
  store i8 0, ptr %771, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %413) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %414, ptr noundef nonnull %415, i32 noundef 0)
          to label %772 unwind label %817

772:                                              ; preds = %765
  %773 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 4, ptr nonnull %414, i64 1)
          to label %774 unwind label %819

774:                                              ; preds = %772
  %775 = getelementptr inbounds %struct.TestCase, ptr %414, i64 0, i32 3, i32 0, i32 1
  %776 = load ptr, ptr %775, align 8, !tbaa !88
  %777 = icmp eq ptr %776, null
  br i1 %777, label %802, label %778

778:                                              ; preds = %774
  %779 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %776, i64 0, i32 1
  %780 = load atomic i64, ptr %779 acquire, align 8
  %781 = icmp eq i64 %780, 4294967297
  %782 = trunc i64 %780 to i32
  br i1 %781, label %783, label %791

783:                                              ; preds = %778
  store i32 0, ptr %779, align 8, !tbaa !90
  %784 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %776, i64 0, i32 2
  store i32 0, ptr %784, align 4, !tbaa !92
  %785 = load ptr, ptr %776, align 8, !tbaa !58
  %786 = getelementptr inbounds ptr, ptr %785, i64 2
  %787 = load ptr, ptr %786, align 8
  call void %787(ptr noundef nonnull align 8 dereferenceable(16) %776) #21
  %788 = load ptr, ptr %776, align 8, !tbaa !58
  %789 = getelementptr inbounds ptr, ptr %788, i64 3
  %790 = load ptr, ptr %789, align 8
  call void %790(ptr noundef nonnull align 8 dereferenceable(16) %776) #21
  br label %802

791:                                              ; preds = %778
  %792 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %793 = icmp eq i8 %792, 0
  br i1 %793, label %796, label %794

794:                                              ; preds = %791
  %795 = add nsw i32 %782, -1
  store i32 %795, ptr %779, align 8, !tbaa !73
  br label %798

796:                                              ; preds = %791
  %797 = atomicrmw volatile add ptr %779, i32 -1 acq_rel, align 4
  br label %798

798:                                              ; preds = %796, %794
  %799 = phi i32 [ %782, %794 ], [ %797, %796 ]
  %800 = icmp eq i32 %799, 1
  br i1 %800, label %801, label %802, !prof !42

801:                                              ; preds = %798
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %776) #21
  br label %802

802:                                              ; preds = %801, %798, %783, %774
  %803 = getelementptr inbounds %struct.TestCase, ptr %414, i64 0, i32 2
  %804 = load ptr, ptr %803, align 8, !tbaa !23
  %805 = getelementptr inbounds %struct.TestCase, ptr %414, i64 0, i32 2, i32 2
  %806 = icmp eq ptr %804, %805
  br i1 %806, label %808, label %807

807:                                              ; preds = %802
  call void @_ZdlPv(ptr noundef %804) #22
  br label %808

808:                                              ; preds = %807, %802
  %809 = load ptr, ptr %414, align 8, !tbaa !23
  %810 = getelementptr inbounds %struct.TestCase, ptr %414, i64 0, i32 0, i32 2
  %811 = icmp eq ptr %809, %810
  br i1 %811, label %813, label %812

812:                                              ; preds = %808
  call void @_ZdlPv(ptr noundef %809) #22
  br label %813

813:                                              ; preds = %812, %808
  %814 = load ptr, ptr %415, align 8, !tbaa !23
  %815 = icmp eq ptr %814, %766
  br i1 %815, label %865, label %816

816:                                              ; preds = %813
  call void @_ZdlPv(ptr noundef %814) #22
  br label %865

817:                                              ; preds = %765
  %818 = landingpad { ptr, i32 }
          cleanup
  br label %859

819:                                              ; preds = %772
  %820 = landingpad { ptr, i32 }
          cleanup
  %821 = getelementptr inbounds %struct.TestCase, ptr %414, i64 0, i32 3, i32 0, i32 1
  %822 = load ptr, ptr %821, align 8, !tbaa !88
  %823 = icmp eq ptr %822, null
  br i1 %823, label %848, label %824

824:                                              ; preds = %819
  %825 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %822, i64 0, i32 1
  %826 = load atomic i64, ptr %825 acquire, align 8
  %827 = icmp eq i64 %826, 4294967297
  %828 = trunc i64 %826 to i32
  br i1 %827, label %829, label %837

829:                                              ; preds = %824
  store i32 0, ptr %825, align 8, !tbaa !90
  %830 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %822, i64 0, i32 2
  store i32 0, ptr %830, align 4, !tbaa !92
  %831 = load ptr, ptr %822, align 8, !tbaa !58
  %832 = getelementptr inbounds ptr, ptr %831, i64 2
  %833 = load ptr, ptr %832, align 8
  call void %833(ptr noundef nonnull align 8 dereferenceable(16) %822) #21
  %834 = load ptr, ptr %822, align 8, !tbaa !58
  %835 = getelementptr inbounds ptr, ptr %834, i64 3
  %836 = load ptr, ptr %835, align 8
  call void %836(ptr noundef nonnull align 8 dereferenceable(16) %822) #21
  br label %848

837:                                              ; preds = %824
  %838 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %839 = icmp eq i8 %838, 0
  br i1 %839, label %842, label %840

840:                                              ; preds = %837
  %841 = add nsw i32 %828, -1
  store i32 %841, ptr %825, align 8, !tbaa !73
  br label %844

842:                                              ; preds = %837
  %843 = atomicrmw volatile add ptr %825, i32 -1 acq_rel, align 4
  br label %844

844:                                              ; preds = %842, %840
  %845 = phi i32 [ %828, %840 ], [ %843, %842 ]
  %846 = icmp eq i32 %845, 1
  br i1 %846, label %847, label %848, !prof !42

847:                                              ; preds = %844
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %822) #21
  br label %848

848:                                              ; preds = %847, %844, %829, %819
  %849 = getelementptr inbounds %struct.TestCase, ptr %414, i64 0, i32 2
  %850 = load ptr, ptr %849, align 8, !tbaa !23
  %851 = getelementptr inbounds %struct.TestCase, ptr %414, i64 0, i32 2, i32 2
  %852 = icmp eq ptr %850, %851
  br i1 %852, label %854, label %853

853:                                              ; preds = %848
  call void @_ZdlPv(ptr noundef %850) #22
  br label %854

854:                                              ; preds = %853, %848
  %855 = load ptr, ptr %414, align 8, !tbaa !23
  %856 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %414, i64 0, i32 2
  %857 = icmp eq ptr %855, %856
  br i1 %857, label %859, label %858

858:                                              ; preds = %854
  call void @_ZdlPv(ptr noundef %855) #22
  br label %859

859:                                              ; preds = %858, %854, %817
  %860 = phi { ptr, i32 } [ %818, %817 ], [ %820, %854 ], [ %820, %858 ]
  %861 = load ptr, ptr %415, align 8, !tbaa !23
  %862 = icmp eq ptr %861, %766
  br i1 %862, label %864, label %863

863:                                              ; preds = %859
  call void @_ZdlPv(ptr noundef %861) #22
  br label %864

864:                                              ; preds = %863, %859
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %414) #21
  br label %762

865:                                              ; preds = %813, %816
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %414) #21
  store i32 %773, ptr @dummy17, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %415)
  %866 = call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #25
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %866, ptr noundef nonnull @.str.9)
          to label %869 unwind label %867

867:                                              ; preds = %865
  %868 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %866) #22
  br label %762

869:                                              ; preds = %865
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %866, align 8, !tbaa !58
  %870 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %866, i64 0, i32 1
  store ptr @_Z18BM_Counters_SimpleRN9benchmark5StateE, ptr %870, align 8, !tbaa !93
  %871 = call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %866)
  store ptr %871, ptr @_ZL27benchmark_uniq_2_benchmark_, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %412)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %411) #21
  %872 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %412, i64 0, i32 2
  store ptr %872, ptr %412, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %410) #21
  store i64 62, ptr %410, align 8, !tbaa !74
  %873 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %412, ptr noundef nonnull align 8 dereferenceable(8) %410, i64 noundef 0)
  store ptr %873, ptr %412, align 8, !tbaa !23
  %874 = load i64, ptr %410, align 8, !tbaa !74
  store i64 %874, ptr %872, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(62) %873, ptr noundef nonnull align 1 dereferenceable(62) @.str.11, i64 62, i1 false)
  %875 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %412, i64 0, i32 1
  store i64 %874, ptr %875, align 8, !tbaa !10
  %876 = getelementptr inbounds i8, ptr %873, i64 %874
  store i8 0, ptr %876, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %410) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %411, ptr noundef nonnull %412, i32 noundef 0)
          to label %877 unwind label %922

877:                                              ; preds = %869
  %878 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 0, ptr nonnull %411, i64 1)
          to label %879 unwind label %924

879:                                              ; preds = %877
  %880 = getelementptr inbounds %struct.TestCase, ptr %411, i64 0, i32 3, i32 0, i32 1
  %881 = load ptr, ptr %880, align 8, !tbaa !88
  %882 = icmp eq ptr %881, null
  br i1 %882, label %907, label %883

883:                                              ; preds = %879
  %884 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %881, i64 0, i32 1
  %885 = load atomic i64, ptr %884 acquire, align 8
  %886 = icmp eq i64 %885, 4294967297
  %887 = trunc i64 %885 to i32
  br i1 %886, label %888, label %896

888:                                              ; preds = %883
  store i32 0, ptr %884, align 8, !tbaa !90
  %889 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %881, i64 0, i32 2
  store i32 0, ptr %889, align 4, !tbaa !92
  %890 = load ptr, ptr %881, align 8, !tbaa !58
  %891 = getelementptr inbounds ptr, ptr %890, i64 2
  %892 = load ptr, ptr %891, align 8
  call void %892(ptr noundef nonnull align 8 dereferenceable(16) %881) #21
  %893 = load ptr, ptr %881, align 8, !tbaa !58
  %894 = getelementptr inbounds ptr, ptr %893, i64 3
  %895 = load ptr, ptr %894, align 8
  call void %895(ptr noundef nonnull align 8 dereferenceable(16) %881) #21
  br label %907

896:                                              ; preds = %883
  %897 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %898 = icmp eq i8 %897, 0
  br i1 %898, label %901, label %899

899:                                              ; preds = %896
  %900 = add nsw i32 %887, -1
  store i32 %900, ptr %884, align 8, !tbaa !73
  br label %903

901:                                              ; preds = %896
  %902 = atomicrmw volatile add ptr %884, i32 -1 acq_rel, align 4
  br label %903

903:                                              ; preds = %901, %899
  %904 = phi i32 [ %887, %899 ], [ %902, %901 ]
  %905 = icmp eq i32 %904, 1
  br i1 %905, label %906, label %907, !prof !42

906:                                              ; preds = %903
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %881) #21
  br label %907

907:                                              ; preds = %906, %903, %888, %879
  %908 = getelementptr inbounds %struct.TestCase, ptr %411, i64 0, i32 2
  %909 = load ptr, ptr %908, align 8, !tbaa !23
  %910 = getelementptr inbounds %struct.TestCase, ptr %411, i64 0, i32 2, i32 2
  %911 = icmp eq ptr %909, %910
  br i1 %911, label %913, label %912

912:                                              ; preds = %907
  call void @_ZdlPv(ptr noundef %909) #22
  br label %913

913:                                              ; preds = %912, %907
  %914 = load ptr, ptr %411, align 8, !tbaa !23
  %915 = getelementptr inbounds %struct.TestCase, ptr %411, i64 0, i32 0, i32 2
  %916 = icmp eq ptr %914, %915
  br i1 %916, label %918, label %917

917:                                              ; preds = %913
  call void @_ZdlPv(ptr noundef %914) #22
  br label %918

918:                                              ; preds = %917, %913
  %919 = load ptr, ptr %412, align 8, !tbaa !23
  %920 = icmp eq ptr %919, %872
  br i1 %920, label %970, label %921

921:                                              ; preds = %918
  call void @_ZdlPv(ptr noundef %919) #22
  br label %970

922:                                              ; preds = %869
  %923 = landingpad { ptr, i32 }
          cleanup
  br label %964

924:                                              ; preds = %877
  %925 = landingpad { ptr, i32 }
          cleanup
  %926 = getelementptr inbounds %struct.TestCase, ptr %411, i64 0, i32 3, i32 0, i32 1
  %927 = load ptr, ptr %926, align 8, !tbaa !88
  %928 = icmp eq ptr %927, null
  br i1 %928, label %953, label %929

929:                                              ; preds = %924
  %930 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %927, i64 0, i32 1
  %931 = load atomic i64, ptr %930 acquire, align 8
  %932 = icmp eq i64 %931, 4294967297
  %933 = trunc i64 %931 to i32
  br i1 %932, label %934, label %942

934:                                              ; preds = %929
  store i32 0, ptr %930, align 8, !tbaa !90
  %935 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %927, i64 0, i32 2
  store i32 0, ptr %935, align 4, !tbaa !92
  %936 = load ptr, ptr %927, align 8, !tbaa !58
  %937 = getelementptr inbounds ptr, ptr %936, i64 2
  %938 = load ptr, ptr %937, align 8
  call void %938(ptr noundef nonnull align 8 dereferenceable(16) %927) #21
  %939 = load ptr, ptr %927, align 8, !tbaa !58
  %940 = getelementptr inbounds ptr, ptr %939, i64 3
  %941 = load ptr, ptr %940, align 8
  call void %941(ptr noundef nonnull align 8 dereferenceable(16) %927) #21
  br label %953

942:                                              ; preds = %929
  %943 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %944 = icmp eq i8 %943, 0
  br i1 %944, label %947, label %945

945:                                              ; preds = %942
  %946 = add nsw i32 %933, -1
  store i32 %946, ptr %930, align 8, !tbaa !73
  br label %949

947:                                              ; preds = %942
  %948 = atomicrmw volatile add ptr %930, i32 -1 acq_rel, align 4
  br label %949

949:                                              ; preds = %947, %945
  %950 = phi i32 [ %933, %945 ], [ %948, %947 ]
  %951 = icmp eq i32 %950, 1
  br i1 %951, label %952, label %953, !prof !42

952:                                              ; preds = %949
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %927) #21
  br label %953

953:                                              ; preds = %952, %949, %934, %924
  %954 = getelementptr inbounds %struct.TestCase, ptr %411, i64 0, i32 2
  %955 = load ptr, ptr %954, align 8, !tbaa !23
  %956 = getelementptr inbounds %struct.TestCase, ptr %411, i64 0, i32 2, i32 2
  %957 = icmp eq ptr %955, %956
  br i1 %957, label %959, label %958

958:                                              ; preds = %953
  call void @_ZdlPv(ptr noundef %955) #22
  br label %959

959:                                              ; preds = %958, %953
  %960 = load ptr, ptr %411, align 8, !tbaa !23
  %961 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %411, i64 0, i32 2
  %962 = icmp eq ptr %960, %961
  br i1 %962, label %964, label %963

963:                                              ; preds = %959
  call void @_ZdlPv(ptr noundef %960) #22
  br label %964

964:                                              ; preds = %963, %959, %922
  %965 = phi { ptr, i32 } [ %923, %922 ], [ %925, %959 ], [ %925, %963 ]
  %966 = load ptr, ptr %412, align 8, !tbaa !23
  %967 = icmp eq ptr %966, %872
  br i1 %967, label %969, label %968

968:                                              ; preds = %964
  call void @_ZdlPv(ptr noundef %966) #22
  br label %969

969:                                              ; preds = %968, %964
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %411) #21
  br label %762

970:                                              ; preds = %918, %921
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %411) #21
  store i32 %878, ptr @dummy33, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %412)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %395)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %396)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %397)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %398)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %399)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %400)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %401)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %402)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %403)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %404)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %405)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %406)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %407)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %408)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %409)
  call void @llvm.lifetime.start.p0(i64 1320, ptr nonnull %394) #21
  %971 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %395, i64 0, i32 2
  store ptr %971, ptr %395, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %393) #21
  store i64 30, ptr %393, align 8, !tbaa !74
  %972 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %395, ptr noundef nonnull align 8 dereferenceable(8) %393, i64 noundef 0)
  store ptr %972, ptr %395, align 8, !tbaa !23
  %973 = load i64, ptr %393, align 8, !tbaa !74
  store i64 %973, ptr %971, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(30) %972, ptr noundef nonnull align 1 dereferenceable(30) @.str.13, i64 30, i1 false)
  %974 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %395, i64 0, i32 1
  store i64 %973, ptr %974, align 8, !tbaa !10
  %975 = load ptr, ptr %395, align 8, !tbaa !23
  %976 = getelementptr inbounds i8, ptr %975, i64 %973
  store i8 0, ptr %976, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %393) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %394, ptr noundef nonnull %395, i32 noundef 0)
          to label %977 unwind label %1193

977:                                              ; preds = %970
  %978 = getelementptr inbounds %struct.TestCase, ptr %394, i64 1
  %979 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %396, i64 0, i32 2
  store ptr %979, ptr %396, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %392) #21
  store i64 19, ptr %392, align 8, !tbaa !74
  %980 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %396, ptr noundef nonnull align 8 dereferenceable(8) %392, i64 noundef 0)
          to label %981 unwind label %1195

981:                                              ; preds = %977
  store ptr %980, ptr %396, align 8, !tbaa !23
  %982 = load i64, ptr %392, align 8, !tbaa !74
  store i64 %982, ptr %979, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %980, ptr noundef nonnull align 1 dereferenceable(19) @.str.14, i64 19, i1 false)
  %983 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %396, i64 0, i32 1
  store i64 %982, ptr %983, align 8, !tbaa !10
  %984 = load ptr, ptr %396, align 8, !tbaa !23
  %985 = getelementptr inbounds i8, ptr %984, i64 %982
  store i8 0, ptr %985, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %392) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %978, ptr noundef nonnull %396, i32 noundef 1)
          to label %986 unwind label %1197

986:                                              ; preds = %981
  %987 = getelementptr inbounds %struct.TestCase, ptr %394, i64 2
  %988 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %397, i64 0, i32 2
  store ptr %988, ptr %397, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %391) #21
  store i64 32, ptr %391, align 8, !tbaa !74
  %989 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %397, ptr noundef nonnull align 8 dereferenceable(8) %391, i64 noundef 0)
          to label %990 unwind label %1199

990:                                              ; preds = %986
  store ptr %989, ptr %397, align 8, !tbaa !23
  %991 = load i64, ptr %391, align 8, !tbaa !74
  store i64 %991, ptr %988, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %989, ptr noundef nonnull align 1 dereferenceable(32) @.str.15, i64 32, i1 false)
  %992 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %397, i64 0, i32 1
  store i64 %991, ptr %992, align 8, !tbaa !10
  %993 = load ptr, ptr %397, align 8, !tbaa !23
  %994 = getelementptr inbounds i8, ptr %993, i64 %991
  store i8 0, ptr %994, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %391) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %987, ptr noundef nonnull %397, i32 noundef 1)
          to label %995 unwind label %1201

995:                                              ; preds = %990
  %996 = getelementptr inbounds %struct.TestCase, ptr %394, i64 3
  %997 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %398, i64 0, i32 2
  store ptr %997, ptr %398, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %390) #21
  store i64 34, ptr %390, align 8, !tbaa !74
  %998 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %398, ptr noundef nonnull align 8 dereferenceable(8) %390, i64 noundef 0)
          to label %999 unwind label %1203

999:                                              ; preds = %995
  store ptr %998, ptr %398, align 8, !tbaa !23
  %1000 = load i64, ptr %390, align 8, !tbaa !74
  store i64 %1000, ptr %997, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(34) %998, ptr noundef nonnull align 1 dereferenceable(34) @.str.16, i64 34, i1 false)
  %1001 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %398, i64 0, i32 1
  store i64 %1000, ptr %1001, align 8, !tbaa !10
  %1002 = getelementptr inbounds i8, ptr %998, i64 %1000
  store i8 0, ptr %1002, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %390) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %996, ptr noundef nonnull %398, i32 noundef 1)
          to label %1003 unwind label %1205

1003:                                             ; preds = %999
  %1004 = getelementptr inbounds %struct.TestCase, ptr %394, i64 4
  %1005 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %399, i64 0, i32 2
  store ptr %1005, ptr %399, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %389) #21
  store i64 25, ptr %389, align 8, !tbaa !74
  %1006 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %399, ptr noundef nonnull align 8 dereferenceable(8) %389, i64 noundef 0)
          to label %1007 unwind label %1207

1007:                                             ; preds = %1003
  store ptr %1006, ptr %399, align 8, !tbaa !23
  %1008 = load i64, ptr %389, align 8, !tbaa !74
  store i64 %1008, ptr %1005, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(25) %1006, ptr noundef nonnull align 1 dereferenceable(25) @.str.17, i64 25, i1 false)
  %1009 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %399, i64 0, i32 1
  store i64 %1008, ptr %1009, align 8, !tbaa !10
  %1010 = load ptr, ptr %399, align 8, !tbaa !23
  %1011 = getelementptr inbounds i8, ptr %1010, i64 %1008
  store i8 0, ptr %1011, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %389) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %1004, ptr noundef nonnull %399, i32 noundef 1)
          to label %1012 unwind label %1209

1012:                                             ; preds = %1007
  %1013 = getelementptr inbounds %struct.TestCase, ptr %394, i64 5
  %1014 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %400, i64 0, i32 2
  store ptr %1014, ptr %400, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %388) #21
  store i64 18, ptr %388, align 8, !tbaa !74
  %1015 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %400, ptr noundef nonnull align 8 dereferenceable(8) %388, i64 noundef 0)
          to label %1016 unwind label %1211

1016:                                             ; preds = %1012
  store ptr %1015, ptr %400, align 8, !tbaa !23
  %1017 = load i64, ptr %388, align 8, !tbaa !74
  store i64 %1017, ptr %1014, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(18) %1015, ptr noundef nonnull align 1 dereferenceable(18) @.str.18, i64 18, i1 false)
  %1018 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %400, i64 0, i32 1
  store i64 %1017, ptr %1018, align 8, !tbaa !10
  %1019 = load ptr, ptr %400, align 8, !tbaa !23
  %1020 = getelementptr inbounds i8, ptr %1019, i64 %1017
  store i8 0, ptr %1020, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %388) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %1013, ptr noundef nonnull %400, i32 noundef 1)
          to label %1021 unwind label %1213

1021:                                             ; preds = %1016
  %1022 = getelementptr inbounds %struct.TestCase, ptr %394, i64 6
  %1023 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %401, i64 0, i32 2
  store ptr %1023, ptr %401, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %387) #21
  store i64 23, ptr %387, align 8, !tbaa !74
  %1024 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %401, ptr noundef nonnull align 8 dereferenceable(8) %387, i64 noundef 0)
          to label %1025 unwind label %1215

1025:                                             ; preds = %1021
  store ptr %1024, ptr %401, align 8, !tbaa !23
  %1026 = load i64, ptr %387, align 8, !tbaa !74
  store i64 %1026, ptr %1023, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(23) %1024, ptr noundef nonnull align 1 dereferenceable(23) @.str.19, i64 23, i1 false)
  %1027 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %401, i64 0, i32 1
  store i64 %1026, ptr %1027, align 8, !tbaa !10
  %1028 = load ptr, ptr %401, align 8, !tbaa !23
  %1029 = getelementptr inbounds i8, ptr %1028, i64 %1026
  store i8 0, ptr %1029, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %387) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %1022, ptr noundef nonnull %401, i32 noundef 1)
          to label %1030 unwind label %1217

1030:                                             ; preds = %1025
  %1031 = getelementptr inbounds %struct.TestCase, ptr %394, i64 7
  %1032 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %402, i64 0, i32 2
  store ptr %1032, ptr %402, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %1032, ptr noundef nonnull align 1 dereferenceable(14) @.str.20, i64 14, i1 false)
  %1033 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %402, i64 0, i32 1
  store i64 14, ptr %1033, align 8, !tbaa !10
  %1034 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %402, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %1034, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %1031, ptr noundef nonnull %402, i32 noundef 1)
          to label %1035 unwind label %1219

1035:                                             ; preds = %1030
  %1036 = getelementptr inbounds %struct.TestCase, ptr %394, i64 8
  %1037 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %403, i64 0, i32 2
  store ptr %1037, ptr %403, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %386) #21
  store i64 20, ptr %386, align 8, !tbaa !74
  %1038 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %403, ptr noundef nonnull align 8 dereferenceable(8) %386, i64 noundef 0)
          to label %1039 unwind label %1221

1039:                                             ; preds = %1035
  store ptr %1038, ptr %403, align 8, !tbaa !23
  %1040 = load i64, ptr %386, align 8, !tbaa !74
  store i64 %1040, ptr %1037, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %1038, ptr noundef nonnull align 1 dereferenceable(20) @.str.21, i64 20, i1 false)
  %1041 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %403, i64 0, i32 1
  store i64 %1040, ptr %1041, align 8, !tbaa !10
  %1042 = load ptr, ptr %403, align 8, !tbaa !23
  %1043 = getelementptr inbounds i8, ptr %1042, i64 %1040
  store i8 0, ptr %1043, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %386) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %1036, ptr noundef nonnull %403, i32 noundef 1)
          to label %1044 unwind label %1223

1044:                                             ; preds = %1039
  %1045 = getelementptr inbounds %struct.TestCase, ptr %394, i64 9
  %1046 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %404, i64 0, i32 2
  store ptr %1046, ptr %404, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %385) #21
  store i64 21, ptr %385, align 8, !tbaa !74
  %1047 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %404, ptr noundef nonnull align 8 dereferenceable(8) %385, i64 noundef 0)
          to label %1048 unwind label %1225

1048:                                             ; preds = %1044
  store ptr %1047, ptr %404, align 8, !tbaa !23
  %1049 = load i64, ptr %385, align 8, !tbaa !74
  store i64 %1049, ptr %1046, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %1047, ptr noundef nonnull align 1 dereferenceable(21) @.str.22, i64 21, i1 false)
  %1050 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %404, i64 0, i32 1
  store i64 %1049, ptr %1050, align 8, !tbaa !10
  %1051 = load ptr, ptr %404, align 8, !tbaa !23
  %1052 = getelementptr inbounds i8, ptr %1051, i64 %1049
  store i8 0, ptr %1052, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %385) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %1045, ptr noundef nonnull %404, i32 noundef 1)
          to label %1053 unwind label %1227

1053:                                             ; preds = %1048
  %1054 = getelementptr inbounds %struct.TestCase, ptr %394, i64 10
  %1055 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %405, i64 0, i32 2
  store ptr %1055, ptr %405, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %384) #21
  store i64 20, ptr %384, align 8, !tbaa !74
  %1056 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %405, ptr noundef nonnull align 8 dereferenceable(8) %384, i64 noundef 0)
          to label %1057 unwind label %1229

1057:                                             ; preds = %1053
  store ptr %1056, ptr %405, align 8, !tbaa !23
  %1058 = load i64, ptr %384, align 8, !tbaa !74
  store i64 %1058, ptr %1055, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %1056, ptr noundef nonnull align 1 dereferenceable(20) @.str.23, i64 20, i1 false)
  %1059 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %405, i64 0, i32 1
  store i64 %1058, ptr %1059, align 8, !tbaa !10
  %1060 = load ptr, ptr %405, align 8, !tbaa !23
  %1061 = getelementptr inbounds i8, ptr %1060, i64 %1058
  store i8 0, ptr %1061, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %384) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %1054, ptr noundef nonnull %405, i32 noundef 1)
          to label %1062 unwind label %1231

1062:                                             ; preds = %1057
  %1063 = getelementptr inbounds %struct.TestCase, ptr %394, i64 11
  %1064 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %406, i64 0, i32 2
  store ptr %1064, ptr %406, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %383) #21
  store i64 19, ptr %383, align 8, !tbaa !74
  %1065 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %406, ptr noundef nonnull align 8 dereferenceable(8) %383, i64 noundef 0)
          to label %1066 unwind label %1233

1066:                                             ; preds = %1062
  store ptr %1065, ptr %406, align 8, !tbaa !23
  %1067 = load i64, ptr %383, align 8, !tbaa !74
  store i64 %1067, ptr %1064, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %1065, ptr noundef nonnull align 1 dereferenceable(19) @.str.24, i64 19, i1 false)
  %1068 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %406, i64 0, i32 1
  store i64 %1067, ptr %1068, align 8, !tbaa !10
  %1069 = load ptr, ptr %406, align 8, !tbaa !23
  %1070 = getelementptr inbounds i8, ptr %1069, i64 %1067
  store i8 0, ptr %1070, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %383) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %1063, ptr noundef nonnull %406, i32 noundef 1)
          to label %1071 unwind label %1235

1071:                                             ; preds = %1066
  %1072 = getelementptr inbounds %struct.TestCase, ptr %394, i64 12
  %1073 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %407, i64 0, i32 2
  store ptr %1073, ptr %407, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(15) %1073, ptr noundef nonnull align 1 dereferenceable(15) @.str.25, i64 15, i1 false)
  %1074 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %407, i64 0, i32 1
  store i64 15, ptr %1074, align 8, !tbaa !10
  %1075 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %407, i64 0, i32 2, i32 1, i64 7
  store i8 0, ptr %1075, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %1072, ptr noundef nonnull %407, i32 noundef 1)
          to label %1076 unwind label %1237

1076:                                             ; preds = %1071
  %1077 = getelementptr inbounds %struct.TestCase, ptr %394, i64 13
  %1078 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %408, i64 0, i32 2
  store ptr %1078, ptr %408, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %1078, ptr noundef nonnull align 1 dereferenceable(14) @.str.26, i64 14, i1 false)
  %1079 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %408, i64 0, i32 1
  store i64 14, ptr %1079, align 8, !tbaa !10
  %1080 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %408, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %1080, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %1077, ptr noundef nonnull %408, i32 noundef 1)
          to label %1081 unwind label %1239

1081:                                             ; preds = %1076
  %1082 = getelementptr inbounds %struct.TestCase, ptr %394, i64 14
  %1083 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %409, i64 0, i32 2
  store ptr %1083, ptr %409, align 8, !tbaa !5
  store i8 125, ptr %1083, align 8, !tbaa !13
  %1084 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %409, i64 0, i32 1
  store i64 1, ptr %1084, align 8, !tbaa !10
  %1085 = getelementptr inbounds i8, ptr %409, i64 17
  store i8 0, ptr %1085, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %1082, ptr noundef nonnull %409, i32 noundef 1)
          to label %1086 unwind label %1241

1086:                                             ; preds = %1081
  %1087 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 2, ptr nonnull %394, i64 15)
          to label %1088 unwind label %1243

1088:                                             ; preds = %1086
  %1089 = getelementptr inbounds %struct.TestCase, ptr %394, i64 15
  br label %1090

1090:                                             ; preds = %1131, %1088
  %1091 = phi ptr [ %1089, %1088 ], [ %1092, %1131 ]
  %1092 = getelementptr inbounds %struct.TestCase, ptr %1091, i64 -1
  %1093 = getelementptr %struct.TestCase, ptr %1091, i64 -1, i32 3, i32 0, i32 1
  %1094 = load ptr, ptr %1093, align 8, !tbaa !88
  %1095 = icmp eq ptr %1094, null
  br i1 %1095, label %1120, label %1096

1096:                                             ; preds = %1090
  %1097 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1094, i64 0, i32 1
  %1098 = load atomic i64, ptr %1097 acquire, align 8
  %1099 = icmp eq i64 %1098, 4294967297
  %1100 = trunc i64 %1098 to i32
  br i1 %1099, label %1101, label %1109

1101:                                             ; preds = %1096
  store i32 0, ptr %1097, align 8, !tbaa !90
  %1102 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1094, i64 0, i32 2
  store i32 0, ptr %1102, align 4, !tbaa !92
  %1103 = load ptr, ptr %1094, align 8, !tbaa !58
  %1104 = getelementptr inbounds ptr, ptr %1103, i64 2
  %1105 = load ptr, ptr %1104, align 8
  call void %1105(ptr noundef nonnull align 8 dereferenceable(16) %1094) #21
  %1106 = load ptr, ptr %1094, align 8, !tbaa !58
  %1107 = getelementptr inbounds ptr, ptr %1106, i64 3
  %1108 = load ptr, ptr %1107, align 8
  call void %1108(ptr noundef nonnull align 8 dereferenceable(16) %1094) #21
  br label %1120

1109:                                             ; preds = %1096
  %1110 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1111 = icmp eq i8 %1110, 0
  br i1 %1111, label %1114, label %1112

1112:                                             ; preds = %1109
  %1113 = add nsw i32 %1100, -1
  store i32 %1113, ptr %1097, align 8, !tbaa !73
  br label %1116

1114:                                             ; preds = %1109
  %1115 = atomicrmw volatile add ptr %1097, i32 -1 acq_rel, align 4
  br label %1116

1116:                                             ; preds = %1114, %1112
  %1117 = phi i32 [ %1100, %1112 ], [ %1115, %1114 ]
  %1118 = icmp eq i32 %1117, 1
  br i1 %1118, label %1119, label %1120, !prof !42

1119:                                             ; preds = %1116
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1094) #21
  br label %1120

1120:                                             ; preds = %1119, %1116, %1101, %1090
  %1121 = getelementptr %struct.TestCase, ptr %1091, i64 -1, i32 2
  %1122 = load ptr, ptr %1121, align 8, !tbaa !23
  %1123 = getelementptr %struct.TestCase, ptr %1091, i64 -1, i32 2, i32 2
  %1124 = icmp eq ptr %1122, %1123
  br i1 %1124, label %1126, label %1125

1125:                                             ; preds = %1120
  call void @_ZdlPv(ptr noundef %1122) #22
  br label %1126

1126:                                             ; preds = %1125, %1120
  %1127 = load ptr, ptr %1092, align 8, !tbaa !23
  %1128 = getelementptr %struct.TestCase, ptr %1091, i64 -1, i32 0, i32 2
  %1129 = icmp eq ptr %1127, %1128
  br i1 %1129, label %1131, label %1130

1130:                                             ; preds = %1126
  call void @_ZdlPv(ptr noundef %1127) #22
  br label %1131

1131:                                             ; preds = %1130, %1126
  %1132 = icmp eq ptr %1092, %394
  br i1 %1132, label %1133, label %1090

1133:                                             ; preds = %1131
  %1134 = load ptr, ptr %409, align 8, !tbaa !23
  %1135 = icmp eq ptr %1134, %1083
  br i1 %1135, label %1137, label %1136

1136:                                             ; preds = %1133
  call void @_ZdlPv(ptr noundef %1134) #22
  br label %1137

1137:                                             ; preds = %1136, %1133
  %1138 = load ptr, ptr %408, align 8, !tbaa !23
  %1139 = icmp eq ptr %1138, %1078
  br i1 %1139, label %1141, label %1140

1140:                                             ; preds = %1137
  call void @_ZdlPv(ptr noundef %1138) #22
  br label %1141

1141:                                             ; preds = %1140, %1137
  %1142 = load ptr, ptr %407, align 8, !tbaa !23
  %1143 = icmp eq ptr %1142, %1073
  br i1 %1143, label %1145, label %1144

1144:                                             ; preds = %1141
  call void @_ZdlPv(ptr noundef %1142) #22
  br label %1145

1145:                                             ; preds = %1144, %1141
  %1146 = load ptr, ptr %406, align 8, !tbaa !23
  %1147 = icmp eq ptr %1146, %1064
  br i1 %1147, label %1149, label %1148

1148:                                             ; preds = %1145
  call void @_ZdlPv(ptr noundef %1146) #22
  br label %1149

1149:                                             ; preds = %1148, %1145
  %1150 = load ptr, ptr %405, align 8, !tbaa !23
  %1151 = icmp eq ptr %1150, %1055
  br i1 %1151, label %1153, label %1152

1152:                                             ; preds = %1149
  call void @_ZdlPv(ptr noundef %1150) #22
  br label %1153

1153:                                             ; preds = %1152, %1149
  %1154 = load ptr, ptr %404, align 8, !tbaa !23
  %1155 = icmp eq ptr %1154, %1046
  br i1 %1155, label %1157, label %1156

1156:                                             ; preds = %1153
  call void @_ZdlPv(ptr noundef %1154) #22
  br label %1157

1157:                                             ; preds = %1156, %1153
  %1158 = load ptr, ptr %403, align 8, !tbaa !23
  %1159 = icmp eq ptr %1158, %1037
  br i1 %1159, label %1161, label %1160

1160:                                             ; preds = %1157
  call void @_ZdlPv(ptr noundef %1158) #22
  br label %1161

1161:                                             ; preds = %1160, %1157
  %1162 = load ptr, ptr %402, align 8, !tbaa !23
  %1163 = icmp eq ptr %1162, %1032
  br i1 %1163, label %1165, label %1164

1164:                                             ; preds = %1161
  call void @_ZdlPv(ptr noundef %1162) #22
  br label %1165

1165:                                             ; preds = %1164, %1161
  %1166 = load ptr, ptr %401, align 8, !tbaa !23
  %1167 = icmp eq ptr %1166, %1023
  br i1 %1167, label %1169, label %1168

1168:                                             ; preds = %1165
  call void @_ZdlPv(ptr noundef %1166) #22
  br label %1169

1169:                                             ; preds = %1168, %1165
  %1170 = load ptr, ptr %400, align 8, !tbaa !23
  %1171 = icmp eq ptr %1170, %1014
  br i1 %1171, label %1173, label %1172

1172:                                             ; preds = %1169
  call void @_ZdlPv(ptr noundef %1170) #22
  br label %1173

1173:                                             ; preds = %1172, %1169
  %1174 = load ptr, ptr %399, align 8, !tbaa !23
  %1175 = icmp eq ptr %1174, %1005
  br i1 %1175, label %1177, label %1176

1176:                                             ; preds = %1173
  call void @_ZdlPv(ptr noundef %1174) #22
  br label %1177

1177:                                             ; preds = %1176, %1173
  %1178 = load ptr, ptr %398, align 8, !tbaa !23
  %1179 = icmp eq ptr %1178, %997
  br i1 %1179, label %1181, label %1180

1180:                                             ; preds = %1177
  call void @_ZdlPv(ptr noundef %1178) #22
  br label %1181

1181:                                             ; preds = %1180, %1177
  %1182 = load ptr, ptr %397, align 8, !tbaa !23
  %1183 = icmp eq ptr %1182, %988
  br i1 %1183, label %1185, label %1184

1184:                                             ; preds = %1181
  call void @_ZdlPv(ptr noundef %1182) #22
  br label %1185

1185:                                             ; preds = %1184, %1181
  %1186 = load ptr, ptr %396, align 8, !tbaa !23
  %1187 = icmp eq ptr %1186, %979
  br i1 %1187, label %1189, label %1188

1188:                                             ; preds = %1185
  call void @_ZdlPv(ptr noundef %1186) #22
  br label %1189

1189:                                             ; preds = %1188, %1185
  %1190 = load ptr, ptr %395, align 8, !tbaa !23
  %1191 = icmp eq ptr %1190, %971
  br i1 %1191, label %1980, label %1192

1192:                                             ; preds = %1189
  call void @_ZdlPv(ptr noundef %1190) #22
  br label %1980

1193:                                             ; preds = %970
  %1194 = landingpad { ptr, i32 }
          cleanup
  br label %1926

1195:                                             ; preds = %977
  %1196 = landingpad { ptr, i32 }
          cleanup
  br label %1926

1197:                                             ; preds = %981
  %1198 = landingpad { ptr, i32 }
          cleanup
  br label %1919

1199:                                             ; preds = %986
  %1200 = landingpad { ptr, i32 }
          cleanup
  br label %1919

1201:                                             ; preds = %990
  %1202 = landingpad { ptr, i32 }
          cleanup
  br label %1912

1203:                                             ; preds = %995
  %1204 = landingpad { ptr, i32 }
          cleanup
  br label %1912

1205:                                             ; preds = %999
  %1206 = landingpad { ptr, i32 }
          cleanup
  br label %1905

1207:                                             ; preds = %1003
  %1208 = landingpad { ptr, i32 }
          cleanup
  br label %1905

1209:                                             ; preds = %1007
  %1210 = landingpad { ptr, i32 }
          cleanup
  br label %1898

1211:                                             ; preds = %1012
  %1212 = landingpad { ptr, i32 }
          cleanup
  br label %1898

1213:                                             ; preds = %1016
  %1214 = landingpad { ptr, i32 }
          cleanup
  br label %1891

1215:                                             ; preds = %1021
  %1216 = landingpad { ptr, i32 }
          cleanup
  br label %1891

1217:                                             ; preds = %1025
  %1218 = landingpad { ptr, i32 }
          cleanup
  br label %1884

1219:                                             ; preds = %1030
  %1220 = landingpad { ptr, i32 }
          cleanup
  br label %1877

1221:                                             ; preds = %1035
  %1222 = landingpad { ptr, i32 }
          cleanup
  br label %1877

1223:                                             ; preds = %1039
  %1224 = landingpad { ptr, i32 }
          cleanup
  br label %1870

1225:                                             ; preds = %1044
  %1226 = landingpad { ptr, i32 }
          cleanup
  br label %1870

1227:                                             ; preds = %1048
  %1228 = landingpad { ptr, i32 }
          cleanup
  br label %1863

1229:                                             ; preds = %1053
  %1230 = landingpad { ptr, i32 }
          cleanup
  br label %1863

1231:                                             ; preds = %1057
  %1232 = landingpad { ptr, i32 }
          cleanup
  br label %1856

1233:                                             ; preds = %1062
  %1234 = landingpad { ptr, i32 }
          cleanup
  br label %1856

1235:                                             ; preds = %1066
  %1236 = landingpad { ptr, i32 }
          cleanup
  br label %1849

1237:                                             ; preds = %1071
  %1238 = landingpad { ptr, i32 }
          cleanup
  br label %1842

1239:                                             ; preds = %1076
  %1240 = landingpad { ptr, i32 }
          cleanup
  br label %1835

1241:                                             ; preds = %1081
  %1242 = landingpad { ptr, i32 }
          cleanup
  br label %1829

1243:                                             ; preds = %1086
  %1244 = landingpad { ptr, i32 }
          cleanup
  %1245 = getelementptr inbounds %struct.TestCase, ptr %394, i64 14, i32 3, i32 0, i32 1
  %1246 = load ptr, ptr %1245, align 8, !tbaa !88
  %1247 = icmp eq ptr %1246, null
  br i1 %1247, label %1272, label %1248

1248:                                             ; preds = %1243
  %1249 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1246, i64 0, i32 1
  %1250 = load atomic i64, ptr %1249 acquire, align 8
  %1251 = icmp eq i64 %1250, 4294967297
  %1252 = trunc i64 %1250 to i32
  br i1 %1251, label %1253, label %1261

1253:                                             ; preds = %1248
  store i32 0, ptr %1249, align 8, !tbaa !90
  %1254 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1246, i64 0, i32 2
  store i32 0, ptr %1254, align 4, !tbaa !92
  %1255 = load ptr, ptr %1246, align 8, !tbaa !58
  %1256 = getelementptr inbounds ptr, ptr %1255, i64 2
  %1257 = load ptr, ptr %1256, align 8
  call void %1257(ptr noundef nonnull align 8 dereferenceable(16) %1246) #21
  %1258 = load ptr, ptr %1246, align 8, !tbaa !58
  %1259 = getelementptr inbounds ptr, ptr %1258, i64 3
  %1260 = load ptr, ptr %1259, align 8
  call void %1260(ptr noundef nonnull align 8 dereferenceable(16) %1246) #21
  br label %1272

1261:                                             ; preds = %1248
  %1262 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1263 = icmp eq i8 %1262, 0
  br i1 %1263, label %1266, label %1264

1264:                                             ; preds = %1261
  %1265 = add nsw i32 %1252, -1
  store i32 %1265, ptr %1249, align 8, !tbaa !73
  br label %1268

1266:                                             ; preds = %1261
  %1267 = atomicrmw volatile add ptr %1249, i32 -1 acq_rel, align 4
  br label %1268

1268:                                             ; preds = %1266, %1264
  %1269 = phi i32 [ %1252, %1264 ], [ %1267, %1266 ]
  %1270 = icmp eq i32 %1269, 1
  br i1 %1270, label %1271, label %1272, !prof !42

1271:                                             ; preds = %1268
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1246) #21
  br label %1272

1272:                                             ; preds = %1271, %1268, %1253, %1243
  %1273 = getelementptr inbounds %struct.TestCase, ptr %394, i64 14, i32 2
  %1274 = load ptr, ptr %1273, align 8, !tbaa !23
  %1275 = getelementptr inbounds %struct.TestCase, ptr %394, i64 14, i32 2, i32 2
  %1276 = icmp eq ptr %1274, %1275
  br i1 %1276, label %1278, label %1277

1277:                                             ; preds = %1272
  call void @_ZdlPv(ptr noundef %1274) #22
  br label %1278

1278:                                             ; preds = %1277, %1272
  %1279 = load ptr, ptr %1082, align 8, !tbaa !23
  %1280 = getelementptr inbounds %struct.TestCase, ptr %394, i64 14, i32 0, i32 2
  %1281 = icmp eq ptr %1279, %1280
  br i1 %1281, label %1283, label %1282

1282:                                             ; preds = %1278
  call void @_ZdlPv(ptr noundef %1279) #22
  br label %1283

1283:                                             ; preds = %1278, %1282
  %1284 = getelementptr inbounds %struct.TestCase, ptr %394, i64 13, i32 3, i32 0, i32 1
  %1285 = load ptr, ptr %1284, align 8, !tbaa !88
  %1286 = icmp eq ptr %1285, null
  br i1 %1286, label %1311, label %1287

1287:                                             ; preds = %1283
  %1288 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1285, i64 0, i32 1
  %1289 = load atomic i64, ptr %1288 acquire, align 8
  %1290 = icmp eq i64 %1289, 4294967297
  %1291 = trunc i64 %1289 to i32
  br i1 %1290, label %1292, label %1300

1292:                                             ; preds = %1287
  store i32 0, ptr %1288, align 8, !tbaa !90
  %1293 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1285, i64 0, i32 2
  store i32 0, ptr %1293, align 4, !tbaa !92
  %1294 = load ptr, ptr %1285, align 8, !tbaa !58
  %1295 = getelementptr inbounds ptr, ptr %1294, i64 2
  %1296 = load ptr, ptr %1295, align 8
  call void %1296(ptr noundef nonnull align 8 dereferenceable(16) %1285) #21
  %1297 = load ptr, ptr %1285, align 8, !tbaa !58
  %1298 = getelementptr inbounds ptr, ptr %1297, i64 3
  %1299 = load ptr, ptr %1298, align 8
  call void %1299(ptr noundef nonnull align 8 dereferenceable(16) %1285) #21
  br label %1311

1300:                                             ; preds = %1287
  %1301 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1302 = icmp eq i8 %1301, 0
  br i1 %1302, label %1305, label %1303

1303:                                             ; preds = %1300
  %1304 = add nsw i32 %1291, -1
  store i32 %1304, ptr %1288, align 8, !tbaa !73
  br label %1307

1305:                                             ; preds = %1300
  %1306 = atomicrmw volatile add ptr %1288, i32 -1 acq_rel, align 4
  br label %1307

1307:                                             ; preds = %1305, %1303
  %1308 = phi i32 [ %1291, %1303 ], [ %1306, %1305 ]
  %1309 = icmp eq i32 %1308, 1
  br i1 %1309, label %1310, label %1311, !prof !42

1310:                                             ; preds = %1307
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1285) #21
  br label %1311

1311:                                             ; preds = %1310, %1307, %1292, %1283
  %1312 = getelementptr inbounds %struct.TestCase, ptr %394, i64 13, i32 2
  %1313 = load ptr, ptr %1312, align 8, !tbaa !23
  %1314 = getelementptr inbounds %struct.TestCase, ptr %394, i64 13, i32 2, i32 2
  %1315 = icmp eq ptr %1313, %1314
  br i1 %1315, label %1317, label %1316

1316:                                             ; preds = %1311
  call void @_ZdlPv(ptr noundef %1313) #22
  br label %1317

1317:                                             ; preds = %1316, %1311
  %1318 = load ptr, ptr %1077, align 8, !tbaa !23
  %1319 = getelementptr inbounds %struct.TestCase, ptr %394, i64 13, i32 0, i32 2
  %1320 = icmp eq ptr %1318, %1319
  br i1 %1320, label %1322, label %1321

1321:                                             ; preds = %1317
  call void @_ZdlPv(ptr noundef %1318) #22
  br label %1322

1322:                                             ; preds = %1317, %1321
  %1323 = getelementptr inbounds %struct.TestCase, ptr %394, i64 12, i32 3, i32 0, i32 1
  %1324 = load ptr, ptr %1323, align 8, !tbaa !88
  %1325 = icmp eq ptr %1324, null
  br i1 %1325, label %1350, label %1326

1326:                                             ; preds = %1322
  %1327 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1324, i64 0, i32 1
  %1328 = load atomic i64, ptr %1327 acquire, align 8
  %1329 = icmp eq i64 %1328, 4294967297
  %1330 = trunc i64 %1328 to i32
  br i1 %1329, label %1331, label %1339

1331:                                             ; preds = %1326
  store i32 0, ptr %1327, align 8, !tbaa !90
  %1332 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1324, i64 0, i32 2
  store i32 0, ptr %1332, align 4, !tbaa !92
  %1333 = load ptr, ptr %1324, align 8, !tbaa !58
  %1334 = getelementptr inbounds ptr, ptr %1333, i64 2
  %1335 = load ptr, ptr %1334, align 8
  call void %1335(ptr noundef nonnull align 8 dereferenceable(16) %1324) #21
  %1336 = load ptr, ptr %1324, align 8, !tbaa !58
  %1337 = getelementptr inbounds ptr, ptr %1336, i64 3
  %1338 = load ptr, ptr %1337, align 8
  call void %1338(ptr noundef nonnull align 8 dereferenceable(16) %1324) #21
  br label %1350

1339:                                             ; preds = %1326
  %1340 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1341 = icmp eq i8 %1340, 0
  br i1 %1341, label %1344, label %1342

1342:                                             ; preds = %1339
  %1343 = add nsw i32 %1330, -1
  store i32 %1343, ptr %1327, align 8, !tbaa !73
  br label %1346

1344:                                             ; preds = %1339
  %1345 = atomicrmw volatile add ptr %1327, i32 -1 acq_rel, align 4
  br label %1346

1346:                                             ; preds = %1344, %1342
  %1347 = phi i32 [ %1330, %1342 ], [ %1345, %1344 ]
  %1348 = icmp eq i32 %1347, 1
  br i1 %1348, label %1349, label %1350, !prof !42

1349:                                             ; preds = %1346
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1324) #21
  br label %1350

1350:                                             ; preds = %1349, %1346, %1331, %1322
  %1351 = getelementptr inbounds %struct.TestCase, ptr %394, i64 12, i32 2
  %1352 = load ptr, ptr %1351, align 8, !tbaa !23
  %1353 = getelementptr inbounds %struct.TestCase, ptr %394, i64 12, i32 2, i32 2
  %1354 = icmp eq ptr %1352, %1353
  br i1 %1354, label %1356, label %1355

1355:                                             ; preds = %1350
  call void @_ZdlPv(ptr noundef %1352) #22
  br label %1356

1356:                                             ; preds = %1355, %1350
  %1357 = load ptr, ptr %1072, align 8, !tbaa !23
  %1358 = getelementptr inbounds %struct.TestCase, ptr %394, i64 12, i32 0, i32 2
  %1359 = icmp eq ptr %1357, %1358
  br i1 %1359, label %1361, label %1360

1360:                                             ; preds = %1356
  call void @_ZdlPv(ptr noundef %1357) #22
  br label %1361

1361:                                             ; preds = %1356, %1360
  %1362 = getelementptr inbounds %struct.TestCase, ptr %394, i64 11, i32 3, i32 0, i32 1
  %1363 = load ptr, ptr %1362, align 8, !tbaa !88
  %1364 = icmp eq ptr %1363, null
  br i1 %1364, label %1389, label %1365

1365:                                             ; preds = %1361
  %1366 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1363, i64 0, i32 1
  %1367 = load atomic i64, ptr %1366 acquire, align 8
  %1368 = icmp eq i64 %1367, 4294967297
  %1369 = trunc i64 %1367 to i32
  br i1 %1368, label %1370, label %1378

1370:                                             ; preds = %1365
  store i32 0, ptr %1366, align 8, !tbaa !90
  %1371 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1363, i64 0, i32 2
  store i32 0, ptr %1371, align 4, !tbaa !92
  %1372 = load ptr, ptr %1363, align 8, !tbaa !58
  %1373 = getelementptr inbounds ptr, ptr %1372, i64 2
  %1374 = load ptr, ptr %1373, align 8
  call void %1374(ptr noundef nonnull align 8 dereferenceable(16) %1363) #21
  %1375 = load ptr, ptr %1363, align 8, !tbaa !58
  %1376 = getelementptr inbounds ptr, ptr %1375, i64 3
  %1377 = load ptr, ptr %1376, align 8
  call void %1377(ptr noundef nonnull align 8 dereferenceable(16) %1363) #21
  br label %1389

1378:                                             ; preds = %1365
  %1379 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1380 = icmp eq i8 %1379, 0
  br i1 %1380, label %1383, label %1381

1381:                                             ; preds = %1378
  %1382 = add nsw i32 %1369, -1
  store i32 %1382, ptr %1366, align 8, !tbaa !73
  br label %1385

1383:                                             ; preds = %1378
  %1384 = atomicrmw volatile add ptr %1366, i32 -1 acq_rel, align 4
  br label %1385

1385:                                             ; preds = %1383, %1381
  %1386 = phi i32 [ %1369, %1381 ], [ %1384, %1383 ]
  %1387 = icmp eq i32 %1386, 1
  br i1 %1387, label %1388, label %1389, !prof !42

1388:                                             ; preds = %1385
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1363) #21
  br label %1389

1389:                                             ; preds = %1388, %1385, %1370, %1361
  %1390 = getelementptr inbounds %struct.TestCase, ptr %394, i64 11, i32 2
  %1391 = load ptr, ptr %1390, align 8, !tbaa !23
  %1392 = getelementptr inbounds %struct.TestCase, ptr %394, i64 11, i32 2, i32 2
  %1393 = icmp eq ptr %1391, %1392
  br i1 %1393, label %1395, label %1394

1394:                                             ; preds = %1389
  call void @_ZdlPv(ptr noundef %1391) #22
  br label %1395

1395:                                             ; preds = %1394, %1389
  %1396 = load ptr, ptr %1063, align 8, !tbaa !23
  %1397 = getelementptr inbounds %struct.TestCase, ptr %394, i64 11, i32 0, i32 2
  %1398 = icmp eq ptr %1396, %1397
  br i1 %1398, label %1400, label %1399

1399:                                             ; preds = %1395
  call void @_ZdlPv(ptr noundef %1396) #22
  br label %1400

1400:                                             ; preds = %1395, %1399
  %1401 = getelementptr inbounds %struct.TestCase, ptr %394, i64 10, i32 3, i32 0, i32 1
  %1402 = load ptr, ptr %1401, align 8, !tbaa !88
  %1403 = icmp eq ptr %1402, null
  br i1 %1403, label %1428, label %1404

1404:                                             ; preds = %1400
  %1405 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1402, i64 0, i32 1
  %1406 = load atomic i64, ptr %1405 acquire, align 8
  %1407 = icmp eq i64 %1406, 4294967297
  %1408 = trunc i64 %1406 to i32
  br i1 %1407, label %1409, label %1417

1409:                                             ; preds = %1404
  store i32 0, ptr %1405, align 8, !tbaa !90
  %1410 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1402, i64 0, i32 2
  store i32 0, ptr %1410, align 4, !tbaa !92
  %1411 = load ptr, ptr %1402, align 8, !tbaa !58
  %1412 = getelementptr inbounds ptr, ptr %1411, i64 2
  %1413 = load ptr, ptr %1412, align 8
  call void %1413(ptr noundef nonnull align 8 dereferenceable(16) %1402) #21
  %1414 = load ptr, ptr %1402, align 8, !tbaa !58
  %1415 = getelementptr inbounds ptr, ptr %1414, i64 3
  %1416 = load ptr, ptr %1415, align 8
  call void %1416(ptr noundef nonnull align 8 dereferenceable(16) %1402) #21
  br label %1428

1417:                                             ; preds = %1404
  %1418 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1419 = icmp eq i8 %1418, 0
  br i1 %1419, label %1422, label %1420

1420:                                             ; preds = %1417
  %1421 = add nsw i32 %1408, -1
  store i32 %1421, ptr %1405, align 8, !tbaa !73
  br label %1424

1422:                                             ; preds = %1417
  %1423 = atomicrmw volatile add ptr %1405, i32 -1 acq_rel, align 4
  br label %1424

1424:                                             ; preds = %1422, %1420
  %1425 = phi i32 [ %1408, %1420 ], [ %1423, %1422 ]
  %1426 = icmp eq i32 %1425, 1
  br i1 %1426, label %1427, label %1428, !prof !42

1427:                                             ; preds = %1424
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1402) #21
  br label %1428

1428:                                             ; preds = %1427, %1424, %1409, %1400
  %1429 = getelementptr inbounds %struct.TestCase, ptr %394, i64 10, i32 2
  %1430 = load ptr, ptr %1429, align 8, !tbaa !23
  %1431 = getelementptr inbounds %struct.TestCase, ptr %394, i64 10, i32 2, i32 2
  %1432 = icmp eq ptr %1430, %1431
  br i1 %1432, label %1434, label %1433

1433:                                             ; preds = %1428
  call void @_ZdlPv(ptr noundef %1430) #22
  br label %1434

1434:                                             ; preds = %1433, %1428
  %1435 = load ptr, ptr %1054, align 8, !tbaa !23
  %1436 = getelementptr inbounds %struct.TestCase, ptr %394, i64 10, i32 0, i32 2
  %1437 = icmp eq ptr %1435, %1436
  br i1 %1437, label %1439, label %1438

1438:                                             ; preds = %1434
  call void @_ZdlPv(ptr noundef %1435) #22
  br label %1439

1439:                                             ; preds = %1434, %1438
  %1440 = getelementptr inbounds %struct.TestCase, ptr %394, i64 9, i32 3, i32 0, i32 1
  %1441 = load ptr, ptr %1440, align 8, !tbaa !88
  %1442 = icmp eq ptr %1441, null
  br i1 %1442, label %1467, label %1443

1443:                                             ; preds = %1439
  %1444 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1441, i64 0, i32 1
  %1445 = load atomic i64, ptr %1444 acquire, align 8
  %1446 = icmp eq i64 %1445, 4294967297
  %1447 = trunc i64 %1445 to i32
  br i1 %1446, label %1448, label %1456

1448:                                             ; preds = %1443
  store i32 0, ptr %1444, align 8, !tbaa !90
  %1449 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1441, i64 0, i32 2
  store i32 0, ptr %1449, align 4, !tbaa !92
  %1450 = load ptr, ptr %1441, align 8, !tbaa !58
  %1451 = getelementptr inbounds ptr, ptr %1450, i64 2
  %1452 = load ptr, ptr %1451, align 8
  call void %1452(ptr noundef nonnull align 8 dereferenceable(16) %1441) #21
  %1453 = load ptr, ptr %1441, align 8, !tbaa !58
  %1454 = getelementptr inbounds ptr, ptr %1453, i64 3
  %1455 = load ptr, ptr %1454, align 8
  call void %1455(ptr noundef nonnull align 8 dereferenceable(16) %1441) #21
  br label %1467

1456:                                             ; preds = %1443
  %1457 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1458 = icmp eq i8 %1457, 0
  br i1 %1458, label %1461, label %1459

1459:                                             ; preds = %1456
  %1460 = add nsw i32 %1447, -1
  store i32 %1460, ptr %1444, align 8, !tbaa !73
  br label %1463

1461:                                             ; preds = %1456
  %1462 = atomicrmw volatile add ptr %1444, i32 -1 acq_rel, align 4
  br label %1463

1463:                                             ; preds = %1461, %1459
  %1464 = phi i32 [ %1447, %1459 ], [ %1462, %1461 ]
  %1465 = icmp eq i32 %1464, 1
  br i1 %1465, label %1466, label %1467, !prof !42

1466:                                             ; preds = %1463
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1441) #21
  br label %1467

1467:                                             ; preds = %1466, %1463, %1448, %1439
  %1468 = getelementptr inbounds %struct.TestCase, ptr %394, i64 9, i32 2
  %1469 = load ptr, ptr %1468, align 8, !tbaa !23
  %1470 = getelementptr inbounds %struct.TestCase, ptr %394, i64 9, i32 2, i32 2
  %1471 = icmp eq ptr %1469, %1470
  br i1 %1471, label %1473, label %1472

1472:                                             ; preds = %1467
  call void @_ZdlPv(ptr noundef %1469) #22
  br label %1473

1473:                                             ; preds = %1472, %1467
  %1474 = load ptr, ptr %1045, align 8, !tbaa !23
  %1475 = getelementptr inbounds %struct.TestCase, ptr %394, i64 9, i32 0, i32 2
  %1476 = icmp eq ptr %1474, %1475
  br i1 %1476, label %1478, label %1477

1477:                                             ; preds = %1473
  call void @_ZdlPv(ptr noundef %1474) #22
  br label %1478

1478:                                             ; preds = %1473, %1477
  %1479 = getelementptr inbounds %struct.TestCase, ptr %394, i64 8, i32 3, i32 0, i32 1
  %1480 = load ptr, ptr %1479, align 8, !tbaa !88
  %1481 = icmp eq ptr %1480, null
  br i1 %1481, label %1506, label %1482

1482:                                             ; preds = %1478
  %1483 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1480, i64 0, i32 1
  %1484 = load atomic i64, ptr %1483 acquire, align 8
  %1485 = icmp eq i64 %1484, 4294967297
  %1486 = trunc i64 %1484 to i32
  br i1 %1485, label %1487, label %1495

1487:                                             ; preds = %1482
  store i32 0, ptr %1483, align 8, !tbaa !90
  %1488 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1480, i64 0, i32 2
  store i32 0, ptr %1488, align 4, !tbaa !92
  %1489 = load ptr, ptr %1480, align 8, !tbaa !58
  %1490 = getelementptr inbounds ptr, ptr %1489, i64 2
  %1491 = load ptr, ptr %1490, align 8
  call void %1491(ptr noundef nonnull align 8 dereferenceable(16) %1480) #21
  %1492 = load ptr, ptr %1480, align 8, !tbaa !58
  %1493 = getelementptr inbounds ptr, ptr %1492, i64 3
  %1494 = load ptr, ptr %1493, align 8
  call void %1494(ptr noundef nonnull align 8 dereferenceable(16) %1480) #21
  br label %1506

1495:                                             ; preds = %1482
  %1496 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1497 = icmp eq i8 %1496, 0
  br i1 %1497, label %1500, label %1498

1498:                                             ; preds = %1495
  %1499 = add nsw i32 %1486, -1
  store i32 %1499, ptr %1483, align 8, !tbaa !73
  br label %1502

1500:                                             ; preds = %1495
  %1501 = atomicrmw volatile add ptr %1483, i32 -1 acq_rel, align 4
  br label %1502

1502:                                             ; preds = %1500, %1498
  %1503 = phi i32 [ %1486, %1498 ], [ %1501, %1500 ]
  %1504 = icmp eq i32 %1503, 1
  br i1 %1504, label %1505, label %1506, !prof !42

1505:                                             ; preds = %1502
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1480) #21
  br label %1506

1506:                                             ; preds = %1505, %1502, %1487, %1478
  %1507 = getelementptr inbounds %struct.TestCase, ptr %394, i64 8, i32 2
  %1508 = load ptr, ptr %1507, align 8, !tbaa !23
  %1509 = getelementptr inbounds %struct.TestCase, ptr %394, i64 8, i32 2, i32 2
  %1510 = icmp eq ptr %1508, %1509
  br i1 %1510, label %1512, label %1511

1511:                                             ; preds = %1506
  call void @_ZdlPv(ptr noundef %1508) #22
  br label %1512

1512:                                             ; preds = %1511, %1506
  %1513 = load ptr, ptr %1036, align 8, !tbaa !23
  %1514 = getelementptr inbounds %struct.TestCase, ptr %394, i64 8, i32 0, i32 2
  %1515 = icmp eq ptr %1513, %1514
  br i1 %1515, label %1517, label %1516

1516:                                             ; preds = %1512
  call void @_ZdlPv(ptr noundef %1513) #22
  br label %1517

1517:                                             ; preds = %1512, %1516
  %1518 = getelementptr inbounds %struct.TestCase, ptr %394, i64 7, i32 3, i32 0, i32 1
  %1519 = load ptr, ptr %1518, align 8, !tbaa !88
  %1520 = icmp eq ptr %1519, null
  br i1 %1520, label %1545, label %1521

1521:                                             ; preds = %1517
  %1522 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1519, i64 0, i32 1
  %1523 = load atomic i64, ptr %1522 acquire, align 8
  %1524 = icmp eq i64 %1523, 4294967297
  %1525 = trunc i64 %1523 to i32
  br i1 %1524, label %1526, label %1534

1526:                                             ; preds = %1521
  store i32 0, ptr %1522, align 8, !tbaa !90
  %1527 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1519, i64 0, i32 2
  store i32 0, ptr %1527, align 4, !tbaa !92
  %1528 = load ptr, ptr %1519, align 8, !tbaa !58
  %1529 = getelementptr inbounds ptr, ptr %1528, i64 2
  %1530 = load ptr, ptr %1529, align 8
  call void %1530(ptr noundef nonnull align 8 dereferenceable(16) %1519) #21
  %1531 = load ptr, ptr %1519, align 8, !tbaa !58
  %1532 = getelementptr inbounds ptr, ptr %1531, i64 3
  %1533 = load ptr, ptr %1532, align 8
  call void %1533(ptr noundef nonnull align 8 dereferenceable(16) %1519) #21
  br label %1545

1534:                                             ; preds = %1521
  %1535 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1536 = icmp eq i8 %1535, 0
  br i1 %1536, label %1539, label %1537

1537:                                             ; preds = %1534
  %1538 = add nsw i32 %1525, -1
  store i32 %1538, ptr %1522, align 8, !tbaa !73
  br label %1541

1539:                                             ; preds = %1534
  %1540 = atomicrmw volatile add ptr %1522, i32 -1 acq_rel, align 4
  br label %1541

1541:                                             ; preds = %1539, %1537
  %1542 = phi i32 [ %1525, %1537 ], [ %1540, %1539 ]
  %1543 = icmp eq i32 %1542, 1
  br i1 %1543, label %1544, label %1545, !prof !42

1544:                                             ; preds = %1541
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1519) #21
  br label %1545

1545:                                             ; preds = %1544, %1541, %1526, %1517
  %1546 = getelementptr inbounds %struct.TestCase, ptr %394, i64 7, i32 2
  %1547 = load ptr, ptr %1546, align 8, !tbaa !23
  %1548 = getelementptr inbounds %struct.TestCase, ptr %394, i64 7, i32 2, i32 2
  %1549 = icmp eq ptr %1547, %1548
  br i1 %1549, label %1551, label %1550

1550:                                             ; preds = %1545
  call void @_ZdlPv(ptr noundef %1547) #22
  br label %1551

1551:                                             ; preds = %1550, %1545
  %1552 = load ptr, ptr %1031, align 8, !tbaa !23
  %1553 = getelementptr inbounds %struct.TestCase, ptr %394, i64 7, i32 0, i32 2
  %1554 = icmp eq ptr %1552, %1553
  br i1 %1554, label %1556, label %1555

1555:                                             ; preds = %1551
  call void @_ZdlPv(ptr noundef %1552) #22
  br label %1556

1556:                                             ; preds = %1551, %1555
  %1557 = getelementptr inbounds %struct.TestCase, ptr %394, i64 6, i32 3, i32 0, i32 1
  %1558 = load ptr, ptr %1557, align 8, !tbaa !88
  %1559 = icmp eq ptr %1558, null
  br i1 %1559, label %1584, label %1560

1560:                                             ; preds = %1556
  %1561 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1558, i64 0, i32 1
  %1562 = load atomic i64, ptr %1561 acquire, align 8
  %1563 = icmp eq i64 %1562, 4294967297
  %1564 = trunc i64 %1562 to i32
  br i1 %1563, label %1565, label %1573

1565:                                             ; preds = %1560
  store i32 0, ptr %1561, align 8, !tbaa !90
  %1566 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1558, i64 0, i32 2
  store i32 0, ptr %1566, align 4, !tbaa !92
  %1567 = load ptr, ptr %1558, align 8, !tbaa !58
  %1568 = getelementptr inbounds ptr, ptr %1567, i64 2
  %1569 = load ptr, ptr %1568, align 8
  call void %1569(ptr noundef nonnull align 8 dereferenceable(16) %1558) #21
  %1570 = load ptr, ptr %1558, align 8, !tbaa !58
  %1571 = getelementptr inbounds ptr, ptr %1570, i64 3
  %1572 = load ptr, ptr %1571, align 8
  call void %1572(ptr noundef nonnull align 8 dereferenceable(16) %1558) #21
  br label %1584

1573:                                             ; preds = %1560
  %1574 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1575 = icmp eq i8 %1574, 0
  br i1 %1575, label %1578, label %1576

1576:                                             ; preds = %1573
  %1577 = add nsw i32 %1564, -1
  store i32 %1577, ptr %1561, align 8, !tbaa !73
  br label %1580

1578:                                             ; preds = %1573
  %1579 = atomicrmw volatile add ptr %1561, i32 -1 acq_rel, align 4
  br label %1580

1580:                                             ; preds = %1578, %1576
  %1581 = phi i32 [ %1564, %1576 ], [ %1579, %1578 ]
  %1582 = icmp eq i32 %1581, 1
  br i1 %1582, label %1583, label %1584, !prof !42

1583:                                             ; preds = %1580
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1558) #21
  br label %1584

1584:                                             ; preds = %1583, %1580, %1565, %1556
  %1585 = getelementptr inbounds %struct.TestCase, ptr %394, i64 6, i32 2
  %1586 = load ptr, ptr %1585, align 8, !tbaa !23
  %1587 = getelementptr inbounds %struct.TestCase, ptr %394, i64 6, i32 2, i32 2
  %1588 = icmp eq ptr %1586, %1587
  br i1 %1588, label %1590, label %1589

1589:                                             ; preds = %1584
  call void @_ZdlPv(ptr noundef %1586) #22
  br label %1590

1590:                                             ; preds = %1589, %1584
  %1591 = load ptr, ptr %1022, align 8, !tbaa !23
  %1592 = getelementptr inbounds %struct.TestCase, ptr %394, i64 6, i32 0, i32 2
  %1593 = icmp eq ptr %1591, %1592
  br i1 %1593, label %1595, label %1594

1594:                                             ; preds = %1590
  call void @_ZdlPv(ptr noundef %1591) #22
  br label %1595

1595:                                             ; preds = %1590, %1594
  %1596 = getelementptr inbounds %struct.TestCase, ptr %394, i64 5, i32 3, i32 0, i32 1
  %1597 = load ptr, ptr %1596, align 8, !tbaa !88
  %1598 = icmp eq ptr %1597, null
  br i1 %1598, label %1623, label %1599

1599:                                             ; preds = %1595
  %1600 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1597, i64 0, i32 1
  %1601 = load atomic i64, ptr %1600 acquire, align 8
  %1602 = icmp eq i64 %1601, 4294967297
  %1603 = trunc i64 %1601 to i32
  br i1 %1602, label %1604, label %1612

1604:                                             ; preds = %1599
  store i32 0, ptr %1600, align 8, !tbaa !90
  %1605 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1597, i64 0, i32 2
  store i32 0, ptr %1605, align 4, !tbaa !92
  %1606 = load ptr, ptr %1597, align 8, !tbaa !58
  %1607 = getelementptr inbounds ptr, ptr %1606, i64 2
  %1608 = load ptr, ptr %1607, align 8
  call void %1608(ptr noundef nonnull align 8 dereferenceable(16) %1597) #21
  %1609 = load ptr, ptr %1597, align 8, !tbaa !58
  %1610 = getelementptr inbounds ptr, ptr %1609, i64 3
  %1611 = load ptr, ptr %1610, align 8
  call void %1611(ptr noundef nonnull align 8 dereferenceable(16) %1597) #21
  br label %1623

1612:                                             ; preds = %1599
  %1613 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1614 = icmp eq i8 %1613, 0
  br i1 %1614, label %1617, label %1615

1615:                                             ; preds = %1612
  %1616 = add nsw i32 %1603, -1
  store i32 %1616, ptr %1600, align 8, !tbaa !73
  br label %1619

1617:                                             ; preds = %1612
  %1618 = atomicrmw volatile add ptr %1600, i32 -1 acq_rel, align 4
  br label %1619

1619:                                             ; preds = %1617, %1615
  %1620 = phi i32 [ %1603, %1615 ], [ %1618, %1617 ]
  %1621 = icmp eq i32 %1620, 1
  br i1 %1621, label %1622, label %1623, !prof !42

1622:                                             ; preds = %1619
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1597) #21
  br label %1623

1623:                                             ; preds = %1622, %1619, %1604, %1595
  %1624 = getelementptr inbounds %struct.TestCase, ptr %394, i64 5, i32 2
  %1625 = load ptr, ptr %1624, align 8, !tbaa !23
  %1626 = getelementptr inbounds %struct.TestCase, ptr %394, i64 5, i32 2, i32 2
  %1627 = icmp eq ptr %1625, %1626
  br i1 %1627, label %1629, label %1628

1628:                                             ; preds = %1623
  call void @_ZdlPv(ptr noundef %1625) #22
  br label %1629

1629:                                             ; preds = %1628, %1623
  %1630 = load ptr, ptr %1013, align 8, !tbaa !23
  %1631 = getelementptr inbounds %struct.TestCase, ptr %394, i64 5, i32 0, i32 2
  %1632 = icmp eq ptr %1630, %1631
  br i1 %1632, label %1634, label %1633

1633:                                             ; preds = %1629
  call void @_ZdlPv(ptr noundef %1630) #22
  br label %1634

1634:                                             ; preds = %1629, %1633
  %1635 = getelementptr inbounds %struct.TestCase, ptr %394, i64 4, i32 3, i32 0, i32 1
  %1636 = load ptr, ptr %1635, align 8, !tbaa !88
  %1637 = icmp eq ptr %1636, null
  br i1 %1637, label %1662, label %1638

1638:                                             ; preds = %1634
  %1639 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1636, i64 0, i32 1
  %1640 = load atomic i64, ptr %1639 acquire, align 8
  %1641 = icmp eq i64 %1640, 4294967297
  %1642 = trunc i64 %1640 to i32
  br i1 %1641, label %1643, label %1651

1643:                                             ; preds = %1638
  store i32 0, ptr %1639, align 8, !tbaa !90
  %1644 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1636, i64 0, i32 2
  store i32 0, ptr %1644, align 4, !tbaa !92
  %1645 = load ptr, ptr %1636, align 8, !tbaa !58
  %1646 = getelementptr inbounds ptr, ptr %1645, i64 2
  %1647 = load ptr, ptr %1646, align 8
  call void %1647(ptr noundef nonnull align 8 dereferenceable(16) %1636) #21
  %1648 = load ptr, ptr %1636, align 8, !tbaa !58
  %1649 = getelementptr inbounds ptr, ptr %1648, i64 3
  %1650 = load ptr, ptr %1649, align 8
  call void %1650(ptr noundef nonnull align 8 dereferenceable(16) %1636) #21
  br label %1662

1651:                                             ; preds = %1638
  %1652 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1653 = icmp eq i8 %1652, 0
  br i1 %1653, label %1656, label %1654

1654:                                             ; preds = %1651
  %1655 = add nsw i32 %1642, -1
  store i32 %1655, ptr %1639, align 8, !tbaa !73
  br label %1658

1656:                                             ; preds = %1651
  %1657 = atomicrmw volatile add ptr %1639, i32 -1 acq_rel, align 4
  br label %1658

1658:                                             ; preds = %1656, %1654
  %1659 = phi i32 [ %1642, %1654 ], [ %1657, %1656 ]
  %1660 = icmp eq i32 %1659, 1
  br i1 %1660, label %1661, label %1662, !prof !42

1661:                                             ; preds = %1658
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1636) #21
  br label %1662

1662:                                             ; preds = %1661, %1658, %1643, %1634
  %1663 = getelementptr inbounds %struct.TestCase, ptr %394, i64 4, i32 2
  %1664 = load ptr, ptr %1663, align 8, !tbaa !23
  %1665 = getelementptr inbounds %struct.TestCase, ptr %394, i64 4, i32 2, i32 2
  %1666 = icmp eq ptr %1664, %1665
  br i1 %1666, label %1668, label %1667

1667:                                             ; preds = %1662
  call void @_ZdlPv(ptr noundef %1664) #22
  br label %1668

1668:                                             ; preds = %1667, %1662
  %1669 = load ptr, ptr %1004, align 8, !tbaa !23
  %1670 = getelementptr inbounds %struct.TestCase, ptr %394, i64 4, i32 0, i32 2
  %1671 = icmp eq ptr %1669, %1670
  br i1 %1671, label %1673, label %1672

1672:                                             ; preds = %1668
  call void @_ZdlPv(ptr noundef %1669) #22
  br label %1673

1673:                                             ; preds = %1668, %1672
  %1674 = getelementptr inbounds %struct.TestCase, ptr %394, i64 3, i32 3, i32 0, i32 1
  %1675 = load ptr, ptr %1674, align 8, !tbaa !88
  %1676 = icmp eq ptr %1675, null
  br i1 %1676, label %1701, label %1677

1677:                                             ; preds = %1673
  %1678 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1675, i64 0, i32 1
  %1679 = load atomic i64, ptr %1678 acquire, align 8
  %1680 = icmp eq i64 %1679, 4294967297
  %1681 = trunc i64 %1679 to i32
  br i1 %1680, label %1682, label %1690

1682:                                             ; preds = %1677
  store i32 0, ptr %1678, align 8, !tbaa !90
  %1683 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1675, i64 0, i32 2
  store i32 0, ptr %1683, align 4, !tbaa !92
  %1684 = load ptr, ptr %1675, align 8, !tbaa !58
  %1685 = getelementptr inbounds ptr, ptr %1684, i64 2
  %1686 = load ptr, ptr %1685, align 8
  call void %1686(ptr noundef nonnull align 8 dereferenceable(16) %1675) #21
  %1687 = load ptr, ptr %1675, align 8, !tbaa !58
  %1688 = getelementptr inbounds ptr, ptr %1687, i64 3
  %1689 = load ptr, ptr %1688, align 8
  call void %1689(ptr noundef nonnull align 8 dereferenceable(16) %1675) #21
  br label %1701

1690:                                             ; preds = %1677
  %1691 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1692 = icmp eq i8 %1691, 0
  br i1 %1692, label %1695, label %1693

1693:                                             ; preds = %1690
  %1694 = add nsw i32 %1681, -1
  store i32 %1694, ptr %1678, align 8, !tbaa !73
  br label %1697

1695:                                             ; preds = %1690
  %1696 = atomicrmw volatile add ptr %1678, i32 -1 acq_rel, align 4
  br label %1697

1697:                                             ; preds = %1695, %1693
  %1698 = phi i32 [ %1681, %1693 ], [ %1696, %1695 ]
  %1699 = icmp eq i32 %1698, 1
  br i1 %1699, label %1700, label %1701, !prof !42

1700:                                             ; preds = %1697
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1675) #21
  br label %1701

1701:                                             ; preds = %1700, %1697, %1682, %1673
  %1702 = getelementptr inbounds %struct.TestCase, ptr %394, i64 3, i32 2
  %1703 = load ptr, ptr %1702, align 8, !tbaa !23
  %1704 = getelementptr inbounds %struct.TestCase, ptr %394, i64 3, i32 2, i32 2
  %1705 = icmp eq ptr %1703, %1704
  br i1 %1705, label %1707, label %1706

1706:                                             ; preds = %1701
  call void @_ZdlPv(ptr noundef %1703) #22
  br label %1707

1707:                                             ; preds = %1706, %1701
  %1708 = load ptr, ptr %996, align 8, !tbaa !23
  %1709 = getelementptr inbounds %struct.TestCase, ptr %394, i64 3, i32 0, i32 2
  %1710 = icmp eq ptr %1708, %1709
  br i1 %1710, label %1712, label %1711

1711:                                             ; preds = %1707
  call void @_ZdlPv(ptr noundef %1708) #22
  br label %1712

1712:                                             ; preds = %1707, %1711
  %1713 = getelementptr inbounds %struct.TestCase, ptr %394, i64 2, i32 3, i32 0, i32 1
  %1714 = load ptr, ptr %1713, align 8, !tbaa !88
  %1715 = icmp eq ptr %1714, null
  br i1 %1715, label %1740, label %1716

1716:                                             ; preds = %1712
  %1717 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1714, i64 0, i32 1
  %1718 = load atomic i64, ptr %1717 acquire, align 8
  %1719 = icmp eq i64 %1718, 4294967297
  %1720 = trunc i64 %1718 to i32
  br i1 %1719, label %1721, label %1729

1721:                                             ; preds = %1716
  store i32 0, ptr %1717, align 8, !tbaa !90
  %1722 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1714, i64 0, i32 2
  store i32 0, ptr %1722, align 4, !tbaa !92
  %1723 = load ptr, ptr %1714, align 8, !tbaa !58
  %1724 = getelementptr inbounds ptr, ptr %1723, i64 2
  %1725 = load ptr, ptr %1724, align 8
  call void %1725(ptr noundef nonnull align 8 dereferenceable(16) %1714) #21
  %1726 = load ptr, ptr %1714, align 8, !tbaa !58
  %1727 = getelementptr inbounds ptr, ptr %1726, i64 3
  %1728 = load ptr, ptr %1727, align 8
  call void %1728(ptr noundef nonnull align 8 dereferenceable(16) %1714) #21
  br label %1740

1729:                                             ; preds = %1716
  %1730 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1731 = icmp eq i8 %1730, 0
  br i1 %1731, label %1734, label %1732

1732:                                             ; preds = %1729
  %1733 = add nsw i32 %1720, -1
  store i32 %1733, ptr %1717, align 8, !tbaa !73
  br label %1736

1734:                                             ; preds = %1729
  %1735 = atomicrmw volatile add ptr %1717, i32 -1 acq_rel, align 4
  br label %1736

1736:                                             ; preds = %1734, %1732
  %1737 = phi i32 [ %1720, %1732 ], [ %1735, %1734 ]
  %1738 = icmp eq i32 %1737, 1
  br i1 %1738, label %1739, label %1740, !prof !42

1739:                                             ; preds = %1736
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1714) #21
  br label %1740

1740:                                             ; preds = %1739, %1736, %1721, %1712
  %1741 = getelementptr inbounds %struct.TestCase, ptr %394, i64 2, i32 2
  %1742 = load ptr, ptr %1741, align 8, !tbaa !23
  %1743 = getelementptr inbounds %struct.TestCase, ptr %394, i64 2, i32 2, i32 2
  %1744 = icmp eq ptr %1742, %1743
  br i1 %1744, label %1746, label %1745

1745:                                             ; preds = %1740
  call void @_ZdlPv(ptr noundef %1742) #22
  br label %1746

1746:                                             ; preds = %1745, %1740
  %1747 = load ptr, ptr %987, align 8, !tbaa !23
  %1748 = getelementptr inbounds %struct.TestCase, ptr %394, i64 2, i32 0, i32 2
  %1749 = icmp eq ptr %1747, %1748
  br i1 %1749, label %1751, label %1750

1750:                                             ; preds = %1746
  call void @_ZdlPv(ptr noundef %1747) #22
  br label %1751

1751:                                             ; preds = %1746, %1750
  %1752 = getelementptr inbounds %struct.TestCase, ptr %394, i64 1, i32 3, i32 0, i32 1
  %1753 = load ptr, ptr %1752, align 8, !tbaa !88
  %1754 = icmp eq ptr %1753, null
  br i1 %1754, label %1779, label %1755

1755:                                             ; preds = %1751
  %1756 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1753, i64 0, i32 1
  %1757 = load atomic i64, ptr %1756 acquire, align 8
  %1758 = icmp eq i64 %1757, 4294967297
  %1759 = trunc i64 %1757 to i32
  br i1 %1758, label %1760, label %1768

1760:                                             ; preds = %1755
  store i32 0, ptr %1756, align 8, !tbaa !90
  %1761 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1753, i64 0, i32 2
  store i32 0, ptr %1761, align 4, !tbaa !92
  %1762 = load ptr, ptr %1753, align 8, !tbaa !58
  %1763 = getelementptr inbounds ptr, ptr %1762, i64 2
  %1764 = load ptr, ptr %1763, align 8
  call void %1764(ptr noundef nonnull align 8 dereferenceable(16) %1753) #21
  %1765 = load ptr, ptr %1753, align 8, !tbaa !58
  %1766 = getelementptr inbounds ptr, ptr %1765, i64 3
  %1767 = load ptr, ptr %1766, align 8
  call void %1767(ptr noundef nonnull align 8 dereferenceable(16) %1753) #21
  br label %1779

1768:                                             ; preds = %1755
  %1769 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1770 = icmp eq i8 %1769, 0
  br i1 %1770, label %1773, label %1771

1771:                                             ; preds = %1768
  %1772 = add nsw i32 %1759, -1
  store i32 %1772, ptr %1756, align 8, !tbaa !73
  br label %1775

1773:                                             ; preds = %1768
  %1774 = atomicrmw volatile add ptr %1756, i32 -1 acq_rel, align 4
  br label %1775

1775:                                             ; preds = %1773, %1771
  %1776 = phi i32 [ %1759, %1771 ], [ %1774, %1773 ]
  %1777 = icmp eq i32 %1776, 1
  br i1 %1777, label %1778, label %1779, !prof !42

1778:                                             ; preds = %1775
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1753) #21
  br label %1779

1779:                                             ; preds = %1778, %1775, %1760, %1751
  %1780 = getelementptr inbounds %struct.TestCase, ptr %394, i64 1, i32 2
  %1781 = load ptr, ptr %1780, align 8, !tbaa !23
  %1782 = getelementptr inbounds %struct.TestCase, ptr %394, i64 1, i32 2, i32 2
  %1783 = icmp eq ptr %1781, %1782
  br i1 %1783, label %1785, label %1784

1784:                                             ; preds = %1779
  call void @_ZdlPv(ptr noundef %1781) #22
  br label %1785

1785:                                             ; preds = %1784, %1779
  %1786 = load ptr, ptr %978, align 8, !tbaa !23
  %1787 = getelementptr inbounds %struct.TestCase, ptr %394, i64 1, i32 0, i32 2
  %1788 = icmp eq ptr %1786, %1787
  br i1 %1788, label %1790, label %1789

1789:                                             ; preds = %1785
  call void @_ZdlPv(ptr noundef %1786) #22
  br label %1790

1790:                                             ; preds = %1785, %1789
  %1791 = getelementptr inbounds %struct.TestCase, ptr %394, i64 0, i32 3, i32 0, i32 1
  %1792 = load ptr, ptr %1791, align 8, !tbaa !88
  %1793 = icmp eq ptr %1792, null
  br i1 %1793, label %1818, label %1794

1794:                                             ; preds = %1790
  %1795 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1792, i64 0, i32 1
  %1796 = load atomic i64, ptr %1795 acquire, align 8
  %1797 = icmp eq i64 %1796, 4294967297
  %1798 = trunc i64 %1796 to i32
  br i1 %1797, label %1799, label %1807

1799:                                             ; preds = %1794
  store i32 0, ptr %1795, align 8, !tbaa !90
  %1800 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1792, i64 0, i32 2
  store i32 0, ptr %1800, align 4, !tbaa !92
  %1801 = load ptr, ptr %1792, align 8, !tbaa !58
  %1802 = getelementptr inbounds ptr, ptr %1801, i64 2
  %1803 = load ptr, ptr %1802, align 8
  call void %1803(ptr noundef nonnull align 8 dereferenceable(16) %1792) #21
  %1804 = load ptr, ptr %1792, align 8, !tbaa !58
  %1805 = getelementptr inbounds ptr, ptr %1804, i64 3
  %1806 = load ptr, ptr %1805, align 8
  call void %1806(ptr noundef nonnull align 8 dereferenceable(16) %1792) #21
  br label %1818

1807:                                             ; preds = %1794
  %1808 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1809 = icmp eq i8 %1808, 0
  br i1 %1809, label %1812, label %1810

1810:                                             ; preds = %1807
  %1811 = add nsw i32 %1798, -1
  store i32 %1811, ptr %1795, align 8, !tbaa !73
  br label %1814

1812:                                             ; preds = %1807
  %1813 = atomicrmw volatile add ptr %1795, i32 -1 acq_rel, align 4
  br label %1814

1814:                                             ; preds = %1812, %1810
  %1815 = phi i32 [ %1798, %1810 ], [ %1813, %1812 ]
  %1816 = icmp eq i32 %1815, 1
  br i1 %1816, label %1817, label %1818, !prof !42

1817:                                             ; preds = %1814
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1792) #21
  br label %1818

1818:                                             ; preds = %1817, %1814, %1799, %1790
  %1819 = getelementptr inbounds %struct.TestCase, ptr %394, i64 0, i32 2
  %1820 = load ptr, ptr %1819, align 8, !tbaa !23
  %1821 = getelementptr inbounds %struct.TestCase, ptr %394, i64 0, i32 2, i32 2
  %1822 = icmp eq ptr %1820, %1821
  br i1 %1822, label %1824, label %1823

1823:                                             ; preds = %1818
  call void @_ZdlPv(ptr noundef %1820) #22
  br label %1824

1824:                                             ; preds = %1823, %1818
  %1825 = load ptr, ptr %394, align 8, !tbaa !23
  %1826 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %394, i64 0, i32 2
  %1827 = icmp eq ptr %1825, %1826
  br i1 %1827, label %1829, label %1828

1828:                                             ; preds = %1824
  call void @_ZdlPv(ptr noundef %1825) #22
  br label %1829

1829:                                             ; preds = %1828, %1824, %1241
  %1830 = phi { ptr, i32 } [ %1242, %1241 ], [ %1244, %1824 ], [ %1244, %1828 ]
  %1831 = phi i1 [ true, %1241 ], [ false, %1824 ], [ false, %1828 ]
  %1832 = load ptr, ptr %409, align 8, !tbaa !23
  %1833 = icmp eq ptr %1832, %1083
  br i1 %1833, label %1835, label %1834

1834:                                             ; preds = %1829
  call void @_ZdlPv(ptr noundef %1832) #22
  br label %1835

1835:                                             ; preds = %1834, %1829, %1239
  %1836 = phi ptr [ %1077, %1239 ], [ %1082, %1834 ], [ %1082, %1829 ]
  %1837 = phi { ptr, i32 } [ %1240, %1239 ], [ %1830, %1834 ], [ %1830, %1829 ]
  %1838 = phi i1 [ true, %1239 ], [ %1831, %1834 ], [ %1831, %1829 ]
  %1839 = load ptr, ptr %408, align 8, !tbaa !23
  %1840 = icmp eq ptr %1839, %1078
  br i1 %1840, label %1842, label %1841

1841:                                             ; preds = %1835
  call void @_ZdlPv(ptr noundef %1839) #22
  br label %1842

1842:                                             ; preds = %1841, %1835, %1237
  %1843 = phi ptr [ %1072, %1237 ], [ %1836, %1841 ], [ %1836, %1835 ]
  %1844 = phi { ptr, i32 } [ %1238, %1237 ], [ %1837, %1841 ], [ %1837, %1835 ]
  %1845 = phi i1 [ true, %1237 ], [ %1838, %1841 ], [ %1838, %1835 ]
  %1846 = load ptr, ptr %407, align 8, !tbaa !23
  %1847 = icmp eq ptr %1846, %1073
  br i1 %1847, label %1849, label %1848

1848:                                             ; preds = %1842
  call void @_ZdlPv(ptr noundef %1846) #22
  br label %1849

1849:                                             ; preds = %1848, %1842, %1235
  %1850 = phi ptr [ %1063, %1235 ], [ %1843, %1848 ], [ %1843, %1842 ]
  %1851 = phi { ptr, i32 } [ %1236, %1235 ], [ %1844, %1848 ], [ %1844, %1842 ]
  %1852 = phi i1 [ true, %1235 ], [ %1845, %1848 ], [ %1845, %1842 ]
  %1853 = load ptr, ptr %406, align 8, !tbaa !23
  %1854 = icmp eq ptr %1853, %1064
  br i1 %1854, label %1856, label %1855

1855:                                             ; preds = %1849
  call void @_ZdlPv(ptr noundef %1853) #22
  br label %1856

1856:                                             ; preds = %1855, %1849, %1233, %1231
  %1857 = phi ptr [ %1054, %1231 ], [ %1063, %1233 ], [ %1850, %1849 ], [ %1850, %1855 ]
  %1858 = phi { ptr, i32 } [ %1232, %1231 ], [ %1234, %1233 ], [ %1851, %1849 ], [ %1851, %1855 ]
  %1859 = phi i1 [ true, %1231 ], [ true, %1233 ], [ %1852, %1849 ], [ %1852, %1855 ]
  %1860 = load ptr, ptr %405, align 8, !tbaa !23
  %1861 = icmp eq ptr %1860, %1055
  br i1 %1861, label %1863, label %1862

1862:                                             ; preds = %1856
  call void @_ZdlPv(ptr noundef %1860) #22
  br label %1863

1863:                                             ; preds = %1862, %1856, %1229, %1227
  %1864 = phi ptr [ %1045, %1227 ], [ %1054, %1229 ], [ %1857, %1856 ], [ %1857, %1862 ]
  %1865 = phi { ptr, i32 } [ %1228, %1227 ], [ %1230, %1229 ], [ %1858, %1856 ], [ %1858, %1862 ]
  %1866 = phi i1 [ true, %1227 ], [ true, %1229 ], [ %1859, %1856 ], [ %1859, %1862 ]
  %1867 = load ptr, ptr %404, align 8, !tbaa !23
  %1868 = icmp eq ptr %1867, %1046
  br i1 %1868, label %1870, label %1869

1869:                                             ; preds = %1863
  call void @_ZdlPv(ptr noundef %1867) #22
  br label %1870

1870:                                             ; preds = %1869, %1863, %1225, %1223
  %1871 = phi ptr [ %1036, %1223 ], [ %1045, %1225 ], [ %1864, %1863 ], [ %1864, %1869 ]
  %1872 = phi { ptr, i32 } [ %1224, %1223 ], [ %1226, %1225 ], [ %1865, %1863 ], [ %1865, %1869 ]
  %1873 = phi i1 [ true, %1223 ], [ true, %1225 ], [ %1866, %1863 ], [ %1866, %1869 ]
  %1874 = load ptr, ptr %403, align 8, !tbaa !23
  %1875 = icmp eq ptr %1874, %1037
  br i1 %1875, label %1877, label %1876

1876:                                             ; preds = %1870
  call void @_ZdlPv(ptr noundef %1874) #22
  br label %1877

1877:                                             ; preds = %1876, %1870, %1221, %1219
  %1878 = phi ptr [ %1031, %1219 ], [ %1036, %1221 ], [ %1871, %1870 ], [ %1871, %1876 ]
  %1879 = phi { ptr, i32 } [ %1220, %1219 ], [ %1222, %1221 ], [ %1872, %1870 ], [ %1872, %1876 ]
  %1880 = phi i1 [ true, %1219 ], [ true, %1221 ], [ %1873, %1870 ], [ %1873, %1876 ]
  %1881 = load ptr, ptr %402, align 8, !tbaa !23
  %1882 = icmp eq ptr %1881, %1032
  br i1 %1882, label %1884, label %1883

1883:                                             ; preds = %1877
  call void @_ZdlPv(ptr noundef %1881) #22
  br label %1884

1884:                                             ; preds = %1883, %1877, %1217
  %1885 = phi ptr [ %1022, %1217 ], [ %1878, %1883 ], [ %1878, %1877 ]
  %1886 = phi { ptr, i32 } [ %1218, %1217 ], [ %1879, %1883 ], [ %1879, %1877 ]
  %1887 = phi i1 [ true, %1217 ], [ %1880, %1883 ], [ %1880, %1877 ]
  %1888 = load ptr, ptr %401, align 8, !tbaa !23
  %1889 = icmp eq ptr %1888, %1023
  br i1 %1889, label %1891, label %1890

1890:                                             ; preds = %1884
  call void @_ZdlPv(ptr noundef %1888) #22
  br label %1891

1891:                                             ; preds = %1890, %1884, %1215, %1213
  %1892 = phi ptr [ %1013, %1213 ], [ %1022, %1215 ], [ %1885, %1884 ], [ %1885, %1890 ]
  %1893 = phi { ptr, i32 } [ %1214, %1213 ], [ %1216, %1215 ], [ %1886, %1884 ], [ %1886, %1890 ]
  %1894 = phi i1 [ true, %1213 ], [ true, %1215 ], [ %1887, %1884 ], [ %1887, %1890 ]
  %1895 = load ptr, ptr %400, align 8, !tbaa !23
  %1896 = icmp eq ptr %1895, %1014
  br i1 %1896, label %1898, label %1897

1897:                                             ; preds = %1891
  call void @_ZdlPv(ptr noundef %1895) #22
  br label %1898

1898:                                             ; preds = %1897, %1891, %1211, %1209
  %1899 = phi ptr [ %1004, %1209 ], [ %1013, %1211 ], [ %1892, %1891 ], [ %1892, %1897 ]
  %1900 = phi { ptr, i32 } [ %1210, %1209 ], [ %1212, %1211 ], [ %1893, %1891 ], [ %1893, %1897 ]
  %1901 = phi i1 [ true, %1209 ], [ true, %1211 ], [ %1894, %1891 ], [ %1894, %1897 ]
  %1902 = load ptr, ptr %399, align 8, !tbaa !23
  %1903 = icmp eq ptr %1902, %1005
  br i1 %1903, label %1905, label %1904

1904:                                             ; preds = %1898
  call void @_ZdlPv(ptr noundef %1902) #22
  br label %1905

1905:                                             ; preds = %1904, %1898, %1207, %1205
  %1906 = phi ptr [ %996, %1205 ], [ %1004, %1207 ], [ %1899, %1898 ], [ %1899, %1904 ]
  %1907 = phi { ptr, i32 } [ %1206, %1205 ], [ %1208, %1207 ], [ %1900, %1898 ], [ %1900, %1904 ]
  %1908 = phi i1 [ true, %1205 ], [ true, %1207 ], [ %1901, %1898 ], [ %1901, %1904 ]
  %1909 = load ptr, ptr %398, align 8, !tbaa !23
  %1910 = icmp eq ptr %1909, %997
  br i1 %1910, label %1912, label %1911

1911:                                             ; preds = %1905
  call void @_ZdlPv(ptr noundef %1909) #22
  br label %1912

1912:                                             ; preds = %1911, %1905, %1203, %1201
  %1913 = phi ptr [ %987, %1201 ], [ %996, %1203 ], [ %1906, %1905 ], [ %1906, %1911 ]
  %1914 = phi { ptr, i32 } [ %1202, %1201 ], [ %1204, %1203 ], [ %1907, %1905 ], [ %1907, %1911 ]
  %1915 = phi i1 [ true, %1201 ], [ true, %1203 ], [ %1908, %1905 ], [ %1908, %1911 ]
  %1916 = load ptr, ptr %397, align 8, !tbaa !23
  %1917 = icmp eq ptr %1916, %988
  br i1 %1917, label %1919, label %1918

1918:                                             ; preds = %1912
  call void @_ZdlPv(ptr noundef %1916) #22
  br label %1919

1919:                                             ; preds = %1918, %1912, %1199, %1197
  %1920 = phi ptr [ %978, %1197 ], [ %987, %1199 ], [ %1913, %1912 ], [ %1913, %1918 ]
  %1921 = phi { ptr, i32 } [ %1198, %1197 ], [ %1200, %1199 ], [ %1914, %1912 ], [ %1914, %1918 ]
  %1922 = phi i1 [ true, %1197 ], [ true, %1199 ], [ %1915, %1912 ], [ %1915, %1918 ]
  %1923 = load ptr, ptr %396, align 8, !tbaa !23
  %1924 = icmp eq ptr %1923, %979
  br i1 %1924, label %1926, label %1925

1925:                                             ; preds = %1919
  call void @_ZdlPv(ptr noundef %1923) #22
  br label %1926

1926:                                             ; preds = %1925, %1919, %1195, %1193
  %1927 = phi ptr [ %394, %1193 ], [ %978, %1195 ], [ %1920, %1919 ], [ %1920, %1925 ]
  %1928 = phi { ptr, i32 } [ %1194, %1193 ], [ %1196, %1195 ], [ %1921, %1919 ], [ %1921, %1925 ]
  %1929 = phi i1 [ true, %1193 ], [ true, %1195 ], [ %1922, %1919 ], [ %1922, %1925 ]
  %1930 = load ptr, ptr %395, align 8, !tbaa !23
  %1931 = icmp eq ptr %1930, %971
  br i1 %1931, label %1933, label %1932

1932:                                             ; preds = %1926
  call void @_ZdlPv(ptr noundef %1930) #22
  br label %1933

1933:                                             ; preds = %1932, %1926
  %1934 = icmp ne ptr %394, %1927
  %1935 = select i1 %1929, i1 %1934, i1 false
  br i1 %1935, label %1936, label %1979

1936:                                             ; preds = %1933, %1977
  %1937 = phi ptr [ %1938, %1977 ], [ %1927, %1933 ]
  %1938 = getelementptr inbounds %struct.TestCase, ptr %1937, i64 -1
  %1939 = getelementptr %struct.TestCase, ptr %1937, i64 -1, i32 3, i32 0, i32 1
  %1940 = load ptr, ptr %1939, align 8, !tbaa !88
  %1941 = icmp eq ptr %1940, null
  br i1 %1941, label %1966, label %1942

1942:                                             ; preds = %1936
  %1943 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1940, i64 0, i32 1
  %1944 = load atomic i64, ptr %1943 acquire, align 8
  %1945 = icmp eq i64 %1944, 4294967297
  %1946 = trunc i64 %1944 to i32
  br i1 %1945, label %1947, label %1955

1947:                                             ; preds = %1942
  store i32 0, ptr %1943, align 8, !tbaa !90
  %1948 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1940, i64 0, i32 2
  store i32 0, ptr %1948, align 4, !tbaa !92
  %1949 = load ptr, ptr %1940, align 8, !tbaa !58
  %1950 = getelementptr inbounds ptr, ptr %1949, i64 2
  %1951 = load ptr, ptr %1950, align 8
  call void %1951(ptr noundef nonnull align 8 dereferenceable(16) %1940) #21
  %1952 = load ptr, ptr %1940, align 8, !tbaa !58
  %1953 = getelementptr inbounds ptr, ptr %1952, i64 3
  %1954 = load ptr, ptr %1953, align 8
  call void %1954(ptr noundef nonnull align 8 dereferenceable(16) %1940) #21
  br label %1966

1955:                                             ; preds = %1942
  %1956 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %1957 = icmp eq i8 %1956, 0
  br i1 %1957, label %1960, label %1958

1958:                                             ; preds = %1955
  %1959 = add nsw i32 %1946, -1
  store i32 %1959, ptr %1943, align 8, !tbaa !73
  br label %1962

1960:                                             ; preds = %1955
  %1961 = atomicrmw volatile add ptr %1943, i32 -1 acq_rel, align 4
  br label %1962

1962:                                             ; preds = %1960, %1958
  %1963 = phi i32 [ %1946, %1958 ], [ %1961, %1960 ]
  %1964 = icmp eq i32 %1963, 1
  br i1 %1964, label %1965, label %1966, !prof !42

1965:                                             ; preds = %1962
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1940) #21
  br label %1966

1966:                                             ; preds = %1965, %1962, %1947, %1936
  %1967 = getelementptr %struct.TestCase, ptr %1937, i64 -1, i32 2
  %1968 = load ptr, ptr %1967, align 8, !tbaa !23
  %1969 = getelementptr %struct.TestCase, ptr %1937, i64 -1, i32 2, i32 2
  %1970 = icmp eq ptr %1968, %1969
  br i1 %1970, label %1972, label %1971

1971:                                             ; preds = %1966
  call void @_ZdlPv(ptr noundef %1968) #22
  br label %1972

1972:                                             ; preds = %1971, %1966
  %1973 = load ptr, ptr %1938, align 8, !tbaa !23
  %1974 = getelementptr %struct.TestCase, ptr %1937, i64 -1, i32 0, i32 2
  %1975 = icmp eq ptr %1973, %1974
  br i1 %1975, label %1977, label %1976

1976:                                             ; preds = %1972
  call void @_ZdlPv(ptr noundef %1973) #22
  br label %1977

1977:                                             ; preds = %1972, %1976
  %1978 = icmp eq ptr %1938, %394
  br i1 %1978, label %1979, label %1936

1979:                                             ; preds = %1977, %1933
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %394) #21
  br label %762

1980:                                             ; preds = %1189, %1192
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %394) #21
  store i32 %1087, ptr @dummy48, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %395)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %396)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %397)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %398)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %399)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %400)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %401)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %402)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %403)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %404)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %405)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %406)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %407)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %408)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %409)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %382)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %381) #21
  %1981 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %382, i64 0, i32 2
  store ptr %1981, ptr %382, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %380) #21
  store i64 48, ptr %380, align 8, !tbaa !74
  %1982 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %382, ptr noundef nonnull align 8 dereferenceable(8) %380, i64 noundef 0)
  store ptr %1982, ptr %382, align 8, !tbaa !23
  %1983 = load i64, ptr %380, align 8, !tbaa !74
  store i64 %1983, ptr %1981, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(48) %1982, ptr noundef nonnull align 1 dereferenceable(48) @.str.29, i64 48, i1 false)
  %1984 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %382, i64 0, i32 1
  store i64 %1983, ptr %1984, align 8, !tbaa !10
  %1985 = getelementptr inbounds i8, ptr %1982, i64 %1983
  store i8 0, ptr %1985, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %380) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %381, ptr noundef nonnull %382, i32 noundef 0)
          to label %1986 unwind label %2031

1986:                                             ; preds = %1980
  %1987 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 4, ptr nonnull %381, i64 1)
          to label %1988 unwind label %2033

1988:                                             ; preds = %1986
  %1989 = getelementptr inbounds %struct.TestCase, ptr %381, i64 0, i32 3, i32 0, i32 1
  %1990 = load ptr, ptr %1989, align 8, !tbaa !88
  %1991 = icmp eq ptr %1990, null
  br i1 %1991, label %2016, label %1992

1992:                                             ; preds = %1988
  %1993 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1990, i64 0, i32 1
  %1994 = load atomic i64, ptr %1993 acquire, align 8
  %1995 = icmp eq i64 %1994, 4294967297
  %1996 = trunc i64 %1994 to i32
  br i1 %1995, label %1997, label %2005

1997:                                             ; preds = %1992
  store i32 0, ptr %1993, align 8, !tbaa !90
  %1998 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %1990, i64 0, i32 2
  store i32 0, ptr %1998, align 4, !tbaa !92
  %1999 = load ptr, ptr %1990, align 8, !tbaa !58
  %2000 = getelementptr inbounds ptr, ptr %1999, i64 2
  %2001 = load ptr, ptr %2000, align 8
  call void %2001(ptr noundef nonnull align 8 dereferenceable(16) %1990) #21
  %2002 = load ptr, ptr %1990, align 8, !tbaa !58
  %2003 = getelementptr inbounds ptr, ptr %2002, i64 3
  %2004 = load ptr, ptr %2003, align 8
  call void %2004(ptr noundef nonnull align 8 dereferenceable(16) %1990) #21
  br label %2016

2005:                                             ; preds = %1992
  %2006 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2007 = icmp eq i8 %2006, 0
  br i1 %2007, label %2010, label %2008

2008:                                             ; preds = %2005
  %2009 = add nsw i32 %1996, -1
  store i32 %2009, ptr %1993, align 8, !tbaa !73
  br label %2012

2010:                                             ; preds = %2005
  %2011 = atomicrmw volatile add ptr %1993, i32 -1 acq_rel, align 4
  br label %2012

2012:                                             ; preds = %2010, %2008
  %2013 = phi i32 [ %1996, %2008 ], [ %2011, %2010 ]
  %2014 = icmp eq i32 %2013, 1
  br i1 %2014, label %2015, label %2016, !prof !42

2015:                                             ; preds = %2012
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %1990) #21
  br label %2016

2016:                                             ; preds = %2015, %2012, %1997, %1988
  %2017 = getelementptr inbounds %struct.TestCase, ptr %381, i64 0, i32 2
  %2018 = load ptr, ptr %2017, align 8, !tbaa !23
  %2019 = getelementptr inbounds %struct.TestCase, ptr %381, i64 0, i32 2, i32 2
  %2020 = icmp eq ptr %2018, %2019
  br i1 %2020, label %2022, label %2021

2021:                                             ; preds = %2016
  call void @_ZdlPv(ptr noundef %2018) #22
  br label %2022

2022:                                             ; preds = %2021, %2016
  %2023 = load ptr, ptr %381, align 8, !tbaa !23
  %2024 = getelementptr inbounds %struct.TestCase, ptr %381, i64 0, i32 0, i32 2
  %2025 = icmp eq ptr %2023, %2024
  br i1 %2025, label %2027, label %2026

2026:                                             ; preds = %2022
  call void @_ZdlPv(ptr noundef %2023) #22
  br label %2027

2027:                                             ; preds = %2026, %2022
  %2028 = load ptr, ptr %382, align 8, !tbaa !23
  %2029 = icmp eq ptr %2028, %1981
  br i1 %2029, label %2079, label %2030

2030:                                             ; preds = %2027
  call void @_ZdlPv(ptr noundef %2028) #22
  br label %2079

2031:                                             ; preds = %1980
  %2032 = landingpad { ptr, i32 }
          cleanup
  br label %2073

2033:                                             ; preds = %1986
  %2034 = landingpad { ptr, i32 }
          cleanup
  %2035 = getelementptr inbounds %struct.TestCase, ptr %381, i64 0, i32 3, i32 0, i32 1
  %2036 = load ptr, ptr %2035, align 8, !tbaa !88
  %2037 = icmp eq ptr %2036, null
  br i1 %2037, label %2062, label %2038

2038:                                             ; preds = %2033
  %2039 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2036, i64 0, i32 1
  %2040 = load atomic i64, ptr %2039 acquire, align 8
  %2041 = icmp eq i64 %2040, 4294967297
  %2042 = trunc i64 %2040 to i32
  br i1 %2041, label %2043, label %2051

2043:                                             ; preds = %2038
  store i32 0, ptr %2039, align 8, !tbaa !90
  %2044 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2036, i64 0, i32 2
  store i32 0, ptr %2044, align 4, !tbaa !92
  %2045 = load ptr, ptr %2036, align 8, !tbaa !58
  %2046 = getelementptr inbounds ptr, ptr %2045, i64 2
  %2047 = load ptr, ptr %2046, align 8
  call void %2047(ptr noundef nonnull align 8 dereferenceable(16) %2036) #21
  %2048 = load ptr, ptr %2036, align 8, !tbaa !58
  %2049 = getelementptr inbounds ptr, ptr %2048, i64 3
  %2050 = load ptr, ptr %2049, align 8
  call void %2050(ptr noundef nonnull align 8 dereferenceable(16) %2036) #21
  br label %2062

2051:                                             ; preds = %2038
  %2052 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2053 = icmp eq i8 %2052, 0
  br i1 %2053, label %2056, label %2054

2054:                                             ; preds = %2051
  %2055 = add nsw i32 %2042, -1
  store i32 %2055, ptr %2039, align 8, !tbaa !73
  br label %2058

2056:                                             ; preds = %2051
  %2057 = atomicrmw volatile add ptr %2039, i32 -1 acq_rel, align 4
  br label %2058

2058:                                             ; preds = %2056, %2054
  %2059 = phi i32 [ %2042, %2054 ], [ %2057, %2056 ]
  %2060 = icmp eq i32 %2059, 1
  br i1 %2060, label %2061, label %2062, !prof !42

2061:                                             ; preds = %2058
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2036) #21
  br label %2062

2062:                                             ; preds = %2061, %2058, %2043, %2033
  %2063 = getelementptr inbounds %struct.TestCase, ptr %381, i64 0, i32 2
  %2064 = load ptr, ptr %2063, align 8, !tbaa !23
  %2065 = getelementptr inbounds %struct.TestCase, ptr %381, i64 0, i32 2, i32 2
  %2066 = icmp eq ptr %2064, %2065
  br i1 %2066, label %2068, label %2067

2067:                                             ; preds = %2062
  call void @_ZdlPv(ptr noundef %2064) #22
  br label %2068

2068:                                             ; preds = %2067, %2062
  %2069 = load ptr, ptr %381, align 8, !tbaa !23
  %2070 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %381, i64 0, i32 2
  %2071 = icmp eq ptr %2069, %2070
  br i1 %2071, label %2073, label %2072

2072:                                             ; preds = %2068
  call void @_ZdlPv(ptr noundef %2069) #22
  br label %2073

2073:                                             ; preds = %2072, %2068, %2031
  %2074 = phi { ptr, i32 } [ %2032, %2031 ], [ %2034, %2068 ], [ %2034, %2072 ]
  %2075 = load ptr, ptr %382, align 8, !tbaa !23
  %2076 = icmp eq ptr %2075, %1981
  br i1 %2076, label %2078, label %2077

2077:                                             ; preds = %2073
  call void @_ZdlPv(ptr noundef %2075) #22
  br label %2078

2078:                                             ; preds = %2077, %2073
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %381) #21
  br label %762

2079:                                             ; preds = %2027, %2030
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %381) #21
  store i32 %1987, ptr @dummy49, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %382)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %379) #21
  %2080 = getelementptr inbounds i8, ptr %379, i64 8
  store i64 0, ptr %2080, align 8
  %2081 = getelementptr inbounds %"class.std::function", ptr %379, i64 0, i32 1
  %2082 = getelementptr inbounds %"class.std::_Function_base", ptr %379, i64 0, i32 1
  store ptr @_Z11CheckSimpleRK7Results, ptr %379, align 8, !tbaa !47
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E9_M_invokeERKSt9_Any_dataS2_, ptr %2081, align 8, !tbaa !115
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, ptr %2082, align 8, !tbaa !118
  %2083 = invoke noundef i64 @_Z10AddCheckerPKcRKSt8functionIFvRK7ResultsEE(ptr noundef nonnull @.str.9, ptr noundef nonnull align 8 dereferenceable(32) %379)
          to label %2084 unwind label %2092

2084:                                             ; preds = %2079
  %2085 = load ptr, ptr %2082, align 8, !tbaa !118
  %2086 = icmp eq ptr %2085, null
  br i1 %2086, label %2102, label %2087

2087:                                             ; preds = %2084
  %2088 = invoke noundef zeroext i1 %2085(ptr noundef nonnull align 8 dereferenceable(16) %379, ptr noundef nonnull align 8 dereferenceable(16) %379, i32 noundef 3)
          to label %2102 unwind label %2089

2089:                                             ; preds = %2087
  %2090 = landingpad { ptr, i32 }
          catch ptr null
  %2091 = extractvalue { ptr, i32 } %2090, 0
  call void @__clang_call_terminate(ptr %2091) #24
  unreachable

2092:                                             ; preds = %2079
  %2093 = landingpad { ptr, i32 }
          cleanup
  %2094 = load ptr, ptr %2082, align 8, !tbaa !118
  %2095 = icmp eq ptr %2094, null
  br i1 %2095, label %2101, label %2096

2096:                                             ; preds = %2092
  %2097 = invoke noundef zeroext i1 %2094(ptr noundef nonnull align 8 dereferenceable(16) %379, ptr noundef nonnull align 8 dereferenceable(16) %379, i32 noundef 3)
          to label %2101 unwind label %2098

2098:                                             ; preds = %2096
  %2099 = landingpad { ptr, i32 }
          catch ptr null
  %2100 = extractvalue { ptr, i32 } %2099, 0
  call void @__clang_call_terminate(ptr %2100) #24
  unreachable

2101:                                             ; preds = %2096, %2092
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %379) #21
  br label %762

2102:                                             ; preds = %2084, %2087
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %379) #21
  store i64 %2083, ptr @dummy58, align 8, !tbaa !74
  %2103 = call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #25
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %2103, ptr noundef nonnull @.str.50)
          to label %2106 unwind label %2104

2104:                                             ; preds = %2102
  %2105 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %2103) #22
  br label %762

2106:                                             ; preds = %2102
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %2103, align 8, !tbaa !58
  %2107 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %2103, i64 0, i32 1
  store ptr @_Z33BM_Counters_WithBytesAndItemsPSecRN9benchmark5StateE, ptr %2107, align 8, !tbaa !93
  %2108 = call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %2103)
  store ptr %2108, ptr @_ZL27benchmark_uniq_3_benchmark_, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %378)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %377) #21
  %2109 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %378, i64 0, i32 2
  store ptr %2109, ptr %378, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %376) #21
  store i64 133, ptr %376, align 8, !tbaa !74
  %2110 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %378, ptr noundef nonnull align 8 dereferenceable(8) %376, i64 noundef 0)
  store ptr %2110, ptr %378, align 8, !tbaa !23
  %2111 = load i64, ptr %376, align 8, !tbaa !74
  store i64 %2111, ptr %2109, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(133) %2110, ptr noundef nonnull align 1 dereferenceable(133) @.str.52, i64 133, i1 false)
  %2112 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %378, i64 0, i32 1
  store i64 %2111, ptr %2112, align 8, !tbaa !10
  %2113 = getelementptr inbounds i8, ptr %2110, i64 %2111
  store i8 0, ptr %2113, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %376) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %377, ptr noundef nonnull %378, i32 noundef 0)
          to label %2114 unwind label %2159

2114:                                             ; preds = %2106
  %2115 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 0, ptr nonnull %377, i64 1)
          to label %2116 unwind label %2161

2116:                                             ; preds = %2114
  %2117 = getelementptr inbounds %struct.TestCase, ptr %377, i64 0, i32 3, i32 0, i32 1
  %2118 = load ptr, ptr %2117, align 8, !tbaa !88
  %2119 = icmp eq ptr %2118, null
  br i1 %2119, label %2144, label %2120

2120:                                             ; preds = %2116
  %2121 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2118, i64 0, i32 1
  %2122 = load atomic i64, ptr %2121 acquire, align 8
  %2123 = icmp eq i64 %2122, 4294967297
  %2124 = trunc i64 %2122 to i32
  br i1 %2123, label %2125, label %2133

2125:                                             ; preds = %2120
  store i32 0, ptr %2121, align 8, !tbaa !90
  %2126 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2118, i64 0, i32 2
  store i32 0, ptr %2126, align 4, !tbaa !92
  %2127 = load ptr, ptr %2118, align 8, !tbaa !58
  %2128 = getelementptr inbounds ptr, ptr %2127, i64 2
  %2129 = load ptr, ptr %2128, align 8
  call void %2129(ptr noundef nonnull align 8 dereferenceable(16) %2118) #21
  %2130 = load ptr, ptr %2118, align 8, !tbaa !58
  %2131 = getelementptr inbounds ptr, ptr %2130, i64 3
  %2132 = load ptr, ptr %2131, align 8
  call void %2132(ptr noundef nonnull align 8 dereferenceable(16) %2118) #21
  br label %2144

2133:                                             ; preds = %2120
  %2134 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2135 = icmp eq i8 %2134, 0
  br i1 %2135, label %2138, label %2136

2136:                                             ; preds = %2133
  %2137 = add nsw i32 %2124, -1
  store i32 %2137, ptr %2121, align 8, !tbaa !73
  br label %2140

2138:                                             ; preds = %2133
  %2139 = atomicrmw volatile add ptr %2121, i32 -1 acq_rel, align 4
  br label %2140

2140:                                             ; preds = %2138, %2136
  %2141 = phi i32 [ %2124, %2136 ], [ %2139, %2138 ]
  %2142 = icmp eq i32 %2141, 1
  br i1 %2142, label %2143, label %2144, !prof !42

2143:                                             ; preds = %2140
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2118) #21
  br label %2144

2144:                                             ; preds = %2143, %2140, %2125, %2116
  %2145 = getelementptr inbounds %struct.TestCase, ptr %377, i64 0, i32 2
  %2146 = load ptr, ptr %2145, align 8, !tbaa !23
  %2147 = getelementptr inbounds %struct.TestCase, ptr %377, i64 0, i32 2, i32 2
  %2148 = icmp eq ptr %2146, %2147
  br i1 %2148, label %2150, label %2149

2149:                                             ; preds = %2144
  call void @_ZdlPv(ptr noundef %2146) #22
  br label %2150

2150:                                             ; preds = %2149, %2144
  %2151 = load ptr, ptr %377, align 8, !tbaa !23
  %2152 = getelementptr inbounds %struct.TestCase, ptr %377, i64 0, i32 0, i32 2
  %2153 = icmp eq ptr %2151, %2152
  br i1 %2153, label %2155, label %2154

2154:                                             ; preds = %2150
  call void @_ZdlPv(ptr noundef %2151) #22
  br label %2155

2155:                                             ; preds = %2154, %2150
  %2156 = load ptr, ptr %378, align 8, !tbaa !23
  %2157 = icmp eq ptr %2156, %2109
  br i1 %2157, label %2207, label %2158

2158:                                             ; preds = %2155
  call void @_ZdlPv(ptr noundef %2156) #22
  br label %2207

2159:                                             ; preds = %2106
  %2160 = landingpad { ptr, i32 }
          cleanup
  br label %2201

2161:                                             ; preds = %2114
  %2162 = landingpad { ptr, i32 }
          cleanup
  %2163 = getelementptr inbounds %struct.TestCase, ptr %377, i64 0, i32 3, i32 0, i32 1
  %2164 = load ptr, ptr %2163, align 8, !tbaa !88
  %2165 = icmp eq ptr %2164, null
  br i1 %2165, label %2190, label %2166

2166:                                             ; preds = %2161
  %2167 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2164, i64 0, i32 1
  %2168 = load atomic i64, ptr %2167 acquire, align 8
  %2169 = icmp eq i64 %2168, 4294967297
  %2170 = trunc i64 %2168 to i32
  br i1 %2169, label %2171, label %2179

2171:                                             ; preds = %2166
  store i32 0, ptr %2167, align 8, !tbaa !90
  %2172 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2164, i64 0, i32 2
  store i32 0, ptr %2172, align 4, !tbaa !92
  %2173 = load ptr, ptr %2164, align 8, !tbaa !58
  %2174 = getelementptr inbounds ptr, ptr %2173, i64 2
  %2175 = load ptr, ptr %2174, align 8
  call void %2175(ptr noundef nonnull align 8 dereferenceable(16) %2164) #21
  %2176 = load ptr, ptr %2164, align 8, !tbaa !58
  %2177 = getelementptr inbounds ptr, ptr %2176, i64 3
  %2178 = load ptr, ptr %2177, align 8
  call void %2178(ptr noundef nonnull align 8 dereferenceable(16) %2164) #21
  br label %2190

2179:                                             ; preds = %2166
  %2180 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2181 = icmp eq i8 %2180, 0
  br i1 %2181, label %2184, label %2182

2182:                                             ; preds = %2179
  %2183 = add nsw i32 %2170, -1
  store i32 %2183, ptr %2167, align 8, !tbaa !73
  br label %2186

2184:                                             ; preds = %2179
  %2185 = atomicrmw volatile add ptr %2167, i32 -1 acq_rel, align 4
  br label %2186

2186:                                             ; preds = %2184, %2182
  %2187 = phi i32 [ %2170, %2182 ], [ %2185, %2184 ]
  %2188 = icmp eq i32 %2187, 1
  br i1 %2188, label %2189, label %2190, !prof !42

2189:                                             ; preds = %2186
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2164) #21
  br label %2190

2190:                                             ; preds = %2189, %2186, %2171, %2161
  %2191 = getelementptr inbounds %struct.TestCase, ptr %377, i64 0, i32 2
  %2192 = load ptr, ptr %2191, align 8, !tbaa !23
  %2193 = getelementptr inbounds %struct.TestCase, ptr %377, i64 0, i32 2, i32 2
  %2194 = icmp eq ptr %2192, %2193
  br i1 %2194, label %2196, label %2195

2195:                                             ; preds = %2190
  call void @_ZdlPv(ptr noundef %2192) #22
  br label %2196

2196:                                             ; preds = %2195, %2190
  %2197 = load ptr, ptr %377, align 8, !tbaa !23
  %2198 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %377, i64 0, i32 2
  %2199 = icmp eq ptr %2197, %2198
  br i1 %2199, label %2201, label %2200

2200:                                             ; preds = %2196
  call void @_ZdlPv(ptr noundef %2197) #22
  br label %2201

2201:                                             ; preds = %2200, %2196, %2159
  %2202 = phi { ptr, i32 } [ %2160, %2159 ], [ %2162, %2196 ], [ %2162, %2200 ]
  %2203 = load ptr, ptr %378, align 8, !tbaa !23
  %2204 = icmp eq ptr %2203, %2109
  br i1 %2204, label %2206, label %2205

2205:                                             ; preds = %2201
  call void @_ZdlPv(ptr noundef %2203) #22
  br label %2206

2206:                                             ; preds = %2205, %2201
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %377) #21
  br label %762

2207:                                             ; preds = %2155, %2158
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %377) #21
  store i32 %2115, ptr @dummy80, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %378)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %359)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %360)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %361)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %362)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %363)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %364)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %365)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %366)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %367)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %368)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %369)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %370)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %371)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %372)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %373)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %374)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %375)
  call void @llvm.lifetime.start.p0(i64 1496, ptr nonnull %358) #21
  %2208 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %359, i64 0, i32 2
  store ptr %2208, ptr %359, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %357) #21
  store i64 45, ptr %357, align 8, !tbaa !74
  %2209 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %359, ptr noundef nonnull align 8 dereferenceable(8) %357, i64 noundef 0)
  store ptr %2209, ptr %359, align 8, !tbaa !23
  %2210 = load i64, ptr %357, align 8, !tbaa !74
  store i64 %2210, ptr %2208, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(45) %2209, ptr noundef nonnull align 1 dereferenceable(45) @.str.54, i64 45, i1 false)
  %2211 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %359, i64 0, i32 1
  store i64 %2210, ptr %2211, align 8, !tbaa !10
  %2212 = getelementptr inbounds i8, ptr %2209, i64 %2210
  store i8 0, ptr %2212, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %357) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %358, ptr noundef nonnull %359, i32 noundef 0)
          to label %2213 unwind label %2455

2213:                                             ; preds = %2207
  %2214 = getelementptr inbounds %struct.TestCase, ptr %358, i64 1
  %2215 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %360, i64 0, i32 2
  store ptr %2215, ptr %360, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %356) #21
  store i64 19, ptr %356, align 8, !tbaa !74
  %2216 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %360, ptr noundef nonnull align 8 dereferenceable(8) %356, i64 noundef 0)
          to label %2217 unwind label %2457

2217:                                             ; preds = %2213
  store ptr %2216, ptr %360, align 8, !tbaa !23
  %2218 = load i64, ptr %356, align 8, !tbaa !74
  store i64 %2218, ptr %2215, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %2216, ptr noundef nonnull align 1 dereferenceable(19) @.str.55, i64 19, i1 false)
  %2219 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %360, i64 0, i32 1
  store i64 %2218, ptr %2219, align 8, !tbaa !10
  %2220 = load ptr, ptr %360, align 8, !tbaa !23
  %2221 = getelementptr inbounds i8, ptr %2220, i64 %2218
  store i8 0, ptr %2221, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %356) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %2214, ptr noundef nonnull %360, i32 noundef 1)
          to label %2222 unwind label %2459

2222:                                             ; preds = %2217
  %2223 = getelementptr inbounds %struct.TestCase, ptr %358, i64 2
  %2224 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %361, i64 0, i32 2
  store ptr %2224, ptr %361, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %355) #21
  store i64 32, ptr %355, align 8, !tbaa !74
  %2225 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %361, ptr noundef nonnull align 8 dereferenceable(8) %355, i64 noundef 0)
          to label %2226 unwind label %2461

2226:                                             ; preds = %2222
  store ptr %2225, ptr %361, align 8, !tbaa !23
  %2227 = load i64, ptr %355, align 8, !tbaa !74
  store i64 %2227, ptr %2224, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %2225, ptr noundef nonnull align 1 dereferenceable(32) @.str.15, i64 32, i1 false)
  %2228 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %361, i64 0, i32 1
  store i64 %2227, ptr %2228, align 8, !tbaa !10
  %2229 = load ptr, ptr %361, align 8, !tbaa !23
  %2230 = getelementptr inbounds i8, ptr %2229, i64 %2227
  store i8 0, ptr %2230, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %355) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %2223, ptr noundef nonnull %361, i32 noundef 1)
          to label %2231 unwind label %2463

2231:                                             ; preds = %2226
  %2232 = getelementptr inbounds %struct.TestCase, ptr %358, i64 3
  %2233 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %362, i64 0, i32 2
  store ptr %2233, ptr %362, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %354) #21
  store i64 49, ptr %354, align 8, !tbaa !74
  %2234 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %362, ptr noundef nonnull align 8 dereferenceable(8) %354, i64 noundef 0)
          to label %2235 unwind label %2465

2235:                                             ; preds = %2231
  store ptr %2234, ptr %362, align 8, !tbaa !23
  %2236 = load i64, ptr %354, align 8, !tbaa !74
  store i64 %2236, ptr %2233, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(49) %2234, ptr noundef nonnull align 1 dereferenceable(49) @.str.56, i64 49, i1 false)
  %2237 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %362, i64 0, i32 1
  store i64 %2236, ptr %2237, align 8, !tbaa !10
  %2238 = getelementptr inbounds i8, ptr %2234, i64 %2236
  store i8 0, ptr %2238, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %354) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %2232, ptr noundef nonnull %362, i32 noundef 1)
          to label %2239 unwind label %2467

2239:                                             ; preds = %2235
  %2240 = getelementptr inbounds %struct.TestCase, ptr %358, i64 4
  %2241 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %363, i64 0, i32 2
  store ptr %2241, ptr %363, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %353) #21
  store i64 25, ptr %353, align 8, !tbaa !74
  %2242 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %363, ptr noundef nonnull align 8 dereferenceable(8) %353, i64 noundef 0)
          to label %2243 unwind label %2469

2243:                                             ; preds = %2239
  store ptr %2242, ptr %363, align 8, !tbaa !23
  %2244 = load i64, ptr %353, align 8, !tbaa !74
  store i64 %2244, ptr %2241, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(25) %2242, ptr noundef nonnull align 1 dereferenceable(25) @.str.17, i64 25, i1 false)
  %2245 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %363, i64 0, i32 1
  store i64 %2244, ptr %2245, align 8, !tbaa !10
  %2246 = load ptr, ptr %363, align 8, !tbaa !23
  %2247 = getelementptr inbounds i8, ptr %2246, i64 %2244
  store i8 0, ptr %2247, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %353) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %2240, ptr noundef nonnull %363, i32 noundef 1)
          to label %2248 unwind label %2471

2248:                                             ; preds = %2243
  %2249 = getelementptr inbounds %struct.TestCase, ptr %358, i64 5
  %2250 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %364, i64 0, i32 2
  store ptr %2250, ptr %364, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %352) #21
  store i64 18, ptr %352, align 8, !tbaa !74
  %2251 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %364, ptr noundef nonnull align 8 dereferenceable(8) %352, i64 noundef 0)
          to label %2252 unwind label %2473

2252:                                             ; preds = %2248
  store ptr %2251, ptr %364, align 8, !tbaa !23
  %2253 = load i64, ptr %352, align 8, !tbaa !74
  store i64 %2253, ptr %2250, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(18) %2251, ptr noundef nonnull align 1 dereferenceable(18) @.str.18, i64 18, i1 false)
  %2254 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %364, i64 0, i32 1
  store i64 %2253, ptr %2254, align 8, !tbaa !10
  %2255 = load ptr, ptr %364, align 8, !tbaa !23
  %2256 = getelementptr inbounds i8, ptr %2255, i64 %2253
  store i8 0, ptr %2256, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %352) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %2249, ptr noundef nonnull %364, i32 noundef 1)
          to label %2257 unwind label %2475

2257:                                             ; preds = %2252
  %2258 = getelementptr inbounds %struct.TestCase, ptr %358, i64 6
  %2259 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %365, i64 0, i32 2
  store ptr %2259, ptr %365, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %351) #21
  store i64 23, ptr %351, align 8, !tbaa !74
  %2260 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %365, ptr noundef nonnull align 8 dereferenceable(8) %351, i64 noundef 0)
          to label %2261 unwind label %2477

2261:                                             ; preds = %2257
  store ptr %2260, ptr %365, align 8, !tbaa !23
  %2262 = load i64, ptr %351, align 8, !tbaa !74
  store i64 %2262, ptr %2259, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(23) %2260, ptr noundef nonnull align 1 dereferenceable(23) @.str.19, i64 23, i1 false)
  %2263 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %365, i64 0, i32 1
  store i64 %2262, ptr %2263, align 8, !tbaa !10
  %2264 = load ptr, ptr %365, align 8, !tbaa !23
  %2265 = getelementptr inbounds i8, ptr %2264, i64 %2262
  store i8 0, ptr %2265, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %351) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %2258, ptr noundef nonnull %365, i32 noundef 1)
          to label %2266 unwind label %2479

2266:                                             ; preds = %2261
  %2267 = getelementptr inbounds %struct.TestCase, ptr %358, i64 7
  %2268 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %366, i64 0, i32 2
  store ptr %2268, ptr %366, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %2268, ptr noundef nonnull align 1 dereferenceable(14) @.str.20, i64 14, i1 false)
  %2269 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %366, i64 0, i32 1
  store i64 14, ptr %2269, align 8, !tbaa !10
  %2270 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %366, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %2270, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %2267, ptr noundef nonnull %366, i32 noundef 1)
          to label %2271 unwind label %2481

2271:                                             ; preds = %2266
  %2272 = getelementptr inbounds %struct.TestCase, ptr %358, i64 8
  %2273 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %367, i64 0, i32 2
  store ptr %2273, ptr %367, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %350) #21
  store i64 20, ptr %350, align 8, !tbaa !74
  %2274 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %367, ptr noundef nonnull align 8 dereferenceable(8) %350, i64 noundef 0)
          to label %2275 unwind label %2483

2275:                                             ; preds = %2271
  store ptr %2274, ptr %367, align 8, !tbaa !23
  %2276 = load i64, ptr %350, align 8, !tbaa !74
  store i64 %2276, ptr %2273, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %2274, ptr noundef nonnull align 1 dereferenceable(20) @.str.21, i64 20, i1 false)
  %2277 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %367, i64 0, i32 1
  store i64 %2276, ptr %2277, align 8, !tbaa !10
  %2278 = load ptr, ptr %367, align 8, !tbaa !23
  %2279 = getelementptr inbounds i8, ptr %2278, i64 %2276
  store i8 0, ptr %2279, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %350) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %2272, ptr noundef nonnull %367, i32 noundef 1)
          to label %2280 unwind label %2485

2280:                                             ; preds = %2275
  %2281 = getelementptr inbounds %struct.TestCase, ptr %358, i64 9
  %2282 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %368, i64 0, i32 2
  store ptr %2282, ptr %368, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %349) #21
  store i64 21, ptr %349, align 8, !tbaa !74
  %2283 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %368, ptr noundef nonnull align 8 dereferenceable(8) %349, i64 noundef 0)
          to label %2284 unwind label %2487

2284:                                             ; preds = %2280
  store ptr %2283, ptr %368, align 8, !tbaa !23
  %2285 = load i64, ptr %349, align 8, !tbaa !74
  store i64 %2285, ptr %2282, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %2283, ptr noundef nonnull align 1 dereferenceable(21) @.str.22, i64 21, i1 false)
  %2286 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %368, i64 0, i32 1
  store i64 %2285, ptr %2286, align 8, !tbaa !10
  %2287 = load ptr, ptr %368, align 8, !tbaa !23
  %2288 = getelementptr inbounds i8, ptr %2287, i64 %2285
  store i8 0, ptr %2288, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %349) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %2281, ptr noundef nonnull %368, i32 noundef 1)
          to label %2289 unwind label %2489

2289:                                             ; preds = %2284
  %2290 = getelementptr inbounds %struct.TestCase, ptr %358, i64 10
  %2291 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %369, i64 0, i32 2
  store ptr %2291, ptr %369, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %348) #21
  store i64 20, ptr %348, align 8, !tbaa !74
  %2292 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %369, ptr noundef nonnull align 8 dereferenceable(8) %348, i64 noundef 0)
          to label %2293 unwind label %2491

2293:                                             ; preds = %2289
  store ptr %2292, ptr %369, align 8, !tbaa !23
  %2294 = load i64, ptr %348, align 8, !tbaa !74
  store i64 %2294, ptr %2291, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %2292, ptr noundef nonnull align 1 dereferenceable(20) @.str.23, i64 20, i1 false)
  %2295 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %369, i64 0, i32 1
  store i64 %2294, ptr %2295, align 8, !tbaa !10
  %2296 = load ptr, ptr %369, align 8, !tbaa !23
  %2297 = getelementptr inbounds i8, ptr %2296, i64 %2294
  store i8 0, ptr %2297, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %348) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %2290, ptr noundef nonnull %369, i32 noundef 1)
          to label %2298 unwind label %2493

2298:                                             ; preds = %2293
  %2299 = getelementptr inbounds %struct.TestCase, ptr %358, i64 11
  %2300 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %370, i64 0, i32 2
  store ptr %2300, ptr %370, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %347) #21
  store i64 19, ptr %347, align 8, !tbaa !74
  %2301 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %370, ptr noundef nonnull align 8 dereferenceable(8) %347, i64 noundef 0)
          to label %2302 unwind label %2495

2302:                                             ; preds = %2298
  store ptr %2301, ptr %370, align 8, !tbaa !23
  %2303 = load i64, ptr %347, align 8, !tbaa !74
  store i64 %2303, ptr %2300, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %2301, ptr noundef nonnull align 1 dereferenceable(19) @.str.24, i64 19, i1 false)
  %2304 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %370, i64 0, i32 1
  store i64 %2303, ptr %2304, align 8, !tbaa !10
  %2305 = load ptr, ptr %370, align 8, !tbaa !23
  %2306 = getelementptr inbounds i8, ptr %2305, i64 %2303
  store i8 0, ptr %2306, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %347) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %2299, ptr noundef nonnull %370, i32 noundef 1)
          to label %2307 unwind label %2497

2307:                                             ; preds = %2302
  %2308 = getelementptr inbounds %struct.TestCase, ptr %358, i64 12
  %2309 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %371, i64 0, i32 2
  store ptr %2309, ptr %371, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(15) %2309, ptr noundef nonnull align 1 dereferenceable(15) @.str.25, i64 15, i1 false)
  %2310 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %371, i64 0, i32 1
  store i64 15, ptr %2310, align 8, !tbaa !10
  %2311 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %371, i64 0, i32 2, i32 1, i64 7
  store i8 0, ptr %2311, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %2308, ptr noundef nonnull %371, i32 noundef 1)
          to label %2312 unwind label %2499

2312:                                             ; preds = %2307
  %2313 = getelementptr inbounds %struct.TestCase, ptr %358, i64 13
  %2314 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %372, i64 0, i32 2
  store ptr %2314, ptr %372, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %346) #21
  store i64 28, ptr %346, align 8, !tbaa !74
  %2315 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %372, ptr noundef nonnull align 8 dereferenceable(8) %346, i64 noundef 0)
          to label %2316 unwind label %2501

2316:                                             ; preds = %2312
  store ptr %2315, ptr %372, align 8, !tbaa !23
  %2317 = load i64, ptr %346, align 8, !tbaa !74
  store i64 %2317, ptr %2314, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(28) %2315, ptr noundef nonnull align 1 dereferenceable(28) @.str.57, i64 28, i1 false)
  %2318 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %372, i64 0, i32 1
  store i64 %2317, ptr %2318, align 8, !tbaa !10
  %2319 = load ptr, ptr %372, align 8, !tbaa !23
  %2320 = getelementptr inbounds i8, ptr %2319, i64 %2317
  store i8 0, ptr %2320, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %346) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %2313, ptr noundef nonnull %372, i32 noundef 1)
          to label %2321 unwind label %2503

2321:                                             ; preds = %2316
  %2322 = getelementptr inbounds %struct.TestCase, ptr %358, i64 14
  %2323 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %373, i64 0, i32 2
  store ptr %2323, ptr %373, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(15) %2323, ptr noundef nonnull align 1 dereferenceable(15) @.str.58, i64 15, i1 false)
  %2324 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %373, i64 0, i32 1
  store i64 15, ptr %2324, align 8, !tbaa !10
  %2325 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %373, i64 0, i32 2, i32 1, i64 7
  store i8 0, ptr %2325, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %2322, ptr noundef nonnull %373, i32 noundef 1)
          to label %2326 unwind label %2505

2326:                                             ; preds = %2321
  %2327 = getelementptr inbounds %struct.TestCase, ptr %358, i64 15
  %2328 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %374, i64 0, i32 2
  store ptr %2328, ptr %374, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %345) #21
  store i64 27, ptr %345, align 8, !tbaa !74
  %2329 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %374, ptr noundef nonnull align 8 dereferenceable(8) %345, i64 noundef 0)
          to label %2330 unwind label %2507

2330:                                             ; preds = %2326
  store ptr %2329, ptr %374, align 8, !tbaa !23
  %2331 = load i64, ptr %345, align 8, !tbaa !74
  store i64 %2331, ptr %2328, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(27) %2329, ptr noundef nonnull align 1 dereferenceable(27) @.str.59, i64 27, i1 false)
  %2332 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %374, i64 0, i32 1
  store i64 %2331, ptr %2332, align 8, !tbaa !10
  %2333 = load ptr, ptr %374, align 8, !tbaa !23
  %2334 = getelementptr inbounds i8, ptr %2333, i64 %2331
  store i8 0, ptr %2334, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %345) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %2327, ptr noundef nonnull %374, i32 noundef 1)
          to label %2335 unwind label %2509

2335:                                             ; preds = %2330
  %2336 = getelementptr inbounds %struct.TestCase, ptr %358, i64 16
  %2337 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %375, i64 0, i32 2
  store ptr %2337, ptr %375, align 8, !tbaa !5
  store i8 125, ptr %2337, align 8, !tbaa !13
  %2338 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %375, i64 0, i32 1
  store i64 1, ptr %2338, align 8, !tbaa !10
  %2339 = getelementptr inbounds i8, ptr %375, i64 17
  store i8 0, ptr %2339, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %2336, ptr noundef nonnull %375, i32 noundef 1)
          to label %2340 unwind label %2511

2340:                                             ; preds = %2335
  %2341 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 2, ptr nonnull %358, i64 17)
          to label %2342 unwind label %2513

2342:                                             ; preds = %2340
  %2343 = getelementptr inbounds %struct.TestCase, ptr %358, i64 17
  br label %2344

2344:                                             ; preds = %2385, %2342
  %2345 = phi ptr [ %2343, %2342 ], [ %2346, %2385 ]
  %2346 = getelementptr inbounds %struct.TestCase, ptr %2345, i64 -1
  %2347 = getelementptr %struct.TestCase, ptr %2345, i64 -1, i32 3, i32 0, i32 1
  %2348 = load ptr, ptr %2347, align 8, !tbaa !88
  %2349 = icmp eq ptr %2348, null
  br i1 %2349, label %2374, label %2350

2350:                                             ; preds = %2344
  %2351 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2348, i64 0, i32 1
  %2352 = load atomic i64, ptr %2351 acquire, align 8
  %2353 = icmp eq i64 %2352, 4294967297
  %2354 = trunc i64 %2352 to i32
  br i1 %2353, label %2355, label %2363

2355:                                             ; preds = %2350
  store i32 0, ptr %2351, align 8, !tbaa !90
  %2356 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2348, i64 0, i32 2
  store i32 0, ptr %2356, align 4, !tbaa !92
  %2357 = load ptr, ptr %2348, align 8, !tbaa !58
  %2358 = getelementptr inbounds ptr, ptr %2357, i64 2
  %2359 = load ptr, ptr %2358, align 8
  call void %2359(ptr noundef nonnull align 8 dereferenceable(16) %2348) #21
  %2360 = load ptr, ptr %2348, align 8, !tbaa !58
  %2361 = getelementptr inbounds ptr, ptr %2360, i64 3
  %2362 = load ptr, ptr %2361, align 8
  call void %2362(ptr noundef nonnull align 8 dereferenceable(16) %2348) #21
  br label %2374

2363:                                             ; preds = %2350
  %2364 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2365 = icmp eq i8 %2364, 0
  br i1 %2365, label %2368, label %2366

2366:                                             ; preds = %2363
  %2367 = add nsw i32 %2354, -1
  store i32 %2367, ptr %2351, align 8, !tbaa !73
  br label %2370

2368:                                             ; preds = %2363
  %2369 = atomicrmw volatile add ptr %2351, i32 -1 acq_rel, align 4
  br label %2370

2370:                                             ; preds = %2368, %2366
  %2371 = phi i32 [ %2354, %2366 ], [ %2369, %2368 ]
  %2372 = icmp eq i32 %2371, 1
  br i1 %2372, label %2373, label %2374, !prof !42

2373:                                             ; preds = %2370
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2348) #21
  br label %2374

2374:                                             ; preds = %2373, %2370, %2355, %2344
  %2375 = getelementptr %struct.TestCase, ptr %2345, i64 -1, i32 2
  %2376 = load ptr, ptr %2375, align 8, !tbaa !23
  %2377 = getelementptr %struct.TestCase, ptr %2345, i64 -1, i32 2, i32 2
  %2378 = icmp eq ptr %2376, %2377
  br i1 %2378, label %2380, label %2379

2379:                                             ; preds = %2374
  call void @_ZdlPv(ptr noundef %2376) #22
  br label %2380

2380:                                             ; preds = %2379, %2374
  %2381 = load ptr, ptr %2346, align 8, !tbaa !23
  %2382 = getelementptr %struct.TestCase, ptr %2345, i64 -1, i32 0, i32 2
  %2383 = icmp eq ptr %2381, %2382
  br i1 %2383, label %2385, label %2384

2384:                                             ; preds = %2380
  call void @_ZdlPv(ptr noundef %2381) #22
  br label %2385

2385:                                             ; preds = %2384, %2380
  %2386 = icmp eq ptr %2346, %358
  br i1 %2386, label %2387, label %2344

2387:                                             ; preds = %2385
  %2388 = load ptr, ptr %375, align 8, !tbaa !23
  %2389 = icmp eq ptr %2388, %2337
  br i1 %2389, label %2391, label %2390

2390:                                             ; preds = %2387
  call void @_ZdlPv(ptr noundef %2388) #22
  br label %2391

2391:                                             ; preds = %2390, %2387
  %2392 = load ptr, ptr %374, align 8, !tbaa !23
  %2393 = icmp eq ptr %2392, %2328
  br i1 %2393, label %2395, label %2394

2394:                                             ; preds = %2391
  call void @_ZdlPv(ptr noundef %2392) #22
  br label %2395

2395:                                             ; preds = %2394, %2391
  %2396 = load ptr, ptr %373, align 8, !tbaa !23
  %2397 = icmp eq ptr %2396, %2323
  br i1 %2397, label %2399, label %2398

2398:                                             ; preds = %2395
  call void @_ZdlPv(ptr noundef %2396) #22
  br label %2399

2399:                                             ; preds = %2398, %2395
  %2400 = load ptr, ptr %372, align 8, !tbaa !23
  %2401 = icmp eq ptr %2400, %2314
  br i1 %2401, label %2403, label %2402

2402:                                             ; preds = %2399
  call void @_ZdlPv(ptr noundef %2400) #22
  br label %2403

2403:                                             ; preds = %2402, %2399
  %2404 = load ptr, ptr %371, align 8, !tbaa !23
  %2405 = icmp eq ptr %2404, %2309
  br i1 %2405, label %2407, label %2406

2406:                                             ; preds = %2403
  call void @_ZdlPv(ptr noundef %2404) #22
  br label %2407

2407:                                             ; preds = %2406, %2403
  %2408 = load ptr, ptr %370, align 8, !tbaa !23
  %2409 = icmp eq ptr %2408, %2300
  br i1 %2409, label %2411, label %2410

2410:                                             ; preds = %2407
  call void @_ZdlPv(ptr noundef %2408) #22
  br label %2411

2411:                                             ; preds = %2410, %2407
  %2412 = load ptr, ptr %369, align 8, !tbaa !23
  %2413 = icmp eq ptr %2412, %2291
  br i1 %2413, label %2415, label %2414

2414:                                             ; preds = %2411
  call void @_ZdlPv(ptr noundef %2412) #22
  br label %2415

2415:                                             ; preds = %2414, %2411
  %2416 = load ptr, ptr %368, align 8, !tbaa !23
  %2417 = icmp eq ptr %2416, %2282
  br i1 %2417, label %2419, label %2418

2418:                                             ; preds = %2415
  call void @_ZdlPv(ptr noundef %2416) #22
  br label %2419

2419:                                             ; preds = %2418, %2415
  %2420 = load ptr, ptr %367, align 8, !tbaa !23
  %2421 = icmp eq ptr %2420, %2273
  br i1 %2421, label %2423, label %2422

2422:                                             ; preds = %2419
  call void @_ZdlPv(ptr noundef %2420) #22
  br label %2423

2423:                                             ; preds = %2422, %2419
  %2424 = load ptr, ptr %366, align 8, !tbaa !23
  %2425 = icmp eq ptr %2424, %2268
  br i1 %2425, label %2427, label %2426

2426:                                             ; preds = %2423
  call void @_ZdlPv(ptr noundef %2424) #22
  br label %2427

2427:                                             ; preds = %2426, %2423
  %2428 = load ptr, ptr %365, align 8, !tbaa !23
  %2429 = icmp eq ptr %2428, %2259
  br i1 %2429, label %2431, label %2430

2430:                                             ; preds = %2427
  call void @_ZdlPv(ptr noundef %2428) #22
  br label %2431

2431:                                             ; preds = %2430, %2427
  %2432 = load ptr, ptr %364, align 8, !tbaa !23
  %2433 = icmp eq ptr %2432, %2250
  br i1 %2433, label %2435, label %2434

2434:                                             ; preds = %2431
  call void @_ZdlPv(ptr noundef %2432) #22
  br label %2435

2435:                                             ; preds = %2434, %2431
  %2436 = load ptr, ptr %363, align 8, !tbaa !23
  %2437 = icmp eq ptr %2436, %2241
  br i1 %2437, label %2439, label %2438

2438:                                             ; preds = %2435
  call void @_ZdlPv(ptr noundef %2436) #22
  br label %2439

2439:                                             ; preds = %2438, %2435
  %2440 = load ptr, ptr %362, align 8, !tbaa !23
  %2441 = icmp eq ptr %2440, %2233
  br i1 %2441, label %2443, label %2442

2442:                                             ; preds = %2439
  call void @_ZdlPv(ptr noundef %2440) #22
  br label %2443

2443:                                             ; preds = %2442, %2439
  %2444 = load ptr, ptr %361, align 8, !tbaa !23
  %2445 = icmp eq ptr %2444, %2224
  br i1 %2445, label %2447, label %2446

2446:                                             ; preds = %2443
  call void @_ZdlPv(ptr noundef %2444) #22
  br label %2447

2447:                                             ; preds = %2446, %2443
  %2448 = load ptr, ptr %360, align 8, !tbaa !23
  %2449 = icmp eq ptr %2448, %2215
  br i1 %2449, label %2451, label %2450

2450:                                             ; preds = %2447
  call void @_ZdlPv(ptr noundef %2448) #22
  br label %2451

2451:                                             ; preds = %2450, %2447
  %2452 = load ptr, ptr %359, align 8, !tbaa !23
  %2453 = icmp eq ptr %2452, %2208
  br i1 %2453, label %3342, label %2454

2454:                                             ; preds = %2451
  call void @_ZdlPv(ptr noundef %2452) #22
  br label %3342

2455:                                             ; preds = %2207
  %2456 = landingpad { ptr, i32 }
          cleanup
  br label %3288

2457:                                             ; preds = %2213
  %2458 = landingpad { ptr, i32 }
          cleanup
  br label %3288

2459:                                             ; preds = %2217
  %2460 = landingpad { ptr, i32 }
          cleanup
  br label %3281

2461:                                             ; preds = %2222
  %2462 = landingpad { ptr, i32 }
          cleanup
  br label %3281

2463:                                             ; preds = %2226
  %2464 = landingpad { ptr, i32 }
          cleanup
  br label %3274

2465:                                             ; preds = %2231
  %2466 = landingpad { ptr, i32 }
          cleanup
  br label %3274

2467:                                             ; preds = %2235
  %2468 = landingpad { ptr, i32 }
          cleanup
  br label %3267

2469:                                             ; preds = %2239
  %2470 = landingpad { ptr, i32 }
          cleanup
  br label %3267

2471:                                             ; preds = %2243
  %2472 = landingpad { ptr, i32 }
          cleanup
  br label %3260

2473:                                             ; preds = %2248
  %2474 = landingpad { ptr, i32 }
          cleanup
  br label %3260

2475:                                             ; preds = %2252
  %2476 = landingpad { ptr, i32 }
          cleanup
  br label %3253

2477:                                             ; preds = %2257
  %2478 = landingpad { ptr, i32 }
          cleanup
  br label %3253

2479:                                             ; preds = %2261
  %2480 = landingpad { ptr, i32 }
          cleanup
  br label %3246

2481:                                             ; preds = %2266
  %2482 = landingpad { ptr, i32 }
          cleanup
  br label %3239

2483:                                             ; preds = %2271
  %2484 = landingpad { ptr, i32 }
          cleanup
  br label %3239

2485:                                             ; preds = %2275
  %2486 = landingpad { ptr, i32 }
          cleanup
  br label %3232

2487:                                             ; preds = %2280
  %2488 = landingpad { ptr, i32 }
          cleanup
  br label %3232

2489:                                             ; preds = %2284
  %2490 = landingpad { ptr, i32 }
          cleanup
  br label %3225

2491:                                             ; preds = %2289
  %2492 = landingpad { ptr, i32 }
          cleanup
  br label %3225

2493:                                             ; preds = %2293
  %2494 = landingpad { ptr, i32 }
          cleanup
  br label %3218

2495:                                             ; preds = %2298
  %2496 = landingpad { ptr, i32 }
          cleanup
  br label %3218

2497:                                             ; preds = %2302
  %2498 = landingpad { ptr, i32 }
          cleanup
  br label %3211

2499:                                             ; preds = %2307
  %2500 = landingpad { ptr, i32 }
          cleanup
  br label %3204

2501:                                             ; preds = %2312
  %2502 = landingpad { ptr, i32 }
          cleanup
  br label %3204

2503:                                             ; preds = %2316
  %2504 = landingpad { ptr, i32 }
          cleanup
  br label %3197

2505:                                             ; preds = %2321
  %2506 = landingpad { ptr, i32 }
          cleanup
  br label %3190

2507:                                             ; preds = %2326
  %2508 = landingpad { ptr, i32 }
          cleanup
  br label %3190

2509:                                             ; preds = %2330
  %2510 = landingpad { ptr, i32 }
          cleanup
  br label %3183

2511:                                             ; preds = %2335
  %2512 = landingpad { ptr, i32 }
          cleanup
  br label %3177

2513:                                             ; preds = %2340
  %2514 = landingpad { ptr, i32 }
          cleanup
  %2515 = getelementptr inbounds %struct.TestCase, ptr %358, i64 16, i32 3, i32 0, i32 1
  %2516 = load ptr, ptr %2515, align 8, !tbaa !88
  %2517 = icmp eq ptr %2516, null
  br i1 %2517, label %2542, label %2518

2518:                                             ; preds = %2513
  %2519 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2516, i64 0, i32 1
  %2520 = load atomic i64, ptr %2519 acquire, align 8
  %2521 = icmp eq i64 %2520, 4294967297
  %2522 = trunc i64 %2520 to i32
  br i1 %2521, label %2523, label %2531

2523:                                             ; preds = %2518
  store i32 0, ptr %2519, align 8, !tbaa !90
  %2524 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2516, i64 0, i32 2
  store i32 0, ptr %2524, align 4, !tbaa !92
  %2525 = load ptr, ptr %2516, align 8, !tbaa !58
  %2526 = getelementptr inbounds ptr, ptr %2525, i64 2
  %2527 = load ptr, ptr %2526, align 8
  call void %2527(ptr noundef nonnull align 8 dereferenceable(16) %2516) #21
  %2528 = load ptr, ptr %2516, align 8, !tbaa !58
  %2529 = getelementptr inbounds ptr, ptr %2528, i64 3
  %2530 = load ptr, ptr %2529, align 8
  call void %2530(ptr noundef nonnull align 8 dereferenceable(16) %2516) #21
  br label %2542

2531:                                             ; preds = %2518
  %2532 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2533 = icmp eq i8 %2532, 0
  br i1 %2533, label %2536, label %2534

2534:                                             ; preds = %2531
  %2535 = add nsw i32 %2522, -1
  store i32 %2535, ptr %2519, align 8, !tbaa !73
  br label %2538

2536:                                             ; preds = %2531
  %2537 = atomicrmw volatile add ptr %2519, i32 -1 acq_rel, align 4
  br label %2538

2538:                                             ; preds = %2536, %2534
  %2539 = phi i32 [ %2522, %2534 ], [ %2537, %2536 ]
  %2540 = icmp eq i32 %2539, 1
  br i1 %2540, label %2541, label %2542, !prof !42

2541:                                             ; preds = %2538
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2516) #21
  br label %2542

2542:                                             ; preds = %2541, %2538, %2523, %2513
  %2543 = getelementptr inbounds %struct.TestCase, ptr %358, i64 16, i32 2
  %2544 = load ptr, ptr %2543, align 8, !tbaa !23
  %2545 = getelementptr inbounds %struct.TestCase, ptr %358, i64 16, i32 2, i32 2
  %2546 = icmp eq ptr %2544, %2545
  br i1 %2546, label %2548, label %2547

2547:                                             ; preds = %2542
  call void @_ZdlPv(ptr noundef %2544) #22
  br label %2548

2548:                                             ; preds = %2547, %2542
  %2549 = load ptr, ptr %2336, align 8, !tbaa !23
  %2550 = getelementptr inbounds %struct.TestCase, ptr %358, i64 16, i32 0, i32 2
  %2551 = icmp eq ptr %2549, %2550
  br i1 %2551, label %2553, label %2552

2552:                                             ; preds = %2548
  call void @_ZdlPv(ptr noundef %2549) #22
  br label %2553

2553:                                             ; preds = %2548, %2552
  %2554 = getelementptr inbounds %struct.TestCase, ptr %358, i64 15, i32 3, i32 0, i32 1
  %2555 = load ptr, ptr %2554, align 8, !tbaa !88
  %2556 = icmp eq ptr %2555, null
  br i1 %2556, label %2581, label %2557

2557:                                             ; preds = %2553
  %2558 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2555, i64 0, i32 1
  %2559 = load atomic i64, ptr %2558 acquire, align 8
  %2560 = icmp eq i64 %2559, 4294967297
  %2561 = trunc i64 %2559 to i32
  br i1 %2560, label %2562, label %2570

2562:                                             ; preds = %2557
  store i32 0, ptr %2558, align 8, !tbaa !90
  %2563 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2555, i64 0, i32 2
  store i32 0, ptr %2563, align 4, !tbaa !92
  %2564 = load ptr, ptr %2555, align 8, !tbaa !58
  %2565 = getelementptr inbounds ptr, ptr %2564, i64 2
  %2566 = load ptr, ptr %2565, align 8
  call void %2566(ptr noundef nonnull align 8 dereferenceable(16) %2555) #21
  %2567 = load ptr, ptr %2555, align 8, !tbaa !58
  %2568 = getelementptr inbounds ptr, ptr %2567, i64 3
  %2569 = load ptr, ptr %2568, align 8
  call void %2569(ptr noundef nonnull align 8 dereferenceable(16) %2555) #21
  br label %2581

2570:                                             ; preds = %2557
  %2571 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2572 = icmp eq i8 %2571, 0
  br i1 %2572, label %2575, label %2573

2573:                                             ; preds = %2570
  %2574 = add nsw i32 %2561, -1
  store i32 %2574, ptr %2558, align 8, !tbaa !73
  br label %2577

2575:                                             ; preds = %2570
  %2576 = atomicrmw volatile add ptr %2558, i32 -1 acq_rel, align 4
  br label %2577

2577:                                             ; preds = %2575, %2573
  %2578 = phi i32 [ %2561, %2573 ], [ %2576, %2575 ]
  %2579 = icmp eq i32 %2578, 1
  br i1 %2579, label %2580, label %2581, !prof !42

2580:                                             ; preds = %2577
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2555) #21
  br label %2581

2581:                                             ; preds = %2580, %2577, %2562, %2553
  %2582 = getelementptr inbounds %struct.TestCase, ptr %358, i64 15, i32 2
  %2583 = load ptr, ptr %2582, align 8, !tbaa !23
  %2584 = getelementptr inbounds %struct.TestCase, ptr %358, i64 15, i32 2, i32 2
  %2585 = icmp eq ptr %2583, %2584
  br i1 %2585, label %2587, label %2586

2586:                                             ; preds = %2581
  call void @_ZdlPv(ptr noundef %2583) #22
  br label %2587

2587:                                             ; preds = %2586, %2581
  %2588 = load ptr, ptr %2327, align 8, !tbaa !23
  %2589 = getelementptr inbounds %struct.TestCase, ptr %358, i64 15, i32 0, i32 2
  %2590 = icmp eq ptr %2588, %2589
  br i1 %2590, label %2592, label %2591

2591:                                             ; preds = %2587
  call void @_ZdlPv(ptr noundef %2588) #22
  br label %2592

2592:                                             ; preds = %2587, %2591
  %2593 = getelementptr inbounds %struct.TestCase, ptr %358, i64 14, i32 3, i32 0, i32 1
  %2594 = load ptr, ptr %2593, align 8, !tbaa !88
  %2595 = icmp eq ptr %2594, null
  br i1 %2595, label %2620, label %2596

2596:                                             ; preds = %2592
  %2597 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2594, i64 0, i32 1
  %2598 = load atomic i64, ptr %2597 acquire, align 8
  %2599 = icmp eq i64 %2598, 4294967297
  %2600 = trunc i64 %2598 to i32
  br i1 %2599, label %2601, label %2609

2601:                                             ; preds = %2596
  store i32 0, ptr %2597, align 8, !tbaa !90
  %2602 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2594, i64 0, i32 2
  store i32 0, ptr %2602, align 4, !tbaa !92
  %2603 = load ptr, ptr %2594, align 8, !tbaa !58
  %2604 = getelementptr inbounds ptr, ptr %2603, i64 2
  %2605 = load ptr, ptr %2604, align 8
  call void %2605(ptr noundef nonnull align 8 dereferenceable(16) %2594) #21
  %2606 = load ptr, ptr %2594, align 8, !tbaa !58
  %2607 = getelementptr inbounds ptr, ptr %2606, i64 3
  %2608 = load ptr, ptr %2607, align 8
  call void %2608(ptr noundef nonnull align 8 dereferenceable(16) %2594) #21
  br label %2620

2609:                                             ; preds = %2596
  %2610 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2611 = icmp eq i8 %2610, 0
  br i1 %2611, label %2614, label %2612

2612:                                             ; preds = %2609
  %2613 = add nsw i32 %2600, -1
  store i32 %2613, ptr %2597, align 8, !tbaa !73
  br label %2616

2614:                                             ; preds = %2609
  %2615 = atomicrmw volatile add ptr %2597, i32 -1 acq_rel, align 4
  br label %2616

2616:                                             ; preds = %2614, %2612
  %2617 = phi i32 [ %2600, %2612 ], [ %2615, %2614 ]
  %2618 = icmp eq i32 %2617, 1
  br i1 %2618, label %2619, label %2620, !prof !42

2619:                                             ; preds = %2616
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2594) #21
  br label %2620

2620:                                             ; preds = %2619, %2616, %2601, %2592
  %2621 = getelementptr inbounds %struct.TestCase, ptr %358, i64 14, i32 2
  %2622 = load ptr, ptr %2621, align 8, !tbaa !23
  %2623 = getelementptr inbounds %struct.TestCase, ptr %358, i64 14, i32 2, i32 2
  %2624 = icmp eq ptr %2622, %2623
  br i1 %2624, label %2626, label %2625

2625:                                             ; preds = %2620
  call void @_ZdlPv(ptr noundef %2622) #22
  br label %2626

2626:                                             ; preds = %2625, %2620
  %2627 = load ptr, ptr %2322, align 8, !tbaa !23
  %2628 = getelementptr inbounds %struct.TestCase, ptr %358, i64 14, i32 0, i32 2
  %2629 = icmp eq ptr %2627, %2628
  br i1 %2629, label %2631, label %2630

2630:                                             ; preds = %2626
  call void @_ZdlPv(ptr noundef %2627) #22
  br label %2631

2631:                                             ; preds = %2626, %2630
  %2632 = getelementptr inbounds %struct.TestCase, ptr %358, i64 13, i32 3, i32 0, i32 1
  %2633 = load ptr, ptr %2632, align 8, !tbaa !88
  %2634 = icmp eq ptr %2633, null
  br i1 %2634, label %2659, label %2635

2635:                                             ; preds = %2631
  %2636 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2633, i64 0, i32 1
  %2637 = load atomic i64, ptr %2636 acquire, align 8
  %2638 = icmp eq i64 %2637, 4294967297
  %2639 = trunc i64 %2637 to i32
  br i1 %2638, label %2640, label %2648

2640:                                             ; preds = %2635
  store i32 0, ptr %2636, align 8, !tbaa !90
  %2641 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2633, i64 0, i32 2
  store i32 0, ptr %2641, align 4, !tbaa !92
  %2642 = load ptr, ptr %2633, align 8, !tbaa !58
  %2643 = getelementptr inbounds ptr, ptr %2642, i64 2
  %2644 = load ptr, ptr %2643, align 8
  call void %2644(ptr noundef nonnull align 8 dereferenceable(16) %2633) #21
  %2645 = load ptr, ptr %2633, align 8, !tbaa !58
  %2646 = getelementptr inbounds ptr, ptr %2645, i64 3
  %2647 = load ptr, ptr %2646, align 8
  call void %2647(ptr noundef nonnull align 8 dereferenceable(16) %2633) #21
  br label %2659

2648:                                             ; preds = %2635
  %2649 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2650 = icmp eq i8 %2649, 0
  br i1 %2650, label %2653, label %2651

2651:                                             ; preds = %2648
  %2652 = add nsw i32 %2639, -1
  store i32 %2652, ptr %2636, align 8, !tbaa !73
  br label %2655

2653:                                             ; preds = %2648
  %2654 = atomicrmw volatile add ptr %2636, i32 -1 acq_rel, align 4
  br label %2655

2655:                                             ; preds = %2653, %2651
  %2656 = phi i32 [ %2639, %2651 ], [ %2654, %2653 ]
  %2657 = icmp eq i32 %2656, 1
  br i1 %2657, label %2658, label %2659, !prof !42

2658:                                             ; preds = %2655
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2633) #21
  br label %2659

2659:                                             ; preds = %2658, %2655, %2640, %2631
  %2660 = getelementptr inbounds %struct.TestCase, ptr %358, i64 13, i32 2
  %2661 = load ptr, ptr %2660, align 8, !tbaa !23
  %2662 = getelementptr inbounds %struct.TestCase, ptr %358, i64 13, i32 2, i32 2
  %2663 = icmp eq ptr %2661, %2662
  br i1 %2663, label %2665, label %2664

2664:                                             ; preds = %2659
  call void @_ZdlPv(ptr noundef %2661) #22
  br label %2665

2665:                                             ; preds = %2664, %2659
  %2666 = load ptr, ptr %2313, align 8, !tbaa !23
  %2667 = getelementptr inbounds %struct.TestCase, ptr %358, i64 13, i32 0, i32 2
  %2668 = icmp eq ptr %2666, %2667
  br i1 %2668, label %2670, label %2669

2669:                                             ; preds = %2665
  call void @_ZdlPv(ptr noundef %2666) #22
  br label %2670

2670:                                             ; preds = %2665, %2669
  %2671 = getelementptr inbounds %struct.TestCase, ptr %358, i64 12, i32 3, i32 0, i32 1
  %2672 = load ptr, ptr %2671, align 8, !tbaa !88
  %2673 = icmp eq ptr %2672, null
  br i1 %2673, label %2698, label %2674

2674:                                             ; preds = %2670
  %2675 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2672, i64 0, i32 1
  %2676 = load atomic i64, ptr %2675 acquire, align 8
  %2677 = icmp eq i64 %2676, 4294967297
  %2678 = trunc i64 %2676 to i32
  br i1 %2677, label %2679, label %2687

2679:                                             ; preds = %2674
  store i32 0, ptr %2675, align 8, !tbaa !90
  %2680 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2672, i64 0, i32 2
  store i32 0, ptr %2680, align 4, !tbaa !92
  %2681 = load ptr, ptr %2672, align 8, !tbaa !58
  %2682 = getelementptr inbounds ptr, ptr %2681, i64 2
  %2683 = load ptr, ptr %2682, align 8
  call void %2683(ptr noundef nonnull align 8 dereferenceable(16) %2672) #21
  %2684 = load ptr, ptr %2672, align 8, !tbaa !58
  %2685 = getelementptr inbounds ptr, ptr %2684, i64 3
  %2686 = load ptr, ptr %2685, align 8
  call void %2686(ptr noundef nonnull align 8 dereferenceable(16) %2672) #21
  br label %2698

2687:                                             ; preds = %2674
  %2688 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2689 = icmp eq i8 %2688, 0
  br i1 %2689, label %2692, label %2690

2690:                                             ; preds = %2687
  %2691 = add nsw i32 %2678, -1
  store i32 %2691, ptr %2675, align 8, !tbaa !73
  br label %2694

2692:                                             ; preds = %2687
  %2693 = atomicrmw volatile add ptr %2675, i32 -1 acq_rel, align 4
  br label %2694

2694:                                             ; preds = %2692, %2690
  %2695 = phi i32 [ %2678, %2690 ], [ %2693, %2692 ]
  %2696 = icmp eq i32 %2695, 1
  br i1 %2696, label %2697, label %2698, !prof !42

2697:                                             ; preds = %2694
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2672) #21
  br label %2698

2698:                                             ; preds = %2697, %2694, %2679, %2670
  %2699 = getelementptr inbounds %struct.TestCase, ptr %358, i64 12, i32 2
  %2700 = load ptr, ptr %2699, align 8, !tbaa !23
  %2701 = getelementptr inbounds %struct.TestCase, ptr %358, i64 12, i32 2, i32 2
  %2702 = icmp eq ptr %2700, %2701
  br i1 %2702, label %2704, label %2703

2703:                                             ; preds = %2698
  call void @_ZdlPv(ptr noundef %2700) #22
  br label %2704

2704:                                             ; preds = %2703, %2698
  %2705 = load ptr, ptr %2308, align 8, !tbaa !23
  %2706 = getelementptr inbounds %struct.TestCase, ptr %358, i64 12, i32 0, i32 2
  %2707 = icmp eq ptr %2705, %2706
  br i1 %2707, label %2709, label %2708

2708:                                             ; preds = %2704
  call void @_ZdlPv(ptr noundef %2705) #22
  br label %2709

2709:                                             ; preds = %2704, %2708
  %2710 = getelementptr inbounds %struct.TestCase, ptr %358, i64 11, i32 3, i32 0, i32 1
  %2711 = load ptr, ptr %2710, align 8, !tbaa !88
  %2712 = icmp eq ptr %2711, null
  br i1 %2712, label %2737, label %2713

2713:                                             ; preds = %2709
  %2714 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2711, i64 0, i32 1
  %2715 = load atomic i64, ptr %2714 acquire, align 8
  %2716 = icmp eq i64 %2715, 4294967297
  %2717 = trunc i64 %2715 to i32
  br i1 %2716, label %2718, label %2726

2718:                                             ; preds = %2713
  store i32 0, ptr %2714, align 8, !tbaa !90
  %2719 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2711, i64 0, i32 2
  store i32 0, ptr %2719, align 4, !tbaa !92
  %2720 = load ptr, ptr %2711, align 8, !tbaa !58
  %2721 = getelementptr inbounds ptr, ptr %2720, i64 2
  %2722 = load ptr, ptr %2721, align 8
  call void %2722(ptr noundef nonnull align 8 dereferenceable(16) %2711) #21
  %2723 = load ptr, ptr %2711, align 8, !tbaa !58
  %2724 = getelementptr inbounds ptr, ptr %2723, i64 3
  %2725 = load ptr, ptr %2724, align 8
  call void %2725(ptr noundef nonnull align 8 dereferenceable(16) %2711) #21
  br label %2737

2726:                                             ; preds = %2713
  %2727 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2728 = icmp eq i8 %2727, 0
  br i1 %2728, label %2731, label %2729

2729:                                             ; preds = %2726
  %2730 = add nsw i32 %2717, -1
  store i32 %2730, ptr %2714, align 8, !tbaa !73
  br label %2733

2731:                                             ; preds = %2726
  %2732 = atomicrmw volatile add ptr %2714, i32 -1 acq_rel, align 4
  br label %2733

2733:                                             ; preds = %2731, %2729
  %2734 = phi i32 [ %2717, %2729 ], [ %2732, %2731 ]
  %2735 = icmp eq i32 %2734, 1
  br i1 %2735, label %2736, label %2737, !prof !42

2736:                                             ; preds = %2733
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2711) #21
  br label %2737

2737:                                             ; preds = %2736, %2733, %2718, %2709
  %2738 = getelementptr inbounds %struct.TestCase, ptr %358, i64 11, i32 2
  %2739 = load ptr, ptr %2738, align 8, !tbaa !23
  %2740 = getelementptr inbounds %struct.TestCase, ptr %358, i64 11, i32 2, i32 2
  %2741 = icmp eq ptr %2739, %2740
  br i1 %2741, label %2743, label %2742

2742:                                             ; preds = %2737
  call void @_ZdlPv(ptr noundef %2739) #22
  br label %2743

2743:                                             ; preds = %2742, %2737
  %2744 = load ptr, ptr %2299, align 8, !tbaa !23
  %2745 = getelementptr inbounds %struct.TestCase, ptr %358, i64 11, i32 0, i32 2
  %2746 = icmp eq ptr %2744, %2745
  br i1 %2746, label %2748, label %2747

2747:                                             ; preds = %2743
  call void @_ZdlPv(ptr noundef %2744) #22
  br label %2748

2748:                                             ; preds = %2743, %2747
  %2749 = getelementptr inbounds %struct.TestCase, ptr %358, i64 10, i32 3, i32 0, i32 1
  %2750 = load ptr, ptr %2749, align 8, !tbaa !88
  %2751 = icmp eq ptr %2750, null
  br i1 %2751, label %2776, label %2752

2752:                                             ; preds = %2748
  %2753 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2750, i64 0, i32 1
  %2754 = load atomic i64, ptr %2753 acquire, align 8
  %2755 = icmp eq i64 %2754, 4294967297
  %2756 = trunc i64 %2754 to i32
  br i1 %2755, label %2757, label %2765

2757:                                             ; preds = %2752
  store i32 0, ptr %2753, align 8, !tbaa !90
  %2758 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2750, i64 0, i32 2
  store i32 0, ptr %2758, align 4, !tbaa !92
  %2759 = load ptr, ptr %2750, align 8, !tbaa !58
  %2760 = getelementptr inbounds ptr, ptr %2759, i64 2
  %2761 = load ptr, ptr %2760, align 8
  call void %2761(ptr noundef nonnull align 8 dereferenceable(16) %2750) #21
  %2762 = load ptr, ptr %2750, align 8, !tbaa !58
  %2763 = getelementptr inbounds ptr, ptr %2762, i64 3
  %2764 = load ptr, ptr %2763, align 8
  call void %2764(ptr noundef nonnull align 8 dereferenceable(16) %2750) #21
  br label %2776

2765:                                             ; preds = %2752
  %2766 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2767 = icmp eq i8 %2766, 0
  br i1 %2767, label %2770, label %2768

2768:                                             ; preds = %2765
  %2769 = add nsw i32 %2756, -1
  store i32 %2769, ptr %2753, align 8, !tbaa !73
  br label %2772

2770:                                             ; preds = %2765
  %2771 = atomicrmw volatile add ptr %2753, i32 -1 acq_rel, align 4
  br label %2772

2772:                                             ; preds = %2770, %2768
  %2773 = phi i32 [ %2756, %2768 ], [ %2771, %2770 ]
  %2774 = icmp eq i32 %2773, 1
  br i1 %2774, label %2775, label %2776, !prof !42

2775:                                             ; preds = %2772
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2750) #21
  br label %2776

2776:                                             ; preds = %2775, %2772, %2757, %2748
  %2777 = getelementptr inbounds %struct.TestCase, ptr %358, i64 10, i32 2
  %2778 = load ptr, ptr %2777, align 8, !tbaa !23
  %2779 = getelementptr inbounds %struct.TestCase, ptr %358, i64 10, i32 2, i32 2
  %2780 = icmp eq ptr %2778, %2779
  br i1 %2780, label %2782, label %2781

2781:                                             ; preds = %2776
  call void @_ZdlPv(ptr noundef %2778) #22
  br label %2782

2782:                                             ; preds = %2781, %2776
  %2783 = load ptr, ptr %2290, align 8, !tbaa !23
  %2784 = getelementptr inbounds %struct.TestCase, ptr %358, i64 10, i32 0, i32 2
  %2785 = icmp eq ptr %2783, %2784
  br i1 %2785, label %2787, label %2786

2786:                                             ; preds = %2782
  call void @_ZdlPv(ptr noundef %2783) #22
  br label %2787

2787:                                             ; preds = %2782, %2786
  %2788 = getelementptr inbounds %struct.TestCase, ptr %358, i64 9, i32 3, i32 0, i32 1
  %2789 = load ptr, ptr %2788, align 8, !tbaa !88
  %2790 = icmp eq ptr %2789, null
  br i1 %2790, label %2815, label %2791

2791:                                             ; preds = %2787
  %2792 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2789, i64 0, i32 1
  %2793 = load atomic i64, ptr %2792 acquire, align 8
  %2794 = icmp eq i64 %2793, 4294967297
  %2795 = trunc i64 %2793 to i32
  br i1 %2794, label %2796, label %2804

2796:                                             ; preds = %2791
  store i32 0, ptr %2792, align 8, !tbaa !90
  %2797 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2789, i64 0, i32 2
  store i32 0, ptr %2797, align 4, !tbaa !92
  %2798 = load ptr, ptr %2789, align 8, !tbaa !58
  %2799 = getelementptr inbounds ptr, ptr %2798, i64 2
  %2800 = load ptr, ptr %2799, align 8
  call void %2800(ptr noundef nonnull align 8 dereferenceable(16) %2789) #21
  %2801 = load ptr, ptr %2789, align 8, !tbaa !58
  %2802 = getelementptr inbounds ptr, ptr %2801, i64 3
  %2803 = load ptr, ptr %2802, align 8
  call void %2803(ptr noundef nonnull align 8 dereferenceable(16) %2789) #21
  br label %2815

2804:                                             ; preds = %2791
  %2805 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2806 = icmp eq i8 %2805, 0
  br i1 %2806, label %2809, label %2807

2807:                                             ; preds = %2804
  %2808 = add nsw i32 %2795, -1
  store i32 %2808, ptr %2792, align 8, !tbaa !73
  br label %2811

2809:                                             ; preds = %2804
  %2810 = atomicrmw volatile add ptr %2792, i32 -1 acq_rel, align 4
  br label %2811

2811:                                             ; preds = %2809, %2807
  %2812 = phi i32 [ %2795, %2807 ], [ %2810, %2809 ]
  %2813 = icmp eq i32 %2812, 1
  br i1 %2813, label %2814, label %2815, !prof !42

2814:                                             ; preds = %2811
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2789) #21
  br label %2815

2815:                                             ; preds = %2814, %2811, %2796, %2787
  %2816 = getelementptr inbounds %struct.TestCase, ptr %358, i64 9, i32 2
  %2817 = load ptr, ptr %2816, align 8, !tbaa !23
  %2818 = getelementptr inbounds %struct.TestCase, ptr %358, i64 9, i32 2, i32 2
  %2819 = icmp eq ptr %2817, %2818
  br i1 %2819, label %2821, label %2820

2820:                                             ; preds = %2815
  call void @_ZdlPv(ptr noundef %2817) #22
  br label %2821

2821:                                             ; preds = %2820, %2815
  %2822 = load ptr, ptr %2281, align 8, !tbaa !23
  %2823 = getelementptr inbounds %struct.TestCase, ptr %358, i64 9, i32 0, i32 2
  %2824 = icmp eq ptr %2822, %2823
  br i1 %2824, label %2826, label %2825

2825:                                             ; preds = %2821
  call void @_ZdlPv(ptr noundef %2822) #22
  br label %2826

2826:                                             ; preds = %2821, %2825
  %2827 = getelementptr inbounds %struct.TestCase, ptr %358, i64 8, i32 3, i32 0, i32 1
  %2828 = load ptr, ptr %2827, align 8, !tbaa !88
  %2829 = icmp eq ptr %2828, null
  br i1 %2829, label %2854, label %2830

2830:                                             ; preds = %2826
  %2831 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2828, i64 0, i32 1
  %2832 = load atomic i64, ptr %2831 acquire, align 8
  %2833 = icmp eq i64 %2832, 4294967297
  %2834 = trunc i64 %2832 to i32
  br i1 %2833, label %2835, label %2843

2835:                                             ; preds = %2830
  store i32 0, ptr %2831, align 8, !tbaa !90
  %2836 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2828, i64 0, i32 2
  store i32 0, ptr %2836, align 4, !tbaa !92
  %2837 = load ptr, ptr %2828, align 8, !tbaa !58
  %2838 = getelementptr inbounds ptr, ptr %2837, i64 2
  %2839 = load ptr, ptr %2838, align 8
  call void %2839(ptr noundef nonnull align 8 dereferenceable(16) %2828) #21
  %2840 = load ptr, ptr %2828, align 8, !tbaa !58
  %2841 = getelementptr inbounds ptr, ptr %2840, i64 3
  %2842 = load ptr, ptr %2841, align 8
  call void %2842(ptr noundef nonnull align 8 dereferenceable(16) %2828) #21
  br label %2854

2843:                                             ; preds = %2830
  %2844 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2845 = icmp eq i8 %2844, 0
  br i1 %2845, label %2848, label %2846

2846:                                             ; preds = %2843
  %2847 = add nsw i32 %2834, -1
  store i32 %2847, ptr %2831, align 8, !tbaa !73
  br label %2850

2848:                                             ; preds = %2843
  %2849 = atomicrmw volatile add ptr %2831, i32 -1 acq_rel, align 4
  br label %2850

2850:                                             ; preds = %2848, %2846
  %2851 = phi i32 [ %2834, %2846 ], [ %2849, %2848 ]
  %2852 = icmp eq i32 %2851, 1
  br i1 %2852, label %2853, label %2854, !prof !42

2853:                                             ; preds = %2850
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2828) #21
  br label %2854

2854:                                             ; preds = %2853, %2850, %2835, %2826
  %2855 = getelementptr inbounds %struct.TestCase, ptr %358, i64 8, i32 2
  %2856 = load ptr, ptr %2855, align 8, !tbaa !23
  %2857 = getelementptr inbounds %struct.TestCase, ptr %358, i64 8, i32 2, i32 2
  %2858 = icmp eq ptr %2856, %2857
  br i1 %2858, label %2860, label %2859

2859:                                             ; preds = %2854
  call void @_ZdlPv(ptr noundef %2856) #22
  br label %2860

2860:                                             ; preds = %2859, %2854
  %2861 = load ptr, ptr %2272, align 8, !tbaa !23
  %2862 = getelementptr inbounds %struct.TestCase, ptr %358, i64 8, i32 0, i32 2
  %2863 = icmp eq ptr %2861, %2862
  br i1 %2863, label %2865, label %2864

2864:                                             ; preds = %2860
  call void @_ZdlPv(ptr noundef %2861) #22
  br label %2865

2865:                                             ; preds = %2860, %2864
  %2866 = getelementptr inbounds %struct.TestCase, ptr %358, i64 7, i32 3, i32 0, i32 1
  %2867 = load ptr, ptr %2866, align 8, !tbaa !88
  %2868 = icmp eq ptr %2867, null
  br i1 %2868, label %2893, label %2869

2869:                                             ; preds = %2865
  %2870 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2867, i64 0, i32 1
  %2871 = load atomic i64, ptr %2870 acquire, align 8
  %2872 = icmp eq i64 %2871, 4294967297
  %2873 = trunc i64 %2871 to i32
  br i1 %2872, label %2874, label %2882

2874:                                             ; preds = %2869
  store i32 0, ptr %2870, align 8, !tbaa !90
  %2875 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2867, i64 0, i32 2
  store i32 0, ptr %2875, align 4, !tbaa !92
  %2876 = load ptr, ptr %2867, align 8, !tbaa !58
  %2877 = getelementptr inbounds ptr, ptr %2876, i64 2
  %2878 = load ptr, ptr %2877, align 8
  call void %2878(ptr noundef nonnull align 8 dereferenceable(16) %2867) #21
  %2879 = load ptr, ptr %2867, align 8, !tbaa !58
  %2880 = getelementptr inbounds ptr, ptr %2879, i64 3
  %2881 = load ptr, ptr %2880, align 8
  call void %2881(ptr noundef nonnull align 8 dereferenceable(16) %2867) #21
  br label %2893

2882:                                             ; preds = %2869
  %2883 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2884 = icmp eq i8 %2883, 0
  br i1 %2884, label %2887, label %2885

2885:                                             ; preds = %2882
  %2886 = add nsw i32 %2873, -1
  store i32 %2886, ptr %2870, align 8, !tbaa !73
  br label %2889

2887:                                             ; preds = %2882
  %2888 = atomicrmw volatile add ptr %2870, i32 -1 acq_rel, align 4
  br label %2889

2889:                                             ; preds = %2887, %2885
  %2890 = phi i32 [ %2873, %2885 ], [ %2888, %2887 ]
  %2891 = icmp eq i32 %2890, 1
  br i1 %2891, label %2892, label %2893, !prof !42

2892:                                             ; preds = %2889
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2867) #21
  br label %2893

2893:                                             ; preds = %2892, %2889, %2874, %2865
  %2894 = getelementptr inbounds %struct.TestCase, ptr %358, i64 7, i32 2
  %2895 = load ptr, ptr %2894, align 8, !tbaa !23
  %2896 = getelementptr inbounds %struct.TestCase, ptr %358, i64 7, i32 2, i32 2
  %2897 = icmp eq ptr %2895, %2896
  br i1 %2897, label %2899, label %2898

2898:                                             ; preds = %2893
  call void @_ZdlPv(ptr noundef %2895) #22
  br label %2899

2899:                                             ; preds = %2898, %2893
  %2900 = load ptr, ptr %2267, align 8, !tbaa !23
  %2901 = getelementptr inbounds %struct.TestCase, ptr %358, i64 7, i32 0, i32 2
  %2902 = icmp eq ptr %2900, %2901
  br i1 %2902, label %2904, label %2903

2903:                                             ; preds = %2899
  call void @_ZdlPv(ptr noundef %2900) #22
  br label %2904

2904:                                             ; preds = %2899, %2903
  %2905 = getelementptr inbounds %struct.TestCase, ptr %358, i64 6, i32 3, i32 0, i32 1
  %2906 = load ptr, ptr %2905, align 8, !tbaa !88
  %2907 = icmp eq ptr %2906, null
  br i1 %2907, label %2932, label %2908

2908:                                             ; preds = %2904
  %2909 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2906, i64 0, i32 1
  %2910 = load atomic i64, ptr %2909 acquire, align 8
  %2911 = icmp eq i64 %2910, 4294967297
  %2912 = trunc i64 %2910 to i32
  br i1 %2911, label %2913, label %2921

2913:                                             ; preds = %2908
  store i32 0, ptr %2909, align 8, !tbaa !90
  %2914 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2906, i64 0, i32 2
  store i32 0, ptr %2914, align 4, !tbaa !92
  %2915 = load ptr, ptr %2906, align 8, !tbaa !58
  %2916 = getelementptr inbounds ptr, ptr %2915, i64 2
  %2917 = load ptr, ptr %2916, align 8
  call void %2917(ptr noundef nonnull align 8 dereferenceable(16) %2906) #21
  %2918 = load ptr, ptr %2906, align 8, !tbaa !58
  %2919 = getelementptr inbounds ptr, ptr %2918, i64 3
  %2920 = load ptr, ptr %2919, align 8
  call void %2920(ptr noundef nonnull align 8 dereferenceable(16) %2906) #21
  br label %2932

2921:                                             ; preds = %2908
  %2922 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2923 = icmp eq i8 %2922, 0
  br i1 %2923, label %2926, label %2924

2924:                                             ; preds = %2921
  %2925 = add nsw i32 %2912, -1
  store i32 %2925, ptr %2909, align 8, !tbaa !73
  br label %2928

2926:                                             ; preds = %2921
  %2927 = atomicrmw volatile add ptr %2909, i32 -1 acq_rel, align 4
  br label %2928

2928:                                             ; preds = %2926, %2924
  %2929 = phi i32 [ %2912, %2924 ], [ %2927, %2926 ]
  %2930 = icmp eq i32 %2929, 1
  br i1 %2930, label %2931, label %2932, !prof !42

2931:                                             ; preds = %2928
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2906) #21
  br label %2932

2932:                                             ; preds = %2931, %2928, %2913, %2904
  %2933 = getelementptr inbounds %struct.TestCase, ptr %358, i64 6, i32 2
  %2934 = load ptr, ptr %2933, align 8, !tbaa !23
  %2935 = getelementptr inbounds %struct.TestCase, ptr %358, i64 6, i32 2, i32 2
  %2936 = icmp eq ptr %2934, %2935
  br i1 %2936, label %2938, label %2937

2937:                                             ; preds = %2932
  call void @_ZdlPv(ptr noundef %2934) #22
  br label %2938

2938:                                             ; preds = %2937, %2932
  %2939 = load ptr, ptr %2258, align 8, !tbaa !23
  %2940 = getelementptr inbounds %struct.TestCase, ptr %358, i64 6, i32 0, i32 2
  %2941 = icmp eq ptr %2939, %2940
  br i1 %2941, label %2943, label %2942

2942:                                             ; preds = %2938
  call void @_ZdlPv(ptr noundef %2939) #22
  br label %2943

2943:                                             ; preds = %2938, %2942
  %2944 = getelementptr inbounds %struct.TestCase, ptr %358, i64 5, i32 3, i32 0, i32 1
  %2945 = load ptr, ptr %2944, align 8, !tbaa !88
  %2946 = icmp eq ptr %2945, null
  br i1 %2946, label %2971, label %2947

2947:                                             ; preds = %2943
  %2948 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2945, i64 0, i32 1
  %2949 = load atomic i64, ptr %2948 acquire, align 8
  %2950 = icmp eq i64 %2949, 4294967297
  %2951 = trunc i64 %2949 to i32
  br i1 %2950, label %2952, label %2960

2952:                                             ; preds = %2947
  store i32 0, ptr %2948, align 8, !tbaa !90
  %2953 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2945, i64 0, i32 2
  store i32 0, ptr %2953, align 4, !tbaa !92
  %2954 = load ptr, ptr %2945, align 8, !tbaa !58
  %2955 = getelementptr inbounds ptr, ptr %2954, i64 2
  %2956 = load ptr, ptr %2955, align 8
  call void %2956(ptr noundef nonnull align 8 dereferenceable(16) %2945) #21
  %2957 = load ptr, ptr %2945, align 8, !tbaa !58
  %2958 = getelementptr inbounds ptr, ptr %2957, i64 3
  %2959 = load ptr, ptr %2958, align 8
  call void %2959(ptr noundef nonnull align 8 dereferenceable(16) %2945) #21
  br label %2971

2960:                                             ; preds = %2947
  %2961 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %2962 = icmp eq i8 %2961, 0
  br i1 %2962, label %2965, label %2963

2963:                                             ; preds = %2960
  %2964 = add nsw i32 %2951, -1
  store i32 %2964, ptr %2948, align 8, !tbaa !73
  br label %2967

2965:                                             ; preds = %2960
  %2966 = atomicrmw volatile add ptr %2948, i32 -1 acq_rel, align 4
  br label %2967

2967:                                             ; preds = %2965, %2963
  %2968 = phi i32 [ %2951, %2963 ], [ %2966, %2965 ]
  %2969 = icmp eq i32 %2968, 1
  br i1 %2969, label %2970, label %2971, !prof !42

2970:                                             ; preds = %2967
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2945) #21
  br label %2971

2971:                                             ; preds = %2970, %2967, %2952, %2943
  %2972 = getelementptr inbounds %struct.TestCase, ptr %358, i64 5, i32 2
  %2973 = load ptr, ptr %2972, align 8, !tbaa !23
  %2974 = getelementptr inbounds %struct.TestCase, ptr %358, i64 5, i32 2, i32 2
  %2975 = icmp eq ptr %2973, %2974
  br i1 %2975, label %2977, label %2976

2976:                                             ; preds = %2971
  call void @_ZdlPv(ptr noundef %2973) #22
  br label %2977

2977:                                             ; preds = %2976, %2971
  %2978 = load ptr, ptr %2249, align 8, !tbaa !23
  %2979 = getelementptr inbounds %struct.TestCase, ptr %358, i64 5, i32 0, i32 2
  %2980 = icmp eq ptr %2978, %2979
  br i1 %2980, label %2982, label %2981

2981:                                             ; preds = %2977
  call void @_ZdlPv(ptr noundef %2978) #22
  br label %2982

2982:                                             ; preds = %2977, %2981
  %2983 = getelementptr inbounds %struct.TestCase, ptr %358, i64 4, i32 3, i32 0, i32 1
  %2984 = load ptr, ptr %2983, align 8, !tbaa !88
  %2985 = icmp eq ptr %2984, null
  br i1 %2985, label %3010, label %2986

2986:                                             ; preds = %2982
  %2987 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2984, i64 0, i32 1
  %2988 = load atomic i64, ptr %2987 acquire, align 8
  %2989 = icmp eq i64 %2988, 4294967297
  %2990 = trunc i64 %2988 to i32
  br i1 %2989, label %2991, label %2999

2991:                                             ; preds = %2986
  store i32 0, ptr %2987, align 8, !tbaa !90
  %2992 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %2984, i64 0, i32 2
  store i32 0, ptr %2992, align 4, !tbaa !92
  %2993 = load ptr, ptr %2984, align 8, !tbaa !58
  %2994 = getelementptr inbounds ptr, ptr %2993, i64 2
  %2995 = load ptr, ptr %2994, align 8
  call void %2995(ptr noundef nonnull align 8 dereferenceable(16) %2984) #21
  %2996 = load ptr, ptr %2984, align 8, !tbaa !58
  %2997 = getelementptr inbounds ptr, ptr %2996, i64 3
  %2998 = load ptr, ptr %2997, align 8
  call void %2998(ptr noundef nonnull align 8 dereferenceable(16) %2984) #21
  br label %3010

2999:                                             ; preds = %2986
  %3000 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %3001 = icmp eq i8 %3000, 0
  br i1 %3001, label %3004, label %3002

3002:                                             ; preds = %2999
  %3003 = add nsw i32 %2990, -1
  store i32 %3003, ptr %2987, align 8, !tbaa !73
  br label %3006

3004:                                             ; preds = %2999
  %3005 = atomicrmw volatile add ptr %2987, i32 -1 acq_rel, align 4
  br label %3006

3006:                                             ; preds = %3004, %3002
  %3007 = phi i32 [ %2990, %3002 ], [ %3005, %3004 ]
  %3008 = icmp eq i32 %3007, 1
  br i1 %3008, label %3009, label %3010, !prof !42

3009:                                             ; preds = %3006
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %2984) #21
  br label %3010

3010:                                             ; preds = %3009, %3006, %2991, %2982
  %3011 = getelementptr inbounds %struct.TestCase, ptr %358, i64 4, i32 2
  %3012 = load ptr, ptr %3011, align 8, !tbaa !23
  %3013 = getelementptr inbounds %struct.TestCase, ptr %358, i64 4, i32 2, i32 2
  %3014 = icmp eq ptr %3012, %3013
  br i1 %3014, label %3016, label %3015

3015:                                             ; preds = %3010
  call void @_ZdlPv(ptr noundef %3012) #22
  br label %3016

3016:                                             ; preds = %3015, %3010
  %3017 = load ptr, ptr %2240, align 8, !tbaa !23
  %3018 = getelementptr inbounds %struct.TestCase, ptr %358, i64 4, i32 0, i32 2
  %3019 = icmp eq ptr %3017, %3018
  br i1 %3019, label %3021, label %3020

3020:                                             ; preds = %3016
  call void @_ZdlPv(ptr noundef %3017) #22
  br label %3021

3021:                                             ; preds = %3016, %3020
  %3022 = getelementptr inbounds %struct.TestCase, ptr %358, i64 3, i32 3, i32 0, i32 1
  %3023 = load ptr, ptr %3022, align 8, !tbaa !88
  %3024 = icmp eq ptr %3023, null
  br i1 %3024, label %3049, label %3025

3025:                                             ; preds = %3021
  %3026 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3023, i64 0, i32 1
  %3027 = load atomic i64, ptr %3026 acquire, align 8
  %3028 = icmp eq i64 %3027, 4294967297
  %3029 = trunc i64 %3027 to i32
  br i1 %3028, label %3030, label %3038

3030:                                             ; preds = %3025
  store i32 0, ptr %3026, align 8, !tbaa !90
  %3031 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3023, i64 0, i32 2
  store i32 0, ptr %3031, align 4, !tbaa !92
  %3032 = load ptr, ptr %3023, align 8, !tbaa !58
  %3033 = getelementptr inbounds ptr, ptr %3032, i64 2
  %3034 = load ptr, ptr %3033, align 8
  call void %3034(ptr noundef nonnull align 8 dereferenceable(16) %3023) #21
  %3035 = load ptr, ptr %3023, align 8, !tbaa !58
  %3036 = getelementptr inbounds ptr, ptr %3035, i64 3
  %3037 = load ptr, ptr %3036, align 8
  call void %3037(ptr noundef nonnull align 8 dereferenceable(16) %3023) #21
  br label %3049

3038:                                             ; preds = %3025
  %3039 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %3040 = icmp eq i8 %3039, 0
  br i1 %3040, label %3043, label %3041

3041:                                             ; preds = %3038
  %3042 = add nsw i32 %3029, -1
  store i32 %3042, ptr %3026, align 8, !tbaa !73
  br label %3045

3043:                                             ; preds = %3038
  %3044 = atomicrmw volatile add ptr %3026, i32 -1 acq_rel, align 4
  br label %3045

3045:                                             ; preds = %3043, %3041
  %3046 = phi i32 [ %3029, %3041 ], [ %3044, %3043 ]
  %3047 = icmp eq i32 %3046, 1
  br i1 %3047, label %3048, label %3049, !prof !42

3048:                                             ; preds = %3045
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %3023) #21
  br label %3049

3049:                                             ; preds = %3048, %3045, %3030, %3021
  %3050 = getelementptr inbounds %struct.TestCase, ptr %358, i64 3, i32 2
  %3051 = load ptr, ptr %3050, align 8, !tbaa !23
  %3052 = getelementptr inbounds %struct.TestCase, ptr %358, i64 3, i32 2, i32 2
  %3053 = icmp eq ptr %3051, %3052
  br i1 %3053, label %3055, label %3054

3054:                                             ; preds = %3049
  call void @_ZdlPv(ptr noundef %3051) #22
  br label %3055

3055:                                             ; preds = %3054, %3049
  %3056 = load ptr, ptr %2232, align 8, !tbaa !23
  %3057 = getelementptr inbounds %struct.TestCase, ptr %358, i64 3, i32 0, i32 2
  %3058 = icmp eq ptr %3056, %3057
  br i1 %3058, label %3060, label %3059

3059:                                             ; preds = %3055
  call void @_ZdlPv(ptr noundef %3056) #22
  br label %3060

3060:                                             ; preds = %3055, %3059
  %3061 = getelementptr inbounds %struct.TestCase, ptr %358, i64 2, i32 3, i32 0, i32 1
  %3062 = load ptr, ptr %3061, align 8, !tbaa !88
  %3063 = icmp eq ptr %3062, null
  br i1 %3063, label %3088, label %3064

3064:                                             ; preds = %3060
  %3065 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3062, i64 0, i32 1
  %3066 = load atomic i64, ptr %3065 acquire, align 8
  %3067 = icmp eq i64 %3066, 4294967297
  %3068 = trunc i64 %3066 to i32
  br i1 %3067, label %3069, label %3077

3069:                                             ; preds = %3064
  store i32 0, ptr %3065, align 8, !tbaa !90
  %3070 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3062, i64 0, i32 2
  store i32 0, ptr %3070, align 4, !tbaa !92
  %3071 = load ptr, ptr %3062, align 8, !tbaa !58
  %3072 = getelementptr inbounds ptr, ptr %3071, i64 2
  %3073 = load ptr, ptr %3072, align 8
  call void %3073(ptr noundef nonnull align 8 dereferenceable(16) %3062) #21
  %3074 = load ptr, ptr %3062, align 8, !tbaa !58
  %3075 = getelementptr inbounds ptr, ptr %3074, i64 3
  %3076 = load ptr, ptr %3075, align 8
  call void %3076(ptr noundef nonnull align 8 dereferenceable(16) %3062) #21
  br label %3088

3077:                                             ; preds = %3064
  %3078 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %3079 = icmp eq i8 %3078, 0
  br i1 %3079, label %3082, label %3080

3080:                                             ; preds = %3077
  %3081 = add nsw i32 %3068, -1
  store i32 %3081, ptr %3065, align 8, !tbaa !73
  br label %3084

3082:                                             ; preds = %3077
  %3083 = atomicrmw volatile add ptr %3065, i32 -1 acq_rel, align 4
  br label %3084

3084:                                             ; preds = %3082, %3080
  %3085 = phi i32 [ %3068, %3080 ], [ %3083, %3082 ]
  %3086 = icmp eq i32 %3085, 1
  br i1 %3086, label %3087, label %3088, !prof !42

3087:                                             ; preds = %3084
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %3062) #21
  br label %3088

3088:                                             ; preds = %3087, %3084, %3069, %3060
  %3089 = getelementptr inbounds %struct.TestCase, ptr %358, i64 2, i32 2
  %3090 = load ptr, ptr %3089, align 8, !tbaa !23
  %3091 = getelementptr inbounds %struct.TestCase, ptr %358, i64 2, i32 2, i32 2
  %3092 = icmp eq ptr %3090, %3091
  br i1 %3092, label %3094, label %3093

3093:                                             ; preds = %3088
  call void @_ZdlPv(ptr noundef %3090) #22
  br label %3094

3094:                                             ; preds = %3093, %3088
  %3095 = load ptr, ptr %2223, align 8, !tbaa !23
  %3096 = getelementptr inbounds %struct.TestCase, ptr %358, i64 2, i32 0, i32 2
  %3097 = icmp eq ptr %3095, %3096
  br i1 %3097, label %3099, label %3098

3098:                                             ; preds = %3094
  call void @_ZdlPv(ptr noundef %3095) #22
  br label %3099

3099:                                             ; preds = %3094, %3098
  %3100 = getelementptr inbounds %struct.TestCase, ptr %358, i64 1, i32 3, i32 0, i32 1
  %3101 = load ptr, ptr %3100, align 8, !tbaa !88
  %3102 = icmp eq ptr %3101, null
  br i1 %3102, label %3127, label %3103

3103:                                             ; preds = %3099
  %3104 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3101, i64 0, i32 1
  %3105 = load atomic i64, ptr %3104 acquire, align 8
  %3106 = icmp eq i64 %3105, 4294967297
  %3107 = trunc i64 %3105 to i32
  br i1 %3106, label %3108, label %3116

3108:                                             ; preds = %3103
  store i32 0, ptr %3104, align 8, !tbaa !90
  %3109 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3101, i64 0, i32 2
  store i32 0, ptr %3109, align 4, !tbaa !92
  %3110 = load ptr, ptr %3101, align 8, !tbaa !58
  %3111 = getelementptr inbounds ptr, ptr %3110, i64 2
  %3112 = load ptr, ptr %3111, align 8
  call void %3112(ptr noundef nonnull align 8 dereferenceable(16) %3101) #21
  %3113 = load ptr, ptr %3101, align 8, !tbaa !58
  %3114 = getelementptr inbounds ptr, ptr %3113, i64 3
  %3115 = load ptr, ptr %3114, align 8
  call void %3115(ptr noundef nonnull align 8 dereferenceable(16) %3101) #21
  br label %3127

3116:                                             ; preds = %3103
  %3117 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %3118 = icmp eq i8 %3117, 0
  br i1 %3118, label %3121, label %3119

3119:                                             ; preds = %3116
  %3120 = add nsw i32 %3107, -1
  store i32 %3120, ptr %3104, align 8, !tbaa !73
  br label %3123

3121:                                             ; preds = %3116
  %3122 = atomicrmw volatile add ptr %3104, i32 -1 acq_rel, align 4
  br label %3123

3123:                                             ; preds = %3121, %3119
  %3124 = phi i32 [ %3107, %3119 ], [ %3122, %3121 ]
  %3125 = icmp eq i32 %3124, 1
  br i1 %3125, label %3126, label %3127, !prof !42

3126:                                             ; preds = %3123
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %3101) #21
  br label %3127

3127:                                             ; preds = %3126, %3123, %3108, %3099
  %3128 = getelementptr inbounds %struct.TestCase, ptr %358, i64 1, i32 2
  %3129 = load ptr, ptr %3128, align 8, !tbaa !23
  %3130 = getelementptr inbounds %struct.TestCase, ptr %358, i64 1, i32 2, i32 2
  %3131 = icmp eq ptr %3129, %3130
  br i1 %3131, label %3133, label %3132

3132:                                             ; preds = %3127
  call void @_ZdlPv(ptr noundef %3129) #22
  br label %3133

3133:                                             ; preds = %3132, %3127
  %3134 = load ptr, ptr %2214, align 8, !tbaa !23
  %3135 = getelementptr inbounds %struct.TestCase, ptr %358, i64 1, i32 0, i32 2
  %3136 = icmp eq ptr %3134, %3135
  br i1 %3136, label %3138, label %3137

3137:                                             ; preds = %3133
  call void @_ZdlPv(ptr noundef %3134) #22
  br label %3138

3138:                                             ; preds = %3133, %3137
  %3139 = getelementptr inbounds %struct.TestCase, ptr %358, i64 0, i32 3, i32 0, i32 1
  %3140 = load ptr, ptr %3139, align 8, !tbaa !88
  %3141 = icmp eq ptr %3140, null
  br i1 %3141, label %3166, label %3142

3142:                                             ; preds = %3138
  %3143 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3140, i64 0, i32 1
  %3144 = load atomic i64, ptr %3143 acquire, align 8
  %3145 = icmp eq i64 %3144, 4294967297
  %3146 = trunc i64 %3144 to i32
  br i1 %3145, label %3147, label %3155

3147:                                             ; preds = %3142
  store i32 0, ptr %3143, align 8, !tbaa !90
  %3148 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3140, i64 0, i32 2
  store i32 0, ptr %3148, align 4, !tbaa !92
  %3149 = load ptr, ptr %3140, align 8, !tbaa !58
  %3150 = getelementptr inbounds ptr, ptr %3149, i64 2
  %3151 = load ptr, ptr %3150, align 8
  call void %3151(ptr noundef nonnull align 8 dereferenceable(16) %3140) #21
  %3152 = load ptr, ptr %3140, align 8, !tbaa !58
  %3153 = getelementptr inbounds ptr, ptr %3152, i64 3
  %3154 = load ptr, ptr %3153, align 8
  call void %3154(ptr noundef nonnull align 8 dereferenceable(16) %3140) #21
  br label %3166

3155:                                             ; preds = %3142
  %3156 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %3157 = icmp eq i8 %3156, 0
  br i1 %3157, label %3160, label %3158

3158:                                             ; preds = %3155
  %3159 = add nsw i32 %3146, -1
  store i32 %3159, ptr %3143, align 8, !tbaa !73
  br label %3162

3160:                                             ; preds = %3155
  %3161 = atomicrmw volatile add ptr %3143, i32 -1 acq_rel, align 4
  br label %3162

3162:                                             ; preds = %3160, %3158
  %3163 = phi i32 [ %3146, %3158 ], [ %3161, %3160 ]
  %3164 = icmp eq i32 %3163, 1
  br i1 %3164, label %3165, label %3166, !prof !42

3165:                                             ; preds = %3162
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %3140) #21
  br label %3166

3166:                                             ; preds = %3165, %3162, %3147, %3138
  %3167 = getelementptr inbounds %struct.TestCase, ptr %358, i64 0, i32 2
  %3168 = load ptr, ptr %3167, align 8, !tbaa !23
  %3169 = getelementptr inbounds %struct.TestCase, ptr %358, i64 0, i32 2, i32 2
  %3170 = icmp eq ptr %3168, %3169
  br i1 %3170, label %3172, label %3171

3171:                                             ; preds = %3166
  call void @_ZdlPv(ptr noundef %3168) #22
  br label %3172

3172:                                             ; preds = %3171, %3166
  %3173 = load ptr, ptr %358, align 8, !tbaa !23
  %3174 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %358, i64 0, i32 2
  %3175 = icmp eq ptr %3173, %3174
  br i1 %3175, label %3177, label %3176

3176:                                             ; preds = %3172
  call void @_ZdlPv(ptr noundef %3173) #22
  br label %3177

3177:                                             ; preds = %3176, %3172, %2511
  %3178 = phi { ptr, i32 } [ %2512, %2511 ], [ %2514, %3172 ], [ %2514, %3176 ]
  %3179 = phi i1 [ true, %2511 ], [ false, %3172 ], [ false, %3176 ]
  %3180 = load ptr, ptr %375, align 8, !tbaa !23
  %3181 = icmp eq ptr %3180, %2337
  br i1 %3181, label %3183, label %3182

3182:                                             ; preds = %3177
  call void @_ZdlPv(ptr noundef %3180) #22
  br label %3183

3183:                                             ; preds = %3182, %3177, %2509
  %3184 = phi ptr [ %2327, %2509 ], [ %2336, %3182 ], [ %2336, %3177 ]
  %3185 = phi { ptr, i32 } [ %2510, %2509 ], [ %3178, %3182 ], [ %3178, %3177 ]
  %3186 = phi i1 [ true, %2509 ], [ %3179, %3182 ], [ %3179, %3177 ]
  %3187 = load ptr, ptr %374, align 8, !tbaa !23
  %3188 = icmp eq ptr %3187, %2328
  br i1 %3188, label %3190, label %3189

3189:                                             ; preds = %3183
  call void @_ZdlPv(ptr noundef %3187) #22
  br label %3190

3190:                                             ; preds = %3189, %3183, %2507, %2505
  %3191 = phi ptr [ %2322, %2505 ], [ %2327, %2507 ], [ %3184, %3183 ], [ %3184, %3189 ]
  %3192 = phi { ptr, i32 } [ %2506, %2505 ], [ %2508, %2507 ], [ %3185, %3183 ], [ %3185, %3189 ]
  %3193 = phi i1 [ true, %2505 ], [ true, %2507 ], [ %3186, %3183 ], [ %3186, %3189 ]
  %3194 = load ptr, ptr %373, align 8, !tbaa !23
  %3195 = icmp eq ptr %3194, %2323
  br i1 %3195, label %3197, label %3196

3196:                                             ; preds = %3190
  call void @_ZdlPv(ptr noundef %3194) #22
  br label %3197

3197:                                             ; preds = %3196, %3190, %2503
  %3198 = phi ptr [ %2313, %2503 ], [ %3191, %3196 ], [ %3191, %3190 ]
  %3199 = phi { ptr, i32 } [ %2504, %2503 ], [ %3192, %3196 ], [ %3192, %3190 ]
  %3200 = phi i1 [ true, %2503 ], [ %3193, %3196 ], [ %3193, %3190 ]
  %3201 = load ptr, ptr %372, align 8, !tbaa !23
  %3202 = icmp eq ptr %3201, %2314
  br i1 %3202, label %3204, label %3203

3203:                                             ; preds = %3197
  call void @_ZdlPv(ptr noundef %3201) #22
  br label %3204

3204:                                             ; preds = %3203, %3197, %2501, %2499
  %3205 = phi ptr [ %2308, %2499 ], [ %2313, %2501 ], [ %3198, %3197 ], [ %3198, %3203 ]
  %3206 = phi { ptr, i32 } [ %2500, %2499 ], [ %2502, %2501 ], [ %3199, %3197 ], [ %3199, %3203 ]
  %3207 = phi i1 [ true, %2499 ], [ true, %2501 ], [ %3200, %3197 ], [ %3200, %3203 ]
  %3208 = load ptr, ptr %371, align 8, !tbaa !23
  %3209 = icmp eq ptr %3208, %2309
  br i1 %3209, label %3211, label %3210

3210:                                             ; preds = %3204
  call void @_ZdlPv(ptr noundef %3208) #22
  br label %3211

3211:                                             ; preds = %3210, %3204, %2497
  %3212 = phi ptr [ %2299, %2497 ], [ %3205, %3210 ], [ %3205, %3204 ]
  %3213 = phi { ptr, i32 } [ %2498, %2497 ], [ %3206, %3210 ], [ %3206, %3204 ]
  %3214 = phi i1 [ true, %2497 ], [ %3207, %3210 ], [ %3207, %3204 ]
  %3215 = load ptr, ptr %370, align 8, !tbaa !23
  %3216 = icmp eq ptr %3215, %2300
  br i1 %3216, label %3218, label %3217

3217:                                             ; preds = %3211
  call void @_ZdlPv(ptr noundef %3215) #22
  br label %3218

3218:                                             ; preds = %3217, %3211, %2495, %2493
  %3219 = phi ptr [ %2290, %2493 ], [ %2299, %2495 ], [ %3212, %3211 ], [ %3212, %3217 ]
  %3220 = phi { ptr, i32 } [ %2494, %2493 ], [ %2496, %2495 ], [ %3213, %3211 ], [ %3213, %3217 ]
  %3221 = phi i1 [ true, %2493 ], [ true, %2495 ], [ %3214, %3211 ], [ %3214, %3217 ]
  %3222 = load ptr, ptr %369, align 8, !tbaa !23
  %3223 = icmp eq ptr %3222, %2291
  br i1 %3223, label %3225, label %3224

3224:                                             ; preds = %3218
  call void @_ZdlPv(ptr noundef %3222) #22
  br label %3225

3225:                                             ; preds = %3224, %3218, %2491, %2489
  %3226 = phi ptr [ %2281, %2489 ], [ %2290, %2491 ], [ %3219, %3218 ], [ %3219, %3224 ]
  %3227 = phi { ptr, i32 } [ %2490, %2489 ], [ %2492, %2491 ], [ %3220, %3218 ], [ %3220, %3224 ]
  %3228 = phi i1 [ true, %2489 ], [ true, %2491 ], [ %3221, %3218 ], [ %3221, %3224 ]
  %3229 = load ptr, ptr %368, align 8, !tbaa !23
  %3230 = icmp eq ptr %3229, %2282
  br i1 %3230, label %3232, label %3231

3231:                                             ; preds = %3225
  call void @_ZdlPv(ptr noundef %3229) #22
  br label %3232

3232:                                             ; preds = %3231, %3225, %2487, %2485
  %3233 = phi ptr [ %2272, %2485 ], [ %2281, %2487 ], [ %3226, %3225 ], [ %3226, %3231 ]
  %3234 = phi { ptr, i32 } [ %2486, %2485 ], [ %2488, %2487 ], [ %3227, %3225 ], [ %3227, %3231 ]
  %3235 = phi i1 [ true, %2485 ], [ true, %2487 ], [ %3228, %3225 ], [ %3228, %3231 ]
  %3236 = load ptr, ptr %367, align 8, !tbaa !23
  %3237 = icmp eq ptr %3236, %2273
  br i1 %3237, label %3239, label %3238

3238:                                             ; preds = %3232
  call void @_ZdlPv(ptr noundef %3236) #22
  br label %3239

3239:                                             ; preds = %3238, %3232, %2483, %2481
  %3240 = phi ptr [ %2267, %2481 ], [ %2272, %2483 ], [ %3233, %3232 ], [ %3233, %3238 ]
  %3241 = phi { ptr, i32 } [ %2482, %2481 ], [ %2484, %2483 ], [ %3234, %3232 ], [ %3234, %3238 ]
  %3242 = phi i1 [ true, %2481 ], [ true, %2483 ], [ %3235, %3232 ], [ %3235, %3238 ]
  %3243 = load ptr, ptr %366, align 8, !tbaa !23
  %3244 = icmp eq ptr %3243, %2268
  br i1 %3244, label %3246, label %3245

3245:                                             ; preds = %3239
  call void @_ZdlPv(ptr noundef %3243) #22
  br label %3246

3246:                                             ; preds = %3245, %3239, %2479
  %3247 = phi ptr [ %2258, %2479 ], [ %3240, %3245 ], [ %3240, %3239 ]
  %3248 = phi { ptr, i32 } [ %2480, %2479 ], [ %3241, %3245 ], [ %3241, %3239 ]
  %3249 = phi i1 [ true, %2479 ], [ %3242, %3245 ], [ %3242, %3239 ]
  %3250 = load ptr, ptr %365, align 8, !tbaa !23
  %3251 = icmp eq ptr %3250, %2259
  br i1 %3251, label %3253, label %3252

3252:                                             ; preds = %3246
  call void @_ZdlPv(ptr noundef %3250) #22
  br label %3253

3253:                                             ; preds = %3252, %3246, %2477, %2475
  %3254 = phi ptr [ %2249, %2475 ], [ %2258, %2477 ], [ %3247, %3246 ], [ %3247, %3252 ]
  %3255 = phi { ptr, i32 } [ %2476, %2475 ], [ %2478, %2477 ], [ %3248, %3246 ], [ %3248, %3252 ]
  %3256 = phi i1 [ true, %2475 ], [ true, %2477 ], [ %3249, %3246 ], [ %3249, %3252 ]
  %3257 = load ptr, ptr %364, align 8, !tbaa !23
  %3258 = icmp eq ptr %3257, %2250
  br i1 %3258, label %3260, label %3259

3259:                                             ; preds = %3253
  call void @_ZdlPv(ptr noundef %3257) #22
  br label %3260

3260:                                             ; preds = %3259, %3253, %2473, %2471
  %3261 = phi ptr [ %2240, %2471 ], [ %2249, %2473 ], [ %3254, %3253 ], [ %3254, %3259 ]
  %3262 = phi { ptr, i32 } [ %2472, %2471 ], [ %2474, %2473 ], [ %3255, %3253 ], [ %3255, %3259 ]
  %3263 = phi i1 [ true, %2471 ], [ true, %2473 ], [ %3256, %3253 ], [ %3256, %3259 ]
  %3264 = load ptr, ptr %363, align 8, !tbaa !23
  %3265 = icmp eq ptr %3264, %2241
  br i1 %3265, label %3267, label %3266

3266:                                             ; preds = %3260
  call void @_ZdlPv(ptr noundef %3264) #22
  br label %3267

3267:                                             ; preds = %3266, %3260, %2469, %2467
  %3268 = phi ptr [ %2232, %2467 ], [ %2240, %2469 ], [ %3261, %3260 ], [ %3261, %3266 ]
  %3269 = phi { ptr, i32 } [ %2468, %2467 ], [ %2470, %2469 ], [ %3262, %3260 ], [ %3262, %3266 ]
  %3270 = phi i1 [ true, %2467 ], [ true, %2469 ], [ %3263, %3260 ], [ %3263, %3266 ]
  %3271 = load ptr, ptr %362, align 8, !tbaa !23
  %3272 = icmp eq ptr %3271, %2233
  br i1 %3272, label %3274, label %3273

3273:                                             ; preds = %3267
  call void @_ZdlPv(ptr noundef %3271) #22
  br label %3274

3274:                                             ; preds = %3273, %3267, %2465, %2463
  %3275 = phi ptr [ %2223, %2463 ], [ %2232, %2465 ], [ %3268, %3267 ], [ %3268, %3273 ]
  %3276 = phi { ptr, i32 } [ %2464, %2463 ], [ %2466, %2465 ], [ %3269, %3267 ], [ %3269, %3273 ]
  %3277 = phi i1 [ true, %2463 ], [ true, %2465 ], [ %3270, %3267 ], [ %3270, %3273 ]
  %3278 = load ptr, ptr %361, align 8, !tbaa !23
  %3279 = icmp eq ptr %3278, %2224
  br i1 %3279, label %3281, label %3280

3280:                                             ; preds = %3274
  call void @_ZdlPv(ptr noundef %3278) #22
  br label %3281

3281:                                             ; preds = %3280, %3274, %2461, %2459
  %3282 = phi ptr [ %2214, %2459 ], [ %2223, %2461 ], [ %3275, %3274 ], [ %3275, %3280 ]
  %3283 = phi { ptr, i32 } [ %2460, %2459 ], [ %2462, %2461 ], [ %3276, %3274 ], [ %3276, %3280 ]
  %3284 = phi i1 [ true, %2459 ], [ true, %2461 ], [ %3277, %3274 ], [ %3277, %3280 ]
  %3285 = load ptr, ptr %360, align 8, !tbaa !23
  %3286 = icmp eq ptr %3285, %2215
  br i1 %3286, label %3288, label %3287

3287:                                             ; preds = %3281
  call void @_ZdlPv(ptr noundef %3285) #22
  br label %3288

3288:                                             ; preds = %3287, %3281, %2457, %2455
  %3289 = phi ptr [ %358, %2455 ], [ %2214, %2457 ], [ %3282, %3281 ], [ %3282, %3287 ]
  %3290 = phi { ptr, i32 } [ %2456, %2455 ], [ %2458, %2457 ], [ %3283, %3281 ], [ %3283, %3287 ]
  %3291 = phi i1 [ true, %2455 ], [ true, %2457 ], [ %3284, %3281 ], [ %3284, %3287 ]
  %3292 = load ptr, ptr %359, align 8, !tbaa !23
  %3293 = icmp eq ptr %3292, %2208
  br i1 %3293, label %3295, label %3294

3294:                                             ; preds = %3288
  call void @_ZdlPv(ptr noundef %3292) #22
  br label %3295

3295:                                             ; preds = %3294, %3288
  %3296 = icmp ne ptr %358, %3289
  %3297 = select i1 %3291, i1 %3296, i1 false
  br i1 %3297, label %3298, label %3341

3298:                                             ; preds = %3295, %3339
  %3299 = phi ptr [ %3300, %3339 ], [ %3289, %3295 ]
  %3300 = getelementptr inbounds %struct.TestCase, ptr %3299, i64 -1
  %3301 = getelementptr %struct.TestCase, ptr %3299, i64 -1, i32 3, i32 0, i32 1
  %3302 = load ptr, ptr %3301, align 8, !tbaa !88
  %3303 = icmp eq ptr %3302, null
  br i1 %3303, label %3328, label %3304

3304:                                             ; preds = %3298
  %3305 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3302, i64 0, i32 1
  %3306 = load atomic i64, ptr %3305 acquire, align 8
  %3307 = icmp eq i64 %3306, 4294967297
  %3308 = trunc i64 %3306 to i32
  br i1 %3307, label %3309, label %3317

3309:                                             ; preds = %3304
  store i32 0, ptr %3305, align 8, !tbaa !90
  %3310 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3302, i64 0, i32 2
  store i32 0, ptr %3310, align 4, !tbaa !92
  %3311 = load ptr, ptr %3302, align 8, !tbaa !58
  %3312 = getelementptr inbounds ptr, ptr %3311, i64 2
  %3313 = load ptr, ptr %3312, align 8
  call void %3313(ptr noundef nonnull align 8 dereferenceable(16) %3302) #21
  %3314 = load ptr, ptr %3302, align 8, !tbaa !58
  %3315 = getelementptr inbounds ptr, ptr %3314, i64 3
  %3316 = load ptr, ptr %3315, align 8
  call void %3316(ptr noundef nonnull align 8 dereferenceable(16) %3302) #21
  br label %3328

3317:                                             ; preds = %3304
  %3318 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %3319 = icmp eq i8 %3318, 0
  br i1 %3319, label %3322, label %3320

3320:                                             ; preds = %3317
  %3321 = add nsw i32 %3308, -1
  store i32 %3321, ptr %3305, align 8, !tbaa !73
  br label %3324

3322:                                             ; preds = %3317
  %3323 = atomicrmw volatile add ptr %3305, i32 -1 acq_rel, align 4
  br label %3324

3324:                                             ; preds = %3322, %3320
  %3325 = phi i32 [ %3308, %3320 ], [ %3323, %3322 ]
  %3326 = icmp eq i32 %3325, 1
  br i1 %3326, label %3327, label %3328, !prof !42

3327:                                             ; preds = %3324
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %3302) #21
  br label %3328

3328:                                             ; preds = %3327, %3324, %3309, %3298
  %3329 = getelementptr %struct.TestCase, ptr %3299, i64 -1, i32 2
  %3330 = load ptr, ptr %3329, align 8, !tbaa !23
  %3331 = getelementptr %struct.TestCase, ptr %3299, i64 -1, i32 2, i32 2
  %3332 = icmp eq ptr %3330, %3331
  br i1 %3332, label %3334, label %3333

3333:                                             ; preds = %3328
  call void @_ZdlPv(ptr noundef %3330) #22
  br label %3334

3334:                                             ; preds = %3333, %3328
  %3335 = load ptr, ptr %3300, align 8, !tbaa !23
  %3336 = getelementptr %struct.TestCase, ptr %3299, i64 -1, i32 0, i32 2
  %3337 = icmp eq ptr %3335, %3336
  br i1 %3337, label %3339, label %3338

3338:                                             ; preds = %3334
  call void @_ZdlPv(ptr noundef %3335) #22
  br label %3339

3339:                                             ; preds = %3334, %3338
  %3340 = icmp eq ptr %3300, %358
  br i1 %3340, label %3341, label %3298

3341:                                             ; preds = %3339, %3295
  call void @llvm.lifetime.end.p0(i64 1496, ptr nonnull %358) #21
  br label %762

3342:                                             ; preds = %2451, %2454
  call void @llvm.lifetime.end.p0(i64 1496, ptr nonnull %358) #21
  store i32 %2341, ptr @dummy98, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %359)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %360)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %361)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %362)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %363)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %364)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %365)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %366)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %367)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %368)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %369)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %370)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %371)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %372)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %373)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %374)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %375)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %344)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %343) #21
  %3343 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %344, i64 0, i32 2
  store ptr %3343, ptr %344, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %342) #21
  store i64 75, ptr %342, align 8, !tbaa !74
  %3344 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %344, ptr noundef nonnull align 8 dereferenceable(8) %342, i64 noundef 0)
  store ptr %3344, ptr %344, align 8, !tbaa !23
  %3345 = load i64, ptr %342, align 8, !tbaa !74
  store i64 %3345, ptr %3343, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(75) %3344, ptr noundef nonnull align 1 dereferenceable(75) @.str.61, i64 75, i1 false)
  %3346 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %344, i64 0, i32 1
  store i64 %3345, ptr %3346, align 8, !tbaa !10
  %3347 = getelementptr inbounds i8, ptr %3344, i64 %3345
  store i8 0, ptr %3347, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %342) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %343, ptr noundef nonnull %344, i32 noundef 0)
          to label %3348 unwind label %3393

3348:                                             ; preds = %3342
  %3349 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 4, ptr nonnull %343, i64 1)
          to label %3350 unwind label %3395

3350:                                             ; preds = %3348
  %3351 = getelementptr inbounds %struct.TestCase, ptr %343, i64 0, i32 3, i32 0, i32 1
  %3352 = load ptr, ptr %3351, align 8, !tbaa !88
  %3353 = icmp eq ptr %3352, null
  br i1 %3353, label %3378, label %3354

3354:                                             ; preds = %3350
  %3355 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3352, i64 0, i32 1
  %3356 = load atomic i64, ptr %3355 acquire, align 8
  %3357 = icmp eq i64 %3356, 4294967297
  %3358 = trunc i64 %3356 to i32
  br i1 %3357, label %3359, label %3367

3359:                                             ; preds = %3354
  store i32 0, ptr %3355, align 8, !tbaa !90
  %3360 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3352, i64 0, i32 2
  store i32 0, ptr %3360, align 4, !tbaa !92
  %3361 = load ptr, ptr %3352, align 8, !tbaa !58
  %3362 = getelementptr inbounds ptr, ptr %3361, i64 2
  %3363 = load ptr, ptr %3362, align 8
  call void %3363(ptr noundef nonnull align 8 dereferenceable(16) %3352) #21
  %3364 = load ptr, ptr %3352, align 8, !tbaa !58
  %3365 = getelementptr inbounds ptr, ptr %3364, i64 3
  %3366 = load ptr, ptr %3365, align 8
  call void %3366(ptr noundef nonnull align 8 dereferenceable(16) %3352) #21
  br label %3378

3367:                                             ; preds = %3354
  %3368 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %3369 = icmp eq i8 %3368, 0
  br i1 %3369, label %3372, label %3370

3370:                                             ; preds = %3367
  %3371 = add nsw i32 %3358, -1
  store i32 %3371, ptr %3355, align 8, !tbaa !73
  br label %3374

3372:                                             ; preds = %3367
  %3373 = atomicrmw volatile add ptr %3355, i32 -1 acq_rel, align 4
  br label %3374

3374:                                             ; preds = %3372, %3370
  %3375 = phi i32 [ %3358, %3370 ], [ %3373, %3372 ]
  %3376 = icmp eq i32 %3375, 1
  br i1 %3376, label %3377, label %3378, !prof !42

3377:                                             ; preds = %3374
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %3352) #21
  br label %3378

3378:                                             ; preds = %3377, %3374, %3359, %3350
  %3379 = getelementptr inbounds %struct.TestCase, ptr %343, i64 0, i32 2
  %3380 = load ptr, ptr %3379, align 8, !tbaa !23
  %3381 = getelementptr inbounds %struct.TestCase, ptr %343, i64 0, i32 2, i32 2
  %3382 = icmp eq ptr %3380, %3381
  br i1 %3382, label %3384, label %3383

3383:                                             ; preds = %3378
  call void @_ZdlPv(ptr noundef %3380) #22
  br label %3384

3384:                                             ; preds = %3383, %3378
  %3385 = load ptr, ptr %343, align 8, !tbaa !23
  %3386 = getelementptr inbounds %struct.TestCase, ptr %343, i64 0, i32 0, i32 2
  %3387 = icmp eq ptr %3385, %3386
  br i1 %3387, label %3389, label %3388

3388:                                             ; preds = %3384
  call void @_ZdlPv(ptr noundef %3385) #22
  br label %3389

3389:                                             ; preds = %3388, %3384
  %3390 = load ptr, ptr %344, align 8, !tbaa !23
  %3391 = icmp eq ptr %3390, %3343
  br i1 %3391, label %3441, label %3392

3392:                                             ; preds = %3389
  call void @_ZdlPv(ptr noundef %3390) #22
  br label %3441

3393:                                             ; preds = %3342
  %3394 = landingpad { ptr, i32 }
          cleanup
  br label %3435

3395:                                             ; preds = %3348
  %3396 = landingpad { ptr, i32 }
          cleanup
  %3397 = getelementptr inbounds %struct.TestCase, ptr %343, i64 0, i32 3, i32 0, i32 1
  %3398 = load ptr, ptr %3397, align 8, !tbaa !88
  %3399 = icmp eq ptr %3398, null
  br i1 %3399, label %3424, label %3400

3400:                                             ; preds = %3395
  %3401 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3398, i64 0, i32 1
  %3402 = load atomic i64, ptr %3401 acquire, align 8
  %3403 = icmp eq i64 %3402, 4294967297
  %3404 = trunc i64 %3402 to i32
  br i1 %3403, label %3405, label %3413

3405:                                             ; preds = %3400
  store i32 0, ptr %3401, align 8, !tbaa !90
  %3406 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3398, i64 0, i32 2
  store i32 0, ptr %3406, align 4, !tbaa !92
  %3407 = load ptr, ptr %3398, align 8, !tbaa !58
  %3408 = getelementptr inbounds ptr, ptr %3407, i64 2
  %3409 = load ptr, ptr %3408, align 8
  call void %3409(ptr noundef nonnull align 8 dereferenceable(16) %3398) #21
  %3410 = load ptr, ptr %3398, align 8, !tbaa !58
  %3411 = getelementptr inbounds ptr, ptr %3410, i64 3
  %3412 = load ptr, ptr %3411, align 8
  call void %3412(ptr noundef nonnull align 8 dereferenceable(16) %3398) #21
  br label %3424

3413:                                             ; preds = %3400
  %3414 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %3415 = icmp eq i8 %3414, 0
  br i1 %3415, label %3418, label %3416

3416:                                             ; preds = %3413
  %3417 = add nsw i32 %3404, -1
  store i32 %3417, ptr %3401, align 8, !tbaa !73
  br label %3420

3418:                                             ; preds = %3413
  %3419 = atomicrmw volatile add ptr %3401, i32 -1 acq_rel, align 4
  br label %3420

3420:                                             ; preds = %3418, %3416
  %3421 = phi i32 [ %3404, %3416 ], [ %3419, %3418 ]
  %3422 = icmp eq i32 %3421, 1
  br i1 %3422, label %3423, label %3424, !prof !42

3423:                                             ; preds = %3420
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %3398) #21
  br label %3424

3424:                                             ; preds = %3423, %3420, %3405, %3395
  %3425 = getelementptr inbounds %struct.TestCase, ptr %343, i64 0, i32 2
  %3426 = load ptr, ptr %3425, align 8, !tbaa !23
  %3427 = getelementptr inbounds %struct.TestCase, ptr %343, i64 0, i32 2, i32 2
  %3428 = icmp eq ptr %3426, %3427
  br i1 %3428, label %3430, label %3429

3429:                                             ; preds = %3424
  call void @_ZdlPv(ptr noundef %3426) #22
  br label %3430

3430:                                             ; preds = %3429, %3424
  %3431 = load ptr, ptr %343, align 8, !tbaa !23
  %3432 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %343, i64 0, i32 2
  %3433 = icmp eq ptr %3431, %3432
  br i1 %3433, label %3435, label %3434

3434:                                             ; preds = %3430
  call void @_ZdlPv(ptr noundef %3431) #22
  br label %3435

3435:                                             ; preds = %3434, %3430, %3393
  %3436 = phi { ptr, i32 } [ %3394, %3393 ], [ %3396, %3430 ], [ %3396, %3434 ]
  %3437 = load ptr, ptr %344, align 8, !tbaa !23
  %3438 = icmp eq ptr %3437, %3343
  br i1 %3438, label %3440, label %3439

3439:                                             ; preds = %3435
  call void @_ZdlPv(ptr noundef %3437) #22
  br label %3440

3440:                                             ; preds = %3439, %3435
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %343) #21
  br label %762

3441:                                             ; preds = %3389, %3392
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %343) #21
  store i32 %3349, ptr @dummy100, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %344)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %341) #21
  %3442 = getelementptr inbounds i8, ptr %341, i64 8
  store i64 0, ptr %3442, align 8
  %3443 = getelementptr inbounds %"class.std::function", ptr %341, i64 0, i32 1
  %3444 = getelementptr inbounds %"class.std::_Function_base", ptr %341, i64 0, i32 1
  store ptr @_Z22CheckBytesAndItemsPSecRK7Results, ptr %341, align 8, !tbaa !47
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E9_M_invokeERKSt9_Any_dataS2_, ptr %3443, align 8, !tbaa !115
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, ptr %3444, align 8, !tbaa !118
  %3445 = invoke noundef i64 @_Z10AddCheckerPKcRKSt8functionIFvRK7ResultsEE(ptr noundef nonnull @.str.50, ptr noundef nonnull align 8 dereferenceable(32) %341)
          to label %3446 unwind label %3454

3446:                                             ; preds = %3441
  %3447 = load ptr, ptr %3444, align 8, !tbaa !118
  %3448 = icmp eq ptr %3447, null
  br i1 %3448, label %3464, label %3449

3449:                                             ; preds = %3446
  %3450 = invoke noundef zeroext i1 %3447(ptr noundef nonnull align 8 dereferenceable(16) %341, ptr noundef nonnull align 8 dereferenceable(16) %341, i32 noundef 3)
          to label %3464 unwind label %3451

3451:                                             ; preds = %3449
  %3452 = landingpad { ptr, i32 }
          catch ptr null
  %3453 = extractvalue { ptr, i32 } %3452, 0
  call void @__clang_call_terminate(ptr %3453) #24
  unreachable

3454:                                             ; preds = %3441
  %3455 = landingpad { ptr, i32 }
          cleanup
  %3456 = load ptr, ptr %3444, align 8, !tbaa !118
  %3457 = icmp eq ptr %3456, null
  br i1 %3457, label %3463, label %3458

3458:                                             ; preds = %3454
  %3459 = invoke noundef zeroext i1 %3456(ptr noundef nonnull align 8 dereferenceable(16) %341, ptr noundef nonnull align 8 dereferenceable(16) %341, i32 noundef 3)
          to label %3463 unwind label %3460

3460:                                             ; preds = %3458
  %3461 = landingpad { ptr, i32 }
          catch ptr null
  %3462 = extractvalue { ptr, i32 } %3461, 0
  call void @__clang_call_terminate(ptr %3462) #24
  unreachable

3463:                                             ; preds = %3458, %3454
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %341) #21
  br label %762

3464:                                             ; preds = %3446, %3449
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %341) #21
  store i64 %3445, ptr @dummy112, align 8, !tbaa !74
  %3465 = call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #25
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %3465, ptr noundef nonnull @.str.69)
          to label %3468 unwind label %3466

3466:                                             ; preds = %3464
  %3467 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %3465) #22
  br label %762

3468:                                             ; preds = %3464
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %3465, align 8, !tbaa !58
  %3469 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %3465, i64 0, i32 1
  store ptr @_Z16BM_Counters_RateRN9benchmark5StateE, ptr %3469, align 8, !tbaa !93
  %3470 = call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %3465)
  store ptr %3470, ptr @_ZL27benchmark_uniq_4_benchmark_, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %340)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %339) #21
  %3471 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %340, i64 0, i32 2
  store ptr %3471, ptr %340, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %338) #21
  store i64 64, ptr %338, align 8, !tbaa !74
  %3472 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %340, ptr noundef nonnull align 8 dereferenceable(8) %338, i64 noundef 0)
  store ptr %3472, ptr %340, align 8, !tbaa !23
  %3473 = load i64, ptr %338, align 8, !tbaa !74
  store i64 %3473, ptr %3471, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(64) %3472, ptr noundef nonnull align 1 dereferenceable(64) @.str.71, i64 64, i1 false)
  %3474 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %340, i64 0, i32 1
  store i64 %3473, ptr %3474, align 8, !tbaa !10
  %3475 = getelementptr inbounds i8, ptr %3472, i64 %3473
  store i8 0, ptr %3475, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %338) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %339, ptr noundef nonnull %340, i32 noundef 0)
          to label %3476 unwind label %3521

3476:                                             ; preds = %3468
  %3477 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 0, ptr nonnull %339, i64 1)
          to label %3478 unwind label %3523

3478:                                             ; preds = %3476
  %3479 = getelementptr inbounds %struct.TestCase, ptr %339, i64 0, i32 3, i32 0, i32 1
  %3480 = load ptr, ptr %3479, align 8, !tbaa !88
  %3481 = icmp eq ptr %3480, null
  br i1 %3481, label %3506, label %3482

3482:                                             ; preds = %3478
  %3483 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3480, i64 0, i32 1
  %3484 = load atomic i64, ptr %3483 acquire, align 8
  %3485 = icmp eq i64 %3484, 4294967297
  %3486 = trunc i64 %3484 to i32
  br i1 %3485, label %3487, label %3495

3487:                                             ; preds = %3482
  store i32 0, ptr %3483, align 8, !tbaa !90
  %3488 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3480, i64 0, i32 2
  store i32 0, ptr %3488, align 4, !tbaa !92
  %3489 = load ptr, ptr %3480, align 8, !tbaa !58
  %3490 = getelementptr inbounds ptr, ptr %3489, i64 2
  %3491 = load ptr, ptr %3490, align 8
  call void %3491(ptr noundef nonnull align 8 dereferenceable(16) %3480) #21
  %3492 = load ptr, ptr %3480, align 8, !tbaa !58
  %3493 = getelementptr inbounds ptr, ptr %3492, i64 3
  %3494 = load ptr, ptr %3493, align 8
  call void %3494(ptr noundef nonnull align 8 dereferenceable(16) %3480) #21
  br label %3506

3495:                                             ; preds = %3482
  %3496 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %3497 = icmp eq i8 %3496, 0
  br i1 %3497, label %3500, label %3498

3498:                                             ; preds = %3495
  %3499 = add nsw i32 %3486, -1
  store i32 %3499, ptr %3483, align 8, !tbaa !73
  br label %3502

3500:                                             ; preds = %3495
  %3501 = atomicrmw volatile add ptr %3483, i32 -1 acq_rel, align 4
  br label %3502

3502:                                             ; preds = %3500, %3498
  %3503 = phi i32 [ %3486, %3498 ], [ %3501, %3500 ]
  %3504 = icmp eq i32 %3503, 1
  br i1 %3504, label %3505, label %3506, !prof !42

3505:                                             ; preds = %3502
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %3480) #21
  br label %3506

3506:                                             ; preds = %3505, %3502, %3487, %3478
  %3507 = getelementptr inbounds %struct.TestCase, ptr %339, i64 0, i32 2
  %3508 = load ptr, ptr %3507, align 8, !tbaa !23
  %3509 = getelementptr inbounds %struct.TestCase, ptr %339, i64 0, i32 2, i32 2
  %3510 = icmp eq ptr %3508, %3509
  br i1 %3510, label %3512, label %3511

3511:                                             ; preds = %3506
  call void @_ZdlPv(ptr noundef %3508) #22
  br label %3512

3512:                                             ; preds = %3511, %3506
  %3513 = load ptr, ptr %339, align 8, !tbaa !23
  %3514 = getelementptr inbounds %struct.TestCase, ptr %339, i64 0, i32 0, i32 2
  %3515 = icmp eq ptr %3513, %3514
  br i1 %3515, label %3517, label %3516

3516:                                             ; preds = %3512
  call void @_ZdlPv(ptr noundef %3513) #22
  br label %3517

3517:                                             ; preds = %3516, %3512
  %3518 = load ptr, ptr %340, align 8, !tbaa !23
  %3519 = icmp eq ptr %3518, %3471
  br i1 %3519, label %3569, label %3520

3520:                                             ; preds = %3517
  call void @_ZdlPv(ptr noundef %3518) #22
  br label %3569

3521:                                             ; preds = %3468
  %3522 = landingpad { ptr, i32 }
          cleanup
  br label %3563

3523:                                             ; preds = %3476
  %3524 = landingpad { ptr, i32 }
          cleanup
  %3525 = getelementptr inbounds %struct.TestCase, ptr %339, i64 0, i32 3, i32 0, i32 1
  %3526 = load ptr, ptr %3525, align 8, !tbaa !88
  %3527 = icmp eq ptr %3526, null
  br i1 %3527, label %3552, label %3528

3528:                                             ; preds = %3523
  %3529 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3526, i64 0, i32 1
  %3530 = load atomic i64, ptr %3529 acquire, align 8
  %3531 = icmp eq i64 %3530, 4294967297
  %3532 = trunc i64 %3530 to i32
  br i1 %3531, label %3533, label %3541

3533:                                             ; preds = %3528
  store i32 0, ptr %3529, align 8, !tbaa !90
  %3534 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3526, i64 0, i32 2
  store i32 0, ptr %3534, align 4, !tbaa !92
  %3535 = load ptr, ptr %3526, align 8, !tbaa !58
  %3536 = getelementptr inbounds ptr, ptr %3535, i64 2
  %3537 = load ptr, ptr %3536, align 8
  call void %3537(ptr noundef nonnull align 8 dereferenceable(16) %3526) #21
  %3538 = load ptr, ptr %3526, align 8, !tbaa !58
  %3539 = getelementptr inbounds ptr, ptr %3538, i64 3
  %3540 = load ptr, ptr %3539, align 8
  call void %3540(ptr noundef nonnull align 8 dereferenceable(16) %3526) #21
  br label %3552

3541:                                             ; preds = %3528
  %3542 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %3543 = icmp eq i8 %3542, 0
  br i1 %3543, label %3546, label %3544

3544:                                             ; preds = %3541
  %3545 = add nsw i32 %3532, -1
  store i32 %3545, ptr %3529, align 8, !tbaa !73
  br label %3548

3546:                                             ; preds = %3541
  %3547 = atomicrmw volatile add ptr %3529, i32 -1 acq_rel, align 4
  br label %3548

3548:                                             ; preds = %3546, %3544
  %3549 = phi i32 [ %3532, %3544 ], [ %3547, %3546 ]
  %3550 = icmp eq i32 %3549, 1
  br i1 %3550, label %3551, label %3552, !prof !42

3551:                                             ; preds = %3548
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %3526) #21
  br label %3552

3552:                                             ; preds = %3551, %3548, %3533, %3523
  %3553 = getelementptr inbounds %struct.TestCase, ptr %339, i64 0, i32 2
  %3554 = load ptr, ptr %3553, align 8, !tbaa !23
  %3555 = getelementptr inbounds %struct.TestCase, ptr %339, i64 0, i32 2, i32 2
  %3556 = icmp eq ptr %3554, %3555
  br i1 %3556, label %3558, label %3557

3557:                                             ; preds = %3552
  call void @_ZdlPv(ptr noundef %3554) #22
  br label %3558

3558:                                             ; preds = %3557, %3552
  %3559 = load ptr, ptr %339, align 8, !tbaa !23
  %3560 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %339, i64 0, i32 2
  %3561 = icmp eq ptr %3559, %3560
  br i1 %3561, label %3563, label %3562

3562:                                             ; preds = %3558
  call void @_ZdlPv(ptr noundef %3559) #22
  br label %3563

3563:                                             ; preds = %3562, %3558, %3521
  %3564 = phi { ptr, i32 } [ %3522, %3521 ], [ %3524, %3558 ], [ %3524, %3562 ]
  %3565 = load ptr, ptr %340, align 8, !tbaa !23
  %3566 = icmp eq ptr %3565, %3471
  br i1 %3566, label %3568, label %3567

3567:                                             ; preds = %3563
  call void @_ZdlPv(ptr noundef %3565) #22
  br label %3568

3568:                                             ; preds = %3567, %3563
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %339) #21
  br label %762

3569:                                             ; preds = %3517, %3520
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %339) #21
  store i32 %3477, ptr @dummy130, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %340)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %323)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %324)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %325)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %326)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %327)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %328)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %329)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %330)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %331)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %332)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %333)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %334)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %335)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %336)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %337)
  call void @llvm.lifetime.start.p0(i64 1320, ptr nonnull %322) #21
  %3570 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %323, i64 0, i32 2
  store ptr %3570, ptr %323, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %321) #21
  store i64 28, ptr %321, align 8, !tbaa !74
  %3571 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %323, ptr noundef nonnull align 8 dereferenceable(8) %321, i64 noundef 0)
  store ptr %3571, ptr %323, align 8, !tbaa !23
  %3572 = load i64, ptr %321, align 8, !tbaa !74
  store i64 %3572, ptr %3570, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(28) %3571, ptr noundef nonnull align 1 dereferenceable(28) @.str.73, i64 28, i1 false)
  %3573 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %323, i64 0, i32 1
  store i64 %3572, ptr %3573, align 8, !tbaa !10
  %3574 = load ptr, ptr %323, align 8, !tbaa !23
  %3575 = getelementptr inbounds i8, ptr %3574, i64 %3572
  store i8 0, ptr %3575, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %321) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %322, ptr noundef nonnull %323, i32 noundef 0)
          to label %3576 unwind label %3793

3576:                                             ; preds = %3569
  %3577 = getelementptr inbounds %struct.TestCase, ptr %322, i64 1
  %3578 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %324, i64 0, i32 2
  store ptr %3578, ptr %324, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %320) #21
  store i64 19, ptr %320, align 8, !tbaa !74
  %3579 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %324, ptr noundef nonnull align 8 dereferenceable(8) %320, i64 noundef 0)
          to label %3580 unwind label %3795

3580:                                             ; preds = %3576
  store ptr %3579, ptr %324, align 8, !tbaa !23
  %3581 = load i64, ptr %320, align 8, !tbaa !74
  store i64 %3581, ptr %3578, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %3579, ptr noundef nonnull align 1 dereferenceable(19) @.str.74, i64 19, i1 false)
  %3582 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %324, i64 0, i32 1
  store i64 %3581, ptr %3582, align 8, !tbaa !10
  %3583 = load ptr, ptr %324, align 8, !tbaa !23
  %3584 = getelementptr inbounds i8, ptr %3583, i64 %3581
  store i8 0, ptr %3584, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %320) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %3577, ptr noundef nonnull %324, i32 noundef 1)
          to label %3585 unwind label %3797

3585:                                             ; preds = %3580
  %3586 = getelementptr inbounds %struct.TestCase, ptr %322, i64 2
  %3587 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %325, i64 0, i32 2
  store ptr %3587, ptr %325, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %319) #21
  store i64 32, ptr %319, align 8, !tbaa !74
  %3588 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %325, ptr noundef nonnull align 8 dereferenceable(8) %319, i64 noundef 0)
          to label %3589 unwind label %3799

3589:                                             ; preds = %3585
  store ptr %3588, ptr %325, align 8, !tbaa !23
  %3590 = load i64, ptr %319, align 8, !tbaa !74
  store i64 %3590, ptr %3587, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %3588, ptr noundef nonnull align 1 dereferenceable(32) @.str.15, i64 32, i1 false)
  %3591 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %325, i64 0, i32 1
  store i64 %3590, ptr %3591, align 8, !tbaa !10
  %3592 = load ptr, ptr %325, align 8, !tbaa !23
  %3593 = getelementptr inbounds i8, ptr %3592, i64 %3590
  store i8 0, ptr %3593, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %319) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %3586, ptr noundef nonnull %325, i32 noundef 1)
          to label %3594 unwind label %3801

3594:                                             ; preds = %3589
  %3595 = getelementptr inbounds %struct.TestCase, ptr %322, i64 3
  %3596 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %326, i64 0, i32 2
  store ptr %3596, ptr %326, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %318) #21
  store i64 32, ptr %318, align 8, !tbaa !74
  %3597 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %326, ptr noundef nonnull align 8 dereferenceable(8) %318, i64 noundef 0)
          to label %3598 unwind label %3803

3598:                                             ; preds = %3594
  store ptr %3597, ptr %326, align 8, !tbaa !23
  %3599 = load i64, ptr %318, align 8, !tbaa !74
  store i64 %3599, ptr %3596, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %3597, ptr noundef nonnull align 1 dereferenceable(32) @.str.75, i64 32, i1 false)
  %3600 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %326, i64 0, i32 1
  store i64 %3599, ptr %3600, align 8, !tbaa !10
  %3601 = load ptr, ptr %326, align 8, !tbaa !23
  %3602 = getelementptr inbounds i8, ptr %3601, i64 %3599
  store i8 0, ptr %3602, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %318) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %3595, ptr noundef nonnull %326, i32 noundef 1)
          to label %3603 unwind label %3805

3603:                                             ; preds = %3598
  %3604 = getelementptr inbounds %struct.TestCase, ptr %322, i64 4
  %3605 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %327, i64 0, i32 2
  store ptr %3605, ptr %327, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %317) #21
  store i64 25, ptr %317, align 8, !tbaa !74
  %3606 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %327, ptr noundef nonnull align 8 dereferenceable(8) %317, i64 noundef 0)
          to label %3607 unwind label %3807

3607:                                             ; preds = %3603
  store ptr %3606, ptr %327, align 8, !tbaa !23
  %3608 = load i64, ptr %317, align 8, !tbaa !74
  store i64 %3608, ptr %3605, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(25) %3606, ptr noundef nonnull align 1 dereferenceable(25) @.str.17, i64 25, i1 false)
  %3609 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %327, i64 0, i32 1
  store i64 %3608, ptr %3609, align 8, !tbaa !10
  %3610 = load ptr, ptr %327, align 8, !tbaa !23
  %3611 = getelementptr inbounds i8, ptr %3610, i64 %3608
  store i8 0, ptr %3611, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %317) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %3604, ptr noundef nonnull %327, i32 noundef 1)
          to label %3612 unwind label %3809

3612:                                             ; preds = %3607
  %3613 = getelementptr inbounds %struct.TestCase, ptr %322, i64 5
  %3614 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %328, i64 0, i32 2
  store ptr %3614, ptr %328, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %316) #21
  store i64 18, ptr %316, align 8, !tbaa !74
  %3615 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %328, ptr noundef nonnull align 8 dereferenceable(8) %316, i64 noundef 0)
          to label %3616 unwind label %3811

3616:                                             ; preds = %3612
  store ptr %3615, ptr %328, align 8, !tbaa !23
  %3617 = load i64, ptr %316, align 8, !tbaa !74
  store i64 %3617, ptr %3614, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(18) %3615, ptr noundef nonnull align 1 dereferenceable(18) @.str.18, i64 18, i1 false)
  %3618 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %328, i64 0, i32 1
  store i64 %3617, ptr %3618, align 8, !tbaa !10
  %3619 = load ptr, ptr %328, align 8, !tbaa !23
  %3620 = getelementptr inbounds i8, ptr %3619, i64 %3617
  store i8 0, ptr %3620, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %316) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %3613, ptr noundef nonnull %328, i32 noundef 1)
          to label %3621 unwind label %3813

3621:                                             ; preds = %3616
  %3622 = getelementptr inbounds %struct.TestCase, ptr %322, i64 6
  %3623 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %329, i64 0, i32 2
  store ptr %3623, ptr %329, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %315) #21
  store i64 23, ptr %315, align 8, !tbaa !74
  %3624 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %329, ptr noundef nonnull align 8 dereferenceable(8) %315, i64 noundef 0)
          to label %3625 unwind label %3815

3625:                                             ; preds = %3621
  store ptr %3624, ptr %329, align 8, !tbaa !23
  %3626 = load i64, ptr %315, align 8, !tbaa !74
  store i64 %3626, ptr %3623, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(23) %3624, ptr noundef nonnull align 1 dereferenceable(23) @.str.19, i64 23, i1 false)
  %3627 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %329, i64 0, i32 1
  store i64 %3626, ptr %3627, align 8, !tbaa !10
  %3628 = load ptr, ptr %329, align 8, !tbaa !23
  %3629 = getelementptr inbounds i8, ptr %3628, i64 %3626
  store i8 0, ptr %3629, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %315) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %3622, ptr noundef nonnull %329, i32 noundef 1)
          to label %3630 unwind label %3817

3630:                                             ; preds = %3625
  %3631 = getelementptr inbounds %struct.TestCase, ptr %322, i64 7
  %3632 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %330, i64 0, i32 2
  store ptr %3632, ptr %330, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %3632, ptr noundef nonnull align 1 dereferenceable(14) @.str.20, i64 14, i1 false)
  %3633 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %330, i64 0, i32 1
  store i64 14, ptr %3633, align 8, !tbaa !10
  %3634 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %330, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %3634, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %3631, ptr noundef nonnull %330, i32 noundef 1)
          to label %3635 unwind label %3819

3635:                                             ; preds = %3630
  %3636 = getelementptr inbounds %struct.TestCase, ptr %322, i64 8
  %3637 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %331, i64 0, i32 2
  store ptr %3637, ptr %331, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %314) #21
  store i64 20, ptr %314, align 8, !tbaa !74
  %3638 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %331, ptr noundef nonnull align 8 dereferenceable(8) %314, i64 noundef 0)
          to label %3639 unwind label %3821

3639:                                             ; preds = %3635
  store ptr %3638, ptr %331, align 8, !tbaa !23
  %3640 = load i64, ptr %314, align 8, !tbaa !74
  store i64 %3640, ptr %3637, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %3638, ptr noundef nonnull align 1 dereferenceable(20) @.str.21, i64 20, i1 false)
  %3641 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %331, i64 0, i32 1
  store i64 %3640, ptr %3641, align 8, !tbaa !10
  %3642 = load ptr, ptr %331, align 8, !tbaa !23
  %3643 = getelementptr inbounds i8, ptr %3642, i64 %3640
  store i8 0, ptr %3643, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %314) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %3636, ptr noundef nonnull %331, i32 noundef 1)
          to label %3644 unwind label %3823

3644:                                             ; preds = %3639
  %3645 = getelementptr inbounds %struct.TestCase, ptr %322, i64 9
  %3646 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %332, i64 0, i32 2
  store ptr %3646, ptr %332, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %313) #21
  store i64 21, ptr %313, align 8, !tbaa !74
  %3647 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %332, ptr noundef nonnull align 8 dereferenceable(8) %313, i64 noundef 0)
          to label %3648 unwind label %3825

3648:                                             ; preds = %3644
  store ptr %3647, ptr %332, align 8, !tbaa !23
  %3649 = load i64, ptr %313, align 8, !tbaa !74
  store i64 %3649, ptr %3646, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %3647, ptr noundef nonnull align 1 dereferenceable(21) @.str.22, i64 21, i1 false)
  %3650 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %332, i64 0, i32 1
  store i64 %3649, ptr %3650, align 8, !tbaa !10
  %3651 = load ptr, ptr %332, align 8, !tbaa !23
  %3652 = getelementptr inbounds i8, ptr %3651, i64 %3649
  store i8 0, ptr %3652, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %313) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %3645, ptr noundef nonnull %332, i32 noundef 1)
          to label %3653 unwind label %3827

3653:                                             ; preds = %3648
  %3654 = getelementptr inbounds %struct.TestCase, ptr %322, i64 10
  %3655 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %333, i64 0, i32 2
  store ptr %3655, ptr %333, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %312) #21
  store i64 20, ptr %312, align 8, !tbaa !74
  %3656 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %333, ptr noundef nonnull align 8 dereferenceable(8) %312, i64 noundef 0)
          to label %3657 unwind label %3829

3657:                                             ; preds = %3653
  store ptr %3656, ptr %333, align 8, !tbaa !23
  %3658 = load i64, ptr %312, align 8, !tbaa !74
  store i64 %3658, ptr %3655, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %3656, ptr noundef nonnull align 1 dereferenceable(20) @.str.23, i64 20, i1 false)
  %3659 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %333, i64 0, i32 1
  store i64 %3658, ptr %3659, align 8, !tbaa !10
  %3660 = load ptr, ptr %333, align 8, !tbaa !23
  %3661 = getelementptr inbounds i8, ptr %3660, i64 %3658
  store i8 0, ptr %3661, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %312) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %3654, ptr noundef nonnull %333, i32 noundef 1)
          to label %3662 unwind label %3831

3662:                                             ; preds = %3657
  %3663 = getelementptr inbounds %struct.TestCase, ptr %322, i64 11
  %3664 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %334, i64 0, i32 2
  store ptr %3664, ptr %334, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %311) #21
  store i64 19, ptr %311, align 8, !tbaa !74
  %3665 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %334, ptr noundef nonnull align 8 dereferenceable(8) %311, i64 noundef 0)
          to label %3666 unwind label %3833

3666:                                             ; preds = %3662
  store ptr %3665, ptr %334, align 8, !tbaa !23
  %3667 = load i64, ptr %311, align 8, !tbaa !74
  store i64 %3667, ptr %3664, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %3665, ptr noundef nonnull align 1 dereferenceable(19) @.str.24, i64 19, i1 false)
  %3668 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %334, i64 0, i32 1
  store i64 %3667, ptr %3668, align 8, !tbaa !10
  %3669 = load ptr, ptr %334, align 8, !tbaa !23
  %3670 = getelementptr inbounds i8, ptr %3669, i64 %3667
  store i8 0, ptr %3670, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %311) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %3663, ptr noundef nonnull %334, i32 noundef 1)
          to label %3671 unwind label %3835

3671:                                             ; preds = %3666
  %3672 = getelementptr inbounds %struct.TestCase, ptr %322, i64 12
  %3673 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %335, i64 0, i32 2
  store ptr %3673, ptr %335, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(15) %3673, ptr noundef nonnull align 1 dereferenceable(15) @.str.25, i64 15, i1 false)
  %3674 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %335, i64 0, i32 1
  store i64 15, ptr %3674, align 8, !tbaa !10
  %3675 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %335, i64 0, i32 2, i32 1, i64 7
  store i8 0, ptr %3675, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %3672, ptr noundef nonnull %335, i32 noundef 1)
          to label %3676 unwind label %3837

3676:                                             ; preds = %3671
  %3677 = getelementptr inbounds %struct.TestCase, ptr %322, i64 13
  %3678 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %336, i64 0, i32 2
  store ptr %3678, ptr %336, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %3678, ptr noundef nonnull align 1 dereferenceable(14) @.str.26, i64 14, i1 false)
  %3679 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %336, i64 0, i32 1
  store i64 14, ptr %3679, align 8, !tbaa !10
  %3680 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %336, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %3680, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %3677, ptr noundef nonnull %336, i32 noundef 1)
          to label %3681 unwind label %3839

3681:                                             ; preds = %3676
  %3682 = getelementptr inbounds %struct.TestCase, ptr %322, i64 14
  %3683 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %337, i64 0, i32 2
  store ptr %3683, ptr %337, align 8, !tbaa !5
  store i8 125, ptr %3683, align 8, !tbaa !13
  %3684 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %337, i64 0, i32 1
  store i64 1, ptr %3684, align 8, !tbaa !10
  %3685 = getelementptr inbounds i8, ptr %337, i64 17
  store i8 0, ptr %3685, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %3682, ptr noundef nonnull %337, i32 noundef 1)
          to label %3686 unwind label %3841

3686:                                             ; preds = %3681
  %3687 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 2, ptr nonnull %322, i64 15)
          to label %3688 unwind label %3843

3688:                                             ; preds = %3686
  %3689 = getelementptr inbounds %struct.TestCase, ptr %322, i64 15
  br label %3690

3690:                                             ; preds = %3731, %3688
  %3691 = phi ptr [ %3689, %3688 ], [ %3692, %3731 ]
  %3692 = getelementptr inbounds %struct.TestCase, ptr %3691, i64 -1
  %3693 = getelementptr %struct.TestCase, ptr %3691, i64 -1, i32 3, i32 0, i32 1
  %3694 = load ptr, ptr %3693, align 8, !tbaa !88
  %3695 = icmp eq ptr %3694, null
  br i1 %3695, label %3720, label %3696

3696:                                             ; preds = %3690
  %3697 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3694, i64 0, i32 1
  %3698 = load atomic i64, ptr %3697 acquire, align 8
  %3699 = icmp eq i64 %3698, 4294967297
  %3700 = trunc i64 %3698 to i32
  br i1 %3699, label %3701, label %3709

3701:                                             ; preds = %3696
  store i32 0, ptr %3697, align 8, !tbaa !90
  %3702 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3694, i64 0, i32 2
  store i32 0, ptr %3702, align 4, !tbaa !92
  %3703 = load ptr, ptr %3694, align 8, !tbaa !58
  %3704 = getelementptr inbounds ptr, ptr %3703, i64 2
  %3705 = load ptr, ptr %3704, align 8
  call void %3705(ptr noundef nonnull align 8 dereferenceable(16) %3694) #21
  %3706 = load ptr, ptr %3694, align 8, !tbaa !58
  %3707 = getelementptr inbounds ptr, ptr %3706, i64 3
  %3708 = load ptr, ptr %3707, align 8
  call void %3708(ptr noundef nonnull align 8 dereferenceable(16) %3694) #21
  br label %3720

3709:                                             ; preds = %3696
  %3710 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %3711 = icmp eq i8 %3710, 0
  br i1 %3711, label %3714, label %3712

3712:                                             ; preds = %3709
  %3713 = add nsw i32 %3700, -1
  store i32 %3713, ptr %3697, align 8, !tbaa !73
  br label %3716

3714:                                             ; preds = %3709
  %3715 = atomicrmw volatile add ptr %3697, i32 -1 acq_rel, align 4
  br label %3716

3716:                                             ; preds = %3714, %3712
  %3717 = phi i32 [ %3700, %3712 ], [ %3715, %3714 ]
  %3718 = icmp eq i32 %3717, 1
  br i1 %3718, label %3719, label %3720, !prof !42

3719:                                             ; preds = %3716
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %3694) #21
  br label %3720

3720:                                             ; preds = %3719, %3716, %3701, %3690
  %3721 = getelementptr %struct.TestCase, ptr %3691, i64 -1, i32 2
  %3722 = load ptr, ptr %3721, align 8, !tbaa !23
  %3723 = getelementptr %struct.TestCase, ptr %3691, i64 -1, i32 2, i32 2
  %3724 = icmp eq ptr %3722, %3723
  br i1 %3724, label %3726, label %3725

3725:                                             ; preds = %3720
  call void @_ZdlPv(ptr noundef %3722) #22
  br label %3726

3726:                                             ; preds = %3725, %3720
  %3727 = load ptr, ptr %3692, align 8, !tbaa !23
  %3728 = getelementptr %struct.TestCase, ptr %3691, i64 -1, i32 0, i32 2
  %3729 = icmp eq ptr %3727, %3728
  br i1 %3729, label %3731, label %3730

3730:                                             ; preds = %3726
  call void @_ZdlPv(ptr noundef %3727) #22
  br label %3731

3731:                                             ; preds = %3730, %3726
  %3732 = icmp eq ptr %3692, %322
  br i1 %3732, label %3733, label %3690

3733:                                             ; preds = %3731
  %3734 = load ptr, ptr %337, align 8, !tbaa !23
  %3735 = icmp eq ptr %3734, %3683
  br i1 %3735, label %3737, label %3736

3736:                                             ; preds = %3733
  call void @_ZdlPv(ptr noundef %3734) #22
  br label %3737

3737:                                             ; preds = %3736, %3733
  %3738 = load ptr, ptr %336, align 8, !tbaa !23
  %3739 = icmp eq ptr %3738, %3678
  br i1 %3739, label %3741, label %3740

3740:                                             ; preds = %3737
  call void @_ZdlPv(ptr noundef %3738) #22
  br label %3741

3741:                                             ; preds = %3740, %3737
  %3742 = load ptr, ptr %335, align 8, !tbaa !23
  %3743 = icmp eq ptr %3742, %3673
  br i1 %3743, label %3745, label %3744

3744:                                             ; preds = %3741
  call void @_ZdlPv(ptr noundef %3742) #22
  br label %3745

3745:                                             ; preds = %3744, %3741
  %3746 = load ptr, ptr %334, align 8, !tbaa !23
  %3747 = icmp eq ptr %3746, %3664
  br i1 %3747, label %3749, label %3748

3748:                                             ; preds = %3745
  call void @_ZdlPv(ptr noundef %3746) #22
  br label %3749

3749:                                             ; preds = %3748, %3745
  %3750 = load ptr, ptr %333, align 8, !tbaa !23
  %3751 = icmp eq ptr %3750, %3655
  br i1 %3751, label %3753, label %3752

3752:                                             ; preds = %3749
  call void @_ZdlPv(ptr noundef %3750) #22
  br label %3753

3753:                                             ; preds = %3752, %3749
  %3754 = load ptr, ptr %332, align 8, !tbaa !23
  %3755 = icmp eq ptr %3754, %3646
  br i1 %3755, label %3757, label %3756

3756:                                             ; preds = %3753
  call void @_ZdlPv(ptr noundef %3754) #22
  br label %3757

3757:                                             ; preds = %3756, %3753
  %3758 = load ptr, ptr %331, align 8, !tbaa !23
  %3759 = icmp eq ptr %3758, %3637
  br i1 %3759, label %3761, label %3760

3760:                                             ; preds = %3757
  call void @_ZdlPv(ptr noundef %3758) #22
  br label %3761

3761:                                             ; preds = %3760, %3757
  %3762 = load ptr, ptr %330, align 8, !tbaa !23
  %3763 = icmp eq ptr %3762, %3632
  br i1 %3763, label %3765, label %3764

3764:                                             ; preds = %3761
  call void @_ZdlPv(ptr noundef %3762) #22
  br label %3765

3765:                                             ; preds = %3764, %3761
  %3766 = load ptr, ptr %329, align 8, !tbaa !23
  %3767 = icmp eq ptr %3766, %3623
  br i1 %3767, label %3769, label %3768

3768:                                             ; preds = %3765
  call void @_ZdlPv(ptr noundef %3766) #22
  br label %3769

3769:                                             ; preds = %3768, %3765
  %3770 = load ptr, ptr %328, align 8, !tbaa !23
  %3771 = icmp eq ptr %3770, %3614
  br i1 %3771, label %3773, label %3772

3772:                                             ; preds = %3769
  call void @_ZdlPv(ptr noundef %3770) #22
  br label %3773

3773:                                             ; preds = %3772, %3769
  %3774 = load ptr, ptr %327, align 8, !tbaa !23
  %3775 = icmp eq ptr %3774, %3605
  br i1 %3775, label %3777, label %3776

3776:                                             ; preds = %3773
  call void @_ZdlPv(ptr noundef %3774) #22
  br label %3777

3777:                                             ; preds = %3776, %3773
  %3778 = load ptr, ptr %326, align 8, !tbaa !23
  %3779 = icmp eq ptr %3778, %3596
  br i1 %3779, label %3781, label %3780

3780:                                             ; preds = %3777
  call void @_ZdlPv(ptr noundef %3778) #22
  br label %3781

3781:                                             ; preds = %3780, %3777
  %3782 = load ptr, ptr %325, align 8, !tbaa !23
  %3783 = icmp eq ptr %3782, %3587
  br i1 %3783, label %3785, label %3784

3784:                                             ; preds = %3781
  call void @_ZdlPv(ptr noundef %3782) #22
  br label %3785

3785:                                             ; preds = %3784, %3781
  %3786 = load ptr, ptr %324, align 8, !tbaa !23
  %3787 = icmp eq ptr %3786, %3578
  br i1 %3787, label %3789, label %3788

3788:                                             ; preds = %3785
  call void @_ZdlPv(ptr noundef %3786) #22
  br label %3789

3789:                                             ; preds = %3788, %3785
  %3790 = load ptr, ptr %323, align 8, !tbaa !23
  %3791 = icmp eq ptr %3790, %3570
  br i1 %3791, label %4580, label %3792

3792:                                             ; preds = %3789
  call void @_ZdlPv(ptr noundef %3790) #22
  br label %4580

3793:                                             ; preds = %3569
  %3794 = landingpad { ptr, i32 }
          cleanup
  br label %4526

3795:                                             ; preds = %3576
  %3796 = landingpad { ptr, i32 }
          cleanup
  br label %4526

3797:                                             ; preds = %3580
  %3798 = landingpad { ptr, i32 }
          cleanup
  br label %4519

3799:                                             ; preds = %3585
  %3800 = landingpad { ptr, i32 }
          cleanup
  br label %4519

3801:                                             ; preds = %3589
  %3802 = landingpad { ptr, i32 }
          cleanup
  br label %4512

3803:                                             ; preds = %3594
  %3804 = landingpad { ptr, i32 }
          cleanup
  br label %4512

3805:                                             ; preds = %3598
  %3806 = landingpad { ptr, i32 }
          cleanup
  br label %4505

3807:                                             ; preds = %3603
  %3808 = landingpad { ptr, i32 }
          cleanup
  br label %4505

3809:                                             ; preds = %3607
  %3810 = landingpad { ptr, i32 }
          cleanup
  br label %4498

3811:                                             ; preds = %3612
  %3812 = landingpad { ptr, i32 }
          cleanup
  br label %4498

3813:                                             ; preds = %3616
  %3814 = landingpad { ptr, i32 }
          cleanup
  br label %4491

3815:                                             ; preds = %3621
  %3816 = landingpad { ptr, i32 }
          cleanup
  br label %4491

3817:                                             ; preds = %3625
  %3818 = landingpad { ptr, i32 }
          cleanup
  br label %4484

3819:                                             ; preds = %3630
  %3820 = landingpad { ptr, i32 }
          cleanup
  br label %4477

3821:                                             ; preds = %3635
  %3822 = landingpad { ptr, i32 }
          cleanup
  br label %4477

3823:                                             ; preds = %3639
  %3824 = landingpad { ptr, i32 }
          cleanup
  br label %4470

3825:                                             ; preds = %3644
  %3826 = landingpad { ptr, i32 }
          cleanup
  br label %4470

3827:                                             ; preds = %3648
  %3828 = landingpad { ptr, i32 }
          cleanup
  br label %4463

3829:                                             ; preds = %3653
  %3830 = landingpad { ptr, i32 }
          cleanup
  br label %4463

3831:                                             ; preds = %3657
  %3832 = landingpad { ptr, i32 }
          cleanup
  br label %4456

3833:                                             ; preds = %3662
  %3834 = landingpad { ptr, i32 }
          cleanup
  br label %4456

3835:                                             ; preds = %3666
  %3836 = landingpad { ptr, i32 }
          cleanup
  br label %4449

3837:                                             ; preds = %3671
  %3838 = landingpad { ptr, i32 }
          cleanup
  br label %4442

3839:                                             ; preds = %3676
  %3840 = landingpad { ptr, i32 }
          cleanup
  br label %4435

3841:                                             ; preds = %3681
  %3842 = landingpad { ptr, i32 }
          cleanup
  br label %4429

3843:                                             ; preds = %3686
  %3844 = landingpad { ptr, i32 }
          cleanup
  %3845 = getelementptr inbounds %struct.TestCase, ptr %322, i64 14, i32 3, i32 0, i32 1
  %3846 = load ptr, ptr %3845, align 8, !tbaa !88
  %3847 = icmp eq ptr %3846, null
  br i1 %3847, label %3872, label %3848

3848:                                             ; preds = %3843
  %3849 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3846, i64 0, i32 1
  %3850 = load atomic i64, ptr %3849 acquire, align 8
  %3851 = icmp eq i64 %3850, 4294967297
  %3852 = trunc i64 %3850 to i32
  br i1 %3851, label %3853, label %3861

3853:                                             ; preds = %3848
  store i32 0, ptr %3849, align 8, !tbaa !90
  %3854 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3846, i64 0, i32 2
  store i32 0, ptr %3854, align 4, !tbaa !92
  %3855 = load ptr, ptr %3846, align 8, !tbaa !58
  %3856 = getelementptr inbounds ptr, ptr %3855, i64 2
  %3857 = load ptr, ptr %3856, align 8
  call void %3857(ptr noundef nonnull align 8 dereferenceable(16) %3846) #21
  %3858 = load ptr, ptr %3846, align 8, !tbaa !58
  %3859 = getelementptr inbounds ptr, ptr %3858, i64 3
  %3860 = load ptr, ptr %3859, align 8
  call void %3860(ptr noundef nonnull align 8 dereferenceable(16) %3846) #21
  br label %3872

3861:                                             ; preds = %3848
  %3862 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %3863 = icmp eq i8 %3862, 0
  br i1 %3863, label %3866, label %3864

3864:                                             ; preds = %3861
  %3865 = add nsw i32 %3852, -1
  store i32 %3865, ptr %3849, align 8, !tbaa !73
  br label %3868

3866:                                             ; preds = %3861
  %3867 = atomicrmw volatile add ptr %3849, i32 -1 acq_rel, align 4
  br label %3868

3868:                                             ; preds = %3866, %3864
  %3869 = phi i32 [ %3852, %3864 ], [ %3867, %3866 ]
  %3870 = icmp eq i32 %3869, 1
  br i1 %3870, label %3871, label %3872, !prof !42

3871:                                             ; preds = %3868
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %3846) #21
  br label %3872

3872:                                             ; preds = %3871, %3868, %3853, %3843
  %3873 = getelementptr inbounds %struct.TestCase, ptr %322, i64 14, i32 2
  %3874 = load ptr, ptr %3873, align 8, !tbaa !23
  %3875 = getelementptr inbounds %struct.TestCase, ptr %322, i64 14, i32 2, i32 2
  %3876 = icmp eq ptr %3874, %3875
  br i1 %3876, label %3878, label %3877

3877:                                             ; preds = %3872
  call void @_ZdlPv(ptr noundef %3874) #22
  br label %3878

3878:                                             ; preds = %3877, %3872
  %3879 = load ptr, ptr %3682, align 8, !tbaa !23
  %3880 = getelementptr inbounds %struct.TestCase, ptr %322, i64 14, i32 0, i32 2
  %3881 = icmp eq ptr %3879, %3880
  br i1 %3881, label %3883, label %3882

3882:                                             ; preds = %3878
  call void @_ZdlPv(ptr noundef %3879) #22
  br label %3883

3883:                                             ; preds = %3878, %3882
  %3884 = getelementptr inbounds %struct.TestCase, ptr %322, i64 13, i32 3, i32 0, i32 1
  %3885 = load ptr, ptr %3884, align 8, !tbaa !88
  %3886 = icmp eq ptr %3885, null
  br i1 %3886, label %3911, label %3887

3887:                                             ; preds = %3883
  %3888 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3885, i64 0, i32 1
  %3889 = load atomic i64, ptr %3888 acquire, align 8
  %3890 = icmp eq i64 %3889, 4294967297
  %3891 = trunc i64 %3889 to i32
  br i1 %3890, label %3892, label %3900

3892:                                             ; preds = %3887
  store i32 0, ptr %3888, align 8, !tbaa !90
  %3893 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3885, i64 0, i32 2
  store i32 0, ptr %3893, align 4, !tbaa !92
  %3894 = load ptr, ptr %3885, align 8, !tbaa !58
  %3895 = getelementptr inbounds ptr, ptr %3894, i64 2
  %3896 = load ptr, ptr %3895, align 8
  call void %3896(ptr noundef nonnull align 8 dereferenceable(16) %3885) #21
  %3897 = load ptr, ptr %3885, align 8, !tbaa !58
  %3898 = getelementptr inbounds ptr, ptr %3897, i64 3
  %3899 = load ptr, ptr %3898, align 8
  call void %3899(ptr noundef nonnull align 8 dereferenceable(16) %3885) #21
  br label %3911

3900:                                             ; preds = %3887
  %3901 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %3902 = icmp eq i8 %3901, 0
  br i1 %3902, label %3905, label %3903

3903:                                             ; preds = %3900
  %3904 = add nsw i32 %3891, -1
  store i32 %3904, ptr %3888, align 8, !tbaa !73
  br label %3907

3905:                                             ; preds = %3900
  %3906 = atomicrmw volatile add ptr %3888, i32 -1 acq_rel, align 4
  br label %3907

3907:                                             ; preds = %3905, %3903
  %3908 = phi i32 [ %3891, %3903 ], [ %3906, %3905 ]
  %3909 = icmp eq i32 %3908, 1
  br i1 %3909, label %3910, label %3911, !prof !42

3910:                                             ; preds = %3907
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %3885) #21
  br label %3911

3911:                                             ; preds = %3910, %3907, %3892, %3883
  %3912 = getelementptr inbounds %struct.TestCase, ptr %322, i64 13, i32 2
  %3913 = load ptr, ptr %3912, align 8, !tbaa !23
  %3914 = getelementptr inbounds %struct.TestCase, ptr %322, i64 13, i32 2, i32 2
  %3915 = icmp eq ptr %3913, %3914
  br i1 %3915, label %3917, label %3916

3916:                                             ; preds = %3911
  call void @_ZdlPv(ptr noundef %3913) #22
  br label %3917

3917:                                             ; preds = %3916, %3911
  %3918 = load ptr, ptr %3677, align 8, !tbaa !23
  %3919 = getelementptr inbounds %struct.TestCase, ptr %322, i64 13, i32 0, i32 2
  %3920 = icmp eq ptr %3918, %3919
  br i1 %3920, label %3922, label %3921

3921:                                             ; preds = %3917
  call void @_ZdlPv(ptr noundef %3918) #22
  br label %3922

3922:                                             ; preds = %3917, %3921
  %3923 = getelementptr inbounds %struct.TestCase, ptr %322, i64 12, i32 3, i32 0, i32 1
  %3924 = load ptr, ptr %3923, align 8, !tbaa !88
  %3925 = icmp eq ptr %3924, null
  br i1 %3925, label %3950, label %3926

3926:                                             ; preds = %3922
  %3927 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3924, i64 0, i32 1
  %3928 = load atomic i64, ptr %3927 acquire, align 8
  %3929 = icmp eq i64 %3928, 4294967297
  %3930 = trunc i64 %3928 to i32
  br i1 %3929, label %3931, label %3939

3931:                                             ; preds = %3926
  store i32 0, ptr %3927, align 8, !tbaa !90
  %3932 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3924, i64 0, i32 2
  store i32 0, ptr %3932, align 4, !tbaa !92
  %3933 = load ptr, ptr %3924, align 8, !tbaa !58
  %3934 = getelementptr inbounds ptr, ptr %3933, i64 2
  %3935 = load ptr, ptr %3934, align 8
  call void %3935(ptr noundef nonnull align 8 dereferenceable(16) %3924) #21
  %3936 = load ptr, ptr %3924, align 8, !tbaa !58
  %3937 = getelementptr inbounds ptr, ptr %3936, i64 3
  %3938 = load ptr, ptr %3937, align 8
  call void %3938(ptr noundef nonnull align 8 dereferenceable(16) %3924) #21
  br label %3950

3939:                                             ; preds = %3926
  %3940 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %3941 = icmp eq i8 %3940, 0
  br i1 %3941, label %3944, label %3942

3942:                                             ; preds = %3939
  %3943 = add nsw i32 %3930, -1
  store i32 %3943, ptr %3927, align 8, !tbaa !73
  br label %3946

3944:                                             ; preds = %3939
  %3945 = atomicrmw volatile add ptr %3927, i32 -1 acq_rel, align 4
  br label %3946

3946:                                             ; preds = %3944, %3942
  %3947 = phi i32 [ %3930, %3942 ], [ %3945, %3944 ]
  %3948 = icmp eq i32 %3947, 1
  br i1 %3948, label %3949, label %3950, !prof !42

3949:                                             ; preds = %3946
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %3924) #21
  br label %3950

3950:                                             ; preds = %3949, %3946, %3931, %3922
  %3951 = getelementptr inbounds %struct.TestCase, ptr %322, i64 12, i32 2
  %3952 = load ptr, ptr %3951, align 8, !tbaa !23
  %3953 = getelementptr inbounds %struct.TestCase, ptr %322, i64 12, i32 2, i32 2
  %3954 = icmp eq ptr %3952, %3953
  br i1 %3954, label %3956, label %3955

3955:                                             ; preds = %3950
  call void @_ZdlPv(ptr noundef %3952) #22
  br label %3956

3956:                                             ; preds = %3955, %3950
  %3957 = load ptr, ptr %3672, align 8, !tbaa !23
  %3958 = getelementptr inbounds %struct.TestCase, ptr %322, i64 12, i32 0, i32 2
  %3959 = icmp eq ptr %3957, %3958
  br i1 %3959, label %3961, label %3960

3960:                                             ; preds = %3956
  call void @_ZdlPv(ptr noundef %3957) #22
  br label %3961

3961:                                             ; preds = %3956, %3960
  %3962 = getelementptr inbounds %struct.TestCase, ptr %322, i64 11, i32 3, i32 0, i32 1
  %3963 = load ptr, ptr %3962, align 8, !tbaa !88
  %3964 = icmp eq ptr %3963, null
  br i1 %3964, label %3989, label %3965

3965:                                             ; preds = %3961
  %3966 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3963, i64 0, i32 1
  %3967 = load atomic i64, ptr %3966 acquire, align 8
  %3968 = icmp eq i64 %3967, 4294967297
  %3969 = trunc i64 %3967 to i32
  br i1 %3968, label %3970, label %3978

3970:                                             ; preds = %3965
  store i32 0, ptr %3966, align 8, !tbaa !90
  %3971 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %3963, i64 0, i32 2
  store i32 0, ptr %3971, align 4, !tbaa !92
  %3972 = load ptr, ptr %3963, align 8, !tbaa !58
  %3973 = getelementptr inbounds ptr, ptr %3972, i64 2
  %3974 = load ptr, ptr %3973, align 8
  call void %3974(ptr noundef nonnull align 8 dereferenceable(16) %3963) #21
  %3975 = load ptr, ptr %3963, align 8, !tbaa !58
  %3976 = getelementptr inbounds ptr, ptr %3975, i64 3
  %3977 = load ptr, ptr %3976, align 8
  call void %3977(ptr noundef nonnull align 8 dereferenceable(16) %3963) #21
  br label %3989

3978:                                             ; preds = %3965
  %3979 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %3980 = icmp eq i8 %3979, 0
  br i1 %3980, label %3983, label %3981

3981:                                             ; preds = %3978
  %3982 = add nsw i32 %3969, -1
  store i32 %3982, ptr %3966, align 8, !tbaa !73
  br label %3985

3983:                                             ; preds = %3978
  %3984 = atomicrmw volatile add ptr %3966, i32 -1 acq_rel, align 4
  br label %3985

3985:                                             ; preds = %3983, %3981
  %3986 = phi i32 [ %3969, %3981 ], [ %3984, %3983 ]
  %3987 = icmp eq i32 %3986, 1
  br i1 %3987, label %3988, label %3989, !prof !42

3988:                                             ; preds = %3985
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %3963) #21
  br label %3989

3989:                                             ; preds = %3988, %3985, %3970, %3961
  %3990 = getelementptr inbounds %struct.TestCase, ptr %322, i64 11, i32 2
  %3991 = load ptr, ptr %3990, align 8, !tbaa !23
  %3992 = getelementptr inbounds %struct.TestCase, ptr %322, i64 11, i32 2, i32 2
  %3993 = icmp eq ptr %3991, %3992
  br i1 %3993, label %3995, label %3994

3994:                                             ; preds = %3989
  call void @_ZdlPv(ptr noundef %3991) #22
  br label %3995

3995:                                             ; preds = %3994, %3989
  %3996 = load ptr, ptr %3663, align 8, !tbaa !23
  %3997 = getelementptr inbounds %struct.TestCase, ptr %322, i64 11, i32 0, i32 2
  %3998 = icmp eq ptr %3996, %3997
  br i1 %3998, label %4000, label %3999

3999:                                             ; preds = %3995
  call void @_ZdlPv(ptr noundef %3996) #22
  br label %4000

4000:                                             ; preds = %3995, %3999
  %4001 = getelementptr inbounds %struct.TestCase, ptr %322, i64 10, i32 3, i32 0, i32 1
  %4002 = load ptr, ptr %4001, align 8, !tbaa !88
  %4003 = icmp eq ptr %4002, null
  br i1 %4003, label %4028, label %4004

4004:                                             ; preds = %4000
  %4005 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4002, i64 0, i32 1
  %4006 = load atomic i64, ptr %4005 acquire, align 8
  %4007 = icmp eq i64 %4006, 4294967297
  %4008 = trunc i64 %4006 to i32
  br i1 %4007, label %4009, label %4017

4009:                                             ; preds = %4004
  store i32 0, ptr %4005, align 8, !tbaa !90
  %4010 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4002, i64 0, i32 2
  store i32 0, ptr %4010, align 4, !tbaa !92
  %4011 = load ptr, ptr %4002, align 8, !tbaa !58
  %4012 = getelementptr inbounds ptr, ptr %4011, i64 2
  %4013 = load ptr, ptr %4012, align 8
  call void %4013(ptr noundef nonnull align 8 dereferenceable(16) %4002) #21
  %4014 = load ptr, ptr %4002, align 8, !tbaa !58
  %4015 = getelementptr inbounds ptr, ptr %4014, i64 3
  %4016 = load ptr, ptr %4015, align 8
  call void %4016(ptr noundef nonnull align 8 dereferenceable(16) %4002) #21
  br label %4028

4017:                                             ; preds = %4004
  %4018 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4019 = icmp eq i8 %4018, 0
  br i1 %4019, label %4022, label %4020

4020:                                             ; preds = %4017
  %4021 = add nsw i32 %4008, -1
  store i32 %4021, ptr %4005, align 8, !tbaa !73
  br label %4024

4022:                                             ; preds = %4017
  %4023 = atomicrmw volatile add ptr %4005, i32 -1 acq_rel, align 4
  br label %4024

4024:                                             ; preds = %4022, %4020
  %4025 = phi i32 [ %4008, %4020 ], [ %4023, %4022 ]
  %4026 = icmp eq i32 %4025, 1
  br i1 %4026, label %4027, label %4028, !prof !42

4027:                                             ; preds = %4024
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4002) #21
  br label %4028

4028:                                             ; preds = %4027, %4024, %4009, %4000
  %4029 = getelementptr inbounds %struct.TestCase, ptr %322, i64 10, i32 2
  %4030 = load ptr, ptr %4029, align 8, !tbaa !23
  %4031 = getelementptr inbounds %struct.TestCase, ptr %322, i64 10, i32 2, i32 2
  %4032 = icmp eq ptr %4030, %4031
  br i1 %4032, label %4034, label %4033

4033:                                             ; preds = %4028
  call void @_ZdlPv(ptr noundef %4030) #22
  br label %4034

4034:                                             ; preds = %4033, %4028
  %4035 = load ptr, ptr %3654, align 8, !tbaa !23
  %4036 = getelementptr inbounds %struct.TestCase, ptr %322, i64 10, i32 0, i32 2
  %4037 = icmp eq ptr %4035, %4036
  br i1 %4037, label %4039, label %4038

4038:                                             ; preds = %4034
  call void @_ZdlPv(ptr noundef %4035) #22
  br label %4039

4039:                                             ; preds = %4034, %4038
  %4040 = getelementptr inbounds %struct.TestCase, ptr %322, i64 9, i32 3, i32 0, i32 1
  %4041 = load ptr, ptr %4040, align 8, !tbaa !88
  %4042 = icmp eq ptr %4041, null
  br i1 %4042, label %4067, label %4043

4043:                                             ; preds = %4039
  %4044 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4041, i64 0, i32 1
  %4045 = load atomic i64, ptr %4044 acquire, align 8
  %4046 = icmp eq i64 %4045, 4294967297
  %4047 = trunc i64 %4045 to i32
  br i1 %4046, label %4048, label %4056

4048:                                             ; preds = %4043
  store i32 0, ptr %4044, align 8, !tbaa !90
  %4049 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4041, i64 0, i32 2
  store i32 0, ptr %4049, align 4, !tbaa !92
  %4050 = load ptr, ptr %4041, align 8, !tbaa !58
  %4051 = getelementptr inbounds ptr, ptr %4050, i64 2
  %4052 = load ptr, ptr %4051, align 8
  call void %4052(ptr noundef nonnull align 8 dereferenceable(16) %4041) #21
  %4053 = load ptr, ptr %4041, align 8, !tbaa !58
  %4054 = getelementptr inbounds ptr, ptr %4053, i64 3
  %4055 = load ptr, ptr %4054, align 8
  call void %4055(ptr noundef nonnull align 8 dereferenceable(16) %4041) #21
  br label %4067

4056:                                             ; preds = %4043
  %4057 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4058 = icmp eq i8 %4057, 0
  br i1 %4058, label %4061, label %4059

4059:                                             ; preds = %4056
  %4060 = add nsw i32 %4047, -1
  store i32 %4060, ptr %4044, align 8, !tbaa !73
  br label %4063

4061:                                             ; preds = %4056
  %4062 = atomicrmw volatile add ptr %4044, i32 -1 acq_rel, align 4
  br label %4063

4063:                                             ; preds = %4061, %4059
  %4064 = phi i32 [ %4047, %4059 ], [ %4062, %4061 ]
  %4065 = icmp eq i32 %4064, 1
  br i1 %4065, label %4066, label %4067, !prof !42

4066:                                             ; preds = %4063
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4041) #21
  br label %4067

4067:                                             ; preds = %4066, %4063, %4048, %4039
  %4068 = getelementptr inbounds %struct.TestCase, ptr %322, i64 9, i32 2
  %4069 = load ptr, ptr %4068, align 8, !tbaa !23
  %4070 = getelementptr inbounds %struct.TestCase, ptr %322, i64 9, i32 2, i32 2
  %4071 = icmp eq ptr %4069, %4070
  br i1 %4071, label %4073, label %4072

4072:                                             ; preds = %4067
  call void @_ZdlPv(ptr noundef %4069) #22
  br label %4073

4073:                                             ; preds = %4072, %4067
  %4074 = load ptr, ptr %3645, align 8, !tbaa !23
  %4075 = getelementptr inbounds %struct.TestCase, ptr %322, i64 9, i32 0, i32 2
  %4076 = icmp eq ptr %4074, %4075
  br i1 %4076, label %4078, label %4077

4077:                                             ; preds = %4073
  call void @_ZdlPv(ptr noundef %4074) #22
  br label %4078

4078:                                             ; preds = %4073, %4077
  %4079 = getelementptr inbounds %struct.TestCase, ptr %322, i64 8, i32 3, i32 0, i32 1
  %4080 = load ptr, ptr %4079, align 8, !tbaa !88
  %4081 = icmp eq ptr %4080, null
  br i1 %4081, label %4106, label %4082

4082:                                             ; preds = %4078
  %4083 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4080, i64 0, i32 1
  %4084 = load atomic i64, ptr %4083 acquire, align 8
  %4085 = icmp eq i64 %4084, 4294967297
  %4086 = trunc i64 %4084 to i32
  br i1 %4085, label %4087, label %4095

4087:                                             ; preds = %4082
  store i32 0, ptr %4083, align 8, !tbaa !90
  %4088 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4080, i64 0, i32 2
  store i32 0, ptr %4088, align 4, !tbaa !92
  %4089 = load ptr, ptr %4080, align 8, !tbaa !58
  %4090 = getelementptr inbounds ptr, ptr %4089, i64 2
  %4091 = load ptr, ptr %4090, align 8
  call void %4091(ptr noundef nonnull align 8 dereferenceable(16) %4080) #21
  %4092 = load ptr, ptr %4080, align 8, !tbaa !58
  %4093 = getelementptr inbounds ptr, ptr %4092, i64 3
  %4094 = load ptr, ptr %4093, align 8
  call void %4094(ptr noundef nonnull align 8 dereferenceable(16) %4080) #21
  br label %4106

4095:                                             ; preds = %4082
  %4096 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4097 = icmp eq i8 %4096, 0
  br i1 %4097, label %4100, label %4098

4098:                                             ; preds = %4095
  %4099 = add nsw i32 %4086, -1
  store i32 %4099, ptr %4083, align 8, !tbaa !73
  br label %4102

4100:                                             ; preds = %4095
  %4101 = atomicrmw volatile add ptr %4083, i32 -1 acq_rel, align 4
  br label %4102

4102:                                             ; preds = %4100, %4098
  %4103 = phi i32 [ %4086, %4098 ], [ %4101, %4100 ]
  %4104 = icmp eq i32 %4103, 1
  br i1 %4104, label %4105, label %4106, !prof !42

4105:                                             ; preds = %4102
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4080) #21
  br label %4106

4106:                                             ; preds = %4105, %4102, %4087, %4078
  %4107 = getelementptr inbounds %struct.TestCase, ptr %322, i64 8, i32 2
  %4108 = load ptr, ptr %4107, align 8, !tbaa !23
  %4109 = getelementptr inbounds %struct.TestCase, ptr %322, i64 8, i32 2, i32 2
  %4110 = icmp eq ptr %4108, %4109
  br i1 %4110, label %4112, label %4111

4111:                                             ; preds = %4106
  call void @_ZdlPv(ptr noundef %4108) #22
  br label %4112

4112:                                             ; preds = %4111, %4106
  %4113 = load ptr, ptr %3636, align 8, !tbaa !23
  %4114 = getelementptr inbounds %struct.TestCase, ptr %322, i64 8, i32 0, i32 2
  %4115 = icmp eq ptr %4113, %4114
  br i1 %4115, label %4117, label %4116

4116:                                             ; preds = %4112
  call void @_ZdlPv(ptr noundef %4113) #22
  br label %4117

4117:                                             ; preds = %4112, %4116
  %4118 = getelementptr inbounds %struct.TestCase, ptr %322, i64 7, i32 3, i32 0, i32 1
  %4119 = load ptr, ptr %4118, align 8, !tbaa !88
  %4120 = icmp eq ptr %4119, null
  br i1 %4120, label %4145, label %4121

4121:                                             ; preds = %4117
  %4122 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4119, i64 0, i32 1
  %4123 = load atomic i64, ptr %4122 acquire, align 8
  %4124 = icmp eq i64 %4123, 4294967297
  %4125 = trunc i64 %4123 to i32
  br i1 %4124, label %4126, label %4134

4126:                                             ; preds = %4121
  store i32 0, ptr %4122, align 8, !tbaa !90
  %4127 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4119, i64 0, i32 2
  store i32 0, ptr %4127, align 4, !tbaa !92
  %4128 = load ptr, ptr %4119, align 8, !tbaa !58
  %4129 = getelementptr inbounds ptr, ptr %4128, i64 2
  %4130 = load ptr, ptr %4129, align 8
  call void %4130(ptr noundef nonnull align 8 dereferenceable(16) %4119) #21
  %4131 = load ptr, ptr %4119, align 8, !tbaa !58
  %4132 = getelementptr inbounds ptr, ptr %4131, i64 3
  %4133 = load ptr, ptr %4132, align 8
  call void %4133(ptr noundef nonnull align 8 dereferenceable(16) %4119) #21
  br label %4145

4134:                                             ; preds = %4121
  %4135 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4136 = icmp eq i8 %4135, 0
  br i1 %4136, label %4139, label %4137

4137:                                             ; preds = %4134
  %4138 = add nsw i32 %4125, -1
  store i32 %4138, ptr %4122, align 8, !tbaa !73
  br label %4141

4139:                                             ; preds = %4134
  %4140 = atomicrmw volatile add ptr %4122, i32 -1 acq_rel, align 4
  br label %4141

4141:                                             ; preds = %4139, %4137
  %4142 = phi i32 [ %4125, %4137 ], [ %4140, %4139 ]
  %4143 = icmp eq i32 %4142, 1
  br i1 %4143, label %4144, label %4145, !prof !42

4144:                                             ; preds = %4141
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4119) #21
  br label %4145

4145:                                             ; preds = %4144, %4141, %4126, %4117
  %4146 = getelementptr inbounds %struct.TestCase, ptr %322, i64 7, i32 2
  %4147 = load ptr, ptr %4146, align 8, !tbaa !23
  %4148 = getelementptr inbounds %struct.TestCase, ptr %322, i64 7, i32 2, i32 2
  %4149 = icmp eq ptr %4147, %4148
  br i1 %4149, label %4151, label %4150

4150:                                             ; preds = %4145
  call void @_ZdlPv(ptr noundef %4147) #22
  br label %4151

4151:                                             ; preds = %4150, %4145
  %4152 = load ptr, ptr %3631, align 8, !tbaa !23
  %4153 = getelementptr inbounds %struct.TestCase, ptr %322, i64 7, i32 0, i32 2
  %4154 = icmp eq ptr %4152, %4153
  br i1 %4154, label %4156, label %4155

4155:                                             ; preds = %4151
  call void @_ZdlPv(ptr noundef %4152) #22
  br label %4156

4156:                                             ; preds = %4151, %4155
  %4157 = getelementptr inbounds %struct.TestCase, ptr %322, i64 6, i32 3, i32 0, i32 1
  %4158 = load ptr, ptr %4157, align 8, !tbaa !88
  %4159 = icmp eq ptr %4158, null
  br i1 %4159, label %4184, label %4160

4160:                                             ; preds = %4156
  %4161 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4158, i64 0, i32 1
  %4162 = load atomic i64, ptr %4161 acquire, align 8
  %4163 = icmp eq i64 %4162, 4294967297
  %4164 = trunc i64 %4162 to i32
  br i1 %4163, label %4165, label %4173

4165:                                             ; preds = %4160
  store i32 0, ptr %4161, align 8, !tbaa !90
  %4166 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4158, i64 0, i32 2
  store i32 0, ptr %4166, align 4, !tbaa !92
  %4167 = load ptr, ptr %4158, align 8, !tbaa !58
  %4168 = getelementptr inbounds ptr, ptr %4167, i64 2
  %4169 = load ptr, ptr %4168, align 8
  call void %4169(ptr noundef nonnull align 8 dereferenceable(16) %4158) #21
  %4170 = load ptr, ptr %4158, align 8, !tbaa !58
  %4171 = getelementptr inbounds ptr, ptr %4170, i64 3
  %4172 = load ptr, ptr %4171, align 8
  call void %4172(ptr noundef nonnull align 8 dereferenceable(16) %4158) #21
  br label %4184

4173:                                             ; preds = %4160
  %4174 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4175 = icmp eq i8 %4174, 0
  br i1 %4175, label %4178, label %4176

4176:                                             ; preds = %4173
  %4177 = add nsw i32 %4164, -1
  store i32 %4177, ptr %4161, align 8, !tbaa !73
  br label %4180

4178:                                             ; preds = %4173
  %4179 = atomicrmw volatile add ptr %4161, i32 -1 acq_rel, align 4
  br label %4180

4180:                                             ; preds = %4178, %4176
  %4181 = phi i32 [ %4164, %4176 ], [ %4179, %4178 ]
  %4182 = icmp eq i32 %4181, 1
  br i1 %4182, label %4183, label %4184, !prof !42

4183:                                             ; preds = %4180
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4158) #21
  br label %4184

4184:                                             ; preds = %4183, %4180, %4165, %4156
  %4185 = getelementptr inbounds %struct.TestCase, ptr %322, i64 6, i32 2
  %4186 = load ptr, ptr %4185, align 8, !tbaa !23
  %4187 = getelementptr inbounds %struct.TestCase, ptr %322, i64 6, i32 2, i32 2
  %4188 = icmp eq ptr %4186, %4187
  br i1 %4188, label %4190, label %4189

4189:                                             ; preds = %4184
  call void @_ZdlPv(ptr noundef %4186) #22
  br label %4190

4190:                                             ; preds = %4189, %4184
  %4191 = load ptr, ptr %3622, align 8, !tbaa !23
  %4192 = getelementptr inbounds %struct.TestCase, ptr %322, i64 6, i32 0, i32 2
  %4193 = icmp eq ptr %4191, %4192
  br i1 %4193, label %4195, label %4194

4194:                                             ; preds = %4190
  call void @_ZdlPv(ptr noundef %4191) #22
  br label %4195

4195:                                             ; preds = %4190, %4194
  %4196 = getelementptr inbounds %struct.TestCase, ptr %322, i64 5, i32 3, i32 0, i32 1
  %4197 = load ptr, ptr %4196, align 8, !tbaa !88
  %4198 = icmp eq ptr %4197, null
  br i1 %4198, label %4223, label %4199

4199:                                             ; preds = %4195
  %4200 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4197, i64 0, i32 1
  %4201 = load atomic i64, ptr %4200 acquire, align 8
  %4202 = icmp eq i64 %4201, 4294967297
  %4203 = trunc i64 %4201 to i32
  br i1 %4202, label %4204, label %4212

4204:                                             ; preds = %4199
  store i32 0, ptr %4200, align 8, !tbaa !90
  %4205 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4197, i64 0, i32 2
  store i32 0, ptr %4205, align 4, !tbaa !92
  %4206 = load ptr, ptr %4197, align 8, !tbaa !58
  %4207 = getelementptr inbounds ptr, ptr %4206, i64 2
  %4208 = load ptr, ptr %4207, align 8
  call void %4208(ptr noundef nonnull align 8 dereferenceable(16) %4197) #21
  %4209 = load ptr, ptr %4197, align 8, !tbaa !58
  %4210 = getelementptr inbounds ptr, ptr %4209, i64 3
  %4211 = load ptr, ptr %4210, align 8
  call void %4211(ptr noundef nonnull align 8 dereferenceable(16) %4197) #21
  br label %4223

4212:                                             ; preds = %4199
  %4213 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4214 = icmp eq i8 %4213, 0
  br i1 %4214, label %4217, label %4215

4215:                                             ; preds = %4212
  %4216 = add nsw i32 %4203, -1
  store i32 %4216, ptr %4200, align 8, !tbaa !73
  br label %4219

4217:                                             ; preds = %4212
  %4218 = atomicrmw volatile add ptr %4200, i32 -1 acq_rel, align 4
  br label %4219

4219:                                             ; preds = %4217, %4215
  %4220 = phi i32 [ %4203, %4215 ], [ %4218, %4217 ]
  %4221 = icmp eq i32 %4220, 1
  br i1 %4221, label %4222, label %4223, !prof !42

4222:                                             ; preds = %4219
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4197) #21
  br label %4223

4223:                                             ; preds = %4222, %4219, %4204, %4195
  %4224 = getelementptr inbounds %struct.TestCase, ptr %322, i64 5, i32 2
  %4225 = load ptr, ptr %4224, align 8, !tbaa !23
  %4226 = getelementptr inbounds %struct.TestCase, ptr %322, i64 5, i32 2, i32 2
  %4227 = icmp eq ptr %4225, %4226
  br i1 %4227, label %4229, label %4228

4228:                                             ; preds = %4223
  call void @_ZdlPv(ptr noundef %4225) #22
  br label %4229

4229:                                             ; preds = %4228, %4223
  %4230 = load ptr, ptr %3613, align 8, !tbaa !23
  %4231 = getelementptr inbounds %struct.TestCase, ptr %322, i64 5, i32 0, i32 2
  %4232 = icmp eq ptr %4230, %4231
  br i1 %4232, label %4234, label %4233

4233:                                             ; preds = %4229
  call void @_ZdlPv(ptr noundef %4230) #22
  br label %4234

4234:                                             ; preds = %4229, %4233
  %4235 = getelementptr inbounds %struct.TestCase, ptr %322, i64 4, i32 3, i32 0, i32 1
  %4236 = load ptr, ptr %4235, align 8, !tbaa !88
  %4237 = icmp eq ptr %4236, null
  br i1 %4237, label %4262, label %4238

4238:                                             ; preds = %4234
  %4239 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4236, i64 0, i32 1
  %4240 = load atomic i64, ptr %4239 acquire, align 8
  %4241 = icmp eq i64 %4240, 4294967297
  %4242 = trunc i64 %4240 to i32
  br i1 %4241, label %4243, label %4251

4243:                                             ; preds = %4238
  store i32 0, ptr %4239, align 8, !tbaa !90
  %4244 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4236, i64 0, i32 2
  store i32 0, ptr %4244, align 4, !tbaa !92
  %4245 = load ptr, ptr %4236, align 8, !tbaa !58
  %4246 = getelementptr inbounds ptr, ptr %4245, i64 2
  %4247 = load ptr, ptr %4246, align 8
  call void %4247(ptr noundef nonnull align 8 dereferenceable(16) %4236) #21
  %4248 = load ptr, ptr %4236, align 8, !tbaa !58
  %4249 = getelementptr inbounds ptr, ptr %4248, i64 3
  %4250 = load ptr, ptr %4249, align 8
  call void %4250(ptr noundef nonnull align 8 dereferenceable(16) %4236) #21
  br label %4262

4251:                                             ; preds = %4238
  %4252 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4253 = icmp eq i8 %4252, 0
  br i1 %4253, label %4256, label %4254

4254:                                             ; preds = %4251
  %4255 = add nsw i32 %4242, -1
  store i32 %4255, ptr %4239, align 8, !tbaa !73
  br label %4258

4256:                                             ; preds = %4251
  %4257 = atomicrmw volatile add ptr %4239, i32 -1 acq_rel, align 4
  br label %4258

4258:                                             ; preds = %4256, %4254
  %4259 = phi i32 [ %4242, %4254 ], [ %4257, %4256 ]
  %4260 = icmp eq i32 %4259, 1
  br i1 %4260, label %4261, label %4262, !prof !42

4261:                                             ; preds = %4258
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4236) #21
  br label %4262

4262:                                             ; preds = %4261, %4258, %4243, %4234
  %4263 = getelementptr inbounds %struct.TestCase, ptr %322, i64 4, i32 2
  %4264 = load ptr, ptr %4263, align 8, !tbaa !23
  %4265 = getelementptr inbounds %struct.TestCase, ptr %322, i64 4, i32 2, i32 2
  %4266 = icmp eq ptr %4264, %4265
  br i1 %4266, label %4268, label %4267

4267:                                             ; preds = %4262
  call void @_ZdlPv(ptr noundef %4264) #22
  br label %4268

4268:                                             ; preds = %4267, %4262
  %4269 = load ptr, ptr %3604, align 8, !tbaa !23
  %4270 = getelementptr inbounds %struct.TestCase, ptr %322, i64 4, i32 0, i32 2
  %4271 = icmp eq ptr %4269, %4270
  br i1 %4271, label %4273, label %4272

4272:                                             ; preds = %4268
  call void @_ZdlPv(ptr noundef %4269) #22
  br label %4273

4273:                                             ; preds = %4268, %4272
  %4274 = getelementptr inbounds %struct.TestCase, ptr %322, i64 3, i32 3, i32 0, i32 1
  %4275 = load ptr, ptr %4274, align 8, !tbaa !88
  %4276 = icmp eq ptr %4275, null
  br i1 %4276, label %4301, label %4277

4277:                                             ; preds = %4273
  %4278 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4275, i64 0, i32 1
  %4279 = load atomic i64, ptr %4278 acquire, align 8
  %4280 = icmp eq i64 %4279, 4294967297
  %4281 = trunc i64 %4279 to i32
  br i1 %4280, label %4282, label %4290

4282:                                             ; preds = %4277
  store i32 0, ptr %4278, align 8, !tbaa !90
  %4283 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4275, i64 0, i32 2
  store i32 0, ptr %4283, align 4, !tbaa !92
  %4284 = load ptr, ptr %4275, align 8, !tbaa !58
  %4285 = getelementptr inbounds ptr, ptr %4284, i64 2
  %4286 = load ptr, ptr %4285, align 8
  call void %4286(ptr noundef nonnull align 8 dereferenceable(16) %4275) #21
  %4287 = load ptr, ptr %4275, align 8, !tbaa !58
  %4288 = getelementptr inbounds ptr, ptr %4287, i64 3
  %4289 = load ptr, ptr %4288, align 8
  call void %4289(ptr noundef nonnull align 8 dereferenceable(16) %4275) #21
  br label %4301

4290:                                             ; preds = %4277
  %4291 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4292 = icmp eq i8 %4291, 0
  br i1 %4292, label %4295, label %4293

4293:                                             ; preds = %4290
  %4294 = add nsw i32 %4281, -1
  store i32 %4294, ptr %4278, align 8, !tbaa !73
  br label %4297

4295:                                             ; preds = %4290
  %4296 = atomicrmw volatile add ptr %4278, i32 -1 acq_rel, align 4
  br label %4297

4297:                                             ; preds = %4295, %4293
  %4298 = phi i32 [ %4281, %4293 ], [ %4296, %4295 ]
  %4299 = icmp eq i32 %4298, 1
  br i1 %4299, label %4300, label %4301, !prof !42

4300:                                             ; preds = %4297
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4275) #21
  br label %4301

4301:                                             ; preds = %4300, %4297, %4282, %4273
  %4302 = getelementptr inbounds %struct.TestCase, ptr %322, i64 3, i32 2
  %4303 = load ptr, ptr %4302, align 8, !tbaa !23
  %4304 = getelementptr inbounds %struct.TestCase, ptr %322, i64 3, i32 2, i32 2
  %4305 = icmp eq ptr %4303, %4304
  br i1 %4305, label %4307, label %4306

4306:                                             ; preds = %4301
  call void @_ZdlPv(ptr noundef %4303) #22
  br label %4307

4307:                                             ; preds = %4306, %4301
  %4308 = load ptr, ptr %3595, align 8, !tbaa !23
  %4309 = getelementptr inbounds %struct.TestCase, ptr %322, i64 3, i32 0, i32 2
  %4310 = icmp eq ptr %4308, %4309
  br i1 %4310, label %4312, label %4311

4311:                                             ; preds = %4307
  call void @_ZdlPv(ptr noundef %4308) #22
  br label %4312

4312:                                             ; preds = %4307, %4311
  %4313 = getelementptr inbounds %struct.TestCase, ptr %322, i64 2, i32 3, i32 0, i32 1
  %4314 = load ptr, ptr %4313, align 8, !tbaa !88
  %4315 = icmp eq ptr %4314, null
  br i1 %4315, label %4340, label %4316

4316:                                             ; preds = %4312
  %4317 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4314, i64 0, i32 1
  %4318 = load atomic i64, ptr %4317 acquire, align 8
  %4319 = icmp eq i64 %4318, 4294967297
  %4320 = trunc i64 %4318 to i32
  br i1 %4319, label %4321, label %4329

4321:                                             ; preds = %4316
  store i32 0, ptr %4317, align 8, !tbaa !90
  %4322 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4314, i64 0, i32 2
  store i32 0, ptr %4322, align 4, !tbaa !92
  %4323 = load ptr, ptr %4314, align 8, !tbaa !58
  %4324 = getelementptr inbounds ptr, ptr %4323, i64 2
  %4325 = load ptr, ptr %4324, align 8
  call void %4325(ptr noundef nonnull align 8 dereferenceable(16) %4314) #21
  %4326 = load ptr, ptr %4314, align 8, !tbaa !58
  %4327 = getelementptr inbounds ptr, ptr %4326, i64 3
  %4328 = load ptr, ptr %4327, align 8
  call void %4328(ptr noundef nonnull align 8 dereferenceable(16) %4314) #21
  br label %4340

4329:                                             ; preds = %4316
  %4330 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4331 = icmp eq i8 %4330, 0
  br i1 %4331, label %4334, label %4332

4332:                                             ; preds = %4329
  %4333 = add nsw i32 %4320, -1
  store i32 %4333, ptr %4317, align 8, !tbaa !73
  br label %4336

4334:                                             ; preds = %4329
  %4335 = atomicrmw volatile add ptr %4317, i32 -1 acq_rel, align 4
  br label %4336

4336:                                             ; preds = %4334, %4332
  %4337 = phi i32 [ %4320, %4332 ], [ %4335, %4334 ]
  %4338 = icmp eq i32 %4337, 1
  br i1 %4338, label %4339, label %4340, !prof !42

4339:                                             ; preds = %4336
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4314) #21
  br label %4340

4340:                                             ; preds = %4339, %4336, %4321, %4312
  %4341 = getelementptr inbounds %struct.TestCase, ptr %322, i64 2, i32 2
  %4342 = load ptr, ptr %4341, align 8, !tbaa !23
  %4343 = getelementptr inbounds %struct.TestCase, ptr %322, i64 2, i32 2, i32 2
  %4344 = icmp eq ptr %4342, %4343
  br i1 %4344, label %4346, label %4345

4345:                                             ; preds = %4340
  call void @_ZdlPv(ptr noundef %4342) #22
  br label %4346

4346:                                             ; preds = %4345, %4340
  %4347 = load ptr, ptr %3586, align 8, !tbaa !23
  %4348 = getelementptr inbounds %struct.TestCase, ptr %322, i64 2, i32 0, i32 2
  %4349 = icmp eq ptr %4347, %4348
  br i1 %4349, label %4351, label %4350

4350:                                             ; preds = %4346
  call void @_ZdlPv(ptr noundef %4347) #22
  br label %4351

4351:                                             ; preds = %4346, %4350
  %4352 = getelementptr inbounds %struct.TestCase, ptr %322, i64 1, i32 3, i32 0, i32 1
  %4353 = load ptr, ptr %4352, align 8, !tbaa !88
  %4354 = icmp eq ptr %4353, null
  br i1 %4354, label %4379, label %4355

4355:                                             ; preds = %4351
  %4356 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4353, i64 0, i32 1
  %4357 = load atomic i64, ptr %4356 acquire, align 8
  %4358 = icmp eq i64 %4357, 4294967297
  %4359 = trunc i64 %4357 to i32
  br i1 %4358, label %4360, label %4368

4360:                                             ; preds = %4355
  store i32 0, ptr %4356, align 8, !tbaa !90
  %4361 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4353, i64 0, i32 2
  store i32 0, ptr %4361, align 4, !tbaa !92
  %4362 = load ptr, ptr %4353, align 8, !tbaa !58
  %4363 = getelementptr inbounds ptr, ptr %4362, i64 2
  %4364 = load ptr, ptr %4363, align 8
  call void %4364(ptr noundef nonnull align 8 dereferenceable(16) %4353) #21
  %4365 = load ptr, ptr %4353, align 8, !tbaa !58
  %4366 = getelementptr inbounds ptr, ptr %4365, i64 3
  %4367 = load ptr, ptr %4366, align 8
  call void %4367(ptr noundef nonnull align 8 dereferenceable(16) %4353) #21
  br label %4379

4368:                                             ; preds = %4355
  %4369 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4370 = icmp eq i8 %4369, 0
  br i1 %4370, label %4373, label %4371

4371:                                             ; preds = %4368
  %4372 = add nsw i32 %4359, -1
  store i32 %4372, ptr %4356, align 8, !tbaa !73
  br label %4375

4373:                                             ; preds = %4368
  %4374 = atomicrmw volatile add ptr %4356, i32 -1 acq_rel, align 4
  br label %4375

4375:                                             ; preds = %4373, %4371
  %4376 = phi i32 [ %4359, %4371 ], [ %4374, %4373 ]
  %4377 = icmp eq i32 %4376, 1
  br i1 %4377, label %4378, label %4379, !prof !42

4378:                                             ; preds = %4375
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4353) #21
  br label %4379

4379:                                             ; preds = %4378, %4375, %4360, %4351
  %4380 = getelementptr inbounds %struct.TestCase, ptr %322, i64 1, i32 2
  %4381 = load ptr, ptr %4380, align 8, !tbaa !23
  %4382 = getelementptr inbounds %struct.TestCase, ptr %322, i64 1, i32 2, i32 2
  %4383 = icmp eq ptr %4381, %4382
  br i1 %4383, label %4385, label %4384

4384:                                             ; preds = %4379
  call void @_ZdlPv(ptr noundef %4381) #22
  br label %4385

4385:                                             ; preds = %4384, %4379
  %4386 = load ptr, ptr %3577, align 8, !tbaa !23
  %4387 = getelementptr inbounds %struct.TestCase, ptr %322, i64 1, i32 0, i32 2
  %4388 = icmp eq ptr %4386, %4387
  br i1 %4388, label %4390, label %4389

4389:                                             ; preds = %4385
  call void @_ZdlPv(ptr noundef %4386) #22
  br label %4390

4390:                                             ; preds = %4385, %4389
  %4391 = getelementptr inbounds %struct.TestCase, ptr %322, i64 0, i32 3, i32 0, i32 1
  %4392 = load ptr, ptr %4391, align 8, !tbaa !88
  %4393 = icmp eq ptr %4392, null
  br i1 %4393, label %4418, label %4394

4394:                                             ; preds = %4390
  %4395 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4392, i64 0, i32 1
  %4396 = load atomic i64, ptr %4395 acquire, align 8
  %4397 = icmp eq i64 %4396, 4294967297
  %4398 = trunc i64 %4396 to i32
  br i1 %4397, label %4399, label %4407

4399:                                             ; preds = %4394
  store i32 0, ptr %4395, align 8, !tbaa !90
  %4400 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4392, i64 0, i32 2
  store i32 0, ptr %4400, align 4, !tbaa !92
  %4401 = load ptr, ptr %4392, align 8, !tbaa !58
  %4402 = getelementptr inbounds ptr, ptr %4401, i64 2
  %4403 = load ptr, ptr %4402, align 8
  call void %4403(ptr noundef nonnull align 8 dereferenceable(16) %4392) #21
  %4404 = load ptr, ptr %4392, align 8, !tbaa !58
  %4405 = getelementptr inbounds ptr, ptr %4404, i64 3
  %4406 = load ptr, ptr %4405, align 8
  call void %4406(ptr noundef nonnull align 8 dereferenceable(16) %4392) #21
  br label %4418

4407:                                             ; preds = %4394
  %4408 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4409 = icmp eq i8 %4408, 0
  br i1 %4409, label %4412, label %4410

4410:                                             ; preds = %4407
  %4411 = add nsw i32 %4398, -1
  store i32 %4411, ptr %4395, align 8, !tbaa !73
  br label %4414

4412:                                             ; preds = %4407
  %4413 = atomicrmw volatile add ptr %4395, i32 -1 acq_rel, align 4
  br label %4414

4414:                                             ; preds = %4412, %4410
  %4415 = phi i32 [ %4398, %4410 ], [ %4413, %4412 ]
  %4416 = icmp eq i32 %4415, 1
  br i1 %4416, label %4417, label %4418, !prof !42

4417:                                             ; preds = %4414
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4392) #21
  br label %4418

4418:                                             ; preds = %4417, %4414, %4399, %4390
  %4419 = getelementptr inbounds %struct.TestCase, ptr %322, i64 0, i32 2
  %4420 = load ptr, ptr %4419, align 8, !tbaa !23
  %4421 = getelementptr inbounds %struct.TestCase, ptr %322, i64 0, i32 2, i32 2
  %4422 = icmp eq ptr %4420, %4421
  br i1 %4422, label %4424, label %4423

4423:                                             ; preds = %4418
  call void @_ZdlPv(ptr noundef %4420) #22
  br label %4424

4424:                                             ; preds = %4423, %4418
  %4425 = load ptr, ptr %322, align 8, !tbaa !23
  %4426 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %322, i64 0, i32 2
  %4427 = icmp eq ptr %4425, %4426
  br i1 %4427, label %4429, label %4428

4428:                                             ; preds = %4424
  call void @_ZdlPv(ptr noundef %4425) #22
  br label %4429

4429:                                             ; preds = %4428, %4424, %3841
  %4430 = phi { ptr, i32 } [ %3842, %3841 ], [ %3844, %4424 ], [ %3844, %4428 ]
  %4431 = phi i1 [ true, %3841 ], [ false, %4424 ], [ false, %4428 ]
  %4432 = load ptr, ptr %337, align 8, !tbaa !23
  %4433 = icmp eq ptr %4432, %3683
  br i1 %4433, label %4435, label %4434

4434:                                             ; preds = %4429
  call void @_ZdlPv(ptr noundef %4432) #22
  br label %4435

4435:                                             ; preds = %4434, %4429, %3839
  %4436 = phi ptr [ %3677, %3839 ], [ %3682, %4434 ], [ %3682, %4429 ]
  %4437 = phi { ptr, i32 } [ %3840, %3839 ], [ %4430, %4434 ], [ %4430, %4429 ]
  %4438 = phi i1 [ true, %3839 ], [ %4431, %4434 ], [ %4431, %4429 ]
  %4439 = load ptr, ptr %336, align 8, !tbaa !23
  %4440 = icmp eq ptr %4439, %3678
  br i1 %4440, label %4442, label %4441

4441:                                             ; preds = %4435
  call void @_ZdlPv(ptr noundef %4439) #22
  br label %4442

4442:                                             ; preds = %4441, %4435, %3837
  %4443 = phi ptr [ %3672, %3837 ], [ %4436, %4441 ], [ %4436, %4435 ]
  %4444 = phi { ptr, i32 } [ %3838, %3837 ], [ %4437, %4441 ], [ %4437, %4435 ]
  %4445 = phi i1 [ true, %3837 ], [ %4438, %4441 ], [ %4438, %4435 ]
  %4446 = load ptr, ptr %335, align 8, !tbaa !23
  %4447 = icmp eq ptr %4446, %3673
  br i1 %4447, label %4449, label %4448

4448:                                             ; preds = %4442
  call void @_ZdlPv(ptr noundef %4446) #22
  br label %4449

4449:                                             ; preds = %4448, %4442, %3835
  %4450 = phi ptr [ %3663, %3835 ], [ %4443, %4448 ], [ %4443, %4442 ]
  %4451 = phi { ptr, i32 } [ %3836, %3835 ], [ %4444, %4448 ], [ %4444, %4442 ]
  %4452 = phi i1 [ true, %3835 ], [ %4445, %4448 ], [ %4445, %4442 ]
  %4453 = load ptr, ptr %334, align 8, !tbaa !23
  %4454 = icmp eq ptr %4453, %3664
  br i1 %4454, label %4456, label %4455

4455:                                             ; preds = %4449
  call void @_ZdlPv(ptr noundef %4453) #22
  br label %4456

4456:                                             ; preds = %4455, %4449, %3833, %3831
  %4457 = phi ptr [ %3654, %3831 ], [ %3663, %3833 ], [ %4450, %4449 ], [ %4450, %4455 ]
  %4458 = phi { ptr, i32 } [ %3832, %3831 ], [ %3834, %3833 ], [ %4451, %4449 ], [ %4451, %4455 ]
  %4459 = phi i1 [ true, %3831 ], [ true, %3833 ], [ %4452, %4449 ], [ %4452, %4455 ]
  %4460 = load ptr, ptr %333, align 8, !tbaa !23
  %4461 = icmp eq ptr %4460, %3655
  br i1 %4461, label %4463, label %4462

4462:                                             ; preds = %4456
  call void @_ZdlPv(ptr noundef %4460) #22
  br label %4463

4463:                                             ; preds = %4462, %4456, %3829, %3827
  %4464 = phi ptr [ %3645, %3827 ], [ %3654, %3829 ], [ %4457, %4456 ], [ %4457, %4462 ]
  %4465 = phi { ptr, i32 } [ %3828, %3827 ], [ %3830, %3829 ], [ %4458, %4456 ], [ %4458, %4462 ]
  %4466 = phi i1 [ true, %3827 ], [ true, %3829 ], [ %4459, %4456 ], [ %4459, %4462 ]
  %4467 = load ptr, ptr %332, align 8, !tbaa !23
  %4468 = icmp eq ptr %4467, %3646
  br i1 %4468, label %4470, label %4469

4469:                                             ; preds = %4463
  call void @_ZdlPv(ptr noundef %4467) #22
  br label %4470

4470:                                             ; preds = %4469, %4463, %3825, %3823
  %4471 = phi ptr [ %3636, %3823 ], [ %3645, %3825 ], [ %4464, %4463 ], [ %4464, %4469 ]
  %4472 = phi { ptr, i32 } [ %3824, %3823 ], [ %3826, %3825 ], [ %4465, %4463 ], [ %4465, %4469 ]
  %4473 = phi i1 [ true, %3823 ], [ true, %3825 ], [ %4466, %4463 ], [ %4466, %4469 ]
  %4474 = load ptr, ptr %331, align 8, !tbaa !23
  %4475 = icmp eq ptr %4474, %3637
  br i1 %4475, label %4477, label %4476

4476:                                             ; preds = %4470
  call void @_ZdlPv(ptr noundef %4474) #22
  br label %4477

4477:                                             ; preds = %4476, %4470, %3821, %3819
  %4478 = phi ptr [ %3631, %3819 ], [ %3636, %3821 ], [ %4471, %4470 ], [ %4471, %4476 ]
  %4479 = phi { ptr, i32 } [ %3820, %3819 ], [ %3822, %3821 ], [ %4472, %4470 ], [ %4472, %4476 ]
  %4480 = phi i1 [ true, %3819 ], [ true, %3821 ], [ %4473, %4470 ], [ %4473, %4476 ]
  %4481 = load ptr, ptr %330, align 8, !tbaa !23
  %4482 = icmp eq ptr %4481, %3632
  br i1 %4482, label %4484, label %4483

4483:                                             ; preds = %4477
  call void @_ZdlPv(ptr noundef %4481) #22
  br label %4484

4484:                                             ; preds = %4483, %4477, %3817
  %4485 = phi ptr [ %3622, %3817 ], [ %4478, %4483 ], [ %4478, %4477 ]
  %4486 = phi { ptr, i32 } [ %3818, %3817 ], [ %4479, %4483 ], [ %4479, %4477 ]
  %4487 = phi i1 [ true, %3817 ], [ %4480, %4483 ], [ %4480, %4477 ]
  %4488 = load ptr, ptr %329, align 8, !tbaa !23
  %4489 = icmp eq ptr %4488, %3623
  br i1 %4489, label %4491, label %4490

4490:                                             ; preds = %4484
  call void @_ZdlPv(ptr noundef %4488) #22
  br label %4491

4491:                                             ; preds = %4490, %4484, %3815, %3813
  %4492 = phi ptr [ %3613, %3813 ], [ %3622, %3815 ], [ %4485, %4484 ], [ %4485, %4490 ]
  %4493 = phi { ptr, i32 } [ %3814, %3813 ], [ %3816, %3815 ], [ %4486, %4484 ], [ %4486, %4490 ]
  %4494 = phi i1 [ true, %3813 ], [ true, %3815 ], [ %4487, %4484 ], [ %4487, %4490 ]
  %4495 = load ptr, ptr %328, align 8, !tbaa !23
  %4496 = icmp eq ptr %4495, %3614
  br i1 %4496, label %4498, label %4497

4497:                                             ; preds = %4491
  call void @_ZdlPv(ptr noundef %4495) #22
  br label %4498

4498:                                             ; preds = %4497, %4491, %3811, %3809
  %4499 = phi ptr [ %3604, %3809 ], [ %3613, %3811 ], [ %4492, %4491 ], [ %4492, %4497 ]
  %4500 = phi { ptr, i32 } [ %3810, %3809 ], [ %3812, %3811 ], [ %4493, %4491 ], [ %4493, %4497 ]
  %4501 = phi i1 [ true, %3809 ], [ true, %3811 ], [ %4494, %4491 ], [ %4494, %4497 ]
  %4502 = load ptr, ptr %327, align 8, !tbaa !23
  %4503 = icmp eq ptr %4502, %3605
  br i1 %4503, label %4505, label %4504

4504:                                             ; preds = %4498
  call void @_ZdlPv(ptr noundef %4502) #22
  br label %4505

4505:                                             ; preds = %4504, %4498, %3807, %3805
  %4506 = phi ptr [ %3595, %3805 ], [ %3604, %3807 ], [ %4499, %4498 ], [ %4499, %4504 ]
  %4507 = phi { ptr, i32 } [ %3806, %3805 ], [ %3808, %3807 ], [ %4500, %4498 ], [ %4500, %4504 ]
  %4508 = phi i1 [ true, %3805 ], [ true, %3807 ], [ %4501, %4498 ], [ %4501, %4504 ]
  %4509 = load ptr, ptr %326, align 8, !tbaa !23
  %4510 = icmp eq ptr %4509, %3596
  br i1 %4510, label %4512, label %4511

4511:                                             ; preds = %4505
  call void @_ZdlPv(ptr noundef %4509) #22
  br label %4512

4512:                                             ; preds = %4511, %4505, %3803, %3801
  %4513 = phi ptr [ %3586, %3801 ], [ %3595, %3803 ], [ %4506, %4505 ], [ %4506, %4511 ]
  %4514 = phi { ptr, i32 } [ %3802, %3801 ], [ %3804, %3803 ], [ %4507, %4505 ], [ %4507, %4511 ]
  %4515 = phi i1 [ true, %3801 ], [ true, %3803 ], [ %4508, %4505 ], [ %4508, %4511 ]
  %4516 = load ptr, ptr %325, align 8, !tbaa !23
  %4517 = icmp eq ptr %4516, %3587
  br i1 %4517, label %4519, label %4518

4518:                                             ; preds = %4512
  call void @_ZdlPv(ptr noundef %4516) #22
  br label %4519

4519:                                             ; preds = %4518, %4512, %3799, %3797
  %4520 = phi ptr [ %3577, %3797 ], [ %3586, %3799 ], [ %4513, %4512 ], [ %4513, %4518 ]
  %4521 = phi { ptr, i32 } [ %3798, %3797 ], [ %3800, %3799 ], [ %4514, %4512 ], [ %4514, %4518 ]
  %4522 = phi i1 [ true, %3797 ], [ true, %3799 ], [ %4515, %4512 ], [ %4515, %4518 ]
  %4523 = load ptr, ptr %324, align 8, !tbaa !23
  %4524 = icmp eq ptr %4523, %3578
  br i1 %4524, label %4526, label %4525

4525:                                             ; preds = %4519
  call void @_ZdlPv(ptr noundef %4523) #22
  br label %4526

4526:                                             ; preds = %4525, %4519, %3795, %3793
  %4527 = phi ptr [ %322, %3793 ], [ %3577, %3795 ], [ %4520, %4519 ], [ %4520, %4525 ]
  %4528 = phi { ptr, i32 } [ %3794, %3793 ], [ %3796, %3795 ], [ %4521, %4519 ], [ %4521, %4525 ]
  %4529 = phi i1 [ true, %3793 ], [ true, %3795 ], [ %4522, %4519 ], [ %4522, %4525 ]
  %4530 = load ptr, ptr %323, align 8, !tbaa !23
  %4531 = icmp eq ptr %4530, %3570
  br i1 %4531, label %4533, label %4532

4532:                                             ; preds = %4526
  call void @_ZdlPv(ptr noundef %4530) #22
  br label %4533

4533:                                             ; preds = %4532, %4526
  %4534 = icmp ne ptr %322, %4527
  %4535 = select i1 %4529, i1 %4534, i1 false
  br i1 %4535, label %4536, label %4579

4536:                                             ; preds = %4533, %4577
  %4537 = phi ptr [ %4538, %4577 ], [ %4527, %4533 ]
  %4538 = getelementptr inbounds %struct.TestCase, ptr %4537, i64 -1
  %4539 = getelementptr %struct.TestCase, ptr %4537, i64 -1, i32 3, i32 0, i32 1
  %4540 = load ptr, ptr %4539, align 8, !tbaa !88
  %4541 = icmp eq ptr %4540, null
  br i1 %4541, label %4566, label %4542

4542:                                             ; preds = %4536
  %4543 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4540, i64 0, i32 1
  %4544 = load atomic i64, ptr %4543 acquire, align 8
  %4545 = icmp eq i64 %4544, 4294967297
  %4546 = trunc i64 %4544 to i32
  br i1 %4545, label %4547, label %4555

4547:                                             ; preds = %4542
  store i32 0, ptr %4543, align 8, !tbaa !90
  %4548 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4540, i64 0, i32 2
  store i32 0, ptr %4548, align 4, !tbaa !92
  %4549 = load ptr, ptr %4540, align 8, !tbaa !58
  %4550 = getelementptr inbounds ptr, ptr %4549, i64 2
  %4551 = load ptr, ptr %4550, align 8
  call void %4551(ptr noundef nonnull align 8 dereferenceable(16) %4540) #21
  %4552 = load ptr, ptr %4540, align 8, !tbaa !58
  %4553 = getelementptr inbounds ptr, ptr %4552, i64 3
  %4554 = load ptr, ptr %4553, align 8
  call void %4554(ptr noundef nonnull align 8 dereferenceable(16) %4540) #21
  br label %4566

4555:                                             ; preds = %4542
  %4556 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4557 = icmp eq i8 %4556, 0
  br i1 %4557, label %4560, label %4558

4558:                                             ; preds = %4555
  %4559 = add nsw i32 %4546, -1
  store i32 %4559, ptr %4543, align 8, !tbaa !73
  br label %4562

4560:                                             ; preds = %4555
  %4561 = atomicrmw volatile add ptr %4543, i32 -1 acq_rel, align 4
  br label %4562

4562:                                             ; preds = %4560, %4558
  %4563 = phi i32 [ %4546, %4558 ], [ %4561, %4560 ]
  %4564 = icmp eq i32 %4563, 1
  br i1 %4564, label %4565, label %4566, !prof !42

4565:                                             ; preds = %4562
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4540) #21
  br label %4566

4566:                                             ; preds = %4565, %4562, %4547, %4536
  %4567 = getelementptr %struct.TestCase, ptr %4537, i64 -1, i32 2
  %4568 = load ptr, ptr %4567, align 8, !tbaa !23
  %4569 = getelementptr %struct.TestCase, ptr %4537, i64 -1, i32 2, i32 2
  %4570 = icmp eq ptr %4568, %4569
  br i1 %4570, label %4572, label %4571

4571:                                             ; preds = %4566
  call void @_ZdlPv(ptr noundef %4568) #22
  br label %4572

4572:                                             ; preds = %4571, %4566
  %4573 = load ptr, ptr %4538, align 8, !tbaa !23
  %4574 = getelementptr %struct.TestCase, ptr %4537, i64 -1, i32 0, i32 2
  %4575 = icmp eq ptr %4573, %4574
  br i1 %4575, label %4577, label %4576

4576:                                             ; preds = %4572
  call void @_ZdlPv(ptr noundef %4573) #22
  br label %4577

4577:                                             ; preds = %4572, %4576
  %4578 = icmp eq ptr %4538, %322
  br i1 %4578, label %4579, label %4536

4579:                                             ; preds = %4577, %4533
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %322) #21
  br label %762

4580:                                             ; preds = %3789, %3792
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %322) #21
  store i32 %3687, ptr @dummy145, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %323)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %324)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %325)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %326)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %327)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %328)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %329)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %330)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %331)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %332)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %333)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %334)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %335)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %336)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %337)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %310)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %309) #21
  %4581 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %310, i64 0, i32 2
  store ptr %4581, ptr %310, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %308) #21
  store i64 46, ptr %308, align 8, !tbaa !74
  %4582 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %310, ptr noundef nonnull align 8 dereferenceable(8) %308, i64 noundef 0)
  store ptr %4582, ptr %310, align 8, !tbaa !23
  %4583 = load i64, ptr %308, align 8, !tbaa !74
  store i64 %4583, ptr %4581, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(46) %4582, ptr noundef nonnull align 1 dereferenceable(46) @.str.77, i64 46, i1 false)
  %4584 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %310, i64 0, i32 1
  store i64 %4583, ptr %4584, align 8, !tbaa !10
  %4585 = getelementptr inbounds i8, ptr %4582, i64 %4583
  store i8 0, ptr %4585, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %308) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %309, ptr noundef nonnull %310, i32 noundef 0)
          to label %4586 unwind label %4631

4586:                                             ; preds = %4580
  %4587 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 4, ptr nonnull %309, i64 1)
          to label %4588 unwind label %4633

4588:                                             ; preds = %4586
  %4589 = getelementptr inbounds %struct.TestCase, ptr %309, i64 0, i32 3, i32 0, i32 1
  %4590 = load ptr, ptr %4589, align 8, !tbaa !88
  %4591 = icmp eq ptr %4590, null
  br i1 %4591, label %4616, label %4592

4592:                                             ; preds = %4588
  %4593 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4590, i64 0, i32 1
  %4594 = load atomic i64, ptr %4593 acquire, align 8
  %4595 = icmp eq i64 %4594, 4294967297
  %4596 = trunc i64 %4594 to i32
  br i1 %4595, label %4597, label %4605

4597:                                             ; preds = %4592
  store i32 0, ptr %4593, align 8, !tbaa !90
  %4598 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4590, i64 0, i32 2
  store i32 0, ptr %4598, align 4, !tbaa !92
  %4599 = load ptr, ptr %4590, align 8, !tbaa !58
  %4600 = getelementptr inbounds ptr, ptr %4599, i64 2
  %4601 = load ptr, ptr %4600, align 8
  call void %4601(ptr noundef nonnull align 8 dereferenceable(16) %4590) #21
  %4602 = load ptr, ptr %4590, align 8, !tbaa !58
  %4603 = getelementptr inbounds ptr, ptr %4602, i64 3
  %4604 = load ptr, ptr %4603, align 8
  call void %4604(ptr noundef nonnull align 8 dereferenceable(16) %4590) #21
  br label %4616

4605:                                             ; preds = %4592
  %4606 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4607 = icmp eq i8 %4606, 0
  br i1 %4607, label %4610, label %4608

4608:                                             ; preds = %4605
  %4609 = add nsw i32 %4596, -1
  store i32 %4609, ptr %4593, align 8, !tbaa !73
  br label %4612

4610:                                             ; preds = %4605
  %4611 = atomicrmw volatile add ptr %4593, i32 -1 acq_rel, align 4
  br label %4612

4612:                                             ; preds = %4610, %4608
  %4613 = phi i32 [ %4596, %4608 ], [ %4611, %4610 ]
  %4614 = icmp eq i32 %4613, 1
  br i1 %4614, label %4615, label %4616, !prof !42

4615:                                             ; preds = %4612
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4590) #21
  br label %4616

4616:                                             ; preds = %4615, %4612, %4597, %4588
  %4617 = getelementptr inbounds %struct.TestCase, ptr %309, i64 0, i32 2
  %4618 = load ptr, ptr %4617, align 8, !tbaa !23
  %4619 = getelementptr inbounds %struct.TestCase, ptr %309, i64 0, i32 2, i32 2
  %4620 = icmp eq ptr %4618, %4619
  br i1 %4620, label %4622, label %4621

4621:                                             ; preds = %4616
  call void @_ZdlPv(ptr noundef %4618) #22
  br label %4622

4622:                                             ; preds = %4621, %4616
  %4623 = load ptr, ptr %309, align 8, !tbaa !23
  %4624 = getelementptr inbounds %struct.TestCase, ptr %309, i64 0, i32 0, i32 2
  %4625 = icmp eq ptr %4623, %4624
  br i1 %4625, label %4627, label %4626

4626:                                             ; preds = %4622
  call void @_ZdlPv(ptr noundef %4623) #22
  br label %4627

4627:                                             ; preds = %4626, %4622
  %4628 = load ptr, ptr %310, align 8, !tbaa !23
  %4629 = icmp eq ptr %4628, %4581
  br i1 %4629, label %4679, label %4630

4630:                                             ; preds = %4627
  call void @_ZdlPv(ptr noundef %4628) #22
  br label %4679

4631:                                             ; preds = %4580
  %4632 = landingpad { ptr, i32 }
          cleanup
  br label %4673

4633:                                             ; preds = %4586
  %4634 = landingpad { ptr, i32 }
          cleanup
  %4635 = getelementptr inbounds %struct.TestCase, ptr %309, i64 0, i32 3, i32 0, i32 1
  %4636 = load ptr, ptr %4635, align 8, !tbaa !88
  %4637 = icmp eq ptr %4636, null
  br i1 %4637, label %4662, label %4638

4638:                                             ; preds = %4633
  %4639 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4636, i64 0, i32 1
  %4640 = load atomic i64, ptr %4639 acquire, align 8
  %4641 = icmp eq i64 %4640, 4294967297
  %4642 = trunc i64 %4640 to i32
  br i1 %4641, label %4643, label %4651

4643:                                             ; preds = %4638
  store i32 0, ptr %4639, align 8, !tbaa !90
  %4644 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4636, i64 0, i32 2
  store i32 0, ptr %4644, align 4, !tbaa !92
  %4645 = load ptr, ptr %4636, align 8, !tbaa !58
  %4646 = getelementptr inbounds ptr, ptr %4645, i64 2
  %4647 = load ptr, ptr %4646, align 8
  call void %4647(ptr noundef nonnull align 8 dereferenceable(16) %4636) #21
  %4648 = load ptr, ptr %4636, align 8, !tbaa !58
  %4649 = getelementptr inbounds ptr, ptr %4648, i64 3
  %4650 = load ptr, ptr %4649, align 8
  call void %4650(ptr noundef nonnull align 8 dereferenceable(16) %4636) #21
  br label %4662

4651:                                             ; preds = %4638
  %4652 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4653 = icmp eq i8 %4652, 0
  br i1 %4653, label %4656, label %4654

4654:                                             ; preds = %4651
  %4655 = add nsw i32 %4642, -1
  store i32 %4655, ptr %4639, align 8, !tbaa !73
  br label %4658

4656:                                             ; preds = %4651
  %4657 = atomicrmw volatile add ptr %4639, i32 -1 acq_rel, align 4
  br label %4658

4658:                                             ; preds = %4656, %4654
  %4659 = phi i32 [ %4642, %4654 ], [ %4657, %4656 ]
  %4660 = icmp eq i32 %4659, 1
  br i1 %4660, label %4661, label %4662, !prof !42

4661:                                             ; preds = %4658
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4636) #21
  br label %4662

4662:                                             ; preds = %4661, %4658, %4643, %4633
  %4663 = getelementptr inbounds %struct.TestCase, ptr %309, i64 0, i32 2
  %4664 = load ptr, ptr %4663, align 8, !tbaa !23
  %4665 = getelementptr inbounds %struct.TestCase, ptr %309, i64 0, i32 2, i32 2
  %4666 = icmp eq ptr %4664, %4665
  br i1 %4666, label %4668, label %4667

4667:                                             ; preds = %4662
  call void @_ZdlPv(ptr noundef %4664) #22
  br label %4668

4668:                                             ; preds = %4667, %4662
  %4669 = load ptr, ptr %309, align 8, !tbaa !23
  %4670 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %309, i64 0, i32 2
  %4671 = icmp eq ptr %4669, %4670
  br i1 %4671, label %4673, label %4672

4672:                                             ; preds = %4668
  call void @_ZdlPv(ptr noundef %4669) #22
  br label %4673

4673:                                             ; preds = %4672, %4668, %4631
  %4674 = phi { ptr, i32 } [ %4632, %4631 ], [ %4634, %4668 ], [ %4634, %4672 ]
  %4675 = load ptr, ptr %310, align 8, !tbaa !23
  %4676 = icmp eq ptr %4675, %4581
  br i1 %4676, label %4678, label %4677

4677:                                             ; preds = %4673
  call void @_ZdlPv(ptr noundef %4675) #22
  br label %4678

4678:                                             ; preds = %4677, %4673
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %309) #21
  br label %762

4679:                                             ; preds = %4627, %4630
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %309) #21
  store i32 %4587, ptr @dummy146, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %310)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %307) #21
  %4680 = getelementptr inbounds i8, ptr %307, i64 8
  store i64 0, ptr %4680, align 8
  %4681 = getelementptr inbounds %"class.std::function", ptr %307, i64 0, i32 1
  %4682 = getelementptr inbounds %"class.std::_Function_base", ptr %307, i64 0, i32 1
  store ptr @_Z9CheckRateRK7Results, ptr %307, align 8, !tbaa !47
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E9_M_invokeERKSt9_Any_dataS2_, ptr %4681, align 8, !tbaa !115
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, ptr %4682, align 8, !tbaa !118
  %4683 = invoke noundef i64 @_Z10AddCheckerPKcRKSt8functionIFvRK7ResultsEE(ptr noundef nonnull @.str.69, ptr noundef nonnull align 8 dereferenceable(32) %307)
          to label %4684 unwind label %4692

4684:                                             ; preds = %4679
  %4685 = load ptr, ptr %4682, align 8, !tbaa !118
  %4686 = icmp eq ptr %4685, null
  br i1 %4686, label %4702, label %4687

4687:                                             ; preds = %4684
  %4688 = invoke noundef zeroext i1 %4685(ptr noundef nonnull align 8 dereferenceable(16) %307, ptr noundef nonnull align 8 dereferenceable(16) %307, i32 noundef 3)
          to label %4702 unwind label %4689

4689:                                             ; preds = %4687
  %4690 = landingpad { ptr, i32 }
          catch ptr null
  %4691 = extractvalue { ptr, i32 } %4690, 0
  call void @__clang_call_terminate(ptr %4691) #24
  unreachable

4692:                                             ; preds = %4679
  %4693 = landingpad { ptr, i32 }
          cleanup
  %4694 = load ptr, ptr %4682, align 8, !tbaa !118
  %4695 = icmp eq ptr %4694, null
  br i1 %4695, label %4701, label %4696

4696:                                             ; preds = %4692
  %4697 = invoke noundef zeroext i1 %4694(ptr noundef nonnull align 8 dereferenceable(16) %307, ptr noundef nonnull align 8 dereferenceable(16) %307, i32 noundef 3)
          to label %4701 unwind label %4698

4698:                                             ; preds = %4696
  %4699 = landingpad { ptr, i32 }
          catch ptr null
  %4700 = extractvalue { ptr, i32 } %4699, 0
  call void @__clang_call_terminate(ptr %4700) #24
  unreachable

4701:                                             ; preds = %4696, %4692
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %307) #21
  br label %762

4702:                                             ; preds = %4684, %4687
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %307) #21
  store i64 %4683, ptr @dummy155, align 8, !tbaa !74
  %4703 = call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #25
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %4703, ptr noundef nonnull @.str.82)
          to label %4706 unwind label %4704

4704:                                             ; preds = %4702
  %4705 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %4703) #22
  br label %762

4706:                                             ; preds = %4702
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %4703, align 8, !tbaa !58
  %4707 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %4703, i64 0, i32 1
  store ptr @_Z9BM_InvertRN9benchmark5StateE, ptr %4707, align 8, !tbaa !93
  %4708 = call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %4703)
  store ptr %4708, ptr @_ZL27benchmark_uniq_5_benchmark_, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %306)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %305) #21
  %4709 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %306, i64 0, i32 2
  store ptr %4709, ptr %306, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %304) #21
  store i64 55, ptr %304, align 8, !tbaa !74
  %4710 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %306, ptr noundef nonnull align 8 dereferenceable(8) %304, i64 noundef 0)
  store ptr %4710, ptr %306, align 8, !tbaa !23
  %4711 = load i64, ptr %304, align 8, !tbaa !74
  store i64 %4711, ptr %4709, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(55) %4710, ptr noundef nonnull align 1 dereferenceable(55) @.str.84, i64 55, i1 false)
  %4712 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %306, i64 0, i32 1
  store i64 %4711, ptr %4712, align 8, !tbaa !10
  %4713 = getelementptr inbounds i8, ptr %4710, i64 %4711
  store i8 0, ptr %4713, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %304) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %305, ptr noundef nonnull %306, i32 noundef 0)
          to label %4714 unwind label %4759

4714:                                             ; preds = %4706
  %4715 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 0, ptr nonnull %305, i64 1)
          to label %4716 unwind label %4761

4716:                                             ; preds = %4714
  %4717 = getelementptr inbounds %struct.TestCase, ptr %305, i64 0, i32 3, i32 0, i32 1
  %4718 = load ptr, ptr %4717, align 8, !tbaa !88
  %4719 = icmp eq ptr %4718, null
  br i1 %4719, label %4744, label %4720

4720:                                             ; preds = %4716
  %4721 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4718, i64 0, i32 1
  %4722 = load atomic i64, ptr %4721 acquire, align 8
  %4723 = icmp eq i64 %4722, 4294967297
  %4724 = trunc i64 %4722 to i32
  br i1 %4723, label %4725, label %4733

4725:                                             ; preds = %4720
  store i32 0, ptr %4721, align 8, !tbaa !90
  %4726 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4718, i64 0, i32 2
  store i32 0, ptr %4726, align 4, !tbaa !92
  %4727 = load ptr, ptr %4718, align 8, !tbaa !58
  %4728 = getelementptr inbounds ptr, ptr %4727, i64 2
  %4729 = load ptr, ptr %4728, align 8
  call void %4729(ptr noundef nonnull align 8 dereferenceable(16) %4718) #21
  %4730 = load ptr, ptr %4718, align 8, !tbaa !58
  %4731 = getelementptr inbounds ptr, ptr %4730, i64 3
  %4732 = load ptr, ptr %4731, align 8
  call void %4732(ptr noundef nonnull align 8 dereferenceable(16) %4718) #21
  br label %4744

4733:                                             ; preds = %4720
  %4734 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4735 = icmp eq i8 %4734, 0
  br i1 %4735, label %4738, label %4736

4736:                                             ; preds = %4733
  %4737 = add nsw i32 %4724, -1
  store i32 %4737, ptr %4721, align 8, !tbaa !73
  br label %4740

4738:                                             ; preds = %4733
  %4739 = atomicrmw volatile add ptr %4721, i32 -1 acq_rel, align 4
  br label %4740

4740:                                             ; preds = %4738, %4736
  %4741 = phi i32 [ %4724, %4736 ], [ %4739, %4738 ]
  %4742 = icmp eq i32 %4741, 1
  br i1 %4742, label %4743, label %4744, !prof !42

4743:                                             ; preds = %4740
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4718) #21
  br label %4744

4744:                                             ; preds = %4743, %4740, %4725, %4716
  %4745 = getelementptr inbounds %struct.TestCase, ptr %305, i64 0, i32 2
  %4746 = load ptr, ptr %4745, align 8, !tbaa !23
  %4747 = getelementptr inbounds %struct.TestCase, ptr %305, i64 0, i32 2, i32 2
  %4748 = icmp eq ptr %4746, %4747
  br i1 %4748, label %4750, label %4749

4749:                                             ; preds = %4744
  call void @_ZdlPv(ptr noundef %4746) #22
  br label %4750

4750:                                             ; preds = %4749, %4744
  %4751 = load ptr, ptr %305, align 8, !tbaa !23
  %4752 = getelementptr inbounds %struct.TestCase, ptr %305, i64 0, i32 0, i32 2
  %4753 = icmp eq ptr %4751, %4752
  br i1 %4753, label %4755, label %4754

4754:                                             ; preds = %4750
  call void @_ZdlPv(ptr noundef %4751) #22
  br label %4755

4755:                                             ; preds = %4754, %4750
  %4756 = load ptr, ptr %306, align 8, !tbaa !23
  %4757 = icmp eq ptr %4756, %4709
  br i1 %4757, label %4807, label %4758

4758:                                             ; preds = %4755
  call void @_ZdlPv(ptr noundef %4756) #22
  br label %4807

4759:                                             ; preds = %4706
  %4760 = landingpad { ptr, i32 }
          cleanup
  br label %4801

4761:                                             ; preds = %4714
  %4762 = landingpad { ptr, i32 }
          cleanup
  %4763 = getelementptr inbounds %struct.TestCase, ptr %305, i64 0, i32 3, i32 0, i32 1
  %4764 = load ptr, ptr %4763, align 8, !tbaa !88
  %4765 = icmp eq ptr %4764, null
  br i1 %4765, label %4790, label %4766

4766:                                             ; preds = %4761
  %4767 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4764, i64 0, i32 1
  %4768 = load atomic i64, ptr %4767 acquire, align 8
  %4769 = icmp eq i64 %4768, 4294967297
  %4770 = trunc i64 %4768 to i32
  br i1 %4769, label %4771, label %4779

4771:                                             ; preds = %4766
  store i32 0, ptr %4767, align 8, !tbaa !90
  %4772 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4764, i64 0, i32 2
  store i32 0, ptr %4772, align 4, !tbaa !92
  %4773 = load ptr, ptr %4764, align 8, !tbaa !58
  %4774 = getelementptr inbounds ptr, ptr %4773, i64 2
  %4775 = load ptr, ptr %4774, align 8
  call void %4775(ptr noundef nonnull align 8 dereferenceable(16) %4764) #21
  %4776 = load ptr, ptr %4764, align 8, !tbaa !58
  %4777 = getelementptr inbounds ptr, ptr %4776, i64 3
  %4778 = load ptr, ptr %4777, align 8
  call void %4778(ptr noundef nonnull align 8 dereferenceable(16) %4764) #21
  br label %4790

4779:                                             ; preds = %4766
  %4780 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4781 = icmp eq i8 %4780, 0
  br i1 %4781, label %4784, label %4782

4782:                                             ; preds = %4779
  %4783 = add nsw i32 %4770, -1
  store i32 %4783, ptr %4767, align 8, !tbaa !73
  br label %4786

4784:                                             ; preds = %4779
  %4785 = atomicrmw volatile add ptr %4767, i32 -1 acq_rel, align 4
  br label %4786

4786:                                             ; preds = %4784, %4782
  %4787 = phi i32 [ %4770, %4782 ], [ %4785, %4784 ]
  %4788 = icmp eq i32 %4787, 1
  br i1 %4788, label %4789, label %4790, !prof !42

4789:                                             ; preds = %4786
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4764) #21
  br label %4790

4790:                                             ; preds = %4789, %4786, %4771, %4761
  %4791 = getelementptr inbounds %struct.TestCase, ptr %305, i64 0, i32 2
  %4792 = load ptr, ptr %4791, align 8, !tbaa !23
  %4793 = getelementptr inbounds %struct.TestCase, ptr %305, i64 0, i32 2, i32 2
  %4794 = icmp eq ptr %4792, %4793
  br i1 %4794, label %4796, label %4795

4795:                                             ; preds = %4790
  call void @_ZdlPv(ptr noundef %4792) #22
  br label %4796

4796:                                             ; preds = %4795, %4790
  %4797 = load ptr, ptr %305, align 8, !tbaa !23
  %4798 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %305, i64 0, i32 2
  %4799 = icmp eq ptr %4797, %4798
  br i1 %4799, label %4801, label %4800

4800:                                             ; preds = %4796
  call void @_ZdlPv(ptr noundef %4797) #22
  br label %4801

4801:                                             ; preds = %4800, %4796, %4759
  %4802 = phi { ptr, i32 } [ %4760, %4759 ], [ %4762, %4796 ], [ %4762, %4800 ]
  %4803 = load ptr, ptr %306, align 8, !tbaa !23
  %4804 = icmp eq ptr %4803, %4709
  br i1 %4804, label %4806, label %4805

4805:                                             ; preds = %4801
  call void @_ZdlPv(ptr noundef %4803) #22
  br label %4806

4806:                                             ; preds = %4805, %4801
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %305) #21
  br label %762

4807:                                             ; preds = %4755, %4758
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %305) #21
  store i32 %4715, ptr @dummy172, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %306)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %289)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %290)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %291)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %292)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %293)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %294)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %295)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %296)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %297)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %298)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %299)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %300)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %301)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %302)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %303)
  call void @llvm.lifetime.start.p0(i64 1320, ptr nonnull %288) #21
  %4808 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %289, i64 0, i32 2
  store ptr %4808, ptr %289, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %287) #21
  store i64 21, ptr %287, align 8, !tbaa !74
  %4809 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %289, ptr noundef nonnull align 8 dereferenceable(8) %287, i64 noundef 0)
  store ptr %4809, ptr %289, align 8, !tbaa !23
  %4810 = load i64, ptr %287, align 8, !tbaa !74
  store i64 %4810, ptr %4808, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %4809, ptr noundef nonnull align 1 dereferenceable(21) @.str.86, i64 21, i1 false)
  %4811 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %289, i64 0, i32 1
  store i64 %4810, ptr %4811, align 8, !tbaa !10
  %4812 = load ptr, ptr %289, align 8, !tbaa !23
  %4813 = getelementptr inbounds i8, ptr %4812, i64 %4810
  store i8 0, ptr %4813, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %287) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %288, ptr noundef nonnull %289, i32 noundef 0)
          to label %4814 unwind label %5031

4814:                                             ; preds = %4807
  %4815 = getelementptr inbounds %struct.TestCase, ptr %288, i64 1
  %4816 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %290, i64 0, i32 2
  store ptr %4816, ptr %290, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %286) #21
  store i64 19, ptr %286, align 8, !tbaa !74
  %4817 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %290, ptr noundef nonnull align 8 dereferenceable(8) %286, i64 noundef 0)
          to label %4818 unwind label %5033

4818:                                             ; preds = %4814
  store ptr %4817, ptr %290, align 8, !tbaa !23
  %4819 = load i64, ptr %286, align 8, !tbaa !74
  store i64 %4819, ptr %4816, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %4817, ptr noundef nonnull align 1 dereferenceable(19) @.str.87, i64 19, i1 false)
  %4820 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %290, i64 0, i32 1
  store i64 %4819, ptr %4820, align 8, !tbaa !10
  %4821 = load ptr, ptr %290, align 8, !tbaa !23
  %4822 = getelementptr inbounds i8, ptr %4821, i64 %4819
  store i8 0, ptr %4822, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %286) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %4815, ptr noundef nonnull %290, i32 noundef 1)
          to label %4823 unwind label %5035

4823:                                             ; preds = %4818
  %4824 = getelementptr inbounds %struct.TestCase, ptr %288, i64 2
  %4825 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %291, i64 0, i32 2
  store ptr %4825, ptr %291, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %285) #21
  store i64 32, ptr %285, align 8, !tbaa !74
  %4826 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %291, ptr noundef nonnull align 8 dereferenceable(8) %285, i64 noundef 0)
          to label %4827 unwind label %5037

4827:                                             ; preds = %4823
  store ptr %4826, ptr %291, align 8, !tbaa !23
  %4828 = load i64, ptr %285, align 8, !tbaa !74
  store i64 %4828, ptr %4825, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %4826, ptr noundef nonnull align 1 dereferenceable(32) @.str.15, i64 32, i1 false)
  %4829 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %291, i64 0, i32 1
  store i64 %4828, ptr %4829, align 8, !tbaa !10
  %4830 = load ptr, ptr %291, align 8, !tbaa !23
  %4831 = getelementptr inbounds i8, ptr %4830, i64 %4828
  store i8 0, ptr %4831, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %285) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %4824, ptr noundef nonnull %291, i32 noundef 1)
          to label %4832 unwind label %5039

4832:                                             ; preds = %4827
  %4833 = getelementptr inbounds %struct.TestCase, ptr %288, i64 3
  %4834 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %292, i64 0, i32 2
  store ptr %4834, ptr %292, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %284) #21
  store i64 25, ptr %284, align 8, !tbaa !74
  %4835 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %292, ptr noundef nonnull align 8 dereferenceable(8) %284, i64 noundef 0)
          to label %4836 unwind label %5041

4836:                                             ; preds = %4832
  store ptr %4835, ptr %292, align 8, !tbaa !23
  %4837 = load i64, ptr %284, align 8, !tbaa !74
  store i64 %4837, ptr %4834, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(25) %4835, ptr noundef nonnull align 1 dereferenceable(25) @.str.88, i64 25, i1 false)
  %4838 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %292, i64 0, i32 1
  store i64 %4837, ptr %4838, align 8, !tbaa !10
  %4839 = load ptr, ptr %292, align 8, !tbaa !23
  %4840 = getelementptr inbounds i8, ptr %4839, i64 %4837
  store i8 0, ptr %4840, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %284) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %4833, ptr noundef nonnull %292, i32 noundef 1)
          to label %4841 unwind label %5043

4841:                                             ; preds = %4836
  %4842 = getelementptr inbounds %struct.TestCase, ptr %288, i64 4
  %4843 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %293, i64 0, i32 2
  store ptr %4843, ptr %293, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %283) #21
  store i64 25, ptr %283, align 8, !tbaa !74
  %4844 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %293, ptr noundef nonnull align 8 dereferenceable(8) %283, i64 noundef 0)
          to label %4845 unwind label %5045

4845:                                             ; preds = %4841
  store ptr %4844, ptr %293, align 8, !tbaa !23
  %4846 = load i64, ptr %283, align 8, !tbaa !74
  store i64 %4846, ptr %4843, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(25) %4844, ptr noundef nonnull align 1 dereferenceable(25) @.str.17, i64 25, i1 false)
  %4847 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %293, i64 0, i32 1
  store i64 %4846, ptr %4847, align 8, !tbaa !10
  %4848 = load ptr, ptr %293, align 8, !tbaa !23
  %4849 = getelementptr inbounds i8, ptr %4848, i64 %4846
  store i8 0, ptr %4849, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %283) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %4842, ptr noundef nonnull %293, i32 noundef 1)
          to label %4850 unwind label %5047

4850:                                             ; preds = %4845
  %4851 = getelementptr inbounds %struct.TestCase, ptr %288, i64 5
  %4852 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %294, i64 0, i32 2
  store ptr %4852, ptr %294, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %282) #21
  store i64 18, ptr %282, align 8, !tbaa !74
  %4853 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %294, ptr noundef nonnull align 8 dereferenceable(8) %282, i64 noundef 0)
          to label %4854 unwind label %5049

4854:                                             ; preds = %4850
  store ptr %4853, ptr %294, align 8, !tbaa !23
  %4855 = load i64, ptr %282, align 8, !tbaa !74
  store i64 %4855, ptr %4852, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(18) %4853, ptr noundef nonnull align 1 dereferenceable(18) @.str.18, i64 18, i1 false)
  %4856 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %294, i64 0, i32 1
  store i64 %4855, ptr %4856, align 8, !tbaa !10
  %4857 = load ptr, ptr %294, align 8, !tbaa !23
  %4858 = getelementptr inbounds i8, ptr %4857, i64 %4855
  store i8 0, ptr %4858, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %282) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %4851, ptr noundef nonnull %294, i32 noundef 1)
          to label %4859 unwind label %5051

4859:                                             ; preds = %4854
  %4860 = getelementptr inbounds %struct.TestCase, ptr %288, i64 6
  %4861 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %295, i64 0, i32 2
  store ptr %4861, ptr %295, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %281) #21
  store i64 23, ptr %281, align 8, !tbaa !74
  %4862 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %295, ptr noundef nonnull align 8 dereferenceable(8) %281, i64 noundef 0)
          to label %4863 unwind label %5053

4863:                                             ; preds = %4859
  store ptr %4862, ptr %295, align 8, !tbaa !23
  %4864 = load i64, ptr %281, align 8, !tbaa !74
  store i64 %4864, ptr %4861, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(23) %4862, ptr noundef nonnull align 1 dereferenceable(23) @.str.19, i64 23, i1 false)
  %4865 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %295, i64 0, i32 1
  store i64 %4864, ptr %4865, align 8, !tbaa !10
  %4866 = load ptr, ptr %295, align 8, !tbaa !23
  %4867 = getelementptr inbounds i8, ptr %4866, i64 %4864
  store i8 0, ptr %4867, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %281) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %4860, ptr noundef nonnull %295, i32 noundef 1)
          to label %4868 unwind label %5055

4868:                                             ; preds = %4863
  %4869 = getelementptr inbounds %struct.TestCase, ptr %288, i64 7
  %4870 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %296, i64 0, i32 2
  store ptr %4870, ptr %296, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %4870, ptr noundef nonnull align 1 dereferenceable(14) @.str.20, i64 14, i1 false)
  %4871 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %296, i64 0, i32 1
  store i64 14, ptr %4871, align 8, !tbaa !10
  %4872 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %296, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %4872, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %4869, ptr noundef nonnull %296, i32 noundef 1)
          to label %4873 unwind label %5057

4873:                                             ; preds = %4868
  %4874 = getelementptr inbounds %struct.TestCase, ptr %288, i64 8
  %4875 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %297, i64 0, i32 2
  store ptr %4875, ptr %297, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %280) #21
  store i64 20, ptr %280, align 8, !tbaa !74
  %4876 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %297, ptr noundef nonnull align 8 dereferenceable(8) %280, i64 noundef 0)
          to label %4877 unwind label %5059

4877:                                             ; preds = %4873
  store ptr %4876, ptr %297, align 8, !tbaa !23
  %4878 = load i64, ptr %280, align 8, !tbaa !74
  store i64 %4878, ptr %4875, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %4876, ptr noundef nonnull align 1 dereferenceable(20) @.str.21, i64 20, i1 false)
  %4879 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %297, i64 0, i32 1
  store i64 %4878, ptr %4879, align 8, !tbaa !10
  %4880 = load ptr, ptr %297, align 8, !tbaa !23
  %4881 = getelementptr inbounds i8, ptr %4880, i64 %4878
  store i8 0, ptr %4881, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %280) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %4874, ptr noundef nonnull %297, i32 noundef 1)
          to label %4882 unwind label %5061

4882:                                             ; preds = %4877
  %4883 = getelementptr inbounds %struct.TestCase, ptr %288, i64 9
  %4884 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %298, i64 0, i32 2
  store ptr %4884, ptr %298, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %279) #21
  store i64 21, ptr %279, align 8, !tbaa !74
  %4885 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %298, ptr noundef nonnull align 8 dereferenceable(8) %279, i64 noundef 0)
          to label %4886 unwind label %5063

4886:                                             ; preds = %4882
  store ptr %4885, ptr %298, align 8, !tbaa !23
  %4887 = load i64, ptr %279, align 8, !tbaa !74
  store i64 %4887, ptr %4884, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %4885, ptr noundef nonnull align 1 dereferenceable(21) @.str.22, i64 21, i1 false)
  %4888 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %298, i64 0, i32 1
  store i64 %4887, ptr %4888, align 8, !tbaa !10
  %4889 = load ptr, ptr %298, align 8, !tbaa !23
  %4890 = getelementptr inbounds i8, ptr %4889, i64 %4887
  store i8 0, ptr %4890, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %279) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %4883, ptr noundef nonnull %298, i32 noundef 1)
          to label %4891 unwind label %5065

4891:                                             ; preds = %4886
  %4892 = getelementptr inbounds %struct.TestCase, ptr %288, i64 10
  %4893 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %299, i64 0, i32 2
  store ptr %4893, ptr %299, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %278) #21
  store i64 20, ptr %278, align 8, !tbaa !74
  %4894 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %299, ptr noundef nonnull align 8 dereferenceable(8) %278, i64 noundef 0)
          to label %4895 unwind label %5067

4895:                                             ; preds = %4891
  store ptr %4894, ptr %299, align 8, !tbaa !23
  %4896 = load i64, ptr %278, align 8, !tbaa !74
  store i64 %4896, ptr %4893, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %4894, ptr noundef nonnull align 1 dereferenceable(20) @.str.23, i64 20, i1 false)
  %4897 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %299, i64 0, i32 1
  store i64 %4896, ptr %4897, align 8, !tbaa !10
  %4898 = load ptr, ptr %299, align 8, !tbaa !23
  %4899 = getelementptr inbounds i8, ptr %4898, i64 %4896
  store i8 0, ptr %4899, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %278) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %4892, ptr noundef nonnull %299, i32 noundef 1)
          to label %4900 unwind label %5069

4900:                                             ; preds = %4895
  %4901 = getelementptr inbounds %struct.TestCase, ptr %288, i64 11
  %4902 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %300, i64 0, i32 2
  store ptr %4902, ptr %300, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %277) #21
  store i64 19, ptr %277, align 8, !tbaa !74
  %4903 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %300, ptr noundef nonnull align 8 dereferenceable(8) %277, i64 noundef 0)
          to label %4904 unwind label %5071

4904:                                             ; preds = %4900
  store ptr %4903, ptr %300, align 8, !tbaa !23
  %4905 = load i64, ptr %277, align 8, !tbaa !74
  store i64 %4905, ptr %4902, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %4903, ptr noundef nonnull align 1 dereferenceable(19) @.str.24, i64 19, i1 false)
  %4906 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %300, i64 0, i32 1
  store i64 %4905, ptr %4906, align 8, !tbaa !10
  %4907 = load ptr, ptr %300, align 8, !tbaa !23
  %4908 = getelementptr inbounds i8, ptr %4907, i64 %4905
  store i8 0, ptr %4908, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %277) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %4901, ptr noundef nonnull %300, i32 noundef 1)
          to label %4909 unwind label %5073

4909:                                             ; preds = %4904
  %4910 = getelementptr inbounds %struct.TestCase, ptr %288, i64 12
  %4911 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %301, i64 0, i32 2
  store ptr %4911, ptr %301, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(15) %4911, ptr noundef nonnull align 1 dereferenceable(15) @.str.25, i64 15, i1 false)
  %4912 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %301, i64 0, i32 1
  store i64 15, ptr %4912, align 8, !tbaa !10
  %4913 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %301, i64 0, i32 2, i32 1, i64 7
  store i8 0, ptr %4913, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %4910, ptr noundef nonnull %301, i32 noundef 1)
          to label %4914 unwind label %5075

4914:                                             ; preds = %4909
  %4915 = getelementptr inbounds %struct.TestCase, ptr %288, i64 13
  %4916 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %302, i64 0, i32 2
  store ptr %4916, ptr %302, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %4916, ptr noundef nonnull align 1 dereferenceable(14) @.str.26, i64 14, i1 false)
  %4917 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %302, i64 0, i32 1
  store i64 14, ptr %4917, align 8, !tbaa !10
  %4918 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %302, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %4918, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %4915, ptr noundef nonnull %302, i32 noundef 1)
          to label %4919 unwind label %5077

4919:                                             ; preds = %4914
  %4920 = getelementptr inbounds %struct.TestCase, ptr %288, i64 14
  %4921 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %303, i64 0, i32 2
  store ptr %4921, ptr %303, align 8, !tbaa !5
  store i8 125, ptr %4921, align 8, !tbaa !13
  %4922 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %303, i64 0, i32 1
  store i64 1, ptr %4922, align 8, !tbaa !10
  %4923 = getelementptr inbounds i8, ptr %303, i64 17
  store i8 0, ptr %4923, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %4920, ptr noundef nonnull %303, i32 noundef 1)
          to label %4924 unwind label %5079

4924:                                             ; preds = %4919
  %4925 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 2, ptr nonnull %288, i64 15)
          to label %4926 unwind label %5081

4926:                                             ; preds = %4924
  %4927 = getelementptr inbounds %struct.TestCase, ptr %288, i64 15
  br label %4928

4928:                                             ; preds = %4969, %4926
  %4929 = phi ptr [ %4927, %4926 ], [ %4930, %4969 ]
  %4930 = getelementptr inbounds %struct.TestCase, ptr %4929, i64 -1
  %4931 = getelementptr %struct.TestCase, ptr %4929, i64 -1, i32 3, i32 0, i32 1
  %4932 = load ptr, ptr %4931, align 8, !tbaa !88
  %4933 = icmp eq ptr %4932, null
  br i1 %4933, label %4958, label %4934

4934:                                             ; preds = %4928
  %4935 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4932, i64 0, i32 1
  %4936 = load atomic i64, ptr %4935 acquire, align 8
  %4937 = icmp eq i64 %4936, 4294967297
  %4938 = trunc i64 %4936 to i32
  br i1 %4937, label %4939, label %4947

4939:                                             ; preds = %4934
  store i32 0, ptr %4935, align 8, !tbaa !90
  %4940 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %4932, i64 0, i32 2
  store i32 0, ptr %4940, align 4, !tbaa !92
  %4941 = load ptr, ptr %4932, align 8, !tbaa !58
  %4942 = getelementptr inbounds ptr, ptr %4941, i64 2
  %4943 = load ptr, ptr %4942, align 8
  call void %4943(ptr noundef nonnull align 8 dereferenceable(16) %4932) #21
  %4944 = load ptr, ptr %4932, align 8, !tbaa !58
  %4945 = getelementptr inbounds ptr, ptr %4944, i64 3
  %4946 = load ptr, ptr %4945, align 8
  call void %4946(ptr noundef nonnull align 8 dereferenceable(16) %4932) #21
  br label %4958

4947:                                             ; preds = %4934
  %4948 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %4949 = icmp eq i8 %4948, 0
  br i1 %4949, label %4952, label %4950

4950:                                             ; preds = %4947
  %4951 = add nsw i32 %4938, -1
  store i32 %4951, ptr %4935, align 8, !tbaa !73
  br label %4954

4952:                                             ; preds = %4947
  %4953 = atomicrmw volatile add ptr %4935, i32 -1 acq_rel, align 4
  br label %4954

4954:                                             ; preds = %4952, %4950
  %4955 = phi i32 [ %4938, %4950 ], [ %4953, %4952 ]
  %4956 = icmp eq i32 %4955, 1
  br i1 %4956, label %4957, label %4958, !prof !42

4957:                                             ; preds = %4954
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %4932) #21
  br label %4958

4958:                                             ; preds = %4957, %4954, %4939, %4928
  %4959 = getelementptr %struct.TestCase, ptr %4929, i64 -1, i32 2
  %4960 = load ptr, ptr %4959, align 8, !tbaa !23
  %4961 = getelementptr %struct.TestCase, ptr %4929, i64 -1, i32 2, i32 2
  %4962 = icmp eq ptr %4960, %4961
  br i1 %4962, label %4964, label %4963

4963:                                             ; preds = %4958
  call void @_ZdlPv(ptr noundef %4960) #22
  br label %4964

4964:                                             ; preds = %4963, %4958
  %4965 = load ptr, ptr %4930, align 8, !tbaa !23
  %4966 = getelementptr %struct.TestCase, ptr %4929, i64 -1, i32 0, i32 2
  %4967 = icmp eq ptr %4965, %4966
  br i1 %4967, label %4969, label %4968

4968:                                             ; preds = %4964
  call void @_ZdlPv(ptr noundef %4965) #22
  br label %4969

4969:                                             ; preds = %4968, %4964
  %4970 = icmp eq ptr %4930, %288
  br i1 %4970, label %4971, label %4928

4971:                                             ; preds = %4969
  %4972 = load ptr, ptr %303, align 8, !tbaa !23
  %4973 = icmp eq ptr %4972, %4921
  br i1 %4973, label %4975, label %4974

4974:                                             ; preds = %4971
  call void @_ZdlPv(ptr noundef %4972) #22
  br label %4975

4975:                                             ; preds = %4974, %4971
  %4976 = load ptr, ptr %302, align 8, !tbaa !23
  %4977 = icmp eq ptr %4976, %4916
  br i1 %4977, label %4979, label %4978

4978:                                             ; preds = %4975
  call void @_ZdlPv(ptr noundef %4976) #22
  br label %4979

4979:                                             ; preds = %4978, %4975
  %4980 = load ptr, ptr %301, align 8, !tbaa !23
  %4981 = icmp eq ptr %4980, %4911
  br i1 %4981, label %4983, label %4982

4982:                                             ; preds = %4979
  call void @_ZdlPv(ptr noundef %4980) #22
  br label %4983

4983:                                             ; preds = %4982, %4979
  %4984 = load ptr, ptr %300, align 8, !tbaa !23
  %4985 = icmp eq ptr %4984, %4902
  br i1 %4985, label %4987, label %4986

4986:                                             ; preds = %4983
  call void @_ZdlPv(ptr noundef %4984) #22
  br label %4987

4987:                                             ; preds = %4986, %4983
  %4988 = load ptr, ptr %299, align 8, !tbaa !23
  %4989 = icmp eq ptr %4988, %4893
  br i1 %4989, label %4991, label %4990

4990:                                             ; preds = %4987
  call void @_ZdlPv(ptr noundef %4988) #22
  br label %4991

4991:                                             ; preds = %4990, %4987
  %4992 = load ptr, ptr %298, align 8, !tbaa !23
  %4993 = icmp eq ptr %4992, %4884
  br i1 %4993, label %4995, label %4994

4994:                                             ; preds = %4991
  call void @_ZdlPv(ptr noundef %4992) #22
  br label %4995

4995:                                             ; preds = %4994, %4991
  %4996 = load ptr, ptr %297, align 8, !tbaa !23
  %4997 = icmp eq ptr %4996, %4875
  br i1 %4997, label %4999, label %4998

4998:                                             ; preds = %4995
  call void @_ZdlPv(ptr noundef %4996) #22
  br label %4999

4999:                                             ; preds = %4998, %4995
  %5000 = load ptr, ptr %296, align 8, !tbaa !23
  %5001 = icmp eq ptr %5000, %4870
  br i1 %5001, label %5003, label %5002

5002:                                             ; preds = %4999
  call void @_ZdlPv(ptr noundef %5000) #22
  br label %5003

5003:                                             ; preds = %5002, %4999
  %5004 = load ptr, ptr %295, align 8, !tbaa !23
  %5005 = icmp eq ptr %5004, %4861
  br i1 %5005, label %5007, label %5006

5006:                                             ; preds = %5003
  call void @_ZdlPv(ptr noundef %5004) #22
  br label %5007

5007:                                             ; preds = %5006, %5003
  %5008 = load ptr, ptr %294, align 8, !tbaa !23
  %5009 = icmp eq ptr %5008, %4852
  br i1 %5009, label %5011, label %5010

5010:                                             ; preds = %5007
  call void @_ZdlPv(ptr noundef %5008) #22
  br label %5011

5011:                                             ; preds = %5010, %5007
  %5012 = load ptr, ptr %293, align 8, !tbaa !23
  %5013 = icmp eq ptr %5012, %4843
  br i1 %5013, label %5015, label %5014

5014:                                             ; preds = %5011
  call void @_ZdlPv(ptr noundef %5012) #22
  br label %5015

5015:                                             ; preds = %5014, %5011
  %5016 = load ptr, ptr %292, align 8, !tbaa !23
  %5017 = icmp eq ptr %5016, %4834
  br i1 %5017, label %5019, label %5018

5018:                                             ; preds = %5015
  call void @_ZdlPv(ptr noundef %5016) #22
  br label %5019

5019:                                             ; preds = %5018, %5015
  %5020 = load ptr, ptr %291, align 8, !tbaa !23
  %5021 = icmp eq ptr %5020, %4825
  br i1 %5021, label %5023, label %5022

5022:                                             ; preds = %5019
  call void @_ZdlPv(ptr noundef %5020) #22
  br label %5023

5023:                                             ; preds = %5022, %5019
  %5024 = load ptr, ptr %290, align 8, !tbaa !23
  %5025 = icmp eq ptr %5024, %4816
  br i1 %5025, label %5027, label %5026

5026:                                             ; preds = %5023
  call void @_ZdlPv(ptr noundef %5024) #22
  br label %5027

5027:                                             ; preds = %5026, %5023
  %5028 = load ptr, ptr %289, align 8, !tbaa !23
  %5029 = icmp eq ptr %5028, %4808
  br i1 %5029, label %5818, label %5030

5030:                                             ; preds = %5027
  call void @_ZdlPv(ptr noundef %5028) #22
  br label %5818

5031:                                             ; preds = %4807
  %5032 = landingpad { ptr, i32 }
          cleanup
  br label %5764

5033:                                             ; preds = %4814
  %5034 = landingpad { ptr, i32 }
          cleanup
  br label %5764

5035:                                             ; preds = %4818
  %5036 = landingpad { ptr, i32 }
          cleanup
  br label %5757

5037:                                             ; preds = %4823
  %5038 = landingpad { ptr, i32 }
          cleanup
  br label %5757

5039:                                             ; preds = %4827
  %5040 = landingpad { ptr, i32 }
          cleanup
  br label %5750

5041:                                             ; preds = %4832
  %5042 = landingpad { ptr, i32 }
          cleanup
  br label %5750

5043:                                             ; preds = %4836
  %5044 = landingpad { ptr, i32 }
          cleanup
  br label %5743

5045:                                             ; preds = %4841
  %5046 = landingpad { ptr, i32 }
          cleanup
  br label %5743

5047:                                             ; preds = %4845
  %5048 = landingpad { ptr, i32 }
          cleanup
  br label %5736

5049:                                             ; preds = %4850
  %5050 = landingpad { ptr, i32 }
          cleanup
  br label %5736

5051:                                             ; preds = %4854
  %5052 = landingpad { ptr, i32 }
          cleanup
  br label %5729

5053:                                             ; preds = %4859
  %5054 = landingpad { ptr, i32 }
          cleanup
  br label %5729

5055:                                             ; preds = %4863
  %5056 = landingpad { ptr, i32 }
          cleanup
  br label %5722

5057:                                             ; preds = %4868
  %5058 = landingpad { ptr, i32 }
          cleanup
  br label %5715

5059:                                             ; preds = %4873
  %5060 = landingpad { ptr, i32 }
          cleanup
  br label %5715

5061:                                             ; preds = %4877
  %5062 = landingpad { ptr, i32 }
          cleanup
  br label %5708

5063:                                             ; preds = %4882
  %5064 = landingpad { ptr, i32 }
          cleanup
  br label %5708

5065:                                             ; preds = %4886
  %5066 = landingpad { ptr, i32 }
          cleanup
  br label %5701

5067:                                             ; preds = %4891
  %5068 = landingpad { ptr, i32 }
          cleanup
  br label %5701

5069:                                             ; preds = %4895
  %5070 = landingpad { ptr, i32 }
          cleanup
  br label %5694

5071:                                             ; preds = %4900
  %5072 = landingpad { ptr, i32 }
          cleanup
  br label %5694

5073:                                             ; preds = %4904
  %5074 = landingpad { ptr, i32 }
          cleanup
  br label %5687

5075:                                             ; preds = %4909
  %5076 = landingpad { ptr, i32 }
          cleanup
  br label %5680

5077:                                             ; preds = %4914
  %5078 = landingpad { ptr, i32 }
          cleanup
  br label %5673

5079:                                             ; preds = %4919
  %5080 = landingpad { ptr, i32 }
          cleanup
  br label %5667

5081:                                             ; preds = %4924
  %5082 = landingpad { ptr, i32 }
          cleanup
  %5083 = getelementptr inbounds %struct.TestCase, ptr %288, i64 14, i32 3, i32 0, i32 1
  %5084 = load ptr, ptr %5083, align 8, !tbaa !88
  %5085 = icmp eq ptr %5084, null
  br i1 %5085, label %5110, label %5086

5086:                                             ; preds = %5081
  %5087 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5084, i64 0, i32 1
  %5088 = load atomic i64, ptr %5087 acquire, align 8
  %5089 = icmp eq i64 %5088, 4294967297
  %5090 = trunc i64 %5088 to i32
  br i1 %5089, label %5091, label %5099

5091:                                             ; preds = %5086
  store i32 0, ptr %5087, align 8, !tbaa !90
  %5092 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5084, i64 0, i32 2
  store i32 0, ptr %5092, align 4, !tbaa !92
  %5093 = load ptr, ptr %5084, align 8, !tbaa !58
  %5094 = getelementptr inbounds ptr, ptr %5093, i64 2
  %5095 = load ptr, ptr %5094, align 8
  call void %5095(ptr noundef nonnull align 8 dereferenceable(16) %5084) #21
  %5096 = load ptr, ptr %5084, align 8, !tbaa !58
  %5097 = getelementptr inbounds ptr, ptr %5096, i64 3
  %5098 = load ptr, ptr %5097, align 8
  call void %5098(ptr noundef nonnull align 8 dereferenceable(16) %5084) #21
  br label %5110

5099:                                             ; preds = %5086
  %5100 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5101 = icmp eq i8 %5100, 0
  br i1 %5101, label %5104, label %5102

5102:                                             ; preds = %5099
  %5103 = add nsw i32 %5090, -1
  store i32 %5103, ptr %5087, align 8, !tbaa !73
  br label %5106

5104:                                             ; preds = %5099
  %5105 = atomicrmw volatile add ptr %5087, i32 -1 acq_rel, align 4
  br label %5106

5106:                                             ; preds = %5104, %5102
  %5107 = phi i32 [ %5090, %5102 ], [ %5105, %5104 ]
  %5108 = icmp eq i32 %5107, 1
  br i1 %5108, label %5109, label %5110, !prof !42

5109:                                             ; preds = %5106
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5084) #21
  br label %5110

5110:                                             ; preds = %5109, %5106, %5091, %5081
  %5111 = getelementptr inbounds %struct.TestCase, ptr %288, i64 14, i32 2
  %5112 = load ptr, ptr %5111, align 8, !tbaa !23
  %5113 = getelementptr inbounds %struct.TestCase, ptr %288, i64 14, i32 2, i32 2
  %5114 = icmp eq ptr %5112, %5113
  br i1 %5114, label %5116, label %5115

5115:                                             ; preds = %5110
  call void @_ZdlPv(ptr noundef %5112) #22
  br label %5116

5116:                                             ; preds = %5115, %5110
  %5117 = load ptr, ptr %4920, align 8, !tbaa !23
  %5118 = getelementptr inbounds %struct.TestCase, ptr %288, i64 14, i32 0, i32 2
  %5119 = icmp eq ptr %5117, %5118
  br i1 %5119, label %5121, label %5120

5120:                                             ; preds = %5116
  call void @_ZdlPv(ptr noundef %5117) #22
  br label %5121

5121:                                             ; preds = %5116, %5120
  %5122 = getelementptr inbounds %struct.TestCase, ptr %288, i64 13, i32 3, i32 0, i32 1
  %5123 = load ptr, ptr %5122, align 8, !tbaa !88
  %5124 = icmp eq ptr %5123, null
  br i1 %5124, label %5149, label %5125

5125:                                             ; preds = %5121
  %5126 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5123, i64 0, i32 1
  %5127 = load atomic i64, ptr %5126 acquire, align 8
  %5128 = icmp eq i64 %5127, 4294967297
  %5129 = trunc i64 %5127 to i32
  br i1 %5128, label %5130, label %5138

5130:                                             ; preds = %5125
  store i32 0, ptr %5126, align 8, !tbaa !90
  %5131 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5123, i64 0, i32 2
  store i32 0, ptr %5131, align 4, !tbaa !92
  %5132 = load ptr, ptr %5123, align 8, !tbaa !58
  %5133 = getelementptr inbounds ptr, ptr %5132, i64 2
  %5134 = load ptr, ptr %5133, align 8
  call void %5134(ptr noundef nonnull align 8 dereferenceable(16) %5123) #21
  %5135 = load ptr, ptr %5123, align 8, !tbaa !58
  %5136 = getelementptr inbounds ptr, ptr %5135, i64 3
  %5137 = load ptr, ptr %5136, align 8
  call void %5137(ptr noundef nonnull align 8 dereferenceable(16) %5123) #21
  br label %5149

5138:                                             ; preds = %5125
  %5139 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5140 = icmp eq i8 %5139, 0
  br i1 %5140, label %5143, label %5141

5141:                                             ; preds = %5138
  %5142 = add nsw i32 %5129, -1
  store i32 %5142, ptr %5126, align 8, !tbaa !73
  br label %5145

5143:                                             ; preds = %5138
  %5144 = atomicrmw volatile add ptr %5126, i32 -1 acq_rel, align 4
  br label %5145

5145:                                             ; preds = %5143, %5141
  %5146 = phi i32 [ %5129, %5141 ], [ %5144, %5143 ]
  %5147 = icmp eq i32 %5146, 1
  br i1 %5147, label %5148, label %5149, !prof !42

5148:                                             ; preds = %5145
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5123) #21
  br label %5149

5149:                                             ; preds = %5148, %5145, %5130, %5121
  %5150 = getelementptr inbounds %struct.TestCase, ptr %288, i64 13, i32 2
  %5151 = load ptr, ptr %5150, align 8, !tbaa !23
  %5152 = getelementptr inbounds %struct.TestCase, ptr %288, i64 13, i32 2, i32 2
  %5153 = icmp eq ptr %5151, %5152
  br i1 %5153, label %5155, label %5154

5154:                                             ; preds = %5149
  call void @_ZdlPv(ptr noundef %5151) #22
  br label %5155

5155:                                             ; preds = %5154, %5149
  %5156 = load ptr, ptr %4915, align 8, !tbaa !23
  %5157 = getelementptr inbounds %struct.TestCase, ptr %288, i64 13, i32 0, i32 2
  %5158 = icmp eq ptr %5156, %5157
  br i1 %5158, label %5160, label %5159

5159:                                             ; preds = %5155
  call void @_ZdlPv(ptr noundef %5156) #22
  br label %5160

5160:                                             ; preds = %5155, %5159
  %5161 = getelementptr inbounds %struct.TestCase, ptr %288, i64 12, i32 3, i32 0, i32 1
  %5162 = load ptr, ptr %5161, align 8, !tbaa !88
  %5163 = icmp eq ptr %5162, null
  br i1 %5163, label %5188, label %5164

5164:                                             ; preds = %5160
  %5165 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5162, i64 0, i32 1
  %5166 = load atomic i64, ptr %5165 acquire, align 8
  %5167 = icmp eq i64 %5166, 4294967297
  %5168 = trunc i64 %5166 to i32
  br i1 %5167, label %5169, label %5177

5169:                                             ; preds = %5164
  store i32 0, ptr %5165, align 8, !tbaa !90
  %5170 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5162, i64 0, i32 2
  store i32 0, ptr %5170, align 4, !tbaa !92
  %5171 = load ptr, ptr %5162, align 8, !tbaa !58
  %5172 = getelementptr inbounds ptr, ptr %5171, i64 2
  %5173 = load ptr, ptr %5172, align 8
  call void %5173(ptr noundef nonnull align 8 dereferenceable(16) %5162) #21
  %5174 = load ptr, ptr %5162, align 8, !tbaa !58
  %5175 = getelementptr inbounds ptr, ptr %5174, i64 3
  %5176 = load ptr, ptr %5175, align 8
  call void %5176(ptr noundef nonnull align 8 dereferenceable(16) %5162) #21
  br label %5188

5177:                                             ; preds = %5164
  %5178 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5179 = icmp eq i8 %5178, 0
  br i1 %5179, label %5182, label %5180

5180:                                             ; preds = %5177
  %5181 = add nsw i32 %5168, -1
  store i32 %5181, ptr %5165, align 8, !tbaa !73
  br label %5184

5182:                                             ; preds = %5177
  %5183 = atomicrmw volatile add ptr %5165, i32 -1 acq_rel, align 4
  br label %5184

5184:                                             ; preds = %5182, %5180
  %5185 = phi i32 [ %5168, %5180 ], [ %5183, %5182 ]
  %5186 = icmp eq i32 %5185, 1
  br i1 %5186, label %5187, label %5188, !prof !42

5187:                                             ; preds = %5184
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5162) #21
  br label %5188

5188:                                             ; preds = %5187, %5184, %5169, %5160
  %5189 = getelementptr inbounds %struct.TestCase, ptr %288, i64 12, i32 2
  %5190 = load ptr, ptr %5189, align 8, !tbaa !23
  %5191 = getelementptr inbounds %struct.TestCase, ptr %288, i64 12, i32 2, i32 2
  %5192 = icmp eq ptr %5190, %5191
  br i1 %5192, label %5194, label %5193

5193:                                             ; preds = %5188
  call void @_ZdlPv(ptr noundef %5190) #22
  br label %5194

5194:                                             ; preds = %5193, %5188
  %5195 = load ptr, ptr %4910, align 8, !tbaa !23
  %5196 = getelementptr inbounds %struct.TestCase, ptr %288, i64 12, i32 0, i32 2
  %5197 = icmp eq ptr %5195, %5196
  br i1 %5197, label %5199, label %5198

5198:                                             ; preds = %5194
  call void @_ZdlPv(ptr noundef %5195) #22
  br label %5199

5199:                                             ; preds = %5194, %5198
  %5200 = getelementptr inbounds %struct.TestCase, ptr %288, i64 11, i32 3, i32 0, i32 1
  %5201 = load ptr, ptr %5200, align 8, !tbaa !88
  %5202 = icmp eq ptr %5201, null
  br i1 %5202, label %5227, label %5203

5203:                                             ; preds = %5199
  %5204 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5201, i64 0, i32 1
  %5205 = load atomic i64, ptr %5204 acquire, align 8
  %5206 = icmp eq i64 %5205, 4294967297
  %5207 = trunc i64 %5205 to i32
  br i1 %5206, label %5208, label %5216

5208:                                             ; preds = %5203
  store i32 0, ptr %5204, align 8, !tbaa !90
  %5209 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5201, i64 0, i32 2
  store i32 0, ptr %5209, align 4, !tbaa !92
  %5210 = load ptr, ptr %5201, align 8, !tbaa !58
  %5211 = getelementptr inbounds ptr, ptr %5210, i64 2
  %5212 = load ptr, ptr %5211, align 8
  call void %5212(ptr noundef nonnull align 8 dereferenceable(16) %5201) #21
  %5213 = load ptr, ptr %5201, align 8, !tbaa !58
  %5214 = getelementptr inbounds ptr, ptr %5213, i64 3
  %5215 = load ptr, ptr %5214, align 8
  call void %5215(ptr noundef nonnull align 8 dereferenceable(16) %5201) #21
  br label %5227

5216:                                             ; preds = %5203
  %5217 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5218 = icmp eq i8 %5217, 0
  br i1 %5218, label %5221, label %5219

5219:                                             ; preds = %5216
  %5220 = add nsw i32 %5207, -1
  store i32 %5220, ptr %5204, align 8, !tbaa !73
  br label %5223

5221:                                             ; preds = %5216
  %5222 = atomicrmw volatile add ptr %5204, i32 -1 acq_rel, align 4
  br label %5223

5223:                                             ; preds = %5221, %5219
  %5224 = phi i32 [ %5207, %5219 ], [ %5222, %5221 ]
  %5225 = icmp eq i32 %5224, 1
  br i1 %5225, label %5226, label %5227, !prof !42

5226:                                             ; preds = %5223
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5201) #21
  br label %5227

5227:                                             ; preds = %5226, %5223, %5208, %5199
  %5228 = getelementptr inbounds %struct.TestCase, ptr %288, i64 11, i32 2
  %5229 = load ptr, ptr %5228, align 8, !tbaa !23
  %5230 = getelementptr inbounds %struct.TestCase, ptr %288, i64 11, i32 2, i32 2
  %5231 = icmp eq ptr %5229, %5230
  br i1 %5231, label %5233, label %5232

5232:                                             ; preds = %5227
  call void @_ZdlPv(ptr noundef %5229) #22
  br label %5233

5233:                                             ; preds = %5232, %5227
  %5234 = load ptr, ptr %4901, align 8, !tbaa !23
  %5235 = getelementptr inbounds %struct.TestCase, ptr %288, i64 11, i32 0, i32 2
  %5236 = icmp eq ptr %5234, %5235
  br i1 %5236, label %5238, label %5237

5237:                                             ; preds = %5233
  call void @_ZdlPv(ptr noundef %5234) #22
  br label %5238

5238:                                             ; preds = %5233, %5237
  %5239 = getelementptr inbounds %struct.TestCase, ptr %288, i64 10, i32 3, i32 0, i32 1
  %5240 = load ptr, ptr %5239, align 8, !tbaa !88
  %5241 = icmp eq ptr %5240, null
  br i1 %5241, label %5266, label %5242

5242:                                             ; preds = %5238
  %5243 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5240, i64 0, i32 1
  %5244 = load atomic i64, ptr %5243 acquire, align 8
  %5245 = icmp eq i64 %5244, 4294967297
  %5246 = trunc i64 %5244 to i32
  br i1 %5245, label %5247, label %5255

5247:                                             ; preds = %5242
  store i32 0, ptr %5243, align 8, !tbaa !90
  %5248 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5240, i64 0, i32 2
  store i32 0, ptr %5248, align 4, !tbaa !92
  %5249 = load ptr, ptr %5240, align 8, !tbaa !58
  %5250 = getelementptr inbounds ptr, ptr %5249, i64 2
  %5251 = load ptr, ptr %5250, align 8
  call void %5251(ptr noundef nonnull align 8 dereferenceable(16) %5240) #21
  %5252 = load ptr, ptr %5240, align 8, !tbaa !58
  %5253 = getelementptr inbounds ptr, ptr %5252, i64 3
  %5254 = load ptr, ptr %5253, align 8
  call void %5254(ptr noundef nonnull align 8 dereferenceable(16) %5240) #21
  br label %5266

5255:                                             ; preds = %5242
  %5256 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5257 = icmp eq i8 %5256, 0
  br i1 %5257, label %5260, label %5258

5258:                                             ; preds = %5255
  %5259 = add nsw i32 %5246, -1
  store i32 %5259, ptr %5243, align 8, !tbaa !73
  br label %5262

5260:                                             ; preds = %5255
  %5261 = atomicrmw volatile add ptr %5243, i32 -1 acq_rel, align 4
  br label %5262

5262:                                             ; preds = %5260, %5258
  %5263 = phi i32 [ %5246, %5258 ], [ %5261, %5260 ]
  %5264 = icmp eq i32 %5263, 1
  br i1 %5264, label %5265, label %5266, !prof !42

5265:                                             ; preds = %5262
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5240) #21
  br label %5266

5266:                                             ; preds = %5265, %5262, %5247, %5238
  %5267 = getelementptr inbounds %struct.TestCase, ptr %288, i64 10, i32 2
  %5268 = load ptr, ptr %5267, align 8, !tbaa !23
  %5269 = getelementptr inbounds %struct.TestCase, ptr %288, i64 10, i32 2, i32 2
  %5270 = icmp eq ptr %5268, %5269
  br i1 %5270, label %5272, label %5271

5271:                                             ; preds = %5266
  call void @_ZdlPv(ptr noundef %5268) #22
  br label %5272

5272:                                             ; preds = %5271, %5266
  %5273 = load ptr, ptr %4892, align 8, !tbaa !23
  %5274 = getelementptr inbounds %struct.TestCase, ptr %288, i64 10, i32 0, i32 2
  %5275 = icmp eq ptr %5273, %5274
  br i1 %5275, label %5277, label %5276

5276:                                             ; preds = %5272
  call void @_ZdlPv(ptr noundef %5273) #22
  br label %5277

5277:                                             ; preds = %5272, %5276
  %5278 = getelementptr inbounds %struct.TestCase, ptr %288, i64 9, i32 3, i32 0, i32 1
  %5279 = load ptr, ptr %5278, align 8, !tbaa !88
  %5280 = icmp eq ptr %5279, null
  br i1 %5280, label %5305, label %5281

5281:                                             ; preds = %5277
  %5282 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5279, i64 0, i32 1
  %5283 = load atomic i64, ptr %5282 acquire, align 8
  %5284 = icmp eq i64 %5283, 4294967297
  %5285 = trunc i64 %5283 to i32
  br i1 %5284, label %5286, label %5294

5286:                                             ; preds = %5281
  store i32 0, ptr %5282, align 8, !tbaa !90
  %5287 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5279, i64 0, i32 2
  store i32 0, ptr %5287, align 4, !tbaa !92
  %5288 = load ptr, ptr %5279, align 8, !tbaa !58
  %5289 = getelementptr inbounds ptr, ptr %5288, i64 2
  %5290 = load ptr, ptr %5289, align 8
  call void %5290(ptr noundef nonnull align 8 dereferenceable(16) %5279) #21
  %5291 = load ptr, ptr %5279, align 8, !tbaa !58
  %5292 = getelementptr inbounds ptr, ptr %5291, i64 3
  %5293 = load ptr, ptr %5292, align 8
  call void %5293(ptr noundef nonnull align 8 dereferenceable(16) %5279) #21
  br label %5305

5294:                                             ; preds = %5281
  %5295 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5296 = icmp eq i8 %5295, 0
  br i1 %5296, label %5299, label %5297

5297:                                             ; preds = %5294
  %5298 = add nsw i32 %5285, -1
  store i32 %5298, ptr %5282, align 8, !tbaa !73
  br label %5301

5299:                                             ; preds = %5294
  %5300 = atomicrmw volatile add ptr %5282, i32 -1 acq_rel, align 4
  br label %5301

5301:                                             ; preds = %5299, %5297
  %5302 = phi i32 [ %5285, %5297 ], [ %5300, %5299 ]
  %5303 = icmp eq i32 %5302, 1
  br i1 %5303, label %5304, label %5305, !prof !42

5304:                                             ; preds = %5301
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5279) #21
  br label %5305

5305:                                             ; preds = %5304, %5301, %5286, %5277
  %5306 = getelementptr inbounds %struct.TestCase, ptr %288, i64 9, i32 2
  %5307 = load ptr, ptr %5306, align 8, !tbaa !23
  %5308 = getelementptr inbounds %struct.TestCase, ptr %288, i64 9, i32 2, i32 2
  %5309 = icmp eq ptr %5307, %5308
  br i1 %5309, label %5311, label %5310

5310:                                             ; preds = %5305
  call void @_ZdlPv(ptr noundef %5307) #22
  br label %5311

5311:                                             ; preds = %5310, %5305
  %5312 = load ptr, ptr %4883, align 8, !tbaa !23
  %5313 = getelementptr inbounds %struct.TestCase, ptr %288, i64 9, i32 0, i32 2
  %5314 = icmp eq ptr %5312, %5313
  br i1 %5314, label %5316, label %5315

5315:                                             ; preds = %5311
  call void @_ZdlPv(ptr noundef %5312) #22
  br label %5316

5316:                                             ; preds = %5311, %5315
  %5317 = getelementptr inbounds %struct.TestCase, ptr %288, i64 8, i32 3, i32 0, i32 1
  %5318 = load ptr, ptr %5317, align 8, !tbaa !88
  %5319 = icmp eq ptr %5318, null
  br i1 %5319, label %5344, label %5320

5320:                                             ; preds = %5316
  %5321 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5318, i64 0, i32 1
  %5322 = load atomic i64, ptr %5321 acquire, align 8
  %5323 = icmp eq i64 %5322, 4294967297
  %5324 = trunc i64 %5322 to i32
  br i1 %5323, label %5325, label %5333

5325:                                             ; preds = %5320
  store i32 0, ptr %5321, align 8, !tbaa !90
  %5326 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5318, i64 0, i32 2
  store i32 0, ptr %5326, align 4, !tbaa !92
  %5327 = load ptr, ptr %5318, align 8, !tbaa !58
  %5328 = getelementptr inbounds ptr, ptr %5327, i64 2
  %5329 = load ptr, ptr %5328, align 8
  call void %5329(ptr noundef nonnull align 8 dereferenceable(16) %5318) #21
  %5330 = load ptr, ptr %5318, align 8, !tbaa !58
  %5331 = getelementptr inbounds ptr, ptr %5330, i64 3
  %5332 = load ptr, ptr %5331, align 8
  call void %5332(ptr noundef nonnull align 8 dereferenceable(16) %5318) #21
  br label %5344

5333:                                             ; preds = %5320
  %5334 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5335 = icmp eq i8 %5334, 0
  br i1 %5335, label %5338, label %5336

5336:                                             ; preds = %5333
  %5337 = add nsw i32 %5324, -1
  store i32 %5337, ptr %5321, align 8, !tbaa !73
  br label %5340

5338:                                             ; preds = %5333
  %5339 = atomicrmw volatile add ptr %5321, i32 -1 acq_rel, align 4
  br label %5340

5340:                                             ; preds = %5338, %5336
  %5341 = phi i32 [ %5324, %5336 ], [ %5339, %5338 ]
  %5342 = icmp eq i32 %5341, 1
  br i1 %5342, label %5343, label %5344, !prof !42

5343:                                             ; preds = %5340
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5318) #21
  br label %5344

5344:                                             ; preds = %5343, %5340, %5325, %5316
  %5345 = getelementptr inbounds %struct.TestCase, ptr %288, i64 8, i32 2
  %5346 = load ptr, ptr %5345, align 8, !tbaa !23
  %5347 = getelementptr inbounds %struct.TestCase, ptr %288, i64 8, i32 2, i32 2
  %5348 = icmp eq ptr %5346, %5347
  br i1 %5348, label %5350, label %5349

5349:                                             ; preds = %5344
  call void @_ZdlPv(ptr noundef %5346) #22
  br label %5350

5350:                                             ; preds = %5349, %5344
  %5351 = load ptr, ptr %4874, align 8, !tbaa !23
  %5352 = getelementptr inbounds %struct.TestCase, ptr %288, i64 8, i32 0, i32 2
  %5353 = icmp eq ptr %5351, %5352
  br i1 %5353, label %5355, label %5354

5354:                                             ; preds = %5350
  call void @_ZdlPv(ptr noundef %5351) #22
  br label %5355

5355:                                             ; preds = %5350, %5354
  %5356 = getelementptr inbounds %struct.TestCase, ptr %288, i64 7, i32 3, i32 0, i32 1
  %5357 = load ptr, ptr %5356, align 8, !tbaa !88
  %5358 = icmp eq ptr %5357, null
  br i1 %5358, label %5383, label %5359

5359:                                             ; preds = %5355
  %5360 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5357, i64 0, i32 1
  %5361 = load atomic i64, ptr %5360 acquire, align 8
  %5362 = icmp eq i64 %5361, 4294967297
  %5363 = trunc i64 %5361 to i32
  br i1 %5362, label %5364, label %5372

5364:                                             ; preds = %5359
  store i32 0, ptr %5360, align 8, !tbaa !90
  %5365 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5357, i64 0, i32 2
  store i32 0, ptr %5365, align 4, !tbaa !92
  %5366 = load ptr, ptr %5357, align 8, !tbaa !58
  %5367 = getelementptr inbounds ptr, ptr %5366, i64 2
  %5368 = load ptr, ptr %5367, align 8
  call void %5368(ptr noundef nonnull align 8 dereferenceable(16) %5357) #21
  %5369 = load ptr, ptr %5357, align 8, !tbaa !58
  %5370 = getelementptr inbounds ptr, ptr %5369, i64 3
  %5371 = load ptr, ptr %5370, align 8
  call void %5371(ptr noundef nonnull align 8 dereferenceable(16) %5357) #21
  br label %5383

5372:                                             ; preds = %5359
  %5373 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5374 = icmp eq i8 %5373, 0
  br i1 %5374, label %5377, label %5375

5375:                                             ; preds = %5372
  %5376 = add nsw i32 %5363, -1
  store i32 %5376, ptr %5360, align 8, !tbaa !73
  br label %5379

5377:                                             ; preds = %5372
  %5378 = atomicrmw volatile add ptr %5360, i32 -1 acq_rel, align 4
  br label %5379

5379:                                             ; preds = %5377, %5375
  %5380 = phi i32 [ %5363, %5375 ], [ %5378, %5377 ]
  %5381 = icmp eq i32 %5380, 1
  br i1 %5381, label %5382, label %5383, !prof !42

5382:                                             ; preds = %5379
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5357) #21
  br label %5383

5383:                                             ; preds = %5382, %5379, %5364, %5355
  %5384 = getelementptr inbounds %struct.TestCase, ptr %288, i64 7, i32 2
  %5385 = load ptr, ptr %5384, align 8, !tbaa !23
  %5386 = getelementptr inbounds %struct.TestCase, ptr %288, i64 7, i32 2, i32 2
  %5387 = icmp eq ptr %5385, %5386
  br i1 %5387, label %5389, label %5388

5388:                                             ; preds = %5383
  call void @_ZdlPv(ptr noundef %5385) #22
  br label %5389

5389:                                             ; preds = %5388, %5383
  %5390 = load ptr, ptr %4869, align 8, !tbaa !23
  %5391 = getelementptr inbounds %struct.TestCase, ptr %288, i64 7, i32 0, i32 2
  %5392 = icmp eq ptr %5390, %5391
  br i1 %5392, label %5394, label %5393

5393:                                             ; preds = %5389
  call void @_ZdlPv(ptr noundef %5390) #22
  br label %5394

5394:                                             ; preds = %5389, %5393
  %5395 = getelementptr inbounds %struct.TestCase, ptr %288, i64 6, i32 3, i32 0, i32 1
  %5396 = load ptr, ptr %5395, align 8, !tbaa !88
  %5397 = icmp eq ptr %5396, null
  br i1 %5397, label %5422, label %5398

5398:                                             ; preds = %5394
  %5399 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5396, i64 0, i32 1
  %5400 = load atomic i64, ptr %5399 acquire, align 8
  %5401 = icmp eq i64 %5400, 4294967297
  %5402 = trunc i64 %5400 to i32
  br i1 %5401, label %5403, label %5411

5403:                                             ; preds = %5398
  store i32 0, ptr %5399, align 8, !tbaa !90
  %5404 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5396, i64 0, i32 2
  store i32 0, ptr %5404, align 4, !tbaa !92
  %5405 = load ptr, ptr %5396, align 8, !tbaa !58
  %5406 = getelementptr inbounds ptr, ptr %5405, i64 2
  %5407 = load ptr, ptr %5406, align 8
  call void %5407(ptr noundef nonnull align 8 dereferenceable(16) %5396) #21
  %5408 = load ptr, ptr %5396, align 8, !tbaa !58
  %5409 = getelementptr inbounds ptr, ptr %5408, i64 3
  %5410 = load ptr, ptr %5409, align 8
  call void %5410(ptr noundef nonnull align 8 dereferenceable(16) %5396) #21
  br label %5422

5411:                                             ; preds = %5398
  %5412 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5413 = icmp eq i8 %5412, 0
  br i1 %5413, label %5416, label %5414

5414:                                             ; preds = %5411
  %5415 = add nsw i32 %5402, -1
  store i32 %5415, ptr %5399, align 8, !tbaa !73
  br label %5418

5416:                                             ; preds = %5411
  %5417 = atomicrmw volatile add ptr %5399, i32 -1 acq_rel, align 4
  br label %5418

5418:                                             ; preds = %5416, %5414
  %5419 = phi i32 [ %5402, %5414 ], [ %5417, %5416 ]
  %5420 = icmp eq i32 %5419, 1
  br i1 %5420, label %5421, label %5422, !prof !42

5421:                                             ; preds = %5418
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5396) #21
  br label %5422

5422:                                             ; preds = %5421, %5418, %5403, %5394
  %5423 = getelementptr inbounds %struct.TestCase, ptr %288, i64 6, i32 2
  %5424 = load ptr, ptr %5423, align 8, !tbaa !23
  %5425 = getelementptr inbounds %struct.TestCase, ptr %288, i64 6, i32 2, i32 2
  %5426 = icmp eq ptr %5424, %5425
  br i1 %5426, label %5428, label %5427

5427:                                             ; preds = %5422
  call void @_ZdlPv(ptr noundef %5424) #22
  br label %5428

5428:                                             ; preds = %5427, %5422
  %5429 = load ptr, ptr %4860, align 8, !tbaa !23
  %5430 = getelementptr inbounds %struct.TestCase, ptr %288, i64 6, i32 0, i32 2
  %5431 = icmp eq ptr %5429, %5430
  br i1 %5431, label %5433, label %5432

5432:                                             ; preds = %5428
  call void @_ZdlPv(ptr noundef %5429) #22
  br label %5433

5433:                                             ; preds = %5428, %5432
  %5434 = getelementptr inbounds %struct.TestCase, ptr %288, i64 5, i32 3, i32 0, i32 1
  %5435 = load ptr, ptr %5434, align 8, !tbaa !88
  %5436 = icmp eq ptr %5435, null
  br i1 %5436, label %5461, label %5437

5437:                                             ; preds = %5433
  %5438 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5435, i64 0, i32 1
  %5439 = load atomic i64, ptr %5438 acquire, align 8
  %5440 = icmp eq i64 %5439, 4294967297
  %5441 = trunc i64 %5439 to i32
  br i1 %5440, label %5442, label %5450

5442:                                             ; preds = %5437
  store i32 0, ptr %5438, align 8, !tbaa !90
  %5443 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5435, i64 0, i32 2
  store i32 0, ptr %5443, align 4, !tbaa !92
  %5444 = load ptr, ptr %5435, align 8, !tbaa !58
  %5445 = getelementptr inbounds ptr, ptr %5444, i64 2
  %5446 = load ptr, ptr %5445, align 8
  call void %5446(ptr noundef nonnull align 8 dereferenceable(16) %5435) #21
  %5447 = load ptr, ptr %5435, align 8, !tbaa !58
  %5448 = getelementptr inbounds ptr, ptr %5447, i64 3
  %5449 = load ptr, ptr %5448, align 8
  call void %5449(ptr noundef nonnull align 8 dereferenceable(16) %5435) #21
  br label %5461

5450:                                             ; preds = %5437
  %5451 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5452 = icmp eq i8 %5451, 0
  br i1 %5452, label %5455, label %5453

5453:                                             ; preds = %5450
  %5454 = add nsw i32 %5441, -1
  store i32 %5454, ptr %5438, align 8, !tbaa !73
  br label %5457

5455:                                             ; preds = %5450
  %5456 = atomicrmw volatile add ptr %5438, i32 -1 acq_rel, align 4
  br label %5457

5457:                                             ; preds = %5455, %5453
  %5458 = phi i32 [ %5441, %5453 ], [ %5456, %5455 ]
  %5459 = icmp eq i32 %5458, 1
  br i1 %5459, label %5460, label %5461, !prof !42

5460:                                             ; preds = %5457
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5435) #21
  br label %5461

5461:                                             ; preds = %5460, %5457, %5442, %5433
  %5462 = getelementptr inbounds %struct.TestCase, ptr %288, i64 5, i32 2
  %5463 = load ptr, ptr %5462, align 8, !tbaa !23
  %5464 = getelementptr inbounds %struct.TestCase, ptr %288, i64 5, i32 2, i32 2
  %5465 = icmp eq ptr %5463, %5464
  br i1 %5465, label %5467, label %5466

5466:                                             ; preds = %5461
  call void @_ZdlPv(ptr noundef %5463) #22
  br label %5467

5467:                                             ; preds = %5466, %5461
  %5468 = load ptr, ptr %4851, align 8, !tbaa !23
  %5469 = getelementptr inbounds %struct.TestCase, ptr %288, i64 5, i32 0, i32 2
  %5470 = icmp eq ptr %5468, %5469
  br i1 %5470, label %5472, label %5471

5471:                                             ; preds = %5467
  call void @_ZdlPv(ptr noundef %5468) #22
  br label %5472

5472:                                             ; preds = %5467, %5471
  %5473 = getelementptr inbounds %struct.TestCase, ptr %288, i64 4, i32 3, i32 0, i32 1
  %5474 = load ptr, ptr %5473, align 8, !tbaa !88
  %5475 = icmp eq ptr %5474, null
  br i1 %5475, label %5500, label %5476

5476:                                             ; preds = %5472
  %5477 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5474, i64 0, i32 1
  %5478 = load atomic i64, ptr %5477 acquire, align 8
  %5479 = icmp eq i64 %5478, 4294967297
  %5480 = trunc i64 %5478 to i32
  br i1 %5479, label %5481, label %5489

5481:                                             ; preds = %5476
  store i32 0, ptr %5477, align 8, !tbaa !90
  %5482 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5474, i64 0, i32 2
  store i32 0, ptr %5482, align 4, !tbaa !92
  %5483 = load ptr, ptr %5474, align 8, !tbaa !58
  %5484 = getelementptr inbounds ptr, ptr %5483, i64 2
  %5485 = load ptr, ptr %5484, align 8
  call void %5485(ptr noundef nonnull align 8 dereferenceable(16) %5474) #21
  %5486 = load ptr, ptr %5474, align 8, !tbaa !58
  %5487 = getelementptr inbounds ptr, ptr %5486, i64 3
  %5488 = load ptr, ptr %5487, align 8
  call void %5488(ptr noundef nonnull align 8 dereferenceable(16) %5474) #21
  br label %5500

5489:                                             ; preds = %5476
  %5490 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5491 = icmp eq i8 %5490, 0
  br i1 %5491, label %5494, label %5492

5492:                                             ; preds = %5489
  %5493 = add nsw i32 %5480, -1
  store i32 %5493, ptr %5477, align 8, !tbaa !73
  br label %5496

5494:                                             ; preds = %5489
  %5495 = atomicrmw volatile add ptr %5477, i32 -1 acq_rel, align 4
  br label %5496

5496:                                             ; preds = %5494, %5492
  %5497 = phi i32 [ %5480, %5492 ], [ %5495, %5494 ]
  %5498 = icmp eq i32 %5497, 1
  br i1 %5498, label %5499, label %5500, !prof !42

5499:                                             ; preds = %5496
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5474) #21
  br label %5500

5500:                                             ; preds = %5499, %5496, %5481, %5472
  %5501 = getelementptr inbounds %struct.TestCase, ptr %288, i64 4, i32 2
  %5502 = load ptr, ptr %5501, align 8, !tbaa !23
  %5503 = getelementptr inbounds %struct.TestCase, ptr %288, i64 4, i32 2, i32 2
  %5504 = icmp eq ptr %5502, %5503
  br i1 %5504, label %5506, label %5505

5505:                                             ; preds = %5500
  call void @_ZdlPv(ptr noundef %5502) #22
  br label %5506

5506:                                             ; preds = %5505, %5500
  %5507 = load ptr, ptr %4842, align 8, !tbaa !23
  %5508 = getelementptr inbounds %struct.TestCase, ptr %288, i64 4, i32 0, i32 2
  %5509 = icmp eq ptr %5507, %5508
  br i1 %5509, label %5511, label %5510

5510:                                             ; preds = %5506
  call void @_ZdlPv(ptr noundef %5507) #22
  br label %5511

5511:                                             ; preds = %5506, %5510
  %5512 = getelementptr inbounds %struct.TestCase, ptr %288, i64 3, i32 3, i32 0, i32 1
  %5513 = load ptr, ptr %5512, align 8, !tbaa !88
  %5514 = icmp eq ptr %5513, null
  br i1 %5514, label %5539, label %5515

5515:                                             ; preds = %5511
  %5516 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5513, i64 0, i32 1
  %5517 = load atomic i64, ptr %5516 acquire, align 8
  %5518 = icmp eq i64 %5517, 4294967297
  %5519 = trunc i64 %5517 to i32
  br i1 %5518, label %5520, label %5528

5520:                                             ; preds = %5515
  store i32 0, ptr %5516, align 8, !tbaa !90
  %5521 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5513, i64 0, i32 2
  store i32 0, ptr %5521, align 4, !tbaa !92
  %5522 = load ptr, ptr %5513, align 8, !tbaa !58
  %5523 = getelementptr inbounds ptr, ptr %5522, i64 2
  %5524 = load ptr, ptr %5523, align 8
  call void %5524(ptr noundef nonnull align 8 dereferenceable(16) %5513) #21
  %5525 = load ptr, ptr %5513, align 8, !tbaa !58
  %5526 = getelementptr inbounds ptr, ptr %5525, i64 3
  %5527 = load ptr, ptr %5526, align 8
  call void %5527(ptr noundef nonnull align 8 dereferenceable(16) %5513) #21
  br label %5539

5528:                                             ; preds = %5515
  %5529 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5530 = icmp eq i8 %5529, 0
  br i1 %5530, label %5533, label %5531

5531:                                             ; preds = %5528
  %5532 = add nsw i32 %5519, -1
  store i32 %5532, ptr %5516, align 8, !tbaa !73
  br label %5535

5533:                                             ; preds = %5528
  %5534 = atomicrmw volatile add ptr %5516, i32 -1 acq_rel, align 4
  br label %5535

5535:                                             ; preds = %5533, %5531
  %5536 = phi i32 [ %5519, %5531 ], [ %5534, %5533 ]
  %5537 = icmp eq i32 %5536, 1
  br i1 %5537, label %5538, label %5539, !prof !42

5538:                                             ; preds = %5535
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5513) #21
  br label %5539

5539:                                             ; preds = %5538, %5535, %5520, %5511
  %5540 = getelementptr inbounds %struct.TestCase, ptr %288, i64 3, i32 2
  %5541 = load ptr, ptr %5540, align 8, !tbaa !23
  %5542 = getelementptr inbounds %struct.TestCase, ptr %288, i64 3, i32 2, i32 2
  %5543 = icmp eq ptr %5541, %5542
  br i1 %5543, label %5545, label %5544

5544:                                             ; preds = %5539
  call void @_ZdlPv(ptr noundef %5541) #22
  br label %5545

5545:                                             ; preds = %5544, %5539
  %5546 = load ptr, ptr %4833, align 8, !tbaa !23
  %5547 = getelementptr inbounds %struct.TestCase, ptr %288, i64 3, i32 0, i32 2
  %5548 = icmp eq ptr %5546, %5547
  br i1 %5548, label %5550, label %5549

5549:                                             ; preds = %5545
  call void @_ZdlPv(ptr noundef %5546) #22
  br label %5550

5550:                                             ; preds = %5545, %5549
  %5551 = getelementptr inbounds %struct.TestCase, ptr %288, i64 2, i32 3, i32 0, i32 1
  %5552 = load ptr, ptr %5551, align 8, !tbaa !88
  %5553 = icmp eq ptr %5552, null
  br i1 %5553, label %5578, label %5554

5554:                                             ; preds = %5550
  %5555 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5552, i64 0, i32 1
  %5556 = load atomic i64, ptr %5555 acquire, align 8
  %5557 = icmp eq i64 %5556, 4294967297
  %5558 = trunc i64 %5556 to i32
  br i1 %5557, label %5559, label %5567

5559:                                             ; preds = %5554
  store i32 0, ptr %5555, align 8, !tbaa !90
  %5560 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5552, i64 0, i32 2
  store i32 0, ptr %5560, align 4, !tbaa !92
  %5561 = load ptr, ptr %5552, align 8, !tbaa !58
  %5562 = getelementptr inbounds ptr, ptr %5561, i64 2
  %5563 = load ptr, ptr %5562, align 8
  call void %5563(ptr noundef nonnull align 8 dereferenceable(16) %5552) #21
  %5564 = load ptr, ptr %5552, align 8, !tbaa !58
  %5565 = getelementptr inbounds ptr, ptr %5564, i64 3
  %5566 = load ptr, ptr %5565, align 8
  call void %5566(ptr noundef nonnull align 8 dereferenceable(16) %5552) #21
  br label %5578

5567:                                             ; preds = %5554
  %5568 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5569 = icmp eq i8 %5568, 0
  br i1 %5569, label %5572, label %5570

5570:                                             ; preds = %5567
  %5571 = add nsw i32 %5558, -1
  store i32 %5571, ptr %5555, align 8, !tbaa !73
  br label %5574

5572:                                             ; preds = %5567
  %5573 = atomicrmw volatile add ptr %5555, i32 -1 acq_rel, align 4
  br label %5574

5574:                                             ; preds = %5572, %5570
  %5575 = phi i32 [ %5558, %5570 ], [ %5573, %5572 ]
  %5576 = icmp eq i32 %5575, 1
  br i1 %5576, label %5577, label %5578, !prof !42

5577:                                             ; preds = %5574
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5552) #21
  br label %5578

5578:                                             ; preds = %5577, %5574, %5559, %5550
  %5579 = getelementptr inbounds %struct.TestCase, ptr %288, i64 2, i32 2
  %5580 = load ptr, ptr %5579, align 8, !tbaa !23
  %5581 = getelementptr inbounds %struct.TestCase, ptr %288, i64 2, i32 2, i32 2
  %5582 = icmp eq ptr %5580, %5581
  br i1 %5582, label %5584, label %5583

5583:                                             ; preds = %5578
  call void @_ZdlPv(ptr noundef %5580) #22
  br label %5584

5584:                                             ; preds = %5583, %5578
  %5585 = load ptr, ptr %4824, align 8, !tbaa !23
  %5586 = getelementptr inbounds %struct.TestCase, ptr %288, i64 2, i32 0, i32 2
  %5587 = icmp eq ptr %5585, %5586
  br i1 %5587, label %5589, label %5588

5588:                                             ; preds = %5584
  call void @_ZdlPv(ptr noundef %5585) #22
  br label %5589

5589:                                             ; preds = %5584, %5588
  %5590 = getelementptr inbounds %struct.TestCase, ptr %288, i64 1, i32 3, i32 0, i32 1
  %5591 = load ptr, ptr %5590, align 8, !tbaa !88
  %5592 = icmp eq ptr %5591, null
  br i1 %5592, label %5617, label %5593

5593:                                             ; preds = %5589
  %5594 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5591, i64 0, i32 1
  %5595 = load atomic i64, ptr %5594 acquire, align 8
  %5596 = icmp eq i64 %5595, 4294967297
  %5597 = trunc i64 %5595 to i32
  br i1 %5596, label %5598, label %5606

5598:                                             ; preds = %5593
  store i32 0, ptr %5594, align 8, !tbaa !90
  %5599 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5591, i64 0, i32 2
  store i32 0, ptr %5599, align 4, !tbaa !92
  %5600 = load ptr, ptr %5591, align 8, !tbaa !58
  %5601 = getelementptr inbounds ptr, ptr %5600, i64 2
  %5602 = load ptr, ptr %5601, align 8
  call void %5602(ptr noundef nonnull align 8 dereferenceable(16) %5591) #21
  %5603 = load ptr, ptr %5591, align 8, !tbaa !58
  %5604 = getelementptr inbounds ptr, ptr %5603, i64 3
  %5605 = load ptr, ptr %5604, align 8
  call void %5605(ptr noundef nonnull align 8 dereferenceable(16) %5591) #21
  br label %5617

5606:                                             ; preds = %5593
  %5607 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5608 = icmp eq i8 %5607, 0
  br i1 %5608, label %5611, label %5609

5609:                                             ; preds = %5606
  %5610 = add nsw i32 %5597, -1
  store i32 %5610, ptr %5594, align 8, !tbaa !73
  br label %5613

5611:                                             ; preds = %5606
  %5612 = atomicrmw volatile add ptr %5594, i32 -1 acq_rel, align 4
  br label %5613

5613:                                             ; preds = %5611, %5609
  %5614 = phi i32 [ %5597, %5609 ], [ %5612, %5611 ]
  %5615 = icmp eq i32 %5614, 1
  br i1 %5615, label %5616, label %5617, !prof !42

5616:                                             ; preds = %5613
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5591) #21
  br label %5617

5617:                                             ; preds = %5616, %5613, %5598, %5589
  %5618 = getelementptr inbounds %struct.TestCase, ptr %288, i64 1, i32 2
  %5619 = load ptr, ptr %5618, align 8, !tbaa !23
  %5620 = getelementptr inbounds %struct.TestCase, ptr %288, i64 1, i32 2, i32 2
  %5621 = icmp eq ptr %5619, %5620
  br i1 %5621, label %5623, label %5622

5622:                                             ; preds = %5617
  call void @_ZdlPv(ptr noundef %5619) #22
  br label %5623

5623:                                             ; preds = %5622, %5617
  %5624 = load ptr, ptr %4815, align 8, !tbaa !23
  %5625 = getelementptr inbounds %struct.TestCase, ptr %288, i64 1, i32 0, i32 2
  %5626 = icmp eq ptr %5624, %5625
  br i1 %5626, label %5628, label %5627

5627:                                             ; preds = %5623
  call void @_ZdlPv(ptr noundef %5624) #22
  br label %5628

5628:                                             ; preds = %5623, %5627
  %5629 = getelementptr inbounds %struct.TestCase, ptr %288, i64 0, i32 3, i32 0, i32 1
  %5630 = load ptr, ptr %5629, align 8, !tbaa !88
  %5631 = icmp eq ptr %5630, null
  br i1 %5631, label %5656, label %5632

5632:                                             ; preds = %5628
  %5633 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5630, i64 0, i32 1
  %5634 = load atomic i64, ptr %5633 acquire, align 8
  %5635 = icmp eq i64 %5634, 4294967297
  %5636 = trunc i64 %5634 to i32
  br i1 %5635, label %5637, label %5645

5637:                                             ; preds = %5632
  store i32 0, ptr %5633, align 8, !tbaa !90
  %5638 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5630, i64 0, i32 2
  store i32 0, ptr %5638, align 4, !tbaa !92
  %5639 = load ptr, ptr %5630, align 8, !tbaa !58
  %5640 = getelementptr inbounds ptr, ptr %5639, i64 2
  %5641 = load ptr, ptr %5640, align 8
  call void %5641(ptr noundef nonnull align 8 dereferenceable(16) %5630) #21
  %5642 = load ptr, ptr %5630, align 8, !tbaa !58
  %5643 = getelementptr inbounds ptr, ptr %5642, i64 3
  %5644 = load ptr, ptr %5643, align 8
  call void %5644(ptr noundef nonnull align 8 dereferenceable(16) %5630) #21
  br label %5656

5645:                                             ; preds = %5632
  %5646 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5647 = icmp eq i8 %5646, 0
  br i1 %5647, label %5650, label %5648

5648:                                             ; preds = %5645
  %5649 = add nsw i32 %5636, -1
  store i32 %5649, ptr %5633, align 8, !tbaa !73
  br label %5652

5650:                                             ; preds = %5645
  %5651 = atomicrmw volatile add ptr %5633, i32 -1 acq_rel, align 4
  br label %5652

5652:                                             ; preds = %5650, %5648
  %5653 = phi i32 [ %5636, %5648 ], [ %5651, %5650 ]
  %5654 = icmp eq i32 %5653, 1
  br i1 %5654, label %5655, label %5656, !prof !42

5655:                                             ; preds = %5652
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5630) #21
  br label %5656

5656:                                             ; preds = %5655, %5652, %5637, %5628
  %5657 = getelementptr inbounds %struct.TestCase, ptr %288, i64 0, i32 2
  %5658 = load ptr, ptr %5657, align 8, !tbaa !23
  %5659 = getelementptr inbounds %struct.TestCase, ptr %288, i64 0, i32 2, i32 2
  %5660 = icmp eq ptr %5658, %5659
  br i1 %5660, label %5662, label %5661

5661:                                             ; preds = %5656
  call void @_ZdlPv(ptr noundef %5658) #22
  br label %5662

5662:                                             ; preds = %5661, %5656
  %5663 = load ptr, ptr %288, align 8, !tbaa !23
  %5664 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %288, i64 0, i32 2
  %5665 = icmp eq ptr %5663, %5664
  br i1 %5665, label %5667, label %5666

5666:                                             ; preds = %5662
  call void @_ZdlPv(ptr noundef %5663) #22
  br label %5667

5667:                                             ; preds = %5666, %5662, %5079
  %5668 = phi { ptr, i32 } [ %5080, %5079 ], [ %5082, %5662 ], [ %5082, %5666 ]
  %5669 = phi i1 [ true, %5079 ], [ false, %5662 ], [ false, %5666 ]
  %5670 = load ptr, ptr %303, align 8, !tbaa !23
  %5671 = icmp eq ptr %5670, %4921
  br i1 %5671, label %5673, label %5672

5672:                                             ; preds = %5667
  call void @_ZdlPv(ptr noundef %5670) #22
  br label %5673

5673:                                             ; preds = %5672, %5667, %5077
  %5674 = phi ptr [ %4915, %5077 ], [ %4920, %5672 ], [ %4920, %5667 ]
  %5675 = phi { ptr, i32 } [ %5078, %5077 ], [ %5668, %5672 ], [ %5668, %5667 ]
  %5676 = phi i1 [ true, %5077 ], [ %5669, %5672 ], [ %5669, %5667 ]
  %5677 = load ptr, ptr %302, align 8, !tbaa !23
  %5678 = icmp eq ptr %5677, %4916
  br i1 %5678, label %5680, label %5679

5679:                                             ; preds = %5673
  call void @_ZdlPv(ptr noundef %5677) #22
  br label %5680

5680:                                             ; preds = %5679, %5673, %5075
  %5681 = phi ptr [ %4910, %5075 ], [ %5674, %5679 ], [ %5674, %5673 ]
  %5682 = phi { ptr, i32 } [ %5076, %5075 ], [ %5675, %5679 ], [ %5675, %5673 ]
  %5683 = phi i1 [ true, %5075 ], [ %5676, %5679 ], [ %5676, %5673 ]
  %5684 = load ptr, ptr %301, align 8, !tbaa !23
  %5685 = icmp eq ptr %5684, %4911
  br i1 %5685, label %5687, label %5686

5686:                                             ; preds = %5680
  call void @_ZdlPv(ptr noundef %5684) #22
  br label %5687

5687:                                             ; preds = %5686, %5680, %5073
  %5688 = phi ptr [ %4901, %5073 ], [ %5681, %5686 ], [ %5681, %5680 ]
  %5689 = phi { ptr, i32 } [ %5074, %5073 ], [ %5682, %5686 ], [ %5682, %5680 ]
  %5690 = phi i1 [ true, %5073 ], [ %5683, %5686 ], [ %5683, %5680 ]
  %5691 = load ptr, ptr %300, align 8, !tbaa !23
  %5692 = icmp eq ptr %5691, %4902
  br i1 %5692, label %5694, label %5693

5693:                                             ; preds = %5687
  call void @_ZdlPv(ptr noundef %5691) #22
  br label %5694

5694:                                             ; preds = %5693, %5687, %5071, %5069
  %5695 = phi ptr [ %4892, %5069 ], [ %4901, %5071 ], [ %5688, %5687 ], [ %5688, %5693 ]
  %5696 = phi { ptr, i32 } [ %5070, %5069 ], [ %5072, %5071 ], [ %5689, %5687 ], [ %5689, %5693 ]
  %5697 = phi i1 [ true, %5069 ], [ true, %5071 ], [ %5690, %5687 ], [ %5690, %5693 ]
  %5698 = load ptr, ptr %299, align 8, !tbaa !23
  %5699 = icmp eq ptr %5698, %4893
  br i1 %5699, label %5701, label %5700

5700:                                             ; preds = %5694
  call void @_ZdlPv(ptr noundef %5698) #22
  br label %5701

5701:                                             ; preds = %5700, %5694, %5067, %5065
  %5702 = phi ptr [ %4883, %5065 ], [ %4892, %5067 ], [ %5695, %5694 ], [ %5695, %5700 ]
  %5703 = phi { ptr, i32 } [ %5066, %5065 ], [ %5068, %5067 ], [ %5696, %5694 ], [ %5696, %5700 ]
  %5704 = phi i1 [ true, %5065 ], [ true, %5067 ], [ %5697, %5694 ], [ %5697, %5700 ]
  %5705 = load ptr, ptr %298, align 8, !tbaa !23
  %5706 = icmp eq ptr %5705, %4884
  br i1 %5706, label %5708, label %5707

5707:                                             ; preds = %5701
  call void @_ZdlPv(ptr noundef %5705) #22
  br label %5708

5708:                                             ; preds = %5707, %5701, %5063, %5061
  %5709 = phi ptr [ %4874, %5061 ], [ %4883, %5063 ], [ %5702, %5701 ], [ %5702, %5707 ]
  %5710 = phi { ptr, i32 } [ %5062, %5061 ], [ %5064, %5063 ], [ %5703, %5701 ], [ %5703, %5707 ]
  %5711 = phi i1 [ true, %5061 ], [ true, %5063 ], [ %5704, %5701 ], [ %5704, %5707 ]
  %5712 = load ptr, ptr %297, align 8, !tbaa !23
  %5713 = icmp eq ptr %5712, %4875
  br i1 %5713, label %5715, label %5714

5714:                                             ; preds = %5708
  call void @_ZdlPv(ptr noundef %5712) #22
  br label %5715

5715:                                             ; preds = %5714, %5708, %5059, %5057
  %5716 = phi ptr [ %4869, %5057 ], [ %4874, %5059 ], [ %5709, %5708 ], [ %5709, %5714 ]
  %5717 = phi { ptr, i32 } [ %5058, %5057 ], [ %5060, %5059 ], [ %5710, %5708 ], [ %5710, %5714 ]
  %5718 = phi i1 [ true, %5057 ], [ true, %5059 ], [ %5711, %5708 ], [ %5711, %5714 ]
  %5719 = load ptr, ptr %296, align 8, !tbaa !23
  %5720 = icmp eq ptr %5719, %4870
  br i1 %5720, label %5722, label %5721

5721:                                             ; preds = %5715
  call void @_ZdlPv(ptr noundef %5719) #22
  br label %5722

5722:                                             ; preds = %5721, %5715, %5055
  %5723 = phi ptr [ %4860, %5055 ], [ %5716, %5721 ], [ %5716, %5715 ]
  %5724 = phi { ptr, i32 } [ %5056, %5055 ], [ %5717, %5721 ], [ %5717, %5715 ]
  %5725 = phi i1 [ true, %5055 ], [ %5718, %5721 ], [ %5718, %5715 ]
  %5726 = load ptr, ptr %295, align 8, !tbaa !23
  %5727 = icmp eq ptr %5726, %4861
  br i1 %5727, label %5729, label %5728

5728:                                             ; preds = %5722
  call void @_ZdlPv(ptr noundef %5726) #22
  br label %5729

5729:                                             ; preds = %5728, %5722, %5053, %5051
  %5730 = phi ptr [ %4851, %5051 ], [ %4860, %5053 ], [ %5723, %5722 ], [ %5723, %5728 ]
  %5731 = phi { ptr, i32 } [ %5052, %5051 ], [ %5054, %5053 ], [ %5724, %5722 ], [ %5724, %5728 ]
  %5732 = phi i1 [ true, %5051 ], [ true, %5053 ], [ %5725, %5722 ], [ %5725, %5728 ]
  %5733 = load ptr, ptr %294, align 8, !tbaa !23
  %5734 = icmp eq ptr %5733, %4852
  br i1 %5734, label %5736, label %5735

5735:                                             ; preds = %5729
  call void @_ZdlPv(ptr noundef %5733) #22
  br label %5736

5736:                                             ; preds = %5735, %5729, %5049, %5047
  %5737 = phi ptr [ %4842, %5047 ], [ %4851, %5049 ], [ %5730, %5729 ], [ %5730, %5735 ]
  %5738 = phi { ptr, i32 } [ %5048, %5047 ], [ %5050, %5049 ], [ %5731, %5729 ], [ %5731, %5735 ]
  %5739 = phi i1 [ true, %5047 ], [ true, %5049 ], [ %5732, %5729 ], [ %5732, %5735 ]
  %5740 = load ptr, ptr %293, align 8, !tbaa !23
  %5741 = icmp eq ptr %5740, %4843
  br i1 %5741, label %5743, label %5742

5742:                                             ; preds = %5736
  call void @_ZdlPv(ptr noundef %5740) #22
  br label %5743

5743:                                             ; preds = %5742, %5736, %5045, %5043
  %5744 = phi ptr [ %4833, %5043 ], [ %4842, %5045 ], [ %5737, %5736 ], [ %5737, %5742 ]
  %5745 = phi { ptr, i32 } [ %5044, %5043 ], [ %5046, %5045 ], [ %5738, %5736 ], [ %5738, %5742 ]
  %5746 = phi i1 [ true, %5043 ], [ true, %5045 ], [ %5739, %5736 ], [ %5739, %5742 ]
  %5747 = load ptr, ptr %292, align 8, !tbaa !23
  %5748 = icmp eq ptr %5747, %4834
  br i1 %5748, label %5750, label %5749

5749:                                             ; preds = %5743
  call void @_ZdlPv(ptr noundef %5747) #22
  br label %5750

5750:                                             ; preds = %5749, %5743, %5041, %5039
  %5751 = phi ptr [ %4824, %5039 ], [ %4833, %5041 ], [ %5744, %5743 ], [ %5744, %5749 ]
  %5752 = phi { ptr, i32 } [ %5040, %5039 ], [ %5042, %5041 ], [ %5745, %5743 ], [ %5745, %5749 ]
  %5753 = phi i1 [ true, %5039 ], [ true, %5041 ], [ %5746, %5743 ], [ %5746, %5749 ]
  %5754 = load ptr, ptr %291, align 8, !tbaa !23
  %5755 = icmp eq ptr %5754, %4825
  br i1 %5755, label %5757, label %5756

5756:                                             ; preds = %5750
  call void @_ZdlPv(ptr noundef %5754) #22
  br label %5757

5757:                                             ; preds = %5756, %5750, %5037, %5035
  %5758 = phi ptr [ %4815, %5035 ], [ %4824, %5037 ], [ %5751, %5750 ], [ %5751, %5756 ]
  %5759 = phi { ptr, i32 } [ %5036, %5035 ], [ %5038, %5037 ], [ %5752, %5750 ], [ %5752, %5756 ]
  %5760 = phi i1 [ true, %5035 ], [ true, %5037 ], [ %5753, %5750 ], [ %5753, %5756 ]
  %5761 = load ptr, ptr %290, align 8, !tbaa !23
  %5762 = icmp eq ptr %5761, %4816
  br i1 %5762, label %5764, label %5763

5763:                                             ; preds = %5757
  call void @_ZdlPv(ptr noundef %5761) #22
  br label %5764

5764:                                             ; preds = %5763, %5757, %5033, %5031
  %5765 = phi ptr [ %288, %5031 ], [ %4815, %5033 ], [ %5758, %5757 ], [ %5758, %5763 ]
  %5766 = phi { ptr, i32 } [ %5032, %5031 ], [ %5034, %5033 ], [ %5759, %5757 ], [ %5759, %5763 ]
  %5767 = phi i1 [ true, %5031 ], [ true, %5033 ], [ %5760, %5757 ], [ %5760, %5763 ]
  %5768 = load ptr, ptr %289, align 8, !tbaa !23
  %5769 = icmp eq ptr %5768, %4808
  br i1 %5769, label %5771, label %5770

5770:                                             ; preds = %5764
  call void @_ZdlPv(ptr noundef %5768) #22
  br label %5771

5771:                                             ; preds = %5770, %5764
  %5772 = icmp ne ptr %288, %5765
  %5773 = select i1 %5767, i1 %5772, i1 false
  br i1 %5773, label %5774, label %5817

5774:                                             ; preds = %5771, %5815
  %5775 = phi ptr [ %5776, %5815 ], [ %5765, %5771 ]
  %5776 = getelementptr inbounds %struct.TestCase, ptr %5775, i64 -1
  %5777 = getelementptr %struct.TestCase, ptr %5775, i64 -1, i32 3, i32 0, i32 1
  %5778 = load ptr, ptr %5777, align 8, !tbaa !88
  %5779 = icmp eq ptr %5778, null
  br i1 %5779, label %5804, label %5780

5780:                                             ; preds = %5774
  %5781 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5778, i64 0, i32 1
  %5782 = load atomic i64, ptr %5781 acquire, align 8
  %5783 = icmp eq i64 %5782, 4294967297
  %5784 = trunc i64 %5782 to i32
  br i1 %5783, label %5785, label %5793

5785:                                             ; preds = %5780
  store i32 0, ptr %5781, align 8, !tbaa !90
  %5786 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5778, i64 0, i32 2
  store i32 0, ptr %5786, align 4, !tbaa !92
  %5787 = load ptr, ptr %5778, align 8, !tbaa !58
  %5788 = getelementptr inbounds ptr, ptr %5787, i64 2
  %5789 = load ptr, ptr %5788, align 8
  call void %5789(ptr noundef nonnull align 8 dereferenceable(16) %5778) #21
  %5790 = load ptr, ptr %5778, align 8, !tbaa !58
  %5791 = getelementptr inbounds ptr, ptr %5790, i64 3
  %5792 = load ptr, ptr %5791, align 8
  call void %5792(ptr noundef nonnull align 8 dereferenceable(16) %5778) #21
  br label %5804

5793:                                             ; preds = %5780
  %5794 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5795 = icmp eq i8 %5794, 0
  br i1 %5795, label %5798, label %5796

5796:                                             ; preds = %5793
  %5797 = add nsw i32 %5784, -1
  store i32 %5797, ptr %5781, align 8, !tbaa !73
  br label %5800

5798:                                             ; preds = %5793
  %5799 = atomicrmw volatile add ptr %5781, i32 -1 acq_rel, align 4
  br label %5800

5800:                                             ; preds = %5798, %5796
  %5801 = phi i32 [ %5784, %5796 ], [ %5799, %5798 ]
  %5802 = icmp eq i32 %5801, 1
  br i1 %5802, label %5803, label %5804, !prof !42

5803:                                             ; preds = %5800
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5778) #21
  br label %5804

5804:                                             ; preds = %5803, %5800, %5785, %5774
  %5805 = getelementptr %struct.TestCase, ptr %5775, i64 -1, i32 2
  %5806 = load ptr, ptr %5805, align 8, !tbaa !23
  %5807 = getelementptr %struct.TestCase, ptr %5775, i64 -1, i32 2, i32 2
  %5808 = icmp eq ptr %5806, %5807
  br i1 %5808, label %5810, label %5809

5809:                                             ; preds = %5804
  call void @_ZdlPv(ptr noundef %5806) #22
  br label %5810

5810:                                             ; preds = %5809, %5804
  %5811 = load ptr, ptr %5776, align 8, !tbaa !23
  %5812 = getelementptr %struct.TestCase, ptr %5775, i64 -1, i32 0, i32 2
  %5813 = icmp eq ptr %5811, %5812
  br i1 %5813, label %5815, label %5814

5814:                                             ; preds = %5810
  call void @_ZdlPv(ptr noundef %5811) #22
  br label %5815

5815:                                             ; preds = %5810, %5814
  %5816 = icmp eq ptr %5776, %288
  br i1 %5816, label %5817, label %5774

5817:                                             ; preds = %5815, %5771
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %288) #21
  br label %762

5818:                                             ; preds = %5027, %5030
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %288) #21
  store i32 %4925, ptr @dummy187, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %289)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %290)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %291)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %292)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %293)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %294)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %295)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %296)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %297)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %298)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %299)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %300)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %301)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %302)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %303)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %276)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %275) #21
  %5819 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %276, i64 0, i32 2
  store ptr %5819, ptr %276, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %274) #21
  store i64 39, ptr %274, align 8, !tbaa !74
  %5820 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %276, ptr noundef nonnull align 8 dereferenceable(8) %274, i64 noundef 0)
  store ptr %5820, ptr %276, align 8, !tbaa !23
  %5821 = load i64, ptr %274, align 8, !tbaa !74
  store i64 %5821, ptr %5819, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(39) %5820, ptr noundef nonnull align 1 dereferenceable(39) @.str.90, i64 39, i1 false)
  %5822 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %276, i64 0, i32 1
  store i64 %5821, ptr %5822, align 8, !tbaa !10
  %5823 = getelementptr inbounds i8, ptr %5820, i64 %5821
  store i8 0, ptr %5823, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %274) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %275, ptr noundef nonnull %276, i32 noundef 0)
          to label %5824 unwind label %5869

5824:                                             ; preds = %5818
  %5825 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 4, ptr nonnull %275, i64 1)
          to label %5826 unwind label %5871

5826:                                             ; preds = %5824
  %5827 = getelementptr inbounds %struct.TestCase, ptr %275, i64 0, i32 3, i32 0, i32 1
  %5828 = load ptr, ptr %5827, align 8, !tbaa !88
  %5829 = icmp eq ptr %5828, null
  br i1 %5829, label %5854, label %5830

5830:                                             ; preds = %5826
  %5831 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5828, i64 0, i32 1
  %5832 = load atomic i64, ptr %5831 acquire, align 8
  %5833 = icmp eq i64 %5832, 4294967297
  %5834 = trunc i64 %5832 to i32
  br i1 %5833, label %5835, label %5843

5835:                                             ; preds = %5830
  store i32 0, ptr %5831, align 8, !tbaa !90
  %5836 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5828, i64 0, i32 2
  store i32 0, ptr %5836, align 4, !tbaa !92
  %5837 = load ptr, ptr %5828, align 8, !tbaa !58
  %5838 = getelementptr inbounds ptr, ptr %5837, i64 2
  %5839 = load ptr, ptr %5838, align 8
  call void %5839(ptr noundef nonnull align 8 dereferenceable(16) %5828) #21
  %5840 = load ptr, ptr %5828, align 8, !tbaa !58
  %5841 = getelementptr inbounds ptr, ptr %5840, i64 3
  %5842 = load ptr, ptr %5841, align 8
  call void %5842(ptr noundef nonnull align 8 dereferenceable(16) %5828) #21
  br label %5854

5843:                                             ; preds = %5830
  %5844 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5845 = icmp eq i8 %5844, 0
  br i1 %5845, label %5848, label %5846

5846:                                             ; preds = %5843
  %5847 = add nsw i32 %5834, -1
  store i32 %5847, ptr %5831, align 8, !tbaa !73
  br label %5850

5848:                                             ; preds = %5843
  %5849 = atomicrmw volatile add ptr %5831, i32 -1 acq_rel, align 4
  br label %5850

5850:                                             ; preds = %5848, %5846
  %5851 = phi i32 [ %5834, %5846 ], [ %5849, %5848 ]
  %5852 = icmp eq i32 %5851, 1
  br i1 %5852, label %5853, label %5854, !prof !42

5853:                                             ; preds = %5850
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5828) #21
  br label %5854

5854:                                             ; preds = %5853, %5850, %5835, %5826
  %5855 = getelementptr inbounds %struct.TestCase, ptr %275, i64 0, i32 2
  %5856 = load ptr, ptr %5855, align 8, !tbaa !23
  %5857 = getelementptr inbounds %struct.TestCase, ptr %275, i64 0, i32 2, i32 2
  %5858 = icmp eq ptr %5856, %5857
  br i1 %5858, label %5860, label %5859

5859:                                             ; preds = %5854
  call void @_ZdlPv(ptr noundef %5856) #22
  br label %5860

5860:                                             ; preds = %5859, %5854
  %5861 = load ptr, ptr %275, align 8, !tbaa !23
  %5862 = getelementptr inbounds %struct.TestCase, ptr %275, i64 0, i32 0, i32 2
  %5863 = icmp eq ptr %5861, %5862
  br i1 %5863, label %5865, label %5864

5864:                                             ; preds = %5860
  call void @_ZdlPv(ptr noundef %5861) #22
  br label %5865

5865:                                             ; preds = %5864, %5860
  %5866 = load ptr, ptr %276, align 8, !tbaa !23
  %5867 = icmp eq ptr %5866, %5819
  br i1 %5867, label %5917, label %5868

5868:                                             ; preds = %5865
  call void @_ZdlPv(ptr noundef %5866) #22
  br label %5917

5869:                                             ; preds = %5818
  %5870 = landingpad { ptr, i32 }
          cleanup
  br label %5911

5871:                                             ; preds = %5824
  %5872 = landingpad { ptr, i32 }
          cleanup
  %5873 = getelementptr inbounds %struct.TestCase, ptr %275, i64 0, i32 3, i32 0, i32 1
  %5874 = load ptr, ptr %5873, align 8, !tbaa !88
  %5875 = icmp eq ptr %5874, null
  br i1 %5875, label %5900, label %5876

5876:                                             ; preds = %5871
  %5877 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5874, i64 0, i32 1
  %5878 = load atomic i64, ptr %5877 acquire, align 8
  %5879 = icmp eq i64 %5878, 4294967297
  %5880 = trunc i64 %5878 to i32
  br i1 %5879, label %5881, label %5889

5881:                                             ; preds = %5876
  store i32 0, ptr %5877, align 8, !tbaa !90
  %5882 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5874, i64 0, i32 2
  store i32 0, ptr %5882, align 4, !tbaa !92
  %5883 = load ptr, ptr %5874, align 8, !tbaa !58
  %5884 = getelementptr inbounds ptr, ptr %5883, i64 2
  %5885 = load ptr, ptr %5884, align 8
  call void %5885(ptr noundef nonnull align 8 dereferenceable(16) %5874) #21
  %5886 = load ptr, ptr %5874, align 8, !tbaa !58
  %5887 = getelementptr inbounds ptr, ptr %5886, i64 3
  %5888 = load ptr, ptr %5887, align 8
  call void %5888(ptr noundef nonnull align 8 dereferenceable(16) %5874) #21
  br label %5900

5889:                                             ; preds = %5876
  %5890 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5891 = icmp eq i8 %5890, 0
  br i1 %5891, label %5894, label %5892

5892:                                             ; preds = %5889
  %5893 = add nsw i32 %5880, -1
  store i32 %5893, ptr %5877, align 8, !tbaa !73
  br label %5896

5894:                                             ; preds = %5889
  %5895 = atomicrmw volatile add ptr %5877, i32 -1 acq_rel, align 4
  br label %5896

5896:                                             ; preds = %5894, %5892
  %5897 = phi i32 [ %5880, %5892 ], [ %5895, %5894 ]
  %5898 = icmp eq i32 %5897, 1
  br i1 %5898, label %5899, label %5900, !prof !42

5899:                                             ; preds = %5896
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5874) #21
  br label %5900

5900:                                             ; preds = %5899, %5896, %5881, %5871
  %5901 = getelementptr inbounds %struct.TestCase, ptr %275, i64 0, i32 2
  %5902 = load ptr, ptr %5901, align 8, !tbaa !23
  %5903 = getelementptr inbounds %struct.TestCase, ptr %275, i64 0, i32 2, i32 2
  %5904 = icmp eq ptr %5902, %5903
  br i1 %5904, label %5906, label %5905

5905:                                             ; preds = %5900
  call void @_ZdlPv(ptr noundef %5902) #22
  br label %5906

5906:                                             ; preds = %5905, %5900
  %5907 = load ptr, ptr %275, align 8, !tbaa !23
  %5908 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %275, i64 0, i32 2
  %5909 = icmp eq ptr %5907, %5908
  br i1 %5909, label %5911, label %5910

5910:                                             ; preds = %5906
  call void @_ZdlPv(ptr noundef %5907) #22
  br label %5911

5911:                                             ; preds = %5910, %5906, %5869
  %5912 = phi { ptr, i32 } [ %5870, %5869 ], [ %5872, %5906 ], [ %5872, %5910 ]
  %5913 = load ptr, ptr %276, align 8, !tbaa !23
  %5914 = icmp eq ptr %5913, %5819
  br i1 %5914, label %5916, label %5915

5915:                                             ; preds = %5911
  call void @_ZdlPv(ptr noundef %5913) #22
  br label %5916

5916:                                             ; preds = %5915, %5911
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %275) #21
  br label %762

5917:                                             ; preds = %5865, %5868
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %275) #21
  store i32 %5825, ptr @dummy188, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %276)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %273) #21
  %5918 = getelementptr inbounds i8, ptr %273, i64 8
  store i64 0, ptr %5918, align 8
  %5919 = getelementptr inbounds %"class.std::function", ptr %273, i64 0, i32 1
  %5920 = getelementptr inbounds %"class.std::_Function_base", ptr %273, i64 0, i32 1
  store ptr @_Z11CheckInvertRK7Results, ptr %273, align 8, !tbaa !47
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E9_M_invokeERKSt9_Any_dataS2_, ptr %5919, align 8, !tbaa !115
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, ptr %5920, align 8, !tbaa !118
  %5921 = invoke noundef i64 @_Z10AddCheckerPKcRKSt8functionIFvRK7ResultsEE(ptr noundef nonnull @.str.82, ptr noundef nonnull align 8 dereferenceable(32) %273)
          to label %5922 unwind label %5930

5922:                                             ; preds = %5917
  %5923 = load ptr, ptr %5920, align 8, !tbaa !118
  %5924 = icmp eq ptr %5923, null
  br i1 %5924, label %5940, label %5925

5925:                                             ; preds = %5922
  %5926 = invoke noundef zeroext i1 %5923(ptr noundef nonnull align 8 dereferenceable(16) %273, ptr noundef nonnull align 8 dereferenceable(16) %273, i32 noundef 3)
          to label %5940 unwind label %5927

5927:                                             ; preds = %5925
  %5928 = landingpad { ptr, i32 }
          catch ptr null
  %5929 = extractvalue { ptr, i32 } %5928, 0
  call void @__clang_call_terminate(ptr %5929) #24
  unreachable

5930:                                             ; preds = %5917
  %5931 = landingpad { ptr, i32 }
          cleanup
  %5932 = load ptr, ptr %5920, align 8, !tbaa !118
  %5933 = icmp eq ptr %5932, null
  br i1 %5933, label %5939, label %5934

5934:                                             ; preds = %5930
  %5935 = invoke noundef zeroext i1 %5932(ptr noundef nonnull align 8 dereferenceable(16) %273, ptr noundef nonnull align 8 dereferenceable(16) %273, i32 noundef 3)
          to label %5939 unwind label %5936

5936:                                             ; preds = %5934
  %5937 = landingpad { ptr, i32 }
          catch ptr null
  %5938 = extractvalue { ptr, i32 } %5937, 0
  call void @__clang_call_terminate(ptr %5938) #24
  unreachable

5939:                                             ; preds = %5934, %5930
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %273) #21
  br label %762

5940:                                             ; preds = %5922, %5925
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %273) #21
  store i64 %5921, ptr @dummy195, align 8, !tbaa !74
  %5941 = call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #25
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %5941, ptr noundef nonnull @.str.95)
          to label %5944 unwind label %5942

5942:                                             ; preds = %5940
  %5943 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %5941) #22
  br label %762

5944:                                             ; preds = %5940
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %5941, align 8, !tbaa !58
  %5945 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %5941, i64 0, i32 1
  store ptr @_Z24BM_Counters_InvertedRateRN9benchmark5StateE, ptr %5945, align 8, !tbaa !93
  %5946 = call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %5941)
  store ptr %5946, ptr @_ZL27benchmark_uniq_6_benchmark_, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %272)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %271) #21
  %5947 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %272, i64 0, i32 2
  store ptr %5947, ptr %272, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %270) #21
  store i64 70, ptr %270, align 8, !tbaa !74
  %5948 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %272, ptr noundef nonnull align 8 dereferenceable(8) %270, i64 noundef 0)
  store ptr %5948, ptr %272, align 8, !tbaa !23
  %5949 = load i64, ptr %270, align 8, !tbaa !74
  store i64 %5949, ptr %5947, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(70) %5948, ptr noundef nonnull align 1 dereferenceable(70) @.str.97, i64 70, i1 false)
  %5950 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %272, i64 0, i32 1
  store i64 %5949, ptr %5950, align 8, !tbaa !10
  %5951 = getelementptr inbounds i8, ptr %5948, i64 %5949
  store i8 0, ptr %5951, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %270) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %271, ptr noundef nonnull %272, i32 noundef 0)
          to label %5952 unwind label %5997

5952:                                             ; preds = %5944
  %5953 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 0, ptr nonnull %271, i64 1)
          to label %5954 unwind label %5999

5954:                                             ; preds = %5952
  %5955 = getelementptr inbounds %struct.TestCase, ptr %271, i64 0, i32 3, i32 0, i32 1
  %5956 = load ptr, ptr %5955, align 8, !tbaa !88
  %5957 = icmp eq ptr %5956, null
  br i1 %5957, label %5982, label %5958

5958:                                             ; preds = %5954
  %5959 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5956, i64 0, i32 1
  %5960 = load atomic i64, ptr %5959 acquire, align 8
  %5961 = icmp eq i64 %5960, 4294967297
  %5962 = trunc i64 %5960 to i32
  br i1 %5961, label %5963, label %5971

5963:                                             ; preds = %5958
  store i32 0, ptr %5959, align 8, !tbaa !90
  %5964 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %5956, i64 0, i32 2
  store i32 0, ptr %5964, align 4, !tbaa !92
  %5965 = load ptr, ptr %5956, align 8, !tbaa !58
  %5966 = getelementptr inbounds ptr, ptr %5965, i64 2
  %5967 = load ptr, ptr %5966, align 8
  call void %5967(ptr noundef nonnull align 8 dereferenceable(16) %5956) #21
  %5968 = load ptr, ptr %5956, align 8, !tbaa !58
  %5969 = getelementptr inbounds ptr, ptr %5968, i64 3
  %5970 = load ptr, ptr %5969, align 8
  call void %5970(ptr noundef nonnull align 8 dereferenceable(16) %5956) #21
  br label %5982

5971:                                             ; preds = %5958
  %5972 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %5973 = icmp eq i8 %5972, 0
  br i1 %5973, label %5976, label %5974

5974:                                             ; preds = %5971
  %5975 = add nsw i32 %5962, -1
  store i32 %5975, ptr %5959, align 8, !tbaa !73
  br label %5978

5976:                                             ; preds = %5971
  %5977 = atomicrmw volatile add ptr %5959, i32 -1 acq_rel, align 4
  br label %5978

5978:                                             ; preds = %5976, %5974
  %5979 = phi i32 [ %5962, %5974 ], [ %5977, %5976 ]
  %5980 = icmp eq i32 %5979, 1
  br i1 %5980, label %5981, label %5982, !prof !42

5981:                                             ; preds = %5978
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %5956) #21
  br label %5982

5982:                                             ; preds = %5981, %5978, %5963, %5954
  %5983 = getelementptr inbounds %struct.TestCase, ptr %271, i64 0, i32 2
  %5984 = load ptr, ptr %5983, align 8, !tbaa !23
  %5985 = getelementptr inbounds %struct.TestCase, ptr %271, i64 0, i32 2, i32 2
  %5986 = icmp eq ptr %5984, %5985
  br i1 %5986, label %5988, label %5987

5987:                                             ; preds = %5982
  call void @_ZdlPv(ptr noundef %5984) #22
  br label %5988

5988:                                             ; preds = %5987, %5982
  %5989 = load ptr, ptr %271, align 8, !tbaa !23
  %5990 = getelementptr inbounds %struct.TestCase, ptr %271, i64 0, i32 0, i32 2
  %5991 = icmp eq ptr %5989, %5990
  br i1 %5991, label %5993, label %5992

5992:                                             ; preds = %5988
  call void @_ZdlPv(ptr noundef %5989) #22
  br label %5993

5993:                                             ; preds = %5992, %5988
  %5994 = load ptr, ptr %272, align 8, !tbaa !23
  %5995 = icmp eq ptr %5994, %5947
  br i1 %5995, label %6045, label %5996

5996:                                             ; preds = %5993
  call void @_ZdlPv(ptr noundef %5994) #22
  br label %6045

5997:                                             ; preds = %5944
  %5998 = landingpad { ptr, i32 }
          cleanup
  br label %6039

5999:                                             ; preds = %5952
  %6000 = landingpad { ptr, i32 }
          cleanup
  %6001 = getelementptr inbounds %struct.TestCase, ptr %271, i64 0, i32 3, i32 0, i32 1
  %6002 = load ptr, ptr %6001, align 8, !tbaa !88
  %6003 = icmp eq ptr %6002, null
  br i1 %6003, label %6028, label %6004

6004:                                             ; preds = %5999
  %6005 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6002, i64 0, i32 1
  %6006 = load atomic i64, ptr %6005 acquire, align 8
  %6007 = icmp eq i64 %6006, 4294967297
  %6008 = trunc i64 %6006 to i32
  br i1 %6007, label %6009, label %6017

6009:                                             ; preds = %6004
  store i32 0, ptr %6005, align 8, !tbaa !90
  %6010 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6002, i64 0, i32 2
  store i32 0, ptr %6010, align 4, !tbaa !92
  %6011 = load ptr, ptr %6002, align 8, !tbaa !58
  %6012 = getelementptr inbounds ptr, ptr %6011, i64 2
  %6013 = load ptr, ptr %6012, align 8
  call void %6013(ptr noundef nonnull align 8 dereferenceable(16) %6002) #21
  %6014 = load ptr, ptr %6002, align 8, !tbaa !58
  %6015 = getelementptr inbounds ptr, ptr %6014, i64 3
  %6016 = load ptr, ptr %6015, align 8
  call void %6016(ptr noundef nonnull align 8 dereferenceable(16) %6002) #21
  br label %6028

6017:                                             ; preds = %6004
  %6018 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6019 = icmp eq i8 %6018, 0
  br i1 %6019, label %6022, label %6020

6020:                                             ; preds = %6017
  %6021 = add nsw i32 %6008, -1
  store i32 %6021, ptr %6005, align 8, !tbaa !73
  br label %6024

6022:                                             ; preds = %6017
  %6023 = atomicrmw volatile add ptr %6005, i32 -1 acq_rel, align 4
  br label %6024

6024:                                             ; preds = %6022, %6020
  %6025 = phi i32 [ %6008, %6020 ], [ %6023, %6022 ]
  %6026 = icmp eq i32 %6025, 1
  br i1 %6026, label %6027, label %6028, !prof !42

6027:                                             ; preds = %6024
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6002) #21
  br label %6028

6028:                                             ; preds = %6027, %6024, %6009, %5999
  %6029 = getelementptr inbounds %struct.TestCase, ptr %271, i64 0, i32 2
  %6030 = load ptr, ptr %6029, align 8, !tbaa !23
  %6031 = getelementptr inbounds %struct.TestCase, ptr %271, i64 0, i32 2, i32 2
  %6032 = icmp eq ptr %6030, %6031
  br i1 %6032, label %6034, label %6033

6033:                                             ; preds = %6028
  call void @_ZdlPv(ptr noundef %6030) #22
  br label %6034

6034:                                             ; preds = %6033, %6028
  %6035 = load ptr, ptr %271, align 8, !tbaa !23
  %6036 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %271, i64 0, i32 2
  %6037 = icmp eq ptr %6035, %6036
  br i1 %6037, label %6039, label %6038

6038:                                             ; preds = %6034
  call void @_ZdlPv(ptr noundef %6035) #22
  br label %6039

6039:                                             ; preds = %6038, %6034, %5997
  %6040 = phi { ptr, i32 } [ %5998, %5997 ], [ %6000, %6034 ], [ %6000, %6038 ]
  %6041 = load ptr, ptr %272, align 8, !tbaa !23
  %6042 = icmp eq ptr %6041, %5947
  br i1 %6042, label %6044, label %6043

6043:                                             ; preds = %6039
  call void @_ZdlPv(ptr noundef %6041) #22
  br label %6044

6044:                                             ; preds = %6043, %6039
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %271) #21
  br label %762

6045:                                             ; preds = %5993, %5996
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %271) #21
  store i32 %5953, ptr @dummy215, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %272)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %255)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %256)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %257)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %258)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %259)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %260)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %261)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %262)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %263)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %264)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %265)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %266)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %267)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %268)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %269)
  call void @llvm.lifetime.start.p0(i64 1320, ptr nonnull %254) #21
  %6046 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %255, i64 0, i32 2
  store ptr %6046, ptr %255, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %253) #21
  store i64 36, ptr %253, align 8, !tbaa !74
  %6047 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %255, ptr noundef nonnull align 8 dereferenceable(8) %253, i64 noundef 0)
  store ptr %6047, ptr %255, align 8, !tbaa !23
  %6048 = load i64, ptr %253, align 8, !tbaa !74
  store i64 %6048, ptr %6046, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(36) %6047, ptr noundef nonnull align 1 dereferenceable(36) @.str.99, i64 36, i1 false)
  %6049 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %255, i64 0, i32 1
  store i64 %6048, ptr %6049, align 8, !tbaa !10
  %6050 = getelementptr inbounds i8, ptr %6047, i64 %6048
  store i8 0, ptr %6050, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %253) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %254, ptr noundef nonnull %255, i32 noundef 0)
          to label %6051 unwind label %6267

6051:                                             ; preds = %6045
  %6052 = getelementptr inbounds %struct.TestCase, ptr %254, i64 1
  %6053 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %256, i64 0, i32 2
  store ptr %6053, ptr %256, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %252) #21
  store i64 19, ptr %252, align 8, !tbaa !74
  %6054 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %256, ptr noundef nonnull align 8 dereferenceable(8) %252, i64 noundef 0)
          to label %6055 unwind label %6269

6055:                                             ; preds = %6051
  store ptr %6054, ptr %256, align 8, !tbaa !23
  %6056 = load i64, ptr %252, align 8, !tbaa !74
  store i64 %6056, ptr %6053, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %6054, ptr noundef nonnull align 1 dereferenceable(19) @.str.100, i64 19, i1 false)
  %6057 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %256, i64 0, i32 1
  store i64 %6056, ptr %6057, align 8, !tbaa !10
  %6058 = load ptr, ptr %256, align 8, !tbaa !23
  %6059 = getelementptr inbounds i8, ptr %6058, i64 %6056
  store i8 0, ptr %6059, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %252) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %6052, ptr noundef nonnull %256, i32 noundef 1)
          to label %6060 unwind label %6271

6060:                                             ; preds = %6055
  %6061 = getelementptr inbounds %struct.TestCase, ptr %254, i64 2
  %6062 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %257, i64 0, i32 2
  store ptr %6062, ptr %257, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %251) #21
  store i64 32, ptr %251, align 8, !tbaa !74
  %6063 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %257, ptr noundef nonnull align 8 dereferenceable(8) %251, i64 noundef 0)
          to label %6064 unwind label %6273

6064:                                             ; preds = %6060
  store ptr %6063, ptr %257, align 8, !tbaa !23
  %6065 = load i64, ptr %251, align 8, !tbaa !74
  store i64 %6065, ptr %6062, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %6063, ptr noundef nonnull align 1 dereferenceable(32) @.str.15, i64 32, i1 false)
  %6066 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %257, i64 0, i32 1
  store i64 %6065, ptr %6066, align 8, !tbaa !10
  %6067 = load ptr, ptr %257, align 8, !tbaa !23
  %6068 = getelementptr inbounds i8, ptr %6067, i64 %6065
  store i8 0, ptr %6068, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %251) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %6061, ptr noundef nonnull %257, i32 noundef 1)
          to label %6069 unwind label %6275

6069:                                             ; preds = %6064
  %6070 = getelementptr inbounds %struct.TestCase, ptr %254, i64 3
  %6071 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %258, i64 0, i32 2
  store ptr %6071, ptr %258, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %250) #21
  store i64 40, ptr %250, align 8, !tbaa !74
  %6072 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %258, ptr noundef nonnull align 8 dereferenceable(8) %250, i64 noundef 0)
          to label %6073 unwind label %6277

6073:                                             ; preds = %6069
  store ptr %6072, ptr %258, align 8, !tbaa !23
  %6074 = load i64, ptr %250, align 8, !tbaa !74
  store i64 %6074, ptr %6071, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(40) %6072, ptr noundef nonnull align 1 dereferenceable(40) @.str.101, i64 40, i1 false)
  %6075 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %258, i64 0, i32 1
  store i64 %6074, ptr %6075, align 8, !tbaa !10
  %6076 = getelementptr inbounds i8, ptr %6072, i64 %6074
  store i8 0, ptr %6076, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %250) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %6070, ptr noundef nonnull %258, i32 noundef 1)
          to label %6077 unwind label %6279

6077:                                             ; preds = %6073
  %6078 = getelementptr inbounds %struct.TestCase, ptr %254, i64 4
  %6079 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %259, i64 0, i32 2
  store ptr %6079, ptr %259, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %249) #21
  store i64 25, ptr %249, align 8, !tbaa !74
  %6080 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %259, ptr noundef nonnull align 8 dereferenceable(8) %249, i64 noundef 0)
          to label %6081 unwind label %6281

6081:                                             ; preds = %6077
  store ptr %6080, ptr %259, align 8, !tbaa !23
  %6082 = load i64, ptr %249, align 8, !tbaa !74
  store i64 %6082, ptr %6079, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(25) %6080, ptr noundef nonnull align 1 dereferenceable(25) @.str.17, i64 25, i1 false)
  %6083 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %259, i64 0, i32 1
  store i64 %6082, ptr %6083, align 8, !tbaa !10
  %6084 = load ptr, ptr %259, align 8, !tbaa !23
  %6085 = getelementptr inbounds i8, ptr %6084, i64 %6082
  store i8 0, ptr %6085, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %249) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %6078, ptr noundef nonnull %259, i32 noundef 1)
          to label %6086 unwind label %6283

6086:                                             ; preds = %6081
  %6087 = getelementptr inbounds %struct.TestCase, ptr %254, i64 5
  %6088 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %260, i64 0, i32 2
  store ptr %6088, ptr %260, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %248) #21
  store i64 18, ptr %248, align 8, !tbaa !74
  %6089 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %260, ptr noundef nonnull align 8 dereferenceable(8) %248, i64 noundef 0)
          to label %6090 unwind label %6285

6090:                                             ; preds = %6086
  store ptr %6089, ptr %260, align 8, !tbaa !23
  %6091 = load i64, ptr %248, align 8, !tbaa !74
  store i64 %6091, ptr %6088, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(18) %6089, ptr noundef nonnull align 1 dereferenceable(18) @.str.18, i64 18, i1 false)
  %6092 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %260, i64 0, i32 1
  store i64 %6091, ptr %6092, align 8, !tbaa !10
  %6093 = load ptr, ptr %260, align 8, !tbaa !23
  %6094 = getelementptr inbounds i8, ptr %6093, i64 %6091
  store i8 0, ptr %6094, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %248) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %6087, ptr noundef nonnull %260, i32 noundef 1)
          to label %6095 unwind label %6287

6095:                                             ; preds = %6090
  %6096 = getelementptr inbounds %struct.TestCase, ptr %254, i64 6
  %6097 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %261, i64 0, i32 2
  store ptr %6097, ptr %261, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %247) #21
  store i64 23, ptr %247, align 8, !tbaa !74
  %6098 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %261, ptr noundef nonnull align 8 dereferenceable(8) %247, i64 noundef 0)
          to label %6099 unwind label %6289

6099:                                             ; preds = %6095
  store ptr %6098, ptr %261, align 8, !tbaa !23
  %6100 = load i64, ptr %247, align 8, !tbaa !74
  store i64 %6100, ptr %6097, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(23) %6098, ptr noundef nonnull align 1 dereferenceable(23) @.str.19, i64 23, i1 false)
  %6101 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %261, i64 0, i32 1
  store i64 %6100, ptr %6101, align 8, !tbaa !10
  %6102 = load ptr, ptr %261, align 8, !tbaa !23
  %6103 = getelementptr inbounds i8, ptr %6102, i64 %6100
  store i8 0, ptr %6103, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %247) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %6096, ptr noundef nonnull %261, i32 noundef 1)
          to label %6104 unwind label %6291

6104:                                             ; preds = %6099
  %6105 = getelementptr inbounds %struct.TestCase, ptr %254, i64 7
  %6106 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %262, i64 0, i32 2
  store ptr %6106, ptr %262, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %6106, ptr noundef nonnull align 1 dereferenceable(14) @.str.20, i64 14, i1 false)
  %6107 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %262, i64 0, i32 1
  store i64 14, ptr %6107, align 8, !tbaa !10
  %6108 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %262, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %6108, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %6105, ptr noundef nonnull %262, i32 noundef 1)
          to label %6109 unwind label %6293

6109:                                             ; preds = %6104
  %6110 = getelementptr inbounds %struct.TestCase, ptr %254, i64 8
  %6111 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %263, i64 0, i32 2
  store ptr %6111, ptr %263, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %246) #21
  store i64 20, ptr %246, align 8, !tbaa !74
  %6112 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %263, ptr noundef nonnull align 8 dereferenceable(8) %246, i64 noundef 0)
          to label %6113 unwind label %6295

6113:                                             ; preds = %6109
  store ptr %6112, ptr %263, align 8, !tbaa !23
  %6114 = load i64, ptr %246, align 8, !tbaa !74
  store i64 %6114, ptr %6111, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %6112, ptr noundef nonnull align 1 dereferenceable(20) @.str.21, i64 20, i1 false)
  %6115 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %263, i64 0, i32 1
  store i64 %6114, ptr %6115, align 8, !tbaa !10
  %6116 = load ptr, ptr %263, align 8, !tbaa !23
  %6117 = getelementptr inbounds i8, ptr %6116, i64 %6114
  store i8 0, ptr %6117, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %246) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %6110, ptr noundef nonnull %263, i32 noundef 1)
          to label %6118 unwind label %6297

6118:                                             ; preds = %6113
  %6119 = getelementptr inbounds %struct.TestCase, ptr %254, i64 9
  %6120 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %264, i64 0, i32 2
  store ptr %6120, ptr %264, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %245) #21
  store i64 21, ptr %245, align 8, !tbaa !74
  %6121 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %264, ptr noundef nonnull align 8 dereferenceable(8) %245, i64 noundef 0)
          to label %6122 unwind label %6299

6122:                                             ; preds = %6118
  store ptr %6121, ptr %264, align 8, !tbaa !23
  %6123 = load i64, ptr %245, align 8, !tbaa !74
  store i64 %6123, ptr %6120, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %6121, ptr noundef nonnull align 1 dereferenceable(21) @.str.22, i64 21, i1 false)
  %6124 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %264, i64 0, i32 1
  store i64 %6123, ptr %6124, align 8, !tbaa !10
  %6125 = load ptr, ptr %264, align 8, !tbaa !23
  %6126 = getelementptr inbounds i8, ptr %6125, i64 %6123
  store i8 0, ptr %6126, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %245) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %6119, ptr noundef nonnull %264, i32 noundef 1)
          to label %6127 unwind label %6301

6127:                                             ; preds = %6122
  %6128 = getelementptr inbounds %struct.TestCase, ptr %254, i64 10
  %6129 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %265, i64 0, i32 2
  store ptr %6129, ptr %265, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %244) #21
  store i64 20, ptr %244, align 8, !tbaa !74
  %6130 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %265, ptr noundef nonnull align 8 dereferenceable(8) %244, i64 noundef 0)
          to label %6131 unwind label %6303

6131:                                             ; preds = %6127
  store ptr %6130, ptr %265, align 8, !tbaa !23
  %6132 = load i64, ptr %244, align 8, !tbaa !74
  store i64 %6132, ptr %6129, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %6130, ptr noundef nonnull align 1 dereferenceable(20) @.str.23, i64 20, i1 false)
  %6133 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %265, i64 0, i32 1
  store i64 %6132, ptr %6133, align 8, !tbaa !10
  %6134 = load ptr, ptr %265, align 8, !tbaa !23
  %6135 = getelementptr inbounds i8, ptr %6134, i64 %6132
  store i8 0, ptr %6135, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %244) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %6128, ptr noundef nonnull %265, i32 noundef 1)
          to label %6136 unwind label %6305

6136:                                             ; preds = %6131
  %6137 = getelementptr inbounds %struct.TestCase, ptr %254, i64 11
  %6138 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %266, i64 0, i32 2
  store ptr %6138, ptr %266, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %243) #21
  store i64 19, ptr %243, align 8, !tbaa !74
  %6139 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %266, ptr noundef nonnull align 8 dereferenceable(8) %243, i64 noundef 0)
          to label %6140 unwind label %6307

6140:                                             ; preds = %6136
  store ptr %6139, ptr %266, align 8, !tbaa !23
  %6141 = load i64, ptr %243, align 8, !tbaa !74
  store i64 %6141, ptr %6138, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %6139, ptr noundef nonnull align 1 dereferenceable(19) @.str.24, i64 19, i1 false)
  %6142 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %266, i64 0, i32 1
  store i64 %6141, ptr %6142, align 8, !tbaa !10
  %6143 = load ptr, ptr %266, align 8, !tbaa !23
  %6144 = getelementptr inbounds i8, ptr %6143, i64 %6141
  store i8 0, ptr %6144, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %243) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %6137, ptr noundef nonnull %266, i32 noundef 1)
          to label %6145 unwind label %6309

6145:                                             ; preds = %6140
  %6146 = getelementptr inbounds %struct.TestCase, ptr %254, i64 12
  %6147 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %267, i64 0, i32 2
  store ptr %6147, ptr %267, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(15) %6147, ptr noundef nonnull align 1 dereferenceable(15) @.str.25, i64 15, i1 false)
  %6148 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %267, i64 0, i32 1
  store i64 15, ptr %6148, align 8, !tbaa !10
  %6149 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %267, i64 0, i32 2, i32 1, i64 7
  store i8 0, ptr %6149, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %6146, ptr noundef nonnull %267, i32 noundef 1)
          to label %6150 unwind label %6311

6150:                                             ; preds = %6145
  %6151 = getelementptr inbounds %struct.TestCase, ptr %254, i64 13
  %6152 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %268, i64 0, i32 2
  store ptr %6152, ptr %268, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %6152, ptr noundef nonnull align 1 dereferenceable(14) @.str.26, i64 14, i1 false)
  %6153 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %268, i64 0, i32 1
  store i64 14, ptr %6153, align 8, !tbaa !10
  %6154 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %268, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %6154, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %6151, ptr noundef nonnull %268, i32 noundef 1)
          to label %6155 unwind label %6313

6155:                                             ; preds = %6150
  %6156 = getelementptr inbounds %struct.TestCase, ptr %254, i64 14
  %6157 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %269, i64 0, i32 2
  store ptr %6157, ptr %269, align 8, !tbaa !5
  store i8 125, ptr %6157, align 8, !tbaa !13
  %6158 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %269, i64 0, i32 1
  store i64 1, ptr %6158, align 8, !tbaa !10
  %6159 = getelementptr inbounds i8, ptr %269, i64 17
  store i8 0, ptr %6159, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %6156, ptr noundef nonnull %269, i32 noundef 1)
          to label %6160 unwind label %6315

6160:                                             ; preds = %6155
  %6161 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 2, ptr nonnull %254, i64 15)
          to label %6162 unwind label %6317

6162:                                             ; preds = %6160
  %6163 = getelementptr inbounds %struct.TestCase, ptr %254, i64 15
  br label %6164

6164:                                             ; preds = %6205, %6162
  %6165 = phi ptr [ %6163, %6162 ], [ %6166, %6205 ]
  %6166 = getelementptr inbounds %struct.TestCase, ptr %6165, i64 -1
  %6167 = getelementptr %struct.TestCase, ptr %6165, i64 -1, i32 3, i32 0, i32 1
  %6168 = load ptr, ptr %6167, align 8, !tbaa !88
  %6169 = icmp eq ptr %6168, null
  br i1 %6169, label %6194, label %6170

6170:                                             ; preds = %6164
  %6171 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6168, i64 0, i32 1
  %6172 = load atomic i64, ptr %6171 acquire, align 8
  %6173 = icmp eq i64 %6172, 4294967297
  %6174 = trunc i64 %6172 to i32
  br i1 %6173, label %6175, label %6183

6175:                                             ; preds = %6170
  store i32 0, ptr %6171, align 8, !tbaa !90
  %6176 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6168, i64 0, i32 2
  store i32 0, ptr %6176, align 4, !tbaa !92
  %6177 = load ptr, ptr %6168, align 8, !tbaa !58
  %6178 = getelementptr inbounds ptr, ptr %6177, i64 2
  %6179 = load ptr, ptr %6178, align 8
  call void %6179(ptr noundef nonnull align 8 dereferenceable(16) %6168) #21
  %6180 = load ptr, ptr %6168, align 8, !tbaa !58
  %6181 = getelementptr inbounds ptr, ptr %6180, i64 3
  %6182 = load ptr, ptr %6181, align 8
  call void %6182(ptr noundef nonnull align 8 dereferenceable(16) %6168) #21
  br label %6194

6183:                                             ; preds = %6170
  %6184 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6185 = icmp eq i8 %6184, 0
  br i1 %6185, label %6188, label %6186

6186:                                             ; preds = %6183
  %6187 = add nsw i32 %6174, -1
  store i32 %6187, ptr %6171, align 8, !tbaa !73
  br label %6190

6188:                                             ; preds = %6183
  %6189 = atomicrmw volatile add ptr %6171, i32 -1 acq_rel, align 4
  br label %6190

6190:                                             ; preds = %6188, %6186
  %6191 = phi i32 [ %6174, %6186 ], [ %6189, %6188 ]
  %6192 = icmp eq i32 %6191, 1
  br i1 %6192, label %6193, label %6194, !prof !42

6193:                                             ; preds = %6190
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6168) #21
  br label %6194

6194:                                             ; preds = %6193, %6190, %6175, %6164
  %6195 = getelementptr %struct.TestCase, ptr %6165, i64 -1, i32 2
  %6196 = load ptr, ptr %6195, align 8, !tbaa !23
  %6197 = getelementptr %struct.TestCase, ptr %6165, i64 -1, i32 2, i32 2
  %6198 = icmp eq ptr %6196, %6197
  br i1 %6198, label %6200, label %6199

6199:                                             ; preds = %6194
  call void @_ZdlPv(ptr noundef %6196) #22
  br label %6200

6200:                                             ; preds = %6199, %6194
  %6201 = load ptr, ptr %6166, align 8, !tbaa !23
  %6202 = getelementptr %struct.TestCase, ptr %6165, i64 -1, i32 0, i32 2
  %6203 = icmp eq ptr %6201, %6202
  br i1 %6203, label %6205, label %6204

6204:                                             ; preds = %6200
  call void @_ZdlPv(ptr noundef %6201) #22
  br label %6205

6205:                                             ; preds = %6204, %6200
  %6206 = icmp eq ptr %6166, %254
  br i1 %6206, label %6207, label %6164

6207:                                             ; preds = %6205
  %6208 = load ptr, ptr %269, align 8, !tbaa !23
  %6209 = icmp eq ptr %6208, %6157
  br i1 %6209, label %6211, label %6210

6210:                                             ; preds = %6207
  call void @_ZdlPv(ptr noundef %6208) #22
  br label %6211

6211:                                             ; preds = %6210, %6207
  %6212 = load ptr, ptr %268, align 8, !tbaa !23
  %6213 = icmp eq ptr %6212, %6152
  br i1 %6213, label %6215, label %6214

6214:                                             ; preds = %6211
  call void @_ZdlPv(ptr noundef %6212) #22
  br label %6215

6215:                                             ; preds = %6214, %6211
  %6216 = load ptr, ptr %267, align 8, !tbaa !23
  %6217 = icmp eq ptr %6216, %6147
  br i1 %6217, label %6219, label %6218

6218:                                             ; preds = %6215
  call void @_ZdlPv(ptr noundef %6216) #22
  br label %6219

6219:                                             ; preds = %6218, %6215
  %6220 = load ptr, ptr %266, align 8, !tbaa !23
  %6221 = icmp eq ptr %6220, %6138
  br i1 %6221, label %6223, label %6222

6222:                                             ; preds = %6219
  call void @_ZdlPv(ptr noundef %6220) #22
  br label %6223

6223:                                             ; preds = %6222, %6219
  %6224 = load ptr, ptr %265, align 8, !tbaa !23
  %6225 = icmp eq ptr %6224, %6129
  br i1 %6225, label %6227, label %6226

6226:                                             ; preds = %6223
  call void @_ZdlPv(ptr noundef %6224) #22
  br label %6227

6227:                                             ; preds = %6226, %6223
  %6228 = load ptr, ptr %264, align 8, !tbaa !23
  %6229 = icmp eq ptr %6228, %6120
  br i1 %6229, label %6231, label %6230

6230:                                             ; preds = %6227
  call void @_ZdlPv(ptr noundef %6228) #22
  br label %6231

6231:                                             ; preds = %6230, %6227
  %6232 = load ptr, ptr %263, align 8, !tbaa !23
  %6233 = icmp eq ptr %6232, %6111
  br i1 %6233, label %6235, label %6234

6234:                                             ; preds = %6231
  call void @_ZdlPv(ptr noundef %6232) #22
  br label %6235

6235:                                             ; preds = %6234, %6231
  %6236 = load ptr, ptr %262, align 8, !tbaa !23
  %6237 = icmp eq ptr %6236, %6106
  br i1 %6237, label %6239, label %6238

6238:                                             ; preds = %6235
  call void @_ZdlPv(ptr noundef %6236) #22
  br label %6239

6239:                                             ; preds = %6238, %6235
  %6240 = load ptr, ptr %261, align 8, !tbaa !23
  %6241 = icmp eq ptr %6240, %6097
  br i1 %6241, label %6243, label %6242

6242:                                             ; preds = %6239
  call void @_ZdlPv(ptr noundef %6240) #22
  br label %6243

6243:                                             ; preds = %6242, %6239
  %6244 = load ptr, ptr %260, align 8, !tbaa !23
  %6245 = icmp eq ptr %6244, %6088
  br i1 %6245, label %6247, label %6246

6246:                                             ; preds = %6243
  call void @_ZdlPv(ptr noundef %6244) #22
  br label %6247

6247:                                             ; preds = %6246, %6243
  %6248 = load ptr, ptr %259, align 8, !tbaa !23
  %6249 = icmp eq ptr %6248, %6079
  br i1 %6249, label %6251, label %6250

6250:                                             ; preds = %6247
  call void @_ZdlPv(ptr noundef %6248) #22
  br label %6251

6251:                                             ; preds = %6250, %6247
  %6252 = load ptr, ptr %258, align 8, !tbaa !23
  %6253 = icmp eq ptr %6252, %6071
  br i1 %6253, label %6255, label %6254

6254:                                             ; preds = %6251
  call void @_ZdlPv(ptr noundef %6252) #22
  br label %6255

6255:                                             ; preds = %6254, %6251
  %6256 = load ptr, ptr %257, align 8, !tbaa !23
  %6257 = icmp eq ptr %6256, %6062
  br i1 %6257, label %6259, label %6258

6258:                                             ; preds = %6255
  call void @_ZdlPv(ptr noundef %6256) #22
  br label %6259

6259:                                             ; preds = %6258, %6255
  %6260 = load ptr, ptr %256, align 8, !tbaa !23
  %6261 = icmp eq ptr %6260, %6053
  br i1 %6261, label %6263, label %6262

6262:                                             ; preds = %6259
  call void @_ZdlPv(ptr noundef %6260) #22
  br label %6263

6263:                                             ; preds = %6262, %6259
  %6264 = load ptr, ptr %255, align 8, !tbaa !23
  %6265 = icmp eq ptr %6264, %6046
  br i1 %6265, label %7054, label %6266

6266:                                             ; preds = %6263
  call void @_ZdlPv(ptr noundef %6264) #22
  br label %7054

6267:                                             ; preds = %6045
  %6268 = landingpad { ptr, i32 }
          cleanup
  br label %7000

6269:                                             ; preds = %6051
  %6270 = landingpad { ptr, i32 }
          cleanup
  br label %7000

6271:                                             ; preds = %6055
  %6272 = landingpad { ptr, i32 }
          cleanup
  br label %6993

6273:                                             ; preds = %6060
  %6274 = landingpad { ptr, i32 }
          cleanup
  br label %6993

6275:                                             ; preds = %6064
  %6276 = landingpad { ptr, i32 }
          cleanup
  br label %6986

6277:                                             ; preds = %6069
  %6278 = landingpad { ptr, i32 }
          cleanup
  br label %6986

6279:                                             ; preds = %6073
  %6280 = landingpad { ptr, i32 }
          cleanup
  br label %6979

6281:                                             ; preds = %6077
  %6282 = landingpad { ptr, i32 }
          cleanup
  br label %6979

6283:                                             ; preds = %6081
  %6284 = landingpad { ptr, i32 }
          cleanup
  br label %6972

6285:                                             ; preds = %6086
  %6286 = landingpad { ptr, i32 }
          cleanup
  br label %6972

6287:                                             ; preds = %6090
  %6288 = landingpad { ptr, i32 }
          cleanup
  br label %6965

6289:                                             ; preds = %6095
  %6290 = landingpad { ptr, i32 }
          cleanup
  br label %6965

6291:                                             ; preds = %6099
  %6292 = landingpad { ptr, i32 }
          cleanup
  br label %6958

6293:                                             ; preds = %6104
  %6294 = landingpad { ptr, i32 }
          cleanup
  br label %6951

6295:                                             ; preds = %6109
  %6296 = landingpad { ptr, i32 }
          cleanup
  br label %6951

6297:                                             ; preds = %6113
  %6298 = landingpad { ptr, i32 }
          cleanup
  br label %6944

6299:                                             ; preds = %6118
  %6300 = landingpad { ptr, i32 }
          cleanup
  br label %6944

6301:                                             ; preds = %6122
  %6302 = landingpad { ptr, i32 }
          cleanup
  br label %6937

6303:                                             ; preds = %6127
  %6304 = landingpad { ptr, i32 }
          cleanup
  br label %6937

6305:                                             ; preds = %6131
  %6306 = landingpad { ptr, i32 }
          cleanup
  br label %6930

6307:                                             ; preds = %6136
  %6308 = landingpad { ptr, i32 }
          cleanup
  br label %6930

6309:                                             ; preds = %6140
  %6310 = landingpad { ptr, i32 }
          cleanup
  br label %6923

6311:                                             ; preds = %6145
  %6312 = landingpad { ptr, i32 }
          cleanup
  br label %6916

6313:                                             ; preds = %6150
  %6314 = landingpad { ptr, i32 }
          cleanup
  br label %6909

6315:                                             ; preds = %6155
  %6316 = landingpad { ptr, i32 }
          cleanup
  br label %6903

6317:                                             ; preds = %6160
  %6318 = landingpad { ptr, i32 }
          cleanup
  %6319 = getelementptr inbounds %struct.TestCase, ptr %254, i64 14, i32 3, i32 0, i32 1
  %6320 = load ptr, ptr %6319, align 8, !tbaa !88
  %6321 = icmp eq ptr %6320, null
  br i1 %6321, label %6346, label %6322

6322:                                             ; preds = %6317
  %6323 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6320, i64 0, i32 1
  %6324 = load atomic i64, ptr %6323 acquire, align 8
  %6325 = icmp eq i64 %6324, 4294967297
  %6326 = trunc i64 %6324 to i32
  br i1 %6325, label %6327, label %6335

6327:                                             ; preds = %6322
  store i32 0, ptr %6323, align 8, !tbaa !90
  %6328 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6320, i64 0, i32 2
  store i32 0, ptr %6328, align 4, !tbaa !92
  %6329 = load ptr, ptr %6320, align 8, !tbaa !58
  %6330 = getelementptr inbounds ptr, ptr %6329, i64 2
  %6331 = load ptr, ptr %6330, align 8
  call void %6331(ptr noundef nonnull align 8 dereferenceable(16) %6320) #21
  %6332 = load ptr, ptr %6320, align 8, !tbaa !58
  %6333 = getelementptr inbounds ptr, ptr %6332, i64 3
  %6334 = load ptr, ptr %6333, align 8
  call void %6334(ptr noundef nonnull align 8 dereferenceable(16) %6320) #21
  br label %6346

6335:                                             ; preds = %6322
  %6336 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6337 = icmp eq i8 %6336, 0
  br i1 %6337, label %6340, label %6338

6338:                                             ; preds = %6335
  %6339 = add nsw i32 %6326, -1
  store i32 %6339, ptr %6323, align 8, !tbaa !73
  br label %6342

6340:                                             ; preds = %6335
  %6341 = atomicrmw volatile add ptr %6323, i32 -1 acq_rel, align 4
  br label %6342

6342:                                             ; preds = %6340, %6338
  %6343 = phi i32 [ %6326, %6338 ], [ %6341, %6340 ]
  %6344 = icmp eq i32 %6343, 1
  br i1 %6344, label %6345, label %6346, !prof !42

6345:                                             ; preds = %6342
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6320) #21
  br label %6346

6346:                                             ; preds = %6345, %6342, %6327, %6317
  %6347 = getelementptr inbounds %struct.TestCase, ptr %254, i64 14, i32 2
  %6348 = load ptr, ptr %6347, align 8, !tbaa !23
  %6349 = getelementptr inbounds %struct.TestCase, ptr %254, i64 14, i32 2, i32 2
  %6350 = icmp eq ptr %6348, %6349
  br i1 %6350, label %6352, label %6351

6351:                                             ; preds = %6346
  call void @_ZdlPv(ptr noundef %6348) #22
  br label %6352

6352:                                             ; preds = %6351, %6346
  %6353 = load ptr, ptr %6156, align 8, !tbaa !23
  %6354 = getelementptr inbounds %struct.TestCase, ptr %254, i64 14, i32 0, i32 2
  %6355 = icmp eq ptr %6353, %6354
  br i1 %6355, label %6357, label %6356

6356:                                             ; preds = %6352
  call void @_ZdlPv(ptr noundef %6353) #22
  br label %6357

6357:                                             ; preds = %6352, %6356
  %6358 = getelementptr inbounds %struct.TestCase, ptr %254, i64 13, i32 3, i32 0, i32 1
  %6359 = load ptr, ptr %6358, align 8, !tbaa !88
  %6360 = icmp eq ptr %6359, null
  br i1 %6360, label %6385, label %6361

6361:                                             ; preds = %6357
  %6362 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6359, i64 0, i32 1
  %6363 = load atomic i64, ptr %6362 acquire, align 8
  %6364 = icmp eq i64 %6363, 4294967297
  %6365 = trunc i64 %6363 to i32
  br i1 %6364, label %6366, label %6374

6366:                                             ; preds = %6361
  store i32 0, ptr %6362, align 8, !tbaa !90
  %6367 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6359, i64 0, i32 2
  store i32 0, ptr %6367, align 4, !tbaa !92
  %6368 = load ptr, ptr %6359, align 8, !tbaa !58
  %6369 = getelementptr inbounds ptr, ptr %6368, i64 2
  %6370 = load ptr, ptr %6369, align 8
  call void %6370(ptr noundef nonnull align 8 dereferenceable(16) %6359) #21
  %6371 = load ptr, ptr %6359, align 8, !tbaa !58
  %6372 = getelementptr inbounds ptr, ptr %6371, i64 3
  %6373 = load ptr, ptr %6372, align 8
  call void %6373(ptr noundef nonnull align 8 dereferenceable(16) %6359) #21
  br label %6385

6374:                                             ; preds = %6361
  %6375 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6376 = icmp eq i8 %6375, 0
  br i1 %6376, label %6379, label %6377

6377:                                             ; preds = %6374
  %6378 = add nsw i32 %6365, -1
  store i32 %6378, ptr %6362, align 8, !tbaa !73
  br label %6381

6379:                                             ; preds = %6374
  %6380 = atomicrmw volatile add ptr %6362, i32 -1 acq_rel, align 4
  br label %6381

6381:                                             ; preds = %6379, %6377
  %6382 = phi i32 [ %6365, %6377 ], [ %6380, %6379 ]
  %6383 = icmp eq i32 %6382, 1
  br i1 %6383, label %6384, label %6385, !prof !42

6384:                                             ; preds = %6381
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6359) #21
  br label %6385

6385:                                             ; preds = %6384, %6381, %6366, %6357
  %6386 = getelementptr inbounds %struct.TestCase, ptr %254, i64 13, i32 2
  %6387 = load ptr, ptr %6386, align 8, !tbaa !23
  %6388 = getelementptr inbounds %struct.TestCase, ptr %254, i64 13, i32 2, i32 2
  %6389 = icmp eq ptr %6387, %6388
  br i1 %6389, label %6391, label %6390

6390:                                             ; preds = %6385
  call void @_ZdlPv(ptr noundef %6387) #22
  br label %6391

6391:                                             ; preds = %6390, %6385
  %6392 = load ptr, ptr %6151, align 8, !tbaa !23
  %6393 = getelementptr inbounds %struct.TestCase, ptr %254, i64 13, i32 0, i32 2
  %6394 = icmp eq ptr %6392, %6393
  br i1 %6394, label %6396, label %6395

6395:                                             ; preds = %6391
  call void @_ZdlPv(ptr noundef %6392) #22
  br label %6396

6396:                                             ; preds = %6391, %6395
  %6397 = getelementptr inbounds %struct.TestCase, ptr %254, i64 12, i32 3, i32 0, i32 1
  %6398 = load ptr, ptr %6397, align 8, !tbaa !88
  %6399 = icmp eq ptr %6398, null
  br i1 %6399, label %6424, label %6400

6400:                                             ; preds = %6396
  %6401 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6398, i64 0, i32 1
  %6402 = load atomic i64, ptr %6401 acquire, align 8
  %6403 = icmp eq i64 %6402, 4294967297
  %6404 = trunc i64 %6402 to i32
  br i1 %6403, label %6405, label %6413

6405:                                             ; preds = %6400
  store i32 0, ptr %6401, align 8, !tbaa !90
  %6406 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6398, i64 0, i32 2
  store i32 0, ptr %6406, align 4, !tbaa !92
  %6407 = load ptr, ptr %6398, align 8, !tbaa !58
  %6408 = getelementptr inbounds ptr, ptr %6407, i64 2
  %6409 = load ptr, ptr %6408, align 8
  call void %6409(ptr noundef nonnull align 8 dereferenceable(16) %6398) #21
  %6410 = load ptr, ptr %6398, align 8, !tbaa !58
  %6411 = getelementptr inbounds ptr, ptr %6410, i64 3
  %6412 = load ptr, ptr %6411, align 8
  call void %6412(ptr noundef nonnull align 8 dereferenceable(16) %6398) #21
  br label %6424

6413:                                             ; preds = %6400
  %6414 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6415 = icmp eq i8 %6414, 0
  br i1 %6415, label %6418, label %6416

6416:                                             ; preds = %6413
  %6417 = add nsw i32 %6404, -1
  store i32 %6417, ptr %6401, align 8, !tbaa !73
  br label %6420

6418:                                             ; preds = %6413
  %6419 = atomicrmw volatile add ptr %6401, i32 -1 acq_rel, align 4
  br label %6420

6420:                                             ; preds = %6418, %6416
  %6421 = phi i32 [ %6404, %6416 ], [ %6419, %6418 ]
  %6422 = icmp eq i32 %6421, 1
  br i1 %6422, label %6423, label %6424, !prof !42

6423:                                             ; preds = %6420
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6398) #21
  br label %6424

6424:                                             ; preds = %6423, %6420, %6405, %6396
  %6425 = getelementptr inbounds %struct.TestCase, ptr %254, i64 12, i32 2
  %6426 = load ptr, ptr %6425, align 8, !tbaa !23
  %6427 = getelementptr inbounds %struct.TestCase, ptr %254, i64 12, i32 2, i32 2
  %6428 = icmp eq ptr %6426, %6427
  br i1 %6428, label %6430, label %6429

6429:                                             ; preds = %6424
  call void @_ZdlPv(ptr noundef %6426) #22
  br label %6430

6430:                                             ; preds = %6429, %6424
  %6431 = load ptr, ptr %6146, align 8, !tbaa !23
  %6432 = getelementptr inbounds %struct.TestCase, ptr %254, i64 12, i32 0, i32 2
  %6433 = icmp eq ptr %6431, %6432
  br i1 %6433, label %6435, label %6434

6434:                                             ; preds = %6430
  call void @_ZdlPv(ptr noundef %6431) #22
  br label %6435

6435:                                             ; preds = %6430, %6434
  %6436 = getelementptr inbounds %struct.TestCase, ptr %254, i64 11, i32 3, i32 0, i32 1
  %6437 = load ptr, ptr %6436, align 8, !tbaa !88
  %6438 = icmp eq ptr %6437, null
  br i1 %6438, label %6463, label %6439

6439:                                             ; preds = %6435
  %6440 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6437, i64 0, i32 1
  %6441 = load atomic i64, ptr %6440 acquire, align 8
  %6442 = icmp eq i64 %6441, 4294967297
  %6443 = trunc i64 %6441 to i32
  br i1 %6442, label %6444, label %6452

6444:                                             ; preds = %6439
  store i32 0, ptr %6440, align 8, !tbaa !90
  %6445 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6437, i64 0, i32 2
  store i32 0, ptr %6445, align 4, !tbaa !92
  %6446 = load ptr, ptr %6437, align 8, !tbaa !58
  %6447 = getelementptr inbounds ptr, ptr %6446, i64 2
  %6448 = load ptr, ptr %6447, align 8
  call void %6448(ptr noundef nonnull align 8 dereferenceable(16) %6437) #21
  %6449 = load ptr, ptr %6437, align 8, !tbaa !58
  %6450 = getelementptr inbounds ptr, ptr %6449, i64 3
  %6451 = load ptr, ptr %6450, align 8
  call void %6451(ptr noundef nonnull align 8 dereferenceable(16) %6437) #21
  br label %6463

6452:                                             ; preds = %6439
  %6453 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6454 = icmp eq i8 %6453, 0
  br i1 %6454, label %6457, label %6455

6455:                                             ; preds = %6452
  %6456 = add nsw i32 %6443, -1
  store i32 %6456, ptr %6440, align 8, !tbaa !73
  br label %6459

6457:                                             ; preds = %6452
  %6458 = atomicrmw volatile add ptr %6440, i32 -1 acq_rel, align 4
  br label %6459

6459:                                             ; preds = %6457, %6455
  %6460 = phi i32 [ %6443, %6455 ], [ %6458, %6457 ]
  %6461 = icmp eq i32 %6460, 1
  br i1 %6461, label %6462, label %6463, !prof !42

6462:                                             ; preds = %6459
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6437) #21
  br label %6463

6463:                                             ; preds = %6462, %6459, %6444, %6435
  %6464 = getelementptr inbounds %struct.TestCase, ptr %254, i64 11, i32 2
  %6465 = load ptr, ptr %6464, align 8, !tbaa !23
  %6466 = getelementptr inbounds %struct.TestCase, ptr %254, i64 11, i32 2, i32 2
  %6467 = icmp eq ptr %6465, %6466
  br i1 %6467, label %6469, label %6468

6468:                                             ; preds = %6463
  call void @_ZdlPv(ptr noundef %6465) #22
  br label %6469

6469:                                             ; preds = %6468, %6463
  %6470 = load ptr, ptr %6137, align 8, !tbaa !23
  %6471 = getelementptr inbounds %struct.TestCase, ptr %254, i64 11, i32 0, i32 2
  %6472 = icmp eq ptr %6470, %6471
  br i1 %6472, label %6474, label %6473

6473:                                             ; preds = %6469
  call void @_ZdlPv(ptr noundef %6470) #22
  br label %6474

6474:                                             ; preds = %6469, %6473
  %6475 = getelementptr inbounds %struct.TestCase, ptr %254, i64 10, i32 3, i32 0, i32 1
  %6476 = load ptr, ptr %6475, align 8, !tbaa !88
  %6477 = icmp eq ptr %6476, null
  br i1 %6477, label %6502, label %6478

6478:                                             ; preds = %6474
  %6479 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6476, i64 0, i32 1
  %6480 = load atomic i64, ptr %6479 acquire, align 8
  %6481 = icmp eq i64 %6480, 4294967297
  %6482 = trunc i64 %6480 to i32
  br i1 %6481, label %6483, label %6491

6483:                                             ; preds = %6478
  store i32 0, ptr %6479, align 8, !tbaa !90
  %6484 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6476, i64 0, i32 2
  store i32 0, ptr %6484, align 4, !tbaa !92
  %6485 = load ptr, ptr %6476, align 8, !tbaa !58
  %6486 = getelementptr inbounds ptr, ptr %6485, i64 2
  %6487 = load ptr, ptr %6486, align 8
  call void %6487(ptr noundef nonnull align 8 dereferenceable(16) %6476) #21
  %6488 = load ptr, ptr %6476, align 8, !tbaa !58
  %6489 = getelementptr inbounds ptr, ptr %6488, i64 3
  %6490 = load ptr, ptr %6489, align 8
  call void %6490(ptr noundef nonnull align 8 dereferenceable(16) %6476) #21
  br label %6502

6491:                                             ; preds = %6478
  %6492 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6493 = icmp eq i8 %6492, 0
  br i1 %6493, label %6496, label %6494

6494:                                             ; preds = %6491
  %6495 = add nsw i32 %6482, -1
  store i32 %6495, ptr %6479, align 8, !tbaa !73
  br label %6498

6496:                                             ; preds = %6491
  %6497 = atomicrmw volatile add ptr %6479, i32 -1 acq_rel, align 4
  br label %6498

6498:                                             ; preds = %6496, %6494
  %6499 = phi i32 [ %6482, %6494 ], [ %6497, %6496 ]
  %6500 = icmp eq i32 %6499, 1
  br i1 %6500, label %6501, label %6502, !prof !42

6501:                                             ; preds = %6498
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6476) #21
  br label %6502

6502:                                             ; preds = %6501, %6498, %6483, %6474
  %6503 = getelementptr inbounds %struct.TestCase, ptr %254, i64 10, i32 2
  %6504 = load ptr, ptr %6503, align 8, !tbaa !23
  %6505 = getelementptr inbounds %struct.TestCase, ptr %254, i64 10, i32 2, i32 2
  %6506 = icmp eq ptr %6504, %6505
  br i1 %6506, label %6508, label %6507

6507:                                             ; preds = %6502
  call void @_ZdlPv(ptr noundef %6504) #22
  br label %6508

6508:                                             ; preds = %6507, %6502
  %6509 = load ptr, ptr %6128, align 8, !tbaa !23
  %6510 = getelementptr inbounds %struct.TestCase, ptr %254, i64 10, i32 0, i32 2
  %6511 = icmp eq ptr %6509, %6510
  br i1 %6511, label %6513, label %6512

6512:                                             ; preds = %6508
  call void @_ZdlPv(ptr noundef %6509) #22
  br label %6513

6513:                                             ; preds = %6508, %6512
  %6514 = getelementptr inbounds %struct.TestCase, ptr %254, i64 9, i32 3, i32 0, i32 1
  %6515 = load ptr, ptr %6514, align 8, !tbaa !88
  %6516 = icmp eq ptr %6515, null
  br i1 %6516, label %6541, label %6517

6517:                                             ; preds = %6513
  %6518 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6515, i64 0, i32 1
  %6519 = load atomic i64, ptr %6518 acquire, align 8
  %6520 = icmp eq i64 %6519, 4294967297
  %6521 = trunc i64 %6519 to i32
  br i1 %6520, label %6522, label %6530

6522:                                             ; preds = %6517
  store i32 0, ptr %6518, align 8, !tbaa !90
  %6523 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6515, i64 0, i32 2
  store i32 0, ptr %6523, align 4, !tbaa !92
  %6524 = load ptr, ptr %6515, align 8, !tbaa !58
  %6525 = getelementptr inbounds ptr, ptr %6524, i64 2
  %6526 = load ptr, ptr %6525, align 8
  call void %6526(ptr noundef nonnull align 8 dereferenceable(16) %6515) #21
  %6527 = load ptr, ptr %6515, align 8, !tbaa !58
  %6528 = getelementptr inbounds ptr, ptr %6527, i64 3
  %6529 = load ptr, ptr %6528, align 8
  call void %6529(ptr noundef nonnull align 8 dereferenceable(16) %6515) #21
  br label %6541

6530:                                             ; preds = %6517
  %6531 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6532 = icmp eq i8 %6531, 0
  br i1 %6532, label %6535, label %6533

6533:                                             ; preds = %6530
  %6534 = add nsw i32 %6521, -1
  store i32 %6534, ptr %6518, align 8, !tbaa !73
  br label %6537

6535:                                             ; preds = %6530
  %6536 = atomicrmw volatile add ptr %6518, i32 -1 acq_rel, align 4
  br label %6537

6537:                                             ; preds = %6535, %6533
  %6538 = phi i32 [ %6521, %6533 ], [ %6536, %6535 ]
  %6539 = icmp eq i32 %6538, 1
  br i1 %6539, label %6540, label %6541, !prof !42

6540:                                             ; preds = %6537
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6515) #21
  br label %6541

6541:                                             ; preds = %6540, %6537, %6522, %6513
  %6542 = getelementptr inbounds %struct.TestCase, ptr %254, i64 9, i32 2
  %6543 = load ptr, ptr %6542, align 8, !tbaa !23
  %6544 = getelementptr inbounds %struct.TestCase, ptr %254, i64 9, i32 2, i32 2
  %6545 = icmp eq ptr %6543, %6544
  br i1 %6545, label %6547, label %6546

6546:                                             ; preds = %6541
  call void @_ZdlPv(ptr noundef %6543) #22
  br label %6547

6547:                                             ; preds = %6546, %6541
  %6548 = load ptr, ptr %6119, align 8, !tbaa !23
  %6549 = getelementptr inbounds %struct.TestCase, ptr %254, i64 9, i32 0, i32 2
  %6550 = icmp eq ptr %6548, %6549
  br i1 %6550, label %6552, label %6551

6551:                                             ; preds = %6547
  call void @_ZdlPv(ptr noundef %6548) #22
  br label %6552

6552:                                             ; preds = %6547, %6551
  %6553 = getelementptr inbounds %struct.TestCase, ptr %254, i64 8, i32 3, i32 0, i32 1
  %6554 = load ptr, ptr %6553, align 8, !tbaa !88
  %6555 = icmp eq ptr %6554, null
  br i1 %6555, label %6580, label %6556

6556:                                             ; preds = %6552
  %6557 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6554, i64 0, i32 1
  %6558 = load atomic i64, ptr %6557 acquire, align 8
  %6559 = icmp eq i64 %6558, 4294967297
  %6560 = trunc i64 %6558 to i32
  br i1 %6559, label %6561, label %6569

6561:                                             ; preds = %6556
  store i32 0, ptr %6557, align 8, !tbaa !90
  %6562 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6554, i64 0, i32 2
  store i32 0, ptr %6562, align 4, !tbaa !92
  %6563 = load ptr, ptr %6554, align 8, !tbaa !58
  %6564 = getelementptr inbounds ptr, ptr %6563, i64 2
  %6565 = load ptr, ptr %6564, align 8
  call void %6565(ptr noundef nonnull align 8 dereferenceable(16) %6554) #21
  %6566 = load ptr, ptr %6554, align 8, !tbaa !58
  %6567 = getelementptr inbounds ptr, ptr %6566, i64 3
  %6568 = load ptr, ptr %6567, align 8
  call void %6568(ptr noundef nonnull align 8 dereferenceable(16) %6554) #21
  br label %6580

6569:                                             ; preds = %6556
  %6570 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6571 = icmp eq i8 %6570, 0
  br i1 %6571, label %6574, label %6572

6572:                                             ; preds = %6569
  %6573 = add nsw i32 %6560, -1
  store i32 %6573, ptr %6557, align 8, !tbaa !73
  br label %6576

6574:                                             ; preds = %6569
  %6575 = atomicrmw volatile add ptr %6557, i32 -1 acq_rel, align 4
  br label %6576

6576:                                             ; preds = %6574, %6572
  %6577 = phi i32 [ %6560, %6572 ], [ %6575, %6574 ]
  %6578 = icmp eq i32 %6577, 1
  br i1 %6578, label %6579, label %6580, !prof !42

6579:                                             ; preds = %6576
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6554) #21
  br label %6580

6580:                                             ; preds = %6579, %6576, %6561, %6552
  %6581 = getelementptr inbounds %struct.TestCase, ptr %254, i64 8, i32 2
  %6582 = load ptr, ptr %6581, align 8, !tbaa !23
  %6583 = getelementptr inbounds %struct.TestCase, ptr %254, i64 8, i32 2, i32 2
  %6584 = icmp eq ptr %6582, %6583
  br i1 %6584, label %6586, label %6585

6585:                                             ; preds = %6580
  call void @_ZdlPv(ptr noundef %6582) #22
  br label %6586

6586:                                             ; preds = %6585, %6580
  %6587 = load ptr, ptr %6110, align 8, !tbaa !23
  %6588 = getelementptr inbounds %struct.TestCase, ptr %254, i64 8, i32 0, i32 2
  %6589 = icmp eq ptr %6587, %6588
  br i1 %6589, label %6591, label %6590

6590:                                             ; preds = %6586
  call void @_ZdlPv(ptr noundef %6587) #22
  br label %6591

6591:                                             ; preds = %6586, %6590
  %6592 = getelementptr inbounds %struct.TestCase, ptr %254, i64 7, i32 3, i32 0, i32 1
  %6593 = load ptr, ptr %6592, align 8, !tbaa !88
  %6594 = icmp eq ptr %6593, null
  br i1 %6594, label %6619, label %6595

6595:                                             ; preds = %6591
  %6596 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6593, i64 0, i32 1
  %6597 = load atomic i64, ptr %6596 acquire, align 8
  %6598 = icmp eq i64 %6597, 4294967297
  %6599 = trunc i64 %6597 to i32
  br i1 %6598, label %6600, label %6608

6600:                                             ; preds = %6595
  store i32 0, ptr %6596, align 8, !tbaa !90
  %6601 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6593, i64 0, i32 2
  store i32 0, ptr %6601, align 4, !tbaa !92
  %6602 = load ptr, ptr %6593, align 8, !tbaa !58
  %6603 = getelementptr inbounds ptr, ptr %6602, i64 2
  %6604 = load ptr, ptr %6603, align 8
  call void %6604(ptr noundef nonnull align 8 dereferenceable(16) %6593) #21
  %6605 = load ptr, ptr %6593, align 8, !tbaa !58
  %6606 = getelementptr inbounds ptr, ptr %6605, i64 3
  %6607 = load ptr, ptr %6606, align 8
  call void %6607(ptr noundef nonnull align 8 dereferenceable(16) %6593) #21
  br label %6619

6608:                                             ; preds = %6595
  %6609 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6610 = icmp eq i8 %6609, 0
  br i1 %6610, label %6613, label %6611

6611:                                             ; preds = %6608
  %6612 = add nsw i32 %6599, -1
  store i32 %6612, ptr %6596, align 8, !tbaa !73
  br label %6615

6613:                                             ; preds = %6608
  %6614 = atomicrmw volatile add ptr %6596, i32 -1 acq_rel, align 4
  br label %6615

6615:                                             ; preds = %6613, %6611
  %6616 = phi i32 [ %6599, %6611 ], [ %6614, %6613 ]
  %6617 = icmp eq i32 %6616, 1
  br i1 %6617, label %6618, label %6619, !prof !42

6618:                                             ; preds = %6615
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6593) #21
  br label %6619

6619:                                             ; preds = %6618, %6615, %6600, %6591
  %6620 = getelementptr inbounds %struct.TestCase, ptr %254, i64 7, i32 2
  %6621 = load ptr, ptr %6620, align 8, !tbaa !23
  %6622 = getelementptr inbounds %struct.TestCase, ptr %254, i64 7, i32 2, i32 2
  %6623 = icmp eq ptr %6621, %6622
  br i1 %6623, label %6625, label %6624

6624:                                             ; preds = %6619
  call void @_ZdlPv(ptr noundef %6621) #22
  br label %6625

6625:                                             ; preds = %6624, %6619
  %6626 = load ptr, ptr %6105, align 8, !tbaa !23
  %6627 = getelementptr inbounds %struct.TestCase, ptr %254, i64 7, i32 0, i32 2
  %6628 = icmp eq ptr %6626, %6627
  br i1 %6628, label %6630, label %6629

6629:                                             ; preds = %6625
  call void @_ZdlPv(ptr noundef %6626) #22
  br label %6630

6630:                                             ; preds = %6625, %6629
  %6631 = getelementptr inbounds %struct.TestCase, ptr %254, i64 6, i32 3, i32 0, i32 1
  %6632 = load ptr, ptr %6631, align 8, !tbaa !88
  %6633 = icmp eq ptr %6632, null
  br i1 %6633, label %6658, label %6634

6634:                                             ; preds = %6630
  %6635 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6632, i64 0, i32 1
  %6636 = load atomic i64, ptr %6635 acquire, align 8
  %6637 = icmp eq i64 %6636, 4294967297
  %6638 = trunc i64 %6636 to i32
  br i1 %6637, label %6639, label %6647

6639:                                             ; preds = %6634
  store i32 0, ptr %6635, align 8, !tbaa !90
  %6640 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6632, i64 0, i32 2
  store i32 0, ptr %6640, align 4, !tbaa !92
  %6641 = load ptr, ptr %6632, align 8, !tbaa !58
  %6642 = getelementptr inbounds ptr, ptr %6641, i64 2
  %6643 = load ptr, ptr %6642, align 8
  call void %6643(ptr noundef nonnull align 8 dereferenceable(16) %6632) #21
  %6644 = load ptr, ptr %6632, align 8, !tbaa !58
  %6645 = getelementptr inbounds ptr, ptr %6644, i64 3
  %6646 = load ptr, ptr %6645, align 8
  call void %6646(ptr noundef nonnull align 8 dereferenceable(16) %6632) #21
  br label %6658

6647:                                             ; preds = %6634
  %6648 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6649 = icmp eq i8 %6648, 0
  br i1 %6649, label %6652, label %6650

6650:                                             ; preds = %6647
  %6651 = add nsw i32 %6638, -1
  store i32 %6651, ptr %6635, align 8, !tbaa !73
  br label %6654

6652:                                             ; preds = %6647
  %6653 = atomicrmw volatile add ptr %6635, i32 -1 acq_rel, align 4
  br label %6654

6654:                                             ; preds = %6652, %6650
  %6655 = phi i32 [ %6638, %6650 ], [ %6653, %6652 ]
  %6656 = icmp eq i32 %6655, 1
  br i1 %6656, label %6657, label %6658, !prof !42

6657:                                             ; preds = %6654
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6632) #21
  br label %6658

6658:                                             ; preds = %6657, %6654, %6639, %6630
  %6659 = getelementptr inbounds %struct.TestCase, ptr %254, i64 6, i32 2
  %6660 = load ptr, ptr %6659, align 8, !tbaa !23
  %6661 = getelementptr inbounds %struct.TestCase, ptr %254, i64 6, i32 2, i32 2
  %6662 = icmp eq ptr %6660, %6661
  br i1 %6662, label %6664, label %6663

6663:                                             ; preds = %6658
  call void @_ZdlPv(ptr noundef %6660) #22
  br label %6664

6664:                                             ; preds = %6663, %6658
  %6665 = load ptr, ptr %6096, align 8, !tbaa !23
  %6666 = getelementptr inbounds %struct.TestCase, ptr %254, i64 6, i32 0, i32 2
  %6667 = icmp eq ptr %6665, %6666
  br i1 %6667, label %6669, label %6668

6668:                                             ; preds = %6664
  call void @_ZdlPv(ptr noundef %6665) #22
  br label %6669

6669:                                             ; preds = %6664, %6668
  %6670 = getelementptr inbounds %struct.TestCase, ptr %254, i64 5, i32 3, i32 0, i32 1
  %6671 = load ptr, ptr %6670, align 8, !tbaa !88
  %6672 = icmp eq ptr %6671, null
  br i1 %6672, label %6697, label %6673

6673:                                             ; preds = %6669
  %6674 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6671, i64 0, i32 1
  %6675 = load atomic i64, ptr %6674 acquire, align 8
  %6676 = icmp eq i64 %6675, 4294967297
  %6677 = trunc i64 %6675 to i32
  br i1 %6676, label %6678, label %6686

6678:                                             ; preds = %6673
  store i32 0, ptr %6674, align 8, !tbaa !90
  %6679 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6671, i64 0, i32 2
  store i32 0, ptr %6679, align 4, !tbaa !92
  %6680 = load ptr, ptr %6671, align 8, !tbaa !58
  %6681 = getelementptr inbounds ptr, ptr %6680, i64 2
  %6682 = load ptr, ptr %6681, align 8
  call void %6682(ptr noundef nonnull align 8 dereferenceable(16) %6671) #21
  %6683 = load ptr, ptr %6671, align 8, !tbaa !58
  %6684 = getelementptr inbounds ptr, ptr %6683, i64 3
  %6685 = load ptr, ptr %6684, align 8
  call void %6685(ptr noundef nonnull align 8 dereferenceable(16) %6671) #21
  br label %6697

6686:                                             ; preds = %6673
  %6687 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6688 = icmp eq i8 %6687, 0
  br i1 %6688, label %6691, label %6689

6689:                                             ; preds = %6686
  %6690 = add nsw i32 %6677, -1
  store i32 %6690, ptr %6674, align 8, !tbaa !73
  br label %6693

6691:                                             ; preds = %6686
  %6692 = atomicrmw volatile add ptr %6674, i32 -1 acq_rel, align 4
  br label %6693

6693:                                             ; preds = %6691, %6689
  %6694 = phi i32 [ %6677, %6689 ], [ %6692, %6691 ]
  %6695 = icmp eq i32 %6694, 1
  br i1 %6695, label %6696, label %6697, !prof !42

6696:                                             ; preds = %6693
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6671) #21
  br label %6697

6697:                                             ; preds = %6696, %6693, %6678, %6669
  %6698 = getelementptr inbounds %struct.TestCase, ptr %254, i64 5, i32 2
  %6699 = load ptr, ptr %6698, align 8, !tbaa !23
  %6700 = getelementptr inbounds %struct.TestCase, ptr %254, i64 5, i32 2, i32 2
  %6701 = icmp eq ptr %6699, %6700
  br i1 %6701, label %6703, label %6702

6702:                                             ; preds = %6697
  call void @_ZdlPv(ptr noundef %6699) #22
  br label %6703

6703:                                             ; preds = %6702, %6697
  %6704 = load ptr, ptr %6087, align 8, !tbaa !23
  %6705 = getelementptr inbounds %struct.TestCase, ptr %254, i64 5, i32 0, i32 2
  %6706 = icmp eq ptr %6704, %6705
  br i1 %6706, label %6708, label %6707

6707:                                             ; preds = %6703
  call void @_ZdlPv(ptr noundef %6704) #22
  br label %6708

6708:                                             ; preds = %6703, %6707
  %6709 = getelementptr inbounds %struct.TestCase, ptr %254, i64 4, i32 3, i32 0, i32 1
  %6710 = load ptr, ptr %6709, align 8, !tbaa !88
  %6711 = icmp eq ptr %6710, null
  br i1 %6711, label %6736, label %6712

6712:                                             ; preds = %6708
  %6713 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6710, i64 0, i32 1
  %6714 = load atomic i64, ptr %6713 acquire, align 8
  %6715 = icmp eq i64 %6714, 4294967297
  %6716 = trunc i64 %6714 to i32
  br i1 %6715, label %6717, label %6725

6717:                                             ; preds = %6712
  store i32 0, ptr %6713, align 8, !tbaa !90
  %6718 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6710, i64 0, i32 2
  store i32 0, ptr %6718, align 4, !tbaa !92
  %6719 = load ptr, ptr %6710, align 8, !tbaa !58
  %6720 = getelementptr inbounds ptr, ptr %6719, i64 2
  %6721 = load ptr, ptr %6720, align 8
  call void %6721(ptr noundef nonnull align 8 dereferenceable(16) %6710) #21
  %6722 = load ptr, ptr %6710, align 8, !tbaa !58
  %6723 = getelementptr inbounds ptr, ptr %6722, i64 3
  %6724 = load ptr, ptr %6723, align 8
  call void %6724(ptr noundef nonnull align 8 dereferenceable(16) %6710) #21
  br label %6736

6725:                                             ; preds = %6712
  %6726 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6727 = icmp eq i8 %6726, 0
  br i1 %6727, label %6730, label %6728

6728:                                             ; preds = %6725
  %6729 = add nsw i32 %6716, -1
  store i32 %6729, ptr %6713, align 8, !tbaa !73
  br label %6732

6730:                                             ; preds = %6725
  %6731 = atomicrmw volatile add ptr %6713, i32 -1 acq_rel, align 4
  br label %6732

6732:                                             ; preds = %6730, %6728
  %6733 = phi i32 [ %6716, %6728 ], [ %6731, %6730 ]
  %6734 = icmp eq i32 %6733, 1
  br i1 %6734, label %6735, label %6736, !prof !42

6735:                                             ; preds = %6732
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6710) #21
  br label %6736

6736:                                             ; preds = %6735, %6732, %6717, %6708
  %6737 = getelementptr inbounds %struct.TestCase, ptr %254, i64 4, i32 2
  %6738 = load ptr, ptr %6737, align 8, !tbaa !23
  %6739 = getelementptr inbounds %struct.TestCase, ptr %254, i64 4, i32 2, i32 2
  %6740 = icmp eq ptr %6738, %6739
  br i1 %6740, label %6742, label %6741

6741:                                             ; preds = %6736
  call void @_ZdlPv(ptr noundef %6738) #22
  br label %6742

6742:                                             ; preds = %6741, %6736
  %6743 = load ptr, ptr %6078, align 8, !tbaa !23
  %6744 = getelementptr inbounds %struct.TestCase, ptr %254, i64 4, i32 0, i32 2
  %6745 = icmp eq ptr %6743, %6744
  br i1 %6745, label %6747, label %6746

6746:                                             ; preds = %6742
  call void @_ZdlPv(ptr noundef %6743) #22
  br label %6747

6747:                                             ; preds = %6742, %6746
  %6748 = getelementptr inbounds %struct.TestCase, ptr %254, i64 3, i32 3, i32 0, i32 1
  %6749 = load ptr, ptr %6748, align 8, !tbaa !88
  %6750 = icmp eq ptr %6749, null
  br i1 %6750, label %6775, label %6751

6751:                                             ; preds = %6747
  %6752 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6749, i64 0, i32 1
  %6753 = load atomic i64, ptr %6752 acquire, align 8
  %6754 = icmp eq i64 %6753, 4294967297
  %6755 = trunc i64 %6753 to i32
  br i1 %6754, label %6756, label %6764

6756:                                             ; preds = %6751
  store i32 0, ptr %6752, align 8, !tbaa !90
  %6757 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6749, i64 0, i32 2
  store i32 0, ptr %6757, align 4, !tbaa !92
  %6758 = load ptr, ptr %6749, align 8, !tbaa !58
  %6759 = getelementptr inbounds ptr, ptr %6758, i64 2
  %6760 = load ptr, ptr %6759, align 8
  call void %6760(ptr noundef nonnull align 8 dereferenceable(16) %6749) #21
  %6761 = load ptr, ptr %6749, align 8, !tbaa !58
  %6762 = getelementptr inbounds ptr, ptr %6761, i64 3
  %6763 = load ptr, ptr %6762, align 8
  call void %6763(ptr noundef nonnull align 8 dereferenceable(16) %6749) #21
  br label %6775

6764:                                             ; preds = %6751
  %6765 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6766 = icmp eq i8 %6765, 0
  br i1 %6766, label %6769, label %6767

6767:                                             ; preds = %6764
  %6768 = add nsw i32 %6755, -1
  store i32 %6768, ptr %6752, align 8, !tbaa !73
  br label %6771

6769:                                             ; preds = %6764
  %6770 = atomicrmw volatile add ptr %6752, i32 -1 acq_rel, align 4
  br label %6771

6771:                                             ; preds = %6769, %6767
  %6772 = phi i32 [ %6755, %6767 ], [ %6770, %6769 ]
  %6773 = icmp eq i32 %6772, 1
  br i1 %6773, label %6774, label %6775, !prof !42

6774:                                             ; preds = %6771
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6749) #21
  br label %6775

6775:                                             ; preds = %6774, %6771, %6756, %6747
  %6776 = getelementptr inbounds %struct.TestCase, ptr %254, i64 3, i32 2
  %6777 = load ptr, ptr %6776, align 8, !tbaa !23
  %6778 = getelementptr inbounds %struct.TestCase, ptr %254, i64 3, i32 2, i32 2
  %6779 = icmp eq ptr %6777, %6778
  br i1 %6779, label %6781, label %6780

6780:                                             ; preds = %6775
  call void @_ZdlPv(ptr noundef %6777) #22
  br label %6781

6781:                                             ; preds = %6780, %6775
  %6782 = load ptr, ptr %6070, align 8, !tbaa !23
  %6783 = getelementptr inbounds %struct.TestCase, ptr %254, i64 3, i32 0, i32 2
  %6784 = icmp eq ptr %6782, %6783
  br i1 %6784, label %6786, label %6785

6785:                                             ; preds = %6781
  call void @_ZdlPv(ptr noundef %6782) #22
  br label %6786

6786:                                             ; preds = %6781, %6785
  %6787 = getelementptr inbounds %struct.TestCase, ptr %254, i64 2, i32 3, i32 0, i32 1
  %6788 = load ptr, ptr %6787, align 8, !tbaa !88
  %6789 = icmp eq ptr %6788, null
  br i1 %6789, label %6814, label %6790

6790:                                             ; preds = %6786
  %6791 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6788, i64 0, i32 1
  %6792 = load atomic i64, ptr %6791 acquire, align 8
  %6793 = icmp eq i64 %6792, 4294967297
  %6794 = trunc i64 %6792 to i32
  br i1 %6793, label %6795, label %6803

6795:                                             ; preds = %6790
  store i32 0, ptr %6791, align 8, !tbaa !90
  %6796 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6788, i64 0, i32 2
  store i32 0, ptr %6796, align 4, !tbaa !92
  %6797 = load ptr, ptr %6788, align 8, !tbaa !58
  %6798 = getelementptr inbounds ptr, ptr %6797, i64 2
  %6799 = load ptr, ptr %6798, align 8
  call void %6799(ptr noundef nonnull align 8 dereferenceable(16) %6788) #21
  %6800 = load ptr, ptr %6788, align 8, !tbaa !58
  %6801 = getelementptr inbounds ptr, ptr %6800, i64 3
  %6802 = load ptr, ptr %6801, align 8
  call void %6802(ptr noundef nonnull align 8 dereferenceable(16) %6788) #21
  br label %6814

6803:                                             ; preds = %6790
  %6804 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6805 = icmp eq i8 %6804, 0
  br i1 %6805, label %6808, label %6806

6806:                                             ; preds = %6803
  %6807 = add nsw i32 %6794, -1
  store i32 %6807, ptr %6791, align 8, !tbaa !73
  br label %6810

6808:                                             ; preds = %6803
  %6809 = atomicrmw volatile add ptr %6791, i32 -1 acq_rel, align 4
  br label %6810

6810:                                             ; preds = %6808, %6806
  %6811 = phi i32 [ %6794, %6806 ], [ %6809, %6808 ]
  %6812 = icmp eq i32 %6811, 1
  br i1 %6812, label %6813, label %6814, !prof !42

6813:                                             ; preds = %6810
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6788) #21
  br label %6814

6814:                                             ; preds = %6813, %6810, %6795, %6786
  %6815 = getelementptr inbounds %struct.TestCase, ptr %254, i64 2, i32 2
  %6816 = load ptr, ptr %6815, align 8, !tbaa !23
  %6817 = getelementptr inbounds %struct.TestCase, ptr %254, i64 2, i32 2, i32 2
  %6818 = icmp eq ptr %6816, %6817
  br i1 %6818, label %6820, label %6819

6819:                                             ; preds = %6814
  call void @_ZdlPv(ptr noundef %6816) #22
  br label %6820

6820:                                             ; preds = %6819, %6814
  %6821 = load ptr, ptr %6061, align 8, !tbaa !23
  %6822 = getelementptr inbounds %struct.TestCase, ptr %254, i64 2, i32 0, i32 2
  %6823 = icmp eq ptr %6821, %6822
  br i1 %6823, label %6825, label %6824

6824:                                             ; preds = %6820
  call void @_ZdlPv(ptr noundef %6821) #22
  br label %6825

6825:                                             ; preds = %6820, %6824
  %6826 = getelementptr inbounds %struct.TestCase, ptr %254, i64 1, i32 3, i32 0, i32 1
  %6827 = load ptr, ptr %6826, align 8, !tbaa !88
  %6828 = icmp eq ptr %6827, null
  br i1 %6828, label %6853, label %6829

6829:                                             ; preds = %6825
  %6830 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6827, i64 0, i32 1
  %6831 = load atomic i64, ptr %6830 acquire, align 8
  %6832 = icmp eq i64 %6831, 4294967297
  %6833 = trunc i64 %6831 to i32
  br i1 %6832, label %6834, label %6842

6834:                                             ; preds = %6829
  store i32 0, ptr %6830, align 8, !tbaa !90
  %6835 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6827, i64 0, i32 2
  store i32 0, ptr %6835, align 4, !tbaa !92
  %6836 = load ptr, ptr %6827, align 8, !tbaa !58
  %6837 = getelementptr inbounds ptr, ptr %6836, i64 2
  %6838 = load ptr, ptr %6837, align 8
  call void %6838(ptr noundef nonnull align 8 dereferenceable(16) %6827) #21
  %6839 = load ptr, ptr %6827, align 8, !tbaa !58
  %6840 = getelementptr inbounds ptr, ptr %6839, i64 3
  %6841 = load ptr, ptr %6840, align 8
  call void %6841(ptr noundef nonnull align 8 dereferenceable(16) %6827) #21
  br label %6853

6842:                                             ; preds = %6829
  %6843 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6844 = icmp eq i8 %6843, 0
  br i1 %6844, label %6847, label %6845

6845:                                             ; preds = %6842
  %6846 = add nsw i32 %6833, -1
  store i32 %6846, ptr %6830, align 8, !tbaa !73
  br label %6849

6847:                                             ; preds = %6842
  %6848 = atomicrmw volatile add ptr %6830, i32 -1 acq_rel, align 4
  br label %6849

6849:                                             ; preds = %6847, %6845
  %6850 = phi i32 [ %6833, %6845 ], [ %6848, %6847 ]
  %6851 = icmp eq i32 %6850, 1
  br i1 %6851, label %6852, label %6853, !prof !42

6852:                                             ; preds = %6849
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6827) #21
  br label %6853

6853:                                             ; preds = %6852, %6849, %6834, %6825
  %6854 = getelementptr inbounds %struct.TestCase, ptr %254, i64 1, i32 2
  %6855 = load ptr, ptr %6854, align 8, !tbaa !23
  %6856 = getelementptr inbounds %struct.TestCase, ptr %254, i64 1, i32 2, i32 2
  %6857 = icmp eq ptr %6855, %6856
  br i1 %6857, label %6859, label %6858

6858:                                             ; preds = %6853
  call void @_ZdlPv(ptr noundef %6855) #22
  br label %6859

6859:                                             ; preds = %6858, %6853
  %6860 = load ptr, ptr %6052, align 8, !tbaa !23
  %6861 = getelementptr inbounds %struct.TestCase, ptr %254, i64 1, i32 0, i32 2
  %6862 = icmp eq ptr %6860, %6861
  br i1 %6862, label %6864, label %6863

6863:                                             ; preds = %6859
  call void @_ZdlPv(ptr noundef %6860) #22
  br label %6864

6864:                                             ; preds = %6859, %6863
  %6865 = getelementptr inbounds %struct.TestCase, ptr %254, i64 0, i32 3, i32 0, i32 1
  %6866 = load ptr, ptr %6865, align 8, !tbaa !88
  %6867 = icmp eq ptr %6866, null
  br i1 %6867, label %6892, label %6868

6868:                                             ; preds = %6864
  %6869 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6866, i64 0, i32 1
  %6870 = load atomic i64, ptr %6869 acquire, align 8
  %6871 = icmp eq i64 %6870, 4294967297
  %6872 = trunc i64 %6870 to i32
  br i1 %6871, label %6873, label %6881

6873:                                             ; preds = %6868
  store i32 0, ptr %6869, align 8, !tbaa !90
  %6874 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %6866, i64 0, i32 2
  store i32 0, ptr %6874, align 4, !tbaa !92
  %6875 = load ptr, ptr %6866, align 8, !tbaa !58
  %6876 = getelementptr inbounds ptr, ptr %6875, i64 2
  %6877 = load ptr, ptr %6876, align 8
  call void %6877(ptr noundef nonnull align 8 dereferenceable(16) %6866) #21
  %6878 = load ptr, ptr %6866, align 8, !tbaa !58
  %6879 = getelementptr inbounds ptr, ptr %6878, i64 3
  %6880 = load ptr, ptr %6879, align 8
  call void %6880(ptr noundef nonnull align 8 dereferenceable(16) %6866) #21
  br label %6892

6881:                                             ; preds = %6868
  %6882 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %6883 = icmp eq i8 %6882, 0
  br i1 %6883, label %6886, label %6884

6884:                                             ; preds = %6881
  %6885 = add nsw i32 %6872, -1
  store i32 %6885, ptr %6869, align 8, !tbaa !73
  br label %6888

6886:                                             ; preds = %6881
  %6887 = atomicrmw volatile add ptr %6869, i32 -1 acq_rel, align 4
  br label %6888

6888:                                             ; preds = %6886, %6884
  %6889 = phi i32 [ %6872, %6884 ], [ %6887, %6886 ]
  %6890 = icmp eq i32 %6889, 1
  br i1 %6890, label %6891, label %6892, !prof !42

6891:                                             ; preds = %6888
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %6866) #21
  br label %6892

6892:                                             ; preds = %6891, %6888, %6873, %6864
  %6893 = getelementptr inbounds %struct.TestCase, ptr %254, i64 0, i32 2
  %6894 = load ptr, ptr %6893, align 8, !tbaa !23
  %6895 = getelementptr inbounds %struct.TestCase, ptr %254, i64 0, i32 2, i32 2
  %6896 = icmp eq ptr %6894, %6895
  br i1 %6896, label %6898, label %6897

6897:                                             ; preds = %6892
  call void @_ZdlPv(ptr noundef %6894) #22
  br label %6898

6898:                                             ; preds = %6897, %6892
  %6899 = load ptr, ptr %254, align 8, !tbaa !23
  %6900 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %254, i64 0, i32 2
  %6901 = icmp eq ptr %6899, %6900
  br i1 %6901, label %6903, label %6902

6902:                                             ; preds = %6898
  call void @_ZdlPv(ptr noundef %6899) #22
  br label %6903

6903:                                             ; preds = %6902, %6898, %6315
  %6904 = phi { ptr, i32 } [ %6316, %6315 ], [ %6318, %6898 ], [ %6318, %6902 ]
  %6905 = phi i1 [ true, %6315 ], [ false, %6898 ], [ false, %6902 ]
  %6906 = load ptr, ptr %269, align 8, !tbaa !23
  %6907 = icmp eq ptr %6906, %6157
  br i1 %6907, label %6909, label %6908

6908:                                             ; preds = %6903
  call void @_ZdlPv(ptr noundef %6906) #22
  br label %6909

6909:                                             ; preds = %6908, %6903, %6313
  %6910 = phi ptr [ %6151, %6313 ], [ %6156, %6908 ], [ %6156, %6903 ]
  %6911 = phi { ptr, i32 } [ %6314, %6313 ], [ %6904, %6908 ], [ %6904, %6903 ]
  %6912 = phi i1 [ true, %6313 ], [ %6905, %6908 ], [ %6905, %6903 ]
  %6913 = load ptr, ptr %268, align 8, !tbaa !23
  %6914 = icmp eq ptr %6913, %6152
  br i1 %6914, label %6916, label %6915

6915:                                             ; preds = %6909
  call void @_ZdlPv(ptr noundef %6913) #22
  br label %6916

6916:                                             ; preds = %6915, %6909, %6311
  %6917 = phi ptr [ %6146, %6311 ], [ %6910, %6915 ], [ %6910, %6909 ]
  %6918 = phi { ptr, i32 } [ %6312, %6311 ], [ %6911, %6915 ], [ %6911, %6909 ]
  %6919 = phi i1 [ true, %6311 ], [ %6912, %6915 ], [ %6912, %6909 ]
  %6920 = load ptr, ptr %267, align 8, !tbaa !23
  %6921 = icmp eq ptr %6920, %6147
  br i1 %6921, label %6923, label %6922

6922:                                             ; preds = %6916
  call void @_ZdlPv(ptr noundef %6920) #22
  br label %6923

6923:                                             ; preds = %6922, %6916, %6309
  %6924 = phi ptr [ %6137, %6309 ], [ %6917, %6922 ], [ %6917, %6916 ]
  %6925 = phi { ptr, i32 } [ %6310, %6309 ], [ %6918, %6922 ], [ %6918, %6916 ]
  %6926 = phi i1 [ true, %6309 ], [ %6919, %6922 ], [ %6919, %6916 ]
  %6927 = load ptr, ptr %266, align 8, !tbaa !23
  %6928 = icmp eq ptr %6927, %6138
  br i1 %6928, label %6930, label %6929

6929:                                             ; preds = %6923
  call void @_ZdlPv(ptr noundef %6927) #22
  br label %6930

6930:                                             ; preds = %6929, %6923, %6307, %6305
  %6931 = phi ptr [ %6128, %6305 ], [ %6137, %6307 ], [ %6924, %6923 ], [ %6924, %6929 ]
  %6932 = phi { ptr, i32 } [ %6306, %6305 ], [ %6308, %6307 ], [ %6925, %6923 ], [ %6925, %6929 ]
  %6933 = phi i1 [ true, %6305 ], [ true, %6307 ], [ %6926, %6923 ], [ %6926, %6929 ]
  %6934 = load ptr, ptr %265, align 8, !tbaa !23
  %6935 = icmp eq ptr %6934, %6129
  br i1 %6935, label %6937, label %6936

6936:                                             ; preds = %6930
  call void @_ZdlPv(ptr noundef %6934) #22
  br label %6937

6937:                                             ; preds = %6936, %6930, %6303, %6301
  %6938 = phi ptr [ %6119, %6301 ], [ %6128, %6303 ], [ %6931, %6930 ], [ %6931, %6936 ]
  %6939 = phi { ptr, i32 } [ %6302, %6301 ], [ %6304, %6303 ], [ %6932, %6930 ], [ %6932, %6936 ]
  %6940 = phi i1 [ true, %6301 ], [ true, %6303 ], [ %6933, %6930 ], [ %6933, %6936 ]
  %6941 = load ptr, ptr %264, align 8, !tbaa !23
  %6942 = icmp eq ptr %6941, %6120
  br i1 %6942, label %6944, label %6943

6943:                                             ; preds = %6937
  call void @_ZdlPv(ptr noundef %6941) #22
  br label %6944

6944:                                             ; preds = %6943, %6937, %6299, %6297
  %6945 = phi ptr [ %6110, %6297 ], [ %6119, %6299 ], [ %6938, %6937 ], [ %6938, %6943 ]
  %6946 = phi { ptr, i32 } [ %6298, %6297 ], [ %6300, %6299 ], [ %6939, %6937 ], [ %6939, %6943 ]
  %6947 = phi i1 [ true, %6297 ], [ true, %6299 ], [ %6940, %6937 ], [ %6940, %6943 ]
  %6948 = load ptr, ptr %263, align 8, !tbaa !23
  %6949 = icmp eq ptr %6948, %6111
  br i1 %6949, label %6951, label %6950

6950:                                             ; preds = %6944
  call void @_ZdlPv(ptr noundef %6948) #22
  br label %6951

6951:                                             ; preds = %6950, %6944, %6295, %6293
  %6952 = phi ptr [ %6105, %6293 ], [ %6110, %6295 ], [ %6945, %6944 ], [ %6945, %6950 ]
  %6953 = phi { ptr, i32 } [ %6294, %6293 ], [ %6296, %6295 ], [ %6946, %6944 ], [ %6946, %6950 ]
  %6954 = phi i1 [ true, %6293 ], [ true, %6295 ], [ %6947, %6944 ], [ %6947, %6950 ]
  %6955 = load ptr, ptr %262, align 8, !tbaa !23
  %6956 = icmp eq ptr %6955, %6106
  br i1 %6956, label %6958, label %6957

6957:                                             ; preds = %6951
  call void @_ZdlPv(ptr noundef %6955) #22
  br label %6958

6958:                                             ; preds = %6957, %6951, %6291
  %6959 = phi ptr [ %6096, %6291 ], [ %6952, %6957 ], [ %6952, %6951 ]
  %6960 = phi { ptr, i32 } [ %6292, %6291 ], [ %6953, %6957 ], [ %6953, %6951 ]
  %6961 = phi i1 [ true, %6291 ], [ %6954, %6957 ], [ %6954, %6951 ]
  %6962 = load ptr, ptr %261, align 8, !tbaa !23
  %6963 = icmp eq ptr %6962, %6097
  br i1 %6963, label %6965, label %6964

6964:                                             ; preds = %6958
  call void @_ZdlPv(ptr noundef %6962) #22
  br label %6965

6965:                                             ; preds = %6964, %6958, %6289, %6287
  %6966 = phi ptr [ %6087, %6287 ], [ %6096, %6289 ], [ %6959, %6958 ], [ %6959, %6964 ]
  %6967 = phi { ptr, i32 } [ %6288, %6287 ], [ %6290, %6289 ], [ %6960, %6958 ], [ %6960, %6964 ]
  %6968 = phi i1 [ true, %6287 ], [ true, %6289 ], [ %6961, %6958 ], [ %6961, %6964 ]
  %6969 = load ptr, ptr %260, align 8, !tbaa !23
  %6970 = icmp eq ptr %6969, %6088
  br i1 %6970, label %6972, label %6971

6971:                                             ; preds = %6965
  call void @_ZdlPv(ptr noundef %6969) #22
  br label %6972

6972:                                             ; preds = %6971, %6965, %6285, %6283
  %6973 = phi ptr [ %6078, %6283 ], [ %6087, %6285 ], [ %6966, %6965 ], [ %6966, %6971 ]
  %6974 = phi { ptr, i32 } [ %6284, %6283 ], [ %6286, %6285 ], [ %6967, %6965 ], [ %6967, %6971 ]
  %6975 = phi i1 [ true, %6283 ], [ true, %6285 ], [ %6968, %6965 ], [ %6968, %6971 ]
  %6976 = load ptr, ptr %259, align 8, !tbaa !23
  %6977 = icmp eq ptr %6976, %6079
  br i1 %6977, label %6979, label %6978

6978:                                             ; preds = %6972
  call void @_ZdlPv(ptr noundef %6976) #22
  br label %6979

6979:                                             ; preds = %6978, %6972, %6281, %6279
  %6980 = phi ptr [ %6070, %6279 ], [ %6078, %6281 ], [ %6973, %6972 ], [ %6973, %6978 ]
  %6981 = phi { ptr, i32 } [ %6280, %6279 ], [ %6282, %6281 ], [ %6974, %6972 ], [ %6974, %6978 ]
  %6982 = phi i1 [ true, %6279 ], [ true, %6281 ], [ %6975, %6972 ], [ %6975, %6978 ]
  %6983 = load ptr, ptr %258, align 8, !tbaa !23
  %6984 = icmp eq ptr %6983, %6071
  br i1 %6984, label %6986, label %6985

6985:                                             ; preds = %6979
  call void @_ZdlPv(ptr noundef %6983) #22
  br label %6986

6986:                                             ; preds = %6985, %6979, %6277, %6275
  %6987 = phi ptr [ %6061, %6275 ], [ %6070, %6277 ], [ %6980, %6979 ], [ %6980, %6985 ]
  %6988 = phi { ptr, i32 } [ %6276, %6275 ], [ %6278, %6277 ], [ %6981, %6979 ], [ %6981, %6985 ]
  %6989 = phi i1 [ true, %6275 ], [ true, %6277 ], [ %6982, %6979 ], [ %6982, %6985 ]
  %6990 = load ptr, ptr %257, align 8, !tbaa !23
  %6991 = icmp eq ptr %6990, %6062
  br i1 %6991, label %6993, label %6992

6992:                                             ; preds = %6986
  call void @_ZdlPv(ptr noundef %6990) #22
  br label %6993

6993:                                             ; preds = %6992, %6986, %6273, %6271
  %6994 = phi ptr [ %6052, %6271 ], [ %6061, %6273 ], [ %6987, %6986 ], [ %6987, %6992 ]
  %6995 = phi { ptr, i32 } [ %6272, %6271 ], [ %6274, %6273 ], [ %6988, %6986 ], [ %6988, %6992 ]
  %6996 = phi i1 [ true, %6271 ], [ true, %6273 ], [ %6989, %6986 ], [ %6989, %6992 ]
  %6997 = load ptr, ptr %256, align 8, !tbaa !23
  %6998 = icmp eq ptr %6997, %6053
  br i1 %6998, label %7000, label %6999

6999:                                             ; preds = %6993
  call void @_ZdlPv(ptr noundef %6997) #22
  br label %7000

7000:                                             ; preds = %6999, %6993, %6269, %6267
  %7001 = phi ptr [ %254, %6267 ], [ %6052, %6269 ], [ %6994, %6993 ], [ %6994, %6999 ]
  %7002 = phi { ptr, i32 } [ %6268, %6267 ], [ %6270, %6269 ], [ %6995, %6993 ], [ %6995, %6999 ]
  %7003 = phi i1 [ true, %6267 ], [ true, %6269 ], [ %6996, %6993 ], [ %6996, %6999 ]
  %7004 = load ptr, ptr %255, align 8, !tbaa !23
  %7005 = icmp eq ptr %7004, %6046
  br i1 %7005, label %7007, label %7006

7006:                                             ; preds = %7000
  call void @_ZdlPv(ptr noundef %7004) #22
  br label %7007

7007:                                             ; preds = %7006, %7000
  %7008 = icmp ne ptr %254, %7001
  %7009 = select i1 %7003, i1 %7008, i1 false
  br i1 %7009, label %7010, label %7053

7010:                                             ; preds = %7007, %7051
  %7011 = phi ptr [ %7012, %7051 ], [ %7001, %7007 ]
  %7012 = getelementptr inbounds %struct.TestCase, ptr %7011, i64 -1
  %7013 = getelementptr %struct.TestCase, ptr %7011, i64 -1, i32 3, i32 0, i32 1
  %7014 = load ptr, ptr %7013, align 8, !tbaa !88
  %7015 = icmp eq ptr %7014, null
  br i1 %7015, label %7040, label %7016

7016:                                             ; preds = %7010
  %7017 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7014, i64 0, i32 1
  %7018 = load atomic i64, ptr %7017 acquire, align 8
  %7019 = icmp eq i64 %7018, 4294967297
  %7020 = trunc i64 %7018 to i32
  br i1 %7019, label %7021, label %7029

7021:                                             ; preds = %7016
  store i32 0, ptr %7017, align 8, !tbaa !90
  %7022 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7014, i64 0, i32 2
  store i32 0, ptr %7022, align 4, !tbaa !92
  %7023 = load ptr, ptr %7014, align 8, !tbaa !58
  %7024 = getelementptr inbounds ptr, ptr %7023, i64 2
  %7025 = load ptr, ptr %7024, align 8
  call void %7025(ptr noundef nonnull align 8 dereferenceable(16) %7014) #21
  %7026 = load ptr, ptr %7014, align 8, !tbaa !58
  %7027 = getelementptr inbounds ptr, ptr %7026, i64 3
  %7028 = load ptr, ptr %7027, align 8
  call void %7028(ptr noundef nonnull align 8 dereferenceable(16) %7014) #21
  br label %7040

7029:                                             ; preds = %7016
  %7030 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7031 = icmp eq i8 %7030, 0
  br i1 %7031, label %7034, label %7032

7032:                                             ; preds = %7029
  %7033 = add nsw i32 %7020, -1
  store i32 %7033, ptr %7017, align 8, !tbaa !73
  br label %7036

7034:                                             ; preds = %7029
  %7035 = atomicrmw volatile add ptr %7017, i32 -1 acq_rel, align 4
  br label %7036

7036:                                             ; preds = %7034, %7032
  %7037 = phi i32 [ %7020, %7032 ], [ %7035, %7034 ]
  %7038 = icmp eq i32 %7037, 1
  br i1 %7038, label %7039, label %7040, !prof !42

7039:                                             ; preds = %7036
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7014) #21
  br label %7040

7040:                                             ; preds = %7039, %7036, %7021, %7010
  %7041 = getelementptr %struct.TestCase, ptr %7011, i64 -1, i32 2
  %7042 = load ptr, ptr %7041, align 8, !tbaa !23
  %7043 = getelementptr %struct.TestCase, ptr %7011, i64 -1, i32 2, i32 2
  %7044 = icmp eq ptr %7042, %7043
  br i1 %7044, label %7046, label %7045

7045:                                             ; preds = %7040
  call void @_ZdlPv(ptr noundef %7042) #22
  br label %7046

7046:                                             ; preds = %7045, %7040
  %7047 = load ptr, ptr %7012, align 8, !tbaa !23
  %7048 = getelementptr %struct.TestCase, ptr %7011, i64 -1, i32 0, i32 2
  %7049 = icmp eq ptr %7047, %7048
  br i1 %7049, label %7051, label %7050

7050:                                             ; preds = %7046
  call void @_ZdlPv(ptr noundef %7047) #22
  br label %7051

7051:                                             ; preds = %7046, %7050
  %7052 = icmp eq ptr %7012, %254
  br i1 %7052, label %7053, label %7010

7053:                                             ; preds = %7051, %7007
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %254) #21
  br label %762

7054:                                             ; preds = %6263, %6266
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %254) #21
  store i32 %6161, ptr @dummy231, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %255)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %256)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %257)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %258)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %259)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %260)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %261)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %262)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %263)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %264)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %265)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %266)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %267)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %268)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %269)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %242)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %241) #21
  %7055 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %242, i64 0, i32 2
  store ptr %7055, ptr %242, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %240) #21
  store i64 54, ptr %240, align 8, !tbaa !74
  %7056 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %242, ptr noundef nonnull align 8 dereferenceable(8) %240, i64 noundef 0)
  store ptr %7056, ptr %242, align 8, !tbaa !23
  %7057 = load i64, ptr %240, align 8, !tbaa !74
  store i64 %7057, ptr %7055, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(54) %7056, ptr noundef nonnull align 1 dereferenceable(54) @.str.103, i64 54, i1 false)
  %7058 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %242, i64 0, i32 1
  store i64 %7057, ptr %7058, align 8, !tbaa !10
  %7059 = getelementptr inbounds i8, ptr %7056, i64 %7057
  store i8 0, ptr %7059, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %240) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %241, ptr noundef nonnull %242, i32 noundef 0)
          to label %7060 unwind label %7105

7060:                                             ; preds = %7054
  %7061 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 4, ptr nonnull %241, i64 1)
          to label %7062 unwind label %7107

7062:                                             ; preds = %7060
  %7063 = getelementptr inbounds %struct.TestCase, ptr %241, i64 0, i32 3, i32 0, i32 1
  %7064 = load ptr, ptr %7063, align 8, !tbaa !88
  %7065 = icmp eq ptr %7064, null
  br i1 %7065, label %7090, label %7066

7066:                                             ; preds = %7062
  %7067 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7064, i64 0, i32 1
  %7068 = load atomic i64, ptr %7067 acquire, align 8
  %7069 = icmp eq i64 %7068, 4294967297
  %7070 = trunc i64 %7068 to i32
  br i1 %7069, label %7071, label %7079

7071:                                             ; preds = %7066
  store i32 0, ptr %7067, align 8, !tbaa !90
  %7072 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7064, i64 0, i32 2
  store i32 0, ptr %7072, align 4, !tbaa !92
  %7073 = load ptr, ptr %7064, align 8, !tbaa !58
  %7074 = getelementptr inbounds ptr, ptr %7073, i64 2
  %7075 = load ptr, ptr %7074, align 8
  call void %7075(ptr noundef nonnull align 8 dereferenceable(16) %7064) #21
  %7076 = load ptr, ptr %7064, align 8, !tbaa !58
  %7077 = getelementptr inbounds ptr, ptr %7076, i64 3
  %7078 = load ptr, ptr %7077, align 8
  call void %7078(ptr noundef nonnull align 8 dereferenceable(16) %7064) #21
  br label %7090

7079:                                             ; preds = %7066
  %7080 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7081 = icmp eq i8 %7080, 0
  br i1 %7081, label %7084, label %7082

7082:                                             ; preds = %7079
  %7083 = add nsw i32 %7070, -1
  store i32 %7083, ptr %7067, align 8, !tbaa !73
  br label %7086

7084:                                             ; preds = %7079
  %7085 = atomicrmw volatile add ptr %7067, i32 -1 acq_rel, align 4
  br label %7086

7086:                                             ; preds = %7084, %7082
  %7087 = phi i32 [ %7070, %7082 ], [ %7085, %7084 ]
  %7088 = icmp eq i32 %7087, 1
  br i1 %7088, label %7089, label %7090, !prof !42

7089:                                             ; preds = %7086
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7064) #21
  br label %7090

7090:                                             ; preds = %7089, %7086, %7071, %7062
  %7091 = getelementptr inbounds %struct.TestCase, ptr %241, i64 0, i32 2
  %7092 = load ptr, ptr %7091, align 8, !tbaa !23
  %7093 = getelementptr inbounds %struct.TestCase, ptr %241, i64 0, i32 2, i32 2
  %7094 = icmp eq ptr %7092, %7093
  br i1 %7094, label %7096, label %7095

7095:                                             ; preds = %7090
  call void @_ZdlPv(ptr noundef %7092) #22
  br label %7096

7096:                                             ; preds = %7095, %7090
  %7097 = load ptr, ptr %241, align 8, !tbaa !23
  %7098 = getelementptr inbounds %struct.TestCase, ptr %241, i64 0, i32 0, i32 2
  %7099 = icmp eq ptr %7097, %7098
  br i1 %7099, label %7101, label %7100

7100:                                             ; preds = %7096
  call void @_ZdlPv(ptr noundef %7097) #22
  br label %7101

7101:                                             ; preds = %7100, %7096
  %7102 = load ptr, ptr %242, align 8, !tbaa !23
  %7103 = icmp eq ptr %7102, %7055
  br i1 %7103, label %7153, label %7104

7104:                                             ; preds = %7101
  call void @_ZdlPv(ptr noundef %7102) #22
  br label %7153

7105:                                             ; preds = %7054
  %7106 = landingpad { ptr, i32 }
          cleanup
  br label %7147

7107:                                             ; preds = %7060
  %7108 = landingpad { ptr, i32 }
          cleanup
  %7109 = getelementptr inbounds %struct.TestCase, ptr %241, i64 0, i32 3, i32 0, i32 1
  %7110 = load ptr, ptr %7109, align 8, !tbaa !88
  %7111 = icmp eq ptr %7110, null
  br i1 %7111, label %7136, label %7112

7112:                                             ; preds = %7107
  %7113 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7110, i64 0, i32 1
  %7114 = load atomic i64, ptr %7113 acquire, align 8
  %7115 = icmp eq i64 %7114, 4294967297
  %7116 = trunc i64 %7114 to i32
  br i1 %7115, label %7117, label %7125

7117:                                             ; preds = %7112
  store i32 0, ptr %7113, align 8, !tbaa !90
  %7118 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7110, i64 0, i32 2
  store i32 0, ptr %7118, align 4, !tbaa !92
  %7119 = load ptr, ptr %7110, align 8, !tbaa !58
  %7120 = getelementptr inbounds ptr, ptr %7119, i64 2
  %7121 = load ptr, ptr %7120, align 8
  call void %7121(ptr noundef nonnull align 8 dereferenceable(16) %7110) #21
  %7122 = load ptr, ptr %7110, align 8, !tbaa !58
  %7123 = getelementptr inbounds ptr, ptr %7122, i64 3
  %7124 = load ptr, ptr %7123, align 8
  call void %7124(ptr noundef nonnull align 8 dereferenceable(16) %7110) #21
  br label %7136

7125:                                             ; preds = %7112
  %7126 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7127 = icmp eq i8 %7126, 0
  br i1 %7127, label %7130, label %7128

7128:                                             ; preds = %7125
  %7129 = add nsw i32 %7116, -1
  store i32 %7129, ptr %7113, align 8, !tbaa !73
  br label %7132

7130:                                             ; preds = %7125
  %7131 = atomicrmw volatile add ptr %7113, i32 -1 acq_rel, align 4
  br label %7132

7132:                                             ; preds = %7130, %7128
  %7133 = phi i32 [ %7116, %7128 ], [ %7131, %7130 ]
  %7134 = icmp eq i32 %7133, 1
  br i1 %7134, label %7135, label %7136, !prof !42

7135:                                             ; preds = %7132
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7110) #21
  br label %7136

7136:                                             ; preds = %7135, %7132, %7117, %7107
  %7137 = getelementptr inbounds %struct.TestCase, ptr %241, i64 0, i32 2
  %7138 = load ptr, ptr %7137, align 8, !tbaa !23
  %7139 = getelementptr inbounds %struct.TestCase, ptr %241, i64 0, i32 2, i32 2
  %7140 = icmp eq ptr %7138, %7139
  br i1 %7140, label %7142, label %7141

7141:                                             ; preds = %7136
  call void @_ZdlPv(ptr noundef %7138) #22
  br label %7142

7142:                                             ; preds = %7141, %7136
  %7143 = load ptr, ptr %241, align 8, !tbaa !23
  %7144 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %241, i64 0, i32 2
  %7145 = icmp eq ptr %7143, %7144
  br i1 %7145, label %7147, label %7146

7146:                                             ; preds = %7142
  call void @_ZdlPv(ptr noundef %7143) #22
  br label %7147

7147:                                             ; preds = %7146, %7142, %7105
  %7148 = phi { ptr, i32 } [ %7106, %7105 ], [ %7108, %7142 ], [ %7108, %7146 ]
  %7149 = load ptr, ptr %242, align 8, !tbaa !23
  %7150 = icmp eq ptr %7149, %7055
  br i1 %7150, label %7152, label %7151

7151:                                             ; preds = %7147
  call void @_ZdlPv(ptr noundef %7149) #22
  br label %7152

7152:                                             ; preds = %7151, %7147
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %241) #21
  br label %762

7153:                                             ; preds = %7101, %7104
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %241) #21
  store i32 %7061, ptr @dummy233, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %242)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %239) #21
  %7154 = getelementptr inbounds i8, ptr %239, i64 8
  store i64 0, ptr %7154, align 8
  %7155 = getelementptr inbounds %"class.std::function", ptr %239, i64 0, i32 1
  %7156 = getelementptr inbounds %"class.std::_Function_base", ptr %239, i64 0, i32 1
  store ptr @_Z17CheckInvertedRateRK7Results, ptr %239, align 8, !tbaa !47
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E9_M_invokeERKSt9_Any_dataS2_, ptr %7155, align 8, !tbaa !115
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, ptr %7156, align 8, !tbaa !118
  %7157 = invoke noundef i64 @_Z10AddCheckerPKcRKSt8functionIFvRK7ResultsEE(ptr noundef nonnull @.str.95, ptr noundef nonnull align 8 dereferenceable(32) %239)
          to label %7158 unwind label %7166

7158:                                             ; preds = %7153
  %7159 = load ptr, ptr %7156, align 8, !tbaa !118
  %7160 = icmp eq ptr %7159, null
  br i1 %7160, label %7176, label %7161

7161:                                             ; preds = %7158
  %7162 = invoke noundef zeroext i1 %7159(ptr noundef nonnull align 8 dereferenceable(16) %239, ptr noundef nonnull align 8 dereferenceable(16) %239, i32 noundef 3)
          to label %7176 unwind label %7163

7163:                                             ; preds = %7161
  %7164 = landingpad { ptr, i32 }
          catch ptr null
  %7165 = extractvalue { ptr, i32 } %7164, 0
  call void @__clang_call_terminate(ptr %7165) #24
  unreachable

7166:                                             ; preds = %7153
  %7167 = landingpad { ptr, i32 }
          cleanup
  %7168 = load ptr, ptr %7156, align 8, !tbaa !118
  %7169 = icmp eq ptr %7168, null
  br i1 %7169, label %7175, label %7170

7170:                                             ; preds = %7166
  %7171 = invoke noundef zeroext i1 %7168(ptr noundef nonnull align 8 dereferenceable(16) %239, ptr noundef nonnull align 8 dereferenceable(16) %239, i32 noundef 3)
          to label %7175 unwind label %7172

7172:                                             ; preds = %7170
  %7173 = landingpad { ptr, i32 }
          catch ptr null
  %7174 = extractvalue { ptr, i32 } %7173, 0
  call void @__clang_call_terminate(ptr %7174) #24
  unreachable

7175:                                             ; preds = %7170, %7166
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %239) #21
  br label %762

7176:                                             ; preds = %7158, %7161
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %239) #21
  store i64 %7157, ptr @dummy242, align 8, !tbaa !74
  %7177 = call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #25
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %7177, ptr noundef nonnull @.str.108)
          to label %7180 unwind label %7178

7178:                                             ; preds = %7176
  %7179 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %7177) #22
  br label %762

7180:                                             ; preds = %7176
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %7177, align 8, !tbaa !58
  %7181 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %7177, i64 0, i32 1
  store ptr @_Z19BM_Counters_ThreadsRN9benchmark5StateE, ptr %7181, align 8, !tbaa !93
  %7182 = call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %7177)
  %7183 = call noundef ptr @_ZN9benchmark8internal9Benchmark11ThreadRangeEii(ptr noundef nonnull align 8 dereferenceable(216) %7182, i32 noundef 1, i32 noundef 8)
  store ptr %7183, ptr @_ZL27benchmark_uniq_7_benchmark_, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %238)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %237) #21
  %7184 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %238, i64 0, i32 2
  store ptr %7184, ptr %238, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %236) #21
  store i64 76, ptr %236, align 8, !tbaa !74
  %7185 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %238, ptr noundef nonnull align 8 dereferenceable(8) %236, i64 noundef 0)
  store ptr %7185, ptr %238, align 8, !tbaa !23
  %7186 = load i64, ptr %236, align 8, !tbaa !74
  store i64 %7186, ptr %7184, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(76) %7185, ptr noundef nonnull align 1 dereferenceable(76) @.str.110, i64 76, i1 false)
  %7187 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %238, i64 0, i32 1
  store i64 %7186, ptr %7187, align 8, !tbaa !10
  %7188 = getelementptr inbounds i8, ptr %7185, i64 %7186
  store i8 0, ptr %7188, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %236) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %237, ptr noundef nonnull %238, i32 noundef 0)
          to label %7189 unwind label %7234

7189:                                             ; preds = %7180
  %7190 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 0, ptr nonnull %237, i64 1)
          to label %7191 unwind label %7236

7191:                                             ; preds = %7189
  %7192 = getelementptr inbounds %struct.TestCase, ptr %237, i64 0, i32 3, i32 0, i32 1
  %7193 = load ptr, ptr %7192, align 8, !tbaa !88
  %7194 = icmp eq ptr %7193, null
  br i1 %7194, label %7219, label %7195

7195:                                             ; preds = %7191
  %7196 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7193, i64 0, i32 1
  %7197 = load atomic i64, ptr %7196 acquire, align 8
  %7198 = icmp eq i64 %7197, 4294967297
  %7199 = trunc i64 %7197 to i32
  br i1 %7198, label %7200, label %7208

7200:                                             ; preds = %7195
  store i32 0, ptr %7196, align 8, !tbaa !90
  %7201 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7193, i64 0, i32 2
  store i32 0, ptr %7201, align 4, !tbaa !92
  %7202 = load ptr, ptr %7193, align 8, !tbaa !58
  %7203 = getelementptr inbounds ptr, ptr %7202, i64 2
  %7204 = load ptr, ptr %7203, align 8
  call void %7204(ptr noundef nonnull align 8 dereferenceable(16) %7193) #21
  %7205 = load ptr, ptr %7193, align 8, !tbaa !58
  %7206 = getelementptr inbounds ptr, ptr %7205, i64 3
  %7207 = load ptr, ptr %7206, align 8
  call void %7207(ptr noundef nonnull align 8 dereferenceable(16) %7193) #21
  br label %7219

7208:                                             ; preds = %7195
  %7209 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7210 = icmp eq i8 %7209, 0
  br i1 %7210, label %7213, label %7211

7211:                                             ; preds = %7208
  %7212 = add nsw i32 %7199, -1
  store i32 %7212, ptr %7196, align 8, !tbaa !73
  br label %7215

7213:                                             ; preds = %7208
  %7214 = atomicrmw volatile add ptr %7196, i32 -1 acq_rel, align 4
  br label %7215

7215:                                             ; preds = %7213, %7211
  %7216 = phi i32 [ %7199, %7211 ], [ %7214, %7213 ]
  %7217 = icmp eq i32 %7216, 1
  br i1 %7217, label %7218, label %7219, !prof !42

7218:                                             ; preds = %7215
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7193) #21
  br label %7219

7219:                                             ; preds = %7218, %7215, %7200, %7191
  %7220 = getelementptr inbounds %struct.TestCase, ptr %237, i64 0, i32 2
  %7221 = load ptr, ptr %7220, align 8, !tbaa !23
  %7222 = getelementptr inbounds %struct.TestCase, ptr %237, i64 0, i32 2, i32 2
  %7223 = icmp eq ptr %7221, %7222
  br i1 %7223, label %7225, label %7224

7224:                                             ; preds = %7219
  call void @_ZdlPv(ptr noundef %7221) #22
  br label %7225

7225:                                             ; preds = %7224, %7219
  %7226 = load ptr, ptr %237, align 8, !tbaa !23
  %7227 = getelementptr inbounds %struct.TestCase, ptr %237, i64 0, i32 0, i32 2
  %7228 = icmp eq ptr %7226, %7227
  br i1 %7228, label %7230, label %7229

7229:                                             ; preds = %7225
  call void @_ZdlPv(ptr noundef %7226) #22
  br label %7230

7230:                                             ; preds = %7229, %7225
  %7231 = load ptr, ptr %238, align 8, !tbaa !23
  %7232 = icmp eq ptr %7231, %7184
  br i1 %7232, label %7282, label %7233

7233:                                             ; preds = %7230
  call void @_ZdlPv(ptr noundef %7231) #22
  br label %7282

7234:                                             ; preds = %7180
  %7235 = landingpad { ptr, i32 }
          cleanup
  br label %7276

7236:                                             ; preds = %7189
  %7237 = landingpad { ptr, i32 }
          cleanup
  %7238 = getelementptr inbounds %struct.TestCase, ptr %237, i64 0, i32 3, i32 0, i32 1
  %7239 = load ptr, ptr %7238, align 8, !tbaa !88
  %7240 = icmp eq ptr %7239, null
  br i1 %7240, label %7265, label %7241

7241:                                             ; preds = %7236
  %7242 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7239, i64 0, i32 1
  %7243 = load atomic i64, ptr %7242 acquire, align 8
  %7244 = icmp eq i64 %7243, 4294967297
  %7245 = trunc i64 %7243 to i32
  br i1 %7244, label %7246, label %7254

7246:                                             ; preds = %7241
  store i32 0, ptr %7242, align 8, !tbaa !90
  %7247 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7239, i64 0, i32 2
  store i32 0, ptr %7247, align 4, !tbaa !92
  %7248 = load ptr, ptr %7239, align 8, !tbaa !58
  %7249 = getelementptr inbounds ptr, ptr %7248, i64 2
  %7250 = load ptr, ptr %7249, align 8
  call void %7250(ptr noundef nonnull align 8 dereferenceable(16) %7239) #21
  %7251 = load ptr, ptr %7239, align 8, !tbaa !58
  %7252 = getelementptr inbounds ptr, ptr %7251, i64 3
  %7253 = load ptr, ptr %7252, align 8
  call void %7253(ptr noundef nonnull align 8 dereferenceable(16) %7239) #21
  br label %7265

7254:                                             ; preds = %7241
  %7255 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7256 = icmp eq i8 %7255, 0
  br i1 %7256, label %7259, label %7257

7257:                                             ; preds = %7254
  %7258 = add nsw i32 %7245, -1
  store i32 %7258, ptr %7242, align 8, !tbaa !73
  br label %7261

7259:                                             ; preds = %7254
  %7260 = atomicrmw volatile add ptr %7242, i32 -1 acq_rel, align 4
  br label %7261

7261:                                             ; preds = %7259, %7257
  %7262 = phi i32 [ %7245, %7257 ], [ %7260, %7259 ]
  %7263 = icmp eq i32 %7262, 1
  br i1 %7263, label %7264, label %7265, !prof !42

7264:                                             ; preds = %7261
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7239) #21
  br label %7265

7265:                                             ; preds = %7264, %7261, %7246, %7236
  %7266 = getelementptr inbounds %struct.TestCase, ptr %237, i64 0, i32 2
  %7267 = load ptr, ptr %7266, align 8, !tbaa !23
  %7268 = getelementptr inbounds %struct.TestCase, ptr %237, i64 0, i32 2, i32 2
  %7269 = icmp eq ptr %7267, %7268
  br i1 %7269, label %7271, label %7270

7270:                                             ; preds = %7265
  call void @_ZdlPv(ptr noundef %7267) #22
  br label %7271

7271:                                             ; preds = %7270, %7265
  %7272 = load ptr, ptr %237, align 8, !tbaa !23
  %7273 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %237, i64 0, i32 2
  %7274 = icmp eq ptr %7272, %7273
  br i1 %7274, label %7276, label %7275

7275:                                             ; preds = %7271
  call void @_ZdlPv(ptr noundef %7272) #22
  br label %7276

7276:                                             ; preds = %7275, %7271, %7234
  %7277 = phi { ptr, i32 } [ %7235, %7234 ], [ %7237, %7271 ], [ %7237, %7275 ]
  %7278 = load ptr, ptr %238, align 8, !tbaa !23
  %7279 = icmp eq ptr %7278, %7184
  br i1 %7279, label %7281, label %7280

7280:                                             ; preds = %7276
  call void @_ZdlPv(ptr noundef %7278) #22
  br label %7281

7281:                                             ; preds = %7280, %7276
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %237) #21
  br label %762

7282:                                             ; preds = %7230, %7233
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %237) #21
  store i32 %7190, ptr @dummy256, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %238)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %221)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %222)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %223)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %224)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %225)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %226)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %227)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %228)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %229)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %230)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %231)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %232)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %233)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %234)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %235)
  call void @llvm.lifetime.start.p0(i64 1320, ptr nonnull %220) #21
  %7283 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %221, i64 0, i32 2
  store ptr %7283, ptr %221, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %219) #21
  store i64 44, ptr %219, align 8, !tbaa !74
  %7284 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %221, ptr noundef nonnull align 8 dereferenceable(8) %219, i64 noundef 0)
  store ptr %7284, ptr %221, align 8, !tbaa !23
  %7285 = load i64, ptr %219, align 8, !tbaa !74
  store i64 %7285, ptr %7283, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(44) %7284, ptr noundef nonnull align 1 dereferenceable(44) @.str.112, i64 44, i1 false)
  %7286 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %221, i64 0, i32 1
  store i64 %7285, ptr %7286, align 8, !tbaa !10
  %7287 = getelementptr inbounds i8, ptr %7284, i64 %7285
  store i8 0, ptr %7287, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %219) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %220, ptr noundef nonnull %221, i32 noundef 0)
          to label %7288 unwind label %7504

7288:                                             ; preds = %7282
  %7289 = getelementptr inbounds %struct.TestCase, ptr %220, i64 1
  %7290 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %222, i64 0, i32 2
  store ptr %7290, ptr %222, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %218) #21
  store i64 19, ptr %218, align 8, !tbaa !74
  %7291 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %222, ptr noundef nonnull align 8 dereferenceable(8) %218, i64 noundef 0)
          to label %7292 unwind label %7506

7292:                                             ; preds = %7288
  store ptr %7291, ptr %222, align 8, !tbaa !23
  %7293 = load i64, ptr %218, align 8, !tbaa !74
  store i64 %7293, ptr %7290, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %7291, ptr noundef nonnull align 1 dereferenceable(19) @.str.113, i64 19, i1 false)
  %7294 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %222, i64 0, i32 1
  store i64 %7293, ptr %7294, align 8, !tbaa !10
  %7295 = load ptr, ptr %222, align 8, !tbaa !23
  %7296 = getelementptr inbounds i8, ptr %7295, i64 %7293
  store i8 0, ptr %7296, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %218) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %7289, ptr noundef nonnull %222, i32 noundef 1)
          to label %7297 unwind label %7508

7297:                                             ; preds = %7292
  %7298 = getelementptr inbounds %struct.TestCase, ptr %220, i64 2
  %7299 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %223, i64 0, i32 2
  store ptr %7299, ptr %223, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %217) #21
  store i64 32, ptr %217, align 8, !tbaa !74
  %7300 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %223, ptr noundef nonnull align 8 dereferenceable(8) %217, i64 noundef 0)
          to label %7301 unwind label %7510

7301:                                             ; preds = %7297
  store ptr %7300, ptr %223, align 8, !tbaa !23
  %7302 = load i64, ptr %217, align 8, !tbaa !74
  store i64 %7302, ptr %7299, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %7300, ptr noundef nonnull align 1 dereferenceable(32) @.str.15, i64 32, i1 false)
  %7303 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %223, i64 0, i32 1
  store i64 %7302, ptr %7303, align 8, !tbaa !10
  %7304 = load ptr, ptr %223, align 8, !tbaa !23
  %7305 = getelementptr inbounds i8, ptr %7304, i64 %7302
  store i8 0, ptr %7305, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %217) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %7298, ptr noundef nonnull %223, i32 noundef 1)
          to label %7306 unwind label %7512

7306:                                             ; preds = %7301
  %7307 = getelementptr inbounds %struct.TestCase, ptr %220, i64 3
  %7308 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %224, i64 0, i32 2
  store ptr %7308, ptr %224, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %216) #21
  store i64 48, ptr %216, align 8, !tbaa !74
  %7309 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %224, ptr noundef nonnull align 8 dereferenceable(8) %216, i64 noundef 0)
          to label %7310 unwind label %7514

7310:                                             ; preds = %7306
  store ptr %7309, ptr %224, align 8, !tbaa !23
  %7311 = load i64, ptr %216, align 8, !tbaa !74
  store i64 %7311, ptr %7308, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(48) %7309, ptr noundef nonnull align 1 dereferenceable(48) @.str.114, i64 48, i1 false)
  %7312 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %224, i64 0, i32 1
  store i64 %7311, ptr %7312, align 8, !tbaa !10
  %7313 = getelementptr inbounds i8, ptr %7309, i64 %7311
  store i8 0, ptr %7313, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %216) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %7307, ptr noundef nonnull %224, i32 noundef 1)
          to label %7314 unwind label %7516

7314:                                             ; preds = %7310
  %7315 = getelementptr inbounds %struct.TestCase, ptr %220, i64 4
  %7316 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %225, i64 0, i32 2
  store ptr %7316, ptr %225, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %215) #21
  store i64 25, ptr %215, align 8, !tbaa !74
  %7317 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %225, ptr noundef nonnull align 8 dereferenceable(8) %215, i64 noundef 0)
          to label %7318 unwind label %7518

7318:                                             ; preds = %7314
  store ptr %7317, ptr %225, align 8, !tbaa !23
  %7319 = load i64, ptr %215, align 8, !tbaa !74
  store i64 %7319, ptr %7316, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(25) %7317, ptr noundef nonnull align 1 dereferenceable(25) @.str.17, i64 25, i1 false)
  %7320 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %225, i64 0, i32 1
  store i64 %7319, ptr %7320, align 8, !tbaa !10
  %7321 = load ptr, ptr %225, align 8, !tbaa !23
  %7322 = getelementptr inbounds i8, ptr %7321, i64 %7319
  store i8 0, ptr %7322, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %215) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %7315, ptr noundef nonnull %225, i32 noundef 1)
          to label %7323 unwind label %7520

7323:                                             ; preds = %7318
  %7324 = getelementptr inbounds %struct.TestCase, ptr %220, i64 5
  %7325 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %226, i64 0, i32 2
  store ptr %7325, ptr %226, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %214) #21
  store i64 18, ptr %214, align 8, !tbaa !74
  %7326 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %226, ptr noundef nonnull align 8 dereferenceable(8) %214, i64 noundef 0)
          to label %7327 unwind label %7522

7327:                                             ; preds = %7323
  store ptr %7326, ptr %226, align 8, !tbaa !23
  %7328 = load i64, ptr %214, align 8, !tbaa !74
  store i64 %7328, ptr %7325, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(18) %7326, ptr noundef nonnull align 1 dereferenceable(18) @.str.18, i64 18, i1 false)
  %7329 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %226, i64 0, i32 1
  store i64 %7328, ptr %7329, align 8, !tbaa !10
  %7330 = load ptr, ptr %226, align 8, !tbaa !23
  %7331 = getelementptr inbounds i8, ptr %7330, i64 %7328
  store i8 0, ptr %7331, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %214) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %7324, ptr noundef nonnull %226, i32 noundef 1)
          to label %7332 unwind label %7524

7332:                                             ; preds = %7327
  %7333 = getelementptr inbounds %struct.TestCase, ptr %220, i64 6
  %7334 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %227, i64 0, i32 2
  store ptr %7334, ptr %227, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %213) #21
  store i64 23, ptr %213, align 8, !tbaa !74
  %7335 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %227, ptr noundef nonnull align 8 dereferenceable(8) %213, i64 noundef 0)
          to label %7336 unwind label %7526

7336:                                             ; preds = %7332
  store ptr %7335, ptr %227, align 8, !tbaa !23
  %7337 = load i64, ptr %213, align 8, !tbaa !74
  store i64 %7337, ptr %7334, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(23) %7335, ptr noundef nonnull align 1 dereferenceable(23) @.str.19, i64 23, i1 false)
  %7338 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %227, i64 0, i32 1
  store i64 %7337, ptr %7338, align 8, !tbaa !10
  %7339 = load ptr, ptr %227, align 8, !tbaa !23
  %7340 = getelementptr inbounds i8, ptr %7339, i64 %7337
  store i8 0, ptr %7340, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %213) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %7333, ptr noundef nonnull %227, i32 noundef 1)
          to label %7341 unwind label %7528

7341:                                             ; preds = %7336
  %7342 = getelementptr inbounds %struct.TestCase, ptr %220, i64 7
  %7343 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %228, i64 0, i32 2
  store ptr %7343, ptr %228, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %7343, ptr noundef nonnull align 1 dereferenceable(14) @.str.20, i64 14, i1 false)
  %7344 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %228, i64 0, i32 1
  store i64 14, ptr %7344, align 8, !tbaa !10
  %7345 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %228, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %7345, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %7342, ptr noundef nonnull %228, i32 noundef 1)
          to label %7346 unwind label %7530

7346:                                             ; preds = %7341
  %7347 = getelementptr inbounds %struct.TestCase, ptr %220, i64 8
  %7348 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %229, i64 0, i32 2
  store ptr %7348, ptr %229, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %212) #21
  store i64 20, ptr %212, align 8, !tbaa !74
  %7349 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %229, ptr noundef nonnull align 8 dereferenceable(8) %212, i64 noundef 0)
          to label %7350 unwind label %7532

7350:                                             ; preds = %7346
  store ptr %7349, ptr %229, align 8, !tbaa !23
  %7351 = load i64, ptr %212, align 8, !tbaa !74
  store i64 %7351, ptr %7348, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %7349, ptr noundef nonnull align 1 dereferenceable(20) @.str.21, i64 20, i1 false)
  %7352 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %229, i64 0, i32 1
  store i64 %7351, ptr %7352, align 8, !tbaa !10
  %7353 = load ptr, ptr %229, align 8, !tbaa !23
  %7354 = getelementptr inbounds i8, ptr %7353, i64 %7351
  store i8 0, ptr %7354, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %212) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %7347, ptr noundef nonnull %229, i32 noundef 1)
          to label %7355 unwind label %7534

7355:                                             ; preds = %7350
  %7356 = getelementptr inbounds %struct.TestCase, ptr %220, i64 9
  %7357 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %230, i64 0, i32 2
  store ptr %7357, ptr %230, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %211) #21
  store i64 21, ptr %211, align 8, !tbaa !74
  %7358 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %230, ptr noundef nonnull align 8 dereferenceable(8) %211, i64 noundef 0)
          to label %7359 unwind label %7536

7359:                                             ; preds = %7355
  store ptr %7358, ptr %230, align 8, !tbaa !23
  %7360 = load i64, ptr %211, align 8, !tbaa !74
  store i64 %7360, ptr %7357, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %7358, ptr noundef nonnull align 1 dereferenceable(21) @.str.22, i64 21, i1 false)
  %7361 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %230, i64 0, i32 1
  store i64 %7360, ptr %7361, align 8, !tbaa !10
  %7362 = load ptr, ptr %230, align 8, !tbaa !23
  %7363 = getelementptr inbounds i8, ptr %7362, i64 %7360
  store i8 0, ptr %7363, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %211) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %7356, ptr noundef nonnull %230, i32 noundef 1)
          to label %7364 unwind label %7538

7364:                                             ; preds = %7359
  %7365 = getelementptr inbounds %struct.TestCase, ptr %220, i64 10
  %7366 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %231, i64 0, i32 2
  store ptr %7366, ptr %231, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %210) #21
  store i64 20, ptr %210, align 8, !tbaa !74
  %7367 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %231, ptr noundef nonnull align 8 dereferenceable(8) %210, i64 noundef 0)
          to label %7368 unwind label %7540

7368:                                             ; preds = %7364
  store ptr %7367, ptr %231, align 8, !tbaa !23
  %7369 = load i64, ptr %210, align 8, !tbaa !74
  store i64 %7369, ptr %7366, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %7367, ptr noundef nonnull align 1 dereferenceable(20) @.str.23, i64 20, i1 false)
  %7370 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %231, i64 0, i32 1
  store i64 %7369, ptr %7370, align 8, !tbaa !10
  %7371 = load ptr, ptr %231, align 8, !tbaa !23
  %7372 = getelementptr inbounds i8, ptr %7371, i64 %7369
  store i8 0, ptr %7372, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %210) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %7365, ptr noundef nonnull %231, i32 noundef 1)
          to label %7373 unwind label %7542

7373:                                             ; preds = %7368
  %7374 = getelementptr inbounds %struct.TestCase, ptr %220, i64 11
  %7375 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %232, i64 0, i32 2
  store ptr %7375, ptr %232, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %209) #21
  store i64 19, ptr %209, align 8, !tbaa !74
  %7376 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %232, ptr noundef nonnull align 8 dereferenceable(8) %209, i64 noundef 0)
          to label %7377 unwind label %7544

7377:                                             ; preds = %7373
  store ptr %7376, ptr %232, align 8, !tbaa !23
  %7378 = load i64, ptr %209, align 8, !tbaa !74
  store i64 %7378, ptr %7375, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %7376, ptr noundef nonnull align 1 dereferenceable(19) @.str.24, i64 19, i1 false)
  %7379 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %232, i64 0, i32 1
  store i64 %7378, ptr %7379, align 8, !tbaa !10
  %7380 = load ptr, ptr %232, align 8, !tbaa !23
  %7381 = getelementptr inbounds i8, ptr %7380, i64 %7378
  store i8 0, ptr %7381, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %209) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %7374, ptr noundef nonnull %232, i32 noundef 1)
          to label %7382 unwind label %7546

7382:                                             ; preds = %7377
  %7383 = getelementptr inbounds %struct.TestCase, ptr %220, i64 12
  %7384 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %233, i64 0, i32 2
  store ptr %7384, ptr %233, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(15) %7384, ptr noundef nonnull align 1 dereferenceable(15) @.str.25, i64 15, i1 false)
  %7385 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %233, i64 0, i32 1
  store i64 15, ptr %7385, align 8, !tbaa !10
  %7386 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %233, i64 0, i32 2, i32 1, i64 7
  store i8 0, ptr %7386, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %7383, ptr noundef nonnull %233, i32 noundef 1)
          to label %7387 unwind label %7548

7387:                                             ; preds = %7382
  %7388 = getelementptr inbounds %struct.TestCase, ptr %220, i64 13
  %7389 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %234, i64 0, i32 2
  store ptr %7389, ptr %234, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %7389, ptr noundef nonnull align 1 dereferenceable(14) @.str.26, i64 14, i1 false)
  %7390 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %234, i64 0, i32 1
  store i64 14, ptr %7390, align 8, !tbaa !10
  %7391 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %234, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %7391, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %7388, ptr noundef nonnull %234, i32 noundef 1)
          to label %7392 unwind label %7550

7392:                                             ; preds = %7387
  %7393 = getelementptr inbounds %struct.TestCase, ptr %220, i64 14
  %7394 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %235, i64 0, i32 2
  store ptr %7394, ptr %235, align 8, !tbaa !5
  store i8 125, ptr %7394, align 8, !tbaa !13
  %7395 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %235, i64 0, i32 1
  store i64 1, ptr %7395, align 8, !tbaa !10
  %7396 = getelementptr inbounds i8, ptr %235, i64 17
  store i8 0, ptr %7396, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %7393, ptr noundef nonnull %235, i32 noundef 1)
          to label %7397 unwind label %7552

7397:                                             ; preds = %7392
  %7398 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 2, ptr nonnull %220, i64 15)
          to label %7399 unwind label %7554

7399:                                             ; preds = %7397
  %7400 = getelementptr inbounds %struct.TestCase, ptr %220, i64 15
  br label %7401

7401:                                             ; preds = %7442, %7399
  %7402 = phi ptr [ %7400, %7399 ], [ %7403, %7442 ]
  %7403 = getelementptr inbounds %struct.TestCase, ptr %7402, i64 -1
  %7404 = getelementptr %struct.TestCase, ptr %7402, i64 -1, i32 3, i32 0, i32 1
  %7405 = load ptr, ptr %7404, align 8, !tbaa !88
  %7406 = icmp eq ptr %7405, null
  br i1 %7406, label %7431, label %7407

7407:                                             ; preds = %7401
  %7408 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7405, i64 0, i32 1
  %7409 = load atomic i64, ptr %7408 acquire, align 8
  %7410 = icmp eq i64 %7409, 4294967297
  %7411 = trunc i64 %7409 to i32
  br i1 %7410, label %7412, label %7420

7412:                                             ; preds = %7407
  store i32 0, ptr %7408, align 8, !tbaa !90
  %7413 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7405, i64 0, i32 2
  store i32 0, ptr %7413, align 4, !tbaa !92
  %7414 = load ptr, ptr %7405, align 8, !tbaa !58
  %7415 = getelementptr inbounds ptr, ptr %7414, i64 2
  %7416 = load ptr, ptr %7415, align 8
  call void %7416(ptr noundef nonnull align 8 dereferenceable(16) %7405) #21
  %7417 = load ptr, ptr %7405, align 8, !tbaa !58
  %7418 = getelementptr inbounds ptr, ptr %7417, i64 3
  %7419 = load ptr, ptr %7418, align 8
  call void %7419(ptr noundef nonnull align 8 dereferenceable(16) %7405) #21
  br label %7431

7420:                                             ; preds = %7407
  %7421 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7422 = icmp eq i8 %7421, 0
  br i1 %7422, label %7425, label %7423

7423:                                             ; preds = %7420
  %7424 = add nsw i32 %7411, -1
  store i32 %7424, ptr %7408, align 8, !tbaa !73
  br label %7427

7425:                                             ; preds = %7420
  %7426 = atomicrmw volatile add ptr %7408, i32 -1 acq_rel, align 4
  br label %7427

7427:                                             ; preds = %7425, %7423
  %7428 = phi i32 [ %7411, %7423 ], [ %7426, %7425 ]
  %7429 = icmp eq i32 %7428, 1
  br i1 %7429, label %7430, label %7431, !prof !42

7430:                                             ; preds = %7427
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7405) #21
  br label %7431

7431:                                             ; preds = %7430, %7427, %7412, %7401
  %7432 = getelementptr %struct.TestCase, ptr %7402, i64 -1, i32 2
  %7433 = load ptr, ptr %7432, align 8, !tbaa !23
  %7434 = getelementptr %struct.TestCase, ptr %7402, i64 -1, i32 2, i32 2
  %7435 = icmp eq ptr %7433, %7434
  br i1 %7435, label %7437, label %7436

7436:                                             ; preds = %7431
  call void @_ZdlPv(ptr noundef %7433) #22
  br label %7437

7437:                                             ; preds = %7436, %7431
  %7438 = load ptr, ptr %7403, align 8, !tbaa !23
  %7439 = getelementptr %struct.TestCase, ptr %7402, i64 -1, i32 0, i32 2
  %7440 = icmp eq ptr %7438, %7439
  br i1 %7440, label %7442, label %7441

7441:                                             ; preds = %7437
  call void @_ZdlPv(ptr noundef %7438) #22
  br label %7442

7442:                                             ; preds = %7441, %7437
  %7443 = icmp eq ptr %7403, %220
  br i1 %7443, label %7444, label %7401

7444:                                             ; preds = %7442
  %7445 = load ptr, ptr %235, align 8, !tbaa !23
  %7446 = icmp eq ptr %7445, %7394
  br i1 %7446, label %7448, label %7447

7447:                                             ; preds = %7444
  call void @_ZdlPv(ptr noundef %7445) #22
  br label %7448

7448:                                             ; preds = %7447, %7444
  %7449 = load ptr, ptr %234, align 8, !tbaa !23
  %7450 = icmp eq ptr %7449, %7389
  br i1 %7450, label %7452, label %7451

7451:                                             ; preds = %7448
  call void @_ZdlPv(ptr noundef %7449) #22
  br label %7452

7452:                                             ; preds = %7451, %7448
  %7453 = load ptr, ptr %233, align 8, !tbaa !23
  %7454 = icmp eq ptr %7453, %7384
  br i1 %7454, label %7456, label %7455

7455:                                             ; preds = %7452
  call void @_ZdlPv(ptr noundef %7453) #22
  br label %7456

7456:                                             ; preds = %7455, %7452
  %7457 = load ptr, ptr %232, align 8, !tbaa !23
  %7458 = icmp eq ptr %7457, %7375
  br i1 %7458, label %7460, label %7459

7459:                                             ; preds = %7456
  call void @_ZdlPv(ptr noundef %7457) #22
  br label %7460

7460:                                             ; preds = %7459, %7456
  %7461 = load ptr, ptr %231, align 8, !tbaa !23
  %7462 = icmp eq ptr %7461, %7366
  br i1 %7462, label %7464, label %7463

7463:                                             ; preds = %7460
  call void @_ZdlPv(ptr noundef %7461) #22
  br label %7464

7464:                                             ; preds = %7463, %7460
  %7465 = load ptr, ptr %230, align 8, !tbaa !23
  %7466 = icmp eq ptr %7465, %7357
  br i1 %7466, label %7468, label %7467

7467:                                             ; preds = %7464
  call void @_ZdlPv(ptr noundef %7465) #22
  br label %7468

7468:                                             ; preds = %7467, %7464
  %7469 = load ptr, ptr %229, align 8, !tbaa !23
  %7470 = icmp eq ptr %7469, %7348
  br i1 %7470, label %7472, label %7471

7471:                                             ; preds = %7468
  call void @_ZdlPv(ptr noundef %7469) #22
  br label %7472

7472:                                             ; preds = %7471, %7468
  %7473 = load ptr, ptr %228, align 8, !tbaa !23
  %7474 = icmp eq ptr %7473, %7343
  br i1 %7474, label %7476, label %7475

7475:                                             ; preds = %7472
  call void @_ZdlPv(ptr noundef %7473) #22
  br label %7476

7476:                                             ; preds = %7475, %7472
  %7477 = load ptr, ptr %227, align 8, !tbaa !23
  %7478 = icmp eq ptr %7477, %7334
  br i1 %7478, label %7480, label %7479

7479:                                             ; preds = %7476
  call void @_ZdlPv(ptr noundef %7477) #22
  br label %7480

7480:                                             ; preds = %7479, %7476
  %7481 = load ptr, ptr %226, align 8, !tbaa !23
  %7482 = icmp eq ptr %7481, %7325
  br i1 %7482, label %7484, label %7483

7483:                                             ; preds = %7480
  call void @_ZdlPv(ptr noundef %7481) #22
  br label %7484

7484:                                             ; preds = %7483, %7480
  %7485 = load ptr, ptr %225, align 8, !tbaa !23
  %7486 = icmp eq ptr %7485, %7316
  br i1 %7486, label %7488, label %7487

7487:                                             ; preds = %7484
  call void @_ZdlPv(ptr noundef %7485) #22
  br label %7488

7488:                                             ; preds = %7487, %7484
  %7489 = load ptr, ptr %224, align 8, !tbaa !23
  %7490 = icmp eq ptr %7489, %7308
  br i1 %7490, label %7492, label %7491

7491:                                             ; preds = %7488
  call void @_ZdlPv(ptr noundef %7489) #22
  br label %7492

7492:                                             ; preds = %7491, %7488
  %7493 = load ptr, ptr %223, align 8, !tbaa !23
  %7494 = icmp eq ptr %7493, %7299
  br i1 %7494, label %7496, label %7495

7495:                                             ; preds = %7492
  call void @_ZdlPv(ptr noundef %7493) #22
  br label %7496

7496:                                             ; preds = %7495, %7492
  %7497 = load ptr, ptr %222, align 8, !tbaa !23
  %7498 = icmp eq ptr %7497, %7290
  br i1 %7498, label %7500, label %7499

7499:                                             ; preds = %7496
  call void @_ZdlPv(ptr noundef %7497) #22
  br label %7500

7500:                                             ; preds = %7499, %7496
  %7501 = load ptr, ptr %221, align 8, !tbaa !23
  %7502 = icmp eq ptr %7501, %7283
  br i1 %7502, label %8291, label %7503

7503:                                             ; preds = %7500
  call void @_ZdlPv(ptr noundef %7501) #22
  br label %8291

7504:                                             ; preds = %7282
  %7505 = landingpad { ptr, i32 }
          cleanup
  br label %8237

7506:                                             ; preds = %7288
  %7507 = landingpad { ptr, i32 }
          cleanup
  br label %8237

7508:                                             ; preds = %7292
  %7509 = landingpad { ptr, i32 }
          cleanup
  br label %8230

7510:                                             ; preds = %7297
  %7511 = landingpad { ptr, i32 }
          cleanup
  br label %8230

7512:                                             ; preds = %7301
  %7513 = landingpad { ptr, i32 }
          cleanup
  br label %8223

7514:                                             ; preds = %7306
  %7515 = landingpad { ptr, i32 }
          cleanup
  br label %8223

7516:                                             ; preds = %7310
  %7517 = landingpad { ptr, i32 }
          cleanup
  br label %8216

7518:                                             ; preds = %7314
  %7519 = landingpad { ptr, i32 }
          cleanup
  br label %8216

7520:                                             ; preds = %7318
  %7521 = landingpad { ptr, i32 }
          cleanup
  br label %8209

7522:                                             ; preds = %7323
  %7523 = landingpad { ptr, i32 }
          cleanup
  br label %8209

7524:                                             ; preds = %7327
  %7525 = landingpad { ptr, i32 }
          cleanup
  br label %8202

7526:                                             ; preds = %7332
  %7527 = landingpad { ptr, i32 }
          cleanup
  br label %8202

7528:                                             ; preds = %7336
  %7529 = landingpad { ptr, i32 }
          cleanup
  br label %8195

7530:                                             ; preds = %7341
  %7531 = landingpad { ptr, i32 }
          cleanup
  br label %8188

7532:                                             ; preds = %7346
  %7533 = landingpad { ptr, i32 }
          cleanup
  br label %8188

7534:                                             ; preds = %7350
  %7535 = landingpad { ptr, i32 }
          cleanup
  br label %8181

7536:                                             ; preds = %7355
  %7537 = landingpad { ptr, i32 }
          cleanup
  br label %8181

7538:                                             ; preds = %7359
  %7539 = landingpad { ptr, i32 }
          cleanup
  br label %8174

7540:                                             ; preds = %7364
  %7541 = landingpad { ptr, i32 }
          cleanup
  br label %8174

7542:                                             ; preds = %7368
  %7543 = landingpad { ptr, i32 }
          cleanup
  br label %8167

7544:                                             ; preds = %7373
  %7545 = landingpad { ptr, i32 }
          cleanup
  br label %8167

7546:                                             ; preds = %7377
  %7547 = landingpad { ptr, i32 }
          cleanup
  br label %8160

7548:                                             ; preds = %7382
  %7549 = landingpad { ptr, i32 }
          cleanup
  br label %8153

7550:                                             ; preds = %7387
  %7551 = landingpad { ptr, i32 }
          cleanup
  br label %8146

7552:                                             ; preds = %7392
  %7553 = landingpad { ptr, i32 }
          cleanup
  br label %8140

7554:                                             ; preds = %7397
  %7555 = landingpad { ptr, i32 }
          cleanup
  %7556 = getelementptr inbounds %struct.TestCase, ptr %220, i64 14, i32 3, i32 0, i32 1
  %7557 = load ptr, ptr %7556, align 8, !tbaa !88
  %7558 = icmp eq ptr %7557, null
  br i1 %7558, label %7583, label %7559

7559:                                             ; preds = %7554
  %7560 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7557, i64 0, i32 1
  %7561 = load atomic i64, ptr %7560 acquire, align 8
  %7562 = icmp eq i64 %7561, 4294967297
  %7563 = trunc i64 %7561 to i32
  br i1 %7562, label %7564, label %7572

7564:                                             ; preds = %7559
  store i32 0, ptr %7560, align 8, !tbaa !90
  %7565 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7557, i64 0, i32 2
  store i32 0, ptr %7565, align 4, !tbaa !92
  %7566 = load ptr, ptr %7557, align 8, !tbaa !58
  %7567 = getelementptr inbounds ptr, ptr %7566, i64 2
  %7568 = load ptr, ptr %7567, align 8
  call void %7568(ptr noundef nonnull align 8 dereferenceable(16) %7557) #21
  %7569 = load ptr, ptr %7557, align 8, !tbaa !58
  %7570 = getelementptr inbounds ptr, ptr %7569, i64 3
  %7571 = load ptr, ptr %7570, align 8
  call void %7571(ptr noundef nonnull align 8 dereferenceable(16) %7557) #21
  br label %7583

7572:                                             ; preds = %7559
  %7573 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7574 = icmp eq i8 %7573, 0
  br i1 %7574, label %7577, label %7575

7575:                                             ; preds = %7572
  %7576 = add nsw i32 %7563, -1
  store i32 %7576, ptr %7560, align 8, !tbaa !73
  br label %7579

7577:                                             ; preds = %7572
  %7578 = atomicrmw volatile add ptr %7560, i32 -1 acq_rel, align 4
  br label %7579

7579:                                             ; preds = %7577, %7575
  %7580 = phi i32 [ %7563, %7575 ], [ %7578, %7577 ]
  %7581 = icmp eq i32 %7580, 1
  br i1 %7581, label %7582, label %7583, !prof !42

7582:                                             ; preds = %7579
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7557) #21
  br label %7583

7583:                                             ; preds = %7582, %7579, %7564, %7554
  %7584 = getelementptr inbounds %struct.TestCase, ptr %220, i64 14, i32 2
  %7585 = load ptr, ptr %7584, align 8, !tbaa !23
  %7586 = getelementptr inbounds %struct.TestCase, ptr %220, i64 14, i32 2, i32 2
  %7587 = icmp eq ptr %7585, %7586
  br i1 %7587, label %7589, label %7588

7588:                                             ; preds = %7583
  call void @_ZdlPv(ptr noundef %7585) #22
  br label %7589

7589:                                             ; preds = %7588, %7583
  %7590 = load ptr, ptr %7393, align 8, !tbaa !23
  %7591 = getelementptr inbounds %struct.TestCase, ptr %220, i64 14, i32 0, i32 2
  %7592 = icmp eq ptr %7590, %7591
  br i1 %7592, label %7594, label %7593

7593:                                             ; preds = %7589
  call void @_ZdlPv(ptr noundef %7590) #22
  br label %7594

7594:                                             ; preds = %7589, %7593
  %7595 = getelementptr inbounds %struct.TestCase, ptr %220, i64 13, i32 3, i32 0, i32 1
  %7596 = load ptr, ptr %7595, align 8, !tbaa !88
  %7597 = icmp eq ptr %7596, null
  br i1 %7597, label %7622, label %7598

7598:                                             ; preds = %7594
  %7599 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7596, i64 0, i32 1
  %7600 = load atomic i64, ptr %7599 acquire, align 8
  %7601 = icmp eq i64 %7600, 4294967297
  %7602 = trunc i64 %7600 to i32
  br i1 %7601, label %7603, label %7611

7603:                                             ; preds = %7598
  store i32 0, ptr %7599, align 8, !tbaa !90
  %7604 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7596, i64 0, i32 2
  store i32 0, ptr %7604, align 4, !tbaa !92
  %7605 = load ptr, ptr %7596, align 8, !tbaa !58
  %7606 = getelementptr inbounds ptr, ptr %7605, i64 2
  %7607 = load ptr, ptr %7606, align 8
  call void %7607(ptr noundef nonnull align 8 dereferenceable(16) %7596) #21
  %7608 = load ptr, ptr %7596, align 8, !tbaa !58
  %7609 = getelementptr inbounds ptr, ptr %7608, i64 3
  %7610 = load ptr, ptr %7609, align 8
  call void %7610(ptr noundef nonnull align 8 dereferenceable(16) %7596) #21
  br label %7622

7611:                                             ; preds = %7598
  %7612 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7613 = icmp eq i8 %7612, 0
  br i1 %7613, label %7616, label %7614

7614:                                             ; preds = %7611
  %7615 = add nsw i32 %7602, -1
  store i32 %7615, ptr %7599, align 8, !tbaa !73
  br label %7618

7616:                                             ; preds = %7611
  %7617 = atomicrmw volatile add ptr %7599, i32 -1 acq_rel, align 4
  br label %7618

7618:                                             ; preds = %7616, %7614
  %7619 = phi i32 [ %7602, %7614 ], [ %7617, %7616 ]
  %7620 = icmp eq i32 %7619, 1
  br i1 %7620, label %7621, label %7622, !prof !42

7621:                                             ; preds = %7618
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7596) #21
  br label %7622

7622:                                             ; preds = %7621, %7618, %7603, %7594
  %7623 = getelementptr inbounds %struct.TestCase, ptr %220, i64 13, i32 2
  %7624 = load ptr, ptr %7623, align 8, !tbaa !23
  %7625 = getelementptr inbounds %struct.TestCase, ptr %220, i64 13, i32 2, i32 2
  %7626 = icmp eq ptr %7624, %7625
  br i1 %7626, label %7628, label %7627

7627:                                             ; preds = %7622
  call void @_ZdlPv(ptr noundef %7624) #22
  br label %7628

7628:                                             ; preds = %7627, %7622
  %7629 = load ptr, ptr %7388, align 8, !tbaa !23
  %7630 = getelementptr inbounds %struct.TestCase, ptr %220, i64 13, i32 0, i32 2
  %7631 = icmp eq ptr %7629, %7630
  br i1 %7631, label %7633, label %7632

7632:                                             ; preds = %7628
  call void @_ZdlPv(ptr noundef %7629) #22
  br label %7633

7633:                                             ; preds = %7628, %7632
  %7634 = getelementptr inbounds %struct.TestCase, ptr %220, i64 12, i32 3, i32 0, i32 1
  %7635 = load ptr, ptr %7634, align 8, !tbaa !88
  %7636 = icmp eq ptr %7635, null
  br i1 %7636, label %7661, label %7637

7637:                                             ; preds = %7633
  %7638 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7635, i64 0, i32 1
  %7639 = load atomic i64, ptr %7638 acquire, align 8
  %7640 = icmp eq i64 %7639, 4294967297
  %7641 = trunc i64 %7639 to i32
  br i1 %7640, label %7642, label %7650

7642:                                             ; preds = %7637
  store i32 0, ptr %7638, align 8, !tbaa !90
  %7643 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7635, i64 0, i32 2
  store i32 0, ptr %7643, align 4, !tbaa !92
  %7644 = load ptr, ptr %7635, align 8, !tbaa !58
  %7645 = getelementptr inbounds ptr, ptr %7644, i64 2
  %7646 = load ptr, ptr %7645, align 8
  call void %7646(ptr noundef nonnull align 8 dereferenceable(16) %7635) #21
  %7647 = load ptr, ptr %7635, align 8, !tbaa !58
  %7648 = getelementptr inbounds ptr, ptr %7647, i64 3
  %7649 = load ptr, ptr %7648, align 8
  call void %7649(ptr noundef nonnull align 8 dereferenceable(16) %7635) #21
  br label %7661

7650:                                             ; preds = %7637
  %7651 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7652 = icmp eq i8 %7651, 0
  br i1 %7652, label %7655, label %7653

7653:                                             ; preds = %7650
  %7654 = add nsw i32 %7641, -1
  store i32 %7654, ptr %7638, align 8, !tbaa !73
  br label %7657

7655:                                             ; preds = %7650
  %7656 = atomicrmw volatile add ptr %7638, i32 -1 acq_rel, align 4
  br label %7657

7657:                                             ; preds = %7655, %7653
  %7658 = phi i32 [ %7641, %7653 ], [ %7656, %7655 ]
  %7659 = icmp eq i32 %7658, 1
  br i1 %7659, label %7660, label %7661, !prof !42

7660:                                             ; preds = %7657
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7635) #21
  br label %7661

7661:                                             ; preds = %7660, %7657, %7642, %7633
  %7662 = getelementptr inbounds %struct.TestCase, ptr %220, i64 12, i32 2
  %7663 = load ptr, ptr %7662, align 8, !tbaa !23
  %7664 = getelementptr inbounds %struct.TestCase, ptr %220, i64 12, i32 2, i32 2
  %7665 = icmp eq ptr %7663, %7664
  br i1 %7665, label %7667, label %7666

7666:                                             ; preds = %7661
  call void @_ZdlPv(ptr noundef %7663) #22
  br label %7667

7667:                                             ; preds = %7666, %7661
  %7668 = load ptr, ptr %7383, align 8, !tbaa !23
  %7669 = getelementptr inbounds %struct.TestCase, ptr %220, i64 12, i32 0, i32 2
  %7670 = icmp eq ptr %7668, %7669
  br i1 %7670, label %7672, label %7671

7671:                                             ; preds = %7667
  call void @_ZdlPv(ptr noundef %7668) #22
  br label %7672

7672:                                             ; preds = %7667, %7671
  %7673 = getelementptr inbounds %struct.TestCase, ptr %220, i64 11, i32 3, i32 0, i32 1
  %7674 = load ptr, ptr %7673, align 8, !tbaa !88
  %7675 = icmp eq ptr %7674, null
  br i1 %7675, label %7700, label %7676

7676:                                             ; preds = %7672
  %7677 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7674, i64 0, i32 1
  %7678 = load atomic i64, ptr %7677 acquire, align 8
  %7679 = icmp eq i64 %7678, 4294967297
  %7680 = trunc i64 %7678 to i32
  br i1 %7679, label %7681, label %7689

7681:                                             ; preds = %7676
  store i32 0, ptr %7677, align 8, !tbaa !90
  %7682 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7674, i64 0, i32 2
  store i32 0, ptr %7682, align 4, !tbaa !92
  %7683 = load ptr, ptr %7674, align 8, !tbaa !58
  %7684 = getelementptr inbounds ptr, ptr %7683, i64 2
  %7685 = load ptr, ptr %7684, align 8
  call void %7685(ptr noundef nonnull align 8 dereferenceable(16) %7674) #21
  %7686 = load ptr, ptr %7674, align 8, !tbaa !58
  %7687 = getelementptr inbounds ptr, ptr %7686, i64 3
  %7688 = load ptr, ptr %7687, align 8
  call void %7688(ptr noundef nonnull align 8 dereferenceable(16) %7674) #21
  br label %7700

7689:                                             ; preds = %7676
  %7690 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7691 = icmp eq i8 %7690, 0
  br i1 %7691, label %7694, label %7692

7692:                                             ; preds = %7689
  %7693 = add nsw i32 %7680, -1
  store i32 %7693, ptr %7677, align 8, !tbaa !73
  br label %7696

7694:                                             ; preds = %7689
  %7695 = atomicrmw volatile add ptr %7677, i32 -1 acq_rel, align 4
  br label %7696

7696:                                             ; preds = %7694, %7692
  %7697 = phi i32 [ %7680, %7692 ], [ %7695, %7694 ]
  %7698 = icmp eq i32 %7697, 1
  br i1 %7698, label %7699, label %7700, !prof !42

7699:                                             ; preds = %7696
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7674) #21
  br label %7700

7700:                                             ; preds = %7699, %7696, %7681, %7672
  %7701 = getelementptr inbounds %struct.TestCase, ptr %220, i64 11, i32 2
  %7702 = load ptr, ptr %7701, align 8, !tbaa !23
  %7703 = getelementptr inbounds %struct.TestCase, ptr %220, i64 11, i32 2, i32 2
  %7704 = icmp eq ptr %7702, %7703
  br i1 %7704, label %7706, label %7705

7705:                                             ; preds = %7700
  call void @_ZdlPv(ptr noundef %7702) #22
  br label %7706

7706:                                             ; preds = %7705, %7700
  %7707 = load ptr, ptr %7374, align 8, !tbaa !23
  %7708 = getelementptr inbounds %struct.TestCase, ptr %220, i64 11, i32 0, i32 2
  %7709 = icmp eq ptr %7707, %7708
  br i1 %7709, label %7711, label %7710

7710:                                             ; preds = %7706
  call void @_ZdlPv(ptr noundef %7707) #22
  br label %7711

7711:                                             ; preds = %7706, %7710
  %7712 = getelementptr inbounds %struct.TestCase, ptr %220, i64 10, i32 3, i32 0, i32 1
  %7713 = load ptr, ptr %7712, align 8, !tbaa !88
  %7714 = icmp eq ptr %7713, null
  br i1 %7714, label %7739, label %7715

7715:                                             ; preds = %7711
  %7716 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7713, i64 0, i32 1
  %7717 = load atomic i64, ptr %7716 acquire, align 8
  %7718 = icmp eq i64 %7717, 4294967297
  %7719 = trunc i64 %7717 to i32
  br i1 %7718, label %7720, label %7728

7720:                                             ; preds = %7715
  store i32 0, ptr %7716, align 8, !tbaa !90
  %7721 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7713, i64 0, i32 2
  store i32 0, ptr %7721, align 4, !tbaa !92
  %7722 = load ptr, ptr %7713, align 8, !tbaa !58
  %7723 = getelementptr inbounds ptr, ptr %7722, i64 2
  %7724 = load ptr, ptr %7723, align 8
  call void %7724(ptr noundef nonnull align 8 dereferenceable(16) %7713) #21
  %7725 = load ptr, ptr %7713, align 8, !tbaa !58
  %7726 = getelementptr inbounds ptr, ptr %7725, i64 3
  %7727 = load ptr, ptr %7726, align 8
  call void %7727(ptr noundef nonnull align 8 dereferenceable(16) %7713) #21
  br label %7739

7728:                                             ; preds = %7715
  %7729 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7730 = icmp eq i8 %7729, 0
  br i1 %7730, label %7733, label %7731

7731:                                             ; preds = %7728
  %7732 = add nsw i32 %7719, -1
  store i32 %7732, ptr %7716, align 8, !tbaa !73
  br label %7735

7733:                                             ; preds = %7728
  %7734 = atomicrmw volatile add ptr %7716, i32 -1 acq_rel, align 4
  br label %7735

7735:                                             ; preds = %7733, %7731
  %7736 = phi i32 [ %7719, %7731 ], [ %7734, %7733 ]
  %7737 = icmp eq i32 %7736, 1
  br i1 %7737, label %7738, label %7739, !prof !42

7738:                                             ; preds = %7735
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7713) #21
  br label %7739

7739:                                             ; preds = %7738, %7735, %7720, %7711
  %7740 = getelementptr inbounds %struct.TestCase, ptr %220, i64 10, i32 2
  %7741 = load ptr, ptr %7740, align 8, !tbaa !23
  %7742 = getelementptr inbounds %struct.TestCase, ptr %220, i64 10, i32 2, i32 2
  %7743 = icmp eq ptr %7741, %7742
  br i1 %7743, label %7745, label %7744

7744:                                             ; preds = %7739
  call void @_ZdlPv(ptr noundef %7741) #22
  br label %7745

7745:                                             ; preds = %7744, %7739
  %7746 = load ptr, ptr %7365, align 8, !tbaa !23
  %7747 = getelementptr inbounds %struct.TestCase, ptr %220, i64 10, i32 0, i32 2
  %7748 = icmp eq ptr %7746, %7747
  br i1 %7748, label %7750, label %7749

7749:                                             ; preds = %7745
  call void @_ZdlPv(ptr noundef %7746) #22
  br label %7750

7750:                                             ; preds = %7745, %7749
  %7751 = getelementptr inbounds %struct.TestCase, ptr %220, i64 9, i32 3, i32 0, i32 1
  %7752 = load ptr, ptr %7751, align 8, !tbaa !88
  %7753 = icmp eq ptr %7752, null
  br i1 %7753, label %7778, label %7754

7754:                                             ; preds = %7750
  %7755 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7752, i64 0, i32 1
  %7756 = load atomic i64, ptr %7755 acquire, align 8
  %7757 = icmp eq i64 %7756, 4294967297
  %7758 = trunc i64 %7756 to i32
  br i1 %7757, label %7759, label %7767

7759:                                             ; preds = %7754
  store i32 0, ptr %7755, align 8, !tbaa !90
  %7760 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7752, i64 0, i32 2
  store i32 0, ptr %7760, align 4, !tbaa !92
  %7761 = load ptr, ptr %7752, align 8, !tbaa !58
  %7762 = getelementptr inbounds ptr, ptr %7761, i64 2
  %7763 = load ptr, ptr %7762, align 8
  call void %7763(ptr noundef nonnull align 8 dereferenceable(16) %7752) #21
  %7764 = load ptr, ptr %7752, align 8, !tbaa !58
  %7765 = getelementptr inbounds ptr, ptr %7764, i64 3
  %7766 = load ptr, ptr %7765, align 8
  call void %7766(ptr noundef nonnull align 8 dereferenceable(16) %7752) #21
  br label %7778

7767:                                             ; preds = %7754
  %7768 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7769 = icmp eq i8 %7768, 0
  br i1 %7769, label %7772, label %7770

7770:                                             ; preds = %7767
  %7771 = add nsw i32 %7758, -1
  store i32 %7771, ptr %7755, align 8, !tbaa !73
  br label %7774

7772:                                             ; preds = %7767
  %7773 = atomicrmw volatile add ptr %7755, i32 -1 acq_rel, align 4
  br label %7774

7774:                                             ; preds = %7772, %7770
  %7775 = phi i32 [ %7758, %7770 ], [ %7773, %7772 ]
  %7776 = icmp eq i32 %7775, 1
  br i1 %7776, label %7777, label %7778, !prof !42

7777:                                             ; preds = %7774
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7752) #21
  br label %7778

7778:                                             ; preds = %7777, %7774, %7759, %7750
  %7779 = getelementptr inbounds %struct.TestCase, ptr %220, i64 9, i32 2
  %7780 = load ptr, ptr %7779, align 8, !tbaa !23
  %7781 = getelementptr inbounds %struct.TestCase, ptr %220, i64 9, i32 2, i32 2
  %7782 = icmp eq ptr %7780, %7781
  br i1 %7782, label %7784, label %7783

7783:                                             ; preds = %7778
  call void @_ZdlPv(ptr noundef %7780) #22
  br label %7784

7784:                                             ; preds = %7783, %7778
  %7785 = load ptr, ptr %7356, align 8, !tbaa !23
  %7786 = getelementptr inbounds %struct.TestCase, ptr %220, i64 9, i32 0, i32 2
  %7787 = icmp eq ptr %7785, %7786
  br i1 %7787, label %7789, label %7788

7788:                                             ; preds = %7784
  call void @_ZdlPv(ptr noundef %7785) #22
  br label %7789

7789:                                             ; preds = %7784, %7788
  %7790 = getelementptr inbounds %struct.TestCase, ptr %220, i64 8, i32 3, i32 0, i32 1
  %7791 = load ptr, ptr %7790, align 8, !tbaa !88
  %7792 = icmp eq ptr %7791, null
  br i1 %7792, label %7817, label %7793

7793:                                             ; preds = %7789
  %7794 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7791, i64 0, i32 1
  %7795 = load atomic i64, ptr %7794 acquire, align 8
  %7796 = icmp eq i64 %7795, 4294967297
  %7797 = trunc i64 %7795 to i32
  br i1 %7796, label %7798, label %7806

7798:                                             ; preds = %7793
  store i32 0, ptr %7794, align 8, !tbaa !90
  %7799 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7791, i64 0, i32 2
  store i32 0, ptr %7799, align 4, !tbaa !92
  %7800 = load ptr, ptr %7791, align 8, !tbaa !58
  %7801 = getelementptr inbounds ptr, ptr %7800, i64 2
  %7802 = load ptr, ptr %7801, align 8
  call void %7802(ptr noundef nonnull align 8 dereferenceable(16) %7791) #21
  %7803 = load ptr, ptr %7791, align 8, !tbaa !58
  %7804 = getelementptr inbounds ptr, ptr %7803, i64 3
  %7805 = load ptr, ptr %7804, align 8
  call void %7805(ptr noundef nonnull align 8 dereferenceable(16) %7791) #21
  br label %7817

7806:                                             ; preds = %7793
  %7807 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7808 = icmp eq i8 %7807, 0
  br i1 %7808, label %7811, label %7809

7809:                                             ; preds = %7806
  %7810 = add nsw i32 %7797, -1
  store i32 %7810, ptr %7794, align 8, !tbaa !73
  br label %7813

7811:                                             ; preds = %7806
  %7812 = atomicrmw volatile add ptr %7794, i32 -1 acq_rel, align 4
  br label %7813

7813:                                             ; preds = %7811, %7809
  %7814 = phi i32 [ %7797, %7809 ], [ %7812, %7811 ]
  %7815 = icmp eq i32 %7814, 1
  br i1 %7815, label %7816, label %7817, !prof !42

7816:                                             ; preds = %7813
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7791) #21
  br label %7817

7817:                                             ; preds = %7816, %7813, %7798, %7789
  %7818 = getelementptr inbounds %struct.TestCase, ptr %220, i64 8, i32 2
  %7819 = load ptr, ptr %7818, align 8, !tbaa !23
  %7820 = getelementptr inbounds %struct.TestCase, ptr %220, i64 8, i32 2, i32 2
  %7821 = icmp eq ptr %7819, %7820
  br i1 %7821, label %7823, label %7822

7822:                                             ; preds = %7817
  call void @_ZdlPv(ptr noundef %7819) #22
  br label %7823

7823:                                             ; preds = %7822, %7817
  %7824 = load ptr, ptr %7347, align 8, !tbaa !23
  %7825 = getelementptr inbounds %struct.TestCase, ptr %220, i64 8, i32 0, i32 2
  %7826 = icmp eq ptr %7824, %7825
  br i1 %7826, label %7828, label %7827

7827:                                             ; preds = %7823
  call void @_ZdlPv(ptr noundef %7824) #22
  br label %7828

7828:                                             ; preds = %7823, %7827
  %7829 = getelementptr inbounds %struct.TestCase, ptr %220, i64 7, i32 3, i32 0, i32 1
  %7830 = load ptr, ptr %7829, align 8, !tbaa !88
  %7831 = icmp eq ptr %7830, null
  br i1 %7831, label %7856, label %7832

7832:                                             ; preds = %7828
  %7833 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7830, i64 0, i32 1
  %7834 = load atomic i64, ptr %7833 acquire, align 8
  %7835 = icmp eq i64 %7834, 4294967297
  %7836 = trunc i64 %7834 to i32
  br i1 %7835, label %7837, label %7845

7837:                                             ; preds = %7832
  store i32 0, ptr %7833, align 8, !tbaa !90
  %7838 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7830, i64 0, i32 2
  store i32 0, ptr %7838, align 4, !tbaa !92
  %7839 = load ptr, ptr %7830, align 8, !tbaa !58
  %7840 = getelementptr inbounds ptr, ptr %7839, i64 2
  %7841 = load ptr, ptr %7840, align 8
  call void %7841(ptr noundef nonnull align 8 dereferenceable(16) %7830) #21
  %7842 = load ptr, ptr %7830, align 8, !tbaa !58
  %7843 = getelementptr inbounds ptr, ptr %7842, i64 3
  %7844 = load ptr, ptr %7843, align 8
  call void %7844(ptr noundef nonnull align 8 dereferenceable(16) %7830) #21
  br label %7856

7845:                                             ; preds = %7832
  %7846 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7847 = icmp eq i8 %7846, 0
  br i1 %7847, label %7850, label %7848

7848:                                             ; preds = %7845
  %7849 = add nsw i32 %7836, -1
  store i32 %7849, ptr %7833, align 8, !tbaa !73
  br label %7852

7850:                                             ; preds = %7845
  %7851 = atomicrmw volatile add ptr %7833, i32 -1 acq_rel, align 4
  br label %7852

7852:                                             ; preds = %7850, %7848
  %7853 = phi i32 [ %7836, %7848 ], [ %7851, %7850 ]
  %7854 = icmp eq i32 %7853, 1
  br i1 %7854, label %7855, label %7856, !prof !42

7855:                                             ; preds = %7852
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7830) #21
  br label %7856

7856:                                             ; preds = %7855, %7852, %7837, %7828
  %7857 = getelementptr inbounds %struct.TestCase, ptr %220, i64 7, i32 2
  %7858 = load ptr, ptr %7857, align 8, !tbaa !23
  %7859 = getelementptr inbounds %struct.TestCase, ptr %220, i64 7, i32 2, i32 2
  %7860 = icmp eq ptr %7858, %7859
  br i1 %7860, label %7862, label %7861

7861:                                             ; preds = %7856
  call void @_ZdlPv(ptr noundef %7858) #22
  br label %7862

7862:                                             ; preds = %7861, %7856
  %7863 = load ptr, ptr %7342, align 8, !tbaa !23
  %7864 = getelementptr inbounds %struct.TestCase, ptr %220, i64 7, i32 0, i32 2
  %7865 = icmp eq ptr %7863, %7864
  br i1 %7865, label %7867, label %7866

7866:                                             ; preds = %7862
  call void @_ZdlPv(ptr noundef %7863) #22
  br label %7867

7867:                                             ; preds = %7862, %7866
  %7868 = getelementptr inbounds %struct.TestCase, ptr %220, i64 6, i32 3, i32 0, i32 1
  %7869 = load ptr, ptr %7868, align 8, !tbaa !88
  %7870 = icmp eq ptr %7869, null
  br i1 %7870, label %7895, label %7871

7871:                                             ; preds = %7867
  %7872 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7869, i64 0, i32 1
  %7873 = load atomic i64, ptr %7872 acquire, align 8
  %7874 = icmp eq i64 %7873, 4294967297
  %7875 = trunc i64 %7873 to i32
  br i1 %7874, label %7876, label %7884

7876:                                             ; preds = %7871
  store i32 0, ptr %7872, align 8, !tbaa !90
  %7877 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7869, i64 0, i32 2
  store i32 0, ptr %7877, align 4, !tbaa !92
  %7878 = load ptr, ptr %7869, align 8, !tbaa !58
  %7879 = getelementptr inbounds ptr, ptr %7878, i64 2
  %7880 = load ptr, ptr %7879, align 8
  call void %7880(ptr noundef nonnull align 8 dereferenceable(16) %7869) #21
  %7881 = load ptr, ptr %7869, align 8, !tbaa !58
  %7882 = getelementptr inbounds ptr, ptr %7881, i64 3
  %7883 = load ptr, ptr %7882, align 8
  call void %7883(ptr noundef nonnull align 8 dereferenceable(16) %7869) #21
  br label %7895

7884:                                             ; preds = %7871
  %7885 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7886 = icmp eq i8 %7885, 0
  br i1 %7886, label %7889, label %7887

7887:                                             ; preds = %7884
  %7888 = add nsw i32 %7875, -1
  store i32 %7888, ptr %7872, align 8, !tbaa !73
  br label %7891

7889:                                             ; preds = %7884
  %7890 = atomicrmw volatile add ptr %7872, i32 -1 acq_rel, align 4
  br label %7891

7891:                                             ; preds = %7889, %7887
  %7892 = phi i32 [ %7875, %7887 ], [ %7890, %7889 ]
  %7893 = icmp eq i32 %7892, 1
  br i1 %7893, label %7894, label %7895, !prof !42

7894:                                             ; preds = %7891
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7869) #21
  br label %7895

7895:                                             ; preds = %7894, %7891, %7876, %7867
  %7896 = getelementptr inbounds %struct.TestCase, ptr %220, i64 6, i32 2
  %7897 = load ptr, ptr %7896, align 8, !tbaa !23
  %7898 = getelementptr inbounds %struct.TestCase, ptr %220, i64 6, i32 2, i32 2
  %7899 = icmp eq ptr %7897, %7898
  br i1 %7899, label %7901, label %7900

7900:                                             ; preds = %7895
  call void @_ZdlPv(ptr noundef %7897) #22
  br label %7901

7901:                                             ; preds = %7900, %7895
  %7902 = load ptr, ptr %7333, align 8, !tbaa !23
  %7903 = getelementptr inbounds %struct.TestCase, ptr %220, i64 6, i32 0, i32 2
  %7904 = icmp eq ptr %7902, %7903
  br i1 %7904, label %7906, label %7905

7905:                                             ; preds = %7901
  call void @_ZdlPv(ptr noundef %7902) #22
  br label %7906

7906:                                             ; preds = %7901, %7905
  %7907 = getelementptr inbounds %struct.TestCase, ptr %220, i64 5, i32 3, i32 0, i32 1
  %7908 = load ptr, ptr %7907, align 8, !tbaa !88
  %7909 = icmp eq ptr %7908, null
  br i1 %7909, label %7934, label %7910

7910:                                             ; preds = %7906
  %7911 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7908, i64 0, i32 1
  %7912 = load atomic i64, ptr %7911 acquire, align 8
  %7913 = icmp eq i64 %7912, 4294967297
  %7914 = trunc i64 %7912 to i32
  br i1 %7913, label %7915, label %7923

7915:                                             ; preds = %7910
  store i32 0, ptr %7911, align 8, !tbaa !90
  %7916 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7908, i64 0, i32 2
  store i32 0, ptr %7916, align 4, !tbaa !92
  %7917 = load ptr, ptr %7908, align 8, !tbaa !58
  %7918 = getelementptr inbounds ptr, ptr %7917, i64 2
  %7919 = load ptr, ptr %7918, align 8
  call void %7919(ptr noundef nonnull align 8 dereferenceable(16) %7908) #21
  %7920 = load ptr, ptr %7908, align 8, !tbaa !58
  %7921 = getelementptr inbounds ptr, ptr %7920, i64 3
  %7922 = load ptr, ptr %7921, align 8
  call void %7922(ptr noundef nonnull align 8 dereferenceable(16) %7908) #21
  br label %7934

7923:                                             ; preds = %7910
  %7924 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7925 = icmp eq i8 %7924, 0
  br i1 %7925, label %7928, label %7926

7926:                                             ; preds = %7923
  %7927 = add nsw i32 %7914, -1
  store i32 %7927, ptr %7911, align 8, !tbaa !73
  br label %7930

7928:                                             ; preds = %7923
  %7929 = atomicrmw volatile add ptr %7911, i32 -1 acq_rel, align 4
  br label %7930

7930:                                             ; preds = %7928, %7926
  %7931 = phi i32 [ %7914, %7926 ], [ %7929, %7928 ]
  %7932 = icmp eq i32 %7931, 1
  br i1 %7932, label %7933, label %7934, !prof !42

7933:                                             ; preds = %7930
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7908) #21
  br label %7934

7934:                                             ; preds = %7933, %7930, %7915, %7906
  %7935 = getelementptr inbounds %struct.TestCase, ptr %220, i64 5, i32 2
  %7936 = load ptr, ptr %7935, align 8, !tbaa !23
  %7937 = getelementptr inbounds %struct.TestCase, ptr %220, i64 5, i32 2, i32 2
  %7938 = icmp eq ptr %7936, %7937
  br i1 %7938, label %7940, label %7939

7939:                                             ; preds = %7934
  call void @_ZdlPv(ptr noundef %7936) #22
  br label %7940

7940:                                             ; preds = %7939, %7934
  %7941 = load ptr, ptr %7324, align 8, !tbaa !23
  %7942 = getelementptr inbounds %struct.TestCase, ptr %220, i64 5, i32 0, i32 2
  %7943 = icmp eq ptr %7941, %7942
  br i1 %7943, label %7945, label %7944

7944:                                             ; preds = %7940
  call void @_ZdlPv(ptr noundef %7941) #22
  br label %7945

7945:                                             ; preds = %7940, %7944
  %7946 = getelementptr inbounds %struct.TestCase, ptr %220, i64 4, i32 3, i32 0, i32 1
  %7947 = load ptr, ptr %7946, align 8, !tbaa !88
  %7948 = icmp eq ptr %7947, null
  br i1 %7948, label %7973, label %7949

7949:                                             ; preds = %7945
  %7950 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7947, i64 0, i32 1
  %7951 = load atomic i64, ptr %7950 acquire, align 8
  %7952 = icmp eq i64 %7951, 4294967297
  %7953 = trunc i64 %7951 to i32
  br i1 %7952, label %7954, label %7962

7954:                                             ; preds = %7949
  store i32 0, ptr %7950, align 8, !tbaa !90
  %7955 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7947, i64 0, i32 2
  store i32 0, ptr %7955, align 4, !tbaa !92
  %7956 = load ptr, ptr %7947, align 8, !tbaa !58
  %7957 = getelementptr inbounds ptr, ptr %7956, i64 2
  %7958 = load ptr, ptr %7957, align 8
  call void %7958(ptr noundef nonnull align 8 dereferenceable(16) %7947) #21
  %7959 = load ptr, ptr %7947, align 8, !tbaa !58
  %7960 = getelementptr inbounds ptr, ptr %7959, i64 3
  %7961 = load ptr, ptr %7960, align 8
  call void %7961(ptr noundef nonnull align 8 dereferenceable(16) %7947) #21
  br label %7973

7962:                                             ; preds = %7949
  %7963 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %7964 = icmp eq i8 %7963, 0
  br i1 %7964, label %7967, label %7965

7965:                                             ; preds = %7962
  %7966 = add nsw i32 %7953, -1
  store i32 %7966, ptr %7950, align 8, !tbaa !73
  br label %7969

7967:                                             ; preds = %7962
  %7968 = atomicrmw volatile add ptr %7950, i32 -1 acq_rel, align 4
  br label %7969

7969:                                             ; preds = %7967, %7965
  %7970 = phi i32 [ %7953, %7965 ], [ %7968, %7967 ]
  %7971 = icmp eq i32 %7970, 1
  br i1 %7971, label %7972, label %7973, !prof !42

7972:                                             ; preds = %7969
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7947) #21
  br label %7973

7973:                                             ; preds = %7972, %7969, %7954, %7945
  %7974 = getelementptr inbounds %struct.TestCase, ptr %220, i64 4, i32 2
  %7975 = load ptr, ptr %7974, align 8, !tbaa !23
  %7976 = getelementptr inbounds %struct.TestCase, ptr %220, i64 4, i32 2, i32 2
  %7977 = icmp eq ptr %7975, %7976
  br i1 %7977, label %7979, label %7978

7978:                                             ; preds = %7973
  call void @_ZdlPv(ptr noundef %7975) #22
  br label %7979

7979:                                             ; preds = %7978, %7973
  %7980 = load ptr, ptr %7315, align 8, !tbaa !23
  %7981 = getelementptr inbounds %struct.TestCase, ptr %220, i64 4, i32 0, i32 2
  %7982 = icmp eq ptr %7980, %7981
  br i1 %7982, label %7984, label %7983

7983:                                             ; preds = %7979
  call void @_ZdlPv(ptr noundef %7980) #22
  br label %7984

7984:                                             ; preds = %7979, %7983
  %7985 = getelementptr inbounds %struct.TestCase, ptr %220, i64 3, i32 3, i32 0, i32 1
  %7986 = load ptr, ptr %7985, align 8, !tbaa !88
  %7987 = icmp eq ptr %7986, null
  br i1 %7987, label %8012, label %7988

7988:                                             ; preds = %7984
  %7989 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7986, i64 0, i32 1
  %7990 = load atomic i64, ptr %7989 acquire, align 8
  %7991 = icmp eq i64 %7990, 4294967297
  %7992 = trunc i64 %7990 to i32
  br i1 %7991, label %7993, label %8001

7993:                                             ; preds = %7988
  store i32 0, ptr %7989, align 8, !tbaa !90
  %7994 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %7986, i64 0, i32 2
  store i32 0, ptr %7994, align 4, !tbaa !92
  %7995 = load ptr, ptr %7986, align 8, !tbaa !58
  %7996 = getelementptr inbounds ptr, ptr %7995, i64 2
  %7997 = load ptr, ptr %7996, align 8
  call void %7997(ptr noundef nonnull align 8 dereferenceable(16) %7986) #21
  %7998 = load ptr, ptr %7986, align 8, !tbaa !58
  %7999 = getelementptr inbounds ptr, ptr %7998, i64 3
  %8000 = load ptr, ptr %7999, align 8
  call void %8000(ptr noundef nonnull align 8 dereferenceable(16) %7986) #21
  br label %8012

8001:                                             ; preds = %7988
  %8002 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %8003 = icmp eq i8 %8002, 0
  br i1 %8003, label %8006, label %8004

8004:                                             ; preds = %8001
  %8005 = add nsw i32 %7992, -1
  store i32 %8005, ptr %7989, align 8, !tbaa !73
  br label %8008

8006:                                             ; preds = %8001
  %8007 = atomicrmw volatile add ptr %7989, i32 -1 acq_rel, align 4
  br label %8008

8008:                                             ; preds = %8006, %8004
  %8009 = phi i32 [ %7992, %8004 ], [ %8007, %8006 ]
  %8010 = icmp eq i32 %8009, 1
  br i1 %8010, label %8011, label %8012, !prof !42

8011:                                             ; preds = %8008
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %7986) #21
  br label %8012

8012:                                             ; preds = %8011, %8008, %7993, %7984
  %8013 = getelementptr inbounds %struct.TestCase, ptr %220, i64 3, i32 2
  %8014 = load ptr, ptr %8013, align 8, !tbaa !23
  %8015 = getelementptr inbounds %struct.TestCase, ptr %220, i64 3, i32 2, i32 2
  %8016 = icmp eq ptr %8014, %8015
  br i1 %8016, label %8018, label %8017

8017:                                             ; preds = %8012
  call void @_ZdlPv(ptr noundef %8014) #22
  br label %8018

8018:                                             ; preds = %8017, %8012
  %8019 = load ptr, ptr %7307, align 8, !tbaa !23
  %8020 = getelementptr inbounds %struct.TestCase, ptr %220, i64 3, i32 0, i32 2
  %8021 = icmp eq ptr %8019, %8020
  br i1 %8021, label %8023, label %8022

8022:                                             ; preds = %8018
  call void @_ZdlPv(ptr noundef %8019) #22
  br label %8023

8023:                                             ; preds = %8018, %8022
  %8024 = getelementptr inbounds %struct.TestCase, ptr %220, i64 2, i32 3, i32 0, i32 1
  %8025 = load ptr, ptr %8024, align 8, !tbaa !88
  %8026 = icmp eq ptr %8025, null
  br i1 %8026, label %8051, label %8027

8027:                                             ; preds = %8023
  %8028 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8025, i64 0, i32 1
  %8029 = load atomic i64, ptr %8028 acquire, align 8
  %8030 = icmp eq i64 %8029, 4294967297
  %8031 = trunc i64 %8029 to i32
  br i1 %8030, label %8032, label %8040

8032:                                             ; preds = %8027
  store i32 0, ptr %8028, align 8, !tbaa !90
  %8033 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8025, i64 0, i32 2
  store i32 0, ptr %8033, align 4, !tbaa !92
  %8034 = load ptr, ptr %8025, align 8, !tbaa !58
  %8035 = getelementptr inbounds ptr, ptr %8034, i64 2
  %8036 = load ptr, ptr %8035, align 8
  call void %8036(ptr noundef nonnull align 8 dereferenceable(16) %8025) #21
  %8037 = load ptr, ptr %8025, align 8, !tbaa !58
  %8038 = getelementptr inbounds ptr, ptr %8037, i64 3
  %8039 = load ptr, ptr %8038, align 8
  call void %8039(ptr noundef nonnull align 8 dereferenceable(16) %8025) #21
  br label %8051

8040:                                             ; preds = %8027
  %8041 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %8042 = icmp eq i8 %8041, 0
  br i1 %8042, label %8045, label %8043

8043:                                             ; preds = %8040
  %8044 = add nsw i32 %8031, -1
  store i32 %8044, ptr %8028, align 8, !tbaa !73
  br label %8047

8045:                                             ; preds = %8040
  %8046 = atomicrmw volatile add ptr %8028, i32 -1 acq_rel, align 4
  br label %8047

8047:                                             ; preds = %8045, %8043
  %8048 = phi i32 [ %8031, %8043 ], [ %8046, %8045 ]
  %8049 = icmp eq i32 %8048, 1
  br i1 %8049, label %8050, label %8051, !prof !42

8050:                                             ; preds = %8047
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %8025) #21
  br label %8051

8051:                                             ; preds = %8050, %8047, %8032, %8023
  %8052 = getelementptr inbounds %struct.TestCase, ptr %220, i64 2, i32 2
  %8053 = load ptr, ptr %8052, align 8, !tbaa !23
  %8054 = getelementptr inbounds %struct.TestCase, ptr %220, i64 2, i32 2, i32 2
  %8055 = icmp eq ptr %8053, %8054
  br i1 %8055, label %8057, label %8056

8056:                                             ; preds = %8051
  call void @_ZdlPv(ptr noundef %8053) #22
  br label %8057

8057:                                             ; preds = %8056, %8051
  %8058 = load ptr, ptr %7298, align 8, !tbaa !23
  %8059 = getelementptr inbounds %struct.TestCase, ptr %220, i64 2, i32 0, i32 2
  %8060 = icmp eq ptr %8058, %8059
  br i1 %8060, label %8062, label %8061

8061:                                             ; preds = %8057
  call void @_ZdlPv(ptr noundef %8058) #22
  br label %8062

8062:                                             ; preds = %8057, %8061
  %8063 = getelementptr inbounds %struct.TestCase, ptr %220, i64 1, i32 3, i32 0, i32 1
  %8064 = load ptr, ptr %8063, align 8, !tbaa !88
  %8065 = icmp eq ptr %8064, null
  br i1 %8065, label %8090, label %8066

8066:                                             ; preds = %8062
  %8067 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8064, i64 0, i32 1
  %8068 = load atomic i64, ptr %8067 acquire, align 8
  %8069 = icmp eq i64 %8068, 4294967297
  %8070 = trunc i64 %8068 to i32
  br i1 %8069, label %8071, label %8079

8071:                                             ; preds = %8066
  store i32 0, ptr %8067, align 8, !tbaa !90
  %8072 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8064, i64 0, i32 2
  store i32 0, ptr %8072, align 4, !tbaa !92
  %8073 = load ptr, ptr %8064, align 8, !tbaa !58
  %8074 = getelementptr inbounds ptr, ptr %8073, i64 2
  %8075 = load ptr, ptr %8074, align 8
  call void %8075(ptr noundef nonnull align 8 dereferenceable(16) %8064) #21
  %8076 = load ptr, ptr %8064, align 8, !tbaa !58
  %8077 = getelementptr inbounds ptr, ptr %8076, i64 3
  %8078 = load ptr, ptr %8077, align 8
  call void %8078(ptr noundef nonnull align 8 dereferenceable(16) %8064) #21
  br label %8090

8079:                                             ; preds = %8066
  %8080 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %8081 = icmp eq i8 %8080, 0
  br i1 %8081, label %8084, label %8082

8082:                                             ; preds = %8079
  %8083 = add nsw i32 %8070, -1
  store i32 %8083, ptr %8067, align 8, !tbaa !73
  br label %8086

8084:                                             ; preds = %8079
  %8085 = atomicrmw volatile add ptr %8067, i32 -1 acq_rel, align 4
  br label %8086

8086:                                             ; preds = %8084, %8082
  %8087 = phi i32 [ %8070, %8082 ], [ %8085, %8084 ]
  %8088 = icmp eq i32 %8087, 1
  br i1 %8088, label %8089, label %8090, !prof !42

8089:                                             ; preds = %8086
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %8064) #21
  br label %8090

8090:                                             ; preds = %8089, %8086, %8071, %8062
  %8091 = getelementptr inbounds %struct.TestCase, ptr %220, i64 1, i32 2
  %8092 = load ptr, ptr %8091, align 8, !tbaa !23
  %8093 = getelementptr inbounds %struct.TestCase, ptr %220, i64 1, i32 2, i32 2
  %8094 = icmp eq ptr %8092, %8093
  br i1 %8094, label %8096, label %8095

8095:                                             ; preds = %8090
  call void @_ZdlPv(ptr noundef %8092) #22
  br label %8096

8096:                                             ; preds = %8095, %8090
  %8097 = load ptr, ptr %7289, align 8, !tbaa !23
  %8098 = getelementptr inbounds %struct.TestCase, ptr %220, i64 1, i32 0, i32 2
  %8099 = icmp eq ptr %8097, %8098
  br i1 %8099, label %8101, label %8100

8100:                                             ; preds = %8096
  call void @_ZdlPv(ptr noundef %8097) #22
  br label %8101

8101:                                             ; preds = %8096, %8100
  %8102 = getelementptr inbounds %struct.TestCase, ptr %220, i64 0, i32 3, i32 0, i32 1
  %8103 = load ptr, ptr %8102, align 8, !tbaa !88
  %8104 = icmp eq ptr %8103, null
  br i1 %8104, label %8129, label %8105

8105:                                             ; preds = %8101
  %8106 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8103, i64 0, i32 1
  %8107 = load atomic i64, ptr %8106 acquire, align 8
  %8108 = icmp eq i64 %8107, 4294967297
  %8109 = trunc i64 %8107 to i32
  br i1 %8108, label %8110, label %8118

8110:                                             ; preds = %8105
  store i32 0, ptr %8106, align 8, !tbaa !90
  %8111 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8103, i64 0, i32 2
  store i32 0, ptr %8111, align 4, !tbaa !92
  %8112 = load ptr, ptr %8103, align 8, !tbaa !58
  %8113 = getelementptr inbounds ptr, ptr %8112, i64 2
  %8114 = load ptr, ptr %8113, align 8
  call void %8114(ptr noundef nonnull align 8 dereferenceable(16) %8103) #21
  %8115 = load ptr, ptr %8103, align 8, !tbaa !58
  %8116 = getelementptr inbounds ptr, ptr %8115, i64 3
  %8117 = load ptr, ptr %8116, align 8
  call void %8117(ptr noundef nonnull align 8 dereferenceable(16) %8103) #21
  br label %8129

8118:                                             ; preds = %8105
  %8119 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %8120 = icmp eq i8 %8119, 0
  br i1 %8120, label %8123, label %8121

8121:                                             ; preds = %8118
  %8122 = add nsw i32 %8109, -1
  store i32 %8122, ptr %8106, align 8, !tbaa !73
  br label %8125

8123:                                             ; preds = %8118
  %8124 = atomicrmw volatile add ptr %8106, i32 -1 acq_rel, align 4
  br label %8125

8125:                                             ; preds = %8123, %8121
  %8126 = phi i32 [ %8109, %8121 ], [ %8124, %8123 ]
  %8127 = icmp eq i32 %8126, 1
  br i1 %8127, label %8128, label %8129, !prof !42

8128:                                             ; preds = %8125
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %8103) #21
  br label %8129

8129:                                             ; preds = %8128, %8125, %8110, %8101
  %8130 = getelementptr inbounds %struct.TestCase, ptr %220, i64 0, i32 2
  %8131 = load ptr, ptr %8130, align 8, !tbaa !23
  %8132 = getelementptr inbounds %struct.TestCase, ptr %220, i64 0, i32 2, i32 2
  %8133 = icmp eq ptr %8131, %8132
  br i1 %8133, label %8135, label %8134

8134:                                             ; preds = %8129
  call void @_ZdlPv(ptr noundef %8131) #22
  br label %8135

8135:                                             ; preds = %8134, %8129
  %8136 = load ptr, ptr %220, align 8, !tbaa !23
  %8137 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %220, i64 0, i32 2
  %8138 = icmp eq ptr %8136, %8137
  br i1 %8138, label %8140, label %8139

8139:                                             ; preds = %8135
  call void @_ZdlPv(ptr noundef %8136) #22
  br label %8140

8140:                                             ; preds = %8139, %8135, %7552
  %8141 = phi { ptr, i32 } [ %7553, %7552 ], [ %7555, %8135 ], [ %7555, %8139 ]
  %8142 = phi i1 [ true, %7552 ], [ false, %8135 ], [ false, %8139 ]
  %8143 = load ptr, ptr %235, align 8, !tbaa !23
  %8144 = icmp eq ptr %8143, %7394
  br i1 %8144, label %8146, label %8145

8145:                                             ; preds = %8140
  call void @_ZdlPv(ptr noundef %8143) #22
  br label %8146

8146:                                             ; preds = %8145, %8140, %7550
  %8147 = phi ptr [ %7388, %7550 ], [ %7393, %8145 ], [ %7393, %8140 ]
  %8148 = phi { ptr, i32 } [ %7551, %7550 ], [ %8141, %8145 ], [ %8141, %8140 ]
  %8149 = phi i1 [ true, %7550 ], [ %8142, %8145 ], [ %8142, %8140 ]
  %8150 = load ptr, ptr %234, align 8, !tbaa !23
  %8151 = icmp eq ptr %8150, %7389
  br i1 %8151, label %8153, label %8152

8152:                                             ; preds = %8146
  call void @_ZdlPv(ptr noundef %8150) #22
  br label %8153

8153:                                             ; preds = %8152, %8146, %7548
  %8154 = phi ptr [ %7383, %7548 ], [ %8147, %8152 ], [ %8147, %8146 ]
  %8155 = phi { ptr, i32 } [ %7549, %7548 ], [ %8148, %8152 ], [ %8148, %8146 ]
  %8156 = phi i1 [ true, %7548 ], [ %8149, %8152 ], [ %8149, %8146 ]
  %8157 = load ptr, ptr %233, align 8, !tbaa !23
  %8158 = icmp eq ptr %8157, %7384
  br i1 %8158, label %8160, label %8159

8159:                                             ; preds = %8153
  call void @_ZdlPv(ptr noundef %8157) #22
  br label %8160

8160:                                             ; preds = %8159, %8153, %7546
  %8161 = phi ptr [ %7374, %7546 ], [ %8154, %8159 ], [ %8154, %8153 ]
  %8162 = phi { ptr, i32 } [ %7547, %7546 ], [ %8155, %8159 ], [ %8155, %8153 ]
  %8163 = phi i1 [ true, %7546 ], [ %8156, %8159 ], [ %8156, %8153 ]
  %8164 = load ptr, ptr %232, align 8, !tbaa !23
  %8165 = icmp eq ptr %8164, %7375
  br i1 %8165, label %8167, label %8166

8166:                                             ; preds = %8160
  call void @_ZdlPv(ptr noundef %8164) #22
  br label %8167

8167:                                             ; preds = %8166, %8160, %7544, %7542
  %8168 = phi ptr [ %7365, %7542 ], [ %7374, %7544 ], [ %8161, %8160 ], [ %8161, %8166 ]
  %8169 = phi { ptr, i32 } [ %7543, %7542 ], [ %7545, %7544 ], [ %8162, %8160 ], [ %8162, %8166 ]
  %8170 = phi i1 [ true, %7542 ], [ true, %7544 ], [ %8163, %8160 ], [ %8163, %8166 ]
  %8171 = load ptr, ptr %231, align 8, !tbaa !23
  %8172 = icmp eq ptr %8171, %7366
  br i1 %8172, label %8174, label %8173

8173:                                             ; preds = %8167
  call void @_ZdlPv(ptr noundef %8171) #22
  br label %8174

8174:                                             ; preds = %8173, %8167, %7540, %7538
  %8175 = phi ptr [ %7356, %7538 ], [ %7365, %7540 ], [ %8168, %8167 ], [ %8168, %8173 ]
  %8176 = phi { ptr, i32 } [ %7539, %7538 ], [ %7541, %7540 ], [ %8169, %8167 ], [ %8169, %8173 ]
  %8177 = phi i1 [ true, %7538 ], [ true, %7540 ], [ %8170, %8167 ], [ %8170, %8173 ]
  %8178 = load ptr, ptr %230, align 8, !tbaa !23
  %8179 = icmp eq ptr %8178, %7357
  br i1 %8179, label %8181, label %8180

8180:                                             ; preds = %8174
  call void @_ZdlPv(ptr noundef %8178) #22
  br label %8181

8181:                                             ; preds = %8180, %8174, %7536, %7534
  %8182 = phi ptr [ %7347, %7534 ], [ %7356, %7536 ], [ %8175, %8174 ], [ %8175, %8180 ]
  %8183 = phi { ptr, i32 } [ %7535, %7534 ], [ %7537, %7536 ], [ %8176, %8174 ], [ %8176, %8180 ]
  %8184 = phi i1 [ true, %7534 ], [ true, %7536 ], [ %8177, %8174 ], [ %8177, %8180 ]
  %8185 = load ptr, ptr %229, align 8, !tbaa !23
  %8186 = icmp eq ptr %8185, %7348
  br i1 %8186, label %8188, label %8187

8187:                                             ; preds = %8181
  call void @_ZdlPv(ptr noundef %8185) #22
  br label %8188

8188:                                             ; preds = %8187, %8181, %7532, %7530
  %8189 = phi ptr [ %7342, %7530 ], [ %7347, %7532 ], [ %8182, %8181 ], [ %8182, %8187 ]
  %8190 = phi { ptr, i32 } [ %7531, %7530 ], [ %7533, %7532 ], [ %8183, %8181 ], [ %8183, %8187 ]
  %8191 = phi i1 [ true, %7530 ], [ true, %7532 ], [ %8184, %8181 ], [ %8184, %8187 ]
  %8192 = load ptr, ptr %228, align 8, !tbaa !23
  %8193 = icmp eq ptr %8192, %7343
  br i1 %8193, label %8195, label %8194

8194:                                             ; preds = %8188
  call void @_ZdlPv(ptr noundef %8192) #22
  br label %8195

8195:                                             ; preds = %8194, %8188, %7528
  %8196 = phi ptr [ %7333, %7528 ], [ %8189, %8194 ], [ %8189, %8188 ]
  %8197 = phi { ptr, i32 } [ %7529, %7528 ], [ %8190, %8194 ], [ %8190, %8188 ]
  %8198 = phi i1 [ true, %7528 ], [ %8191, %8194 ], [ %8191, %8188 ]
  %8199 = load ptr, ptr %227, align 8, !tbaa !23
  %8200 = icmp eq ptr %8199, %7334
  br i1 %8200, label %8202, label %8201

8201:                                             ; preds = %8195
  call void @_ZdlPv(ptr noundef %8199) #22
  br label %8202

8202:                                             ; preds = %8201, %8195, %7526, %7524
  %8203 = phi ptr [ %7324, %7524 ], [ %7333, %7526 ], [ %8196, %8195 ], [ %8196, %8201 ]
  %8204 = phi { ptr, i32 } [ %7525, %7524 ], [ %7527, %7526 ], [ %8197, %8195 ], [ %8197, %8201 ]
  %8205 = phi i1 [ true, %7524 ], [ true, %7526 ], [ %8198, %8195 ], [ %8198, %8201 ]
  %8206 = load ptr, ptr %226, align 8, !tbaa !23
  %8207 = icmp eq ptr %8206, %7325
  br i1 %8207, label %8209, label %8208

8208:                                             ; preds = %8202
  call void @_ZdlPv(ptr noundef %8206) #22
  br label %8209

8209:                                             ; preds = %8208, %8202, %7522, %7520
  %8210 = phi ptr [ %7315, %7520 ], [ %7324, %7522 ], [ %8203, %8202 ], [ %8203, %8208 ]
  %8211 = phi { ptr, i32 } [ %7521, %7520 ], [ %7523, %7522 ], [ %8204, %8202 ], [ %8204, %8208 ]
  %8212 = phi i1 [ true, %7520 ], [ true, %7522 ], [ %8205, %8202 ], [ %8205, %8208 ]
  %8213 = load ptr, ptr %225, align 8, !tbaa !23
  %8214 = icmp eq ptr %8213, %7316
  br i1 %8214, label %8216, label %8215

8215:                                             ; preds = %8209
  call void @_ZdlPv(ptr noundef %8213) #22
  br label %8216

8216:                                             ; preds = %8215, %8209, %7518, %7516
  %8217 = phi ptr [ %7307, %7516 ], [ %7315, %7518 ], [ %8210, %8209 ], [ %8210, %8215 ]
  %8218 = phi { ptr, i32 } [ %7517, %7516 ], [ %7519, %7518 ], [ %8211, %8209 ], [ %8211, %8215 ]
  %8219 = phi i1 [ true, %7516 ], [ true, %7518 ], [ %8212, %8209 ], [ %8212, %8215 ]
  %8220 = load ptr, ptr %224, align 8, !tbaa !23
  %8221 = icmp eq ptr %8220, %7308
  br i1 %8221, label %8223, label %8222

8222:                                             ; preds = %8216
  call void @_ZdlPv(ptr noundef %8220) #22
  br label %8223

8223:                                             ; preds = %8222, %8216, %7514, %7512
  %8224 = phi ptr [ %7298, %7512 ], [ %7307, %7514 ], [ %8217, %8216 ], [ %8217, %8222 ]
  %8225 = phi { ptr, i32 } [ %7513, %7512 ], [ %7515, %7514 ], [ %8218, %8216 ], [ %8218, %8222 ]
  %8226 = phi i1 [ true, %7512 ], [ true, %7514 ], [ %8219, %8216 ], [ %8219, %8222 ]
  %8227 = load ptr, ptr %223, align 8, !tbaa !23
  %8228 = icmp eq ptr %8227, %7299
  br i1 %8228, label %8230, label %8229

8229:                                             ; preds = %8223
  call void @_ZdlPv(ptr noundef %8227) #22
  br label %8230

8230:                                             ; preds = %8229, %8223, %7510, %7508
  %8231 = phi ptr [ %7289, %7508 ], [ %7298, %7510 ], [ %8224, %8223 ], [ %8224, %8229 ]
  %8232 = phi { ptr, i32 } [ %7509, %7508 ], [ %7511, %7510 ], [ %8225, %8223 ], [ %8225, %8229 ]
  %8233 = phi i1 [ true, %7508 ], [ true, %7510 ], [ %8226, %8223 ], [ %8226, %8229 ]
  %8234 = load ptr, ptr %222, align 8, !tbaa !23
  %8235 = icmp eq ptr %8234, %7290
  br i1 %8235, label %8237, label %8236

8236:                                             ; preds = %8230
  call void @_ZdlPv(ptr noundef %8234) #22
  br label %8237

8237:                                             ; preds = %8236, %8230, %7506, %7504
  %8238 = phi ptr [ %220, %7504 ], [ %7289, %7506 ], [ %8231, %8230 ], [ %8231, %8236 ]
  %8239 = phi { ptr, i32 } [ %7505, %7504 ], [ %7507, %7506 ], [ %8232, %8230 ], [ %8232, %8236 ]
  %8240 = phi i1 [ true, %7504 ], [ true, %7506 ], [ %8233, %8230 ], [ %8233, %8236 ]
  %8241 = load ptr, ptr %221, align 8, !tbaa !23
  %8242 = icmp eq ptr %8241, %7283
  br i1 %8242, label %8244, label %8243

8243:                                             ; preds = %8237
  call void @_ZdlPv(ptr noundef %8241) #22
  br label %8244

8244:                                             ; preds = %8243, %8237
  %8245 = icmp ne ptr %220, %8238
  %8246 = select i1 %8240, i1 %8245, i1 false
  br i1 %8246, label %8247, label %8290

8247:                                             ; preds = %8244, %8288
  %8248 = phi ptr [ %8249, %8288 ], [ %8238, %8244 ]
  %8249 = getelementptr inbounds %struct.TestCase, ptr %8248, i64 -1
  %8250 = getelementptr %struct.TestCase, ptr %8248, i64 -1, i32 3, i32 0, i32 1
  %8251 = load ptr, ptr %8250, align 8, !tbaa !88
  %8252 = icmp eq ptr %8251, null
  br i1 %8252, label %8277, label %8253

8253:                                             ; preds = %8247
  %8254 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8251, i64 0, i32 1
  %8255 = load atomic i64, ptr %8254 acquire, align 8
  %8256 = icmp eq i64 %8255, 4294967297
  %8257 = trunc i64 %8255 to i32
  br i1 %8256, label %8258, label %8266

8258:                                             ; preds = %8253
  store i32 0, ptr %8254, align 8, !tbaa !90
  %8259 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8251, i64 0, i32 2
  store i32 0, ptr %8259, align 4, !tbaa !92
  %8260 = load ptr, ptr %8251, align 8, !tbaa !58
  %8261 = getelementptr inbounds ptr, ptr %8260, i64 2
  %8262 = load ptr, ptr %8261, align 8
  call void %8262(ptr noundef nonnull align 8 dereferenceable(16) %8251) #21
  %8263 = load ptr, ptr %8251, align 8, !tbaa !58
  %8264 = getelementptr inbounds ptr, ptr %8263, i64 3
  %8265 = load ptr, ptr %8264, align 8
  call void %8265(ptr noundef nonnull align 8 dereferenceable(16) %8251) #21
  br label %8277

8266:                                             ; preds = %8253
  %8267 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %8268 = icmp eq i8 %8267, 0
  br i1 %8268, label %8271, label %8269

8269:                                             ; preds = %8266
  %8270 = add nsw i32 %8257, -1
  store i32 %8270, ptr %8254, align 8, !tbaa !73
  br label %8273

8271:                                             ; preds = %8266
  %8272 = atomicrmw volatile add ptr %8254, i32 -1 acq_rel, align 4
  br label %8273

8273:                                             ; preds = %8271, %8269
  %8274 = phi i32 [ %8257, %8269 ], [ %8272, %8271 ]
  %8275 = icmp eq i32 %8274, 1
  br i1 %8275, label %8276, label %8277, !prof !42

8276:                                             ; preds = %8273
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %8251) #21
  br label %8277

8277:                                             ; preds = %8276, %8273, %8258, %8247
  %8278 = getelementptr %struct.TestCase, ptr %8248, i64 -1, i32 2
  %8279 = load ptr, ptr %8278, align 8, !tbaa !23
  %8280 = getelementptr %struct.TestCase, ptr %8248, i64 -1, i32 2, i32 2
  %8281 = icmp eq ptr %8279, %8280
  br i1 %8281, label %8283, label %8282

8282:                                             ; preds = %8277
  call void @_ZdlPv(ptr noundef %8279) #22
  br label %8283

8283:                                             ; preds = %8282, %8277
  %8284 = load ptr, ptr %8249, align 8, !tbaa !23
  %8285 = getelementptr %struct.TestCase, ptr %8248, i64 -1, i32 0, i32 2
  %8286 = icmp eq ptr %8284, %8285
  br i1 %8286, label %8288, label %8287

8287:                                             ; preds = %8283
  call void @_ZdlPv(ptr noundef %8284) #22
  br label %8288

8288:                                             ; preds = %8283, %8287
  %8289 = icmp eq ptr %8249, %220
  br i1 %8289, label %8290, label %8247

8290:                                             ; preds = %8288, %8244
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %220) #21
  br label %762

8291:                                             ; preds = %7500, %7503
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %220) #21
  store i32 %7398, ptr @dummy272, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %221)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %222)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %223)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %224)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %225)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %226)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %227)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %228)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %229)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %230)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %231)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %232)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %233)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %234)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %235)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %208)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %207) #21
  %8292 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %208, i64 0, i32 2
  store ptr %8292, ptr %208, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %206) #21
  store i64 62, ptr %206, align 8, !tbaa !74
  %8293 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %208, ptr noundef nonnull align 8 dereferenceable(8) %206, i64 noundef 0)
  store ptr %8293, ptr %208, align 8, !tbaa !23
  %8294 = load i64, ptr %206, align 8, !tbaa !74
  store i64 %8294, ptr %8292, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(62) %8293, ptr noundef nonnull align 1 dereferenceable(62) @.str.116, i64 62, i1 false)
  %8295 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %208, i64 0, i32 1
  store i64 %8294, ptr %8295, align 8, !tbaa !10
  %8296 = getelementptr inbounds i8, ptr %8293, i64 %8294
  store i8 0, ptr %8296, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %206) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %207, ptr noundef nonnull %208, i32 noundef 0)
          to label %8297 unwind label %8342

8297:                                             ; preds = %8291
  %8298 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 4, ptr nonnull %207, i64 1)
          to label %8299 unwind label %8344

8299:                                             ; preds = %8297
  %8300 = getelementptr inbounds %struct.TestCase, ptr %207, i64 0, i32 3, i32 0, i32 1
  %8301 = load ptr, ptr %8300, align 8, !tbaa !88
  %8302 = icmp eq ptr %8301, null
  br i1 %8302, label %8327, label %8303

8303:                                             ; preds = %8299
  %8304 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8301, i64 0, i32 1
  %8305 = load atomic i64, ptr %8304 acquire, align 8
  %8306 = icmp eq i64 %8305, 4294967297
  %8307 = trunc i64 %8305 to i32
  br i1 %8306, label %8308, label %8316

8308:                                             ; preds = %8303
  store i32 0, ptr %8304, align 8, !tbaa !90
  %8309 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8301, i64 0, i32 2
  store i32 0, ptr %8309, align 4, !tbaa !92
  %8310 = load ptr, ptr %8301, align 8, !tbaa !58
  %8311 = getelementptr inbounds ptr, ptr %8310, i64 2
  %8312 = load ptr, ptr %8311, align 8
  call void %8312(ptr noundef nonnull align 8 dereferenceable(16) %8301) #21
  %8313 = load ptr, ptr %8301, align 8, !tbaa !58
  %8314 = getelementptr inbounds ptr, ptr %8313, i64 3
  %8315 = load ptr, ptr %8314, align 8
  call void %8315(ptr noundef nonnull align 8 dereferenceable(16) %8301) #21
  br label %8327

8316:                                             ; preds = %8303
  %8317 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %8318 = icmp eq i8 %8317, 0
  br i1 %8318, label %8321, label %8319

8319:                                             ; preds = %8316
  %8320 = add nsw i32 %8307, -1
  store i32 %8320, ptr %8304, align 8, !tbaa !73
  br label %8323

8321:                                             ; preds = %8316
  %8322 = atomicrmw volatile add ptr %8304, i32 -1 acq_rel, align 4
  br label %8323

8323:                                             ; preds = %8321, %8319
  %8324 = phi i32 [ %8307, %8319 ], [ %8322, %8321 ]
  %8325 = icmp eq i32 %8324, 1
  br i1 %8325, label %8326, label %8327, !prof !42

8326:                                             ; preds = %8323
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %8301) #21
  br label %8327

8327:                                             ; preds = %8326, %8323, %8308, %8299
  %8328 = getelementptr inbounds %struct.TestCase, ptr %207, i64 0, i32 2
  %8329 = load ptr, ptr %8328, align 8, !tbaa !23
  %8330 = getelementptr inbounds %struct.TestCase, ptr %207, i64 0, i32 2, i32 2
  %8331 = icmp eq ptr %8329, %8330
  br i1 %8331, label %8333, label %8332

8332:                                             ; preds = %8327
  call void @_ZdlPv(ptr noundef %8329) #22
  br label %8333

8333:                                             ; preds = %8332, %8327
  %8334 = load ptr, ptr %207, align 8, !tbaa !23
  %8335 = getelementptr inbounds %struct.TestCase, ptr %207, i64 0, i32 0, i32 2
  %8336 = icmp eq ptr %8334, %8335
  br i1 %8336, label %8338, label %8337

8337:                                             ; preds = %8333
  call void @_ZdlPv(ptr noundef %8334) #22
  br label %8338

8338:                                             ; preds = %8337, %8333
  %8339 = load ptr, ptr %208, align 8, !tbaa !23
  %8340 = icmp eq ptr %8339, %8292
  br i1 %8340, label %8390, label %8341

8341:                                             ; preds = %8338
  call void @_ZdlPv(ptr noundef %8339) #22
  br label %8390

8342:                                             ; preds = %8291
  %8343 = landingpad { ptr, i32 }
          cleanup
  br label %8384

8344:                                             ; preds = %8297
  %8345 = landingpad { ptr, i32 }
          cleanup
  %8346 = getelementptr inbounds %struct.TestCase, ptr %207, i64 0, i32 3, i32 0, i32 1
  %8347 = load ptr, ptr %8346, align 8, !tbaa !88
  %8348 = icmp eq ptr %8347, null
  br i1 %8348, label %8373, label %8349

8349:                                             ; preds = %8344
  %8350 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8347, i64 0, i32 1
  %8351 = load atomic i64, ptr %8350 acquire, align 8
  %8352 = icmp eq i64 %8351, 4294967297
  %8353 = trunc i64 %8351 to i32
  br i1 %8352, label %8354, label %8362

8354:                                             ; preds = %8349
  store i32 0, ptr %8350, align 8, !tbaa !90
  %8355 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8347, i64 0, i32 2
  store i32 0, ptr %8355, align 4, !tbaa !92
  %8356 = load ptr, ptr %8347, align 8, !tbaa !58
  %8357 = getelementptr inbounds ptr, ptr %8356, i64 2
  %8358 = load ptr, ptr %8357, align 8
  call void %8358(ptr noundef nonnull align 8 dereferenceable(16) %8347) #21
  %8359 = load ptr, ptr %8347, align 8, !tbaa !58
  %8360 = getelementptr inbounds ptr, ptr %8359, i64 3
  %8361 = load ptr, ptr %8360, align 8
  call void %8361(ptr noundef nonnull align 8 dereferenceable(16) %8347) #21
  br label %8373

8362:                                             ; preds = %8349
  %8363 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %8364 = icmp eq i8 %8363, 0
  br i1 %8364, label %8367, label %8365

8365:                                             ; preds = %8362
  %8366 = add nsw i32 %8353, -1
  store i32 %8366, ptr %8350, align 8, !tbaa !73
  br label %8369

8367:                                             ; preds = %8362
  %8368 = atomicrmw volatile add ptr %8350, i32 -1 acq_rel, align 4
  br label %8369

8369:                                             ; preds = %8367, %8365
  %8370 = phi i32 [ %8353, %8365 ], [ %8368, %8367 ]
  %8371 = icmp eq i32 %8370, 1
  br i1 %8371, label %8372, label %8373, !prof !42

8372:                                             ; preds = %8369
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %8347) #21
  br label %8373

8373:                                             ; preds = %8372, %8369, %8354, %8344
  %8374 = getelementptr inbounds %struct.TestCase, ptr %207, i64 0, i32 2
  %8375 = load ptr, ptr %8374, align 8, !tbaa !23
  %8376 = getelementptr inbounds %struct.TestCase, ptr %207, i64 0, i32 2, i32 2
  %8377 = icmp eq ptr %8375, %8376
  br i1 %8377, label %8379, label %8378

8378:                                             ; preds = %8373
  call void @_ZdlPv(ptr noundef %8375) #22
  br label %8379

8379:                                             ; preds = %8378, %8373
  %8380 = load ptr, ptr %207, align 8, !tbaa !23
  %8381 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %207, i64 0, i32 2
  %8382 = icmp eq ptr %8380, %8381
  br i1 %8382, label %8384, label %8383

8383:                                             ; preds = %8379
  call void @_ZdlPv(ptr noundef %8380) #22
  br label %8384

8384:                                             ; preds = %8383, %8379, %8342
  %8385 = phi { ptr, i32 } [ %8343, %8342 ], [ %8345, %8379 ], [ %8345, %8383 ]
  %8386 = load ptr, ptr %208, align 8, !tbaa !23
  %8387 = icmp eq ptr %8386, %8292
  br i1 %8387, label %8389, label %8388

8388:                                             ; preds = %8384
  call void @_ZdlPv(ptr noundef %8386) #22
  br label %8389

8389:                                             ; preds = %8388, %8384
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %207) #21
  br label %762

8390:                                             ; preds = %8338, %8341
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %207) #21
  store i32 %8298, ptr @dummy275, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %208)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %205) #21
  %8391 = getelementptr inbounds i8, ptr %205, i64 8
  store i64 0, ptr %8391, align 8
  %8392 = getelementptr inbounds %"class.std::function", ptr %205, i64 0, i32 1
  %8393 = getelementptr inbounds %"class.std::_Function_base", ptr %205, i64 0, i32 1
  store ptr @_Z12CheckThreadsRK7Results, ptr %205, align 8, !tbaa !47
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E9_M_invokeERKSt9_Any_dataS2_, ptr %8392, align 8, !tbaa !115
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, ptr %8393, align 8, !tbaa !118
  %8394 = invoke noundef i64 @_Z10AddCheckerPKcRKSt8functionIFvRK7ResultsEE(ptr noundef nonnull @.str.120, ptr noundef nonnull align 8 dereferenceable(32) %205)
          to label %8395 unwind label %8403

8395:                                             ; preds = %8390
  %8396 = load ptr, ptr %8393, align 8, !tbaa !118
  %8397 = icmp eq ptr %8396, null
  br i1 %8397, label %8413, label %8398

8398:                                             ; preds = %8395
  %8399 = invoke noundef zeroext i1 %8396(ptr noundef nonnull align 8 dereferenceable(16) %205, ptr noundef nonnull align 8 dereferenceable(16) %205, i32 noundef 3)
          to label %8413 unwind label %8400

8400:                                             ; preds = %8398
  %8401 = landingpad { ptr, i32 }
          catch ptr null
  %8402 = extractvalue { ptr, i32 } %8401, 0
  call void @__clang_call_terminate(ptr %8402) #24
  unreachable

8403:                                             ; preds = %8390
  %8404 = landingpad { ptr, i32 }
          cleanup
  %8405 = load ptr, ptr %8393, align 8, !tbaa !118
  %8406 = icmp eq ptr %8405, null
  br i1 %8406, label %8412, label %8407

8407:                                             ; preds = %8403
  %8408 = invoke noundef zeroext i1 %8405(ptr noundef nonnull align 8 dereferenceable(16) %205, ptr noundef nonnull align 8 dereferenceable(16) %205, i32 noundef 3)
          to label %8412 unwind label %8409

8409:                                             ; preds = %8407
  %8410 = landingpad { ptr, i32 }
          catch ptr null
  %8411 = extractvalue { ptr, i32 } %8410, 0
  call void @__clang_call_terminate(ptr %8411) #24
  unreachable

8412:                                             ; preds = %8407, %8403
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %205) #21
  br label %762

8413:                                             ; preds = %8395, %8398
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %205) #21
  store i64 %8394, ptr @dummy282, align 8, !tbaa !74
  %8414 = call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #25
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %8414, ptr noundef nonnull @.str.122)
          to label %8417 unwind label %8415

8415:                                             ; preds = %8413
  %8416 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %8414) #22
  br label %762

8417:                                             ; preds = %8413
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %8414, align 8, !tbaa !58
  %8418 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %8414, i64 0, i32 1
  store ptr @_Z22BM_Counters_AvgThreadsRN9benchmark5StateE, ptr %8418, align 8, !tbaa !93
  %8419 = call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %8414)
  %8420 = call noundef ptr @_ZN9benchmark8internal9Benchmark11ThreadRangeEii(ptr noundef nonnull align 8 dereferenceable(216) %8419, i32 noundef 1, i32 noundef 8)
  store ptr %8420, ptr @_ZL27benchmark_uniq_8_benchmark_, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %204)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %203) #21
  %8421 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %204, i64 0, i32 2
  store ptr %8421, ptr %204, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %202) #21
  store i64 79, ptr %202, align 8, !tbaa !74
  %8422 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %204, ptr noundef nonnull align 8 dereferenceable(8) %202, i64 noundef 0)
  store ptr %8422, ptr %204, align 8, !tbaa !23
  %8423 = load i64, ptr %202, align 8, !tbaa !74
  store i64 %8423, ptr %8421, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(79) %8422, ptr noundef nonnull align 1 dereferenceable(79) @.str.124, i64 79, i1 false)
  %8424 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %204, i64 0, i32 1
  store i64 %8423, ptr %8424, align 8, !tbaa !10
  %8425 = getelementptr inbounds i8, ptr %8422, i64 %8423
  store i8 0, ptr %8425, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %202) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %203, ptr noundef nonnull %204, i32 noundef 0)
          to label %8426 unwind label %8471

8426:                                             ; preds = %8417
  %8427 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 0, ptr nonnull %203, i64 1)
          to label %8428 unwind label %8473

8428:                                             ; preds = %8426
  %8429 = getelementptr inbounds %struct.TestCase, ptr %203, i64 0, i32 3, i32 0, i32 1
  %8430 = load ptr, ptr %8429, align 8, !tbaa !88
  %8431 = icmp eq ptr %8430, null
  br i1 %8431, label %8456, label %8432

8432:                                             ; preds = %8428
  %8433 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8430, i64 0, i32 1
  %8434 = load atomic i64, ptr %8433 acquire, align 8
  %8435 = icmp eq i64 %8434, 4294967297
  %8436 = trunc i64 %8434 to i32
  br i1 %8435, label %8437, label %8445

8437:                                             ; preds = %8432
  store i32 0, ptr %8433, align 8, !tbaa !90
  %8438 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8430, i64 0, i32 2
  store i32 0, ptr %8438, align 4, !tbaa !92
  %8439 = load ptr, ptr %8430, align 8, !tbaa !58
  %8440 = getelementptr inbounds ptr, ptr %8439, i64 2
  %8441 = load ptr, ptr %8440, align 8
  call void %8441(ptr noundef nonnull align 8 dereferenceable(16) %8430) #21
  %8442 = load ptr, ptr %8430, align 8, !tbaa !58
  %8443 = getelementptr inbounds ptr, ptr %8442, i64 3
  %8444 = load ptr, ptr %8443, align 8
  call void %8444(ptr noundef nonnull align 8 dereferenceable(16) %8430) #21
  br label %8456

8445:                                             ; preds = %8432
  %8446 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %8447 = icmp eq i8 %8446, 0
  br i1 %8447, label %8450, label %8448

8448:                                             ; preds = %8445
  %8449 = add nsw i32 %8436, -1
  store i32 %8449, ptr %8433, align 8, !tbaa !73
  br label %8452

8450:                                             ; preds = %8445
  %8451 = atomicrmw volatile add ptr %8433, i32 -1 acq_rel, align 4
  br label %8452

8452:                                             ; preds = %8450, %8448
  %8453 = phi i32 [ %8436, %8448 ], [ %8451, %8450 ]
  %8454 = icmp eq i32 %8453, 1
  br i1 %8454, label %8455, label %8456, !prof !42

8455:                                             ; preds = %8452
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %8430) #21
  br label %8456

8456:                                             ; preds = %8455, %8452, %8437, %8428
  %8457 = getelementptr inbounds %struct.TestCase, ptr %203, i64 0, i32 2
  %8458 = load ptr, ptr %8457, align 8, !tbaa !23
  %8459 = getelementptr inbounds %struct.TestCase, ptr %203, i64 0, i32 2, i32 2
  %8460 = icmp eq ptr %8458, %8459
  br i1 %8460, label %8462, label %8461

8461:                                             ; preds = %8456
  call void @_ZdlPv(ptr noundef %8458) #22
  br label %8462

8462:                                             ; preds = %8461, %8456
  %8463 = load ptr, ptr %203, align 8, !tbaa !23
  %8464 = getelementptr inbounds %struct.TestCase, ptr %203, i64 0, i32 0, i32 2
  %8465 = icmp eq ptr %8463, %8464
  br i1 %8465, label %8467, label %8466

8466:                                             ; preds = %8462
  call void @_ZdlPv(ptr noundef %8463) #22
  br label %8467

8467:                                             ; preds = %8466, %8462
  %8468 = load ptr, ptr %204, align 8, !tbaa !23
  %8469 = icmp eq ptr %8468, %8421
  br i1 %8469, label %8519, label %8470

8470:                                             ; preds = %8467
  call void @_ZdlPv(ptr noundef %8468) #22
  br label %8519

8471:                                             ; preds = %8417
  %8472 = landingpad { ptr, i32 }
          cleanup
  br label %8513

8473:                                             ; preds = %8426
  %8474 = landingpad { ptr, i32 }
          cleanup
  %8475 = getelementptr inbounds %struct.TestCase, ptr %203, i64 0, i32 3, i32 0, i32 1
  %8476 = load ptr, ptr %8475, align 8, !tbaa !88
  %8477 = icmp eq ptr %8476, null
  br i1 %8477, label %8502, label %8478

8478:                                             ; preds = %8473
  %8479 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8476, i64 0, i32 1
  %8480 = load atomic i64, ptr %8479 acquire, align 8
  %8481 = icmp eq i64 %8480, 4294967297
  %8482 = trunc i64 %8480 to i32
  br i1 %8481, label %8483, label %8491

8483:                                             ; preds = %8478
  store i32 0, ptr %8479, align 8, !tbaa !90
  %8484 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8476, i64 0, i32 2
  store i32 0, ptr %8484, align 4, !tbaa !92
  %8485 = load ptr, ptr %8476, align 8, !tbaa !58
  %8486 = getelementptr inbounds ptr, ptr %8485, i64 2
  %8487 = load ptr, ptr %8486, align 8
  call void %8487(ptr noundef nonnull align 8 dereferenceable(16) %8476) #21
  %8488 = load ptr, ptr %8476, align 8, !tbaa !58
  %8489 = getelementptr inbounds ptr, ptr %8488, i64 3
  %8490 = load ptr, ptr %8489, align 8
  call void %8490(ptr noundef nonnull align 8 dereferenceable(16) %8476) #21
  br label %8502

8491:                                             ; preds = %8478
  %8492 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %8493 = icmp eq i8 %8492, 0
  br i1 %8493, label %8496, label %8494

8494:                                             ; preds = %8491
  %8495 = add nsw i32 %8482, -1
  store i32 %8495, ptr %8479, align 8, !tbaa !73
  br label %8498

8496:                                             ; preds = %8491
  %8497 = atomicrmw volatile add ptr %8479, i32 -1 acq_rel, align 4
  br label %8498

8498:                                             ; preds = %8496, %8494
  %8499 = phi i32 [ %8482, %8494 ], [ %8497, %8496 ]
  %8500 = icmp eq i32 %8499, 1
  br i1 %8500, label %8501, label %8502, !prof !42

8501:                                             ; preds = %8498
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %8476) #21
  br label %8502

8502:                                             ; preds = %8501, %8498, %8483, %8473
  %8503 = getelementptr inbounds %struct.TestCase, ptr %203, i64 0, i32 2
  %8504 = load ptr, ptr %8503, align 8, !tbaa !23
  %8505 = getelementptr inbounds %struct.TestCase, ptr %203, i64 0, i32 2, i32 2
  %8506 = icmp eq ptr %8504, %8505
  br i1 %8506, label %8508, label %8507

8507:                                             ; preds = %8502
  call void @_ZdlPv(ptr noundef %8504) #22
  br label %8508

8508:                                             ; preds = %8507, %8502
  %8509 = load ptr, ptr %203, align 8, !tbaa !23
  %8510 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %203, i64 0, i32 2
  %8511 = icmp eq ptr %8509, %8510
  br i1 %8511, label %8513, label %8512

8512:                                             ; preds = %8508
  call void @_ZdlPv(ptr noundef %8509) #22
  br label %8513

8513:                                             ; preds = %8512, %8508, %8471
  %8514 = phi { ptr, i32 } [ %8472, %8471 ], [ %8474, %8508 ], [ %8474, %8512 ]
  %8515 = load ptr, ptr %204, align 8, !tbaa !23
  %8516 = icmp eq ptr %8515, %8421
  br i1 %8516, label %8518, label %8517

8517:                                             ; preds = %8513
  call void @_ZdlPv(ptr noundef %8515) #22
  br label %8518

8518:                                             ; preds = %8517, %8513
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %203) #21
  br label %762

8519:                                             ; preds = %8467, %8470
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %203) #21
  store i32 %8427, ptr @dummy297, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %204)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %187)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %188)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %189)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %190)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %191)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %192)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %193)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %194)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %195)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %196)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %197)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %198)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %199)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %200)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %201)
  call void @llvm.lifetime.start.p0(i64 1320, ptr nonnull %186) #21
  %8520 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %187, i64 0, i32 2
  store ptr %8520, ptr %187, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %185) #21
  store i64 47, ptr %185, align 8, !tbaa !74
  %8521 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %187, ptr noundef nonnull align 8 dereferenceable(8) %185, i64 noundef 0)
  store ptr %8521, ptr %187, align 8, !tbaa !23
  %8522 = load i64, ptr %185, align 8, !tbaa !74
  store i64 %8522, ptr %8520, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(47) %8521, ptr noundef nonnull align 1 dereferenceable(47) @.str.126, i64 47, i1 false)
  %8523 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %187, i64 0, i32 1
  store i64 %8522, ptr %8523, align 8, !tbaa !10
  %8524 = getelementptr inbounds i8, ptr %8521, i64 %8522
  store i8 0, ptr %8524, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %185) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %186, ptr noundef nonnull %187, i32 noundef 0)
          to label %8525 unwind label %8741

8525:                                             ; preds = %8519
  %8526 = getelementptr inbounds %struct.TestCase, ptr %186, i64 1
  %8527 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %188, i64 0, i32 2
  store ptr %8527, ptr %188, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %184) #21
  store i64 19, ptr %184, align 8, !tbaa !74
  %8528 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %188, ptr noundef nonnull align 8 dereferenceable(8) %184, i64 noundef 0)
          to label %8529 unwind label %8743

8529:                                             ; preds = %8525
  store ptr %8528, ptr %188, align 8, !tbaa !23
  %8530 = load i64, ptr %184, align 8, !tbaa !74
  store i64 %8530, ptr %8527, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %8528, ptr noundef nonnull align 1 dereferenceable(19) @.str.127, i64 19, i1 false)
  %8531 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %188, i64 0, i32 1
  store i64 %8530, ptr %8531, align 8, !tbaa !10
  %8532 = load ptr, ptr %188, align 8, !tbaa !23
  %8533 = getelementptr inbounds i8, ptr %8532, i64 %8530
  store i8 0, ptr %8533, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %184) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %8526, ptr noundef nonnull %188, i32 noundef 1)
          to label %8534 unwind label %8745

8534:                                             ; preds = %8529
  %8535 = getelementptr inbounds %struct.TestCase, ptr %186, i64 2
  %8536 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %189, i64 0, i32 2
  store ptr %8536, ptr %189, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %183) #21
  store i64 32, ptr %183, align 8, !tbaa !74
  %8537 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %189, ptr noundef nonnull align 8 dereferenceable(8) %183, i64 noundef 0)
          to label %8538 unwind label %8747

8538:                                             ; preds = %8534
  store ptr %8537, ptr %189, align 8, !tbaa !23
  %8539 = load i64, ptr %183, align 8, !tbaa !74
  store i64 %8539, ptr %8536, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %8537, ptr noundef nonnull align 1 dereferenceable(32) @.str.15, i64 32, i1 false)
  %8540 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %189, i64 0, i32 1
  store i64 %8539, ptr %8540, align 8, !tbaa !10
  %8541 = load ptr, ptr %189, align 8, !tbaa !23
  %8542 = getelementptr inbounds i8, ptr %8541, i64 %8539
  store i8 0, ptr %8542, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %183) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %8535, ptr noundef nonnull %189, i32 noundef 1)
          to label %8543 unwind label %8749

8543:                                             ; preds = %8538
  %8544 = getelementptr inbounds %struct.TestCase, ptr %186, i64 3
  %8545 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %190, i64 0, i32 2
  store ptr %8545, ptr %190, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %182) #21
  store i64 51, ptr %182, align 8, !tbaa !74
  %8546 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %190, ptr noundef nonnull align 8 dereferenceable(8) %182, i64 noundef 0)
          to label %8547 unwind label %8751

8547:                                             ; preds = %8543
  store ptr %8546, ptr %190, align 8, !tbaa !23
  %8548 = load i64, ptr %182, align 8, !tbaa !74
  store i64 %8548, ptr %8545, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(51) %8546, ptr noundef nonnull align 1 dereferenceable(51) @.str.128, i64 51, i1 false)
  %8549 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %190, i64 0, i32 1
  store i64 %8548, ptr %8549, align 8, !tbaa !10
  %8550 = getelementptr inbounds i8, ptr %8546, i64 %8548
  store i8 0, ptr %8550, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %182) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %8544, ptr noundef nonnull %190, i32 noundef 1)
          to label %8551 unwind label %8753

8551:                                             ; preds = %8547
  %8552 = getelementptr inbounds %struct.TestCase, ptr %186, i64 4
  %8553 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %191, i64 0, i32 2
  store ptr %8553, ptr %191, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %181) #21
  store i64 25, ptr %181, align 8, !tbaa !74
  %8554 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %191, ptr noundef nonnull align 8 dereferenceable(8) %181, i64 noundef 0)
          to label %8555 unwind label %8755

8555:                                             ; preds = %8551
  store ptr %8554, ptr %191, align 8, !tbaa !23
  %8556 = load i64, ptr %181, align 8, !tbaa !74
  store i64 %8556, ptr %8553, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(25) %8554, ptr noundef nonnull align 1 dereferenceable(25) @.str.17, i64 25, i1 false)
  %8557 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %191, i64 0, i32 1
  store i64 %8556, ptr %8557, align 8, !tbaa !10
  %8558 = load ptr, ptr %191, align 8, !tbaa !23
  %8559 = getelementptr inbounds i8, ptr %8558, i64 %8556
  store i8 0, ptr %8559, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %181) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %8552, ptr noundef nonnull %191, i32 noundef 1)
          to label %8560 unwind label %8757

8560:                                             ; preds = %8555
  %8561 = getelementptr inbounds %struct.TestCase, ptr %186, i64 5
  %8562 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %192, i64 0, i32 2
  store ptr %8562, ptr %192, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %180) #21
  store i64 18, ptr %180, align 8, !tbaa !74
  %8563 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %192, ptr noundef nonnull align 8 dereferenceable(8) %180, i64 noundef 0)
          to label %8564 unwind label %8759

8564:                                             ; preds = %8560
  store ptr %8563, ptr %192, align 8, !tbaa !23
  %8565 = load i64, ptr %180, align 8, !tbaa !74
  store i64 %8565, ptr %8562, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(18) %8563, ptr noundef nonnull align 1 dereferenceable(18) @.str.18, i64 18, i1 false)
  %8566 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %192, i64 0, i32 1
  store i64 %8565, ptr %8566, align 8, !tbaa !10
  %8567 = load ptr, ptr %192, align 8, !tbaa !23
  %8568 = getelementptr inbounds i8, ptr %8567, i64 %8565
  store i8 0, ptr %8568, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %180) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %8561, ptr noundef nonnull %192, i32 noundef 1)
          to label %8569 unwind label %8761

8569:                                             ; preds = %8564
  %8570 = getelementptr inbounds %struct.TestCase, ptr %186, i64 6
  %8571 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %193, i64 0, i32 2
  store ptr %8571, ptr %193, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %179) #21
  store i64 23, ptr %179, align 8, !tbaa !74
  %8572 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %193, ptr noundef nonnull align 8 dereferenceable(8) %179, i64 noundef 0)
          to label %8573 unwind label %8763

8573:                                             ; preds = %8569
  store ptr %8572, ptr %193, align 8, !tbaa !23
  %8574 = load i64, ptr %179, align 8, !tbaa !74
  store i64 %8574, ptr %8571, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(23) %8572, ptr noundef nonnull align 1 dereferenceable(23) @.str.19, i64 23, i1 false)
  %8575 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %193, i64 0, i32 1
  store i64 %8574, ptr %8575, align 8, !tbaa !10
  %8576 = load ptr, ptr %193, align 8, !tbaa !23
  %8577 = getelementptr inbounds i8, ptr %8576, i64 %8574
  store i8 0, ptr %8577, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %179) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %8570, ptr noundef nonnull %193, i32 noundef 1)
          to label %8578 unwind label %8765

8578:                                             ; preds = %8573
  %8579 = getelementptr inbounds %struct.TestCase, ptr %186, i64 7
  %8580 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %194, i64 0, i32 2
  store ptr %8580, ptr %194, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %8580, ptr noundef nonnull align 1 dereferenceable(14) @.str.20, i64 14, i1 false)
  %8581 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %194, i64 0, i32 1
  store i64 14, ptr %8581, align 8, !tbaa !10
  %8582 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %194, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %8582, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %8579, ptr noundef nonnull %194, i32 noundef 1)
          to label %8583 unwind label %8767

8583:                                             ; preds = %8578
  %8584 = getelementptr inbounds %struct.TestCase, ptr %186, i64 8
  %8585 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %195, i64 0, i32 2
  store ptr %8585, ptr %195, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %178) #21
  store i64 20, ptr %178, align 8, !tbaa !74
  %8586 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %195, ptr noundef nonnull align 8 dereferenceable(8) %178, i64 noundef 0)
          to label %8587 unwind label %8769

8587:                                             ; preds = %8583
  store ptr %8586, ptr %195, align 8, !tbaa !23
  %8588 = load i64, ptr %178, align 8, !tbaa !74
  store i64 %8588, ptr %8585, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %8586, ptr noundef nonnull align 1 dereferenceable(20) @.str.21, i64 20, i1 false)
  %8589 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %195, i64 0, i32 1
  store i64 %8588, ptr %8589, align 8, !tbaa !10
  %8590 = load ptr, ptr %195, align 8, !tbaa !23
  %8591 = getelementptr inbounds i8, ptr %8590, i64 %8588
  store i8 0, ptr %8591, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %178) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %8584, ptr noundef nonnull %195, i32 noundef 1)
          to label %8592 unwind label %8771

8592:                                             ; preds = %8587
  %8593 = getelementptr inbounds %struct.TestCase, ptr %186, i64 9
  %8594 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %196, i64 0, i32 2
  store ptr %8594, ptr %196, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %177) #21
  store i64 21, ptr %177, align 8, !tbaa !74
  %8595 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %196, ptr noundef nonnull align 8 dereferenceable(8) %177, i64 noundef 0)
          to label %8596 unwind label %8773

8596:                                             ; preds = %8592
  store ptr %8595, ptr %196, align 8, !tbaa !23
  %8597 = load i64, ptr %177, align 8, !tbaa !74
  store i64 %8597, ptr %8594, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %8595, ptr noundef nonnull align 1 dereferenceable(21) @.str.22, i64 21, i1 false)
  %8598 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %196, i64 0, i32 1
  store i64 %8597, ptr %8598, align 8, !tbaa !10
  %8599 = load ptr, ptr %196, align 8, !tbaa !23
  %8600 = getelementptr inbounds i8, ptr %8599, i64 %8597
  store i8 0, ptr %8600, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %177) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %8593, ptr noundef nonnull %196, i32 noundef 1)
          to label %8601 unwind label %8775

8601:                                             ; preds = %8596
  %8602 = getelementptr inbounds %struct.TestCase, ptr %186, i64 10
  %8603 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %197, i64 0, i32 2
  store ptr %8603, ptr %197, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %176) #21
  store i64 20, ptr %176, align 8, !tbaa !74
  %8604 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %197, ptr noundef nonnull align 8 dereferenceable(8) %176, i64 noundef 0)
          to label %8605 unwind label %8777

8605:                                             ; preds = %8601
  store ptr %8604, ptr %197, align 8, !tbaa !23
  %8606 = load i64, ptr %176, align 8, !tbaa !74
  store i64 %8606, ptr %8603, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %8604, ptr noundef nonnull align 1 dereferenceable(20) @.str.23, i64 20, i1 false)
  %8607 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %197, i64 0, i32 1
  store i64 %8606, ptr %8607, align 8, !tbaa !10
  %8608 = load ptr, ptr %197, align 8, !tbaa !23
  %8609 = getelementptr inbounds i8, ptr %8608, i64 %8606
  store i8 0, ptr %8609, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %176) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %8602, ptr noundef nonnull %197, i32 noundef 1)
          to label %8610 unwind label %8779

8610:                                             ; preds = %8605
  %8611 = getelementptr inbounds %struct.TestCase, ptr %186, i64 11
  %8612 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %198, i64 0, i32 2
  store ptr %8612, ptr %198, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %175) #21
  store i64 19, ptr %175, align 8, !tbaa !74
  %8613 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %198, ptr noundef nonnull align 8 dereferenceable(8) %175, i64 noundef 0)
          to label %8614 unwind label %8781

8614:                                             ; preds = %8610
  store ptr %8613, ptr %198, align 8, !tbaa !23
  %8615 = load i64, ptr %175, align 8, !tbaa !74
  store i64 %8615, ptr %8612, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %8613, ptr noundef nonnull align 1 dereferenceable(19) @.str.24, i64 19, i1 false)
  %8616 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %198, i64 0, i32 1
  store i64 %8615, ptr %8616, align 8, !tbaa !10
  %8617 = load ptr, ptr %198, align 8, !tbaa !23
  %8618 = getelementptr inbounds i8, ptr %8617, i64 %8615
  store i8 0, ptr %8618, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %175) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %8611, ptr noundef nonnull %198, i32 noundef 1)
          to label %8619 unwind label %8783

8619:                                             ; preds = %8614
  %8620 = getelementptr inbounds %struct.TestCase, ptr %186, i64 12
  %8621 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %199, i64 0, i32 2
  store ptr %8621, ptr %199, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(15) %8621, ptr noundef nonnull align 1 dereferenceable(15) @.str.25, i64 15, i1 false)
  %8622 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %199, i64 0, i32 1
  store i64 15, ptr %8622, align 8, !tbaa !10
  %8623 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %199, i64 0, i32 2, i32 1, i64 7
  store i8 0, ptr %8623, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %8620, ptr noundef nonnull %199, i32 noundef 1)
          to label %8624 unwind label %8785

8624:                                             ; preds = %8619
  %8625 = getelementptr inbounds %struct.TestCase, ptr %186, i64 13
  %8626 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %200, i64 0, i32 2
  store ptr %8626, ptr %200, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %8626, ptr noundef nonnull align 1 dereferenceable(14) @.str.26, i64 14, i1 false)
  %8627 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %200, i64 0, i32 1
  store i64 14, ptr %8627, align 8, !tbaa !10
  %8628 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %200, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %8628, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %8625, ptr noundef nonnull %200, i32 noundef 1)
          to label %8629 unwind label %8787

8629:                                             ; preds = %8624
  %8630 = getelementptr inbounds %struct.TestCase, ptr %186, i64 14
  %8631 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %201, i64 0, i32 2
  store ptr %8631, ptr %201, align 8, !tbaa !5
  store i8 125, ptr %8631, align 8, !tbaa !13
  %8632 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %201, i64 0, i32 1
  store i64 1, ptr %8632, align 8, !tbaa !10
  %8633 = getelementptr inbounds i8, ptr %201, i64 17
  store i8 0, ptr %8633, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %8630, ptr noundef nonnull %201, i32 noundef 1)
          to label %8634 unwind label %8789

8634:                                             ; preds = %8629
  %8635 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 2, ptr nonnull %186, i64 15)
          to label %8636 unwind label %8791

8636:                                             ; preds = %8634
  %8637 = getelementptr inbounds %struct.TestCase, ptr %186, i64 15
  br label %8638

8638:                                             ; preds = %8679, %8636
  %8639 = phi ptr [ %8637, %8636 ], [ %8640, %8679 ]
  %8640 = getelementptr inbounds %struct.TestCase, ptr %8639, i64 -1
  %8641 = getelementptr %struct.TestCase, ptr %8639, i64 -1, i32 3, i32 0, i32 1
  %8642 = load ptr, ptr %8641, align 8, !tbaa !88
  %8643 = icmp eq ptr %8642, null
  br i1 %8643, label %8668, label %8644

8644:                                             ; preds = %8638
  %8645 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8642, i64 0, i32 1
  %8646 = load atomic i64, ptr %8645 acquire, align 8
  %8647 = icmp eq i64 %8646, 4294967297
  %8648 = trunc i64 %8646 to i32
  br i1 %8647, label %8649, label %8657

8649:                                             ; preds = %8644
  store i32 0, ptr %8645, align 8, !tbaa !90
  %8650 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8642, i64 0, i32 2
  store i32 0, ptr %8650, align 4, !tbaa !92
  %8651 = load ptr, ptr %8642, align 8, !tbaa !58
  %8652 = getelementptr inbounds ptr, ptr %8651, i64 2
  %8653 = load ptr, ptr %8652, align 8
  call void %8653(ptr noundef nonnull align 8 dereferenceable(16) %8642) #21
  %8654 = load ptr, ptr %8642, align 8, !tbaa !58
  %8655 = getelementptr inbounds ptr, ptr %8654, i64 3
  %8656 = load ptr, ptr %8655, align 8
  call void %8656(ptr noundef nonnull align 8 dereferenceable(16) %8642) #21
  br label %8668

8657:                                             ; preds = %8644
  %8658 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %8659 = icmp eq i8 %8658, 0
  br i1 %8659, label %8662, label %8660

8660:                                             ; preds = %8657
  %8661 = add nsw i32 %8648, -1
  store i32 %8661, ptr %8645, align 8, !tbaa !73
  br label %8664

8662:                                             ; preds = %8657
  %8663 = atomicrmw volatile add ptr %8645, i32 -1 acq_rel, align 4
  br label %8664

8664:                                             ; preds = %8662, %8660
  %8665 = phi i32 [ %8648, %8660 ], [ %8663, %8662 ]
  %8666 = icmp eq i32 %8665, 1
  br i1 %8666, label %8667, label %8668, !prof !42

8667:                                             ; preds = %8664
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %8642) #21
  br label %8668

8668:                                             ; preds = %8667, %8664, %8649, %8638
  %8669 = getelementptr %struct.TestCase, ptr %8639, i64 -1, i32 2
  %8670 = load ptr, ptr %8669, align 8, !tbaa !23
  %8671 = getelementptr %struct.TestCase, ptr %8639, i64 -1, i32 2, i32 2
  %8672 = icmp eq ptr %8670, %8671
  br i1 %8672, label %8674, label %8673

8673:                                             ; preds = %8668
  call void @_ZdlPv(ptr noundef %8670) #22
  br label %8674

8674:                                             ; preds = %8673, %8668
  %8675 = load ptr, ptr %8640, align 8, !tbaa !23
  %8676 = getelementptr %struct.TestCase, ptr %8639, i64 -1, i32 0, i32 2
  %8677 = icmp eq ptr %8675, %8676
  br i1 %8677, label %8679, label %8678

8678:                                             ; preds = %8674
  call void @_ZdlPv(ptr noundef %8675) #22
  br label %8679

8679:                                             ; preds = %8678, %8674
  %8680 = icmp eq ptr %8640, %186
  br i1 %8680, label %8681, label %8638

8681:                                             ; preds = %8679
  %8682 = load ptr, ptr %201, align 8, !tbaa !23
  %8683 = icmp eq ptr %8682, %8631
  br i1 %8683, label %8685, label %8684

8684:                                             ; preds = %8681
  call void @_ZdlPv(ptr noundef %8682) #22
  br label %8685

8685:                                             ; preds = %8684, %8681
  %8686 = load ptr, ptr %200, align 8, !tbaa !23
  %8687 = icmp eq ptr %8686, %8626
  br i1 %8687, label %8689, label %8688

8688:                                             ; preds = %8685
  call void @_ZdlPv(ptr noundef %8686) #22
  br label %8689

8689:                                             ; preds = %8688, %8685
  %8690 = load ptr, ptr %199, align 8, !tbaa !23
  %8691 = icmp eq ptr %8690, %8621
  br i1 %8691, label %8693, label %8692

8692:                                             ; preds = %8689
  call void @_ZdlPv(ptr noundef %8690) #22
  br label %8693

8693:                                             ; preds = %8692, %8689
  %8694 = load ptr, ptr %198, align 8, !tbaa !23
  %8695 = icmp eq ptr %8694, %8612
  br i1 %8695, label %8697, label %8696

8696:                                             ; preds = %8693
  call void @_ZdlPv(ptr noundef %8694) #22
  br label %8697

8697:                                             ; preds = %8696, %8693
  %8698 = load ptr, ptr %197, align 8, !tbaa !23
  %8699 = icmp eq ptr %8698, %8603
  br i1 %8699, label %8701, label %8700

8700:                                             ; preds = %8697
  call void @_ZdlPv(ptr noundef %8698) #22
  br label %8701

8701:                                             ; preds = %8700, %8697
  %8702 = load ptr, ptr %196, align 8, !tbaa !23
  %8703 = icmp eq ptr %8702, %8594
  br i1 %8703, label %8705, label %8704

8704:                                             ; preds = %8701
  call void @_ZdlPv(ptr noundef %8702) #22
  br label %8705

8705:                                             ; preds = %8704, %8701
  %8706 = load ptr, ptr %195, align 8, !tbaa !23
  %8707 = icmp eq ptr %8706, %8585
  br i1 %8707, label %8709, label %8708

8708:                                             ; preds = %8705
  call void @_ZdlPv(ptr noundef %8706) #22
  br label %8709

8709:                                             ; preds = %8708, %8705
  %8710 = load ptr, ptr %194, align 8, !tbaa !23
  %8711 = icmp eq ptr %8710, %8580
  br i1 %8711, label %8713, label %8712

8712:                                             ; preds = %8709
  call void @_ZdlPv(ptr noundef %8710) #22
  br label %8713

8713:                                             ; preds = %8712, %8709
  %8714 = load ptr, ptr %193, align 8, !tbaa !23
  %8715 = icmp eq ptr %8714, %8571
  br i1 %8715, label %8717, label %8716

8716:                                             ; preds = %8713
  call void @_ZdlPv(ptr noundef %8714) #22
  br label %8717

8717:                                             ; preds = %8716, %8713
  %8718 = load ptr, ptr %192, align 8, !tbaa !23
  %8719 = icmp eq ptr %8718, %8562
  br i1 %8719, label %8721, label %8720

8720:                                             ; preds = %8717
  call void @_ZdlPv(ptr noundef %8718) #22
  br label %8721

8721:                                             ; preds = %8720, %8717
  %8722 = load ptr, ptr %191, align 8, !tbaa !23
  %8723 = icmp eq ptr %8722, %8553
  br i1 %8723, label %8725, label %8724

8724:                                             ; preds = %8721
  call void @_ZdlPv(ptr noundef %8722) #22
  br label %8725

8725:                                             ; preds = %8724, %8721
  %8726 = load ptr, ptr %190, align 8, !tbaa !23
  %8727 = icmp eq ptr %8726, %8545
  br i1 %8727, label %8729, label %8728

8728:                                             ; preds = %8725
  call void @_ZdlPv(ptr noundef %8726) #22
  br label %8729

8729:                                             ; preds = %8728, %8725
  %8730 = load ptr, ptr %189, align 8, !tbaa !23
  %8731 = icmp eq ptr %8730, %8536
  br i1 %8731, label %8733, label %8732

8732:                                             ; preds = %8729
  call void @_ZdlPv(ptr noundef %8730) #22
  br label %8733

8733:                                             ; preds = %8732, %8729
  %8734 = load ptr, ptr %188, align 8, !tbaa !23
  %8735 = icmp eq ptr %8734, %8527
  br i1 %8735, label %8737, label %8736

8736:                                             ; preds = %8733
  call void @_ZdlPv(ptr noundef %8734) #22
  br label %8737

8737:                                             ; preds = %8736, %8733
  %8738 = load ptr, ptr %187, align 8, !tbaa !23
  %8739 = icmp eq ptr %8738, %8520
  br i1 %8739, label %9528, label %8740

8740:                                             ; preds = %8737
  call void @_ZdlPv(ptr noundef %8738) #22
  br label %9528

8741:                                             ; preds = %8519
  %8742 = landingpad { ptr, i32 }
          cleanup
  br label %9474

8743:                                             ; preds = %8525
  %8744 = landingpad { ptr, i32 }
          cleanup
  br label %9474

8745:                                             ; preds = %8529
  %8746 = landingpad { ptr, i32 }
          cleanup
  br label %9467

8747:                                             ; preds = %8534
  %8748 = landingpad { ptr, i32 }
          cleanup
  br label %9467

8749:                                             ; preds = %8538
  %8750 = landingpad { ptr, i32 }
          cleanup
  br label %9460

8751:                                             ; preds = %8543
  %8752 = landingpad { ptr, i32 }
          cleanup
  br label %9460

8753:                                             ; preds = %8547
  %8754 = landingpad { ptr, i32 }
          cleanup
  br label %9453

8755:                                             ; preds = %8551
  %8756 = landingpad { ptr, i32 }
          cleanup
  br label %9453

8757:                                             ; preds = %8555
  %8758 = landingpad { ptr, i32 }
          cleanup
  br label %9446

8759:                                             ; preds = %8560
  %8760 = landingpad { ptr, i32 }
          cleanup
  br label %9446

8761:                                             ; preds = %8564
  %8762 = landingpad { ptr, i32 }
          cleanup
  br label %9439

8763:                                             ; preds = %8569
  %8764 = landingpad { ptr, i32 }
          cleanup
  br label %9439

8765:                                             ; preds = %8573
  %8766 = landingpad { ptr, i32 }
          cleanup
  br label %9432

8767:                                             ; preds = %8578
  %8768 = landingpad { ptr, i32 }
          cleanup
  br label %9425

8769:                                             ; preds = %8583
  %8770 = landingpad { ptr, i32 }
          cleanup
  br label %9425

8771:                                             ; preds = %8587
  %8772 = landingpad { ptr, i32 }
          cleanup
  br label %9418

8773:                                             ; preds = %8592
  %8774 = landingpad { ptr, i32 }
          cleanup
  br label %9418

8775:                                             ; preds = %8596
  %8776 = landingpad { ptr, i32 }
          cleanup
  br label %9411

8777:                                             ; preds = %8601
  %8778 = landingpad { ptr, i32 }
          cleanup
  br label %9411

8779:                                             ; preds = %8605
  %8780 = landingpad { ptr, i32 }
          cleanup
  br label %9404

8781:                                             ; preds = %8610
  %8782 = landingpad { ptr, i32 }
          cleanup
  br label %9404

8783:                                             ; preds = %8614
  %8784 = landingpad { ptr, i32 }
          cleanup
  br label %9397

8785:                                             ; preds = %8619
  %8786 = landingpad { ptr, i32 }
          cleanup
  br label %9390

8787:                                             ; preds = %8624
  %8788 = landingpad { ptr, i32 }
          cleanup
  br label %9383

8789:                                             ; preds = %8629
  %8790 = landingpad { ptr, i32 }
          cleanup
  br label %9377

8791:                                             ; preds = %8634
  %8792 = landingpad { ptr, i32 }
          cleanup
  %8793 = getelementptr inbounds %struct.TestCase, ptr %186, i64 14, i32 3, i32 0, i32 1
  %8794 = load ptr, ptr %8793, align 8, !tbaa !88
  %8795 = icmp eq ptr %8794, null
  br i1 %8795, label %8820, label %8796

8796:                                             ; preds = %8791
  %8797 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8794, i64 0, i32 1
  %8798 = load atomic i64, ptr %8797 acquire, align 8
  %8799 = icmp eq i64 %8798, 4294967297
  %8800 = trunc i64 %8798 to i32
  br i1 %8799, label %8801, label %8809

8801:                                             ; preds = %8796
  store i32 0, ptr %8797, align 8, !tbaa !90
  %8802 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8794, i64 0, i32 2
  store i32 0, ptr %8802, align 4, !tbaa !92
  %8803 = load ptr, ptr %8794, align 8, !tbaa !58
  %8804 = getelementptr inbounds ptr, ptr %8803, i64 2
  %8805 = load ptr, ptr %8804, align 8
  call void %8805(ptr noundef nonnull align 8 dereferenceable(16) %8794) #21
  %8806 = load ptr, ptr %8794, align 8, !tbaa !58
  %8807 = getelementptr inbounds ptr, ptr %8806, i64 3
  %8808 = load ptr, ptr %8807, align 8
  call void %8808(ptr noundef nonnull align 8 dereferenceable(16) %8794) #21
  br label %8820

8809:                                             ; preds = %8796
  %8810 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %8811 = icmp eq i8 %8810, 0
  br i1 %8811, label %8814, label %8812

8812:                                             ; preds = %8809
  %8813 = add nsw i32 %8800, -1
  store i32 %8813, ptr %8797, align 8, !tbaa !73
  br label %8816

8814:                                             ; preds = %8809
  %8815 = atomicrmw volatile add ptr %8797, i32 -1 acq_rel, align 4
  br label %8816

8816:                                             ; preds = %8814, %8812
  %8817 = phi i32 [ %8800, %8812 ], [ %8815, %8814 ]
  %8818 = icmp eq i32 %8817, 1
  br i1 %8818, label %8819, label %8820, !prof !42

8819:                                             ; preds = %8816
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %8794) #21
  br label %8820

8820:                                             ; preds = %8819, %8816, %8801, %8791
  %8821 = getelementptr inbounds %struct.TestCase, ptr %186, i64 14, i32 2
  %8822 = load ptr, ptr %8821, align 8, !tbaa !23
  %8823 = getelementptr inbounds %struct.TestCase, ptr %186, i64 14, i32 2, i32 2
  %8824 = icmp eq ptr %8822, %8823
  br i1 %8824, label %8826, label %8825

8825:                                             ; preds = %8820
  call void @_ZdlPv(ptr noundef %8822) #22
  br label %8826

8826:                                             ; preds = %8825, %8820
  %8827 = load ptr, ptr %8630, align 8, !tbaa !23
  %8828 = getelementptr inbounds %struct.TestCase, ptr %186, i64 14, i32 0, i32 2
  %8829 = icmp eq ptr %8827, %8828
  br i1 %8829, label %8831, label %8830

8830:                                             ; preds = %8826
  call void @_ZdlPv(ptr noundef %8827) #22
  br label %8831

8831:                                             ; preds = %8826, %8830
  %8832 = getelementptr inbounds %struct.TestCase, ptr %186, i64 13, i32 3, i32 0, i32 1
  %8833 = load ptr, ptr %8832, align 8, !tbaa !88
  %8834 = icmp eq ptr %8833, null
  br i1 %8834, label %8859, label %8835

8835:                                             ; preds = %8831
  %8836 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8833, i64 0, i32 1
  %8837 = load atomic i64, ptr %8836 acquire, align 8
  %8838 = icmp eq i64 %8837, 4294967297
  %8839 = trunc i64 %8837 to i32
  br i1 %8838, label %8840, label %8848

8840:                                             ; preds = %8835
  store i32 0, ptr %8836, align 8, !tbaa !90
  %8841 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8833, i64 0, i32 2
  store i32 0, ptr %8841, align 4, !tbaa !92
  %8842 = load ptr, ptr %8833, align 8, !tbaa !58
  %8843 = getelementptr inbounds ptr, ptr %8842, i64 2
  %8844 = load ptr, ptr %8843, align 8
  call void %8844(ptr noundef nonnull align 8 dereferenceable(16) %8833) #21
  %8845 = load ptr, ptr %8833, align 8, !tbaa !58
  %8846 = getelementptr inbounds ptr, ptr %8845, i64 3
  %8847 = load ptr, ptr %8846, align 8
  call void %8847(ptr noundef nonnull align 8 dereferenceable(16) %8833) #21
  br label %8859

8848:                                             ; preds = %8835
  %8849 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %8850 = icmp eq i8 %8849, 0
  br i1 %8850, label %8853, label %8851

8851:                                             ; preds = %8848
  %8852 = add nsw i32 %8839, -1
  store i32 %8852, ptr %8836, align 8, !tbaa !73
  br label %8855

8853:                                             ; preds = %8848
  %8854 = atomicrmw volatile add ptr %8836, i32 -1 acq_rel, align 4
  br label %8855

8855:                                             ; preds = %8853, %8851
  %8856 = phi i32 [ %8839, %8851 ], [ %8854, %8853 ]
  %8857 = icmp eq i32 %8856, 1
  br i1 %8857, label %8858, label %8859, !prof !42

8858:                                             ; preds = %8855
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %8833) #21
  br label %8859

8859:                                             ; preds = %8858, %8855, %8840, %8831
  %8860 = getelementptr inbounds %struct.TestCase, ptr %186, i64 13, i32 2
  %8861 = load ptr, ptr %8860, align 8, !tbaa !23
  %8862 = getelementptr inbounds %struct.TestCase, ptr %186, i64 13, i32 2, i32 2
  %8863 = icmp eq ptr %8861, %8862
  br i1 %8863, label %8865, label %8864

8864:                                             ; preds = %8859
  call void @_ZdlPv(ptr noundef %8861) #22
  br label %8865

8865:                                             ; preds = %8864, %8859
  %8866 = load ptr, ptr %8625, align 8, !tbaa !23
  %8867 = getelementptr inbounds %struct.TestCase, ptr %186, i64 13, i32 0, i32 2
  %8868 = icmp eq ptr %8866, %8867
  br i1 %8868, label %8870, label %8869

8869:                                             ; preds = %8865
  call void @_ZdlPv(ptr noundef %8866) #22
  br label %8870

8870:                                             ; preds = %8865, %8869
  %8871 = getelementptr inbounds %struct.TestCase, ptr %186, i64 12, i32 3, i32 0, i32 1
  %8872 = load ptr, ptr %8871, align 8, !tbaa !88
  %8873 = icmp eq ptr %8872, null
  br i1 %8873, label %8898, label %8874

8874:                                             ; preds = %8870
  %8875 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8872, i64 0, i32 1
  %8876 = load atomic i64, ptr %8875 acquire, align 8
  %8877 = icmp eq i64 %8876, 4294967297
  %8878 = trunc i64 %8876 to i32
  br i1 %8877, label %8879, label %8887

8879:                                             ; preds = %8874
  store i32 0, ptr %8875, align 8, !tbaa !90
  %8880 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8872, i64 0, i32 2
  store i32 0, ptr %8880, align 4, !tbaa !92
  %8881 = load ptr, ptr %8872, align 8, !tbaa !58
  %8882 = getelementptr inbounds ptr, ptr %8881, i64 2
  %8883 = load ptr, ptr %8882, align 8
  call void %8883(ptr noundef nonnull align 8 dereferenceable(16) %8872) #21
  %8884 = load ptr, ptr %8872, align 8, !tbaa !58
  %8885 = getelementptr inbounds ptr, ptr %8884, i64 3
  %8886 = load ptr, ptr %8885, align 8
  call void %8886(ptr noundef nonnull align 8 dereferenceable(16) %8872) #21
  br label %8898

8887:                                             ; preds = %8874
  %8888 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %8889 = icmp eq i8 %8888, 0
  br i1 %8889, label %8892, label %8890

8890:                                             ; preds = %8887
  %8891 = add nsw i32 %8878, -1
  store i32 %8891, ptr %8875, align 8, !tbaa !73
  br label %8894

8892:                                             ; preds = %8887
  %8893 = atomicrmw volatile add ptr %8875, i32 -1 acq_rel, align 4
  br label %8894

8894:                                             ; preds = %8892, %8890
  %8895 = phi i32 [ %8878, %8890 ], [ %8893, %8892 ]
  %8896 = icmp eq i32 %8895, 1
  br i1 %8896, label %8897, label %8898, !prof !42

8897:                                             ; preds = %8894
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %8872) #21
  br label %8898

8898:                                             ; preds = %8897, %8894, %8879, %8870
  %8899 = getelementptr inbounds %struct.TestCase, ptr %186, i64 12, i32 2
  %8900 = load ptr, ptr %8899, align 8, !tbaa !23
  %8901 = getelementptr inbounds %struct.TestCase, ptr %186, i64 12, i32 2, i32 2
  %8902 = icmp eq ptr %8900, %8901
  br i1 %8902, label %8904, label %8903

8903:                                             ; preds = %8898
  call void @_ZdlPv(ptr noundef %8900) #22
  br label %8904

8904:                                             ; preds = %8903, %8898
  %8905 = load ptr, ptr %8620, align 8, !tbaa !23
  %8906 = getelementptr inbounds %struct.TestCase, ptr %186, i64 12, i32 0, i32 2
  %8907 = icmp eq ptr %8905, %8906
  br i1 %8907, label %8909, label %8908

8908:                                             ; preds = %8904
  call void @_ZdlPv(ptr noundef %8905) #22
  br label %8909

8909:                                             ; preds = %8904, %8908
  %8910 = getelementptr inbounds %struct.TestCase, ptr %186, i64 11, i32 3, i32 0, i32 1
  %8911 = load ptr, ptr %8910, align 8, !tbaa !88
  %8912 = icmp eq ptr %8911, null
  br i1 %8912, label %8937, label %8913

8913:                                             ; preds = %8909
  %8914 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8911, i64 0, i32 1
  %8915 = load atomic i64, ptr %8914 acquire, align 8
  %8916 = icmp eq i64 %8915, 4294967297
  %8917 = trunc i64 %8915 to i32
  br i1 %8916, label %8918, label %8926

8918:                                             ; preds = %8913
  store i32 0, ptr %8914, align 8, !tbaa !90
  %8919 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8911, i64 0, i32 2
  store i32 0, ptr %8919, align 4, !tbaa !92
  %8920 = load ptr, ptr %8911, align 8, !tbaa !58
  %8921 = getelementptr inbounds ptr, ptr %8920, i64 2
  %8922 = load ptr, ptr %8921, align 8
  call void %8922(ptr noundef nonnull align 8 dereferenceable(16) %8911) #21
  %8923 = load ptr, ptr %8911, align 8, !tbaa !58
  %8924 = getelementptr inbounds ptr, ptr %8923, i64 3
  %8925 = load ptr, ptr %8924, align 8
  call void %8925(ptr noundef nonnull align 8 dereferenceable(16) %8911) #21
  br label %8937

8926:                                             ; preds = %8913
  %8927 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %8928 = icmp eq i8 %8927, 0
  br i1 %8928, label %8931, label %8929

8929:                                             ; preds = %8926
  %8930 = add nsw i32 %8917, -1
  store i32 %8930, ptr %8914, align 8, !tbaa !73
  br label %8933

8931:                                             ; preds = %8926
  %8932 = atomicrmw volatile add ptr %8914, i32 -1 acq_rel, align 4
  br label %8933

8933:                                             ; preds = %8931, %8929
  %8934 = phi i32 [ %8917, %8929 ], [ %8932, %8931 ]
  %8935 = icmp eq i32 %8934, 1
  br i1 %8935, label %8936, label %8937, !prof !42

8936:                                             ; preds = %8933
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %8911) #21
  br label %8937

8937:                                             ; preds = %8936, %8933, %8918, %8909
  %8938 = getelementptr inbounds %struct.TestCase, ptr %186, i64 11, i32 2
  %8939 = load ptr, ptr %8938, align 8, !tbaa !23
  %8940 = getelementptr inbounds %struct.TestCase, ptr %186, i64 11, i32 2, i32 2
  %8941 = icmp eq ptr %8939, %8940
  br i1 %8941, label %8943, label %8942

8942:                                             ; preds = %8937
  call void @_ZdlPv(ptr noundef %8939) #22
  br label %8943

8943:                                             ; preds = %8942, %8937
  %8944 = load ptr, ptr %8611, align 8, !tbaa !23
  %8945 = getelementptr inbounds %struct.TestCase, ptr %186, i64 11, i32 0, i32 2
  %8946 = icmp eq ptr %8944, %8945
  br i1 %8946, label %8948, label %8947

8947:                                             ; preds = %8943
  call void @_ZdlPv(ptr noundef %8944) #22
  br label %8948

8948:                                             ; preds = %8943, %8947
  %8949 = getelementptr inbounds %struct.TestCase, ptr %186, i64 10, i32 3, i32 0, i32 1
  %8950 = load ptr, ptr %8949, align 8, !tbaa !88
  %8951 = icmp eq ptr %8950, null
  br i1 %8951, label %8976, label %8952

8952:                                             ; preds = %8948
  %8953 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8950, i64 0, i32 1
  %8954 = load atomic i64, ptr %8953 acquire, align 8
  %8955 = icmp eq i64 %8954, 4294967297
  %8956 = trunc i64 %8954 to i32
  br i1 %8955, label %8957, label %8965

8957:                                             ; preds = %8952
  store i32 0, ptr %8953, align 8, !tbaa !90
  %8958 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8950, i64 0, i32 2
  store i32 0, ptr %8958, align 4, !tbaa !92
  %8959 = load ptr, ptr %8950, align 8, !tbaa !58
  %8960 = getelementptr inbounds ptr, ptr %8959, i64 2
  %8961 = load ptr, ptr %8960, align 8
  call void %8961(ptr noundef nonnull align 8 dereferenceable(16) %8950) #21
  %8962 = load ptr, ptr %8950, align 8, !tbaa !58
  %8963 = getelementptr inbounds ptr, ptr %8962, i64 3
  %8964 = load ptr, ptr %8963, align 8
  call void %8964(ptr noundef nonnull align 8 dereferenceable(16) %8950) #21
  br label %8976

8965:                                             ; preds = %8952
  %8966 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %8967 = icmp eq i8 %8966, 0
  br i1 %8967, label %8970, label %8968

8968:                                             ; preds = %8965
  %8969 = add nsw i32 %8956, -1
  store i32 %8969, ptr %8953, align 8, !tbaa !73
  br label %8972

8970:                                             ; preds = %8965
  %8971 = atomicrmw volatile add ptr %8953, i32 -1 acq_rel, align 4
  br label %8972

8972:                                             ; preds = %8970, %8968
  %8973 = phi i32 [ %8956, %8968 ], [ %8971, %8970 ]
  %8974 = icmp eq i32 %8973, 1
  br i1 %8974, label %8975, label %8976, !prof !42

8975:                                             ; preds = %8972
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %8950) #21
  br label %8976

8976:                                             ; preds = %8975, %8972, %8957, %8948
  %8977 = getelementptr inbounds %struct.TestCase, ptr %186, i64 10, i32 2
  %8978 = load ptr, ptr %8977, align 8, !tbaa !23
  %8979 = getelementptr inbounds %struct.TestCase, ptr %186, i64 10, i32 2, i32 2
  %8980 = icmp eq ptr %8978, %8979
  br i1 %8980, label %8982, label %8981

8981:                                             ; preds = %8976
  call void @_ZdlPv(ptr noundef %8978) #22
  br label %8982

8982:                                             ; preds = %8981, %8976
  %8983 = load ptr, ptr %8602, align 8, !tbaa !23
  %8984 = getelementptr inbounds %struct.TestCase, ptr %186, i64 10, i32 0, i32 2
  %8985 = icmp eq ptr %8983, %8984
  br i1 %8985, label %8987, label %8986

8986:                                             ; preds = %8982
  call void @_ZdlPv(ptr noundef %8983) #22
  br label %8987

8987:                                             ; preds = %8982, %8986
  %8988 = getelementptr inbounds %struct.TestCase, ptr %186, i64 9, i32 3, i32 0, i32 1
  %8989 = load ptr, ptr %8988, align 8, !tbaa !88
  %8990 = icmp eq ptr %8989, null
  br i1 %8990, label %9015, label %8991

8991:                                             ; preds = %8987
  %8992 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8989, i64 0, i32 1
  %8993 = load atomic i64, ptr %8992 acquire, align 8
  %8994 = icmp eq i64 %8993, 4294967297
  %8995 = trunc i64 %8993 to i32
  br i1 %8994, label %8996, label %9004

8996:                                             ; preds = %8991
  store i32 0, ptr %8992, align 8, !tbaa !90
  %8997 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %8989, i64 0, i32 2
  store i32 0, ptr %8997, align 4, !tbaa !92
  %8998 = load ptr, ptr %8989, align 8, !tbaa !58
  %8999 = getelementptr inbounds ptr, ptr %8998, i64 2
  %9000 = load ptr, ptr %8999, align 8
  call void %9000(ptr noundef nonnull align 8 dereferenceable(16) %8989) #21
  %9001 = load ptr, ptr %8989, align 8, !tbaa !58
  %9002 = getelementptr inbounds ptr, ptr %9001, i64 3
  %9003 = load ptr, ptr %9002, align 8
  call void %9003(ptr noundef nonnull align 8 dereferenceable(16) %8989) #21
  br label %9015

9004:                                             ; preds = %8991
  %9005 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %9006 = icmp eq i8 %9005, 0
  br i1 %9006, label %9009, label %9007

9007:                                             ; preds = %9004
  %9008 = add nsw i32 %8995, -1
  store i32 %9008, ptr %8992, align 8, !tbaa !73
  br label %9011

9009:                                             ; preds = %9004
  %9010 = atomicrmw volatile add ptr %8992, i32 -1 acq_rel, align 4
  br label %9011

9011:                                             ; preds = %9009, %9007
  %9012 = phi i32 [ %8995, %9007 ], [ %9010, %9009 ]
  %9013 = icmp eq i32 %9012, 1
  br i1 %9013, label %9014, label %9015, !prof !42

9014:                                             ; preds = %9011
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %8989) #21
  br label %9015

9015:                                             ; preds = %9014, %9011, %8996, %8987
  %9016 = getelementptr inbounds %struct.TestCase, ptr %186, i64 9, i32 2
  %9017 = load ptr, ptr %9016, align 8, !tbaa !23
  %9018 = getelementptr inbounds %struct.TestCase, ptr %186, i64 9, i32 2, i32 2
  %9019 = icmp eq ptr %9017, %9018
  br i1 %9019, label %9021, label %9020

9020:                                             ; preds = %9015
  call void @_ZdlPv(ptr noundef %9017) #22
  br label %9021

9021:                                             ; preds = %9020, %9015
  %9022 = load ptr, ptr %8593, align 8, !tbaa !23
  %9023 = getelementptr inbounds %struct.TestCase, ptr %186, i64 9, i32 0, i32 2
  %9024 = icmp eq ptr %9022, %9023
  br i1 %9024, label %9026, label %9025

9025:                                             ; preds = %9021
  call void @_ZdlPv(ptr noundef %9022) #22
  br label %9026

9026:                                             ; preds = %9021, %9025
  %9027 = getelementptr inbounds %struct.TestCase, ptr %186, i64 8, i32 3, i32 0, i32 1
  %9028 = load ptr, ptr %9027, align 8, !tbaa !88
  %9029 = icmp eq ptr %9028, null
  br i1 %9029, label %9054, label %9030

9030:                                             ; preds = %9026
  %9031 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9028, i64 0, i32 1
  %9032 = load atomic i64, ptr %9031 acquire, align 8
  %9033 = icmp eq i64 %9032, 4294967297
  %9034 = trunc i64 %9032 to i32
  br i1 %9033, label %9035, label %9043

9035:                                             ; preds = %9030
  store i32 0, ptr %9031, align 8, !tbaa !90
  %9036 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9028, i64 0, i32 2
  store i32 0, ptr %9036, align 4, !tbaa !92
  %9037 = load ptr, ptr %9028, align 8, !tbaa !58
  %9038 = getelementptr inbounds ptr, ptr %9037, i64 2
  %9039 = load ptr, ptr %9038, align 8
  call void %9039(ptr noundef nonnull align 8 dereferenceable(16) %9028) #21
  %9040 = load ptr, ptr %9028, align 8, !tbaa !58
  %9041 = getelementptr inbounds ptr, ptr %9040, i64 3
  %9042 = load ptr, ptr %9041, align 8
  call void %9042(ptr noundef nonnull align 8 dereferenceable(16) %9028) #21
  br label %9054

9043:                                             ; preds = %9030
  %9044 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %9045 = icmp eq i8 %9044, 0
  br i1 %9045, label %9048, label %9046

9046:                                             ; preds = %9043
  %9047 = add nsw i32 %9034, -1
  store i32 %9047, ptr %9031, align 8, !tbaa !73
  br label %9050

9048:                                             ; preds = %9043
  %9049 = atomicrmw volatile add ptr %9031, i32 -1 acq_rel, align 4
  br label %9050

9050:                                             ; preds = %9048, %9046
  %9051 = phi i32 [ %9034, %9046 ], [ %9049, %9048 ]
  %9052 = icmp eq i32 %9051, 1
  br i1 %9052, label %9053, label %9054, !prof !42

9053:                                             ; preds = %9050
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %9028) #21
  br label %9054

9054:                                             ; preds = %9053, %9050, %9035, %9026
  %9055 = getelementptr inbounds %struct.TestCase, ptr %186, i64 8, i32 2
  %9056 = load ptr, ptr %9055, align 8, !tbaa !23
  %9057 = getelementptr inbounds %struct.TestCase, ptr %186, i64 8, i32 2, i32 2
  %9058 = icmp eq ptr %9056, %9057
  br i1 %9058, label %9060, label %9059

9059:                                             ; preds = %9054
  call void @_ZdlPv(ptr noundef %9056) #22
  br label %9060

9060:                                             ; preds = %9059, %9054
  %9061 = load ptr, ptr %8584, align 8, !tbaa !23
  %9062 = getelementptr inbounds %struct.TestCase, ptr %186, i64 8, i32 0, i32 2
  %9063 = icmp eq ptr %9061, %9062
  br i1 %9063, label %9065, label %9064

9064:                                             ; preds = %9060
  call void @_ZdlPv(ptr noundef %9061) #22
  br label %9065

9065:                                             ; preds = %9060, %9064
  %9066 = getelementptr inbounds %struct.TestCase, ptr %186, i64 7, i32 3, i32 0, i32 1
  %9067 = load ptr, ptr %9066, align 8, !tbaa !88
  %9068 = icmp eq ptr %9067, null
  br i1 %9068, label %9093, label %9069

9069:                                             ; preds = %9065
  %9070 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9067, i64 0, i32 1
  %9071 = load atomic i64, ptr %9070 acquire, align 8
  %9072 = icmp eq i64 %9071, 4294967297
  %9073 = trunc i64 %9071 to i32
  br i1 %9072, label %9074, label %9082

9074:                                             ; preds = %9069
  store i32 0, ptr %9070, align 8, !tbaa !90
  %9075 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9067, i64 0, i32 2
  store i32 0, ptr %9075, align 4, !tbaa !92
  %9076 = load ptr, ptr %9067, align 8, !tbaa !58
  %9077 = getelementptr inbounds ptr, ptr %9076, i64 2
  %9078 = load ptr, ptr %9077, align 8
  call void %9078(ptr noundef nonnull align 8 dereferenceable(16) %9067) #21
  %9079 = load ptr, ptr %9067, align 8, !tbaa !58
  %9080 = getelementptr inbounds ptr, ptr %9079, i64 3
  %9081 = load ptr, ptr %9080, align 8
  call void %9081(ptr noundef nonnull align 8 dereferenceable(16) %9067) #21
  br label %9093

9082:                                             ; preds = %9069
  %9083 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %9084 = icmp eq i8 %9083, 0
  br i1 %9084, label %9087, label %9085

9085:                                             ; preds = %9082
  %9086 = add nsw i32 %9073, -1
  store i32 %9086, ptr %9070, align 8, !tbaa !73
  br label %9089

9087:                                             ; preds = %9082
  %9088 = atomicrmw volatile add ptr %9070, i32 -1 acq_rel, align 4
  br label %9089

9089:                                             ; preds = %9087, %9085
  %9090 = phi i32 [ %9073, %9085 ], [ %9088, %9087 ]
  %9091 = icmp eq i32 %9090, 1
  br i1 %9091, label %9092, label %9093, !prof !42

9092:                                             ; preds = %9089
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %9067) #21
  br label %9093

9093:                                             ; preds = %9092, %9089, %9074, %9065
  %9094 = getelementptr inbounds %struct.TestCase, ptr %186, i64 7, i32 2
  %9095 = load ptr, ptr %9094, align 8, !tbaa !23
  %9096 = getelementptr inbounds %struct.TestCase, ptr %186, i64 7, i32 2, i32 2
  %9097 = icmp eq ptr %9095, %9096
  br i1 %9097, label %9099, label %9098

9098:                                             ; preds = %9093
  call void @_ZdlPv(ptr noundef %9095) #22
  br label %9099

9099:                                             ; preds = %9098, %9093
  %9100 = load ptr, ptr %8579, align 8, !tbaa !23
  %9101 = getelementptr inbounds %struct.TestCase, ptr %186, i64 7, i32 0, i32 2
  %9102 = icmp eq ptr %9100, %9101
  br i1 %9102, label %9104, label %9103

9103:                                             ; preds = %9099
  call void @_ZdlPv(ptr noundef %9100) #22
  br label %9104

9104:                                             ; preds = %9099, %9103
  %9105 = getelementptr inbounds %struct.TestCase, ptr %186, i64 6, i32 3, i32 0, i32 1
  %9106 = load ptr, ptr %9105, align 8, !tbaa !88
  %9107 = icmp eq ptr %9106, null
  br i1 %9107, label %9132, label %9108

9108:                                             ; preds = %9104
  %9109 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9106, i64 0, i32 1
  %9110 = load atomic i64, ptr %9109 acquire, align 8
  %9111 = icmp eq i64 %9110, 4294967297
  %9112 = trunc i64 %9110 to i32
  br i1 %9111, label %9113, label %9121

9113:                                             ; preds = %9108
  store i32 0, ptr %9109, align 8, !tbaa !90
  %9114 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9106, i64 0, i32 2
  store i32 0, ptr %9114, align 4, !tbaa !92
  %9115 = load ptr, ptr %9106, align 8, !tbaa !58
  %9116 = getelementptr inbounds ptr, ptr %9115, i64 2
  %9117 = load ptr, ptr %9116, align 8
  call void %9117(ptr noundef nonnull align 8 dereferenceable(16) %9106) #21
  %9118 = load ptr, ptr %9106, align 8, !tbaa !58
  %9119 = getelementptr inbounds ptr, ptr %9118, i64 3
  %9120 = load ptr, ptr %9119, align 8
  call void %9120(ptr noundef nonnull align 8 dereferenceable(16) %9106) #21
  br label %9132

9121:                                             ; preds = %9108
  %9122 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %9123 = icmp eq i8 %9122, 0
  br i1 %9123, label %9126, label %9124

9124:                                             ; preds = %9121
  %9125 = add nsw i32 %9112, -1
  store i32 %9125, ptr %9109, align 8, !tbaa !73
  br label %9128

9126:                                             ; preds = %9121
  %9127 = atomicrmw volatile add ptr %9109, i32 -1 acq_rel, align 4
  br label %9128

9128:                                             ; preds = %9126, %9124
  %9129 = phi i32 [ %9112, %9124 ], [ %9127, %9126 ]
  %9130 = icmp eq i32 %9129, 1
  br i1 %9130, label %9131, label %9132, !prof !42

9131:                                             ; preds = %9128
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %9106) #21
  br label %9132

9132:                                             ; preds = %9131, %9128, %9113, %9104
  %9133 = getelementptr inbounds %struct.TestCase, ptr %186, i64 6, i32 2
  %9134 = load ptr, ptr %9133, align 8, !tbaa !23
  %9135 = getelementptr inbounds %struct.TestCase, ptr %186, i64 6, i32 2, i32 2
  %9136 = icmp eq ptr %9134, %9135
  br i1 %9136, label %9138, label %9137

9137:                                             ; preds = %9132
  call void @_ZdlPv(ptr noundef %9134) #22
  br label %9138

9138:                                             ; preds = %9137, %9132
  %9139 = load ptr, ptr %8570, align 8, !tbaa !23
  %9140 = getelementptr inbounds %struct.TestCase, ptr %186, i64 6, i32 0, i32 2
  %9141 = icmp eq ptr %9139, %9140
  br i1 %9141, label %9143, label %9142

9142:                                             ; preds = %9138
  call void @_ZdlPv(ptr noundef %9139) #22
  br label %9143

9143:                                             ; preds = %9138, %9142
  %9144 = getelementptr inbounds %struct.TestCase, ptr %186, i64 5, i32 3, i32 0, i32 1
  %9145 = load ptr, ptr %9144, align 8, !tbaa !88
  %9146 = icmp eq ptr %9145, null
  br i1 %9146, label %9171, label %9147

9147:                                             ; preds = %9143
  %9148 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9145, i64 0, i32 1
  %9149 = load atomic i64, ptr %9148 acquire, align 8
  %9150 = icmp eq i64 %9149, 4294967297
  %9151 = trunc i64 %9149 to i32
  br i1 %9150, label %9152, label %9160

9152:                                             ; preds = %9147
  store i32 0, ptr %9148, align 8, !tbaa !90
  %9153 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9145, i64 0, i32 2
  store i32 0, ptr %9153, align 4, !tbaa !92
  %9154 = load ptr, ptr %9145, align 8, !tbaa !58
  %9155 = getelementptr inbounds ptr, ptr %9154, i64 2
  %9156 = load ptr, ptr %9155, align 8
  call void %9156(ptr noundef nonnull align 8 dereferenceable(16) %9145) #21
  %9157 = load ptr, ptr %9145, align 8, !tbaa !58
  %9158 = getelementptr inbounds ptr, ptr %9157, i64 3
  %9159 = load ptr, ptr %9158, align 8
  call void %9159(ptr noundef nonnull align 8 dereferenceable(16) %9145) #21
  br label %9171

9160:                                             ; preds = %9147
  %9161 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %9162 = icmp eq i8 %9161, 0
  br i1 %9162, label %9165, label %9163

9163:                                             ; preds = %9160
  %9164 = add nsw i32 %9151, -1
  store i32 %9164, ptr %9148, align 8, !tbaa !73
  br label %9167

9165:                                             ; preds = %9160
  %9166 = atomicrmw volatile add ptr %9148, i32 -1 acq_rel, align 4
  br label %9167

9167:                                             ; preds = %9165, %9163
  %9168 = phi i32 [ %9151, %9163 ], [ %9166, %9165 ]
  %9169 = icmp eq i32 %9168, 1
  br i1 %9169, label %9170, label %9171, !prof !42

9170:                                             ; preds = %9167
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %9145) #21
  br label %9171

9171:                                             ; preds = %9170, %9167, %9152, %9143
  %9172 = getelementptr inbounds %struct.TestCase, ptr %186, i64 5, i32 2
  %9173 = load ptr, ptr %9172, align 8, !tbaa !23
  %9174 = getelementptr inbounds %struct.TestCase, ptr %186, i64 5, i32 2, i32 2
  %9175 = icmp eq ptr %9173, %9174
  br i1 %9175, label %9177, label %9176

9176:                                             ; preds = %9171
  call void @_ZdlPv(ptr noundef %9173) #22
  br label %9177

9177:                                             ; preds = %9176, %9171
  %9178 = load ptr, ptr %8561, align 8, !tbaa !23
  %9179 = getelementptr inbounds %struct.TestCase, ptr %186, i64 5, i32 0, i32 2
  %9180 = icmp eq ptr %9178, %9179
  br i1 %9180, label %9182, label %9181

9181:                                             ; preds = %9177
  call void @_ZdlPv(ptr noundef %9178) #22
  br label %9182

9182:                                             ; preds = %9177, %9181
  %9183 = getelementptr inbounds %struct.TestCase, ptr %186, i64 4, i32 3, i32 0, i32 1
  %9184 = load ptr, ptr %9183, align 8, !tbaa !88
  %9185 = icmp eq ptr %9184, null
  br i1 %9185, label %9210, label %9186

9186:                                             ; preds = %9182
  %9187 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9184, i64 0, i32 1
  %9188 = load atomic i64, ptr %9187 acquire, align 8
  %9189 = icmp eq i64 %9188, 4294967297
  %9190 = trunc i64 %9188 to i32
  br i1 %9189, label %9191, label %9199

9191:                                             ; preds = %9186
  store i32 0, ptr %9187, align 8, !tbaa !90
  %9192 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9184, i64 0, i32 2
  store i32 0, ptr %9192, align 4, !tbaa !92
  %9193 = load ptr, ptr %9184, align 8, !tbaa !58
  %9194 = getelementptr inbounds ptr, ptr %9193, i64 2
  %9195 = load ptr, ptr %9194, align 8
  call void %9195(ptr noundef nonnull align 8 dereferenceable(16) %9184) #21
  %9196 = load ptr, ptr %9184, align 8, !tbaa !58
  %9197 = getelementptr inbounds ptr, ptr %9196, i64 3
  %9198 = load ptr, ptr %9197, align 8
  call void %9198(ptr noundef nonnull align 8 dereferenceable(16) %9184) #21
  br label %9210

9199:                                             ; preds = %9186
  %9200 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %9201 = icmp eq i8 %9200, 0
  br i1 %9201, label %9204, label %9202

9202:                                             ; preds = %9199
  %9203 = add nsw i32 %9190, -1
  store i32 %9203, ptr %9187, align 8, !tbaa !73
  br label %9206

9204:                                             ; preds = %9199
  %9205 = atomicrmw volatile add ptr %9187, i32 -1 acq_rel, align 4
  br label %9206

9206:                                             ; preds = %9204, %9202
  %9207 = phi i32 [ %9190, %9202 ], [ %9205, %9204 ]
  %9208 = icmp eq i32 %9207, 1
  br i1 %9208, label %9209, label %9210, !prof !42

9209:                                             ; preds = %9206
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %9184) #21
  br label %9210

9210:                                             ; preds = %9209, %9206, %9191, %9182
  %9211 = getelementptr inbounds %struct.TestCase, ptr %186, i64 4, i32 2
  %9212 = load ptr, ptr %9211, align 8, !tbaa !23
  %9213 = getelementptr inbounds %struct.TestCase, ptr %186, i64 4, i32 2, i32 2
  %9214 = icmp eq ptr %9212, %9213
  br i1 %9214, label %9216, label %9215

9215:                                             ; preds = %9210
  call void @_ZdlPv(ptr noundef %9212) #22
  br label %9216

9216:                                             ; preds = %9215, %9210
  %9217 = load ptr, ptr %8552, align 8, !tbaa !23
  %9218 = getelementptr inbounds %struct.TestCase, ptr %186, i64 4, i32 0, i32 2
  %9219 = icmp eq ptr %9217, %9218
  br i1 %9219, label %9221, label %9220

9220:                                             ; preds = %9216
  call void @_ZdlPv(ptr noundef %9217) #22
  br label %9221

9221:                                             ; preds = %9216, %9220
  %9222 = getelementptr inbounds %struct.TestCase, ptr %186, i64 3, i32 3, i32 0, i32 1
  %9223 = load ptr, ptr %9222, align 8, !tbaa !88
  %9224 = icmp eq ptr %9223, null
  br i1 %9224, label %9249, label %9225

9225:                                             ; preds = %9221
  %9226 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9223, i64 0, i32 1
  %9227 = load atomic i64, ptr %9226 acquire, align 8
  %9228 = icmp eq i64 %9227, 4294967297
  %9229 = trunc i64 %9227 to i32
  br i1 %9228, label %9230, label %9238

9230:                                             ; preds = %9225
  store i32 0, ptr %9226, align 8, !tbaa !90
  %9231 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9223, i64 0, i32 2
  store i32 0, ptr %9231, align 4, !tbaa !92
  %9232 = load ptr, ptr %9223, align 8, !tbaa !58
  %9233 = getelementptr inbounds ptr, ptr %9232, i64 2
  %9234 = load ptr, ptr %9233, align 8
  call void %9234(ptr noundef nonnull align 8 dereferenceable(16) %9223) #21
  %9235 = load ptr, ptr %9223, align 8, !tbaa !58
  %9236 = getelementptr inbounds ptr, ptr %9235, i64 3
  %9237 = load ptr, ptr %9236, align 8
  call void %9237(ptr noundef nonnull align 8 dereferenceable(16) %9223) #21
  br label %9249

9238:                                             ; preds = %9225
  %9239 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %9240 = icmp eq i8 %9239, 0
  br i1 %9240, label %9243, label %9241

9241:                                             ; preds = %9238
  %9242 = add nsw i32 %9229, -1
  store i32 %9242, ptr %9226, align 8, !tbaa !73
  br label %9245

9243:                                             ; preds = %9238
  %9244 = atomicrmw volatile add ptr %9226, i32 -1 acq_rel, align 4
  br label %9245

9245:                                             ; preds = %9243, %9241
  %9246 = phi i32 [ %9229, %9241 ], [ %9244, %9243 ]
  %9247 = icmp eq i32 %9246, 1
  br i1 %9247, label %9248, label %9249, !prof !42

9248:                                             ; preds = %9245
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %9223) #21
  br label %9249

9249:                                             ; preds = %9248, %9245, %9230, %9221
  %9250 = getelementptr inbounds %struct.TestCase, ptr %186, i64 3, i32 2
  %9251 = load ptr, ptr %9250, align 8, !tbaa !23
  %9252 = getelementptr inbounds %struct.TestCase, ptr %186, i64 3, i32 2, i32 2
  %9253 = icmp eq ptr %9251, %9252
  br i1 %9253, label %9255, label %9254

9254:                                             ; preds = %9249
  call void @_ZdlPv(ptr noundef %9251) #22
  br label %9255

9255:                                             ; preds = %9254, %9249
  %9256 = load ptr, ptr %8544, align 8, !tbaa !23
  %9257 = getelementptr inbounds %struct.TestCase, ptr %186, i64 3, i32 0, i32 2
  %9258 = icmp eq ptr %9256, %9257
  br i1 %9258, label %9260, label %9259

9259:                                             ; preds = %9255
  call void @_ZdlPv(ptr noundef %9256) #22
  br label %9260

9260:                                             ; preds = %9255, %9259
  %9261 = getelementptr inbounds %struct.TestCase, ptr %186, i64 2, i32 3, i32 0, i32 1
  %9262 = load ptr, ptr %9261, align 8, !tbaa !88
  %9263 = icmp eq ptr %9262, null
  br i1 %9263, label %9288, label %9264

9264:                                             ; preds = %9260
  %9265 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9262, i64 0, i32 1
  %9266 = load atomic i64, ptr %9265 acquire, align 8
  %9267 = icmp eq i64 %9266, 4294967297
  %9268 = trunc i64 %9266 to i32
  br i1 %9267, label %9269, label %9277

9269:                                             ; preds = %9264
  store i32 0, ptr %9265, align 8, !tbaa !90
  %9270 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9262, i64 0, i32 2
  store i32 0, ptr %9270, align 4, !tbaa !92
  %9271 = load ptr, ptr %9262, align 8, !tbaa !58
  %9272 = getelementptr inbounds ptr, ptr %9271, i64 2
  %9273 = load ptr, ptr %9272, align 8
  call void %9273(ptr noundef nonnull align 8 dereferenceable(16) %9262) #21
  %9274 = load ptr, ptr %9262, align 8, !tbaa !58
  %9275 = getelementptr inbounds ptr, ptr %9274, i64 3
  %9276 = load ptr, ptr %9275, align 8
  call void %9276(ptr noundef nonnull align 8 dereferenceable(16) %9262) #21
  br label %9288

9277:                                             ; preds = %9264
  %9278 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %9279 = icmp eq i8 %9278, 0
  br i1 %9279, label %9282, label %9280

9280:                                             ; preds = %9277
  %9281 = add nsw i32 %9268, -1
  store i32 %9281, ptr %9265, align 8, !tbaa !73
  br label %9284

9282:                                             ; preds = %9277
  %9283 = atomicrmw volatile add ptr %9265, i32 -1 acq_rel, align 4
  br label %9284

9284:                                             ; preds = %9282, %9280
  %9285 = phi i32 [ %9268, %9280 ], [ %9283, %9282 ]
  %9286 = icmp eq i32 %9285, 1
  br i1 %9286, label %9287, label %9288, !prof !42

9287:                                             ; preds = %9284
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %9262) #21
  br label %9288

9288:                                             ; preds = %9287, %9284, %9269, %9260
  %9289 = getelementptr inbounds %struct.TestCase, ptr %186, i64 2, i32 2
  %9290 = load ptr, ptr %9289, align 8, !tbaa !23
  %9291 = getelementptr inbounds %struct.TestCase, ptr %186, i64 2, i32 2, i32 2
  %9292 = icmp eq ptr %9290, %9291
  br i1 %9292, label %9294, label %9293

9293:                                             ; preds = %9288
  call void @_ZdlPv(ptr noundef %9290) #22
  br label %9294

9294:                                             ; preds = %9293, %9288
  %9295 = load ptr, ptr %8535, align 8, !tbaa !23
  %9296 = getelementptr inbounds %struct.TestCase, ptr %186, i64 2, i32 0, i32 2
  %9297 = icmp eq ptr %9295, %9296
  br i1 %9297, label %9299, label %9298

9298:                                             ; preds = %9294
  call void @_ZdlPv(ptr noundef %9295) #22
  br label %9299

9299:                                             ; preds = %9294, %9298
  %9300 = getelementptr inbounds %struct.TestCase, ptr %186, i64 1, i32 3, i32 0, i32 1
  %9301 = load ptr, ptr %9300, align 8, !tbaa !88
  %9302 = icmp eq ptr %9301, null
  br i1 %9302, label %9327, label %9303

9303:                                             ; preds = %9299
  %9304 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9301, i64 0, i32 1
  %9305 = load atomic i64, ptr %9304 acquire, align 8
  %9306 = icmp eq i64 %9305, 4294967297
  %9307 = trunc i64 %9305 to i32
  br i1 %9306, label %9308, label %9316

9308:                                             ; preds = %9303
  store i32 0, ptr %9304, align 8, !tbaa !90
  %9309 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9301, i64 0, i32 2
  store i32 0, ptr %9309, align 4, !tbaa !92
  %9310 = load ptr, ptr %9301, align 8, !tbaa !58
  %9311 = getelementptr inbounds ptr, ptr %9310, i64 2
  %9312 = load ptr, ptr %9311, align 8
  call void %9312(ptr noundef nonnull align 8 dereferenceable(16) %9301) #21
  %9313 = load ptr, ptr %9301, align 8, !tbaa !58
  %9314 = getelementptr inbounds ptr, ptr %9313, i64 3
  %9315 = load ptr, ptr %9314, align 8
  call void %9315(ptr noundef nonnull align 8 dereferenceable(16) %9301) #21
  br label %9327

9316:                                             ; preds = %9303
  %9317 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %9318 = icmp eq i8 %9317, 0
  br i1 %9318, label %9321, label %9319

9319:                                             ; preds = %9316
  %9320 = add nsw i32 %9307, -1
  store i32 %9320, ptr %9304, align 8, !tbaa !73
  br label %9323

9321:                                             ; preds = %9316
  %9322 = atomicrmw volatile add ptr %9304, i32 -1 acq_rel, align 4
  br label %9323

9323:                                             ; preds = %9321, %9319
  %9324 = phi i32 [ %9307, %9319 ], [ %9322, %9321 ]
  %9325 = icmp eq i32 %9324, 1
  br i1 %9325, label %9326, label %9327, !prof !42

9326:                                             ; preds = %9323
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %9301) #21
  br label %9327

9327:                                             ; preds = %9326, %9323, %9308, %9299
  %9328 = getelementptr inbounds %struct.TestCase, ptr %186, i64 1, i32 2
  %9329 = load ptr, ptr %9328, align 8, !tbaa !23
  %9330 = getelementptr inbounds %struct.TestCase, ptr %186, i64 1, i32 2, i32 2
  %9331 = icmp eq ptr %9329, %9330
  br i1 %9331, label %9333, label %9332

9332:                                             ; preds = %9327
  call void @_ZdlPv(ptr noundef %9329) #22
  br label %9333

9333:                                             ; preds = %9332, %9327
  %9334 = load ptr, ptr %8526, align 8, !tbaa !23
  %9335 = getelementptr inbounds %struct.TestCase, ptr %186, i64 1, i32 0, i32 2
  %9336 = icmp eq ptr %9334, %9335
  br i1 %9336, label %9338, label %9337

9337:                                             ; preds = %9333
  call void @_ZdlPv(ptr noundef %9334) #22
  br label %9338

9338:                                             ; preds = %9333, %9337
  %9339 = getelementptr inbounds %struct.TestCase, ptr %186, i64 0, i32 3, i32 0, i32 1
  %9340 = load ptr, ptr %9339, align 8, !tbaa !88
  %9341 = icmp eq ptr %9340, null
  br i1 %9341, label %9366, label %9342

9342:                                             ; preds = %9338
  %9343 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9340, i64 0, i32 1
  %9344 = load atomic i64, ptr %9343 acquire, align 8
  %9345 = icmp eq i64 %9344, 4294967297
  %9346 = trunc i64 %9344 to i32
  br i1 %9345, label %9347, label %9355

9347:                                             ; preds = %9342
  store i32 0, ptr %9343, align 8, !tbaa !90
  %9348 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9340, i64 0, i32 2
  store i32 0, ptr %9348, align 4, !tbaa !92
  %9349 = load ptr, ptr %9340, align 8, !tbaa !58
  %9350 = getelementptr inbounds ptr, ptr %9349, i64 2
  %9351 = load ptr, ptr %9350, align 8
  call void %9351(ptr noundef nonnull align 8 dereferenceable(16) %9340) #21
  %9352 = load ptr, ptr %9340, align 8, !tbaa !58
  %9353 = getelementptr inbounds ptr, ptr %9352, i64 3
  %9354 = load ptr, ptr %9353, align 8
  call void %9354(ptr noundef nonnull align 8 dereferenceable(16) %9340) #21
  br label %9366

9355:                                             ; preds = %9342
  %9356 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %9357 = icmp eq i8 %9356, 0
  br i1 %9357, label %9360, label %9358

9358:                                             ; preds = %9355
  %9359 = add nsw i32 %9346, -1
  store i32 %9359, ptr %9343, align 8, !tbaa !73
  br label %9362

9360:                                             ; preds = %9355
  %9361 = atomicrmw volatile add ptr %9343, i32 -1 acq_rel, align 4
  br label %9362

9362:                                             ; preds = %9360, %9358
  %9363 = phi i32 [ %9346, %9358 ], [ %9361, %9360 ]
  %9364 = icmp eq i32 %9363, 1
  br i1 %9364, label %9365, label %9366, !prof !42

9365:                                             ; preds = %9362
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %9340) #21
  br label %9366

9366:                                             ; preds = %9365, %9362, %9347, %9338
  %9367 = getelementptr inbounds %struct.TestCase, ptr %186, i64 0, i32 2
  %9368 = load ptr, ptr %9367, align 8, !tbaa !23
  %9369 = getelementptr inbounds %struct.TestCase, ptr %186, i64 0, i32 2, i32 2
  %9370 = icmp eq ptr %9368, %9369
  br i1 %9370, label %9372, label %9371

9371:                                             ; preds = %9366
  call void @_ZdlPv(ptr noundef %9368) #22
  br label %9372

9372:                                             ; preds = %9371, %9366
  %9373 = load ptr, ptr %186, align 8, !tbaa !23
  %9374 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %186, i64 0, i32 2
  %9375 = icmp eq ptr %9373, %9374
  br i1 %9375, label %9377, label %9376

9376:                                             ; preds = %9372
  call void @_ZdlPv(ptr noundef %9373) #22
  br label %9377

9377:                                             ; preds = %9376, %9372, %8789
  %9378 = phi { ptr, i32 } [ %8790, %8789 ], [ %8792, %9372 ], [ %8792, %9376 ]
  %9379 = phi i1 [ true, %8789 ], [ false, %9372 ], [ false, %9376 ]
  %9380 = load ptr, ptr %201, align 8, !tbaa !23
  %9381 = icmp eq ptr %9380, %8631
  br i1 %9381, label %9383, label %9382

9382:                                             ; preds = %9377
  call void @_ZdlPv(ptr noundef %9380) #22
  br label %9383

9383:                                             ; preds = %9382, %9377, %8787
  %9384 = phi ptr [ %8625, %8787 ], [ %8630, %9382 ], [ %8630, %9377 ]
  %9385 = phi { ptr, i32 } [ %8788, %8787 ], [ %9378, %9382 ], [ %9378, %9377 ]
  %9386 = phi i1 [ true, %8787 ], [ %9379, %9382 ], [ %9379, %9377 ]
  %9387 = load ptr, ptr %200, align 8, !tbaa !23
  %9388 = icmp eq ptr %9387, %8626
  br i1 %9388, label %9390, label %9389

9389:                                             ; preds = %9383
  call void @_ZdlPv(ptr noundef %9387) #22
  br label %9390

9390:                                             ; preds = %9389, %9383, %8785
  %9391 = phi ptr [ %8620, %8785 ], [ %9384, %9389 ], [ %9384, %9383 ]
  %9392 = phi { ptr, i32 } [ %8786, %8785 ], [ %9385, %9389 ], [ %9385, %9383 ]
  %9393 = phi i1 [ true, %8785 ], [ %9386, %9389 ], [ %9386, %9383 ]
  %9394 = load ptr, ptr %199, align 8, !tbaa !23
  %9395 = icmp eq ptr %9394, %8621
  br i1 %9395, label %9397, label %9396

9396:                                             ; preds = %9390
  call void @_ZdlPv(ptr noundef %9394) #22
  br label %9397

9397:                                             ; preds = %9396, %9390, %8783
  %9398 = phi ptr [ %8611, %8783 ], [ %9391, %9396 ], [ %9391, %9390 ]
  %9399 = phi { ptr, i32 } [ %8784, %8783 ], [ %9392, %9396 ], [ %9392, %9390 ]
  %9400 = phi i1 [ true, %8783 ], [ %9393, %9396 ], [ %9393, %9390 ]
  %9401 = load ptr, ptr %198, align 8, !tbaa !23
  %9402 = icmp eq ptr %9401, %8612
  br i1 %9402, label %9404, label %9403

9403:                                             ; preds = %9397
  call void @_ZdlPv(ptr noundef %9401) #22
  br label %9404

9404:                                             ; preds = %9403, %9397, %8781, %8779
  %9405 = phi ptr [ %8602, %8779 ], [ %8611, %8781 ], [ %9398, %9397 ], [ %9398, %9403 ]
  %9406 = phi { ptr, i32 } [ %8780, %8779 ], [ %8782, %8781 ], [ %9399, %9397 ], [ %9399, %9403 ]
  %9407 = phi i1 [ true, %8779 ], [ true, %8781 ], [ %9400, %9397 ], [ %9400, %9403 ]
  %9408 = load ptr, ptr %197, align 8, !tbaa !23
  %9409 = icmp eq ptr %9408, %8603
  br i1 %9409, label %9411, label %9410

9410:                                             ; preds = %9404
  call void @_ZdlPv(ptr noundef %9408) #22
  br label %9411

9411:                                             ; preds = %9410, %9404, %8777, %8775
  %9412 = phi ptr [ %8593, %8775 ], [ %8602, %8777 ], [ %9405, %9404 ], [ %9405, %9410 ]
  %9413 = phi { ptr, i32 } [ %8776, %8775 ], [ %8778, %8777 ], [ %9406, %9404 ], [ %9406, %9410 ]
  %9414 = phi i1 [ true, %8775 ], [ true, %8777 ], [ %9407, %9404 ], [ %9407, %9410 ]
  %9415 = load ptr, ptr %196, align 8, !tbaa !23
  %9416 = icmp eq ptr %9415, %8594
  br i1 %9416, label %9418, label %9417

9417:                                             ; preds = %9411
  call void @_ZdlPv(ptr noundef %9415) #22
  br label %9418

9418:                                             ; preds = %9417, %9411, %8773, %8771
  %9419 = phi ptr [ %8584, %8771 ], [ %8593, %8773 ], [ %9412, %9411 ], [ %9412, %9417 ]
  %9420 = phi { ptr, i32 } [ %8772, %8771 ], [ %8774, %8773 ], [ %9413, %9411 ], [ %9413, %9417 ]
  %9421 = phi i1 [ true, %8771 ], [ true, %8773 ], [ %9414, %9411 ], [ %9414, %9417 ]
  %9422 = load ptr, ptr %195, align 8, !tbaa !23
  %9423 = icmp eq ptr %9422, %8585
  br i1 %9423, label %9425, label %9424

9424:                                             ; preds = %9418
  call void @_ZdlPv(ptr noundef %9422) #22
  br label %9425

9425:                                             ; preds = %9424, %9418, %8769, %8767
  %9426 = phi ptr [ %8579, %8767 ], [ %8584, %8769 ], [ %9419, %9418 ], [ %9419, %9424 ]
  %9427 = phi { ptr, i32 } [ %8768, %8767 ], [ %8770, %8769 ], [ %9420, %9418 ], [ %9420, %9424 ]
  %9428 = phi i1 [ true, %8767 ], [ true, %8769 ], [ %9421, %9418 ], [ %9421, %9424 ]
  %9429 = load ptr, ptr %194, align 8, !tbaa !23
  %9430 = icmp eq ptr %9429, %8580
  br i1 %9430, label %9432, label %9431

9431:                                             ; preds = %9425
  call void @_ZdlPv(ptr noundef %9429) #22
  br label %9432

9432:                                             ; preds = %9431, %9425, %8765
  %9433 = phi ptr [ %8570, %8765 ], [ %9426, %9431 ], [ %9426, %9425 ]
  %9434 = phi { ptr, i32 } [ %8766, %8765 ], [ %9427, %9431 ], [ %9427, %9425 ]
  %9435 = phi i1 [ true, %8765 ], [ %9428, %9431 ], [ %9428, %9425 ]
  %9436 = load ptr, ptr %193, align 8, !tbaa !23
  %9437 = icmp eq ptr %9436, %8571
  br i1 %9437, label %9439, label %9438

9438:                                             ; preds = %9432
  call void @_ZdlPv(ptr noundef %9436) #22
  br label %9439

9439:                                             ; preds = %9438, %9432, %8763, %8761
  %9440 = phi ptr [ %8561, %8761 ], [ %8570, %8763 ], [ %9433, %9432 ], [ %9433, %9438 ]
  %9441 = phi { ptr, i32 } [ %8762, %8761 ], [ %8764, %8763 ], [ %9434, %9432 ], [ %9434, %9438 ]
  %9442 = phi i1 [ true, %8761 ], [ true, %8763 ], [ %9435, %9432 ], [ %9435, %9438 ]
  %9443 = load ptr, ptr %192, align 8, !tbaa !23
  %9444 = icmp eq ptr %9443, %8562
  br i1 %9444, label %9446, label %9445

9445:                                             ; preds = %9439
  call void @_ZdlPv(ptr noundef %9443) #22
  br label %9446

9446:                                             ; preds = %9445, %9439, %8759, %8757
  %9447 = phi ptr [ %8552, %8757 ], [ %8561, %8759 ], [ %9440, %9439 ], [ %9440, %9445 ]
  %9448 = phi { ptr, i32 } [ %8758, %8757 ], [ %8760, %8759 ], [ %9441, %9439 ], [ %9441, %9445 ]
  %9449 = phi i1 [ true, %8757 ], [ true, %8759 ], [ %9442, %9439 ], [ %9442, %9445 ]
  %9450 = load ptr, ptr %191, align 8, !tbaa !23
  %9451 = icmp eq ptr %9450, %8553
  br i1 %9451, label %9453, label %9452

9452:                                             ; preds = %9446
  call void @_ZdlPv(ptr noundef %9450) #22
  br label %9453

9453:                                             ; preds = %9452, %9446, %8755, %8753
  %9454 = phi ptr [ %8544, %8753 ], [ %8552, %8755 ], [ %9447, %9446 ], [ %9447, %9452 ]
  %9455 = phi { ptr, i32 } [ %8754, %8753 ], [ %8756, %8755 ], [ %9448, %9446 ], [ %9448, %9452 ]
  %9456 = phi i1 [ true, %8753 ], [ true, %8755 ], [ %9449, %9446 ], [ %9449, %9452 ]
  %9457 = load ptr, ptr %190, align 8, !tbaa !23
  %9458 = icmp eq ptr %9457, %8545
  br i1 %9458, label %9460, label %9459

9459:                                             ; preds = %9453
  call void @_ZdlPv(ptr noundef %9457) #22
  br label %9460

9460:                                             ; preds = %9459, %9453, %8751, %8749
  %9461 = phi ptr [ %8535, %8749 ], [ %8544, %8751 ], [ %9454, %9453 ], [ %9454, %9459 ]
  %9462 = phi { ptr, i32 } [ %8750, %8749 ], [ %8752, %8751 ], [ %9455, %9453 ], [ %9455, %9459 ]
  %9463 = phi i1 [ true, %8749 ], [ true, %8751 ], [ %9456, %9453 ], [ %9456, %9459 ]
  %9464 = load ptr, ptr %189, align 8, !tbaa !23
  %9465 = icmp eq ptr %9464, %8536
  br i1 %9465, label %9467, label %9466

9466:                                             ; preds = %9460
  call void @_ZdlPv(ptr noundef %9464) #22
  br label %9467

9467:                                             ; preds = %9466, %9460, %8747, %8745
  %9468 = phi ptr [ %8526, %8745 ], [ %8535, %8747 ], [ %9461, %9460 ], [ %9461, %9466 ]
  %9469 = phi { ptr, i32 } [ %8746, %8745 ], [ %8748, %8747 ], [ %9462, %9460 ], [ %9462, %9466 ]
  %9470 = phi i1 [ true, %8745 ], [ true, %8747 ], [ %9463, %9460 ], [ %9463, %9466 ]
  %9471 = load ptr, ptr %188, align 8, !tbaa !23
  %9472 = icmp eq ptr %9471, %8527
  br i1 %9472, label %9474, label %9473

9473:                                             ; preds = %9467
  call void @_ZdlPv(ptr noundef %9471) #22
  br label %9474

9474:                                             ; preds = %9473, %9467, %8743, %8741
  %9475 = phi ptr [ %186, %8741 ], [ %8526, %8743 ], [ %9468, %9467 ], [ %9468, %9473 ]
  %9476 = phi { ptr, i32 } [ %8742, %8741 ], [ %8744, %8743 ], [ %9469, %9467 ], [ %9469, %9473 ]
  %9477 = phi i1 [ true, %8741 ], [ true, %8743 ], [ %9470, %9467 ], [ %9470, %9473 ]
  %9478 = load ptr, ptr %187, align 8, !tbaa !23
  %9479 = icmp eq ptr %9478, %8520
  br i1 %9479, label %9481, label %9480

9480:                                             ; preds = %9474
  call void @_ZdlPv(ptr noundef %9478) #22
  br label %9481

9481:                                             ; preds = %9480, %9474
  %9482 = icmp ne ptr %186, %9475
  %9483 = select i1 %9477, i1 %9482, i1 false
  br i1 %9483, label %9484, label %9527

9484:                                             ; preds = %9481, %9525
  %9485 = phi ptr [ %9486, %9525 ], [ %9475, %9481 ]
  %9486 = getelementptr inbounds %struct.TestCase, ptr %9485, i64 -1
  %9487 = getelementptr %struct.TestCase, ptr %9485, i64 -1, i32 3, i32 0, i32 1
  %9488 = load ptr, ptr %9487, align 8, !tbaa !88
  %9489 = icmp eq ptr %9488, null
  br i1 %9489, label %9514, label %9490

9490:                                             ; preds = %9484
  %9491 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9488, i64 0, i32 1
  %9492 = load atomic i64, ptr %9491 acquire, align 8
  %9493 = icmp eq i64 %9492, 4294967297
  %9494 = trunc i64 %9492 to i32
  br i1 %9493, label %9495, label %9503

9495:                                             ; preds = %9490
  store i32 0, ptr %9491, align 8, !tbaa !90
  %9496 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9488, i64 0, i32 2
  store i32 0, ptr %9496, align 4, !tbaa !92
  %9497 = load ptr, ptr %9488, align 8, !tbaa !58
  %9498 = getelementptr inbounds ptr, ptr %9497, i64 2
  %9499 = load ptr, ptr %9498, align 8
  call void %9499(ptr noundef nonnull align 8 dereferenceable(16) %9488) #21
  %9500 = load ptr, ptr %9488, align 8, !tbaa !58
  %9501 = getelementptr inbounds ptr, ptr %9500, i64 3
  %9502 = load ptr, ptr %9501, align 8
  call void %9502(ptr noundef nonnull align 8 dereferenceable(16) %9488) #21
  br label %9514

9503:                                             ; preds = %9490
  %9504 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %9505 = icmp eq i8 %9504, 0
  br i1 %9505, label %9508, label %9506

9506:                                             ; preds = %9503
  %9507 = add nsw i32 %9494, -1
  store i32 %9507, ptr %9491, align 8, !tbaa !73
  br label %9510

9508:                                             ; preds = %9503
  %9509 = atomicrmw volatile add ptr %9491, i32 -1 acq_rel, align 4
  br label %9510

9510:                                             ; preds = %9508, %9506
  %9511 = phi i32 [ %9494, %9506 ], [ %9509, %9508 ]
  %9512 = icmp eq i32 %9511, 1
  br i1 %9512, label %9513, label %9514, !prof !42

9513:                                             ; preds = %9510
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %9488) #21
  br label %9514

9514:                                             ; preds = %9513, %9510, %9495, %9484
  %9515 = getelementptr %struct.TestCase, ptr %9485, i64 -1, i32 2
  %9516 = load ptr, ptr %9515, align 8, !tbaa !23
  %9517 = getelementptr %struct.TestCase, ptr %9485, i64 -1, i32 2, i32 2
  %9518 = icmp eq ptr %9516, %9517
  br i1 %9518, label %9520, label %9519

9519:                                             ; preds = %9514
  call void @_ZdlPv(ptr noundef %9516) #22
  br label %9520

9520:                                             ; preds = %9519, %9514
  %9521 = load ptr, ptr %9486, align 8, !tbaa !23
  %9522 = getelementptr %struct.TestCase, ptr %9485, i64 -1, i32 0, i32 2
  %9523 = icmp eq ptr %9521, %9522
  br i1 %9523, label %9525, label %9524

9524:                                             ; preds = %9520
  call void @_ZdlPv(ptr noundef %9521) #22
  br label %9525

9525:                                             ; preds = %9520, %9524
  %9526 = icmp eq ptr %9486, %186
  br i1 %9526, label %9527, label %9484

9527:                                             ; preds = %9525, %9481
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %186) #21
  br label %762

9528:                                             ; preds = %8737, %8740
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %186) #21
  store i32 %8635, ptr @dummy313, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %187)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %188)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %189)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %190)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %191)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %192)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %193)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %194)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %195)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %196)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %197)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %198)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %199)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %200)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %201)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %174)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %173) #21
  %9529 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %174, i64 0, i32 2
  store ptr %9529, ptr %174, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %172) #21
  store i64 65, ptr %172, align 8, !tbaa !74
  %9530 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %174, ptr noundef nonnull align 8 dereferenceable(8) %172, i64 noundef 0)
  store ptr %9530, ptr %174, align 8, !tbaa !23
  %9531 = load i64, ptr %172, align 8, !tbaa !74
  store i64 %9531, ptr %9529, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(65) %9530, ptr noundef nonnull align 1 dereferenceable(65) @.str.130, i64 65, i1 false)
  %9532 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %174, i64 0, i32 1
  store i64 %9531, ptr %9532, align 8, !tbaa !10
  %9533 = getelementptr inbounds i8, ptr %9530, i64 %9531
  store i8 0, ptr %9533, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %172) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %173, ptr noundef nonnull %174, i32 noundef 0)
          to label %9534 unwind label %9579

9534:                                             ; preds = %9528
  %9535 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 4, ptr nonnull %173, i64 1)
          to label %9536 unwind label %9581

9536:                                             ; preds = %9534
  %9537 = getelementptr inbounds %struct.TestCase, ptr %173, i64 0, i32 3, i32 0, i32 1
  %9538 = load ptr, ptr %9537, align 8, !tbaa !88
  %9539 = icmp eq ptr %9538, null
  br i1 %9539, label %9564, label %9540

9540:                                             ; preds = %9536
  %9541 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9538, i64 0, i32 1
  %9542 = load atomic i64, ptr %9541 acquire, align 8
  %9543 = icmp eq i64 %9542, 4294967297
  %9544 = trunc i64 %9542 to i32
  br i1 %9543, label %9545, label %9553

9545:                                             ; preds = %9540
  store i32 0, ptr %9541, align 8, !tbaa !90
  %9546 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9538, i64 0, i32 2
  store i32 0, ptr %9546, align 4, !tbaa !92
  %9547 = load ptr, ptr %9538, align 8, !tbaa !58
  %9548 = getelementptr inbounds ptr, ptr %9547, i64 2
  %9549 = load ptr, ptr %9548, align 8
  call void %9549(ptr noundef nonnull align 8 dereferenceable(16) %9538) #21
  %9550 = load ptr, ptr %9538, align 8, !tbaa !58
  %9551 = getelementptr inbounds ptr, ptr %9550, i64 3
  %9552 = load ptr, ptr %9551, align 8
  call void %9552(ptr noundef nonnull align 8 dereferenceable(16) %9538) #21
  br label %9564

9553:                                             ; preds = %9540
  %9554 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %9555 = icmp eq i8 %9554, 0
  br i1 %9555, label %9558, label %9556

9556:                                             ; preds = %9553
  %9557 = add nsw i32 %9544, -1
  store i32 %9557, ptr %9541, align 8, !tbaa !73
  br label %9560

9558:                                             ; preds = %9553
  %9559 = atomicrmw volatile add ptr %9541, i32 -1 acq_rel, align 4
  br label %9560

9560:                                             ; preds = %9558, %9556
  %9561 = phi i32 [ %9544, %9556 ], [ %9559, %9558 ]
  %9562 = icmp eq i32 %9561, 1
  br i1 %9562, label %9563, label %9564, !prof !42

9563:                                             ; preds = %9560
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %9538) #21
  br label %9564

9564:                                             ; preds = %9563, %9560, %9545, %9536
  %9565 = getelementptr inbounds %struct.TestCase, ptr %173, i64 0, i32 2
  %9566 = load ptr, ptr %9565, align 8, !tbaa !23
  %9567 = getelementptr inbounds %struct.TestCase, ptr %173, i64 0, i32 2, i32 2
  %9568 = icmp eq ptr %9566, %9567
  br i1 %9568, label %9570, label %9569

9569:                                             ; preds = %9564
  call void @_ZdlPv(ptr noundef %9566) #22
  br label %9570

9570:                                             ; preds = %9569, %9564
  %9571 = load ptr, ptr %173, align 8, !tbaa !23
  %9572 = getelementptr inbounds %struct.TestCase, ptr %173, i64 0, i32 0, i32 2
  %9573 = icmp eq ptr %9571, %9572
  br i1 %9573, label %9575, label %9574

9574:                                             ; preds = %9570
  call void @_ZdlPv(ptr noundef %9571) #22
  br label %9575

9575:                                             ; preds = %9574, %9570
  %9576 = load ptr, ptr %174, align 8, !tbaa !23
  %9577 = icmp eq ptr %9576, %9529
  br i1 %9577, label %9627, label %9578

9578:                                             ; preds = %9575
  call void @_ZdlPv(ptr noundef %9576) #22
  br label %9627

9579:                                             ; preds = %9528
  %9580 = landingpad { ptr, i32 }
          cleanup
  br label %9621

9581:                                             ; preds = %9534
  %9582 = landingpad { ptr, i32 }
          cleanup
  %9583 = getelementptr inbounds %struct.TestCase, ptr %173, i64 0, i32 3, i32 0, i32 1
  %9584 = load ptr, ptr %9583, align 8, !tbaa !88
  %9585 = icmp eq ptr %9584, null
  br i1 %9585, label %9610, label %9586

9586:                                             ; preds = %9581
  %9587 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9584, i64 0, i32 1
  %9588 = load atomic i64, ptr %9587 acquire, align 8
  %9589 = icmp eq i64 %9588, 4294967297
  %9590 = trunc i64 %9588 to i32
  br i1 %9589, label %9591, label %9599

9591:                                             ; preds = %9586
  store i32 0, ptr %9587, align 8, !tbaa !90
  %9592 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9584, i64 0, i32 2
  store i32 0, ptr %9592, align 4, !tbaa !92
  %9593 = load ptr, ptr %9584, align 8, !tbaa !58
  %9594 = getelementptr inbounds ptr, ptr %9593, i64 2
  %9595 = load ptr, ptr %9594, align 8
  call void %9595(ptr noundef nonnull align 8 dereferenceable(16) %9584) #21
  %9596 = load ptr, ptr %9584, align 8, !tbaa !58
  %9597 = getelementptr inbounds ptr, ptr %9596, i64 3
  %9598 = load ptr, ptr %9597, align 8
  call void %9598(ptr noundef nonnull align 8 dereferenceable(16) %9584) #21
  br label %9610

9599:                                             ; preds = %9586
  %9600 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %9601 = icmp eq i8 %9600, 0
  br i1 %9601, label %9604, label %9602

9602:                                             ; preds = %9599
  %9603 = add nsw i32 %9590, -1
  store i32 %9603, ptr %9587, align 8, !tbaa !73
  br label %9606

9604:                                             ; preds = %9599
  %9605 = atomicrmw volatile add ptr %9587, i32 -1 acq_rel, align 4
  br label %9606

9606:                                             ; preds = %9604, %9602
  %9607 = phi i32 [ %9590, %9602 ], [ %9605, %9604 ]
  %9608 = icmp eq i32 %9607, 1
  br i1 %9608, label %9609, label %9610, !prof !42

9609:                                             ; preds = %9606
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %9584) #21
  br label %9610

9610:                                             ; preds = %9609, %9606, %9591, %9581
  %9611 = getelementptr inbounds %struct.TestCase, ptr %173, i64 0, i32 2
  %9612 = load ptr, ptr %9611, align 8, !tbaa !23
  %9613 = getelementptr inbounds %struct.TestCase, ptr %173, i64 0, i32 2, i32 2
  %9614 = icmp eq ptr %9612, %9613
  br i1 %9614, label %9616, label %9615

9615:                                             ; preds = %9610
  call void @_ZdlPv(ptr noundef %9612) #22
  br label %9616

9616:                                             ; preds = %9615, %9610
  %9617 = load ptr, ptr %173, align 8, !tbaa !23
  %9618 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %173, i64 0, i32 2
  %9619 = icmp eq ptr %9617, %9618
  br i1 %9619, label %9621, label %9620

9620:                                             ; preds = %9616
  call void @_ZdlPv(ptr noundef %9617) #22
  br label %9621

9621:                                             ; preds = %9620, %9616, %9579
  %9622 = phi { ptr, i32 } [ %9580, %9579 ], [ %9582, %9616 ], [ %9582, %9620 ]
  %9623 = load ptr, ptr %174, align 8, !tbaa !23
  %9624 = icmp eq ptr %9623, %9529
  br i1 %9624, label %9626, label %9625

9625:                                             ; preds = %9621
  call void @_ZdlPv(ptr noundef %9623) #22
  br label %9626

9626:                                             ; preds = %9625, %9621
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %173) #21
  br label %762

9627:                                             ; preds = %9575, %9578
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %173) #21
  store i32 %9535, ptr @dummy316, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %174)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %171) #21
  %9628 = getelementptr inbounds i8, ptr %171, i64 8
  store i64 0, ptr %9628, align 8
  %9629 = getelementptr inbounds %"class.std::function", ptr %171, i64 0, i32 1
  %9630 = getelementptr inbounds %"class.std::_Function_base", ptr %171, i64 0, i32 1
  store ptr @_Z15CheckAvgThreadsRK7Results, ptr %171, align 8, !tbaa !47
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E9_M_invokeERKSt9_Any_dataS2_, ptr %9629, align 8, !tbaa !115
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, ptr %9630, align 8, !tbaa !118
  %9631 = invoke noundef i64 @_Z10AddCheckerPKcRKSt8functionIFvRK7ResultsEE(ptr noundef nonnull @.str.133, ptr noundef nonnull align 8 dereferenceable(32) %171)
          to label %9632 unwind label %9640

9632:                                             ; preds = %9627
  %9633 = load ptr, ptr %9630, align 8, !tbaa !118
  %9634 = icmp eq ptr %9633, null
  br i1 %9634, label %9650, label %9635

9635:                                             ; preds = %9632
  %9636 = invoke noundef zeroext i1 %9633(ptr noundef nonnull align 8 dereferenceable(16) %171, ptr noundef nonnull align 8 dereferenceable(16) %171, i32 noundef 3)
          to label %9650 unwind label %9637

9637:                                             ; preds = %9635
  %9638 = landingpad { ptr, i32 }
          catch ptr null
  %9639 = extractvalue { ptr, i32 } %9638, 0
  call void @__clang_call_terminate(ptr %9639) #24
  unreachable

9640:                                             ; preds = %9627
  %9641 = landingpad { ptr, i32 }
          cleanup
  %9642 = load ptr, ptr %9630, align 8, !tbaa !118
  %9643 = icmp eq ptr %9642, null
  br i1 %9643, label %9649, label %9644

9644:                                             ; preds = %9640
  %9645 = invoke noundef zeroext i1 %9642(ptr noundef nonnull align 8 dereferenceable(16) %171, ptr noundef nonnull align 8 dereferenceable(16) %171, i32 noundef 3)
          to label %9649 unwind label %9646

9646:                                             ; preds = %9644
  %9647 = landingpad { ptr, i32 }
          catch ptr null
  %9648 = extractvalue { ptr, i32 } %9647, 0
  call void @__clang_call_terminate(ptr %9648) #24
  unreachable

9649:                                             ; preds = %9644, %9640
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %171) #21
  br label %762

9650:                                             ; preds = %9632, %9635
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %171) #21
  store i64 %9631, ptr @dummy324, align 8, !tbaa !74
  %9651 = call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #25
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %9651, ptr noundef nonnull @.str.135)
          to label %9654 unwind label %9652

9652:                                             ; preds = %9650
  %9653 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %9651) #22
  br label %762

9654:                                             ; preds = %9650
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %9651, align 8, !tbaa !58
  %9655 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %9651, i64 0, i32 1
  store ptr @_Z26BM_Counters_AvgThreadsRateRN9benchmark5StateE, ptr %9655, align 8, !tbaa !93
  %9656 = call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %9651)
  %9657 = call noundef ptr @_ZN9benchmark8internal9Benchmark11ThreadRangeEii(ptr noundef nonnull align 8 dereferenceable(216) %9656, i32 noundef 1, i32 noundef 8)
  store ptr %9657, ptr @_ZL27benchmark_uniq_9_benchmark_, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %170)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %169) #21
  %9658 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %170, i64 0, i32 2
  store ptr %9658, ptr %170, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %168) #21
  store i64 87, ptr %168, align 8, !tbaa !74
  %9659 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %170, ptr noundef nonnull align 8 dereferenceable(8) %168, i64 noundef 0)
  store ptr %9659, ptr %170, align 8, !tbaa !23
  %9660 = load i64, ptr %168, align 8, !tbaa !74
  store i64 %9660, ptr %9658, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(87) %9659, ptr noundef nonnull align 1 dereferenceable(87) @.str.137, i64 87, i1 false)
  %9661 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %170, i64 0, i32 1
  store i64 %9660, ptr %9661, align 8, !tbaa !10
  %9662 = getelementptr inbounds i8, ptr %9659, i64 %9660
  store i8 0, ptr %9662, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %168) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %169, ptr noundef nonnull %170, i32 noundef 0)
          to label %9663 unwind label %9708

9663:                                             ; preds = %9654
  %9664 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 0, ptr nonnull %169, i64 1)
          to label %9665 unwind label %9710

9665:                                             ; preds = %9663
  %9666 = getelementptr inbounds %struct.TestCase, ptr %169, i64 0, i32 3, i32 0, i32 1
  %9667 = load ptr, ptr %9666, align 8, !tbaa !88
  %9668 = icmp eq ptr %9667, null
  br i1 %9668, label %9693, label %9669

9669:                                             ; preds = %9665
  %9670 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9667, i64 0, i32 1
  %9671 = load atomic i64, ptr %9670 acquire, align 8
  %9672 = icmp eq i64 %9671, 4294967297
  %9673 = trunc i64 %9671 to i32
  br i1 %9672, label %9674, label %9682

9674:                                             ; preds = %9669
  store i32 0, ptr %9670, align 8, !tbaa !90
  %9675 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9667, i64 0, i32 2
  store i32 0, ptr %9675, align 4, !tbaa !92
  %9676 = load ptr, ptr %9667, align 8, !tbaa !58
  %9677 = getelementptr inbounds ptr, ptr %9676, i64 2
  %9678 = load ptr, ptr %9677, align 8
  call void %9678(ptr noundef nonnull align 8 dereferenceable(16) %9667) #21
  %9679 = load ptr, ptr %9667, align 8, !tbaa !58
  %9680 = getelementptr inbounds ptr, ptr %9679, i64 3
  %9681 = load ptr, ptr %9680, align 8
  call void %9681(ptr noundef nonnull align 8 dereferenceable(16) %9667) #21
  br label %9693

9682:                                             ; preds = %9669
  %9683 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %9684 = icmp eq i8 %9683, 0
  br i1 %9684, label %9687, label %9685

9685:                                             ; preds = %9682
  %9686 = add nsw i32 %9673, -1
  store i32 %9686, ptr %9670, align 8, !tbaa !73
  br label %9689

9687:                                             ; preds = %9682
  %9688 = atomicrmw volatile add ptr %9670, i32 -1 acq_rel, align 4
  br label %9689

9689:                                             ; preds = %9687, %9685
  %9690 = phi i32 [ %9673, %9685 ], [ %9688, %9687 ]
  %9691 = icmp eq i32 %9690, 1
  br i1 %9691, label %9692, label %9693, !prof !42

9692:                                             ; preds = %9689
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %9667) #21
  br label %9693

9693:                                             ; preds = %9692, %9689, %9674, %9665
  %9694 = getelementptr inbounds %struct.TestCase, ptr %169, i64 0, i32 2
  %9695 = load ptr, ptr %9694, align 8, !tbaa !23
  %9696 = getelementptr inbounds %struct.TestCase, ptr %169, i64 0, i32 2, i32 2
  %9697 = icmp eq ptr %9695, %9696
  br i1 %9697, label %9699, label %9698

9698:                                             ; preds = %9693
  call void @_ZdlPv(ptr noundef %9695) #22
  br label %9699

9699:                                             ; preds = %9698, %9693
  %9700 = load ptr, ptr %169, align 8, !tbaa !23
  %9701 = getelementptr inbounds %struct.TestCase, ptr %169, i64 0, i32 0, i32 2
  %9702 = icmp eq ptr %9700, %9701
  br i1 %9702, label %9704, label %9703

9703:                                             ; preds = %9699
  call void @_ZdlPv(ptr noundef %9700) #22
  br label %9704

9704:                                             ; preds = %9703, %9699
  %9705 = load ptr, ptr %170, align 8, !tbaa !23
  %9706 = icmp eq ptr %9705, %9658
  br i1 %9706, label %9756, label %9707

9707:                                             ; preds = %9704
  call void @_ZdlPv(ptr noundef %9705) #22
  br label %9756

9708:                                             ; preds = %9654
  %9709 = landingpad { ptr, i32 }
          cleanup
  br label %9750

9710:                                             ; preds = %9663
  %9711 = landingpad { ptr, i32 }
          cleanup
  %9712 = getelementptr inbounds %struct.TestCase, ptr %169, i64 0, i32 3, i32 0, i32 1
  %9713 = load ptr, ptr %9712, align 8, !tbaa !88
  %9714 = icmp eq ptr %9713, null
  br i1 %9714, label %9739, label %9715

9715:                                             ; preds = %9710
  %9716 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9713, i64 0, i32 1
  %9717 = load atomic i64, ptr %9716 acquire, align 8
  %9718 = icmp eq i64 %9717, 4294967297
  %9719 = trunc i64 %9717 to i32
  br i1 %9718, label %9720, label %9728

9720:                                             ; preds = %9715
  store i32 0, ptr %9716, align 8, !tbaa !90
  %9721 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9713, i64 0, i32 2
  store i32 0, ptr %9721, align 4, !tbaa !92
  %9722 = load ptr, ptr %9713, align 8, !tbaa !58
  %9723 = getelementptr inbounds ptr, ptr %9722, i64 2
  %9724 = load ptr, ptr %9723, align 8
  call void %9724(ptr noundef nonnull align 8 dereferenceable(16) %9713) #21
  %9725 = load ptr, ptr %9713, align 8, !tbaa !58
  %9726 = getelementptr inbounds ptr, ptr %9725, i64 3
  %9727 = load ptr, ptr %9726, align 8
  call void %9727(ptr noundef nonnull align 8 dereferenceable(16) %9713) #21
  br label %9739

9728:                                             ; preds = %9715
  %9729 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %9730 = icmp eq i8 %9729, 0
  br i1 %9730, label %9733, label %9731

9731:                                             ; preds = %9728
  %9732 = add nsw i32 %9719, -1
  store i32 %9732, ptr %9716, align 8, !tbaa !73
  br label %9735

9733:                                             ; preds = %9728
  %9734 = atomicrmw volatile add ptr %9716, i32 -1 acq_rel, align 4
  br label %9735

9735:                                             ; preds = %9733, %9731
  %9736 = phi i32 [ %9719, %9731 ], [ %9734, %9733 ]
  %9737 = icmp eq i32 %9736, 1
  br i1 %9737, label %9738, label %9739, !prof !42

9738:                                             ; preds = %9735
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %9713) #21
  br label %9739

9739:                                             ; preds = %9738, %9735, %9720, %9710
  %9740 = getelementptr inbounds %struct.TestCase, ptr %169, i64 0, i32 2
  %9741 = load ptr, ptr %9740, align 8, !tbaa !23
  %9742 = getelementptr inbounds %struct.TestCase, ptr %169, i64 0, i32 2, i32 2
  %9743 = icmp eq ptr %9741, %9742
  br i1 %9743, label %9745, label %9744

9744:                                             ; preds = %9739
  call void @_ZdlPv(ptr noundef %9741) #22
  br label %9745

9745:                                             ; preds = %9744, %9739
  %9746 = load ptr, ptr %169, align 8, !tbaa !23
  %9747 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %169, i64 0, i32 2
  %9748 = icmp eq ptr %9746, %9747
  br i1 %9748, label %9750, label %9749

9749:                                             ; preds = %9745
  call void @_ZdlPv(ptr noundef %9746) #22
  br label %9750

9750:                                             ; preds = %9749, %9745, %9708
  %9751 = phi { ptr, i32 } [ %9709, %9708 ], [ %9711, %9745 ], [ %9711, %9749 ]
  %9752 = load ptr, ptr %170, align 8, !tbaa !23
  %9753 = icmp eq ptr %9752, %9658
  br i1 %9753, label %9755, label %9754

9754:                                             ; preds = %9750
  call void @_ZdlPv(ptr noundef %9752) #22
  br label %9755

9755:                                             ; preds = %9754, %9750
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %169) #21
  br label %762

9756:                                             ; preds = %9704, %9707
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %169) #21
  store i32 %9664, ptr @dummy341, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %170)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %153)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %154)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %155)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %156)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %157)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %158)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %159)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %160)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %161)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %162)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %163)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %164)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %165)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %166)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %167)
  call void @llvm.lifetime.start.p0(i64 1320, ptr nonnull %152) #21
  %9757 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %153, i64 0, i32 2
  store ptr %9757, ptr %153, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %151) #21
  store i64 51, ptr %151, align 8, !tbaa !74
  %9758 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %153, ptr noundef nonnull align 8 dereferenceable(8) %151, i64 noundef 0)
  store ptr %9758, ptr %153, align 8, !tbaa !23
  %9759 = load i64, ptr %151, align 8, !tbaa !74
  store i64 %9759, ptr %9757, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(51) %9758, ptr noundef nonnull align 1 dereferenceable(51) @.str.139, i64 51, i1 false)
  %9760 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %153, i64 0, i32 1
  store i64 %9759, ptr %9760, align 8, !tbaa !10
  %9761 = getelementptr inbounds i8, ptr %9758, i64 %9759
  store i8 0, ptr %9761, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %151) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %152, ptr noundef nonnull %153, i32 noundef 0)
          to label %9762 unwind label %9978

9762:                                             ; preds = %9756
  %9763 = getelementptr inbounds %struct.TestCase, ptr %152, i64 1
  %9764 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %154, i64 0, i32 2
  store ptr %9764, ptr %154, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %150) #21
  store i64 19, ptr %150, align 8, !tbaa !74
  %9765 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %154, ptr noundef nonnull align 8 dereferenceable(8) %150, i64 noundef 0)
          to label %9766 unwind label %9980

9766:                                             ; preds = %9762
  store ptr %9765, ptr %154, align 8, !tbaa !23
  %9767 = load i64, ptr %150, align 8, !tbaa !74
  store i64 %9767, ptr %9764, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %9765, ptr noundef nonnull align 1 dereferenceable(19) @.str.140, i64 19, i1 false)
  %9768 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %154, i64 0, i32 1
  store i64 %9767, ptr %9768, align 8, !tbaa !10
  %9769 = load ptr, ptr %154, align 8, !tbaa !23
  %9770 = getelementptr inbounds i8, ptr %9769, i64 %9767
  store i8 0, ptr %9770, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %150) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %9763, ptr noundef nonnull %154, i32 noundef 1)
          to label %9771 unwind label %9982

9771:                                             ; preds = %9766
  %9772 = getelementptr inbounds %struct.TestCase, ptr %152, i64 2
  %9773 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %155, i64 0, i32 2
  store ptr %9773, ptr %155, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %149) #21
  store i64 32, ptr %149, align 8, !tbaa !74
  %9774 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %155, ptr noundef nonnull align 8 dereferenceable(8) %149, i64 noundef 0)
          to label %9775 unwind label %9984

9775:                                             ; preds = %9771
  store ptr %9774, ptr %155, align 8, !tbaa !23
  %9776 = load i64, ptr %149, align 8, !tbaa !74
  store i64 %9776, ptr %9773, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %9774, ptr noundef nonnull align 1 dereferenceable(32) @.str.15, i64 32, i1 false)
  %9777 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %155, i64 0, i32 1
  store i64 %9776, ptr %9777, align 8, !tbaa !10
  %9778 = load ptr, ptr %155, align 8, !tbaa !23
  %9779 = getelementptr inbounds i8, ptr %9778, i64 %9776
  store i8 0, ptr %9779, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %149) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %9772, ptr noundef nonnull %155, i32 noundef 1)
          to label %9780 unwind label %9986

9780:                                             ; preds = %9775
  %9781 = getelementptr inbounds %struct.TestCase, ptr %152, i64 3
  %9782 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %156, i64 0, i32 2
  store ptr %9782, ptr %156, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %148) #21
  store i64 55, ptr %148, align 8, !tbaa !74
  %9783 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %156, ptr noundef nonnull align 8 dereferenceable(8) %148, i64 noundef 0)
          to label %9784 unwind label %9988

9784:                                             ; preds = %9780
  store ptr %9783, ptr %156, align 8, !tbaa !23
  %9785 = load i64, ptr %148, align 8, !tbaa !74
  store i64 %9785, ptr %9782, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(55) %9783, ptr noundef nonnull align 1 dereferenceable(55) @.str.141, i64 55, i1 false)
  %9786 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %156, i64 0, i32 1
  store i64 %9785, ptr %9786, align 8, !tbaa !10
  %9787 = getelementptr inbounds i8, ptr %9783, i64 %9785
  store i8 0, ptr %9787, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %148) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %9781, ptr noundef nonnull %156, i32 noundef 1)
          to label %9788 unwind label %9990

9788:                                             ; preds = %9784
  %9789 = getelementptr inbounds %struct.TestCase, ptr %152, i64 4
  %9790 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %157, i64 0, i32 2
  store ptr %9790, ptr %157, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %147) #21
  store i64 25, ptr %147, align 8, !tbaa !74
  %9791 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %157, ptr noundef nonnull align 8 dereferenceable(8) %147, i64 noundef 0)
          to label %9792 unwind label %9992

9792:                                             ; preds = %9788
  store ptr %9791, ptr %157, align 8, !tbaa !23
  %9793 = load i64, ptr %147, align 8, !tbaa !74
  store i64 %9793, ptr %9790, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(25) %9791, ptr noundef nonnull align 1 dereferenceable(25) @.str.17, i64 25, i1 false)
  %9794 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %157, i64 0, i32 1
  store i64 %9793, ptr %9794, align 8, !tbaa !10
  %9795 = load ptr, ptr %157, align 8, !tbaa !23
  %9796 = getelementptr inbounds i8, ptr %9795, i64 %9793
  store i8 0, ptr %9796, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %147) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %9789, ptr noundef nonnull %157, i32 noundef 1)
          to label %9797 unwind label %9994

9797:                                             ; preds = %9792
  %9798 = getelementptr inbounds %struct.TestCase, ptr %152, i64 5
  %9799 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %158, i64 0, i32 2
  store ptr %9799, ptr %158, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %146) #21
  store i64 18, ptr %146, align 8, !tbaa !74
  %9800 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %158, ptr noundef nonnull align 8 dereferenceable(8) %146, i64 noundef 0)
          to label %9801 unwind label %9996

9801:                                             ; preds = %9797
  store ptr %9800, ptr %158, align 8, !tbaa !23
  %9802 = load i64, ptr %146, align 8, !tbaa !74
  store i64 %9802, ptr %9799, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(18) %9800, ptr noundef nonnull align 1 dereferenceable(18) @.str.18, i64 18, i1 false)
  %9803 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %158, i64 0, i32 1
  store i64 %9802, ptr %9803, align 8, !tbaa !10
  %9804 = load ptr, ptr %158, align 8, !tbaa !23
  %9805 = getelementptr inbounds i8, ptr %9804, i64 %9802
  store i8 0, ptr %9805, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %146) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %9798, ptr noundef nonnull %158, i32 noundef 1)
          to label %9806 unwind label %9998

9806:                                             ; preds = %9801
  %9807 = getelementptr inbounds %struct.TestCase, ptr %152, i64 6
  %9808 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %159, i64 0, i32 2
  store ptr %9808, ptr %159, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %145) #21
  store i64 23, ptr %145, align 8, !tbaa !74
  %9809 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %159, ptr noundef nonnull align 8 dereferenceable(8) %145, i64 noundef 0)
          to label %9810 unwind label %10000

9810:                                             ; preds = %9806
  store ptr %9809, ptr %159, align 8, !tbaa !23
  %9811 = load i64, ptr %145, align 8, !tbaa !74
  store i64 %9811, ptr %9808, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(23) %9809, ptr noundef nonnull align 1 dereferenceable(23) @.str.19, i64 23, i1 false)
  %9812 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %159, i64 0, i32 1
  store i64 %9811, ptr %9812, align 8, !tbaa !10
  %9813 = load ptr, ptr %159, align 8, !tbaa !23
  %9814 = getelementptr inbounds i8, ptr %9813, i64 %9811
  store i8 0, ptr %9814, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %145) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %9807, ptr noundef nonnull %159, i32 noundef 1)
          to label %9815 unwind label %10002

9815:                                             ; preds = %9810
  %9816 = getelementptr inbounds %struct.TestCase, ptr %152, i64 7
  %9817 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %160, i64 0, i32 2
  store ptr %9817, ptr %160, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %9817, ptr noundef nonnull align 1 dereferenceable(14) @.str.20, i64 14, i1 false)
  %9818 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %160, i64 0, i32 1
  store i64 14, ptr %9818, align 8, !tbaa !10
  %9819 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %160, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %9819, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %9816, ptr noundef nonnull %160, i32 noundef 1)
          to label %9820 unwind label %10004

9820:                                             ; preds = %9815
  %9821 = getelementptr inbounds %struct.TestCase, ptr %152, i64 8
  %9822 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %161, i64 0, i32 2
  store ptr %9822, ptr %161, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %144) #21
  store i64 20, ptr %144, align 8, !tbaa !74
  %9823 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %161, ptr noundef nonnull align 8 dereferenceable(8) %144, i64 noundef 0)
          to label %9824 unwind label %10006

9824:                                             ; preds = %9820
  store ptr %9823, ptr %161, align 8, !tbaa !23
  %9825 = load i64, ptr %144, align 8, !tbaa !74
  store i64 %9825, ptr %9822, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %9823, ptr noundef nonnull align 1 dereferenceable(20) @.str.21, i64 20, i1 false)
  %9826 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %161, i64 0, i32 1
  store i64 %9825, ptr %9826, align 8, !tbaa !10
  %9827 = load ptr, ptr %161, align 8, !tbaa !23
  %9828 = getelementptr inbounds i8, ptr %9827, i64 %9825
  store i8 0, ptr %9828, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %144) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %9821, ptr noundef nonnull %161, i32 noundef 1)
          to label %9829 unwind label %10008

9829:                                             ; preds = %9824
  %9830 = getelementptr inbounds %struct.TestCase, ptr %152, i64 9
  %9831 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %162, i64 0, i32 2
  store ptr %9831, ptr %162, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %143) #21
  store i64 21, ptr %143, align 8, !tbaa !74
  %9832 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %162, ptr noundef nonnull align 8 dereferenceable(8) %143, i64 noundef 0)
          to label %9833 unwind label %10010

9833:                                             ; preds = %9829
  store ptr %9832, ptr %162, align 8, !tbaa !23
  %9834 = load i64, ptr %143, align 8, !tbaa !74
  store i64 %9834, ptr %9831, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %9832, ptr noundef nonnull align 1 dereferenceable(21) @.str.22, i64 21, i1 false)
  %9835 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %162, i64 0, i32 1
  store i64 %9834, ptr %9835, align 8, !tbaa !10
  %9836 = load ptr, ptr %162, align 8, !tbaa !23
  %9837 = getelementptr inbounds i8, ptr %9836, i64 %9834
  store i8 0, ptr %9837, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %143) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %9830, ptr noundef nonnull %162, i32 noundef 1)
          to label %9838 unwind label %10012

9838:                                             ; preds = %9833
  %9839 = getelementptr inbounds %struct.TestCase, ptr %152, i64 10
  %9840 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %163, i64 0, i32 2
  store ptr %9840, ptr %163, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %142) #21
  store i64 20, ptr %142, align 8, !tbaa !74
  %9841 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %163, ptr noundef nonnull align 8 dereferenceable(8) %142, i64 noundef 0)
          to label %9842 unwind label %10014

9842:                                             ; preds = %9838
  store ptr %9841, ptr %163, align 8, !tbaa !23
  %9843 = load i64, ptr %142, align 8, !tbaa !74
  store i64 %9843, ptr %9840, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %9841, ptr noundef nonnull align 1 dereferenceable(20) @.str.23, i64 20, i1 false)
  %9844 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %163, i64 0, i32 1
  store i64 %9843, ptr %9844, align 8, !tbaa !10
  %9845 = load ptr, ptr %163, align 8, !tbaa !23
  %9846 = getelementptr inbounds i8, ptr %9845, i64 %9843
  store i8 0, ptr %9846, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %142) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %9839, ptr noundef nonnull %163, i32 noundef 1)
          to label %9847 unwind label %10016

9847:                                             ; preds = %9842
  %9848 = getelementptr inbounds %struct.TestCase, ptr %152, i64 11
  %9849 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %164, i64 0, i32 2
  store ptr %9849, ptr %164, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %141) #21
  store i64 19, ptr %141, align 8, !tbaa !74
  %9850 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %164, ptr noundef nonnull align 8 dereferenceable(8) %141, i64 noundef 0)
          to label %9851 unwind label %10018

9851:                                             ; preds = %9847
  store ptr %9850, ptr %164, align 8, !tbaa !23
  %9852 = load i64, ptr %141, align 8, !tbaa !74
  store i64 %9852, ptr %9849, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %9850, ptr noundef nonnull align 1 dereferenceable(19) @.str.24, i64 19, i1 false)
  %9853 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %164, i64 0, i32 1
  store i64 %9852, ptr %9853, align 8, !tbaa !10
  %9854 = load ptr, ptr %164, align 8, !tbaa !23
  %9855 = getelementptr inbounds i8, ptr %9854, i64 %9852
  store i8 0, ptr %9855, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %141) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %9848, ptr noundef nonnull %164, i32 noundef 1)
          to label %9856 unwind label %10020

9856:                                             ; preds = %9851
  %9857 = getelementptr inbounds %struct.TestCase, ptr %152, i64 12
  %9858 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %165, i64 0, i32 2
  store ptr %9858, ptr %165, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(15) %9858, ptr noundef nonnull align 1 dereferenceable(15) @.str.25, i64 15, i1 false)
  %9859 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %165, i64 0, i32 1
  store i64 15, ptr %9859, align 8, !tbaa !10
  %9860 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %165, i64 0, i32 2, i32 1, i64 7
  store i8 0, ptr %9860, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %9857, ptr noundef nonnull %165, i32 noundef 1)
          to label %9861 unwind label %10022

9861:                                             ; preds = %9856
  %9862 = getelementptr inbounds %struct.TestCase, ptr %152, i64 13
  %9863 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %166, i64 0, i32 2
  store ptr %9863, ptr %166, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %9863, ptr noundef nonnull align 1 dereferenceable(14) @.str.26, i64 14, i1 false)
  %9864 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %166, i64 0, i32 1
  store i64 14, ptr %9864, align 8, !tbaa !10
  %9865 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %166, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %9865, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %9862, ptr noundef nonnull %166, i32 noundef 1)
          to label %9866 unwind label %10024

9866:                                             ; preds = %9861
  %9867 = getelementptr inbounds %struct.TestCase, ptr %152, i64 14
  %9868 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %167, i64 0, i32 2
  store ptr %9868, ptr %167, align 8, !tbaa !5
  store i8 125, ptr %9868, align 8, !tbaa !13
  %9869 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %167, i64 0, i32 1
  store i64 1, ptr %9869, align 8, !tbaa !10
  %9870 = getelementptr inbounds i8, ptr %167, i64 17
  store i8 0, ptr %9870, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %9867, ptr noundef nonnull %167, i32 noundef 1)
          to label %9871 unwind label %10026

9871:                                             ; preds = %9866
  %9872 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 2, ptr nonnull %152, i64 15)
          to label %9873 unwind label %10028

9873:                                             ; preds = %9871
  %9874 = getelementptr inbounds %struct.TestCase, ptr %152, i64 15
  br label %9875

9875:                                             ; preds = %9916, %9873
  %9876 = phi ptr [ %9874, %9873 ], [ %9877, %9916 ]
  %9877 = getelementptr inbounds %struct.TestCase, ptr %9876, i64 -1
  %9878 = getelementptr %struct.TestCase, ptr %9876, i64 -1, i32 3, i32 0, i32 1
  %9879 = load ptr, ptr %9878, align 8, !tbaa !88
  %9880 = icmp eq ptr %9879, null
  br i1 %9880, label %9905, label %9881

9881:                                             ; preds = %9875
  %9882 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9879, i64 0, i32 1
  %9883 = load atomic i64, ptr %9882 acquire, align 8
  %9884 = icmp eq i64 %9883, 4294967297
  %9885 = trunc i64 %9883 to i32
  br i1 %9884, label %9886, label %9894

9886:                                             ; preds = %9881
  store i32 0, ptr %9882, align 8, !tbaa !90
  %9887 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %9879, i64 0, i32 2
  store i32 0, ptr %9887, align 4, !tbaa !92
  %9888 = load ptr, ptr %9879, align 8, !tbaa !58
  %9889 = getelementptr inbounds ptr, ptr %9888, i64 2
  %9890 = load ptr, ptr %9889, align 8
  call void %9890(ptr noundef nonnull align 8 dereferenceable(16) %9879) #21
  %9891 = load ptr, ptr %9879, align 8, !tbaa !58
  %9892 = getelementptr inbounds ptr, ptr %9891, i64 3
  %9893 = load ptr, ptr %9892, align 8
  call void %9893(ptr noundef nonnull align 8 dereferenceable(16) %9879) #21
  br label %9905

9894:                                             ; preds = %9881
  %9895 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %9896 = icmp eq i8 %9895, 0
  br i1 %9896, label %9899, label %9897

9897:                                             ; preds = %9894
  %9898 = add nsw i32 %9885, -1
  store i32 %9898, ptr %9882, align 8, !tbaa !73
  br label %9901

9899:                                             ; preds = %9894
  %9900 = atomicrmw volatile add ptr %9882, i32 -1 acq_rel, align 4
  br label %9901

9901:                                             ; preds = %9899, %9897
  %9902 = phi i32 [ %9885, %9897 ], [ %9900, %9899 ]
  %9903 = icmp eq i32 %9902, 1
  br i1 %9903, label %9904, label %9905, !prof !42

9904:                                             ; preds = %9901
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %9879) #21
  br label %9905

9905:                                             ; preds = %9904, %9901, %9886, %9875
  %9906 = getelementptr %struct.TestCase, ptr %9876, i64 -1, i32 2
  %9907 = load ptr, ptr %9906, align 8, !tbaa !23
  %9908 = getelementptr %struct.TestCase, ptr %9876, i64 -1, i32 2, i32 2
  %9909 = icmp eq ptr %9907, %9908
  br i1 %9909, label %9911, label %9910

9910:                                             ; preds = %9905
  call void @_ZdlPv(ptr noundef %9907) #22
  br label %9911

9911:                                             ; preds = %9910, %9905
  %9912 = load ptr, ptr %9877, align 8, !tbaa !23
  %9913 = getelementptr %struct.TestCase, ptr %9876, i64 -1, i32 0, i32 2
  %9914 = icmp eq ptr %9912, %9913
  br i1 %9914, label %9916, label %9915

9915:                                             ; preds = %9911
  call void @_ZdlPv(ptr noundef %9912) #22
  br label %9916

9916:                                             ; preds = %9915, %9911
  %9917 = icmp eq ptr %9877, %152
  br i1 %9917, label %9918, label %9875

9918:                                             ; preds = %9916
  %9919 = load ptr, ptr %167, align 8, !tbaa !23
  %9920 = icmp eq ptr %9919, %9868
  br i1 %9920, label %9922, label %9921

9921:                                             ; preds = %9918
  call void @_ZdlPv(ptr noundef %9919) #22
  br label %9922

9922:                                             ; preds = %9921, %9918
  %9923 = load ptr, ptr %166, align 8, !tbaa !23
  %9924 = icmp eq ptr %9923, %9863
  br i1 %9924, label %9926, label %9925

9925:                                             ; preds = %9922
  call void @_ZdlPv(ptr noundef %9923) #22
  br label %9926

9926:                                             ; preds = %9925, %9922
  %9927 = load ptr, ptr %165, align 8, !tbaa !23
  %9928 = icmp eq ptr %9927, %9858
  br i1 %9928, label %9930, label %9929

9929:                                             ; preds = %9926
  call void @_ZdlPv(ptr noundef %9927) #22
  br label %9930

9930:                                             ; preds = %9929, %9926
  %9931 = load ptr, ptr %164, align 8, !tbaa !23
  %9932 = icmp eq ptr %9931, %9849
  br i1 %9932, label %9934, label %9933

9933:                                             ; preds = %9930
  call void @_ZdlPv(ptr noundef %9931) #22
  br label %9934

9934:                                             ; preds = %9933, %9930
  %9935 = load ptr, ptr %163, align 8, !tbaa !23
  %9936 = icmp eq ptr %9935, %9840
  br i1 %9936, label %9938, label %9937

9937:                                             ; preds = %9934
  call void @_ZdlPv(ptr noundef %9935) #22
  br label %9938

9938:                                             ; preds = %9937, %9934
  %9939 = load ptr, ptr %162, align 8, !tbaa !23
  %9940 = icmp eq ptr %9939, %9831
  br i1 %9940, label %9942, label %9941

9941:                                             ; preds = %9938
  call void @_ZdlPv(ptr noundef %9939) #22
  br label %9942

9942:                                             ; preds = %9941, %9938
  %9943 = load ptr, ptr %161, align 8, !tbaa !23
  %9944 = icmp eq ptr %9943, %9822
  br i1 %9944, label %9946, label %9945

9945:                                             ; preds = %9942
  call void @_ZdlPv(ptr noundef %9943) #22
  br label %9946

9946:                                             ; preds = %9945, %9942
  %9947 = load ptr, ptr %160, align 8, !tbaa !23
  %9948 = icmp eq ptr %9947, %9817
  br i1 %9948, label %9950, label %9949

9949:                                             ; preds = %9946
  call void @_ZdlPv(ptr noundef %9947) #22
  br label %9950

9950:                                             ; preds = %9949, %9946
  %9951 = load ptr, ptr %159, align 8, !tbaa !23
  %9952 = icmp eq ptr %9951, %9808
  br i1 %9952, label %9954, label %9953

9953:                                             ; preds = %9950
  call void @_ZdlPv(ptr noundef %9951) #22
  br label %9954

9954:                                             ; preds = %9953, %9950
  %9955 = load ptr, ptr %158, align 8, !tbaa !23
  %9956 = icmp eq ptr %9955, %9799
  br i1 %9956, label %9958, label %9957

9957:                                             ; preds = %9954
  call void @_ZdlPv(ptr noundef %9955) #22
  br label %9958

9958:                                             ; preds = %9957, %9954
  %9959 = load ptr, ptr %157, align 8, !tbaa !23
  %9960 = icmp eq ptr %9959, %9790
  br i1 %9960, label %9962, label %9961

9961:                                             ; preds = %9958
  call void @_ZdlPv(ptr noundef %9959) #22
  br label %9962

9962:                                             ; preds = %9961, %9958
  %9963 = load ptr, ptr %156, align 8, !tbaa !23
  %9964 = icmp eq ptr %9963, %9782
  br i1 %9964, label %9966, label %9965

9965:                                             ; preds = %9962
  call void @_ZdlPv(ptr noundef %9963) #22
  br label %9966

9966:                                             ; preds = %9965, %9962
  %9967 = load ptr, ptr %155, align 8, !tbaa !23
  %9968 = icmp eq ptr %9967, %9773
  br i1 %9968, label %9970, label %9969

9969:                                             ; preds = %9966
  call void @_ZdlPv(ptr noundef %9967) #22
  br label %9970

9970:                                             ; preds = %9969, %9966
  %9971 = load ptr, ptr %154, align 8, !tbaa !23
  %9972 = icmp eq ptr %9971, %9764
  br i1 %9972, label %9974, label %9973

9973:                                             ; preds = %9970
  call void @_ZdlPv(ptr noundef %9971) #22
  br label %9974

9974:                                             ; preds = %9973, %9970
  %9975 = load ptr, ptr %153, align 8, !tbaa !23
  %9976 = icmp eq ptr %9975, %9757
  br i1 %9976, label %10765, label %9977

9977:                                             ; preds = %9974
  call void @_ZdlPv(ptr noundef %9975) #22
  br label %10765

9978:                                             ; preds = %9756
  %9979 = landingpad { ptr, i32 }
          cleanup
  br label %10711

9980:                                             ; preds = %9762
  %9981 = landingpad { ptr, i32 }
          cleanup
  br label %10711

9982:                                             ; preds = %9766
  %9983 = landingpad { ptr, i32 }
          cleanup
  br label %10704

9984:                                             ; preds = %9771
  %9985 = landingpad { ptr, i32 }
          cleanup
  br label %10704

9986:                                             ; preds = %9775
  %9987 = landingpad { ptr, i32 }
          cleanup
  br label %10697

9988:                                             ; preds = %9780
  %9989 = landingpad { ptr, i32 }
          cleanup
  br label %10697

9990:                                             ; preds = %9784
  %9991 = landingpad { ptr, i32 }
          cleanup
  br label %10690

9992:                                             ; preds = %9788
  %9993 = landingpad { ptr, i32 }
          cleanup
  br label %10690

9994:                                             ; preds = %9792
  %9995 = landingpad { ptr, i32 }
          cleanup
  br label %10683

9996:                                             ; preds = %9797
  %9997 = landingpad { ptr, i32 }
          cleanup
  br label %10683

9998:                                             ; preds = %9801
  %9999 = landingpad { ptr, i32 }
          cleanup
  br label %10676

10000:                                            ; preds = %9806
  %10001 = landingpad { ptr, i32 }
          cleanup
  br label %10676

10002:                                            ; preds = %9810
  %10003 = landingpad { ptr, i32 }
          cleanup
  br label %10669

10004:                                            ; preds = %9815
  %10005 = landingpad { ptr, i32 }
          cleanup
  br label %10662

10006:                                            ; preds = %9820
  %10007 = landingpad { ptr, i32 }
          cleanup
  br label %10662

10008:                                            ; preds = %9824
  %10009 = landingpad { ptr, i32 }
          cleanup
  br label %10655

10010:                                            ; preds = %9829
  %10011 = landingpad { ptr, i32 }
          cleanup
  br label %10655

10012:                                            ; preds = %9833
  %10013 = landingpad { ptr, i32 }
          cleanup
  br label %10648

10014:                                            ; preds = %9838
  %10015 = landingpad { ptr, i32 }
          cleanup
  br label %10648

10016:                                            ; preds = %9842
  %10017 = landingpad { ptr, i32 }
          cleanup
  br label %10641

10018:                                            ; preds = %9847
  %10019 = landingpad { ptr, i32 }
          cleanup
  br label %10641

10020:                                            ; preds = %9851
  %10021 = landingpad { ptr, i32 }
          cleanup
  br label %10634

10022:                                            ; preds = %9856
  %10023 = landingpad { ptr, i32 }
          cleanup
  br label %10627

10024:                                            ; preds = %9861
  %10025 = landingpad { ptr, i32 }
          cleanup
  br label %10620

10026:                                            ; preds = %9866
  %10027 = landingpad { ptr, i32 }
          cleanup
  br label %10614

10028:                                            ; preds = %9871
  %10029 = landingpad { ptr, i32 }
          cleanup
  %10030 = getelementptr inbounds %struct.TestCase, ptr %152, i64 14, i32 3, i32 0, i32 1
  %10031 = load ptr, ptr %10030, align 8, !tbaa !88
  %10032 = icmp eq ptr %10031, null
  br i1 %10032, label %10057, label %10033

10033:                                            ; preds = %10028
  %10034 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10031, i64 0, i32 1
  %10035 = load atomic i64, ptr %10034 acquire, align 8
  %10036 = icmp eq i64 %10035, 4294967297
  %10037 = trunc i64 %10035 to i32
  br i1 %10036, label %10038, label %10046

10038:                                            ; preds = %10033
  store i32 0, ptr %10034, align 8, !tbaa !90
  %10039 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10031, i64 0, i32 2
  store i32 0, ptr %10039, align 4, !tbaa !92
  %10040 = load ptr, ptr %10031, align 8, !tbaa !58
  %10041 = getelementptr inbounds ptr, ptr %10040, i64 2
  %10042 = load ptr, ptr %10041, align 8
  call void %10042(ptr noundef nonnull align 8 dereferenceable(16) %10031) #21
  %10043 = load ptr, ptr %10031, align 8, !tbaa !58
  %10044 = getelementptr inbounds ptr, ptr %10043, i64 3
  %10045 = load ptr, ptr %10044, align 8
  call void %10045(ptr noundef nonnull align 8 dereferenceable(16) %10031) #21
  br label %10057

10046:                                            ; preds = %10033
  %10047 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10048 = icmp eq i8 %10047, 0
  br i1 %10048, label %10051, label %10049

10049:                                            ; preds = %10046
  %10050 = add nsw i32 %10037, -1
  store i32 %10050, ptr %10034, align 8, !tbaa !73
  br label %10053

10051:                                            ; preds = %10046
  %10052 = atomicrmw volatile add ptr %10034, i32 -1 acq_rel, align 4
  br label %10053

10053:                                            ; preds = %10051, %10049
  %10054 = phi i32 [ %10037, %10049 ], [ %10052, %10051 ]
  %10055 = icmp eq i32 %10054, 1
  br i1 %10055, label %10056, label %10057, !prof !42

10056:                                            ; preds = %10053
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10031) #21
  br label %10057

10057:                                            ; preds = %10056, %10053, %10038, %10028
  %10058 = getelementptr inbounds %struct.TestCase, ptr %152, i64 14, i32 2
  %10059 = load ptr, ptr %10058, align 8, !tbaa !23
  %10060 = getelementptr inbounds %struct.TestCase, ptr %152, i64 14, i32 2, i32 2
  %10061 = icmp eq ptr %10059, %10060
  br i1 %10061, label %10063, label %10062

10062:                                            ; preds = %10057
  call void @_ZdlPv(ptr noundef %10059) #22
  br label %10063

10063:                                            ; preds = %10062, %10057
  %10064 = load ptr, ptr %9867, align 8, !tbaa !23
  %10065 = getelementptr inbounds %struct.TestCase, ptr %152, i64 14, i32 0, i32 2
  %10066 = icmp eq ptr %10064, %10065
  br i1 %10066, label %10068, label %10067

10067:                                            ; preds = %10063
  call void @_ZdlPv(ptr noundef %10064) #22
  br label %10068

10068:                                            ; preds = %10063, %10067
  %10069 = getelementptr inbounds %struct.TestCase, ptr %152, i64 13, i32 3, i32 0, i32 1
  %10070 = load ptr, ptr %10069, align 8, !tbaa !88
  %10071 = icmp eq ptr %10070, null
  br i1 %10071, label %10096, label %10072

10072:                                            ; preds = %10068
  %10073 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10070, i64 0, i32 1
  %10074 = load atomic i64, ptr %10073 acquire, align 8
  %10075 = icmp eq i64 %10074, 4294967297
  %10076 = trunc i64 %10074 to i32
  br i1 %10075, label %10077, label %10085

10077:                                            ; preds = %10072
  store i32 0, ptr %10073, align 8, !tbaa !90
  %10078 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10070, i64 0, i32 2
  store i32 0, ptr %10078, align 4, !tbaa !92
  %10079 = load ptr, ptr %10070, align 8, !tbaa !58
  %10080 = getelementptr inbounds ptr, ptr %10079, i64 2
  %10081 = load ptr, ptr %10080, align 8
  call void %10081(ptr noundef nonnull align 8 dereferenceable(16) %10070) #21
  %10082 = load ptr, ptr %10070, align 8, !tbaa !58
  %10083 = getelementptr inbounds ptr, ptr %10082, i64 3
  %10084 = load ptr, ptr %10083, align 8
  call void %10084(ptr noundef nonnull align 8 dereferenceable(16) %10070) #21
  br label %10096

10085:                                            ; preds = %10072
  %10086 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10087 = icmp eq i8 %10086, 0
  br i1 %10087, label %10090, label %10088

10088:                                            ; preds = %10085
  %10089 = add nsw i32 %10076, -1
  store i32 %10089, ptr %10073, align 8, !tbaa !73
  br label %10092

10090:                                            ; preds = %10085
  %10091 = atomicrmw volatile add ptr %10073, i32 -1 acq_rel, align 4
  br label %10092

10092:                                            ; preds = %10090, %10088
  %10093 = phi i32 [ %10076, %10088 ], [ %10091, %10090 ]
  %10094 = icmp eq i32 %10093, 1
  br i1 %10094, label %10095, label %10096, !prof !42

10095:                                            ; preds = %10092
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10070) #21
  br label %10096

10096:                                            ; preds = %10095, %10092, %10077, %10068
  %10097 = getelementptr inbounds %struct.TestCase, ptr %152, i64 13, i32 2
  %10098 = load ptr, ptr %10097, align 8, !tbaa !23
  %10099 = getelementptr inbounds %struct.TestCase, ptr %152, i64 13, i32 2, i32 2
  %10100 = icmp eq ptr %10098, %10099
  br i1 %10100, label %10102, label %10101

10101:                                            ; preds = %10096
  call void @_ZdlPv(ptr noundef %10098) #22
  br label %10102

10102:                                            ; preds = %10101, %10096
  %10103 = load ptr, ptr %9862, align 8, !tbaa !23
  %10104 = getelementptr inbounds %struct.TestCase, ptr %152, i64 13, i32 0, i32 2
  %10105 = icmp eq ptr %10103, %10104
  br i1 %10105, label %10107, label %10106

10106:                                            ; preds = %10102
  call void @_ZdlPv(ptr noundef %10103) #22
  br label %10107

10107:                                            ; preds = %10102, %10106
  %10108 = getelementptr inbounds %struct.TestCase, ptr %152, i64 12, i32 3, i32 0, i32 1
  %10109 = load ptr, ptr %10108, align 8, !tbaa !88
  %10110 = icmp eq ptr %10109, null
  br i1 %10110, label %10135, label %10111

10111:                                            ; preds = %10107
  %10112 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10109, i64 0, i32 1
  %10113 = load atomic i64, ptr %10112 acquire, align 8
  %10114 = icmp eq i64 %10113, 4294967297
  %10115 = trunc i64 %10113 to i32
  br i1 %10114, label %10116, label %10124

10116:                                            ; preds = %10111
  store i32 0, ptr %10112, align 8, !tbaa !90
  %10117 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10109, i64 0, i32 2
  store i32 0, ptr %10117, align 4, !tbaa !92
  %10118 = load ptr, ptr %10109, align 8, !tbaa !58
  %10119 = getelementptr inbounds ptr, ptr %10118, i64 2
  %10120 = load ptr, ptr %10119, align 8
  call void %10120(ptr noundef nonnull align 8 dereferenceable(16) %10109) #21
  %10121 = load ptr, ptr %10109, align 8, !tbaa !58
  %10122 = getelementptr inbounds ptr, ptr %10121, i64 3
  %10123 = load ptr, ptr %10122, align 8
  call void %10123(ptr noundef nonnull align 8 dereferenceable(16) %10109) #21
  br label %10135

10124:                                            ; preds = %10111
  %10125 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10126 = icmp eq i8 %10125, 0
  br i1 %10126, label %10129, label %10127

10127:                                            ; preds = %10124
  %10128 = add nsw i32 %10115, -1
  store i32 %10128, ptr %10112, align 8, !tbaa !73
  br label %10131

10129:                                            ; preds = %10124
  %10130 = atomicrmw volatile add ptr %10112, i32 -1 acq_rel, align 4
  br label %10131

10131:                                            ; preds = %10129, %10127
  %10132 = phi i32 [ %10115, %10127 ], [ %10130, %10129 ]
  %10133 = icmp eq i32 %10132, 1
  br i1 %10133, label %10134, label %10135, !prof !42

10134:                                            ; preds = %10131
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10109) #21
  br label %10135

10135:                                            ; preds = %10134, %10131, %10116, %10107
  %10136 = getelementptr inbounds %struct.TestCase, ptr %152, i64 12, i32 2
  %10137 = load ptr, ptr %10136, align 8, !tbaa !23
  %10138 = getelementptr inbounds %struct.TestCase, ptr %152, i64 12, i32 2, i32 2
  %10139 = icmp eq ptr %10137, %10138
  br i1 %10139, label %10141, label %10140

10140:                                            ; preds = %10135
  call void @_ZdlPv(ptr noundef %10137) #22
  br label %10141

10141:                                            ; preds = %10140, %10135
  %10142 = load ptr, ptr %9857, align 8, !tbaa !23
  %10143 = getelementptr inbounds %struct.TestCase, ptr %152, i64 12, i32 0, i32 2
  %10144 = icmp eq ptr %10142, %10143
  br i1 %10144, label %10146, label %10145

10145:                                            ; preds = %10141
  call void @_ZdlPv(ptr noundef %10142) #22
  br label %10146

10146:                                            ; preds = %10141, %10145
  %10147 = getelementptr inbounds %struct.TestCase, ptr %152, i64 11, i32 3, i32 0, i32 1
  %10148 = load ptr, ptr %10147, align 8, !tbaa !88
  %10149 = icmp eq ptr %10148, null
  br i1 %10149, label %10174, label %10150

10150:                                            ; preds = %10146
  %10151 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10148, i64 0, i32 1
  %10152 = load atomic i64, ptr %10151 acquire, align 8
  %10153 = icmp eq i64 %10152, 4294967297
  %10154 = trunc i64 %10152 to i32
  br i1 %10153, label %10155, label %10163

10155:                                            ; preds = %10150
  store i32 0, ptr %10151, align 8, !tbaa !90
  %10156 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10148, i64 0, i32 2
  store i32 0, ptr %10156, align 4, !tbaa !92
  %10157 = load ptr, ptr %10148, align 8, !tbaa !58
  %10158 = getelementptr inbounds ptr, ptr %10157, i64 2
  %10159 = load ptr, ptr %10158, align 8
  call void %10159(ptr noundef nonnull align 8 dereferenceable(16) %10148) #21
  %10160 = load ptr, ptr %10148, align 8, !tbaa !58
  %10161 = getelementptr inbounds ptr, ptr %10160, i64 3
  %10162 = load ptr, ptr %10161, align 8
  call void %10162(ptr noundef nonnull align 8 dereferenceable(16) %10148) #21
  br label %10174

10163:                                            ; preds = %10150
  %10164 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10165 = icmp eq i8 %10164, 0
  br i1 %10165, label %10168, label %10166

10166:                                            ; preds = %10163
  %10167 = add nsw i32 %10154, -1
  store i32 %10167, ptr %10151, align 8, !tbaa !73
  br label %10170

10168:                                            ; preds = %10163
  %10169 = atomicrmw volatile add ptr %10151, i32 -1 acq_rel, align 4
  br label %10170

10170:                                            ; preds = %10168, %10166
  %10171 = phi i32 [ %10154, %10166 ], [ %10169, %10168 ]
  %10172 = icmp eq i32 %10171, 1
  br i1 %10172, label %10173, label %10174, !prof !42

10173:                                            ; preds = %10170
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10148) #21
  br label %10174

10174:                                            ; preds = %10173, %10170, %10155, %10146
  %10175 = getelementptr inbounds %struct.TestCase, ptr %152, i64 11, i32 2
  %10176 = load ptr, ptr %10175, align 8, !tbaa !23
  %10177 = getelementptr inbounds %struct.TestCase, ptr %152, i64 11, i32 2, i32 2
  %10178 = icmp eq ptr %10176, %10177
  br i1 %10178, label %10180, label %10179

10179:                                            ; preds = %10174
  call void @_ZdlPv(ptr noundef %10176) #22
  br label %10180

10180:                                            ; preds = %10179, %10174
  %10181 = load ptr, ptr %9848, align 8, !tbaa !23
  %10182 = getelementptr inbounds %struct.TestCase, ptr %152, i64 11, i32 0, i32 2
  %10183 = icmp eq ptr %10181, %10182
  br i1 %10183, label %10185, label %10184

10184:                                            ; preds = %10180
  call void @_ZdlPv(ptr noundef %10181) #22
  br label %10185

10185:                                            ; preds = %10180, %10184
  %10186 = getelementptr inbounds %struct.TestCase, ptr %152, i64 10, i32 3, i32 0, i32 1
  %10187 = load ptr, ptr %10186, align 8, !tbaa !88
  %10188 = icmp eq ptr %10187, null
  br i1 %10188, label %10213, label %10189

10189:                                            ; preds = %10185
  %10190 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10187, i64 0, i32 1
  %10191 = load atomic i64, ptr %10190 acquire, align 8
  %10192 = icmp eq i64 %10191, 4294967297
  %10193 = trunc i64 %10191 to i32
  br i1 %10192, label %10194, label %10202

10194:                                            ; preds = %10189
  store i32 0, ptr %10190, align 8, !tbaa !90
  %10195 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10187, i64 0, i32 2
  store i32 0, ptr %10195, align 4, !tbaa !92
  %10196 = load ptr, ptr %10187, align 8, !tbaa !58
  %10197 = getelementptr inbounds ptr, ptr %10196, i64 2
  %10198 = load ptr, ptr %10197, align 8
  call void %10198(ptr noundef nonnull align 8 dereferenceable(16) %10187) #21
  %10199 = load ptr, ptr %10187, align 8, !tbaa !58
  %10200 = getelementptr inbounds ptr, ptr %10199, i64 3
  %10201 = load ptr, ptr %10200, align 8
  call void %10201(ptr noundef nonnull align 8 dereferenceable(16) %10187) #21
  br label %10213

10202:                                            ; preds = %10189
  %10203 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10204 = icmp eq i8 %10203, 0
  br i1 %10204, label %10207, label %10205

10205:                                            ; preds = %10202
  %10206 = add nsw i32 %10193, -1
  store i32 %10206, ptr %10190, align 8, !tbaa !73
  br label %10209

10207:                                            ; preds = %10202
  %10208 = atomicrmw volatile add ptr %10190, i32 -1 acq_rel, align 4
  br label %10209

10209:                                            ; preds = %10207, %10205
  %10210 = phi i32 [ %10193, %10205 ], [ %10208, %10207 ]
  %10211 = icmp eq i32 %10210, 1
  br i1 %10211, label %10212, label %10213, !prof !42

10212:                                            ; preds = %10209
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10187) #21
  br label %10213

10213:                                            ; preds = %10212, %10209, %10194, %10185
  %10214 = getelementptr inbounds %struct.TestCase, ptr %152, i64 10, i32 2
  %10215 = load ptr, ptr %10214, align 8, !tbaa !23
  %10216 = getelementptr inbounds %struct.TestCase, ptr %152, i64 10, i32 2, i32 2
  %10217 = icmp eq ptr %10215, %10216
  br i1 %10217, label %10219, label %10218

10218:                                            ; preds = %10213
  call void @_ZdlPv(ptr noundef %10215) #22
  br label %10219

10219:                                            ; preds = %10218, %10213
  %10220 = load ptr, ptr %9839, align 8, !tbaa !23
  %10221 = getelementptr inbounds %struct.TestCase, ptr %152, i64 10, i32 0, i32 2
  %10222 = icmp eq ptr %10220, %10221
  br i1 %10222, label %10224, label %10223

10223:                                            ; preds = %10219
  call void @_ZdlPv(ptr noundef %10220) #22
  br label %10224

10224:                                            ; preds = %10219, %10223
  %10225 = getelementptr inbounds %struct.TestCase, ptr %152, i64 9, i32 3, i32 0, i32 1
  %10226 = load ptr, ptr %10225, align 8, !tbaa !88
  %10227 = icmp eq ptr %10226, null
  br i1 %10227, label %10252, label %10228

10228:                                            ; preds = %10224
  %10229 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10226, i64 0, i32 1
  %10230 = load atomic i64, ptr %10229 acquire, align 8
  %10231 = icmp eq i64 %10230, 4294967297
  %10232 = trunc i64 %10230 to i32
  br i1 %10231, label %10233, label %10241

10233:                                            ; preds = %10228
  store i32 0, ptr %10229, align 8, !tbaa !90
  %10234 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10226, i64 0, i32 2
  store i32 0, ptr %10234, align 4, !tbaa !92
  %10235 = load ptr, ptr %10226, align 8, !tbaa !58
  %10236 = getelementptr inbounds ptr, ptr %10235, i64 2
  %10237 = load ptr, ptr %10236, align 8
  call void %10237(ptr noundef nonnull align 8 dereferenceable(16) %10226) #21
  %10238 = load ptr, ptr %10226, align 8, !tbaa !58
  %10239 = getelementptr inbounds ptr, ptr %10238, i64 3
  %10240 = load ptr, ptr %10239, align 8
  call void %10240(ptr noundef nonnull align 8 dereferenceable(16) %10226) #21
  br label %10252

10241:                                            ; preds = %10228
  %10242 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10243 = icmp eq i8 %10242, 0
  br i1 %10243, label %10246, label %10244

10244:                                            ; preds = %10241
  %10245 = add nsw i32 %10232, -1
  store i32 %10245, ptr %10229, align 8, !tbaa !73
  br label %10248

10246:                                            ; preds = %10241
  %10247 = atomicrmw volatile add ptr %10229, i32 -1 acq_rel, align 4
  br label %10248

10248:                                            ; preds = %10246, %10244
  %10249 = phi i32 [ %10232, %10244 ], [ %10247, %10246 ]
  %10250 = icmp eq i32 %10249, 1
  br i1 %10250, label %10251, label %10252, !prof !42

10251:                                            ; preds = %10248
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10226) #21
  br label %10252

10252:                                            ; preds = %10251, %10248, %10233, %10224
  %10253 = getelementptr inbounds %struct.TestCase, ptr %152, i64 9, i32 2
  %10254 = load ptr, ptr %10253, align 8, !tbaa !23
  %10255 = getelementptr inbounds %struct.TestCase, ptr %152, i64 9, i32 2, i32 2
  %10256 = icmp eq ptr %10254, %10255
  br i1 %10256, label %10258, label %10257

10257:                                            ; preds = %10252
  call void @_ZdlPv(ptr noundef %10254) #22
  br label %10258

10258:                                            ; preds = %10257, %10252
  %10259 = load ptr, ptr %9830, align 8, !tbaa !23
  %10260 = getelementptr inbounds %struct.TestCase, ptr %152, i64 9, i32 0, i32 2
  %10261 = icmp eq ptr %10259, %10260
  br i1 %10261, label %10263, label %10262

10262:                                            ; preds = %10258
  call void @_ZdlPv(ptr noundef %10259) #22
  br label %10263

10263:                                            ; preds = %10258, %10262
  %10264 = getelementptr inbounds %struct.TestCase, ptr %152, i64 8, i32 3, i32 0, i32 1
  %10265 = load ptr, ptr %10264, align 8, !tbaa !88
  %10266 = icmp eq ptr %10265, null
  br i1 %10266, label %10291, label %10267

10267:                                            ; preds = %10263
  %10268 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10265, i64 0, i32 1
  %10269 = load atomic i64, ptr %10268 acquire, align 8
  %10270 = icmp eq i64 %10269, 4294967297
  %10271 = trunc i64 %10269 to i32
  br i1 %10270, label %10272, label %10280

10272:                                            ; preds = %10267
  store i32 0, ptr %10268, align 8, !tbaa !90
  %10273 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10265, i64 0, i32 2
  store i32 0, ptr %10273, align 4, !tbaa !92
  %10274 = load ptr, ptr %10265, align 8, !tbaa !58
  %10275 = getelementptr inbounds ptr, ptr %10274, i64 2
  %10276 = load ptr, ptr %10275, align 8
  call void %10276(ptr noundef nonnull align 8 dereferenceable(16) %10265) #21
  %10277 = load ptr, ptr %10265, align 8, !tbaa !58
  %10278 = getelementptr inbounds ptr, ptr %10277, i64 3
  %10279 = load ptr, ptr %10278, align 8
  call void %10279(ptr noundef nonnull align 8 dereferenceable(16) %10265) #21
  br label %10291

10280:                                            ; preds = %10267
  %10281 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10282 = icmp eq i8 %10281, 0
  br i1 %10282, label %10285, label %10283

10283:                                            ; preds = %10280
  %10284 = add nsw i32 %10271, -1
  store i32 %10284, ptr %10268, align 8, !tbaa !73
  br label %10287

10285:                                            ; preds = %10280
  %10286 = atomicrmw volatile add ptr %10268, i32 -1 acq_rel, align 4
  br label %10287

10287:                                            ; preds = %10285, %10283
  %10288 = phi i32 [ %10271, %10283 ], [ %10286, %10285 ]
  %10289 = icmp eq i32 %10288, 1
  br i1 %10289, label %10290, label %10291, !prof !42

10290:                                            ; preds = %10287
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10265) #21
  br label %10291

10291:                                            ; preds = %10290, %10287, %10272, %10263
  %10292 = getelementptr inbounds %struct.TestCase, ptr %152, i64 8, i32 2
  %10293 = load ptr, ptr %10292, align 8, !tbaa !23
  %10294 = getelementptr inbounds %struct.TestCase, ptr %152, i64 8, i32 2, i32 2
  %10295 = icmp eq ptr %10293, %10294
  br i1 %10295, label %10297, label %10296

10296:                                            ; preds = %10291
  call void @_ZdlPv(ptr noundef %10293) #22
  br label %10297

10297:                                            ; preds = %10296, %10291
  %10298 = load ptr, ptr %9821, align 8, !tbaa !23
  %10299 = getelementptr inbounds %struct.TestCase, ptr %152, i64 8, i32 0, i32 2
  %10300 = icmp eq ptr %10298, %10299
  br i1 %10300, label %10302, label %10301

10301:                                            ; preds = %10297
  call void @_ZdlPv(ptr noundef %10298) #22
  br label %10302

10302:                                            ; preds = %10297, %10301
  %10303 = getelementptr inbounds %struct.TestCase, ptr %152, i64 7, i32 3, i32 0, i32 1
  %10304 = load ptr, ptr %10303, align 8, !tbaa !88
  %10305 = icmp eq ptr %10304, null
  br i1 %10305, label %10330, label %10306

10306:                                            ; preds = %10302
  %10307 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10304, i64 0, i32 1
  %10308 = load atomic i64, ptr %10307 acquire, align 8
  %10309 = icmp eq i64 %10308, 4294967297
  %10310 = trunc i64 %10308 to i32
  br i1 %10309, label %10311, label %10319

10311:                                            ; preds = %10306
  store i32 0, ptr %10307, align 8, !tbaa !90
  %10312 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10304, i64 0, i32 2
  store i32 0, ptr %10312, align 4, !tbaa !92
  %10313 = load ptr, ptr %10304, align 8, !tbaa !58
  %10314 = getelementptr inbounds ptr, ptr %10313, i64 2
  %10315 = load ptr, ptr %10314, align 8
  call void %10315(ptr noundef nonnull align 8 dereferenceable(16) %10304) #21
  %10316 = load ptr, ptr %10304, align 8, !tbaa !58
  %10317 = getelementptr inbounds ptr, ptr %10316, i64 3
  %10318 = load ptr, ptr %10317, align 8
  call void %10318(ptr noundef nonnull align 8 dereferenceable(16) %10304) #21
  br label %10330

10319:                                            ; preds = %10306
  %10320 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10321 = icmp eq i8 %10320, 0
  br i1 %10321, label %10324, label %10322

10322:                                            ; preds = %10319
  %10323 = add nsw i32 %10310, -1
  store i32 %10323, ptr %10307, align 8, !tbaa !73
  br label %10326

10324:                                            ; preds = %10319
  %10325 = atomicrmw volatile add ptr %10307, i32 -1 acq_rel, align 4
  br label %10326

10326:                                            ; preds = %10324, %10322
  %10327 = phi i32 [ %10310, %10322 ], [ %10325, %10324 ]
  %10328 = icmp eq i32 %10327, 1
  br i1 %10328, label %10329, label %10330, !prof !42

10329:                                            ; preds = %10326
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10304) #21
  br label %10330

10330:                                            ; preds = %10329, %10326, %10311, %10302
  %10331 = getelementptr inbounds %struct.TestCase, ptr %152, i64 7, i32 2
  %10332 = load ptr, ptr %10331, align 8, !tbaa !23
  %10333 = getelementptr inbounds %struct.TestCase, ptr %152, i64 7, i32 2, i32 2
  %10334 = icmp eq ptr %10332, %10333
  br i1 %10334, label %10336, label %10335

10335:                                            ; preds = %10330
  call void @_ZdlPv(ptr noundef %10332) #22
  br label %10336

10336:                                            ; preds = %10335, %10330
  %10337 = load ptr, ptr %9816, align 8, !tbaa !23
  %10338 = getelementptr inbounds %struct.TestCase, ptr %152, i64 7, i32 0, i32 2
  %10339 = icmp eq ptr %10337, %10338
  br i1 %10339, label %10341, label %10340

10340:                                            ; preds = %10336
  call void @_ZdlPv(ptr noundef %10337) #22
  br label %10341

10341:                                            ; preds = %10336, %10340
  %10342 = getelementptr inbounds %struct.TestCase, ptr %152, i64 6, i32 3, i32 0, i32 1
  %10343 = load ptr, ptr %10342, align 8, !tbaa !88
  %10344 = icmp eq ptr %10343, null
  br i1 %10344, label %10369, label %10345

10345:                                            ; preds = %10341
  %10346 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10343, i64 0, i32 1
  %10347 = load atomic i64, ptr %10346 acquire, align 8
  %10348 = icmp eq i64 %10347, 4294967297
  %10349 = trunc i64 %10347 to i32
  br i1 %10348, label %10350, label %10358

10350:                                            ; preds = %10345
  store i32 0, ptr %10346, align 8, !tbaa !90
  %10351 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10343, i64 0, i32 2
  store i32 0, ptr %10351, align 4, !tbaa !92
  %10352 = load ptr, ptr %10343, align 8, !tbaa !58
  %10353 = getelementptr inbounds ptr, ptr %10352, i64 2
  %10354 = load ptr, ptr %10353, align 8
  call void %10354(ptr noundef nonnull align 8 dereferenceable(16) %10343) #21
  %10355 = load ptr, ptr %10343, align 8, !tbaa !58
  %10356 = getelementptr inbounds ptr, ptr %10355, i64 3
  %10357 = load ptr, ptr %10356, align 8
  call void %10357(ptr noundef nonnull align 8 dereferenceable(16) %10343) #21
  br label %10369

10358:                                            ; preds = %10345
  %10359 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10360 = icmp eq i8 %10359, 0
  br i1 %10360, label %10363, label %10361

10361:                                            ; preds = %10358
  %10362 = add nsw i32 %10349, -1
  store i32 %10362, ptr %10346, align 8, !tbaa !73
  br label %10365

10363:                                            ; preds = %10358
  %10364 = atomicrmw volatile add ptr %10346, i32 -1 acq_rel, align 4
  br label %10365

10365:                                            ; preds = %10363, %10361
  %10366 = phi i32 [ %10349, %10361 ], [ %10364, %10363 ]
  %10367 = icmp eq i32 %10366, 1
  br i1 %10367, label %10368, label %10369, !prof !42

10368:                                            ; preds = %10365
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10343) #21
  br label %10369

10369:                                            ; preds = %10368, %10365, %10350, %10341
  %10370 = getelementptr inbounds %struct.TestCase, ptr %152, i64 6, i32 2
  %10371 = load ptr, ptr %10370, align 8, !tbaa !23
  %10372 = getelementptr inbounds %struct.TestCase, ptr %152, i64 6, i32 2, i32 2
  %10373 = icmp eq ptr %10371, %10372
  br i1 %10373, label %10375, label %10374

10374:                                            ; preds = %10369
  call void @_ZdlPv(ptr noundef %10371) #22
  br label %10375

10375:                                            ; preds = %10374, %10369
  %10376 = load ptr, ptr %9807, align 8, !tbaa !23
  %10377 = getelementptr inbounds %struct.TestCase, ptr %152, i64 6, i32 0, i32 2
  %10378 = icmp eq ptr %10376, %10377
  br i1 %10378, label %10380, label %10379

10379:                                            ; preds = %10375
  call void @_ZdlPv(ptr noundef %10376) #22
  br label %10380

10380:                                            ; preds = %10375, %10379
  %10381 = getelementptr inbounds %struct.TestCase, ptr %152, i64 5, i32 3, i32 0, i32 1
  %10382 = load ptr, ptr %10381, align 8, !tbaa !88
  %10383 = icmp eq ptr %10382, null
  br i1 %10383, label %10408, label %10384

10384:                                            ; preds = %10380
  %10385 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10382, i64 0, i32 1
  %10386 = load atomic i64, ptr %10385 acquire, align 8
  %10387 = icmp eq i64 %10386, 4294967297
  %10388 = trunc i64 %10386 to i32
  br i1 %10387, label %10389, label %10397

10389:                                            ; preds = %10384
  store i32 0, ptr %10385, align 8, !tbaa !90
  %10390 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10382, i64 0, i32 2
  store i32 0, ptr %10390, align 4, !tbaa !92
  %10391 = load ptr, ptr %10382, align 8, !tbaa !58
  %10392 = getelementptr inbounds ptr, ptr %10391, i64 2
  %10393 = load ptr, ptr %10392, align 8
  call void %10393(ptr noundef nonnull align 8 dereferenceable(16) %10382) #21
  %10394 = load ptr, ptr %10382, align 8, !tbaa !58
  %10395 = getelementptr inbounds ptr, ptr %10394, i64 3
  %10396 = load ptr, ptr %10395, align 8
  call void %10396(ptr noundef nonnull align 8 dereferenceable(16) %10382) #21
  br label %10408

10397:                                            ; preds = %10384
  %10398 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10399 = icmp eq i8 %10398, 0
  br i1 %10399, label %10402, label %10400

10400:                                            ; preds = %10397
  %10401 = add nsw i32 %10388, -1
  store i32 %10401, ptr %10385, align 8, !tbaa !73
  br label %10404

10402:                                            ; preds = %10397
  %10403 = atomicrmw volatile add ptr %10385, i32 -1 acq_rel, align 4
  br label %10404

10404:                                            ; preds = %10402, %10400
  %10405 = phi i32 [ %10388, %10400 ], [ %10403, %10402 ]
  %10406 = icmp eq i32 %10405, 1
  br i1 %10406, label %10407, label %10408, !prof !42

10407:                                            ; preds = %10404
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10382) #21
  br label %10408

10408:                                            ; preds = %10407, %10404, %10389, %10380
  %10409 = getelementptr inbounds %struct.TestCase, ptr %152, i64 5, i32 2
  %10410 = load ptr, ptr %10409, align 8, !tbaa !23
  %10411 = getelementptr inbounds %struct.TestCase, ptr %152, i64 5, i32 2, i32 2
  %10412 = icmp eq ptr %10410, %10411
  br i1 %10412, label %10414, label %10413

10413:                                            ; preds = %10408
  call void @_ZdlPv(ptr noundef %10410) #22
  br label %10414

10414:                                            ; preds = %10413, %10408
  %10415 = load ptr, ptr %9798, align 8, !tbaa !23
  %10416 = getelementptr inbounds %struct.TestCase, ptr %152, i64 5, i32 0, i32 2
  %10417 = icmp eq ptr %10415, %10416
  br i1 %10417, label %10419, label %10418

10418:                                            ; preds = %10414
  call void @_ZdlPv(ptr noundef %10415) #22
  br label %10419

10419:                                            ; preds = %10414, %10418
  %10420 = getelementptr inbounds %struct.TestCase, ptr %152, i64 4, i32 3, i32 0, i32 1
  %10421 = load ptr, ptr %10420, align 8, !tbaa !88
  %10422 = icmp eq ptr %10421, null
  br i1 %10422, label %10447, label %10423

10423:                                            ; preds = %10419
  %10424 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10421, i64 0, i32 1
  %10425 = load atomic i64, ptr %10424 acquire, align 8
  %10426 = icmp eq i64 %10425, 4294967297
  %10427 = trunc i64 %10425 to i32
  br i1 %10426, label %10428, label %10436

10428:                                            ; preds = %10423
  store i32 0, ptr %10424, align 8, !tbaa !90
  %10429 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10421, i64 0, i32 2
  store i32 0, ptr %10429, align 4, !tbaa !92
  %10430 = load ptr, ptr %10421, align 8, !tbaa !58
  %10431 = getelementptr inbounds ptr, ptr %10430, i64 2
  %10432 = load ptr, ptr %10431, align 8
  call void %10432(ptr noundef nonnull align 8 dereferenceable(16) %10421) #21
  %10433 = load ptr, ptr %10421, align 8, !tbaa !58
  %10434 = getelementptr inbounds ptr, ptr %10433, i64 3
  %10435 = load ptr, ptr %10434, align 8
  call void %10435(ptr noundef nonnull align 8 dereferenceable(16) %10421) #21
  br label %10447

10436:                                            ; preds = %10423
  %10437 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10438 = icmp eq i8 %10437, 0
  br i1 %10438, label %10441, label %10439

10439:                                            ; preds = %10436
  %10440 = add nsw i32 %10427, -1
  store i32 %10440, ptr %10424, align 8, !tbaa !73
  br label %10443

10441:                                            ; preds = %10436
  %10442 = atomicrmw volatile add ptr %10424, i32 -1 acq_rel, align 4
  br label %10443

10443:                                            ; preds = %10441, %10439
  %10444 = phi i32 [ %10427, %10439 ], [ %10442, %10441 ]
  %10445 = icmp eq i32 %10444, 1
  br i1 %10445, label %10446, label %10447, !prof !42

10446:                                            ; preds = %10443
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10421) #21
  br label %10447

10447:                                            ; preds = %10446, %10443, %10428, %10419
  %10448 = getelementptr inbounds %struct.TestCase, ptr %152, i64 4, i32 2
  %10449 = load ptr, ptr %10448, align 8, !tbaa !23
  %10450 = getelementptr inbounds %struct.TestCase, ptr %152, i64 4, i32 2, i32 2
  %10451 = icmp eq ptr %10449, %10450
  br i1 %10451, label %10453, label %10452

10452:                                            ; preds = %10447
  call void @_ZdlPv(ptr noundef %10449) #22
  br label %10453

10453:                                            ; preds = %10452, %10447
  %10454 = load ptr, ptr %9789, align 8, !tbaa !23
  %10455 = getelementptr inbounds %struct.TestCase, ptr %152, i64 4, i32 0, i32 2
  %10456 = icmp eq ptr %10454, %10455
  br i1 %10456, label %10458, label %10457

10457:                                            ; preds = %10453
  call void @_ZdlPv(ptr noundef %10454) #22
  br label %10458

10458:                                            ; preds = %10453, %10457
  %10459 = getelementptr inbounds %struct.TestCase, ptr %152, i64 3, i32 3, i32 0, i32 1
  %10460 = load ptr, ptr %10459, align 8, !tbaa !88
  %10461 = icmp eq ptr %10460, null
  br i1 %10461, label %10486, label %10462

10462:                                            ; preds = %10458
  %10463 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10460, i64 0, i32 1
  %10464 = load atomic i64, ptr %10463 acquire, align 8
  %10465 = icmp eq i64 %10464, 4294967297
  %10466 = trunc i64 %10464 to i32
  br i1 %10465, label %10467, label %10475

10467:                                            ; preds = %10462
  store i32 0, ptr %10463, align 8, !tbaa !90
  %10468 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10460, i64 0, i32 2
  store i32 0, ptr %10468, align 4, !tbaa !92
  %10469 = load ptr, ptr %10460, align 8, !tbaa !58
  %10470 = getelementptr inbounds ptr, ptr %10469, i64 2
  %10471 = load ptr, ptr %10470, align 8
  call void %10471(ptr noundef nonnull align 8 dereferenceable(16) %10460) #21
  %10472 = load ptr, ptr %10460, align 8, !tbaa !58
  %10473 = getelementptr inbounds ptr, ptr %10472, i64 3
  %10474 = load ptr, ptr %10473, align 8
  call void %10474(ptr noundef nonnull align 8 dereferenceable(16) %10460) #21
  br label %10486

10475:                                            ; preds = %10462
  %10476 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10477 = icmp eq i8 %10476, 0
  br i1 %10477, label %10480, label %10478

10478:                                            ; preds = %10475
  %10479 = add nsw i32 %10466, -1
  store i32 %10479, ptr %10463, align 8, !tbaa !73
  br label %10482

10480:                                            ; preds = %10475
  %10481 = atomicrmw volatile add ptr %10463, i32 -1 acq_rel, align 4
  br label %10482

10482:                                            ; preds = %10480, %10478
  %10483 = phi i32 [ %10466, %10478 ], [ %10481, %10480 ]
  %10484 = icmp eq i32 %10483, 1
  br i1 %10484, label %10485, label %10486, !prof !42

10485:                                            ; preds = %10482
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10460) #21
  br label %10486

10486:                                            ; preds = %10485, %10482, %10467, %10458
  %10487 = getelementptr inbounds %struct.TestCase, ptr %152, i64 3, i32 2
  %10488 = load ptr, ptr %10487, align 8, !tbaa !23
  %10489 = getelementptr inbounds %struct.TestCase, ptr %152, i64 3, i32 2, i32 2
  %10490 = icmp eq ptr %10488, %10489
  br i1 %10490, label %10492, label %10491

10491:                                            ; preds = %10486
  call void @_ZdlPv(ptr noundef %10488) #22
  br label %10492

10492:                                            ; preds = %10491, %10486
  %10493 = load ptr, ptr %9781, align 8, !tbaa !23
  %10494 = getelementptr inbounds %struct.TestCase, ptr %152, i64 3, i32 0, i32 2
  %10495 = icmp eq ptr %10493, %10494
  br i1 %10495, label %10497, label %10496

10496:                                            ; preds = %10492
  call void @_ZdlPv(ptr noundef %10493) #22
  br label %10497

10497:                                            ; preds = %10492, %10496
  %10498 = getelementptr inbounds %struct.TestCase, ptr %152, i64 2, i32 3, i32 0, i32 1
  %10499 = load ptr, ptr %10498, align 8, !tbaa !88
  %10500 = icmp eq ptr %10499, null
  br i1 %10500, label %10525, label %10501

10501:                                            ; preds = %10497
  %10502 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10499, i64 0, i32 1
  %10503 = load atomic i64, ptr %10502 acquire, align 8
  %10504 = icmp eq i64 %10503, 4294967297
  %10505 = trunc i64 %10503 to i32
  br i1 %10504, label %10506, label %10514

10506:                                            ; preds = %10501
  store i32 0, ptr %10502, align 8, !tbaa !90
  %10507 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10499, i64 0, i32 2
  store i32 0, ptr %10507, align 4, !tbaa !92
  %10508 = load ptr, ptr %10499, align 8, !tbaa !58
  %10509 = getelementptr inbounds ptr, ptr %10508, i64 2
  %10510 = load ptr, ptr %10509, align 8
  call void %10510(ptr noundef nonnull align 8 dereferenceable(16) %10499) #21
  %10511 = load ptr, ptr %10499, align 8, !tbaa !58
  %10512 = getelementptr inbounds ptr, ptr %10511, i64 3
  %10513 = load ptr, ptr %10512, align 8
  call void %10513(ptr noundef nonnull align 8 dereferenceable(16) %10499) #21
  br label %10525

10514:                                            ; preds = %10501
  %10515 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10516 = icmp eq i8 %10515, 0
  br i1 %10516, label %10519, label %10517

10517:                                            ; preds = %10514
  %10518 = add nsw i32 %10505, -1
  store i32 %10518, ptr %10502, align 8, !tbaa !73
  br label %10521

10519:                                            ; preds = %10514
  %10520 = atomicrmw volatile add ptr %10502, i32 -1 acq_rel, align 4
  br label %10521

10521:                                            ; preds = %10519, %10517
  %10522 = phi i32 [ %10505, %10517 ], [ %10520, %10519 ]
  %10523 = icmp eq i32 %10522, 1
  br i1 %10523, label %10524, label %10525, !prof !42

10524:                                            ; preds = %10521
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10499) #21
  br label %10525

10525:                                            ; preds = %10524, %10521, %10506, %10497
  %10526 = getelementptr inbounds %struct.TestCase, ptr %152, i64 2, i32 2
  %10527 = load ptr, ptr %10526, align 8, !tbaa !23
  %10528 = getelementptr inbounds %struct.TestCase, ptr %152, i64 2, i32 2, i32 2
  %10529 = icmp eq ptr %10527, %10528
  br i1 %10529, label %10531, label %10530

10530:                                            ; preds = %10525
  call void @_ZdlPv(ptr noundef %10527) #22
  br label %10531

10531:                                            ; preds = %10530, %10525
  %10532 = load ptr, ptr %9772, align 8, !tbaa !23
  %10533 = getelementptr inbounds %struct.TestCase, ptr %152, i64 2, i32 0, i32 2
  %10534 = icmp eq ptr %10532, %10533
  br i1 %10534, label %10536, label %10535

10535:                                            ; preds = %10531
  call void @_ZdlPv(ptr noundef %10532) #22
  br label %10536

10536:                                            ; preds = %10531, %10535
  %10537 = getelementptr inbounds %struct.TestCase, ptr %152, i64 1, i32 3, i32 0, i32 1
  %10538 = load ptr, ptr %10537, align 8, !tbaa !88
  %10539 = icmp eq ptr %10538, null
  br i1 %10539, label %10564, label %10540

10540:                                            ; preds = %10536
  %10541 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10538, i64 0, i32 1
  %10542 = load atomic i64, ptr %10541 acquire, align 8
  %10543 = icmp eq i64 %10542, 4294967297
  %10544 = trunc i64 %10542 to i32
  br i1 %10543, label %10545, label %10553

10545:                                            ; preds = %10540
  store i32 0, ptr %10541, align 8, !tbaa !90
  %10546 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10538, i64 0, i32 2
  store i32 0, ptr %10546, align 4, !tbaa !92
  %10547 = load ptr, ptr %10538, align 8, !tbaa !58
  %10548 = getelementptr inbounds ptr, ptr %10547, i64 2
  %10549 = load ptr, ptr %10548, align 8
  call void %10549(ptr noundef nonnull align 8 dereferenceable(16) %10538) #21
  %10550 = load ptr, ptr %10538, align 8, !tbaa !58
  %10551 = getelementptr inbounds ptr, ptr %10550, i64 3
  %10552 = load ptr, ptr %10551, align 8
  call void %10552(ptr noundef nonnull align 8 dereferenceable(16) %10538) #21
  br label %10564

10553:                                            ; preds = %10540
  %10554 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10555 = icmp eq i8 %10554, 0
  br i1 %10555, label %10558, label %10556

10556:                                            ; preds = %10553
  %10557 = add nsw i32 %10544, -1
  store i32 %10557, ptr %10541, align 8, !tbaa !73
  br label %10560

10558:                                            ; preds = %10553
  %10559 = atomicrmw volatile add ptr %10541, i32 -1 acq_rel, align 4
  br label %10560

10560:                                            ; preds = %10558, %10556
  %10561 = phi i32 [ %10544, %10556 ], [ %10559, %10558 ]
  %10562 = icmp eq i32 %10561, 1
  br i1 %10562, label %10563, label %10564, !prof !42

10563:                                            ; preds = %10560
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10538) #21
  br label %10564

10564:                                            ; preds = %10563, %10560, %10545, %10536
  %10565 = getelementptr inbounds %struct.TestCase, ptr %152, i64 1, i32 2
  %10566 = load ptr, ptr %10565, align 8, !tbaa !23
  %10567 = getelementptr inbounds %struct.TestCase, ptr %152, i64 1, i32 2, i32 2
  %10568 = icmp eq ptr %10566, %10567
  br i1 %10568, label %10570, label %10569

10569:                                            ; preds = %10564
  call void @_ZdlPv(ptr noundef %10566) #22
  br label %10570

10570:                                            ; preds = %10569, %10564
  %10571 = load ptr, ptr %9763, align 8, !tbaa !23
  %10572 = getelementptr inbounds %struct.TestCase, ptr %152, i64 1, i32 0, i32 2
  %10573 = icmp eq ptr %10571, %10572
  br i1 %10573, label %10575, label %10574

10574:                                            ; preds = %10570
  call void @_ZdlPv(ptr noundef %10571) #22
  br label %10575

10575:                                            ; preds = %10570, %10574
  %10576 = getelementptr inbounds %struct.TestCase, ptr %152, i64 0, i32 3, i32 0, i32 1
  %10577 = load ptr, ptr %10576, align 8, !tbaa !88
  %10578 = icmp eq ptr %10577, null
  br i1 %10578, label %10603, label %10579

10579:                                            ; preds = %10575
  %10580 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10577, i64 0, i32 1
  %10581 = load atomic i64, ptr %10580 acquire, align 8
  %10582 = icmp eq i64 %10581, 4294967297
  %10583 = trunc i64 %10581 to i32
  br i1 %10582, label %10584, label %10592

10584:                                            ; preds = %10579
  store i32 0, ptr %10580, align 8, !tbaa !90
  %10585 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10577, i64 0, i32 2
  store i32 0, ptr %10585, align 4, !tbaa !92
  %10586 = load ptr, ptr %10577, align 8, !tbaa !58
  %10587 = getelementptr inbounds ptr, ptr %10586, i64 2
  %10588 = load ptr, ptr %10587, align 8
  call void %10588(ptr noundef nonnull align 8 dereferenceable(16) %10577) #21
  %10589 = load ptr, ptr %10577, align 8, !tbaa !58
  %10590 = getelementptr inbounds ptr, ptr %10589, i64 3
  %10591 = load ptr, ptr %10590, align 8
  call void %10591(ptr noundef nonnull align 8 dereferenceable(16) %10577) #21
  br label %10603

10592:                                            ; preds = %10579
  %10593 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10594 = icmp eq i8 %10593, 0
  br i1 %10594, label %10597, label %10595

10595:                                            ; preds = %10592
  %10596 = add nsw i32 %10583, -1
  store i32 %10596, ptr %10580, align 8, !tbaa !73
  br label %10599

10597:                                            ; preds = %10592
  %10598 = atomicrmw volatile add ptr %10580, i32 -1 acq_rel, align 4
  br label %10599

10599:                                            ; preds = %10597, %10595
  %10600 = phi i32 [ %10583, %10595 ], [ %10598, %10597 ]
  %10601 = icmp eq i32 %10600, 1
  br i1 %10601, label %10602, label %10603, !prof !42

10602:                                            ; preds = %10599
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10577) #21
  br label %10603

10603:                                            ; preds = %10602, %10599, %10584, %10575
  %10604 = getelementptr inbounds %struct.TestCase, ptr %152, i64 0, i32 2
  %10605 = load ptr, ptr %10604, align 8, !tbaa !23
  %10606 = getelementptr inbounds %struct.TestCase, ptr %152, i64 0, i32 2, i32 2
  %10607 = icmp eq ptr %10605, %10606
  br i1 %10607, label %10609, label %10608

10608:                                            ; preds = %10603
  call void @_ZdlPv(ptr noundef %10605) #22
  br label %10609

10609:                                            ; preds = %10608, %10603
  %10610 = load ptr, ptr %152, align 8, !tbaa !23
  %10611 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %152, i64 0, i32 2
  %10612 = icmp eq ptr %10610, %10611
  br i1 %10612, label %10614, label %10613

10613:                                            ; preds = %10609
  call void @_ZdlPv(ptr noundef %10610) #22
  br label %10614

10614:                                            ; preds = %10613, %10609, %10026
  %10615 = phi { ptr, i32 } [ %10027, %10026 ], [ %10029, %10609 ], [ %10029, %10613 ]
  %10616 = phi i1 [ true, %10026 ], [ false, %10609 ], [ false, %10613 ]
  %10617 = load ptr, ptr %167, align 8, !tbaa !23
  %10618 = icmp eq ptr %10617, %9868
  br i1 %10618, label %10620, label %10619

10619:                                            ; preds = %10614
  call void @_ZdlPv(ptr noundef %10617) #22
  br label %10620

10620:                                            ; preds = %10619, %10614, %10024
  %10621 = phi ptr [ %9862, %10024 ], [ %9867, %10619 ], [ %9867, %10614 ]
  %10622 = phi { ptr, i32 } [ %10025, %10024 ], [ %10615, %10619 ], [ %10615, %10614 ]
  %10623 = phi i1 [ true, %10024 ], [ %10616, %10619 ], [ %10616, %10614 ]
  %10624 = load ptr, ptr %166, align 8, !tbaa !23
  %10625 = icmp eq ptr %10624, %9863
  br i1 %10625, label %10627, label %10626

10626:                                            ; preds = %10620
  call void @_ZdlPv(ptr noundef %10624) #22
  br label %10627

10627:                                            ; preds = %10626, %10620, %10022
  %10628 = phi ptr [ %9857, %10022 ], [ %10621, %10626 ], [ %10621, %10620 ]
  %10629 = phi { ptr, i32 } [ %10023, %10022 ], [ %10622, %10626 ], [ %10622, %10620 ]
  %10630 = phi i1 [ true, %10022 ], [ %10623, %10626 ], [ %10623, %10620 ]
  %10631 = load ptr, ptr %165, align 8, !tbaa !23
  %10632 = icmp eq ptr %10631, %9858
  br i1 %10632, label %10634, label %10633

10633:                                            ; preds = %10627
  call void @_ZdlPv(ptr noundef %10631) #22
  br label %10634

10634:                                            ; preds = %10633, %10627, %10020
  %10635 = phi ptr [ %9848, %10020 ], [ %10628, %10633 ], [ %10628, %10627 ]
  %10636 = phi { ptr, i32 } [ %10021, %10020 ], [ %10629, %10633 ], [ %10629, %10627 ]
  %10637 = phi i1 [ true, %10020 ], [ %10630, %10633 ], [ %10630, %10627 ]
  %10638 = load ptr, ptr %164, align 8, !tbaa !23
  %10639 = icmp eq ptr %10638, %9849
  br i1 %10639, label %10641, label %10640

10640:                                            ; preds = %10634
  call void @_ZdlPv(ptr noundef %10638) #22
  br label %10641

10641:                                            ; preds = %10640, %10634, %10018, %10016
  %10642 = phi ptr [ %9839, %10016 ], [ %9848, %10018 ], [ %10635, %10634 ], [ %10635, %10640 ]
  %10643 = phi { ptr, i32 } [ %10017, %10016 ], [ %10019, %10018 ], [ %10636, %10634 ], [ %10636, %10640 ]
  %10644 = phi i1 [ true, %10016 ], [ true, %10018 ], [ %10637, %10634 ], [ %10637, %10640 ]
  %10645 = load ptr, ptr %163, align 8, !tbaa !23
  %10646 = icmp eq ptr %10645, %9840
  br i1 %10646, label %10648, label %10647

10647:                                            ; preds = %10641
  call void @_ZdlPv(ptr noundef %10645) #22
  br label %10648

10648:                                            ; preds = %10647, %10641, %10014, %10012
  %10649 = phi ptr [ %9830, %10012 ], [ %9839, %10014 ], [ %10642, %10641 ], [ %10642, %10647 ]
  %10650 = phi { ptr, i32 } [ %10013, %10012 ], [ %10015, %10014 ], [ %10643, %10641 ], [ %10643, %10647 ]
  %10651 = phi i1 [ true, %10012 ], [ true, %10014 ], [ %10644, %10641 ], [ %10644, %10647 ]
  %10652 = load ptr, ptr %162, align 8, !tbaa !23
  %10653 = icmp eq ptr %10652, %9831
  br i1 %10653, label %10655, label %10654

10654:                                            ; preds = %10648
  call void @_ZdlPv(ptr noundef %10652) #22
  br label %10655

10655:                                            ; preds = %10654, %10648, %10010, %10008
  %10656 = phi ptr [ %9821, %10008 ], [ %9830, %10010 ], [ %10649, %10648 ], [ %10649, %10654 ]
  %10657 = phi { ptr, i32 } [ %10009, %10008 ], [ %10011, %10010 ], [ %10650, %10648 ], [ %10650, %10654 ]
  %10658 = phi i1 [ true, %10008 ], [ true, %10010 ], [ %10651, %10648 ], [ %10651, %10654 ]
  %10659 = load ptr, ptr %161, align 8, !tbaa !23
  %10660 = icmp eq ptr %10659, %9822
  br i1 %10660, label %10662, label %10661

10661:                                            ; preds = %10655
  call void @_ZdlPv(ptr noundef %10659) #22
  br label %10662

10662:                                            ; preds = %10661, %10655, %10006, %10004
  %10663 = phi ptr [ %9816, %10004 ], [ %9821, %10006 ], [ %10656, %10655 ], [ %10656, %10661 ]
  %10664 = phi { ptr, i32 } [ %10005, %10004 ], [ %10007, %10006 ], [ %10657, %10655 ], [ %10657, %10661 ]
  %10665 = phi i1 [ true, %10004 ], [ true, %10006 ], [ %10658, %10655 ], [ %10658, %10661 ]
  %10666 = load ptr, ptr %160, align 8, !tbaa !23
  %10667 = icmp eq ptr %10666, %9817
  br i1 %10667, label %10669, label %10668

10668:                                            ; preds = %10662
  call void @_ZdlPv(ptr noundef %10666) #22
  br label %10669

10669:                                            ; preds = %10668, %10662, %10002
  %10670 = phi ptr [ %9807, %10002 ], [ %10663, %10668 ], [ %10663, %10662 ]
  %10671 = phi { ptr, i32 } [ %10003, %10002 ], [ %10664, %10668 ], [ %10664, %10662 ]
  %10672 = phi i1 [ true, %10002 ], [ %10665, %10668 ], [ %10665, %10662 ]
  %10673 = load ptr, ptr %159, align 8, !tbaa !23
  %10674 = icmp eq ptr %10673, %9808
  br i1 %10674, label %10676, label %10675

10675:                                            ; preds = %10669
  call void @_ZdlPv(ptr noundef %10673) #22
  br label %10676

10676:                                            ; preds = %10675, %10669, %10000, %9998
  %10677 = phi ptr [ %9798, %9998 ], [ %9807, %10000 ], [ %10670, %10669 ], [ %10670, %10675 ]
  %10678 = phi { ptr, i32 } [ %9999, %9998 ], [ %10001, %10000 ], [ %10671, %10669 ], [ %10671, %10675 ]
  %10679 = phi i1 [ true, %9998 ], [ true, %10000 ], [ %10672, %10669 ], [ %10672, %10675 ]
  %10680 = load ptr, ptr %158, align 8, !tbaa !23
  %10681 = icmp eq ptr %10680, %9799
  br i1 %10681, label %10683, label %10682

10682:                                            ; preds = %10676
  call void @_ZdlPv(ptr noundef %10680) #22
  br label %10683

10683:                                            ; preds = %10682, %10676, %9996, %9994
  %10684 = phi ptr [ %9789, %9994 ], [ %9798, %9996 ], [ %10677, %10676 ], [ %10677, %10682 ]
  %10685 = phi { ptr, i32 } [ %9995, %9994 ], [ %9997, %9996 ], [ %10678, %10676 ], [ %10678, %10682 ]
  %10686 = phi i1 [ true, %9994 ], [ true, %9996 ], [ %10679, %10676 ], [ %10679, %10682 ]
  %10687 = load ptr, ptr %157, align 8, !tbaa !23
  %10688 = icmp eq ptr %10687, %9790
  br i1 %10688, label %10690, label %10689

10689:                                            ; preds = %10683
  call void @_ZdlPv(ptr noundef %10687) #22
  br label %10690

10690:                                            ; preds = %10689, %10683, %9992, %9990
  %10691 = phi ptr [ %9781, %9990 ], [ %9789, %9992 ], [ %10684, %10683 ], [ %10684, %10689 ]
  %10692 = phi { ptr, i32 } [ %9991, %9990 ], [ %9993, %9992 ], [ %10685, %10683 ], [ %10685, %10689 ]
  %10693 = phi i1 [ true, %9990 ], [ true, %9992 ], [ %10686, %10683 ], [ %10686, %10689 ]
  %10694 = load ptr, ptr %156, align 8, !tbaa !23
  %10695 = icmp eq ptr %10694, %9782
  br i1 %10695, label %10697, label %10696

10696:                                            ; preds = %10690
  call void @_ZdlPv(ptr noundef %10694) #22
  br label %10697

10697:                                            ; preds = %10696, %10690, %9988, %9986
  %10698 = phi ptr [ %9772, %9986 ], [ %9781, %9988 ], [ %10691, %10690 ], [ %10691, %10696 ]
  %10699 = phi { ptr, i32 } [ %9987, %9986 ], [ %9989, %9988 ], [ %10692, %10690 ], [ %10692, %10696 ]
  %10700 = phi i1 [ true, %9986 ], [ true, %9988 ], [ %10693, %10690 ], [ %10693, %10696 ]
  %10701 = load ptr, ptr %155, align 8, !tbaa !23
  %10702 = icmp eq ptr %10701, %9773
  br i1 %10702, label %10704, label %10703

10703:                                            ; preds = %10697
  call void @_ZdlPv(ptr noundef %10701) #22
  br label %10704

10704:                                            ; preds = %10703, %10697, %9984, %9982
  %10705 = phi ptr [ %9763, %9982 ], [ %9772, %9984 ], [ %10698, %10697 ], [ %10698, %10703 ]
  %10706 = phi { ptr, i32 } [ %9983, %9982 ], [ %9985, %9984 ], [ %10699, %10697 ], [ %10699, %10703 ]
  %10707 = phi i1 [ true, %9982 ], [ true, %9984 ], [ %10700, %10697 ], [ %10700, %10703 ]
  %10708 = load ptr, ptr %154, align 8, !tbaa !23
  %10709 = icmp eq ptr %10708, %9764
  br i1 %10709, label %10711, label %10710

10710:                                            ; preds = %10704
  call void @_ZdlPv(ptr noundef %10708) #22
  br label %10711

10711:                                            ; preds = %10710, %10704, %9980, %9978
  %10712 = phi ptr [ %152, %9978 ], [ %9763, %9980 ], [ %10705, %10704 ], [ %10705, %10710 ]
  %10713 = phi { ptr, i32 } [ %9979, %9978 ], [ %9981, %9980 ], [ %10706, %10704 ], [ %10706, %10710 ]
  %10714 = phi i1 [ true, %9978 ], [ true, %9980 ], [ %10707, %10704 ], [ %10707, %10710 ]
  %10715 = load ptr, ptr %153, align 8, !tbaa !23
  %10716 = icmp eq ptr %10715, %9757
  br i1 %10716, label %10718, label %10717

10717:                                            ; preds = %10711
  call void @_ZdlPv(ptr noundef %10715) #22
  br label %10718

10718:                                            ; preds = %10717, %10711
  %10719 = icmp ne ptr %152, %10712
  %10720 = select i1 %10714, i1 %10719, i1 false
  br i1 %10720, label %10721, label %10764

10721:                                            ; preds = %10718, %10762
  %10722 = phi ptr [ %10723, %10762 ], [ %10712, %10718 ]
  %10723 = getelementptr inbounds %struct.TestCase, ptr %10722, i64 -1
  %10724 = getelementptr %struct.TestCase, ptr %10722, i64 -1, i32 3, i32 0, i32 1
  %10725 = load ptr, ptr %10724, align 8, !tbaa !88
  %10726 = icmp eq ptr %10725, null
  br i1 %10726, label %10751, label %10727

10727:                                            ; preds = %10721
  %10728 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10725, i64 0, i32 1
  %10729 = load atomic i64, ptr %10728 acquire, align 8
  %10730 = icmp eq i64 %10729, 4294967297
  %10731 = trunc i64 %10729 to i32
  br i1 %10730, label %10732, label %10740

10732:                                            ; preds = %10727
  store i32 0, ptr %10728, align 8, !tbaa !90
  %10733 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10725, i64 0, i32 2
  store i32 0, ptr %10733, align 4, !tbaa !92
  %10734 = load ptr, ptr %10725, align 8, !tbaa !58
  %10735 = getelementptr inbounds ptr, ptr %10734, i64 2
  %10736 = load ptr, ptr %10735, align 8
  call void %10736(ptr noundef nonnull align 8 dereferenceable(16) %10725) #21
  %10737 = load ptr, ptr %10725, align 8, !tbaa !58
  %10738 = getelementptr inbounds ptr, ptr %10737, i64 3
  %10739 = load ptr, ptr %10738, align 8
  call void %10739(ptr noundef nonnull align 8 dereferenceable(16) %10725) #21
  br label %10751

10740:                                            ; preds = %10727
  %10741 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10742 = icmp eq i8 %10741, 0
  br i1 %10742, label %10745, label %10743

10743:                                            ; preds = %10740
  %10744 = add nsw i32 %10731, -1
  store i32 %10744, ptr %10728, align 8, !tbaa !73
  br label %10747

10745:                                            ; preds = %10740
  %10746 = atomicrmw volatile add ptr %10728, i32 -1 acq_rel, align 4
  br label %10747

10747:                                            ; preds = %10745, %10743
  %10748 = phi i32 [ %10731, %10743 ], [ %10746, %10745 ]
  %10749 = icmp eq i32 %10748, 1
  br i1 %10749, label %10750, label %10751, !prof !42

10750:                                            ; preds = %10747
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10725) #21
  br label %10751

10751:                                            ; preds = %10750, %10747, %10732, %10721
  %10752 = getelementptr %struct.TestCase, ptr %10722, i64 -1, i32 2
  %10753 = load ptr, ptr %10752, align 8, !tbaa !23
  %10754 = getelementptr %struct.TestCase, ptr %10722, i64 -1, i32 2, i32 2
  %10755 = icmp eq ptr %10753, %10754
  br i1 %10755, label %10757, label %10756

10756:                                            ; preds = %10751
  call void @_ZdlPv(ptr noundef %10753) #22
  br label %10757

10757:                                            ; preds = %10756, %10751
  %10758 = load ptr, ptr %10723, align 8, !tbaa !23
  %10759 = getelementptr %struct.TestCase, ptr %10722, i64 -1, i32 0, i32 2
  %10760 = icmp eq ptr %10758, %10759
  br i1 %10760, label %10762, label %10761

10761:                                            ; preds = %10757
  call void @_ZdlPv(ptr noundef %10758) #22
  br label %10762

10762:                                            ; preds = %10757, %10761
  %10763 = icmp eq ptr %10723, %152
  br i1 %10763, label %10764, label %10721

10764:                                            ; preds = %10762, %10718
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %152) #21
  br label %762

10765:                                            ; preds = %9974, %9977
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %152) #21
  store i32 %9872, ptr @dummy358, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %153)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %154)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %155)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %156)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %157)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %158)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %159)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %160)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %161)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %162)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %163)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %164)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %165)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %166)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %167)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %140)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %139) #21
  %10766 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %140, i64 0, i32 2
  store ptr %10766, ptr %140, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %138) #21
  store i64 69, ptr %138, align 8, !tbaa !74
  %10767 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %140, ptr noundef nonnull align 8 dereferenceable(8) %138, i64 noundef 0)
  store ptr %10767, ptr %140, align 8, !tbaa !23
  %10768 = load i64, ptr %138, align 8, !tbaa !74
  store i64 %10768, ptr %10766, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(69) %10767, ptr noundef nonnull align 1 dereferenceable(69) @.str.143, i64 69, i1 false)
  %10769 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %140, i64 0, i32 1
  store i64 %10768, ptr %10769, align 8, !tbaa !10
  %10770 = getelementptr inbounds i8, ptr %10767, i64 %10768
  store i8 0, ptr %10770, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %138) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %139, ptr noundef nonnull %140, i32 noundef 0)
          to label %10771 unwind label %10816

10771:                                            ; preds = %10765
  %10772 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 4, ptr nonnull %139, i64 1)
          to label %10773 unwind label %10818

10773:                                            ; preds = %10771
  %10774 = getelementptr inbounds %struct.TestCase, ptr %139, i64 0, i32 3, i32 0, i32 1
  %10775 = load ptr, ptr %10774, align 8, !tbaa !88
  %10776 = icmp eq ptr %10775, null
  br i1 %10776, label %10801, label %10777

10777:                                            ; preds = %10773
  %10778 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10775, i64 0, i32 1
  %10779 = load atomic i64, ptr %10778 acquire, align 8
  %10780 = icmp eq i64 %10779, 4294967297
  %10781 = trunc i64 %10779 to i32
  br i1 %10780, label %10782, label %10790

10782:                                            ; preds = %10777
  store i32 0, ptr %10778, align 8, !tbaa !90
  %10783 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10775, i64 0, i32 2
  store i32 0, ptr %10783, align 4, !tbaa !92
  %10784 = load ptr, ptr %10775, align 8, !tbaa !58
  %10785 = getelementptr inbounds ptr, ptr %10784, i64 2
  %10786 = load ptr, ptr %10785, align 8
  call void %10786(ptr noundef nonnull align 8 dereferenceable(16) %10775) #21
  %10787 = load ptr, ptr %10775, align 8, !tbaa !58
  %10788 = getelementptr inbounds ptr, ptr %10787, i64 3
  %10789 = load ptr, ptr %10788, align 8
  call void %10789(ptr noundef nonnull align 8 dereferenceable(16) %10775) #21
  br label %10801

10790:                                            ; preds = %10777
  %10791 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10792 = icmp eq i8 %10791, 0
  br i1 %10792, label %10795, label %10793

10793:                                            ; preds = %10790
  %10794 = add nsw i32 %10781, -1
  store i32 %10794, ptr %10778, align 8, !tbaa !73
  br label %10797

10795:                                            ; preds = %10790
  %10796 = atomicrmw volatile add ptr %10778, i32 -1 acq_rel, align 4
  br label %10797

10797:                                            ; preds = %10795, %10793
  %10798 = phi i32 [ %10781, %10793 ], [ %10796, %10795 ]
  %10799 = icmp eq i32 %10798, 1
  br i1 %10799, label %10800, label %10801, !prof !42

10800:                                            ; preds = %10797
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10775) #21
  br label %10801

10801:                                            ; preds = %10800, %10797, %10782, %10773
  %10802 = getelementptr inbounds %struct.TestCase, ptr %139, i64 0, i32 2
  %10803 = load ptr, ptr %10802, align 8, !tbaa !23
  %10804 = getelementptr inbounds %struct.TestCase, ptr %139, i64 0, i32 2, i32 2
  %10805 = icmp eq ptr %10803, %10804
  br i1 %10805, label %10807, label %10806

10806:                                            ; preds = %10801
  call void @_ZdlPv(ptr noundef %10803) #22
  br label %10807

10807:                                            ; preds = %10806, %10801
  %10808 = load ptr, ptr %139, align 8, !tbaa !23
  %10809 = getelementptr inbounds %struct.TestCase, ptr %139, i64 0, i32 0, i32 2
  %10810 = icmp eq ptr %10808, %10809
  br i1 %10810, label %10812, label %10811

10811:                                            ; preds = %10807
  call void @_ZdlPv(ptr noundef %10808) #22
  br label %10812

10812:                                            ; preds = %10811, %10807
  %10813 = load ptr, ptr %140, align 8, !tbaa !23
  %10814 = icmp eq ptr %10813, %10766
  br i1 %10814, label %10864, label %10815

10815:                                            ; preds = %10812
  call void @_ZdlPv(ptr noundef %10813) #22
  br label %10864

10816:                                            ; preds = %10765
  %10817 = landingpad { ptr, i32 }
          cleanup
  br label %10858

10818:                                            ; preds = %10771
  %10819 = landingpad { ptr, i32 }
          cleanup
  %10820 = getelementptr inbounds %struct.TestCase, ptr %139, i64 0, i32 3, i32 0, i32 1
  %10821 = load ptr, ptr %10820, align 8, !tbaa !88
  %10822 = icmp eq ptr %10821, null
  br i1 %10822, label %10847, label %10823

10823:                                            ; preds = %10818
  %10824 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10821, i64 0, i32 1
  %10825 = load atomic i64, ptr %10824 acquire, align 8
  %10826 = icmp eq i64 %10825, 4294967297
  %10827 = trunc i64 %10825 to i32
  br i1 %10826, label %10828, label %10836

10828:                                            ; preds = %10823
  store i32 0, ptr %10824, align 8, !tbaa !90
  %10829 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10821, i64 0, i32 2
  store i32 0, ptr %10829, align 4, !tbaa !92
  %10830 = load ptr, ptr %10821, align 8, !tbaa !58
  %10831 = getelementptr inbounds ptr, ptr %10830, i64 2
  %10832 = load ptr, ptr %10831, align 8
  call void %10832(ptr noundef nonnull align 8 dereferenceable(16) %10821) #21
  %10833 = load ptr, ptr %10821, align 8, !tbaa !58
  %10834 = getelementptr inbounds ptr, ptr %10833, i64 3
  %10835 = load ptr, ptr %10834, align 8
  call void %10835(ptr noundef nonnull align 8 dereferenceable(16) %10821) #21
  br label %10847

10836:                                            ; preds = %10823
  %10837 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10838 = icmp eq i8 %10837, 0
  br i1 %10838, label %10841, label %10839

10839:                                            ; preds = %10836
  %10840 = add nsw i32 %10827, -1
  store i32 %10840, ptr %10824, align 8, !tbaa !73
  br label %10843

10841:                                            ; preds = %10836
  %10842 = atomicrmw volatile add ptr %10824, i32 -1 acq_rel, align 4
  br label %10843

10843:                                            ; preds = %10841, %10839
  %10844 = phi i32 [ %10827, %10839 ], [ %10842, %10841 ]
  %10845 = icmp eq i32 %10844, 1
  br i1 %10845, label %10846, label %10847, !prof !42

10846:                                            ; preds = %10843
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10821) #21
  br label %10847

10847:                                            ; preds = %10846, %10843, %10828, %10818
  %10848 = getelementptr inbounds %struct.TestCase, ptr %139, i64 0, i32 2
  %10849 = load ptr, ptr %10848, align 8, !tbaa !23
  %10850 = getelementptr inbounds %struct.TestCase, ptr %139, i64 0, i32 2, i32 2
  %10851 = icmp eq ptr %10849, %10850
  br i1 %10851, label %10853, label %10852

10852:                                            ; preds = %10847
  call void @_ZdlPv(ptr noundef %10849) #22
  br label %10853

10853:                                            ; preds = %10852, %10847
  %10854 = load ptr, ptr %139, align 8, !tbaa !23
  %10855 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %139, i64 0, i32 2
  %10856 = icmp eq ptr %10854, %10855
  br i1 %10856, label %10858, label %10857

10857:                                            ; preds = %10853
  call void @_ZdlPv(ptr noundef %10854) #22
  br label %10858

10858:                                            ; preds = %10857, %10853, %10816
  %10859 = phi { ptr, i32 } [ %10817, %10816 ], [ %10819, %10853 ], [ %10819, %10857 ]
  %10860 = load ptr, ptr %140, align 8, !tbaa !23
  %10861 = icmp eq ptr %10860, %10766
  br i1 %10861, label %10863, label %10862

10862:                                            ; preds = %10858
  call void @_ZdlPv(ptr noundef %10860) #22
  br label %10863

10863:                                            ; preds = %10862, %10858
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %139) #21
  br label %762

10864:                                            ; preds = %10812, %10815
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %139) #21
  store i32 %10772, ptr @dummy360, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %140)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %137) #21
  %10865 = getelementptr inbounds i8, ptr %137, i64 8
  store i64 0, ptr %10865, align 8
  %10866 = getelementptr inbounds %"class.std::function", ptr %137, i64 0, i32 1
  %10867 = getelementptr inbounds %"class.std::_Function_base", ptr %137, i64 0, i32 1
  store ptr @_Z19CheckAvgThreadsRateRK7Results, ptr %137, align 8, !tbaa !47
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E9_M_invokeERKSt9_Any_dataS2_, ptr %10866, align 8, !tbaa !115
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, ptr %10867, align 8, !tbaa !118
  %10868 = invoke noundef i64 @_Z10AddCheckerPKcRKSt8functionIFvRK7ResultsEE(ptr noundef nonnull @.str.147, ptr noundef nonnull align 8 dereferenceable(32) %137)
          to label %10869 unwind label %10877

10869:                                            ; preds = %10864
  %10870 = load ptr, ptr %10867, align 8, !tbaa !118
  %10871 = icmp eq ptr %10870, null
  br i1 %10871, label %10887, label %10872

10872:                                            ; preds = %10869
  %10873 = invoke noundef zeroext i1 %10870(ptr noundef nonnull align 8 dereferenceable(16) %137, ptr noundef nonnull align 8 dereferenceable(16) %137, i32 noundef 3)
          to label %10887 unwind label %10874

10874:                                            ; preds = %10872
  %10875 = landingpad { ptr, i32 }
          catch ptr null
  %10876 = extractvalue { ptr, i32 } %10875, 0
  call void @__clang_call_terminate(ptr %10876) #24
  unreachable

10877:                                            ; preds = %10864
  %10878 = landingpad { ptr, i32 }
          cleanup
  %10879 = load ptr, ptr %10867, align 8, !tbaa !118
  %10880 = icmp eq ptr %10879, null
  br i1 %10880, label %10886, label %10881

10881:                                            ; preds = %10877
  %10882 = invoke noundef zeroext i1 %10879(ptr noundef nonnull align 8 dereferenceable(16) %137, ptr noundef nonnull align 8 dereferenceable(16) %137, i32 noundef 3)
          to label %10886 unwind label %10883

10883:                                            ; preds = %10881
  %10884 = landingpad { ptr, i32 }
          catch ptr null
  %10885 = extractvalue { ptr, i32 } %10884, 0
  call void @__clang_call_terminate(ptr %10885) #24
  unreachable

10886:                                            ; preds = %10881, %10877
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %137) #21
  br label %762

10887:                                            ; preds = %10869, %10872
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %137) #21
  store i64 %10868, ptr @dummy368, align 8, !tbaa !74
  %10888 = call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #25
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %10888, ptr noundef nonnull @.str.149)
          to label %10891 unwind label %10889

10889:                                            ; preds = %10887
  %10890 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %10888) #22
  br label %762

10891:                                            ; preds = %10887
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %10888, align 8, !tbaa !58
  %10892 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %10888, i64 0, i32 1
  store ptr @_Z30BM_Counters_IterationInvariantRN9benchmark5StateE, ptr %10892, align 8, !tbaa !93
  %10893 = call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %10888)
  store ptr %10893, ptr @_ZL28benchmark_uniq_10_benchmark_, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %136)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %135) #21
  %10894 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %136, i64 0, i32 2
  store ptr %10894, ptr %136, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %134) #21
  store i64 74, ptr %134, align 8, !tbaa !74
  %10895 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %136, ptr noundef nonnull align 8 dereferenceable(8) %134, i64 noundef 0)
  store ptr %10895, ptr %136, align 8, !tbaa !23
  %10896 = load i64, ptr %134, align 8, !tbaa !74
  store i64 %10896, ptr %10894, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(74) %10895, ptr noundef nonnull align 1 dereferenceable(74) @.str.151, i64 74, i1 false)
  %10897 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %136, i64 0, i32 1
  store i64 %10896, ptr %10897, align 8, !tbaa !10
  %10898 = getelementptr inbounds i8, ptr %10895, i64 %10896
  store i8 0, ptr %10898, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %134) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %135, ptr noundef nonnull %136, i32 noundef 0)
          to label %10899 unwind label %10944

10899:                                            ; preds = %10891
  %10900 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 0, ptr nonnull %135, i64 1)
          to label %10901 unwind label %10946

10901:                                            ; preds = %10899
  %10902 = getelementptr inbounds %struct.TestCase, ptr %135, i64 0, i32 3, i32 0, i32 1
  %10903 = load ptr, ptr %10902, align 8, !tbaa !88
  %10904 = icmp eq ptr %10903, null
  br i1 %10904, label %10929, label %10905

10905:                                            ; preds = %10901
  %10906 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10903, i64 0, i32 1
  %10907 = load atomic i64, ptr %10906 acquire, align 8
  %10908 = icmp eq i64 %10907, 4294967297
  %10909 = trunc i64 %10907 to i32
  br i1 %10908, label %10910, label %10918

10910:                                            ; preds = %10905
  store i32 0, ptr %10906, align 8, !tbaa !90
  %10911 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10903, i64 0, i32 2
  store i32 0, ptr %10911, align 4, !tbaa !92
  %10912 = load ptr, ptr %10903, align 8, !tbaa !58
  %10913 = getelementptr inbounds ptr, ptr %10912, i64 2
  %10914 = load ptr, ptr %10913, align 8
  call void %10914(ptr noundef nonnull align 8 dereferenceable(16) %10903) #21
  %10915 = load ptr, ptr %10903, align 8, !tbaa !58
  %10916 = getelementptr inbounds ptr, ptr %10915, i64 3
  %10917 = load ptr, ptr %10916, align 8
  call void %10917(ptr noundef nonnull align 8 dereferenceable(16) %10903) #21
  br label %10929

10918:                                            ; preds = %10905
  %10919 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10920 = icmp eq i8 %10919, 0
  br i1 %10920, label %10923, label %10921

10921:                                            ; preds = %10918
  %10922 = add nsw i32 %10909, -1
  store i32 %10922, ptr %10906, align 8, !tbaa !73
  br label %10925

10923:                                            ; preds = %10918
  %10924 = atomicrmw volatile add ptr %10906, i32 -1 acq_rel, align 4
  br label %10925

10925:                                            ; preds = %10923, %10921
  %10926 = phi i32 [ %10909, %10921 ], [ %10924, %10923 ]
  %10927 = icmp eq i32 %10926, 1
  br i1 %10927, label %10928, label %10929, !prof !42

10928:                                            ; preds = %10925
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10903) #21
  br label %10929

10929:                                            ; preds = %10928, %10925, %10910, %10901
  %10930 = getelementptr inbounds %struct.TestCase, ptr %135, i64 0, i32 2
  %10931 = load ptr, ptr %10930, align 8, !tbaa !23
  %10932 = getelementptr inbounds %struct.TestCase, ptr %135, i64 0, i32 2, i32 2
  %10933 = icmp eq ptr %10931, %10932
  br i1 %10933, label %10935, label %10934

10934:                                            ; preds = %10929
  call void @_ZdlPv(ptr noundef %10931) #22
  br label %10935

10935:                                            ; preds = %10934, %10929
  %10936 = load ptr, ptr %135, align 8, !tbaa !23
  %10937 = getelementptr inbounds %struct.TestCase, ptr %135, i64 0, i32 0, i32 2
  %10938 = icmp eq ptr %10936, %10937
  br i1 %10938, label %10940, label %10939

10939:                                            ; preds = %10935
  call void @_ZdlPv(ptr noundef %10936) #22
  br label %10940

10940:                                            ; preds = %10939, %10935
  %10941 = load ptr, ptr %136, align 8, !tbaa !23
  %10942 = icmp eq ptr %10941, %10894
  br i1 %10942, label %10992, label %10943

10943:                                            ; preds = %10940
  call void @_ZdlPv(ptr noundef %10941) #22
  br label %10992

10944:                                            ; preds = %10891
  %10945 = landingpad { ptr, i32 }
          cleanup
  br label %10986

10946:                                            ; preds = %10899
  %10947 = landingpad { ptr, i32 }
          cleanup
  %10948 = getelementptr inbounds %struct.TestCase, ptr %135, i64 0, i32 3, i32 0, i32 1
  %10949 = load ptr, ptr %10948, align 8, !tbaa !88
  %10950 = icmp eq ptr %10949, null
  br i1 %10950, label %10975, label %10951

10951:                                            ; preds = %10946
  %10952 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10949, i64 0, i32 1
  %10953 = load atomic i64, ptr %10952 acquire, align 8
  %10954 = icmp eq i64 %10953, 4294967297
  %10955 = trunc i64 %10953 to i32
  br i1 %10954, label %10956, label %10964

10956:                                            ; preds = %10951
  store i32 0, ptr %10952, align 8, !tbaa !90
  %10957 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %10949, i64 0, i32 2
  store i32 0, ptr %10957, align 4, !tbaa !92
  %10958 = load ptr, ptr %10949, align 8, !tbaa !58
  %10959 = getelementptr inbounds ptr, ptr %10958, i64 2
  %10960 = load ptr, ptr %10959, align 8
  call void %10960(ptr noundef nonnull align 8 dereferenceable(16) %10949) #21
  %10961 = load ptr, ptr %10949, align 8, !tbaa !58
  %10962 = getelementptr inbounds ptr, ptr %10961, i64 3
  %10963 = load ptr, ptr %10962, align 8
  call void %10963(ptr noundef nonnull align 8 dereferenceable(16) %10949) #21
  br label %10975

10964:                                            ; preds = %10951
  %10965 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %10966 = icmp eq i8 %10965, 0
  br i1 %10966, label %10969, label %10967

10967:                                            ; preds = %10964
  %10968 = add nsw i32 %10955, -1
  store i32 %10968, ptr %10952, align 8, !tbaa !73
  br label %10971

10969:                                            ; preds = %10964
  %10970 = atomicrmw volatile add ptr %10952, i32 -1 acq_rel, align 4
  br label %10971

10971:                                            ; preds = %10969, %10967
  %10972 = phi i32 [ %10955, %10967 ], [ %10970, %10969 ]
  %10973 = icmp eq i32 %10972, 1
  br i1 %10973, label %10974, label %10975, !prof !42

10974:                                            ; preds = %10971
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %10949) #21
  br label %10975

10975:                                            ; preds = %10974, %10971, %10956, %10946
  %10976 = getelementptr inbounds %struct.TestCase, ptr %135, i64 0, i32 2
  %10977 = load ptr, ptr %10976, align 8, !tbaa !23
  %10978 = getelementptr inbounds %struct.TestCase, ptr %135, i64 0, i32 2, i32 2
  %10979 = icmp eq ptr %10977, %10978
  br i1 %10979, label %10981, label %10980

10980:                                            ; preds = %10975
  call void @_ZdlPv(ptr noundef %10977) #22
  br label %10981

10981:                                            ; preds = %10980, %10975
  %10982 = load ptr, ptr %135, align 8, !tbaa !23
  %10983 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %135, i64 0, i32 2
  %10984 = icmp eq ptr %10982, %10983
  br i1 %10984, label %10986, label %10985

10985:                                            ; preds = %10981
  call void @_ZdlPv(ptr noundef %10982) #22
  br label %10986

10986:                                            ; preds = %10985, %10981, %10944
  %10987 = phi { ptr, i32 } [ %10945, %10944 ], [ %10947, %10981 ], [ %10947, %10985 ]
  %10988 = load ptr, ptr %136, align 8, !tbaa !23
  %10989 = icmp eq ptr %10988, %10894
  br i1 %10989, label %10991, label %10990

10990:                                            ; preds = %10986
  call void @_ZdlPv(ptr noundef %10988) #22
  br label %10991

10991:                                            ; preds = %10990, %10986
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %135) #21
  br label %762

10992:                                            ; preds = %10940, %10943
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %135) #21
  store i32 %10900, ptr @dummy383, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %136)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %119)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %120)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %121)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %122)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %123)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %124)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %125)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %126)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %127)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %128)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %129)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %130)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %131)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %132)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %133)
  call void @llvm.lifetime.start.p0(i64 1320, ptr nonnull %118) #21
  %10993 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %119, i64 0, i32 2
  store ptr %10993, ptr %119, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %117) #21
  store i64 42, ptr %117, align 8, !tbaa !74
  %10994 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %119, ptr noundef nonnull align 8 dereferenceable(8) %117, i64 noundef 0)
  store ptr %10994, ptr %119, align 8, !tbaa !23
  %10995 = load i64, ptr %117, align 8, !tbaa !74
  store i64 %10995, ptr %10993, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(42) %10994, ptr noundef nonnull align 1 dereferenceable(42) @.str.153, i64 42, i1 false)
  %10996 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %119, i64 0, i32 1
  store i64 %10995, ptr %10996, align 8, !tbaa !10
  %10997 = getelementptr inbounds i8, ptr %10994, i64 %10995
  store i8 0, ptr %10997, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %117) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %118, ptr noundef nonnull %119, i32 noundef 0)
          to label %10998 unwind label %11214

10998:                                            ; preds = %10992
  %10999 = getelementptr inbounds %struct.TestCase, ptr %118, i64 1
  %11000 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %120, i64 0, i32 2
  store ptr %11000, ptr %120, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %116) #21
  store i64 19, ptr %116, align 8, !tbaa !74
  %11001 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %120, ptr noundef nonnull align 8 dereferenceable(8) %116, i64 noundef 0)
          to label %11002 unwind label %11216

11002:                                            ; preds = %10998
  store ptr %11001, ptr %120, align 8, !tbaa !23
  %11003 = load i64, ptr %116, align 8, !tbaa !74
  store i64 %11003, ptr %11000, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %11001, ptr noundef nonnull align 1 dereferenceable(19) @.str.154, i64 19, i1 false)
  %11004 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %120, i64 0, i32 1
  store i64 %11003, ptr %11004, align 8, !tbaa !10
  %11005 = load ptr, ptr %120, align 8, !tbaa !23
  %11006 = getelementptr inbounds i8, ptr %11005, i64 %11003
  store i8 0, ptr %11006, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %116) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %10999, ptr noundef nonnull %120, i32 noundef 1)
          to label %11007 unwind label %11218

11007:                                            ; preds = %11002
  %11008 = getelementptr inbounds %struct.TestCase, ptr %118, i64 2
  %11009 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %121, i64 0, i32 2
  store ptr %11009, ptr %121, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %115) #21
  store i64 32, ptr %115, align 8, !tbaa !74
  %11010 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %121, ptr noundef nonnull align 8 dereferenceable(8) %115, i64 noundef 0)
          to label %11011 unwind label %11220

11011:                                            ; preds = %11007
  store ptr %11010, ptr %121, align 8, !tbaa !23
  %11012 = load i64, ptr %115, align 8, !tbaa !74
  store i64 %11012, ptr %11009, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %11010, ptr noundef nonnull align 1 dereferenceable(32) @.str.15, i64 32, i1 false)
  %11013 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %121, i64 0, i32 1
  store i64 %11012, ptr %11013, align 8, !tbaa !10
  %11014 = load ptr, ptr %121, align 8, !tbaa !23
  %11015 = getelementptr inbounds i8, ptr %11014, i64 %11012
  store i8 0, ptr %11015, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %115) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %11008, ptr noundef nonnull %121, i32 noundef 1)
          to label %11016 unwind label %11222

11016:                                            ; preds = %11011
  %11017 = getelementptr inbounds %struct.TestCase, ptr %118, i64 3
  %11018 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %122, i64 0, i32 2
  store ptr %11018, ptr %122, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %114) #21
  store i64 46, ptr %114, align 8, !tbaa !74
  %11019 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %122, ptr noundef nonnull align 8 dereferenceable(8) %114, i64 noundef 0)
          to label %11020 unwind label %11224

11020:                                            ; preds = %11016
  store ptr %11019, ptr %122, align 8, !tbaa !23
  %11021 = load i64, ptr %114, align 8, !tbaa !74
  store i64 %11021, ptr %11018, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(46) %11019, ptr noundef nonnull align 1 dereferenceable(46) @.str.155, i64 46, i1 false)
  %11022 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %122, i64 0, i32 1
  store i64 %11021, ptr %11022, align 8, !tbaa !10
  %11023 = getelementptr inbounds i8, ptr %11019, i64 %11021
  store i8 0, ptr %11023, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %114) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %11017, ptr noundef nonnull %122, i32 noundef 1)
          to label %11024 unwind label %11226

11024:                                            ; preds = %11020
  %11025 = getelementptr inbounds %struct.TestCase, ptr %118, i64 4
  %11026 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %123, i64 0, i32 2
  store ptr %11026, ptr %123, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %113) #21
  store i64 25, ptr %113, align 8, !tbaa !74
  %11027 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %123, ptr noundef nonnull align 8 dereferenceable(8) %113, i64 noundef 0)
          to label %11028 unwind label %11228

11028:                                            ; preds = %11024
  store ptr %11027, ptr %123, align 8, !tbaa !23
  %11029 = load i64, ptr %113, align 8, !tbaa !74
  store i64 %11029, ptr %11026, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(25) %11027, ptr noundef nonnull align 1 dereferenceable(25) @.str.17, i64 25, i1 false)
  %11030 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %123, i64 0, i32 1
  store i64 %11029, ptr %11030, align 8, !tbaa !10
  %11031 = load ptr, ptr %123, align 8, !tbaa !23
  %11032 = getelementptr inbounds i8, ptr %11031, i64 %11029
  store i8 0, ptr %11032, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %113) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %11025, ptr noundef nonnull %123, i32 noundef 1)
          to label %11033 unwind label %11230

11033:                                            ; preds = %11028
  %11034 = getelementptr inbounds %struct.TestCase, ptr %118, i64 5
  %11035 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %124, i64 0, i32 2
  store ptr %11035, ptr %124, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %112) #21
  store i64 18, ptr %112, align 8, !tbaa !74
  %11036 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %124, ptr noundef nonnull align 8 dereferenceable(8) %112, i64 noundef 0)
          to label %11037 unwind label %11232

11037:                                            ; preds = %11033
  store ptr %11036, ptr %124, align 8, !tbaa !23
  %11038 = load i64, ptr %112, align 8, !tbaa !74
  store i64 %11038, ptr %11035, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(18) %11036, ptr noundef nonnull align 1 dereferenceable(18) @.str.18, i64 18, i1 false)
  %11039 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %124, i64 0, i32 1
  store i64 %11038, ptr %11039, align 8, !tbaa !10
  %11040 = load ptr, ptr %124, align 8, !tbaa !23
  %11041 = getelementptr inbounds i8, ptr %11040, i64 %11038
  store i8 0, ptr %11041, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %112) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %11034, ptr noundef nonnull %124, i32 noundef 1)
          to label %11042 unwind label %11234

11042:                                            ; preds = %11037
  %11043 = getelementptr inbounds %struct.TestCase, ptr %118, i64 6
  %11044 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %125, i64 0, i32 2
  store ptr %11044, ptr %125, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %111) #21
  store i64 23, ptr %111, align 8, !tbaa !74
  %11045 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %125, ptr noundef nonnull align 8 dereferenceable(8) %111, i64 noundef 0)
          to label %11046 unwind label %11236

11046:                                            ; preds = %11042
  store ptr %11045, ptr %125, align 8, !tbaa !23
  %11047 = load i64, ptr %111, align 8, !tbaa !74
  store i64 %11047, ptr %11044, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(23) %11045, ptr noundef nonnull align 1 dereferenceable(23) @.str.19, i64 23, i1 false)
  %11048 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %125, i64 0, i32 1
  store i64 %11047, ptr %11048, align 8, !tbaa !10
  %11049 = load ptr, ptr %125, align 8, !tbaa !23
  %11050 = getelementptr inbounds i8, ptr %11049, i64 %11047
  store i8 0, ptr %11050, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %111) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %11043, ptr noundef nonnull %125, i32 noundef 1)
          to label %11051 unwind label %11238

11051:                                            ; preds = %11046
  %11052 = getelementptr inbounds %struct.TestCase, ptr %118, i64 7
  %11053 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %126, i64 0, i32 2
  store ptr %11053, ptr %126, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %11053, ptr noundef nonnull align 1 dereferenceable(14) @.str.20, i64 14, i1 false)
  %11054 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %126, i64 0, i32 1
  store i64 14, ptr %11054, align 8, !tbaa !10
  %11055 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %126, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %11055, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %11052, ptr noundef nonnull %126, i32 noundef 1)
          to label %11056 unwind label %11240

11056:                                            ; preds = %11051
  %11057 = getelementptr inbounds %struct.TestCase, ptr %118, i64 8
  %11058 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %127, i64 0, i32 2
  store ptr %11058, ptr %127, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %110) #21
  store i64 20, ptr %110, align 8, !tbaa !74
  %11059 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %127, ptr noundef nonnull align 8 dereferenceable(8) %110, i64 noundef 0)
          to label %11060 unwind label %11242

11060:                                            ; preds = %11056
  store ptr %11059, ptr %127, align 8, !tbaa !23
  %11061 = load i64, ptr %110, align 8, !tbaa !74
  store i64 %11061, ptr %11058, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %11059, ptr noundef nonnull align 1 dereferenceable(20) @.str.21, i64 20, i1 false)
  %11062 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %127, i64 0, i32 1
  store i64 %11061, ptr %11062, align 8, !tbaa !10
  %11063 = load ptr, ptr %127, align 8, !tbaa !23
  %11064 = getelementptr inbounds i8, ptr %11063, i64 %11061
  store i8 0, ptr %11064, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %110) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %11057, ptr noundef nonnull %127, i32 noundef 1)
          to label %11065 unwind label %11244

11065:                                            ; preds = %11060
  %11066 = getelementptr inbounds %struct.TestCase, ptr %118, i64 9
  %11067 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %128, i64 0, i32 2
  store ptr %11067, ptr %128, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %109) #21
  store i64 21, ptr %109, align 8, !tbaa !74
  %11068 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %128, ptr noundef nonnull align 8 dereferenceable(8) %109, i64 noundef 0)
          to label %11069 unwind label %11246

11069:                                            ; preds = %11065
  store ptr %11068, ptr %128, align 8, !tbaa !23
  %11070 = load i64, ptr %109, align 8, !tbaa !74
  store i64 %11070, ptr %11067, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %11068, ptr noundef nonnull align 1 dereferenceable(21) @.str.22, i64 21, i1 false)
  %11071 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %128, i64 0, i32 1
  store i64 %11070, ptr %11071, align 8, !tbaa !10
  %11072 = load ptr, ptr %128, align 8, !tbaa !23
  %11073 = getelementptr inbounds i8, ptr %11072, i64 %11070
  store i8 0, ptr %11073, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %109) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %11066, ptr noundef nonnull %128, i32 noundef 1)
          to label %11074 unwind label %11248

11074:                                            ; preds = %11069
  %11075 = getelementptr inbounds %struct.TestCase, ptr %118, i64 10
  %11076 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %129, i64 0, i32 2
  store ptr %11076, ptr %129, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %108) #21
  store i64 20, ptr %108, align 8, !tbaa !74
  %11077 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %129, ptr noundef nonnull align 8 dereferenceable(8) %108, i64 noundef 0)
          to label %11078 unwind label %11250

11078:                                            ; preds = %11074
  store ptr %11077, ptr %129, align 8, !tbaa !23
  %11079 = load i64, ptr %108, align 8, !tbaa !74
  store i64 %11079, ptr %11076, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %11077, ptr noundef nonnull align 1 dereferenceable(20) @.str.23, i64 20, i1 false)
  %11080 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %129, i64 0, i32 1
  store i64 %11079, ptr %11080, align 8, !tbaa !10
  %11081 = load ptr, ptr %129, align 8, !tbaa !23
  %11082 = getelementptr inbounds i8, ptr %11081, i64 %11079
  store i8 0, ptr %11082, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %108) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %11075, ptr noundef nonnull %129, i32 noundef 1)
          to label %11083 unwind label %11252

11083:                                            ; preds = %11078
  %11084 = getelementptr inbounds %struct.TestCase, ptr %118, i64 11
  %11085 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %130, i64 0, i32 2
  store ptr %11085, ptr %130, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %107) #21
  store i64 19, ptr %107, align 8, !tbaa !74
  %11086 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %130, ptr noundef nonnull align 8 dereferenceable(8) %107, i64 noundef 0)
          to label %11087 unwind label %11254

11087:                                            ; preds = %11083
  store ptr %11086, ptr %130, align 8, !tbaa !23
  %11088 = load i64, ptr %107, align 8, !tbaa !74
  store i64 %11088, ptr %11085, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %11086, ptr noundef nonnull align 1 dereferenceable(19) @.str.24, i64 19, i1 false)
  %11089 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %130, i64 0, i32 1
  store i64 %11088, ptr %11089, align 8, !tbaa !10
  %11090 = load ptr, ptr %130, align 8, !tbaa !23
  %11091 = getelementptr inbounds i8, ptr %11090, i64 %11088
  store i8 0, ptr %11091, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %107) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %11084, ptr noundef nonnull %130, i32 noundef 1)
          to label %11092 unwind label %11256

11092:                                            ; preds = %11087
  %11093 = getelementptr inbounds %struct.TestCase, ptr %118, i64 12
  %11094 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %131, i64 0, i32 2
  store ptr %11094, ptr %131, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(15) %11094, ptr noundef nonnull align 1 dereferenceable(15) @.str.25, i64 15, i1 false)
  %11095 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %131, i64 0, i32 1
  store i64 15, ptr %11095, align 8, !tbaa !10
  %11096 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %131, i64 0, i32 2, i32 1, i64 7
  store i8 0, ptr %11096, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %11093, ptr noundef nonnull %131, i32 noundef 1)
          to label %11097 unwind label %11258

11097:                                            ; preds = %11092
  %11098 = getelementptr inbounds %struct.TestCase, ptr %118, i64 13
  %11099 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %132, i64 0, i32 2
  store ptr %11099, ptr %132, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %11099, ptr noundef nonnull align 1 dereferenceable(14) @.str.26, i64 14, i1 false)
  %11100 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %132, i64 0, i32 1
  store i64 14, ptr %11100, align 8, !tbaa !10
  %11101 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %132, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %11101, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %11098, ptr noundef nonnull %132, i32 noundef 1)
          to label %11102 unwind label %11260

11102:                                            ; preds = %11097
  %11103 = getelementptr inbounds %struct.TestCase, ptr %118, i64 14
  %11104 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %133, i64 0, i32 2
  store ptr %11104, ptr %133, align 8, !tbaa !5
  store i8 125, ptr %11104, align 8, !tbaa !13
  %11105 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %133, i64 0, i32 1
  store i64 1, ptr %11105, align 8, !tbaa !10
  %11106 = getelementptr inbounds i8, ptr %133, i64 17
  store i8 0, ptr %11106, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %11103, ptr noundef nonnull %133, i32 noundef 1)
          to label %11107 unwind label %11262

11107:                                            ; preds = %11102
  %11108 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 2, ptr nonnull %118, i64 15)
          to label %11109 unwind label %11264

11109:                                            ; preds = %11107
  %11110 = getelementptr inbounds %struct.TestCase, ptr %118, i64 15
  br label %11111

11111:                                            ; preds = %11152, %11109
  %11112 = phi ptr [ %11110, %11109 ], [ %11113, %11152 ]
  %11113 = getelementptr inbounds %struct.TestCase, ptr %11112, i64 -1
  %11114 = getelementptr %struct.TestCase, ptr %11112, i64 -1, i32 3, i32 0, i32 1
  %11115 = load ptr, ptr %11114, align 8, !tbaa !88
  %11116 = icmp eq ptr %11115, null
  br i1 %11116, label %11141, label %11117

11117:                                            ; preds = %11111
  %11118 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11115, i64 0, i32 1
  %11119 = load atomic i64, ptr %11118 acquire, align 8
  %11120 = icmp eq i64 %11119, 4294967297
  %11121 = trunc i64 %11119 to i32
  br i1 %11120, label %11122, label %11130

11122:                                            ; preds = %11117
  store i32 0, ptr %11118, align 8, !tbaa !90
  %11123 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11115, i64 0, i32 2
  store i32 0, ptr %11123, align 4, !tbaa !92
  %11124 = load ptr, ptr %11115, align 8, !tbaa !58
  %11125 = getelementptr inbounds ptr, ptr %11124, i64 2
  %11126 = load ptr, ptr %11125, align 8
  call void %11126(ptr noundef nonnull align 8 dereferenceable(16) %11115) #21
  %11127 = load ptr, ptr %11115, align 8, !tbaa !58
  %11128 = getelementptr inbounds ptr, ptr %11127, i64 3
  %11129 = load ptr, ptr %11128, align 8
  call void %11129(ptr noundef nonnull align 8 dereferenceable(16) %11115) #21
  br label %11141

11130:                                            ; preds = %11117
  %11131 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11132 = icmp eq i8 %11131, 0
  br i1 %11132, label %11135, label %11133

11133:                                            ; preds = %11130
  %11134 = add nsw i32 %11121, -1
  store i32 %11134, ptr %11118, align 8, !tbaa !73
  br label %11137

11135:                                            ; preds = %11130
  %11136 = atomicrmw volatile add ptr %11118, i32 -1 acq_rel, align 4
  br label %11137

11137:                                            ; preds = %11135, %11133
  %11138 = phi i32 [ %11121, %11133 ], [ %11136, %11135 ]
  %11139 = icmp eq i32 %11138, 1
  br i1 %11139, label %11140, label %11141, !prof !42

11140:                                            ; preds = %11137
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11115) #21
  br label %11141

11141:                                            ; preds = %11140, %11137, %11122, %11111
  %11142 = getelementptr %struct.TestCase, ptr %11112, i64 -1, i32 2
  %11143 = load ptr, ptr %11142, align 8, !tbaa !23
  %11144 = getelementptr %struct.TestCase, ptr %11112, i64 -1, i32 2, i32 2
  %11145 = icmp eq ptr %11143, %11144
  br i1 %11145, label %11147, label %11146

11146:                                            ; preds = %11141
  call void @_ZdlPv(ptr noundef %11143) #22
  br label %11147

11147:                                            ; preds = %11146, %11141
  %11148 = load ptr, ptr %11113, align 8, !tbaa !23
  %11149 = getelementptr %struct.TestCase, ptr %11112, i64 -1, i32 0, i32 2
  %11150 = icmp eq ptr %11148, %11149
  br i1 %11150, label %11152, label %11151

11151:                                            ; preds = %11147
  call void @_ZdlPv(ptr noundef %11148) #22
  br label %11152

11152:                                            ; preds = %11151, %11147
  %11153 = icmp eq ptr %11113, %118
  br i1 %11153, label %11154, label %11111

11154:                                            ; preds = %11152
  %11155 = load ptr, ptr %133, align 8, !tbaa !23
  %11156 = icmp eq ptr %11155, %11104
  br i1 %11156, label %11158, label %11157

11157:                                            ; preds = %11154
  call void @_ZdlPv(ptr noundef %11155) #22
  br label %11158

11158:                                            ; preds = %11157, %11154
  %11159 = load ptr, ptr %132, align 8, !tbaa !23
  %11160 = icmp eq ptr %11159, %11099
  br i1 %11160, label %11162, label %11161

11161:                                            ; preds = %11158
  call void @_ZdlPv(ptr noundef %11159) #22
  br label %11162

11162:                                            ; preds = %11161, %11158
  %11163 = load ptr, ptr %131, align 8, !tbaa !23
  %11164 = icmp eq ptr %11163, %11094
  br i1 %11164, label %11166, label %11165

11165:                                            ; preds = %11162
  call void @_ZdlPv(ptr noundef %11163) #22
  br label %11166

11166:                                            ; preds = %11165, %11162
  %11167 = load ptr, ptr %130, align 8, !tbaa !23
  %11168 = icmp eq ptr %11167, %11085
  br i1 %11168, label %11170, label %11169

11169:                                            ; preds = %11166
  call void @_ZdlPv(ptr noundef %11167) #22
  br label %11170

11170:                                            ; preds = %11169, %11166
  %11171 = load ptr, ptr %129, align 8, !tbaa !23
  %11172 = icmp eq ptr %11171, %11076
  br i1 %11172, label %11174, label %11173

11173:                                            ; preds = %11170
  call void @_ZdlPv(ptr noundef %11171) #22
  br label %11174

11174:                                            ; preds = %11173, %11170
  %11175 = load ptr, ptr %128, align 8, !tbaa !23
  %11176 = icmp eq ptr %11175, %11067
  br i1 %11176, label %11178, label %11177

11177:                                            ; preds = %11174
  call void @_ZdlPv(ptr noundef %11175) #22
  br label %11178

11178:                                            ; preds = %11177, %11174
  %11179 = load ptr, ptr %127, align 8, !tbaa !23
  %11180 = icmp eq ptr %11179, %11058
  br i1 %11180, label %11182, label %11181

11181:                                            ; preds = %11178
  call void @_ZdlPv(ptr noundef %11179) #22
  br label %11182

11182:                                            ; preds = %11181, %11178
  %11183 = load ptr, ptr %126, align 8, !tbaa !23
  %11184 = icmp eq ptr %11183, %11053
  br i1 %11184, label %11186, label %11185

11185:                                            ; preds = %11182
  call void @_ZdlPv(ptr noundef %11183) #22
  br label %11186

11186:                                            ; preds = %11185, %11182
  %11187 = load ptr, ptr %125, align 8, !tbaa !23
  %11188 = icmp eq ptr %11187, %11044
  br i1 %11188, label %11190, label %11189

11189:                                            ; preds = %11186
  call void @_ZdlPv(ptr noundef %11187) #22
  br label %11190

11190:                                            ; preds = %11189, %11186
  %11191 = load ptr, ptr %124, align 8, !tbaa !23
  %11192 = icmp eq ptr %11191, %11035
  br i1 %11192, label %11194, label %11193

11193:                                            ; preds = %11190
  call void @_ZdlPv(ptr noundef %11191) #22
  br label %11194

11194:                                            ; preds = %11193, %11190
  %11195 = load ptr, ptr %123, align 8, !tbaa !23
  %11196 = icmp eq ptr %11195, %11026
  br i1 %11196, label %11198, label %11197

11197:                                            ; preds = %11194
  call void @_ZdlPv(ptr noundef %11195) #22
  br label %11198

11198:                                            ; preds = %11197, %11194
  %11199 = load ptr, ptr %122, align 8, !tbaa !23
  %11200 = icmp eq ptr %11199, %11018
  br i1 %11200, label %11202, label %11201

11201:                                            ; preds = %11198
  call void @_ZdlPv(ptr noundef %11199) #22
  br label %11202

11202:                                            ; preds = %11201, %11198
  %11203 = load ptr, ptr %121, align 8, !tbaa !23
  %11204 = icmp eq ptr %11203, %11009
  br i1 %11204, label %11206, label %11205

11205:                                            ; preds = %11202
  call void @_ZdlPv(ptr noundef %11203) #22
  br label %11206

11206:                                            ; preds = %11205, %11202
  %11207 = load ptr, ptr %120, align 8, !tbaa !23
  %11208 = icmp eq ptr %11207, %11000
  br i1 %11208, label %11210, label %11209

11209:                                            ; preds = %11206
  call void @_ZdlPv(ptr noundef %11207) #22
  br label %11210

11210:                                            ; preds = %11209, %11206
  %11211 = load ptr, ptr %119, align 8, !tbaa !23
  %11212 = icmp eq ptr %11211, %10993
  br i1 %11212, label %12001, label %11213

11213:                                            ; preds = %11210
  call void @_ZdlPv(ptr noundef %11211) #22
  br label %12001

11214:                                            ; preds = %10992
  %11215 = landingpad { ptr, i32 }
          cleanup
  br label %11947

11216:                                            ; preds = %10998
  %11217 = landingpad { ptr, i32 }
          cleanup
  br label %11947

11218:                                            ; preds = %11002
  %11219 = landingpad { ptr, i32 }
          cleanup
  br label %11940

11220:                                            ; preds = %11007
  %11221 = landingpad { ptr, i32 }
          cleanup
  br label %11940

11222:                                            ; preds = %11011
  %11223 = landingpad { ptr, i32 }
          cleanup
  br label %11933

11224:                                            ; preds = %11016
  %11225 = landingpad { ptr, i32 }
          cleanup
  br label %11933

11226:                                            ; preds = %11020
  %11227 = landingpad { ptr, i32 }
          cleanup
  br label %11926

11228:                                            ; preds = %11024
  %11229 = landingpad { ptr, i32 }
          cleanup
  br label %11926

11230:                                            ; preds = %11028
  %11231 = landingpad { ptr, i32 }
          cleanup
  br label %11919

11232:                                            ; preds = %11033
  %11233 = landingpad { ptr, i32 }
          cleanup
  br label %11919

11234:                                            ; preds = %11037
  %11235 = landingpad { ptr, i32 }
          cleanup
  br label %11912

11236:                                            ; preds = %11042
  %11237 = landingpad { ptr, i32 }
          cleanup
  br label %11912

11238:                                            ; preds = %11046
  %11239 = landingpad { ptr, i32 }
          cleanup
  br label %11905

11240:                                            ; preds = %11051
  %11241 = landingpad { ptr, i32 }
          cleanup
  br label %11898

11242:                                            ; preds = %11056
  %11243 = landingpad { ptr, i32 }
          cleanup
  br label %11898

11244:                                            ; preds = %11060
  %11245 = landingpad { ptr, i32 }
          cleanup
  br label %11891

11246:                                            ; preds = %11065
  %11247 = landingpad { ptr, i32 }
          cleanup
  br label %11891

11248:                                            ; preds = %11069
  %11249 = landingpad { ptr, i32 }
          cleanup
  br label %11884

11250:                                            ; preds = %11074
  %11251 = landingpad { ptr, i32 }
          cleanup
  br label %11884

11252:                                            ; preds = %11078
  %11253 = landingpad { ptr, i32 }
          cleanup
  br label %11877

11254:                                            ; preds = %11083
  %11255 = landingpad { ptr, i32 }
          cleanup
  br label %11877

11256:                                            ; preds = %11087
  %11257 = landingpad { ptr, i32 }
          cleanup
  br label %11870

11258:                                            ; preds = %11092
  %11259 = landingpad { ptr, i32 }
          cleanup
  br label %11863

11260:                                            ; preds = %11097
  %11261 = landingpad { ptr, i32 }
          cleanup
  br label %11856

11262:                                            ; preds = %11102
  %11263 = landingpad { ptr, i32 }
          cleanup
  br label %11850

11264:                                            ; preds = %11107
  %11265 = landingpad { ptr, i32 }
          cleanup
  %11266 = getelementptr inbounds %struct.TestCase, ptr %118, i64 14, i32 3, i32 0, i32 1
  %11267 = load ptr, ptr %11266, align 8, !tbaa !88
  %11268 = icmp eq ptr %11267, null
  br i1 %11268, label %11293, label %11269

11269:                                            ; preds = %11264
  %11270 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11267, i64 0, i32 1
  %11271 = load atomic i64, ptr %11270 acquire, align 8
  %11272 = icmp eq i64 %11271, 4294967297
  %11273 = trunc i64 %11271 to i32
  br i1 %11272, label %11274, label %11282

11274:                                            ; preds = %11269
  store i32 0, ptr %11270, align 8, !tbaa !90
  %11275 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11267, i64 0, i32 2
  store i32 0, ptr %11275, align 4, !tbaa !92
  %11276 = load ptr, ptr %11267, align 8, !tbaa !58
  %11277 = getelementptr inbounds ptr, ptr %11276, i64 2
  %11278 = load ptr, ptr %11277, align 8
  call void %11278(ptr noundef nonnull align 8 dereferenceable(16) %11267) #21
  %11279 = load ptr, ptr %11267, align 8, !tbaa !58
  %11280 = getelementptr inbounds ptr, ptr %11279, i64 3
  %11281 = load ptr, ptr %11280, align 8
  call void %11281(ptr noundef nonnull align 8 dereferenceable(16) %11267) #21
  br label %11293

11282:                                            ; preds = %11269
  %11283 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11284 = icmp eq i8 %11283, 0
  br i1 %11284, label %11287, label %11285

11285:                                            ; preds = %11282
  %11286 = add nsw i32 %11273, -1
  store i32 %11286, ptr %11270, align 8, !tbaa !73
  br label %11289

11287:                                            ; preds = %11282
  %11288 = atomicrmw volatile add ptr %11270, i32 -1 acq_rel, align 4
  br label %11289

11289:                                            ; preds = %11287, %11285
  %11290 = phi i32 [ %11273, %11285 ], [ %11288, %11287 ]
  %11291 = icmp eq i32 %11290, 1
  br i1 %11291, label %11292, label %11293, !prof !42

11292:                                            ; preds = %11289
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11267) #21
  br label %11293

11293:                                            ; preds = %11292, %11289, %11274, %11264
  %11294 = getelementptr inbounds %struct.TestCase, ptr %118, i64 14, i32 2
  %11295 = load ptr, ptr %11294, align 8, !tbaa !23
  %11296 = getelementptr inbounds %struct.TestCase, ptr %118, i64 14, i32 2, i32 2
  %11297 = icmp eq ptr %11295, %11296
  br i1 %11297, label %11299, label %11298

11298:                                            ; preds = %11293
  call void @_ZdlPv(ptr noundef %11295) #22
  br label %11299

11299:                                            ; preds = %11298, %11293
  %11300 = load ptr, ptr %11103, align 8, !tbaa !23
  %11301 = getelementptr inbounds %struct.TestCase, ptr %118, i64 14, i32 0, i32 2
  %11302 = icmp eq ptr %11300, %11301
  br i1 %11302, label %11304, label %11303

11303:                                            ; preds = %11299
  call void @_ZdlPv(ptr noundef %11300) #22
  br label %11304

11304:                                            ; preds = %11299, %11303
  %11305 = getelementptr inbounds %struct.TestCase, ptr %118, i64 13, i32 3, i32 0, i32 1
  %11306 = load ptr, ptr %11305, align 8, !tbaa !88
  %11307 = icmp eq ptr %11306, null
  br i1 %11307, label %11332, label %11308

11308:                                            ; preds = %11304
  %11309 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11306, i64 0, i32 1
  %11310 = load atomic i64, ptr %11309 acquire, align 8
  %11311 = icmp eq i64 %11310, 4294967297
  %11312 = trunc i64 %11310 to i32
  br i1 %11311, label %11313, label %11321

11313:                                            ; preds = %11308
  store i32 0, ptr %11309, align 8, !tbaa !90
  %11314 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11306, i64 0, i32 2
  store i32 0, ptr %11314, align 4, !tbaa !92
  %11315 = load ptr, ptr %11306, align 8, !tbaa !58
  %11316 = getelementptr inbounds ptr, ptr %11315, i64 2
  %11317 = load ptr, ptr %11316, align 8
  call void %11317(ptr noundef nonnull align 8 dereferenceable(16) %11306) #21
  %11318 = load ptr, ptr %11306, align 8, !tbaa !58
  %11319 = getelementptr inbounds ptr, ptr %11318, i64 3
  %11320 = load ptr, ptr %11319, align 8
  call void %11320(ptr noundef nonnull align 8 dereferenceable(16) %11306) #21
  br label %11332

11321:                                            ; preds = %11308
  %11322 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11323 = icmp eq i8 %11322, 0
  br i1 %11323, label %11326, label %11324

11324:                                            ; preds = %11321
  %11325 = add nsw i32 %11312, -1
  store i32 %11325, ptr %11309, align 8, !tbaa !73
  br label %11328

11326:                                            ; preds = %11321
  %11327 = atomicrmw volatile add ptr %11309, i32 -1 acq_rel, align 4
  br label %11328

11328:                                            ; preds = %11326, %11324
  %11329 = phi i32 [ %11312, %11324 ], [ %11327, %11326 ]
  %11330 = icmp eq i32 %11329, 1
  br i1 %11330, label %11331, label %11332, !prof !42

11331:                                            ; preds = %11328
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11306) #21
  br label %11332

11332:                                            ; preds = %11331, %11328, %11313, %11304
  %11333 = getelementptr inbounds %struct.TestCase, ptr %118, i64 13, i32 2
  %11334 = load ptr, ptr %11333, align 8, !tbaa !23
  %11335 = getelementptr inbounds %struct.TestCase, ptr %118, i64 13, i32 2, i32 2
  %11336 = icmp eq ptr %11334, %11335
  br i1 %11336, label %11338, label %11337

11337:                                            ; preds = %11332
  call void @_ZdlPv(ptr noundef %11334) #22
  br label %11338

11338:                                            ; preds = %11337, %11332
  %11339 = load ptr, ptr %11098, align 8, !tbaa !23
  %11340 = getelementptr inbounds %struct.TestCase, ptr %118, i64 13, i32 0, i32 2
  %11341 = icmp eq ptr %11339, %11340
  br i1 %11341, label %11343, label %11342

11342:                                            ; preds = %11338
  call void @_ZdlPv(ptr noundef %11339) #22
  br label %11343

11343:                                            ; preds = %11338, %11342
  %11344 = getelementptr inbounds %struct.TestCase, ptr %118, i64 12, i32 3, i32 0, i32 1
  %11345 = load ptr, ptr %11344, align 8, !tbaa !88
  %11346 = icmp eq ptr %11345, null
  br i1 %11346, label %11371, label %11347

11347:                                            ; preds = %11343
  %11348 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11345, i64 0, i32 1
  %11349 = load atomic i64, ptr %11348 acquire, align 8
  %11350 = icmp eq i64 %11349, 4294967297
  %11351 = trunc i64 %11349 to i32
  br i1 %11350, label %11352, label %11360

11352:                                            ; preds = %11347
  store i32 0, ptr %11348, align 8, !tbaa !90
  %11353 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11345, i64 0, i32 2
  store i32 0, ptr %11353, align 4, !tbaa !92
  %11354 = load ptr, ptr %11345, align 8, !tbaa !58
  %11355 = getelementptr inbounds ptr, ptr %11354, i64 2
  %11356 = load ptr, ptr %11355, align 8
  call void %11356(ptr noundef nonnull align 8 dereferenceable(16) %11345) #21
  %11357 = load ptr, ptr %11345, align 8, !tbaa !58
  %11358 = getelementptr inbounds ptr, ptr %11357, i64 3
  %11359 = load ptr, ptr %11358, align 8
  call void %11359(ptr noundef nonnull align 8 dereferenceable(16) %11345) #21
  br label %11371

11360:                                            ; preds = %11347
  %11361 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11362 = icmp eq i8 %11361, 0
  br i1 %11362, label %11365, label %11363

11363:                                            ; preds = %11360
  %11364 = add nsw i32 %11351, -1
  store i32 %11364, ptr %11348, align 8, !tbaa !73
  br label %11367

11365:                                            ; preds = %11360
  %11366 = atomicrmw volatile add ptr %11348, i32 -1 acq_rel, align 4
  br label %11367

11367:                                            ; preds = %11365, %11363
  %11368 = phi i32 [ %11351, %11363 ], [ %11366, %11365 ]
  %11369 = icmp eq i32 %11368, 1
  br i1 %11369, label %11370, label %11371, !prof !42

11370:                                            ; preds = %11367
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11345) #21
  br label %11371

11371:                                            ; preds = %11370, %11367, %11352, %11343
  %11372 = getelementptr inbounds %struct.TestCase, ptr %118, i64 12, i32 2
  %11373 = load ptr, ptr %11372, align 8, !tbaa !23
  %11374 = getelementptr inbounds %struct.TestCase, ptr %118, i64 12, i32 2, i32 2
  %11375 = icmp eq ptr %11373, %11374
  br i1 %11375, label %11377, label %11376

11376:                                            ; preds = %11371
  call void @_ZdlPv(ptr noundef %11373) #22
  br label %11377

11377:                                            ; preds = %11376, %11371
  %11378 = load ptr, ptr %11093, align 8, !tbaa !23
  %11379 = getelementptr inbounds %struct.TestCase, ptr %118, i64 12, i32 0, i32 2
  %11380 = icmp eq ptr %11378, %11379
  br i1 %11380, label %11382, label %11381

11381:                                            ; preds = %11377
  call void @_ZdlPv(ptr noundef %11378) #22
  br label %11382

11382:                                            ; preds = %11377, %11381
  %11383 = getelementptr inbounds %struct.TestCase, ptr %118, i64 11, i32 3, i32 0, i32 1
  %11384 = load ptr, ptr %11383, align 8, !tbaa !88
  %11385 = icmp eq ptr %11384, null
  br i1 %11385, label %11410, label %11386

11386:                                            ; preds = %11382
  %11387 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11384, i64 0, i32 1
  %11388 = load atomic i64, ptr %11387 acquire, align 8
  %11389 = icmp eq i64 %11388, 4294967297
  %11390 = trunc i64 %11388 to i32
  br i1 %11389, label %11391, label %11399

11391:                                            ; preds = %11386
  store i32 0, ptr %11387, align 8, !tbaa !90
  %11392 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11384, i64 0, i32 2
  store i32 0, ptr %11392, align 4, !tbaa !92
  %11393 = load ptr, ptr %11384, align 8, !tbaa !58
  %11394 = getelementptr inbounds ptr, ptr %11393, i64 2
  %11395 = load ptr, ptr %11394, align 8
  call void %11395(ptr noundef nonnull align 8 dereferenceable(16) %11384) #21
  %11396 = load ptr, ptr %11384, align 8, !tbaa !58
  %11397 = getelementptr inbounds ptr, ptr %11396, i64 3
  %11398 = load ptr, ptr %11397, align 8
  call void %11398(ptr noundef nonnull align 8 dereferenceable(16) %11384) #21
  br label %11410

11399:                                            ; preds = %11386
  %11400 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11401 = icmp eq i8 %11400, 0
  br i1 %11401, label %11404, label %11402

11402:                                            ; preds = %11399
  %11403 = add nsw i32 %11390, -1
  store i32 %11403, ptr %11387, align 8, !tbaa !73
  br label %11406

11404:                                            ; preds = %11399
  %11405 = atomicrmw volatile add ptr %11387, i32 -1 acq_rel, align 4
  br label %11406

11406:                                            ; preds = %11404, %11402
  %11407 = phi i32 [ %11390, %11402 ], [ %11405, %11404 ]
  %11408 = icmp eq i32 %11407, 1
  br i1 %11408, label %11409, label %11410, !prof !42

11409:                                            ; preds = %11406
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11384) #21
  br label %11410

11410:                                            ; preds = %11409, %11406, %11391, %11382
  %11411 = getelementptr inbounds %struct.TestCase, ptr %118, i64 11, i32 2
  %11412 = load ptr, ptr %11411, align 8, !tbaa !23
  %11413 = getelementptr inbounds %struct.TestCase, ptr %118, i64 11, i32 2, i32 2
  %11414 = icmp eq ptr %11412, %11413
  br i1 %11414, label %11416, label %11415

11415:                                            ; preds = %11410
  call void @_ZdlPv(ptr noundef %11412) #22
  br label %11416

11416:                                            ; preds = %11415, %11410
  %11417 = load ptr, ptr %11084, align 8, !tbaa !23
  %11418 = getelementptr inbounds %struct.TestCase, ptr %118, i64 11, i32 0, i32 2
  %11419 = icmp eq ptr %11417, %11418
  br i1 %11419, label %11421, label %11420

11420:                                            ; preds = %11416
  call void @_ZdlPv(ptr noundef %11417) #22
  br label %11421

11421:                                            ; preds = %11416, %11420
  %11422 = getelementptr inbounds %struct.TestCase, ptr %118, i64 10, i32 3, i32 0, i32 1
  %11423 = load ptr, ptr %11422, align 8, !tbaa !88
  %11424 = icmp eq ptr %11423, null
  br i1 %11424, label %11449, label %11425

11425:                                            ; preds = %11421
  %11426 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11423, i64 0, i32 1
  %11427 = load atomic i64, ptr %11426 acquire, align 8
  %11428 = icmp eq i64 %11427, 4294967297
  %11429 = trunc i64 %11427 to i32
  br i1 %11428, label %11430, label %11438

11430:                                            ; preds = %11425
  store i32 0, ptr %11426, align 8, !tbaa !90
  %11431 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11423, i64 0, i32 2
  store i32 0, ptr %11431, align 4, !tbaa !92
  %11432 = load ptr, ptr %11423, align 8, !tbaa !58
  %11433 = getelementptr inbounds ptr, ptr %11432, i64 2
  %11434 = load ptr, ptr %11433, align 8
  call void %11434(ptr noundef nonnull align 8 dereferenceable(16) %11423) #21
  %11435 = load ptr, ptr %11423, align 8, !tbaa !58
  %11436 = getelementptr inbounds ptr, ptr %11435, i64 3
  %11437 = load ptr, ptr %11436, align 8
  call void %11437(ptr noundef nonnull align 8 dereferenceable(16) %11423) #21
  br label %11449

11438:                                            ; preds = %11425
  %11439 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11440 = icmp eq i8 %11439, 0
  br i1 %11440, label %11443, label %11441

11441:                                            ; preds = %11438
  %11442 = add nsw i32 %11429, -1
  store i32 %11442, ptr %11426, align 8, !tbaa !73
  br label %11445

11443:                                            ; preds = %11438
  %11444 = atomicrmw volatile add ptr %11426, i32 -1 acq_rel, align 4
  br label %11445

11445:                                            ; preds = %11443, %11441
  %11446 = phi i32 [ %11429, %11441 ], [ %11444, %11443 ]
  %11447 = icmp eq i32 %11446, 1
  br i1 %11447, label %11448, label %11449, !prof !42

11448:                                            ; preds = %11445
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11423) #21
  br label %11449

11449:                                            ; preds = %11448, %11445, %11430, %11421
  %11450 = getelementptr inbounds %struct.TestCase, ptr %118, i64 10, i32 2
  %11451 = load ptr, ptr %11450, align 8, !tbaa !23
  %11452 = getelementptr inbounds %struct.TestCase, ptr %118, i64 10, i32 2, i32 2
  %11453 = icmp eq ptr %11451, %11452
  br i1 %11453, label %11455, label %11454

11454:                                            ; preds = %11449
  call void @_ZdlPv(ptr noundef %11451) #22
  br label %11455

11455:                                            ; preds = %11454, %11449
  %11456 = load ptr, ptr %11075, align 8, !tbaa !23
  %11457 = getelementptr inbounds %struct.TestCase, ptr %118, i64 10, i32 0, i32 2
  %11458 = icmp eq ptr %11456, %11457
  br i1 %11458, label %11460, label %11459

11459:                                            ; preds = %11455
  call void @_ZdlPv(ptr noundef %11456) #22
  br label %11460

11460:                                            ; preds = %11455, %11459
  %11461 = getelementptr inbounds %struct.TestCase, ptr %118, i64 9, i32 3, i32 0, i32 1
  %11462 = load ptr, ptr %11461, align 8, !tbaa !88
  %11463 = icmp eq ptr %11462, null
  br i1 %11463, label %11488, label %11464

11464:                                            ; preds = %11460
  %11465 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11462, i64 0, i32 1
  %11466 = load atomic i64, ptr %11465 acquire, align 8
  %11467 = icmp eq i64 %11466, 4294967297
  %11468 = trunc i64 %11466 to i32
  br i1 %11467, label %11469, label %11477

11469:                                            ; preds = %11464
  store i32 0, ptr %11465, align 8, !tbaa !90
  %11470 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11462, i64 0, i32 2
  store i32 0, ptr %11470, align 4, !tbaa !92
  %11471 = load ptr, ptr %11462, align 8, !tbaa !58
  %11472 = getelementptr inbounds ptr, ptr %11471, i64 2
  %11473 = load ptr, ptr %11472, align 8
  call void %11473(ptr noundef nonnull align 8 dereferenceable(16) %11462) #21
  %11474 = load ptr, ptr %11462, align 8, !tbaa !58
  %11475 = getelementptr inbounds ptr, ptr %11474, i64 3
  %11476 = load ptr, ptr %11475, align 8
  call void %11476(ptr noundef nonnull align 8 dereferenceable(16) %11462) #21
  br label %11488

11477:                                            ; preds = %11464
  %11478 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11479 = icmp eq i8 %11478, 0
  br i1 %11479, label %11482, label %11480

11480:                                            ; preds = %11477
  %11481 = add nsw i32 %11468, -1
  store i32 %11481, ptr %11465, align 8, !tbaa !73
  br label %11484

11482:                                            ; preds = %11477
  %11483 = atomicrmw volatile add ptr %11465, i32 -1 acq_rel, align 4
  br label %11484

11484:                                            ; preds = %11482, %11480
  %11485 = phi i32 [ %11468, %11480 ], [ %11483, %11482 ]
  %11486 = icmp eq i32 %11485, 1
  br i1 %11486, label %11487, label %11488, !prof !42

11487:                                            ; preds = %11484
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11462) #21
  br label %11488

11488:                                            ; preds = %11487, %11484, %11469, %11460
  %11489 = getelementptr inbounds %struct.TestCase, ptr %118, i64 9, i32 2
  %11490 = load ptr, ptr %11489, align 8, !tbaa !23
  %11491 = getelementptr inbounds %struct.TestCase, ptr %118, i64 9, i32 2, i32 2
  %11492 = icmp eq ptr %11490, %11491
  br i1 %11492, label %11494, label %11493

11493:                                            ; preds = %11488
  call void @_ZdlPv(ptr noundef %11490) #22
  br label %11494

11494:                                            ; preds = %11493, %11488
  %11495 = load ptr, ptr %11066, align 8, !tbaa !23
  %11496 = getelementptr inbounds %struct.TestCase, ptr %118, i64 9, i32 0, i32 2
  %11497 = icmp eq ptr %11495, %11496
  br i1 %11497, label %11499, label %11498

11498:                                            ; preds = %11494
  call void @_ZdlPv(ptr noundef %11495) #22
  br label %11499

11499:                                            ; preds = %11494, %11498
  %11500 = getelementptr inbounds %struct.TestCase, ptr %118, i64 8, i32 3, i32 0, i32 1
  %11501 = load ptr, ptr %11500, align 8, !tbaa !88
  %11502 = icmp eq ptr %11501, null
  br i1 %11502, label %11527, label %11503

11503:                                            ; preds = %11499
  %11504 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11501, i64 0, i32 1
  %11505 = load atomic i64, ptr %11504 acquire, align 8
  %11506 = icmp eq i64 %11505, 4294967297
  %11507 = trunc i64 %11505 to i32
  br i1 %11506, label %11508, label %11516

11508:                                            ; preds = %11503
  store i32 0, ptr %11504, align 8, !tbaa !90
  %11509 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11501, i64 0, i32 2
  store i32 0, ptr %11509, align 4, !tbaa !92
  %11510 = load ptr, ptr %11501, align 8, !tbaa !58
  %11511 = getelementptr inbounds ptr, ptr %11510, i64 2
  %11512 = load ptr, ptr %11511, align 8
  call void %11512(ptr noundef nonnull align 8 dereferenceable(16) %11501) #21
  %11513 = load ptr, ptr %11501, align 8, !tbaa !58
  %11514 = getelementptr inbounds ptr, ptr %11513, i64 3
  %11515 = load ptr, ptr %11514, align 8
  call void %11515(ptr noundef nonnull align 8 dereferenceable(16) %11501) #21
  br label %11527

11516:                                            ; preds = %11503
  %11517 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11518 = icmp eq i8 %11517, 0
  br i1 %11518, label %11521, label %11519

11519:                                            ; preds = %11516
  %11520 = add nsw i32 %11507, -1
  store i32 %11520, ptr %11504, align 8, !tbaa !73
  br label %11523

11521:                                            ; preds = %11516
  %11522 = atomicrmw volatile add ptr %11504, i32 -1 acq_rel, align 4
  br label %11523

11523:                                            ; preds = %11521, %11519
  %11524 = phi i32 [ %11507, %11519 ], [ %11522, %11521 ]
  %11525 = icmp eq i32 %11524, 1
  br i1 %11525, label %11526, label %11527, !prof !42

11526:                                            ; preds = %11523
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11501) #21
  br label %11527

11527:                                            ; preds = %11526, %11523, %11508, %11499
  %11528 = getelementptr inbounds %struct.TestCase, ptr %118, i64 8, i32 2
  %11529 = load ptr, ptr %11528, align 8, !tbaa !23
  %11530 = getelementptr inbounds %struct.TestCase, ptr %118, i64 8, i32 2, i32 2
  %11531 = icmp eq ptr %11529, %11530
  br i1 %11531, label %11533, label %11532

11532:                                            ; preds = %11527
  call void @_ZdlPv(ptr noundef %11529) #22
  br label %11533

11533:                                            ; preds = %11532, %11527
  %11534 = load ptr, ptr %11057, align 8, !tbaa !23
  %11535 = getelementptr inbounds %struct.TestCase, ptr %118, i64 8, i32 0, i32 2
  %11536 = icmp eq ptr %11534, %11535
  br i1 %11536, label %11538, label %11537

11537:                                            ; preds = %11533
  call void @_ZdlPv(ptr noundef %11534) #22
  br label %11538

11538:                                            ; preds = %11533, %11537
  %11539 = getelementptr inbounds %struct.TestCase, ptr %118, i64 7, i32 3, i32 0, i32 1
  %11540 = load ptr, ptr %11539, align 8, !tbaa !88
  %11541 = icmp eq ptr %11540, null
  br i1 %11541, label %11566, label %11542

11542:                                            ; preds = %11538
  %11543 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11540, i64 0, i32 1
  %11544 = load atomic i64, ptr %11543 acquire, align 8
  %11545 = icmp eq i64 %11544, 4294967297
  %11546 = trunc i64 %11544 to i32
  br i1 %11545, label %11547, label %11555

11547:                                            ; preds = %11542
  store i32 0, ptr %11543, align 8, !tbaa !90
  %11548 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11540, i64 0, i32 2
  store i32 0, ptr %11548, align 4, !tbaa !92
  %11549 = load ptr, ptr %11540, align 8, !tbaa !58
  %11550 = getelementptr inbounds ptr, ptr %11549, i64 2
  %11551 = load ptr, ptr %11550, align 8
  call void %11551(ptr noundef nonnull align 8 dereferenceable(16) %11540) #21
  %11552 = load ptr, ptr %11540, align 8, !tbaa !58
  %11553 = getelementptr inbounds ptr, ptr %11552, i64 3
  %11554 = load ptr, ptr %11553, align 8
  call void %11554(ptr noundef nonnull align 8 dereferenceable(16) %11540) #21
  br label %11566

11555:                                            ; preds = %11542
  %11556 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11557 = icmp eq i8 %11556, 0
  br i1 %11557, label %11560, label %11558

11558:                                            ; preds = %11555
  %11559 = add nsw i32 %11546, -1
  store i32 %11559, ptr %11543, align 8, !tbaa !73
  br label %11562

11560:                                            ; preds = %11555
  %11561 = atomicrmw volatile add ptr %11543, i32 -1 acq_rel, align 4
  br label %11562

11562:                                            ; preds = %11560, %11558
  %11563 = phi i32 [ %11546, %11558 ], [ %11561, %11560 ]
  %11564 = icmp eq i32 %11563, 1
  br i1 %11564, label %11565, label %11566, !prof !42

11565:                                            ; preds = %11562
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11540) #21
  br label %11566

11566:                                            ; preds = %11565, %11562, %11547, %11538
  %11567 = getelementptr inbounds %struct.TestCase, ptr %118, i64 7, i32 2
  %11568 = load ptr, ptr %11567, align 8, !tbaa !23
  %11569 = getelementptr inbounds %struct.TestCase, ptr %118, i64 7, i32 2, i32 2
  %11570 = icmp eq ptr %11568, %11569
  br i1 %11570, label %11572, label %11571

11571:                                            ; preds = %11566
  call void @_ZdlPv(ptr noundef %11568) #22
  br label %11572

11572:                                            ; preds = %11571, %11566
  %11573 = load ptr, ptr %11052, align 8, !tbaa !23
  %11574 = getelementptr inbounds %struct.TestCase, ptr %118, i64 7, i32 0, i32 2
  %11575 = icmp eq ptr %11573, %11574
  br i1 %11575, label %11577, label %11576

11576:                                            ; preds = %11572
  call void @_ZdlPv(ptr noundef %11573) #22
  br label %11577

11577:                                            ; preds = %11572, %11576
  %11578 = getelementptr inbounds %struct.TestCase, ptr %118, i64 6, i32 3, i32 0, i32 1
  %11579 = load ptr, ptr %11578, align 8, !tbaa !88
  %11580 = icmp eq ptr %11579, null
  br i1 %11580, label %11605, label %11581

11581:                                            ; preds = %11577
  %11582 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11579, i64 0, i32 1
  %11583 = load atomic i64, ptr %11582 acquire, align 8
  %11584 = icmp eq i64 %11583, 4294967297
  %11585 = trunc i64 %11583 to i32
  br i1 %11584, label %11586, label %11594

11586:                                            ; preds = %11581
  store i32 0, ptr %11582, align 8, !tbaa !90
  %11587 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11579, i64 0, i32 2
  store i32 0, ptr %11587, align 4, !tbaa !92
  %11588 = load ptr, ptr %11579, align 8, !tbaa !58
  %11589 = getelementptr inbounds ptr, ptr %11588, i64 2
  %11590 = load ptr, ptr %11589, align 8
  call void %11590(ptr noundef nonnull align 8 dereferenceable(16) %11579) #21
  %11591 = load ptr, ptr %11579, align 8, !tbaa !58
  %11592 = getelementptr inbounds ptr, ptr %11591, i64 3
  %11593 = load ptr, ptr %11592, align 8
  call void %11593(ptr noundef nonnull align 8 dereferenceable(16) %11579) #21
  br label %11605

11594:                                            ; preds = %11581
  %11595 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11596 = icmp eq i8 %11595, 0
  br i1 %11596, label %11599, label %11597

11597:                                            ; preds = %11594
  %11598 = add nsw i32 %11585, -1
  store i32 %11598, ptr %11582, align 8, !tbaa !73
  br label %11601

11599:                                            ; preds = %11594
  %11600 = atomicrmw volatile add ptr %11582, i32 -1 acq_rel, align 4
  br label %11601

11601:                                            ; preds = %11599, %11597
  %11602 = phi i32 [ %11585, %11597 ], [ %11600, %11599 ]
  %11603 = icmp eq i32 %11602, 1
  br i1 %11603, label %11604, label %11605, !prof !42

11604:                                            ; preds = %11601
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11579) #21
  br label %11605

11605:                                            ; preds = %11604, %11601, %11586, %11577
  %11606 = getelementptr inbounds %struct.TestCase, ptr %118, i64 6, i32 2
  %11607 = load ptr, ptr %11606, align 8, !tbaa !23
  %11608 = getelementptr inbounds %struct.TestCase, ptr %118, i64 6, i32 2, i32 2
  %11609 = icmp eq ptr %11607, %11608
  br i1 %11609, label %11611, label %11610

11610:                                            ; preds = %11605
  call void @_ZdlPv(ptr noundef %11607) #22
  br label %11611

11611:                                            ; preds = %11610, %11605
  %11612 = load ptr, ptr %11043, align 8, !tbaa !23
  %11613 = getelementptr inbounds %struct.TestCase, ptr %118, i64 6, i32 0, i32 2
  %11614 = icmp eq ptr %11612, %11613
  br i1 %11614, label %11616, label %11615

11615:                                            ; preds = %11611
  call void @_ZdlPv(ptr noundef %11612) #22
  br label %11616

11616:                                            ; preds = %11611, %11615
  %11617 = getelementptr inbounds %struct.TestCase, ptr %118, i64 5, i32 3, i32 0, i32 1
  %11618 = load ptr, ptr %11617, align 8, !tbaa !88
  %11619 = icmp eq ptr %11618, null
  br i1 %11619, label %11644, label %11620

11620:                                            ; preds = %11616
  %11621 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11618, i64 0, i32 1
  %11622 = load atomic i64, ptr %11621 acquire, align 8
  %11623 = icmp eq i64 %11622, 4294967297
  %11624 = trunc i64 %11622 to i32
  br i1 %11623, label %11625, label %11633

11625:                                            ; preds = %11620
  store i32 0, ptr %11621, align 8, !tbaa !90
  %11626 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11618, i64 0, i32 2
  store i32 0, ptr %11626, align 4, !tbaa !92
  %11627 = load ptr, ptr %11618, align 8, !tbaa !58
  %11628 = getelementptr inbounds ptr, ptr %11627, i64 2
  %11629 = load ptr, ptr %11628, align 8
  call void %11629(ptr noundef nonnull align 8 dereferenceable(16) %11618) #21
  %11630 = load ptr, ptr %11618, align 8, !tbaa !58
  %11631 = getelementptr inbounds ptr, ptr %11630, i64 3
  %11632 = load ptr, ptr %11631, align 8
  call void %11632(ptr noundef nonnull align 8 dereferenceable(16) %11618) #21
  br label %11644

11633:                                            ; preds = %11620
  %11634 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11635 = icmp eq i8 %11634, 0
  br i1 %11635, label %11638, label %11636

11636:                                            ; preds = %11633
  %11637 = add nsw i32 %11624, -1
  store i32 %11637, ptr %11621, align 8, !tbaa !73
  br label %11640

11638:                                            ; preds = %11633
  %11639 = atomicrmw volatile add ptr %11621, i32 -1 acq_rel, align 4
  br label %11640

11640:                                            ; preds = %11638, %11636
  %11641 = phi i32 [ %11624, %11636 ], [ %11639, %11638 ]
  %11642 = icmp eq i32 %11641, 1
  br i1 %11642, label %11643, label %11644, !prof !42

11643:                                            ; preds = %11640
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11618) #21
  br label %11644

11644:                                            ; preds = %11643, %11640, %11625, %11616
  %11645 = getelementptr inbounds %struct.TestCase, ptr %118, i64 5, i32 2
  %11646 = load ptr, ptr %11645, align 8, !tbaa !23
  %11647 = getelementptr inbounds %struct.TestCase, ptr %118, i64 5, i32 2, i32 2
  %11648 = icmp eq ptr %11646, %11647
  br i1 %11648, label %11650, label %11649

11649:                                            ; preds = %11644
  call void @_ZdlPv(ptr noundef %11646) #22
  br label %11650

11650:                                            ; preds = %11649, %11644
  %11651 = load ptr, ptr %11034, align 8, !tbaa !23
  %11652 = getelementptr inbounds %struct.TestCase, ptr %118, i64 5, i32 0, i32 2
  %11653 = icmp eq ptr %11651, %11652
  br i1 %11653, label %11655, label %11654

11654:                                            ; preds = %11650
  call void @_ZdlPv(ptr noundef %11651) #22
  br label %11655

11655:                                            ; preds = %11650, %11654
  %11656 = getelementptr inbounds %struct.TestCase, ptr %118, i64 4, i32 3, i32 0, i32 1
  %11657 = load ptr, ptr %11656, align 8, !tbaa !88
  %11658 = icmp eq ptr %11657, null
  br i1 %11658, label %11683, label %11659

11659:                                            ; preds = %11655
  %11660 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11657, i64 0, i32 1
  %11661 = load atomic i64, ptr %11660 acquire, align 8
  %11662 = icmp eq i64 %11661, 4294967297
  %11663 = trunc i64 %11661 to i32
  br i1 %11662, label %11664, label %11672

11664:                                            ; preds = %11659
  store i32 0, ptr %11660, align 8, !tbaa !90
  %11665 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11657, i64 0, i32 2
  store i32 0, ptr %11665, align 4, !tbaa !92
  %11666 = load ptr, ptr %11657, align 8, !tbaa !58
  %11667 = getelementptr inbounds ptr, ptr %11666, i64 2
  %11668 = load ptr, ptr %11667, align 8
  call void %11668(ptr noundef nonnull align 8 dereferenceable(16) %11657) #21
  %11669 = load ptr, ptr %11657, align 8, !tbaa !58
  %11670 = getelementptr inbounds ptr, ptr %11669, i64 3
  %11671 = load ptr, ptr %11670, align 8
  call void %11671(ptr noundef nonnull align 8 dereferenceable(16) %11657) #21
  br label %11683

11672:                                            ; preds = %11659
  %11673 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11674 = icmp eq i8 %11673, 0
  br i1 %11674, label %11677, label %11675

11675:                                            ; preds = %11672
  %11676 = add nsw i32 %11663, -1
  store i32 %11676, ptr %11660, align 8, !tbaa !73
  br label %11679

11677:                                            ; preds = %11672
  %11678 = atomicrmw volatile add ptr %11660, i32 -1 acq_rel, align 4
  br label %11679

11679:                                            ; preds = %11677, %11675
  %11680 = phi i32 [ %11663, %11675 ], [ %11678, %11677 ]
  %11681 = icmp eq i32 %11680, 1
  br i1 %11681, label %11682, label %11683, !prof !42

11682:                                            ; preds = %11679
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11657) #21
  br label %11683

11683:                                            ; preds = %11682, %11679, %11664, %11655
  %11684 = getelementptr inbounds %struct.TestCase, ptr %118, i64 4, i32 2
  %11685 = load ptr, ptr %11684, align 8, !tbaa !23
  %11686 = getelementptr inbounds %struct.TestCase, ptr %118, i64 4, i32 2, i32 2
  %11687 = icmp eq ptr %11685, %11686
  br i1 %11687, label %11689, label %11688

11688:                                            ; preds = %11683
  call void @_ZdlPv(ptr noundef %11685) #22
  br label %11689

11689:                                            ; preds = %11688, %11683
  %11690 = load ptr, ptr %11025, align 8, !tbaa !23
  %11691 = getelementptr inbounds %struct.TestCase, ptr %118, i64 4, i32 0, i32 2
  %11692 = icmp eq ptr %11690, %11691
  br i1 %11692, label %11694, label %11693

11693:                                            ; preds = %11689
  call void @_ZdlPv(ptr noundef %11690) #22
  br label %11694

11694:                                            ; preds = %11689, %11693
  %11695 = getelementptr inbounds %struct.TestCase, ptr %118, i64 3, i32 3, i32 0, i32 1
  %11696 = load ptr, ptr %11695, align 8, !tbaa !88
  %11697 = icmp eq ptr %11696, null
  br i1 %11697, label %11722, label %11698

11698:                                            ; preds = %11694
  %11699 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11696, i64 0, i32 1
  %11700 = load atomic i64, ptr %11699 acquire, align 8
  %11701 = icmp eq i64 %11700, 4294967297
  %11702 = trunc i64 %11700 to i32
  br i1 %11701, label %11703, label %11711

11703:                                            ; preds = %11698
  store i32 0, ptr %11699, align 8, !tbaa !90
  %11704 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11696, i64 0, i32 2
  store i32 0, ptr %11704, align 4, !tbaa !92
  %11705 = load ptr, ptr %11696, align 8, !tbaa !58
  %11706 = getelementptr inbounds ptr, ptr %11705, i64 2
  %11707 = load ptr, ptr %11706, align 8
  call void %11707(ptr noundef nonnull align 8 dereferenceable(16) %11696) #21
  %11708 = load ptr, ptr %11696, align 8, !tbaa !58
  %11709 = getelementptr inbounds ptr, ptr %11708, i64 3
  %11710 = load ptr, ptr %11709, align 8
  call void %11710(ptr noundef nonnull align 8 dereferenceable(16) %11696) #21
  br label %11722

11711:                                            ; preds = %11698
  %11712 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11713 = icmp eq i8 %11712, 0
  br i1 %11713, label %11716, label %11714

11714:                                            ; preds = %11711
  %11715 = add nsw i32 %11702, -1
  store i32 %11715, ptr %11699, align 8, !tbaa !73
  br label %11718

11716:                                            ; preds = %11711
  %11717 = atomicrmw volatile add ptr %11699, i32 -1 acq_rel, align 4
  br label %11718

11718:                                            ; preds = %11716, %11714
  %11719 = phi i32 [ %11702, %11714 ], [ %11717, %11716 ]
  %11720 = icmp eq i32 %11719, 1
  br i1 %11720, label %11721, label %11722, !prof !42

11721:                                            ; preds = %11718
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11696) #21
  br label %11722

11722:                                            ; preds = %11721, %11718, %11703, %11694
  %11723 = getelementptr inbounds %struct.TestCase, ptr %118, i64 3, i32 2
  %11724 = load ptr, ptr %11723, align 8, !tbaa !23
  %11725 = getelementptr inbounds %struct.TestCase, ptr %118, i64 3, i32 2, i32 2
  %11726 = icmp eq ptr %11724, %11725
  br i1 %11726, label %11728, label %11727

11727:                                            ; preds = %11722
  call void @_ZdlPv(ptr noundef %11724) #22
  br label %11728

11728:                                            ; preds = %11727, %11722
  %11729 = load ptr, ptr %11017, align 8, !tbaa !23
  %11730 = getelementptr inbounds %struct.TestCase, ptr %118, i64 3, i32 0, i32 2
  %11731 = icmp eq ptr %11729, %11730
  br i1 %11731, label %11733, label %11732

11732:                                            ; preds = %11728
  call void @_ZdlPv(ptr noundef %11729) #22
  br label %11733

11733:                                            ; preds = %11728, %11732
  %11734 = getelementptr inbounds %struct.TestCase, ptr %118, i64 2, i32 3, i32 0, i32 1
  %11735 = load ptr, ptr %11734, align 8, !tbaa !88
  %11736 = icmp eq ptr %11735, null
  br i1 %11736, label %11761, label %11737

11737:                                            ; preds = %11733
  %11738 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11735, i64 0, i32 1
  %11739 = load atomic i64, ptr %11738 acquire, align 8
  %11740 = icmp eq i64 %11739, 4294967297
  %11741 = trunc i64 %11739 to i32
  br i1 %11740, label %11742, label %11750

11742:                                            ; preds = %11737
  store i32 0, ptr %11738, align 8, !tbaa !90
  %11743 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11735, i64 0, i32 2
  store i32 0, ptr %11743, align 4, !tbaa !92
  %11744 = load ptr, ptr %11735, align 8, !tbaa !58
  %11745 = getelementptr inbounds ptr, ptr %11744, i64 2
  %11746 = load ptr, ptr %11745, align 8
  call void %11746(ptr noundef nonnull align 8 dereferenceable(16) %11735) #21
  %11747 = load ptr, ptr %11735, align 8, !tbaa !58
  %11748 = getelementptr inbounds ptr, ptr %11747, i64 3
  %11749 = load ptr, ptr %11748, align 8
  call void %11749(ptr noundef nonnull align 8 dereferenceable(16) %11735) #21
  br label %11761

11750:                                            ; preds = %11737
  %11751 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11752 = icmp eq i8 %11751, 0
  br i1 %11752, label %11755, label %11753

11753:                                            ; preds = %11750
  %11754 = add nsw i32 %11741, -1
  store i32 %11754, ptr %11738, align 8, !tbaa !73
  br label %11757

11755:                                            ; preds = %11750
  %11756 = atomicrmw volatile add ptr %11738, i32 -1 acq_rel, align 4
  br label %11757

11757:                                            ; preds = %11755, %11753
  %11758 = phi i32 [ %11741, %11753 ], [ %11756, %11755 ]
  %11759 = icmp eq i32 %11758, 1
  br i1 %11759, label %11760, label %11761, !prof !42

11760:                                            ; preds = %11757
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11735) #21
  br label %11761

11761:                                            ; preds = %11760, %11757, %11742, %11733
  %11762 = getelementptr inbounds %struct.TestCase, ptr %118, i64 2, i32 2
  %11763 = load ptr, ptr %11762, align 8, !tbaa !23
  %11764 = getelementptr inbounds %struct.TestCase, ptr %118, i64 2, i32 2, i32 2
  %11765 = icmp eq ptr %11763, %11764
  br i1 %11765, label %11767, label %11766

11766:                                            ; preds = %11761
  call void @_ZdlPv(ptr noundef %11763) #22
  br label %11767

11767:                                            ; preds = %11766, %11761
  %11768 = load ptr, ptr %11008, align 8, !tbaa !23
  %11769 = getelementptr inbounds %struct.TestCase, ptr %118, i64 2, i32 0, i32 2
  %11770 = icmp eq ptr %11768, %11769
  br i1 %11770, label %11772, label %11771

11771:                                            ; preds = %11767
  call void @_ZdlPv(ptr noundef %11768) #22
  br label %11772

11772:                                            ; preds = %11767, %11771
  %11773 = getelementptr inbounds %struct.TestCase, ptr %118, i64 1, i32 3, i32 0, i32 1
  %11774 = load ptr, ptr %11773, align 8, !tbaa !88
  %11775 = icmp eq ptr %11774, null
  br i1 %11775, label %11800, label %11776

11776:                                            ; preds = %11772
  %11777 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11774, i64 0, i32 1
  %11778 = load atomic i64, ptr %11777 acquire, align 8
  %11779 = icmp eq i64 %11778, 4294967297
  %11780 = trunc i64 %11778 to i32
  br i1 %11779, label %11781, label %11789

11781:                                            ; preds = %11776
  store i32 0, ptr %11777, align 8, !tbaa !90
  %11782 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11774, i64 0, i32 2
  store i32 0, ptr %11782, align 4, !tbaa !92
  %11783 = load ptr, ptr %11774, align 8, !tbaa !58
  %11784 = getelementptr inbounds ptr, ptr %11783, i64 2
  %11785 = load ptr, ptr %11784, align 8
  call void %11785(ptr noundef nonnull align 8 dereferenceable(16) %11774) #21
  %11786 = load ptr, ptr %11774, align 8, !tbaa !58
  %11787 = getelementptr inbounds ptr, ptr %11786, i64 3
  %11788 = load ptr, ptr %11787, align 8
  call void %11788(ptr noundef nonnull align 8 dereferenceable(16) %11774) #21
  br label %11800

11789:                                            ; preds = %11776
  %11790 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11791 = icmp eq i8 %11790, 0
  br i1 %11791, label %11794, label %11792

11792:                                            ; preds = %11789
  %11793 = add nsw i32 %11780, -1
  store i32 %11793, ptr %11777, align 8, !tbaa !73
  br label %11796

11794:                                            ; preds = %11789
  %11795 = atomicrmw volatile add ptr %11777, i32 -1 acq_rel, align 4
  br label %11796

11796:                                            ; preds = %11794, %11792
  %11797 = phi i32 [ %11780, %11792 ], [ %11795, %11794 ]
  %11798 = icmp eq i32 %11797, 1
  br i1 %11798, label %11799, label %11800, !prof !42

11799:                                            ; preds = %11796
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11774) #21
  br label %11800

11800:                                            ; preds = %11799, %11796, %11781, %11772
  %11801 = getelementptr inbounds %struct.TestCase, ptr %118, i64 1, i32 2
  %11802 = load ptr, ptr %11801, align 8, !tbaa !23
  %11803 = getelementptr inbounds %struct.TestCase, ptr %118, i64 1, i32 2, i32 2
  %11804 = icmp eq ptr %11802, %11803
  br i1 %11804, label %11806, label %11805

11805:                                            ; preds = %11800
  call void @_ZdlPv(ptr noundef %11802) #22
  br label %11806

11806:                                            ; preds = %11805, %11800
  %11807 = load ptr, ptr %10999, align 8, !tbaa !23
  %11808 = getelementptr inbounds %struct.TestCase, ptr %118, i64 1, i32 0, i32 2
  %11809 = icmp eq ptr %11807, %11808
  br i1 %11809, label %11811, label %11810

11810:                                            ; preds = %11806
  call void @_ZdlPv(ptr noundef %11807) #22
  br label %11811

11811:                                            ; preds = %11806, %11810
  %11812 = getelementptr inbounds %struct.TestCase, ptr %118, i64 0, i32 3, i32 0, i32 1
  %11813 = load ptr, ptr %11812, align 8, !tbaa !88
  %11814 = icmp eq ptr %11813, null
  br i1 %11814, label %11839, label %11815

11815:                                            ; preds = %11811
  %11816 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11813, i64 0, i32 1
  %11817 = load atomic i64, ptr %11816 acquire, align 8
  %11818 = icmp eq i64 %11817, 4294967297
  %11819 = trunc i64 %11817 to i32
  br i1 %11818, label %11820, label %11828

11820:                                            ; preds = %11815
  store i32 0, ptr %11816, align 8, !tbaa !90
  %11821 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11813, i64 0, i32 2
  store i32 0, ptr %11821, align 4, !tbaa !92
  %11822 = load ptr, ptr %11813, align 8, !tbaa !58
  %11823 = getelementptr inbounds ptr, ptr %11822, i64 2
  %11824 = load ptr, ptr %11823, align 8
  call void %11824(ptr noundef nonnull align 8 dereferenceable(16) %11813) #21
  %11825 = load ptr, ptr %11813, align 8, !tbaa !58
  %11826 = getelementptr inbounds ptr, ptr %11825, i64 3
  %11827 = load ptr, ptr %11826, align 8
  call void %11827(ptr noundef nonnull align 8 dereferenceable(16) %11813) #21
  br label %11839

11828:                                            ; preds = %11815
  %11829 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11830 = icmp eq i8 %11829, 0
  br i1 %11830, label %11833, label %11831

11831:                                            ; preds = %11828
  %11832 = add nsw i32 %11819, -1
  store i32 %11832, ptr %11816, align 8, !tbaa !73
  br label %11835

11833:                                            ; preds = %11828
  %11834 = atomicrmw volatile add ptr %11816, i32 -1 acq_rel, align 4
  br label %11835

11835:                                            ; preds = %11833, %11831
  %11836 = phi i32 [ %11819, %11831 ], [ %11834, %11833 ]
  %11837 = icmp eq i32 %11836, 1
  br i1 %11837, label %11838, label %11839, !prof !42

11838:                                            ; preds = %11835
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11813) #21
  br label %11839

11839:                                            ; preds = %11838, %11835, %11820, %11811
  %11840 = getelementptr inbounds %struct.TestCase, ptr %118, i64 0, i32 2
  %11841 = load ptr, ptr %11840, align 8, !tbaa !23
  %11842 = getelementptr inbounds %struct.TestCase, ptr %118, i64 0, i32 2, i32 2
  %11843 = icmp eq ptr %11841, %11842
  br i1 %11843, label %11845, label %11844

11844:                                            ; preds = %11839
  call void @_ZdlPv(ptr noundef %11841) #22
  br label %11845

11845:                                            ; preds = %11844, %11839
  %11846 = load ptr, ptr %118, align 8, !tbaa !23
  %11847 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %118, i64 0, i32 2
  %11848 = icmp eq ptr %11846, %11847
  br i1 %11848, label %11850, label %11849

11849:                                            ; preds = %11845
  call void @_ZdlPv(ptr noundef %11846) #22
  br label %11850

11850:                                            ; preds = %11849, %11845, %11262
  %11851 = phi { ptr, i32 } [ %11263, %11262 ], [ %11265, %11845 ], [ %11265, %11849 ]
  %11852 = phi i1 [ true, %11262 ], [ false, %11845 ], [ false, %11849 ]
  %11853 = load ptr, ptr %133, align 8, !tbaa !23
  %11854 = icmp eq ptr %11853, %11104
  br i1 %11854, label %11856, label %11855

11855:                                            ; preds = %11850
  call void @_ZdlPv(ptr noundef %11853) #22
  br label %11856

11856:                                            ; preds = %11855, %11850, %11260
  %11857 = phi ptr [ %11098, %11260 ], [ %11103, %11855 ], [ %11103, %11850 ]
  %11858 = phi { ptr, i32 } [ %11261, %11260 ], [ %11851, %11855 ], [ %11851, %11850 ]
  %11859 = phi i1 [ true, %11260 ], [ %11852, %11855 ], [ %11852, %11850 ]
  %11860 = load ptr, ptr %132, align 8, !tbaa !23
  %11861 = icmp eq ptr %11860, %11099
  br i1 %11861, label %11863, label %11862

11862:                                            ; preds = %11856
  call void @_ZdlPv(ptr noundef %11860) #22
  br label %11863

11863:                                            ; preds = %11862, %11856, %11258
  %11864 = phi ptr [ %11093, %11258 ], [ %11857, %11862 ], [ %11857, %11856 ]
  %11865 = phi { ptr, i32 } [ %11259, %11258 ], [ %11858, %11862 ], [ %11858, %11856 ]
  %11866 = phi i1 [ true, %11258 ], [ %11859, %11862 ], [ %11859, %11856 ]
  %11867 = load ptr, ptr %131, align 8, !tbaa !23
  %11868 = icmp eq ptr %11867, %11094
  br i1 %11868, label %11870, label %11869

11869:                                            ; preds = %11863
  call void @_ZdlPv(ptr noundef %11867) #22
  br label %11870

11870:                                            ; preds = %11869, %11863, %11256
  %11871 = phi ptr [ %11084, %11256 ], [ %11864, %11869 ], [ %11864, %11863 ]
  %11872 = phi { ptr, i32 } [ %11257, %11256 ], [ %11865, %11869 ], [ %11865, %11863 ]
  %11873 = phi i1 [ true, %11256 ], [ %11866, %11869 ], [ %11866, %11863 ]
  %11874 = load ptr, ptr %130, align 8, !tbaa !23
  %11875 = icmp eq ptr %11874, %11085
  br i1 %11875, label %11877, label %11876

11876:                                            ; preds = %11870
  call void @_ZdlPv(ptr noundef %11874) #22
  br label %11877

11877:                                            ; preds = %11876, %11870, %11254, %11252
  %11878 = phi ptr [ %11075, %11252 ], [ %11084, %11254 ], [ %11871, %11870 ], [ %11871, %11876 ]
  %11879 = phi { ptr, i32 } [ %11253, %11252 ], [ %11255, %11254 ], [ %11872, %11870 ], [ %11872, %11876 ]
  %11880 = phi i1 [ true, %11252 ], [ true, %11254 ], [ %11873, %11870 ], [ %11873, %11876 ]
  %11881 = load ptr, ptr %129, align 8, !tbaa !23
  %11882 = icmp eq ptr %11881, %11076
  br i1 %11882, label %11884, label %11883

11883:                                            ; preds = %11877
  call void @_ZdlPv(ptr noundef %11881) #22
  br label %11884

11884:                                            ; preds = %11883, %11877, %11250, %11248
  %11885 = phi ptr [ %11066, %11248 ], [ %11075, %11250 ], [ %11878, %11877 ], [ %11878, %11883 ]
  %11886 = phi { ptr, i32 } [ %11249, %11248 ], [ %11251, %11250 ], [ %11879, %11877 ], [ %11879, %11883 ]
  %11887 = phi i1 [ true, %11248 ], [ true, %11250 ], [ %11880, %11877 ], [ %11880, %11883 ]
  %11888 = load ptr, ptr %128, align 8, !tbaa !23
  %11889 = icmp eq ptr %11888, %11067
  br i1 %11889, label %11891, label %11890

11890:                                            ; preds = %11884
  call void @_ZdlPv(ptr noundef %11888) #22
  br label %11891

11891:                                            ; preds = %11890, %11884, %11246, %11244
  %11892 = phi ptr [ %11057, %11244 ], [ %11066, %11246 ], [ %11885, %11884 ], [ %11885, %11890 ]
  %11893 = phi { ptr, i32 } [ %11245, %11244 ], [ %11247, %11246 ], [ %11886, %11884 ], [ %11886, %11890 ]
  %11894 = phi i1 [ true, %11244 ], [ true, %11246 ], [ %11887, %11884 ], [ %11887, %11890 ]
  %11895 = load ptr, ptr %127, align 8, !tbaa !23
  %11896 = icmp eq ptr %11895, %11058
  br i1 %11896, label %11898, label %11897

11897:                                            ; preds = %11891
  call void @_ZdlPv(ptr noundef %11895) #22
  br label %11898

11898:                                            ; preds = %11897, %11891, %11242, %11240
  %11899 = phi ptr [ %11052, %11240 ], [ %11057, %11242 ], [ %11892, %11891 ], [ %11892, %11897 ]
  %11900 = phi { ptr, i32 } [ %11241, %11240 ], [ %11243, %11242 ], [ %11893, %11891 ], [ %11893, %11897 ]
  %11901 = phi i1 [ true, %11240 ], [ true, %11242 ], [ %11894, %11891 ], [ %11894, %11897 ]
  %11902 = load ptr, ptr %126, align 8, !tbaa !23
  %11903 = icmp eq ptr %11902, %11053
  br i1 %11903, label %11905, label %11904

11904:                                            ; preds = %11898
  call void @_ZdlPv(ptr noundef %11902) #22
  br label %11905

11905:                                            ; preds = %11904, %11898, %11238
  %11906 = phi ptr [ %11043, %11238 ], [ %11899, %11904 ], [ %11899, %11898 ]
  %11907 = phi { ptr, i32 } [ %11239, %11238 ], [ %11900, %11904 ], [ %11900, %11898 ]
  %11908 = phi i1 [ true, %11238 ], [ %11901, %11904 ], [ %11901, %11898 ]
  %11909 = load ptr, ptr %125, align 8, !tbaa !23
  %11910 = icmp eq ptr %11909, %11044
  br i1 %11910, label %11912, label %11911

11911:                                            ; preds = %11905
  call void @_ZdlPv(ptr noundef %11909) #22
  br label %11912

11912:                                            ; preds = %11911, %11905, %11236, %11234
  %11913 = phi ptr [ %11034, %11234 ], [ %11043, %11236 ], [ %11906, %11905 ], [ %11906, %11911 ]
  %11914 = phi { ptr, i32 } [ %11235, %11234 ], [ %11237, %11236 ], [ %11907, %11905 ], [ %11907, %11911 ]
  %11915 = phi i1 [ true, %11234 ], [ true, %11236 ], [ %11908, %11905 ], [ %11908, %11911 ]
  %11916 = load ptr, ptr %124, align 8, !tbaa !23
  %11917 = icmp eq ptr %11916, %11035
  br i1 %11917, label %11919, label %11918

11918:                                            ; preds = %11912
  call void @_ZdlPv(ptr noundef %11916) #22
  br label %11919

11919:                                            ; preds = %11918, %11912, %11232, %11230
  %11920 = phi ptr [ %11025, %11230 ], [ %11034, %11232 ], [ %11913, %11912 ], [ %11913, %11918 ]
  %11921 = phi { ptr, i32 } [ %11231, %11230 ], [ %11233, %11232 ], [ %11914, %11912 ], [ %11914, %11918 ]
  %11922 = phi i1 [ true, %11230 ], [ true, %11232 ], [ %11915, %11912 ], [ %11915, %11918 ]
  %11923 = load ptr, ptr %123, align 8, !tbaa !23
  %11924 = icmp eq ptr %11923, %11026
  br i1 %11924, label %11926, label %11925

11925:                                            ; preds = %11919
  call void @_ZdlPv(ptr noundef %11923) #22
  br label %11926

11926:                                            ; preds = %11925, %11919, %11228, %11226
  %11927 = phi ptr [ %11017, %11226 ], [ %11025, %11228 ], [ %11920, %11919 ], [ %11920, %11925 ]
  %11928 = phi { ptr, i32 } [ %11227, %11226 ], [ %11229, %11228 ], [ %11921, %11919 ], [ %11921, %11925 ]
  %11929 = phi i1 [ true, %11226 ], [ true, %11228 ], [ %11922, %11919 ], [ %11922, %11925 ]
  %11930 = load ptr, ptr %122, align 8, !tbaa !23
  %11931 = icmp eq ptr %11930, %11018
  br i1 %11931, label %11933, label %11932

11932:                                            ; preds = %11926
  call void @_ZdlPv(ptr noundef %11930) #22
  br label %11933

11933:                                            ; preds = %11932, %11926, %11224, %11222
  %11934 = phi ptr [ %11008, %11222 ], [ %11017, %11224 ], [ %11927, %11926 ], [ %11927, %11932 ]
  %11935 = phi { ptr, i32 } [ %11223, %11222 ], [ %11225, %11224 ], [ %11928, %11926 ], [ %11928, %11932 ]
  %11936 = phi i1 [ true, %11222 ], [ true, %11224 ], [ %11929, %11926 ], [ %11929, %11932 ]
  %11937 = load ptr, ptr %121, align 8, !tbaa !23
  %11938 = icmp eq ptr %11937, %11009
  br i1 %11938, label %11940, label %11939

11939:                                            ; preds = %11933
  call void @_ZdlPv(ptr noundef %11937) #22
  br label %11940

11940:                                            ; preds = %11939, %11933, %11220, %11218
  %11941 = phi ptr [ %10999, %11218 ], [ %11008, %11220 ], [ %11934, %11933 ], [ %11934, %11939 ]
  %11942 = phi { ptr, i32 } [ %11219, %11218 ], [ %11221, %11220 ], [ %11935, %11933 ], [ %11935, %11939 ]
  %11943 = phi i1 [ true, %11218 ], [ true, %11220 ], [ %11936, %11933 ], [ %11936, %11939 ]
  %11944 = load ptr, ptr %120, align 8, !tbaa !23
  %11945 = icmp eq ptr %11944, %11000
  br i1 %11945, label %11947, label %11946

11946:                                            ; preds = %11940
  call void @_ZdlPv(ptr noundef %11944) #22
  br label %11947

11947:                                            ; preds = %11946, %11940, %11216, %11214
  %11948 = phi ptr [ %118, %11214 ], [ %10999, %11216 ], [ %11941, %11940 ], [ %11941, %11946 ]
  %11949 = phi { ptr, i32 } [ %11215, %11214 ], [ %11217, %11216 ], [ %11942, %11940 ], [ %11942, %11946 ]
  %11950 = phi i1 [ true, %11214 ], [ true, %11216 ], [ %11943, %11940 ], [ %11943, %11946 ]
  %11951 = load ptr, ptr %119, align 8, !tbaa !23
  %11952 = icmp eq ptr %11951, %10993
  br i1 %11952, label %11954, label %11953

11953:                                            ; preds = %11947
  call void @_ZdlPv(ptr noundef %11951) #22
  br label %11954

11954:                                            ; preds = %11953, %11947
  %11955 = icmp ne ptr %118, %11948
  %11956 = select i1 %11950, i1 %11955, i1 false
  br i1 %11956, label %11957, label %12000

11957:                                            ; preds = %11954, %11998
  %11958 = phi ptr [ %11959, %11998 ], [ %11948, %11954 ]
  %11959 = getelementptr inbounds %struct.TestCase, ptr %11958, i64 -1
  %11960 = getelementptr %struct.TestCase, ptr %11958, i64 -1, i32 3, i32 0, i32 1
  %11961 = load ptr, ptr %11960, align 8, !tbaa !88
  %11962 = icmp eq ptr %11961, null
  br i1 %11962, label %11987, label %11963

11963:                                            ; preds = %11957
  %11964 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11961, i64 0, i32 1
  %11965 = load atomic i64, ptr %11964 acquire, align 8
  %11966 = icmp eq i64 %11965, 4294967297
  %11967 = trunc i64 %11965 to i32
  br i1 %11966, label %11968, label %11976

11968:                                            ; preds = %11963
  store i32 0, ptr %11964, align 8, !tbaa !90
  %11969 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %11961, i64 0, i32 2
  store i32 0, ptr %11969, align 4, !tbaa !92
  %11970 = load ptr, ptr %11961, align 8, !tbaa !58
  %11971 = getelementptr inbounds ptr, ptr %11970, i64 2
  %11972 = load ptr, ptr %11971, align 8
  call void %11972(ptr noundef nonnull align 8 dereferenceable(16) %11961) #21
  %11973 = load ptr, ptr %11961, align 8, !tbaa !58
  %11974 = getelementptr inbounds ptr, ptr %11973, i64 3
  %11975 = load ptr, ptr %11974, align 8
  call void %11975(ptr noundef nonnull align 8 dereferenceable(16) %11961) #21
  br label %11987

11976:                                            ; preds = %11963
  %11977 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %11978 = icmp eq i8 %11977, 0
  br i1 %11978, label %11981, label %11979

11979:                                            ; preds = %11976
  %11980 = add nsw i32 %11967, -1
  store i32 %11980, ptr %11964, align 8, !tbaa !73
  br label %11983

11981:                                            ; preds = %11976
  %11982 = atomicrmw volatile add ptr %11964, i32 -1 acq_rel, align 4
  br label %11983

11983:                                            ; preds = %11981, %11979
  %11984 = phi i32 [ %11967, %11979 ], [ %11982, %11981 ]
  %11985 = icmp eq i32 %11984, 1
  br i1 %11985, label %11986, label %11987, !prof !42

11986:                                            ; preds = %11983
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %11961) #21
  br label %11987

11987:                                            ; preds = %11986, %11983, %11968, %11957
  %11988 = getelementptr %struct.TestCase, ptr %11958, i64 -1, i32 2
  %11989 = load ptr, ptr %11988, align 8, !tbaa !23
  %11990 = getelementptr %struct.TestCase, ptr %11958, i64 -1, i32 2, i32 2
  %11991 = icmp eq ptr %11989, %11990
  br i1 %11991, label %11993, label %11992

11992:                                            ; preds = %11987
  call void @_ZdlPv(ptr noundef %11989) #22
  br label %11993

11993:                                            ; preds = %11992, %11987
  %11994 = load ptr, ptr %11959, align 8, !tbaa !23
  %11995 = getelementptr %struct.TestCase, ptr %11958, i64 -1, i32 0, i32 2
  %11996 = icmp eq ptr %11994, %11995
  br i1 %11996, label %11998, label %11997

11997:                                            ; preds = %11993
  call void @_ZdlPv(ptr noundef %11994) #22
  br label %11998

11998:                                            ; preds = %11993, %11997
  %11999 = icmp eq ptr %11959, %118
  br i1 %11999, label %12000, label %11957

12000:                                            ; preds = %11998, %11954
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %118) #21
  br label %762

12001:                                            ; preds = %11210, %11213
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %118) #21
  store i32 %11108, ptr @dummy399, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %119)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %120)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %121)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %122)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %123)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %124)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %125)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %126)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %127)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %128)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %129)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %130)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %131)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %132)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %133)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %106)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %105) #21
  %12002 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %106, i64 0, i32 2
  store ptr %12002, ptr %106, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %104) #21
  store i64 60, ptr %104, align 8, !tbaa !74
  %12003 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %106, ptr noundef nonnull align 8 dereferenceable(8) %104, i64 noundef 0)
  store ptr %12003, ptr %106, align 8, !tbaa !23
  %12004 = load i64, ptr %104, align 8, !tbaa !74
  store i64 %12004, ptr %12002, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(60) %12003, ptr noundef nonnull align 1 dereferenceable(60) @.str.157, i64 60, i1 false)
  %12005 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %106, i64 0, i32 1
  store i64 %12004, ptr %12005, align 8, !tbaa !10
  %12006 = getelementptr inbounds i8, ptr %12003, i64 %12004
  store i8 0, ptr %12006, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %104) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %105, ptr noundef nonnull %106, i32 noundef 0)
          to label %12007 unwind label %12052

12007:                                            ; preds = %12001
  %12008 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 4, ptr nonnull %105, i64 1)
          to label %12009 unwind label %12054

12009:                                            ; preds = %12007
  %12010 = getelementptr inbounds %struct.TestCase, ptr %105, i64 0, i32 3, i32 0, i32 1
  %12011 = load ptr, ptr %12010, align 8, !tbaa !88
  %12012 = icmp eq ptr %12011, null
  br i1 %12012, label %12037, label %12013

12013:                                            ; preds = %12009
  %12014 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12011, i64 0, i32 1
  %12015 = load atomic i64, ptr %12014 acquire, align 8
  %12016 = icmp eq i64 %12015, 4294967297
  %12017 = trunc i64 %12015 to i32
  br i1 %12016, label %12018, label %12026

12018:                                            ; preds = %12013
  store i32 0, ptr %12014, align 8, !tbaa !90
  %12019 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12011, i64 0, i32 2
  store i32 0, ptr %12019, align 4, !tbaa !92
  %12020 = load ptr, ptr %12011, align 8, !tbaa !58
  %12021 = getelementptr inbounds ptr, ptr %12020, i64 2
  %12022 = load ptr, ptr %12021, align 8
  call void %12022(ptr noundef nonnull align 8 dereferenceable(16) %12011) #21
  %12023 = load ptr, ptr %12011, align 8, !tbaa !58
  %12024 = getelementptr inbounds ptr, ptr %12023, i64 3
  %12025 = load ptr, ptr %12024, align 8
  call void %12025(ptr noundef nonnull align 8 dereferenceable(16) %12011) #21
  br label %12037

12026:                                            ; preds = %12013
  %12027 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12028 = icmp eq i8 %12027, 0
  br i1 %12028, label %12031, label %12029

12029:                                            ; preds = %12026
  %12030 = add nsw i32 %12017, -1
  store i32 %12030, ptr %12014, align 8, !tbaa !73
  br label %12033

12031:                                            ; preds = %12026
  %12032 = atomicrmw volatile add ptr %12014, i32 -1 acq_rel, align 4
  br label %12033

12033:                                            ; preds = %12031, %12029
  %12034 = phi i32 [ %12017, %12029 ], [ %12032, %12031 ]
  %12035 = icmp eq i32 %12034, 1
  br i1 %12035, label %12036, label %12037, !prof !42

12036:                                            ; preds = %12033
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12011) #21
  br label %12037

12037:                                            ; preds = %12036, %12033, %12018, %12009
  %12038 = getelementptr inbounds %struct.TestCase, ptr %105, i64 0, i32 2
  %12039 = load ptr, ptr %12038, align 8, !tbaa !23
  %12040 = getelementptr inbounds %struct.TestCase, ptr %105, i64 0, i32 2, i32 2
  %12041 = icmp eq ptr %12039, %12040
  br i1 %12041, label %12043, label %12042

12042:                                            ; preds = %12037
  call void @_ZdlPv(ptr noundef %12039) #22
  br label %12043

12043:                                            ; preds = %12042, %12037
  %12044 = load ptr, ptr %105, align 8, !tbaa !23
  %12045 = getelementptr inbounds %struct.TestCase, ptr %105, i64 0, i32 0, i32 2
  %12046 = icmp eq ptr %12044, %12045
  br i1 %12046, label %12048, label %12047

12047:                                            ; preds = %12043
  call void @_ZdlPv(ptr noundef %12044) #22
  br label %12048

12048:                                            ; preds = %12047, %12043
  %12049 = load ptr, ptr %106, align 8, !tbaa !23
  %12050 = icmp eq ptr %12049, %12002
  br i1 %12050, label %12100, label %12051

12051:                                            ; preds = %12048
  call void @_ZdlPv(ptr noundef %12049) #22
  br label %12100

12052:                                            ; preds = %12001
  %12053 = landingpad { ptr, i32 }
          cleanup
  br label %12094

12054:                                            ; preds = %12007
  %12055 = landingpad { ptr, i32 }
          cleanup
  %12056 = getelementptr inbounds %struct.TestCase, ptr %105, i64 0, i32 3, i32 0, i32 1
  %12057 = load ptr, ptr %12056, align 8, !tbaa !88
  %12058 = icmp eq ptr %12057, null
  br i1 %12058, label %12083, label %12059

12059:                                            ; preds = %12054
  %12060 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12057, i64 0, i32 1
  %12061 = load atomic i64, ptr %12060 acquire, align 8
  %12062 = icmp eq i64 %12061, 4294967297
  %12063 = trunc i64 %12061 to i32
  br i1 %12062, label %12064, label %12072

12064:                                            ; preds = %12059
  store i32 0, ptr %12060, align 8, !tbaa !90
  %12065 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12057, i64 0, i32 2
  store i32 0, ptr %12065, align 4, !tbaa !92
  %12066 = load ptr, ptr %12057, align 8, !tbaa !58
  %12067 = getelementptr inbounds ptr, ptr %12066, i64 2
  %12068 = load ptr, ptr %12067, align 8
  call void %12068(ptr noundef nonnull align 8 dereferenceable(16) %12057) #21
  %12069 = load ptr, ptr %12057, align 8, !tbaa !58
  %12070 = getelementptr inbounds ptr, ptr %12069, i64 3
  %12071 = load ptr, ptr %12070, align 8
  call void %12071(ptr noundef nonnull align 8 dereferenceable(16) %12057) #21
  br label %12083

12072:                                            ; preds = %12059
  %12073 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12074 = icmp eq i8 %12073, 0
  br i1 %12074, label %12077, label %12075

12075:                                            ; preds = %12072
  %12076 = add nsw i32 %12063, -1
  store i32 %12076, ptr %12060, align 8, !tbaa !73
  br label %12079

12077:                                            ; preds = %12072
  %12078 = atomicrmw volatile add ptr %12060, i32 -1 acq_rel, align 4
  br label %12079

12079:                                            ; preds = %12077, %12075
  %12080 = phi i32 [ %12063, %12075 ], [ %12078, %12077 ]
  %12081 = icmp eq i32 %12080, 1
  br i1 %12081, label %12082, label %12083, !prof !42

12082:                                            ; preds = %12079
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12057) #21
  br label %12083

12083:                                            ; preds = %12082, %12079, %12064, %12054
  %12084 = getelementptr inbounds %struct.TestCase, ptr %105, i64 0, i32 2
  %12085 = load ptr, ptr %12084, align 8, !tbaa !23
  %12086 = getelementptr inbounds %struct.TestCase, ptr %105, i64 0, i32 2, i32 2
  %12087 = icmp eq ptr %12085, %12086
  br i1 %12087, label %12089, label %12088

12088:                                            ; preds = %12083
  call void @_ZdlPv(ptr noundef %12085) #22
  br label %12089

12089:                                            ; preds = %12088, %12083
  %12090 = load ptr, ptr %105, align 8, !tbaa !23
  %12091 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %105, i64 0, i32 2
  %12092 = icmp eq ptr %12090, %12091
  br i1 %12092, label %12094, label %12093

12093:                                            ; preds = %12089
  call void @_ZdlPv(ptr noundef %12090) #22
  br label %12094

12094:                                            ; preds = %12093, %12089, %12052
  %12095 = phi { ptr, i32 } [ %12053, %12052 ], [ %12055, %12089 ], [ %12055, %12093 ]
  %12096 = load ptr, ptr %106, align 8, !tbaa !23
  %12097 = icmp eq ptr %12096, %12002
  br i1 %12097, label %12099, label %12098

12098:                                            ; preds = %12094
  call void @_ZdlPv(ptr noundef %12096) #22
  br label %12099

12099:                                            ; preds = %12098, %12094
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %105) #21
  br label %762

12100:                                            ; preds = %12048, %12051
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %105) #21
  store i32 %12008, ptr @dummy401, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %106)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %103) #21
  %12101 = getelementptr inbounds i8, ptr %103, i64 8
  store i64 0, ptr %12101, align 8
  %12102 = getelementptr inbounds %"class.std::function", ptr %103, i64 0, i32 1
  %12103 = getelementptr inbounds %"class.std::_Function_base", ptr %103, i64 0, i32 1
  store ptr @_Z23CheckIterationInvariantRK7Results, ptr %103, align 8, !tbaa !47
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E9_M_invokeERKSt9_Any_dataS2_, ptr %12102, align 8, !tbaa !115
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, ptr %12103, align 8, !tbaa !118
  %12104 = invoke noundef i64 @_Z10AddCheckerPKcRKSt8functionIFvRK7ResultsEE(ptr noundef nonnull @.str.149, ptr noundef nonnull align 8 dereferenceable(32) %103)
          to label %12105 unwind label %12113

12105:                                            ; preds = %12100
  %12106 = load ptr, ptr %12103, align 8, !tbaa !118
  %12107 = icmp eq ptr %12106, null
  br i1 %12107, label %12123, label %12108

12108:                                            ; preds = %12105
  %12109 = invoke noundef zeroext i1 %12106(ptr noundef nonnull align 8 dereferenceable(16) %103, ptr noundef nonnull align 8 dereferenceable(16) %103, i32 noundef 3)
          to label %12123 unwind label %12110

12110:                                            ; preds = %12108
  %12111 = landingpad { ptr, i32 }
          catch ptr null
  %12112 = extractvalue { ptr, i32 } %12111, 0
  call void @__clang_call_terminate(ptr %12112) #24
  unreachable

12113:                                            ; preds = %12100
  %12114 = landingpad { ptr, i32 }
          cleanup
  %12115 = load ptr, ptr %12103, align 8, !tbaa !118
  %12116 = icmp eq ptr %12115, null
  br i1 %12116, label %12122, label %12117

12117:                                            ; preds = %12113
  %12118 = invoke noundef zeroext i1 %12115(ptr noundef nonnull align 8 dereferenceable(16) %103, ptr noundef nonnull align 8 dereferenceable(16) %103, i32 noundef 3)
          to label %12122 unwind label %12119

12119:                                            ; preds = %12117
  %12120 = landingpad { ptr, i32 }
          catch ptr null
  %12121 = extractvalue { ptr, i32 } %12120, 0
  call void @__clang_call_terminate(ptr %12121) #24
  unreachable

12122:                                            ; preds = %12117, %12113
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %103) #21
  br label %762

12123:                                            ; preds = %12105, %12108
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %103) #21
  store i64 %12104, ptr @dummy411, align 8, !tbaa !74
  %12124 = call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #25
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %12124, ptr noundef nonnull @.str.161)
          to label %12127 unwind label %12125

12125:                                            ; preds = %12123
  %12126 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %12124) #22
  br label %762

12127:                                            ; preds = %12123
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %12124, align 8, !tbaa !58
  %12128 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %12124, i64 0, i32 1
  store ptr @_Z37BM_Counters_kIsIterationInvariantRateRN9benchmark5StateE, ptr %12128, align 8, !tbaa !93
  %12129 = call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %12124)
  store ptr %12129, ptr @_ZL28benchmark_uniq_11_benchmark_, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %102)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %101) #21
  %12130 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %102, i64 0, i32 2
  store ptr %12130, ptr %102, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %100) #21
  store i64 85, ptr %100, align 8, !tbaa !74
  %12131 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %102, ptr noundef nonnull align 8 dereferenceable(8) %100, i64 noundef 0)
  store ptr %12131, ptr %102, align 8, !tbaa !23
  %12132 = load i64, ptr %100, align 8, !tbaa !74
  store i64 %12132, ptr %12130, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(85) %12131, ptr noundef nonnull align 1 dereferenceable(85) @.str.163, i64 85, i1 false)
  %12133 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %102, i64 0, i32 1
  store i64 %12132, ptr %12133, align 8, !tbaa !10
  %12134 = getelementptr inbounds i8, ptr %12131, i64 %12132
  store i8 0, ptr %12134, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %100) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %101, ptr noundef nonnull %102, i32 noundef 0)
          to label %12135 unwind label %12180

12135:                                            ; preds = %12127
  %12136 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 0, ptr nonnull %101, i64 1)
          to label %12137 unwind label %12182

12137:                                            ; preds = %12135
  %12138 = getelementptr inbounds %struct.TestCase, ptr %101, i64 0, i32 3, i32 0, i32 1
  %12139 = load ptr, ptr %12138, align 8, !tbaa !88
  %12140 = icmp eq ptr %12139, null
  br i1 %12140, label %12165, label %12141

12141:                                            ; preds = %12137
  %12142 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12139, i64 0, i32 1
  %12143 = load atomic i64, ptr %12142 acquire, align 8
  %12144 = icmp eq i64 %12143, 4294967297
  %12145 = trunc i64 %12143 to i32
  br i1 %12144, label %12146, label %12154

12146:                                            ; preds = %12141
  store i32 0, ptr %12142, align 8, !tbaa !90
  %12147 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12139, i64 0, i32 2
  store i32 0, ptr %12147, align 4, !tbaa !92
  %12148 = load ptr, ptr %12139, align 8, !tbaa !58
  %12149 = getelementptr inbounds ptr, ptr %12148, i64 2
  %12150 = load ptr, ptr %12149, align 8
  call void %12150(ptr noundef nonnull align 8 dereferenceable(16) %12139) #21
  %12151 = load ptr, ptr %12139, align 8, !tbaa !58
  %12152 = getelementptr inbounds ptr, ptr %12151, i64 3
  %12153 = load ptr, ptr %12152, align 8
  call void %12153(ptr noundef nonnull align 8 dereferenceable(16) %12139) #21
  br label %12165

12154:                                            ; preds = %12141
  %12155 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12156 = icmp eq i8 %12155, 0
  br i1 %12156, label %12159, label %12157

12157:                                            ; preds = %12154
  %12158 = add nsw i32 %12145, -1
  store i32 %12158, ptr %12142, align 8, !tbaa !73
  br label %12161

12159:                                            ; preds = %12154
  %12160 = atomicrmw volatile add ptr %12142, i32 -1 acq_rel, align 4
  br label %12161

12161:                                            ; preds = %12159, %12157
  %12162 = phi i32 [ %12145, %12157 ], [ %12160, %12159 ]
  %12163 = icmp eq i32 %12162, 1
  br i1 %12163, label %12164, label %12165, !prof !42

12164:                                            ; preds = %12161
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12139) #21
  br label %12165

12165:                                            ; preds = %12164, %12161, %12146, %12137
  %12166 = getelementptr inbounds %struct.TestCase, ptr %101, i64 0, i32 2
  %12167 = load ptr, ptr %12166, align 8, !tbaa !23
  %12168 = getelementptr inbounds %struct.TestCase, ptr %101, i64 0, i32 2, i32 2
  %12169 = icmp eq ptr %12167, %12168
  br i1 %12169, label %12171, label %12170

12170:                                            ; preds = %12165
  call void @_ZdlPv(ptr noundef %12167) #22
  br label %12171

12171:                                            ; preds = %12170, %12165
  %12172 = load ptr, ptr %101, align 8, !tbaa !23
  %12173 = getelementptr inbounds %struct.TestCase, ptr %101, i64 0, i32 0, i32 2
  %12174 = icmp eq ptr %12172, %12173
  br i1 %12174, label %12176, label %12175

12175:                                            ; preds = %12171
  call void @_ZdlPv(ptr noundef %12172) #22
  br label %12176

12176:                                            ; preds = %12175, %12171
  %12177 = load ptr, ptr %102, align 8, !tbaa !23
  %12178 = icmp eq ptr %12177, %12130
  br i1 %12178, label %12228, label %12179

12179:                                            ; preds = %12176
  call void @_ZdlPv(ptr noundef %12177) #22
  br label %12228

12180:                                            ; preds = %12127
  %12181 = landingpad { ptr, i32 }
          cleanup
  br label %12222

12182:                                            ; preds = %12135
  %12183 = landingpad { ptr, i32 }
          cleanup
  %12184 = getelementptr inbounds %struct.TestCase, ptr %101, i64 0, i32 3, i32 0, i32 1
  %12185 = load ptr, ptr %12184, align 8, !tbaa !88
  %12186 = icmp eq ptr %12185, null
  br i1 %12186, label %12211, label %12187

12187:                                            ; preds = %12182
  %12188 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12185, i64 0, i32 1
  %12189 = load atomic i64, ptr %12188 acquire, align 8
  %12190 = icmp eq i64 %12189, 4294967297
  %12191 = trunc i64 %12189 to i32
  br i1 %12190, label %12192, label %12200

12192:                                            ; preds = %12187
  store i32 0, ptr %12188, align 8, !tbaa !90
  %12193 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12185, i64 0, i32 2
  store i32 0, ptr %12193, align 4, !tbaa !92
  %12194 = load ptr, ptr %12185, align 8, !tbaa !58
  %12195 = getelementptr inbounds ptr, ptr %12194, i64 2
  %12196 = load ptr, ptr %12195, align 8
  call void %12196(ptr noundef nonnull align 8 dereferenceable(16) %12185) #21
  %12197 = load ptr, ptr %12185, align 8, !tbaa !58
  %12198 = getelementptr inbounds ptr, ptr %12197, i64 3
  %12199 = load ptr, ptr %12198, align 8
  call void %12199(ptr noundef nonnull align 8 dereferenceable(16) %12185) #21
  br label %12211

12200:                                            ; preds = %12187
  %12201 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12202 = icmp eq i8 %12201, 0
  br i1 %12202, label %12205, label %12203

12203:                                            ; preds = %12200
  %12204 = add nsw i32 %12191, -1
  store i32 %12204, ptr %12188, align 8, !tbaa !73
  br label %12207

12205:                                            ; preds = %12200
  %12206 = atomicrmw volatile add ptr %12188, i32 -1 acq_rel, align 4
  br label %12207

12207:                                            ; preds = %12205, %12203
  %12208 = phi i32 [ %12191, %12203 ], [ %12206, %12205 ]
  %12209 = icmp eq i32 %12208, 1
  br i1 %12209, label %12210, label %12211, !prof !42

12210:                                            ; preds = %12207
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12185) #21
  br label %12211

12211:                                            ; preds = %12210, %12207, %12192, %12182
  %12212 = getelementptr inbounds %struct.TestCase, ptr %101, i64 0, i32 2
  %12213 = load ptr, ptr %12212, align 8, !tbaa !23
  %12214 = getelementptr inbounds %struct.TestCase, ptr %101, i64 0, i32 2, i32 2
  %12215 = icmp eq ptr %12213, %12214
  br i1 %12215, label %12217, label %12216

12216:                                            ; preds = %12211
  call void @_ZdlPv(ptr noundef %12213) #22
  br label %12217

12217:                                            ; preds = %12216, %12211
  %12218 = load ptr, ptr %101, align 8, !tbaa !23
  %12219 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %101, i64 0, i32 2
  %12220 = icmp eq ptr %12218, %12219
  br i1 %12220, label %12222, label %12221

12221:                                            ; preds = %12217
  call void @_ZdlPv(ptr noundef %12218) #22
  br label %12222

12222:                                            ; preds = %12221, %12217, %12180
  %12223 = phi { ptr, i32 } [ %12181, %12180 ], [ %12183, %12217 ], [ %12183, %12221 ]
  %12224 = load ptr, ptr %102, align 8, !tbaa !23
  %12225 = icmp eq ptr %12224, %12130
  br i1 %12225, label %12227, label %12226

12226:                                            ; preds = %12222
  call void @_ZdlPv(ptr noundef %12224) #22
  br label %12227

12227:                                            ; preds = %12226, %12222
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %101) #21
  br label %762

12228:                                            ; preds = %12176, %12179
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %101) #21
  store i32 %12136, ptr @dummy430, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %102)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %85)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %86)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %87)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %88)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %89)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %90)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %91)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %92)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %93)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %94)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %95)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %96)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %97)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %98)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %99)
  call void @llvm.lifetime.start.p0(i64 1320, ptr nonnull %84) #21
  %12229 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %85, i64 0, i32 2
  store ptr %12229, ptr %85, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %83) #21
  store i64 49, ptr %83, align 8, !tbaa !74
  %12230 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %85, ptr noundef nonnull align 8 dereferenceable(8) %83, i64 noundef 0)
  store ptr %12230, ptr %85, align 8, !tbaa !23
  %12231 = load i64, ptr %83, align 8, !tbaa !74
  store i64 %12231, ptr %12229, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(49) %12230, ptr noundef nonnull align 1 dereferenceable(49) @.str.165, i64 49, i1 false)
  %12232 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %85, i64 0, i32 1
  store i64 %12231, ptr %12232, align 8, !tbaa !10
  %12233 = getelementptr inbounds i8, ptr %12230, i64 %12231
  store i8 0, ptr %12233, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %83) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %84, ptr noundef nonnull %85, i32 noundef 0)
          to label %12234 unwind label %12450

12234:                                            ; preds = %12228
  %12235 = getelementptr inbounds %struct.TestCase, ptr %84, i64 1
  %12236 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %86, i64 0, i32 2
  store ptr %12236, ptr %86, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %82) #21
  store i64 19, ptr %82, align 8, !tbaa !74
  %12237 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %86, ptr noundef nonnull align 8 dereferenceable(8) %82, i64 noundef 0)
          to label %12238 unwind label %12452

12238:                                            ; preds = %12234
  store ptr %12237, ptr %86, align 8, !tbaa !23
  %12239 = load i64, ptr %82, align 8, !tbaa !74
  store i64 %12239, ptr %12236, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %12237, ptr noundef nonnull align 1 dereferenceable(19) @.str.166, i64 19, i1 false)
  %12240 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %86, i64 0, i32 1
  store i64 %12239, ptr %12240, align 8, !tbaa !10
  %12241 = load ptr, ptr %86, align 8, !tbaa !23
  %12242 = getelementptr inbounds i8, ptr %12241, i64 %12239
  store i8 0, ptr %12242, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %82) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %12235, ptr noundef nonnull %86, i32 noundef 1)
          to label %12243 unwind label %12454

12243:                                            ; preds = %12238
  %12244 = getelementptr inbounds %struct.TestCase, ptr %84, i64 2
  %12245 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %87, i64 0, i32 2
  store ptr %12245, ptr %87, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %81) #21
  store i64 32, ptr %81, align 8, !tbaa !74
  %12246 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %87, ptr noundef nonnull align 8 dereferenceable(8) %81, i64 noundef 0)
          to label %12247 unwind label %12456

12247:                                            ; preds = %12243
  store ptr %12246, ptr %87, align 8, !tbaa !23
  %12248 = load i64, ptr %81, align 8, !tbaa !74
  store i64 %12248, ptr %12245, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %12246, ptr noundef nonnull align 1 dereferenceable(32) @.str.15, i64 32, i1 false)
  %12249 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %87, i64 0, i32 1
  store i64 %12248, ptr %12249, align 8, !tbaa !10
  %12250 = load ptr, ptr %87, align 8, !tbaa !23
  %12251 = getelementptr inbounds i8, ptr %12250, i64 %12248
  store i8 0, ptr %12251, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %81) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %12244, ptr noundef nonnull %87, i32 noundef 1)
          to label %12252 unwind label %12458

12252:                                            ; preds = %12247
  %12253 = getelementptr inbounds %struct.TestCase, ptr %84, i64 3
  %12254 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %88, i64 0, i32 2
  store ptr %12254, ptr %88, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %80) #21
  store i64 53, ptr %80, align 8, !tbaa !74
  %12255 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %88, ptr noundef nonnull align 8 dereferenceable(8) %80, i64 noundef 0)
          to label %12256 unwind label %12460

12256:                                            ; preds = %12252
  store ptr %12255, ptr %88, align 8, !tbaa !23
  %12257 = load i64, ptr %80, align 8, !tbaa !74
  store i64 %12257, ptr %12254, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(53) %12255, ptr noundef nonnull align 1 dereferenceable(53) @.str.167, i64 53, i1 false)
  %12258 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %88, i64 0, i32 1
  store i64 %12257, ptr %12258, align 8, !tbaa !10
  %12259 = getelementptr inbounds i8, ptr %12255, i64 %12257
  store i8 0, ptr %12259, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %80) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %12253, ptr noundef nonnull %88, i32 noundef 1)
          to label %12260 unwind label %12462

12260:                                            ; preds = %12256
  %12261 = getelementptr inbounds %struct.TestCase, ptr %84, i64 4
  %12262 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %89, i64 0, i32 2
  store ptr %12262, ptr %89, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %79) #21
  store i64 25, ptr %79, align 8, !tbaa !74
  %12263 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %89, ptr noundef nonnull align 8 dereferenceable(8) %79, i64 noundef 0)
          to label %12264 unwind label %12464

12264:                                            ; preds = %12260
  store ptr %12263, ptr %89, align 8, !tbaa !23
  %12265 = load i64, ptr %79, align 8, !tbaa !74
  store i64 %12265, ptr %12262, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(25) %12263, ptr noundef nonnull align 1 dereferenceable(25) @.str.17, i64 25, i1 false)
  %12266 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %89, i64 0, i32 1
  store i64 %12265, ptr %12266, align 8, !tbaa !10
  %12267 = load ptr, ptr %89, align 8, !tbaa !23
  %12268 = getelementptr inbounds i8, ptr %12267, i64 %12265
  store i8 0, ptr %12268, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %79) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %12261, ptr noundef nonnull %89, i32 noundef 1)
          to label %12269 unwind label %12466

12269:                                            ; preds = %12264
  %12270 = getelementptr inbounds %struct.TestCase, ptr %84, i64 5
  %12271 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %90, i64 0, i32 2
  store ptr %12271, ptr %90, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %78) #21
  store i64 18, ptr %78, align 8, !tbaa !74
  %12272 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %90, ptr noundef nonnull align 8 dereferenceable(8) %78, i64 noundef 0)
          to label %12273 unwind label %12468

12273:                                            ; preds = %12269
  store ptr %12272, ptr %90, align 8, !tbaa !23
  %12274 = load i64, ptr %78, align 8, !tbaa !74
  store i64 %12274, ptr %12271, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(18) %12272, ptr noundef nonnull align 1 dereferenceable(18) @.str.18, i64 18, i1 false)
  %12275 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %90, i64 0, i32 1
  store i64 %12274, ptr %12275, align 8, !tbaa !10
  %12276 = load ptr, ptr %90, align 8, !tbaa !23
  %12277 = getelementptr inbounds i8, ptr %12276, i64 %12274
  store i8 0, ptr %12277, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %78) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %12270, ptr noundef nonnull %90, i32 noundef 1)
          to label %12278 unwind label %12470

12278:                                            ; preds = %12273
  %12279 = getelementptr inbounds %struct.TestCase, ptr %84, i64 6
  %12280 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %91, i64 0, i32 2
  store ptr %12280, ptr %91, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %77) #21
  store i64 23, ptr %77, align 8, !tbaa !74
  %12281 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %91, ptr noundef nonnull align 8 dereferenceable(8) %77, i64 noundef 0)
          to label %12282 unwind label %12472

12282:                                            ; preds = %12278
  store ptr %12281, ptr %91, align 8, !tbaa !23
  %12283 = load i64, ptr %77, align 8, !tbaa !74
  store i64 %12283, ptr %12280, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(23) %12281, ptr noundef nonnull align 1 dereferenceable(23) @.str.19, i64 23, i1 false)
  %12284 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %91, i64 0, i32 1
  store i64 %12283, ptr %12284, align 8, !tbaa !10
  %12285 = load ptr, ptr %91, align 8, !tbaa !23
  %12286 = getelementptr inbounds i8, ptr %12285, i64 %12283
  store i8 0, ptr %12286, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %77) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %12279, ptr noundef nonnull %91, i32 noundef 1)
          to label %12287 unwind label %12474

12287:                                            ; preds = %12282
  %12288 = getelementptr inbounds %struct.TestCase, ptr %84, i64 7
  %12289 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %92, i64 0, i32 2
  store ptr %12289, ptr %92, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %12289, ptr noundef nonnull align 1 dereferenceable(14) @.str.20, i64 14, i1 false)
  %12290 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %92, i64 0, i32 1
  store i64 14, ptr %12290, align 8, !tbaa !10
  %12291 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %92, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %12291, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %12288, ptr noundef nonnull %92, i32 noundef 1)
          to label %12292 unwind label %12476

12292:                                            ; preds = %12287
  %12293 = getelementptr inbounds %struct.TestCase, ptr %84, i64 8
  %12294 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %93, i64 0, i32 2
  store ptr %12294, ptr %93, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %76) #21
  store i64 20, ptr %76, align 8, !tbaa !74
  %12295 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %93, ptr noundef nonnull align 8 dereferenceable(8) %76, i64 noundef 0)
          to label %12296 unwind label %12478

12296:                                            ; preds = %12292
  store ptr %12295, ptr %93, align 8, !tbaa !23
  %12297 = load i64, ptr %76, align 8, !tbaa !74
  store i64 %12297, ptr %12294, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %12295, ptr noundef nonnull align 1 dereferenceable(20) @.str.21, i64 20, i1 false)
  %12298 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %93, i64 0, i32 1
  store i64 %12297, ptr %12298, align 8, !tbaa !10
  %12299 = load ptr, ptr %93, align 8, !tbaa !23
  %12300 = getelementptr inbounds i8, ptr %12299, i64 %12297
  store i8 0, ptr %12300, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %76) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %12293, ptr noundef nonnull %93, i32 noundef 1)
          to label %12301 unwind label %12480

12301:                                            ; preds = %12296
  %12302 = getelementptr inbounds %struct.TestCase, ptr %84, i64 9
  %12303 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %94, i64 0, i32 2
  store ptr %12303, ptr %94, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %75) #21
  store i64 21, ptr %75, align 8, !tbaa !74
  %12304 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %94, ptr noundef nonnull align 8 dereferenceable(8) %75, i64 noundef 0)
          to label %12305 unwind label %12482

12305:                                            ; preds = %12301
  store ptr %12304, ptr %94, align 8, !tbaa !23
  %12306 = load i64, ptr %75, align 8, !tbaa !74
  store i64 %12306, ptr %12303, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %12304, ptr noundef nonnull align 1 dereferenceable(21) @.str.22, i64 21, i1 false)
  %12307 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %94, i64 0, i32 1
  store i64 %12306, ptr %12307, align 8, !tbaa !10
  %12308 = load ptr, ptr %94, align 8, !tbaa !23
  %12309 = getelementptr inbounds i8, ptr %12308, i64 %12306
  store i8 0, ptr %12309, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %75) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %12302, ptr noundef nonnull %94, i32 noundef 1)
          to label %12310 unwind label %12484

12310:                                            ; preds = %12305
  %12311 = getelementptr inbounds %struct.TestCase, ptr %84, i64 10
  %12312 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %95, i64 0, i32 2
  store ptr %12312, ptr %95, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %74) #21
  store i64 20, ptr %74, align 8, !tbaa !74
  %12313 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %95, ptr noundef nonnull align 8 dereferenceable(8) %74, i64 noundef 0)
          to label %12314 unwind label %12486

12314:                                            ; preds = %12310
  store ptr %12313, ptr %95, align 8, !tbaa !23
  %12315 = load i64, ptr %74, align 8, !tbaa !74
  store i64 %12315, ptr %12312, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %12313, ptr noundef nonnull align 1 dereferenceable(20) @.str.23, i64 20, i1 false)
  %12316 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %95, i64 0, i32 1
  store i64 %12315, ptr %12316, align 8, !tbaa !10
  %12317 = load ptr, ptr %95, align 8, !tbaa !23
  %12318 = getelementptr inbounds i8, ptr %12317, i64 %12315
  store i8 0, ptr %12318, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %74) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %12311, ptr noundef nonnull %95, i32 noundef 1)
          to label %12319 unwind label %12488

12319:                                            ; preds = %12314
  %12320 = getelementptr inbounds %struct.TestCase, ptr %84, i64 11
  %12321 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %96, i64 0, i32 2
  store ptr %12321, ptr %96, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %73) #21
  store i64 19, ptr %73, align 8, !tbaa !74
  %12322 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %96, ptr noundef nonnull align 8 dereferenceable(8) %73, i64 noundef 0)
          to label %12323 unwind label %12490

12323:                                            ; preds = %12319
  store ptr %12322, ptr %96, align 8, !tbaa !23
  %12324 = load i64, ptr %73, align 8, !tbaa !74
  store i64 %12324, ptr %12321, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %12322, ptr noundef nonnull align 1 dereferenceable(19) @.str.24, i64 19, i1 false)
  %12325 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %96, i64 0, i32 1
  store i64 %12324, ptr %12325, align 8, !tbaa !10
  %12326 = load ptr, ptr %96, align 8, !tbaa !23
  %12327 = getelementptr inbounds i8, ptr %12326, i64 %12324
  store i8 0, ptr %12327, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %73) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %12320, ptr noundef nonnull %96, i32 noundef 1)
          to label %12328 unwind label %12492

12328:                                            ; preds = %12323
  %12329 = getelementptr inbounds %struct.TestCase, ptr %84, i64 12
  %12330 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %97, i64 0, i32 2
  store ptr %12330, ptr %97, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(15) %12330, ptr noundef nonnull align 1 dereferenceable(15) @.str.25, i64 15, i1 false)
  %12331 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %97, i64 0, i32 1
  store i64 15, ptr %12331, align 8, !tbaa !10
  %12332 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %97, i64 0, i32 2, i32 1, i64 7
  store i8 0, ptr %12332, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %12329, ptr noundef nonnull %97, i32 noundef 1)
          to label %12333 unwind label %12494

12333:                                            ; preds = %12328
  %12334 = getelementptr inbounds %struct.TestCase, ptr %84, i64 13
  %12335 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %98, i64 0, i32 2
  store ptr %12335, ptr %98, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %12335, ptr noundef nonnull align 1 dereferenceable(14) @.str.26, i64 14, i1 false)
  %12336 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %98, i64 0, i32 1
  store i64 14, ptr %12336, align 8, !tbaa !10
  %12337 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %98, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %12337, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %12334, ptr noundef nonnull %98, i32 noundef 1)
          to label %12338 unwind label %12496

12338:                                            ; preds = %12333
  %12339 = getelementptr inbounds %struct.TestCase, ptr %84, i64 14
  %12340 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %99, i64 0, i32 2
  store ptr %12340, ptr %99, align 8, !tbaa !5
  store i8 125, ptr %12340, align 8, !tbaa !13
  %12341 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %99, i64 0, i32 1
  store i64 1, ptr %12341, align 8, !tbaa !10
  %12342 = getelementptr inbounds i8, ptr %99, i64 17
  store i8 0, ptr %12342, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %12339, ptr noundef nonnull %99, i32 noundef 1)
          to label %12343 unwind label %12498

12343:                                            ; preds = %12338
  %12344 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 2, ptr nonnull %84, i64 15)
          to label %12345 unwind label %12500

12345:                                            ; preds = %12343
  %12346 = getelementptr inbounds %struct.TestCase, ptr %84, i64 15
  br label %12347

12347:                                            ; preds = %12388, %12345
  %12348 = phi ptr [ %12346, %12345 ], [ %12349, %12388 ]
  %12349 = getelementptr inbounds %struct.TestCase, ptr %12348, i64 -1
  %12350 = getelementptr %struct.TestCase, ptr %12348, i64 -1, i32 3, i32 0, i32 1
  %12351 = load ptr, ptr %12350, align 8, !tbaa !88
  %12352 = icmp eq ptr %12351, null
  br i1 %12352, label %12377, label %12353

12353:                                            ; preds = %12347
  %12354 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12351, i64 0, i32 1
  %12355 = load atomic i64, ptr %12354 acquire, align 8
  %12356 = icmp eq i64 %12355, 4294967297
  %12357 = trunc i64 %12355 to i32
  br i1 %12356, label %12358, label %12366

12358:                                            ; preds = %12353
  store i32 0, ptr %12354, align 8, !tbaa !90
  %12359 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12351, i64 0, i32 2
  store i32 0, ptr %12359, align 4, !tbaa !92
  %12360 = load ptr, ptr %12351, align 8, !tbaa !58
  %12361 = getelementptr inbounds ptr, ptr %12360, i64 2
  %12362 = load ptr, ptr %12361, align 8
  call void %12362(ptr noundef nonnull align 8 dereferenceable(16) %12351) #21
  %12363 = load ptr, ptr %12351, align 8, !tbaa !58
  %12364 = getelementptr inbounds ptr, ptr %12363, i64 3
  %12365 = load ptr, ptr %12364, align 8
  call void %12365(ptr noundef nonnull align 8 dereferenceable(16) %12351) #21
  br label %12377

12366:                                            ; preds = %12353
  %12367 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12368 = icmp eq i8 %12367, 0
  br i1 %12368, label %12371, label %12369

12369:                                            ; preds = %12366
  %12370 = add nsw i32 %12357, -1
  store i32 %12370, ptr %12354, align 8, !tbaa !73
  br label %12373

12371:                                            ; preds = %12366
  %12372 = atomicrmw volatile add ptr %12354, i32 -1 acq_rel, align 4
  br label %12373

12373:                                            ; preds = %12371, %12369
  %12374 = phi i32 [ %12357, %12369 ], [ %12372, %12371 ]
  %12375 = icmp eq i32 %12374, 1
  br i1 %12375, label %12376, label %12377, !prof !42

12376:                                            ; preds = %12373
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12351) #21
  br label %12377

12377:                                            ; preds = %12376, %12373, %12358, %12347
  %12378 = getelementptr %struct.TestCase, ptr %12348, i64 -1, i32 2
  %12379 = load ptr, ptr %12378, align 8, !tbaa !23
  %12380 = getelementptr %struct.TestCase, ptr %12348, i64 -1, i32 2, i32 2
  %12381 = icmp eq ptr %12379, %12380
  br i1 %12381, label %12383, label %12382

12382:                                            ; preds = %12377
  call void @_ZdlPv(ptr noundef %12379) #22
  br label %12383

12383:                                            ; preds = %12382, %12377
  %12384 = load ptr, ptr %12349, align 8, !tbaa !23
  %12385 = getelementptr %struct.TestCase, ptr %12348, i64 -1, i32 0, i32 2
  %12386 = icmp eq ptr %12384, %12385
  br i1 %12386, label %12388, label %12387

12387:                                            ; preds = %12383
  call void @_ZdlPv(ptr noundef %12384) #22
  br label %12388

12388:                                            ; preds = %12387, %12383
  %12389 = icmp eq ptr %12349, %84
  br i1 %12389, label %12390, label %12347

12390:                                            ; preds = %12388
  %12391 = load ptr, ptr %99, align 8, !tbaa !23
  %12392 = icmp eq ptr %12391, %12340
  br i1 %12392, label %12394, label %12393

12393:                                            ; preds = %12390
  call void @_ZdlPv(ptr noundef %12391) #22
  br label %12394

12394:                                            ; preds = %12393, %12390
  %12395 = load ptr, ptr %98, align 8, !tbaa !23
  %12396 = icmp eq ptr %12395, %12335
  br i1 %12396, label %12398, label %12397

12397:                                            ; preds = %12394
  call void @_ZdlPv(ptr noundef %12395) #22
  br label %12398

12398:                                            ; preds = %12397, %12394
  %12399 = load ptr, ptr %97, align 8, !tbaa !23
  %12400 = icmp eq ptr %12399, %12330
  br i1 %12400, label %12402, label %12401

12401:                                            ; preds = %12398
  call void @_ZdlPv(ptr noundef %12399) #22
  br label %12402

12402:                                            ; preds = %12401, %12398
  %12403 = load ptr, ptr %96, align 8, !tbaa !23
  %12404 = icmp eq ptr %12403, %12321
  br i1 %12404, label %12406, label %12405

12405:                                            ; preds = %12402
  call void @_ZdlPv(ptr noundef %12403) #22
  br label %12406

12406:                                            ; preds = %12405, %12402
  %12407 = load ptr, ptr %95, align 8, !tbaa !23
  %12408 = icmp eq ptr %12407, %12312
  br i1 %12408, label %12410, label %12409

12409:                                            ; preds = %12406
  call void @_ZdlPv(ptr noundef %12407) #22
  br label %12410

12410:                                            ; preds = %12409, %12406
  %12411 = load ptr, ptr %94, align 8, !tbaa !23
  %12412 = icmp eq ptr %12411, %12303
  br i1 %12412, label %12414, label %12413

12413:                                            ; preds = %12410
  call void @_ZdlPv(ptr noundef %12411) #22
  br label %12414

12414:                                            ; preds = %12413, %12410
  %12415 = load ptr, ptr %93, align 8, !tbaa !23
  %12416 = icmp eq ptr %12415, %12294
  br i1 %12416, label %12418, label %12417

12417:                                            ; preds = %12414
  call void @_ZdlPv(ptr noundef %12415) #22
  br label %12418

12418:                                            ; preds = %12417, %12414
  %12419 = load ptr, ptr %92, align 8, !tbaa !23
  %12420 = icmp eq ptr %12419, %12289
  br i1 %12420, label %12422, label %12421

12421:                                            ; preds = %12418
  call void @_ZdlPv(ptr noundef %12419) #22
  br label %12422

12422:                                            ; preds = %12421, %12418
  %12423 = load ptr, ptr %91, align 8, !tbaa !23
  %12424 = icmp eq ptr %12423, %12280
  br i1 %12424, label %12426, label %12425

12425:                                            ; preds = %12422
  call void @_ZdlPv(ptr noundef %12423) #22
  br label %12426

12426:                                            ; preds = %12425, %12422
  %12427 = load ptr, ptr %90, align 8, !tbaa !23
  %12428 = icmp eq ptr %12427, %12271
  br i1 %12428, label %12430, label %12429

12429:                                            ; preds = %12426
  call void @_ZdlPv(ptr noundef %12427) #22
  br label %12430

12430:                                            ; preds = %12429, %12426
  %12431 = load ptr, ptr %89, align 8, !tbaa !23
  %12432 = icmp eq ptr %12431, %12262
  br i1 %12432, label %12434, label %12433

12433:                                            ; preds = %12430
  call void @_ZdlPv(ptr noundef %12431) #22
  br label %12434

12434:                                            ; preds = %12433, %12430
  %12435 = load ptr, ptr %88, align 8, !tbaa !23
  %12436 = icmp eq ptr %12435, %12254
  br i1 %12436, label %12438, label %12437

12437:                                            ; preds = %12434
  call void @_ZdlPv(ptr noundef %12435) #22
  br label %12438

12438:                                            ; preds = %12437, %12434
  %12439 = load ptr, ptr %87, align 8, !tbaa !23
  %12440 = icmp eq ptr %12439, %12245
  br i1 %12440, label %12442, label %12441

12441:                                            ; preds = %12438
  call void @_ZdlPv(ptr noundef %12439) #22
  br label %12442

12442:                                            ; preds = %12441, %12438
  %12443 = load ptr, ptr %86, align 8, !tbaa !23
  %12444 = icmp eq ptr %12443, %12236
  br i1 %12444, label %12446, label %12445

12445:                                            ; preds = %12442
  call void @_ZdlPv(ptr noundef %12443) #22
  br label %12446

12446:                                            ; preds = %12445, %12442
  %12447 = load ptr, ptr %85, align 8, !tbaa !23
  %12448 = icmp eq ptr %12447, %12229
  br i1 %12448, label %13237, label %12449

12449:                                            ; preds = %12446
  call void @_ZdlPv(ptr noundef %12447) #22
  br label %13237

12450:                                            ; preds = %12228
  %12451 = landingpad { ptr, i32 }
          cleanup
  br label %13183

12452:                                            ; preds = %12234
  %12453 = landingpad { ptr, i32 }
          cleanup
  br label %13183

12454:                                            ; preds = %12238
  %12455 = landingpad { ptr, i32 }
          cleanup
  br label %13176

12456:                                            ; preds = %12243
  %12457 = landingpad { ptr, i32 }
          cleanup
  br label %13176

12458:                                            ; preds = %12247
  %12459 = landingpad { ptr, i32 }
          cleanup
  br label %13169

12460:                                            ; preds = %12252
  %12461 = landingpad { ptr, i32 }
          cleanup
  br label %13169

12462:                                            ; preds = %12256
  %12463 = landingpad { ptr, i32 }
          cleanup
  br label %13162

12464:                                            ; preds = %12260
  %12465 = landingpad { ptr, i32 }
          cleanup
  br label %13162

12466:                                            ; preds = %12264
  %12467 = landingpad { ptr, i32 }
          cleanup
  br label %13155

12468:                                            ; preds = %12269
  %12469 = landingpad { ptr, i32 }
          cleanup
  br label %13155

12470:                                            ; preds = %12273
  %12471 = landingpad { ptr, i32 }
          cleanup
  br label %13148

12472:                                            ; preds = %12278
  %12473 = landingpad { ptr, i32 }
          cleanup
  br label %13148

12474:                                            ; preds = %12282
  %12475 = landingpad { ptr, i32 }
          cleanup
  br label %13141

12476:                                            ; preds = %12287
  %12477 = landingpad { ptr, i32 }
          cleanup
  br label %13134

12478:                                            ; preds = %12292
  %12479 = landingpad { ptr, i32 }
          cleanup
  br label %13134

12480:                                            ; preds = %12296
  %12481 = landingpad { ptr, i32 }
          cleanup
  br label %13127

12482:                                            ; preds = %12301
  %12483 = landingpad { ptr, i32 }
          cleanup
  br label %13127

12484:                                            ; preds = %12305
  %12485 = landingpad { ptr, i32 }
          cleanup
  br label %13120

12486:                                            ; preds = %12310
  %12487 = landingpad { ptr, i32 }
          cleanup
  br label %13120

12488:                                            ; preds = %12314
  %12489 = landingpad { ptr, i32 }
          cleanup
  br label %13113

12490:                                            ; preds = %12319
  %12491 = landingpad { ptr, i32 }
          cleanup
  br label %13113

12492:                                            ; preds = %12323
  %12493 = landingpad { ptr, i32 }
          cleanup
  br label %13106

12494:                                            ; preds = %12328
  %12495 = landingpad { ptr, i32 }
          cleanup
  br label %13099

12496:                                            ; preds = %12333
  %12497 = landingpad { ptr, i32 }
          cleanup
  br label %13092

12498:                                            ; preds = %12338
  %12499 = landingpad { ptr, i32 }
          cleanup
  br label %13086

12500:                                            ; preds = %12343
  %12501 = landingpad { ptr, i32 }
          cleanup
  %12502 = getelementptr inbounds %struct.TestCase, ptr %84, i64 14, i32 3, i32 0, i32 1
  %12503 = load ptr, ptr %12502, align 8, !tbaa !88
  %12504 = icmp eq ptr %12503, null
  br i1 %12504, label %12529, label %12505

12505:                                            ; preds = %12500
  %12506 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12503, i64 0, i32 1
  %12507 = load atomic i64, ptr %12506 acquire, align 8
  %12508 = icmp eq i64 %12507, 4294967297
  %12509 = trunc i64 %12507 to i32
  br i1 %12508, label %12510, label %12518

12510:                                            ; preds = %12505
  store i32 0, ptr %12506, align 8, !tbaa !90
  %12511 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12503, i64 0, i32 2
  store i32 0, ptr %12511, align 4, !tbaa !92
  %12512 = load ptr, ptr %12503, align 8, !tbaa !58
  %12513 = getelementptr inbounds ptr, ptr %12512, i64 2
  %12514 = load ptr, ptr %12513, align 8
  call void %12514(ptr noundef nonnull align 8 dereferenceable(16) %12503) #21
  %12515 = load ptr, ptr %12503, align 8, !tbaa !58
  %12516 = getelementptr inbounds ptr, ptr %12515, i64 3
  %12517 = load ptr, ptr %12516, align 8
  call void %12517(ptr noundef nonnull align 8 dereferenceable(16) %12503) #21
  br label %12529

12518:                                            ; preds = %12505
  %12519 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12520 = icmp eq i8 %12519, 0
  br i1 %12520, label %12523, label %12521

12521:                                            ; preds = %12518
  %12522 = add nsw i32 %12509, -1
  store i32 %12522, ptr %12506, align 8, !tbaa !73
  br label %12525

12523:                                            ; preds = %12518
  %12524 = atomicrmw volatile add ptr %12506, i32 -1 acq_rel, align 4
  br label %12525

12525:                                            ; preds = %12523, %12521
  %12526 = phi i32 [ %12509, %12521 ], [ %12524, %12523 ]
  %12527 = icmp eq i32 %12526, 1
  br i1 %12527, label %12528, label %12529, !prof !42

12528:                                            ; preds = %12525
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12503) #21
  br label %12529

12529:                                            ; preds = %12528, %12525, %12510, %12500
  %12530 = getelementptr inbounds %struct.TestCase, ptr %84, i64 14, i32 2
  %12531 = load ptr, ptr %12530, align 8, !tbaa !23
  %12532 = getelementptr inbounds %struct.TestCase, ptr %84, i64 14, i32 2, i32 2
  %12533 = icmp eq ptr %12531, %12532
  br i1 %12533, label %12535, label %12534

12534:                                            ; preds = %12529
  call void @_ZdlPv(ptr noundef %12531) #22
  br label %12535

12535:                                            ; preds = %12534, %12529
  %12536 = load ptr, ptr %12339, align 8, !tbaa !23
  %12537 = getelementptr inbounds %struct.TestCase, ptr %84, i64 14, i32 0, i32 2
  %12538 = icmp eq ptr %12536, %12537
  br i1 %12538, label %12540, label %12539

12539:                                            ; preds = %12535
  call void @_ZdlPv(ptr noundef %12536) #22
  br label %12540

12540:                                            ; preds = %12535, %12539
  %12541 = getelementptr inbounds %struct.TestCase, ptr %84, i64 13, i32 3, i32 0, i32 1
  %12542 = load ptr, ptr %12541, align 8, !tbaa !88
  %12543 = icmp eq ptr %12542, null
  br i1 %12543, label %12568, label %12544

12544:                                            ; preds = %12540
  %12545 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12542, i64 0, i32 1
  %12546 = load atomic i64, ptr %12545 acquire, align 8
  %12547 = icmp eq i64 %12546, 4294967297
  %12548 = trunc i64 %12546 to i32
  br i1 %12547, label %12549, label %12557

12549:                                            ; preds = %12544
  store i32 0, ptr %12545, align 8, !tbaa !90
  %12550 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12542, i64 0, i32 2
  store i32 0, ptr %12550, align 4, !tbaa !92
  %12551 = load ptr, ptr %12542, align 8, !tbaa !58
  %12552 = getelementptr inbounds ptr, ptr %12551, i64 2
  %12553 = load ptr, ptr %12552, align 8
  call void %12553(ptr noundef nonnull align 8 dereferenceable(16) %12542) #21
  %12554 = load ptr, ptr %12542, align 8, !tbaa !58
  %12555 = getelementptr inbounds ptr, ptr %12554, i64 3
  %12556 = load ptr, ptr %12555, align 8
  call void %12556(ptr noundef nonnull align 8 dereferenceable(16) %12542) #21
  br label %12568

12557:                                            ; preds = %12544
  %12558 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12559 = icmp eq i8 %12558, 0
  br i1 %12559, label %12562, label %12560

12560:                                            ; preds = %12557
  %12561 = add nsw i32 %12548, -1
  store i32 %12561, ptr %12545, align 8, !tbaa !73
  br label %12564

12562:                                            ; preds = %12557
  %12563 = atomicrmw volatile add ptr %12545, i32 -1 acq_rel, align 4
  br label %12564

12564:                                            ; preds = %12562, %12560
  %12565 = phi i32 [ %12548, %12560 ], [ %12563, %12562 ]
  %12566 = icmp eq i32 %12565, 1
  br i1 %12566, label %12567, label %12568, !prof !42

12567:                                            ; preds = %12564
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12542) #21
  br label %12568

12568:                                            ; preds = %12567, %12564, %12549, %12540
  %12569 = getelementptr inbounds %struct.TestCase, ptr %84, i64 13, i32 2
  %12570 = load ptr, ptr %12569, align 8, !tbaa !23
  %12571 = getelementptr inbounds %struct.TestCase, ptr %84, i64 13, i32 2, i32 2
  %12572 = icmp eq ptr %12570, %12571
  br i1 %12572, label %12574, label %12573

12573:                                            ; preds = %12568
  call void @_ZdlPv(ptr noundef %12570) #22
  br label %12574

12574:                                            ; preds = %12573, %12568
  %12575 = load ptr, ptr %12334, align 8, !tbaa !23
  %12576 = getelementptr inbounds %struct.TestCase, ptr %84, i64 13, i32 0, i32 2
  %12577 = icmp eq ptr %12575, %12576
  br i1 %12577, label %12579, label %12578

12578:                                            ; preds = %12574
  call void @_ZdlPv(ptr noundef %12575) #22
  br label %12579

12579:                                            ; preds = %12574, %12578
  %12580 = getelementptr inbounds %struct.TestCase, ptr %84, i64 12, i32 3, i32 0, i32 1
  %12581 = load ptr, ptr %12580, align 8, !tbaa !88
  %12582 = icmp eq ptr %12581, null
  br i1 %12582, label %12607, label %12583

12583:                                            ; preds = %12579
  %12584 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12581, i64 0, i32 1
  %12585 = load atomic i64, ptr %12584 acquire, align 8
  %12586 = icmp eq i64 %12585, 4294967297
  %12587 = trunc i64 %12585 to i32
  br i1 %12586, label %12588, label %12596

12588:                                            ; preds = %12583
  store i32 0, ptr %12584, align 8, !tbaa !90
  %12589 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12581, i64 0, i32 2
  store i32 0, ptr %12589, align 4, !tbaa !92
  %12590 = load ptr, ptr %12581, align 8, !tbaa !58
  %12591 = getelementptr inbounds ptr, ptr %12590, i64 2
  %12592 = load ptr, ptr %12591, align 8
  call void %12592(ptr noundef nonnull align 8 dereferenceable(16) %12581) #21
  %12593 = load ptr, ptr %12581, align 8, !tbaa !58
  %12594 = getelementptr inbounds ptr, ptr %12593, i64 3
  %12595 = load ptr, ptr %12594, align 8
  call void %12595(ptr noundef nonnull align 8 dereferenceable(16) %12581) #21
  br label %12607

12596:                                            ; preds = %12583
  %12597 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12598 = icmp eq i8 %12597, 0
  br i1 %12598, label %12601, label %12599

12599:                                            ; preds = %12596
  %12600 = add nsw i32 %12587, -1
  store i32 %12600, ptr %12584, align 8, !tbaa !73
  br label %12603

12601:                                            ; preds = %12596
  %12602 = atomicrmw volatile add ptr %12584, i32 -1 acq_rel, align 4
  br label %12603

12603:                                            ; preds = %12601, %12599
  %12604 = phi i32 [ %12587, %12599 ], [ %12602, %12601 ]
  %12605 = icmp eq i32 %12604, 1
  br i1 %12605, label %12606, label %12607, !prof !42

12606:                                            ; preds = %12603
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12581) #21
  br label %12607

12607:                                            ; preds = %12606, %12603, %12588, %12579
  %12608 = getelementptr inbounds %struct.TestCase, ptr %84, i64 12, i32 2
  %12609 = load ptr, ptr %12608, align 8, !tbaa !23
  %12610 = getelementptr inbounds %struct.TestCase, ptr %84, i64 12, i32 2, i32 2
  %12611 = icmp eq ptr %12609, %12610
  br i1 %12611, label %12613, label %12612

12612:                                            ; preds = %12607
  call void @_ZdlPv(ptr noundef %12609) #22
  br label %12613

12613:                                            ; preds = %12612, %12607
  %12614 = load ptr, ptr %12329, align 8, !tbaa !23
  %12615 = getelementptr inbounds %struct.TestCase, ptr %84, i64 12, i32 0, i32 2
  %12616 = icmp eq ptr %12614, %12615
  br i1 %12616, label %12618, label %12617

12617:                                            ; preds = %12613
  call void @_ZdlPv(ptr noundef %12614) #22
  br label %12618

12618:                                            ; preds = %12613, %12617
  %12619 = getelementptr inbounds %struct.TestCase, ptr %84, i64 11, i32 3, i32 0, i32 1
  %12620 = load ptr, ptr %12619, align 8, !tbaa !88
  %12621 = icmp eq ptr %12620, null
  br i1 %12621, label %12646, label %12622

12622:                                            ; preds = %12618
  %12623 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12620, i64 0, i32 1
  %12624 = load atomic i64, ptr %12623 acquire, align 8
  %12625 = icmp eq i64 %12624, 4294967297
  %12626 = trunc i64 %12624 to i32
  br i1 %12625, label %12627, label %12635

12627:                                            ; preds = %12622
  store i32 0, ptr %12623, align 8, !tbaa !90
  %12628 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12620, i64 0, i32 2
  store i32 0, ptr %12628, align 4, !tbaa !92
  %12629 = load ptr, ptr %12620, align 8, !tbaa !58
  %12630 = getelementptr inbounds ptr, ptr %12629, i64 2
  %12631 = load ptr, ptr %12630, align 8
  call void %12631(ptr noundef nonnull align 8 dereferenceable(16) %12620) #21
  %12632 = load ptr, ptr %12620, align 8, !tbaa !58
  %12633 = getelementptr inbounds ptr, ptr %12632, i64 3
  %12634 = load ptr, ptr %12633, align 8
  call void %12634(ptr noundef nonnull align 8 dereferenceable(16) %12620) #21
  br label %12646

12635:                                            ; preds = %12622
  %12636 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12637 = icmp eq i8 %12636, 0
  br i1 %12637, label %12640, label %12638

12638:                                            ; preds = %12635
  %12639 = add nsw i32 %12626, -1
  store i32 %12639, ptr %12623, align 8, !tbaa !73
  br label %12642

12640:                                            ; preds = %12635
  %12641 = atomicrmw volatile add ptr %12623, i32 -1 acq_rel, align 4
  br label %12642

12642:                                            ; preds = %12640, %12638
  %12643 = phi i32 [ %12626, %12638 ], [ %12641, %12640 ]
  %12644 = icmp eq i32 %12643, 1
  br i1 %12644, label %12645, label %12646, !prof !42

12645:                                            ; preds = %12642
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12620) #21
  br label %12646

12646:                                            ; preds = %12645, %12642, %12627, %12618
  %12647 = getelementptr inbounds %struct.TestCase, ptr %84, i64 11, i32 2
  %12648 = load ptr, ptr %12647, align 8, !tbaa !23
  %12649 = getelementptr inbounds %struct.TestCase, ptr %84, i64 11, i32 2, i32 2
  %12650 = icmp eq ptr %12648, %12649
  br i1 %12650, label %12652, label %12651

12651:                                            ; preds = %12646
  call void @_ZdlPv(ptr noundef %12648) #22
  br label %12652

12652:                                            ; preds = %12651, %12646
  %12653 = load ptr, ptr %12320, align 8, !tbaa !23
  %12654 = getelementptr inbounds %struct.TestCase, ptr %84, i64 11, i32 0, i32 2
  %12655 = icmp eq ptr %12653, %12654
  br i1 %12655, label %12657, label %12656

12656:                                            ; preds = %12652
  call void @_ZdlPv(ptr noundef %12653) #22
  br label %12657

12657:                                            ; preds = %12652, %12656
  %12658 = getelementptr inbounds %struct.TestCase, ptr %84, i64 10, i32 3, i32 0, i32 1
  %12659 = load ptr, ptr %12658, align 8, !tbaa !88
  %12660 = icmp eq ptr %12659, null
  br i1 %12660, label %12685, label %12661

12661:                                            ; preds = %12657
  %12662 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12659, i64 0, i32 1
  %12663 = load atomic i64, ptr %12662 acquire, align 8
  %12664 = icmp eq i64 %12663, 4294967297
  %12665 = trunc i64 %12663 to i32
  br i1 %12664, label %12666, label %12674

12666:                                            ; preds = %12661
  store i32 0, ptr %12662, align 8, !tbaa !90
  %12667 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12659, i64 0, i32 2
  store i32 0, ptr %12667, align 4, !tbaa !92
  %12668 = load ptr, ptr %12659, align 8, !tbaa !58
  %12669 = getelementptr inbounds ptr, ptr %12668, i64 2
  %12670 = load ptr, ptr %12669, align 8
  call void %12670(ptr noundef nonnull align 8 dereferenceable(16) %12659) #21
  %12671 = load ptr, ptr %12659, align 8, !tbaa !58
  %12672 = getelementptr inbounds ptr, ptr %12671, i64 3
  %12673 = load ptr, ptr %12672, align 8
  call void %12673(ptr noundef nonnull align 8 dereferenceable(16) %12659) #21
  br label %12685

12674:                                            ; preds = %12661
  %12675 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12676 = icmp eq i8 %12675, 0
  br i1 %12676, label %12679, label %12677

12677:                                            ; preds = %12674
  %12678 = add nsw i32 %12665, -1
  store i32 %12678, ptr %12662, align 8, !tbaa !73
  br label %12681

12679:                                            ; preds = %12674
  %12680 = atomicrmw volatile add ptr %12662, i32 -1 acq_rel, align 4
  br label %12681

12681:                                            ; preds = %12679, %12677
  %12682 = phi i32 [ %12665, %12677 ], [ %12680, %12679 ]
  %12683 = icmp eq i32 %12682, 1
  br i1 %12683, label %12684, label %12685, !prof !42

12684:                                            ; preds = %12681
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12659) #21
  br label %12685

12685:                                            ; preds = %12684, %12681, %12666, %12657
  %12686 = getelementptr inbounds %struct.TestCase, ptr %84, i64 10, i32 2
  %12687 = load ptr, ptr %12686, align 8, !tbaa !23
  %12688 = getelementptr inbounds %struct.TestCase, ptr %84, i64 10, i32 2, i32 2
  %12689 = icmp eq ptr %12687, %12688
  br i1 %12689, label %12691, label %12690

12690:                                            ; preds = %12685
  call void @_ZdlPv(ptr noundef %12687) #22
  br label %12691

12691:                                            ; preds = %12690, %12685
  %12692 = load ptr, ptr %12311, align 8, !tbaa !23
  %12693 = getelementptr inbounds %struct.TestCase, ptr %84, i64 10, i32 0, i32 2
  %12694 = icmp eq ptr %12692, %12693
  br i1 %12694, label %12696, label %12695

12695:                                            ; preds = %12691
  call void @_ZdlPv(ptr noundef %12692) #22
  br label %12696

12696:                                            ; preds = %12691, %12695
  %12697 = getelementptr inbounds %struct.TestCase, ptr %84, i64 9, i32 3, i32 0, i32 1
  %12698 = load ptr, ptr %12697, align 8, !tbaa !88
  %12699 = icmp eq ptr %12698, null
  br i1 %12699, label %12724, label %12700

12700:                                            ; preds = %12696
  %12701 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12698, i64 0, i32 1
  %12702 = load atomic i64, ptr %12701 acquire, align 8
  %12703 = icmp eq i64 %12702, 4294967297
  %12704 = trunc i64 %12702 to i32
  br i1 %12703, label %12705, label %12713

12705:                                            ; preds = %12700
  store i32 0, ptr %12701, align 8, !tbaa !90
  %12706 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12698, i64 0, i32 2
  store i32 0, ptr %12706, align 4, !tbaa !92
  %12707 = load ptr, ptr %12698, align 8, !tbaa !58
  %12708 = getelementptr inbounds ptr, ptr %12707, i64 2
  %12709 = load ptr, ptr %12708, align 8
  call void %12709(ptr noundef nonnull align 8 dereferenceable(16) %12698) #21
  %12710 = load ptr, ptr %12698, align 8, !tbaa !58
  %12711 = getelementptr inbounds ptr, ptr %12710, i64 3
  %12712 = load ptr, ptr %12711, align 8
  call void %12712(ptr noundef nonnull align 8 dereferenceable(16) %12698) #21
  br label %12724

12713:                                            ; preds = %12700
  %12714 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12715 = icmp eq i8 %12714, 0
  br i1 %12715, label %12718, label %12716

12716:                                            ; preds = %12713
  %12717 = add nsw i32 %12704, -1
  store i32 %12717, ptr %12701, align 8, !tbaa !73
  br label %12720

12718:                                            ; preds = %12713
  %12719 = atomicrmw volatile add ptr %12701, i32 -1 acq_rel, align 4
  br label %12720

12720:                                            ; preds = %12718, %12716
  %12721 = phi i32 [ %12704, %12716 ], [ %12719, %12718 ]
  %12722 = icmp eq i32 %12721, 1
  br i1 %12722, label %12723, label %12724, !prof !42

12723:                                            ; preds = %12720
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12698) #21
  br label %12724

12724:                                            ; preds = %12723, %12720, %12705, %12696
  %12725 = getelementptr inbounds %struct.TestCase, ptr %84, i64 9, i32 2
  %12726 = load ptr, ptr %12725, align 8, !tbaa !23
  %12727 = getelementptr inbounds %struct.TestCase, ptr %84, i64 9, i32 2, i32 2
  %12728 = icmp eq ptr %12726, %12727
  br i1 %12728, label %12730, label %12729

12729:                                            ; preds = %12724
  call void @_ZdlPv(ptr noundef %12726) #22
  br label %12730

12730:                                            ; preds = %12729, %12724
  %12731 = load ptr, ptr %12302, align 8, !tbaa !23
  %12732 = getelementptr inbounds %struct.TestCase, ptr %84, i64 9, i32 0, i32 2
  %12733 = icmp eq ptr %12731, %12732
  br i1 %12733, label %12735, label %12734

12734:                                            ; preds = %12730
  call void @_ZdlPv(ptr noundef %12731) #22
  br label %12735

12735:                                            ; preds = %12730, %12734
  %12736 = getelementptr inbounds %struct.TestCase, ptr %84, i64 8, i32 3, i32 0, i32 1
  %12737 = load ptr, ptr %12736, align 8, !tbaa !88
  %12738 = icmp eq ptr %12737, null
  br i1 %12738, label %12763, label %12739

12739:                                            ; preds = %12735
  %12740 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12737, i64 0, i32 1
  %12741 = load atomic i64, ptr %12740 acquire, align 8
  %12742 = icmp eq i64 %12741, 4294967297
  %12743 = trunc i64 %12741 to i32
  br i1 %12742, label %12744, label %12752

12744:                                            ; preds = %12739
  store i32 0, ptr %12740, align 8, !tbaa !90
  %12745 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12737, i64 0, i32 2
  store i32 0, ptr %12745, align 4, !tbaa !92
  %12746 = load ptr, ptr %12737, align 8, !tbaa !58
  %12747 = getelementptr inbounds ptr, ptr %12746, i64 2
  %12748 = load ptr, ptr %12747, align 8
  call void %12748(ptr noundef nonnull align 8 dereferenceable(16) %12737) #21
  %12749 = load ptr, ptr %12737, align 8, !tbaa !58
  %12750 = getelementptr inbounds ptr, ptr %12749, i64 3
  %12751 = load ptr, ptr %12750, align 8
  call void %12751(ptr noundef nonnull align 8 dereferenceable(16) %12737) #21
  br label %12763

12752:                                            ; preds = %12739
  %12753 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12754 = icmp eq i8 %12753, 0
  br i1 %12754, label %12757, label %12755

12755:                                            ; preds = %12752
  %12756 = add nsw i32 %12743, -1
  store i32 %12756, ptr %12740, align 8, !tbaa !73
  br label %12759

12757:                                            ; preds = %12752
  %12758 = atomicrmw volatile add ptr %12740, i32 -1 acq_rel, align 4
  br label %12759

12759:                                            ; preds = %12757, %12755
  %12760 = phi i32 [ %12743, %12755 ], [ %12758, %12757 ]
  %12761 = icmp eq i32 %12760, 1
  br i1 %12761, label %12762, label %12763, !prof !42

12762:                                            ; preds = %12759
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12737) #21
  br label %12763

12763:                                            ; preds = %12762, %12759, %12744, %12735
  %12764 = getelementptr inbounds %struct.TestCase, ptr %84, i64 8, i32 2
  %12765 = load ptr, ptr %12764, align 8, !tbaa !23
  %12766 = getelementptr inbounds %struct.TestCase, ptr %84, i64 8, i32 2, i32 2
  %12767 = icmp eq ptr %12765, %12766
  br i1 %12767, label %12769, label %12768

12768:                                            ; preds = %12763
  call void @_ZdlPv(ptr noundef %12765) #22
  br label %12769

12769:                                            ; preds = %12768, %12763
  %12770 = load ptr, ptr %12293, align 8, !tbaa !23
  %12771 = getelementptr inbounds %struct.TestCase, ptr %84, i64 8, i32 0, i32 2
  %12772 = icmp eq ptr %12770, %12771
  br i1 %12772, label %12774, label %12773

12773:                                            ; preds = %12769
  call void @_ZdlPv(ptr noundef %12770) #22
  br label %12774

12774:                                            ; preds = %12769, %12773
  %12775 = getelementptr inbounds %struct.TestCase, ptr %84, i64 7, i32 3, i32 0, i32 1
  %12776 = load ptr, ptr %12775, align 8, !tbaa !88
  %12777 = icmp eq ptr %12776, null
  br i1 %12777, label %12802, label %12778

12778:                                            ; preds = %12774
  %12779 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12776, i64 0, i32 1
  %12780 = load atomic i64, ptr %12779 acquire, align 8
  %12781 = icmp eq i64 %12780, 4294967297
  %12782 = trunc i64 %12780 to i32
  br i1 %12781, label %12783, label %12791

12783:                                            ; preds = %12778
  store i32 0, ptr %12779, align 8, !tbaa !90
  %12784 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12776, i64 0, i32 2
  store i32 0, ptr %12784, align 4, !tbaa !92
  %12785 = load ptr, ptr %12776, align 8, !tbaa !58
  %12786 = getelementptr inbounds ptr, ptr %12785, i64 2
  %12787 = load ptr, ptr %12786, align 8
  call void %12787(ptr noundef nonnull align 8 dereferenceable(16) %12776) #21
  %12788 = load ptr, ptr %12776, align 8, !tbaa !58
  %12789 = getelementptr inbounds ptr, ptr %12788, i64 3
  %12790 = load ptr, ptr %12789, align 8
  call void %12790(ptr noundef nonnull align 8 dereferenceable(16) %12776) #21
  br label %12802

12791:                                            ; preds = %12778
  %12792 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12793 = icmp eq i8 %12792, 0
  br i1 %12793, label %12796, label %12794

12794:                                            ; preds = %12791
  %12795 = add nsw i32 %12782, -1
  store i32 %12795, ptr %12779, align 8, !tbaa !73
  br label %12798

12796:                                            ; preds = %12791
  %12797 = atomicrmw volatile add ptr %12779, i32 -1 acq_rel, align 4
  br label %12798

12798:                                            ; preds = %12796, %12794
  %12799 = phi i32 [ %12782, %12794 ], [ %12797, %12796 ]
  %12800 = icmp eq i32 %12799, 1
  br i1 %12800, label %12801, label %12802, !prof !42

12801:                                            ; preds = %12798
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12776) #21
  br label %12802

12802:                                            ; preds = %12801, %12798, %12783, %12774
  %12803 = getelementptr inbounds %struct.TestCase, ptr %84, i64 7, i32 2
  %12804 = load ptr, ptr %12803, align 8, !tbaa !23
  %12805 = getelementptr inbounds %struct.TestCase, ptr %84, i64 7, i32 2, i32 2
  %12806 = icmp eq ptr %12804, %12805
  br i1 %12806, label %12808, label %12807

12807:                                            ; preds = %12802
  call void @_ZdlPv(ptr noundef %12804) #22
  br label %12808

12808:                                            ; preds = %12807, %12802
  %12809 = load ptr, ptr %12288, align 8, !tbaa !23
  %12810 = getelementptr inbounds %struct.TestCase, ptr %84, i64 7, i32 0, i32 2
  %12811 = icmp eq ptr %12809, %12810
  br i1 %12811, label %12813, label %12812

12812:                                            ; preds = %12808
  call void @_ZdlPv(ptr noundef %12809) #22
  br label %12813

12813:                                            ; preds = %12808, %12812
  %12814 = getelementptr inbounds %struct.TestCase, ptr %84, i64 6, i32 3, i32 0, i32 1
  %12815 = load ptr, ptr %12814, align 8, !tbaa !88
  %12816 = icmp eq ptr %12815, null
  br i1 %12816, label %12841, label %12817

12817:                                            ; preds = %12813
  %12818 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12815, i64 0, i32 1
  %12819 = load atomic i64, ptr %12818 acquire, align 8
  %12820 = icmp eq i64 %12819, 4294967297
  %12821 = trunc i64 %12819 to i32
  br i1 %12820, label %12822, label %12830

12822:                                            ; preds = %12817
  store i32 0, ptr %12818, align 8, !tbaa !90
  %12823 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12815, i64 0, i32 2
  store i32 0, ptr %12823, align 4, !tbaa !92
  %12824 = load ptr, ptr %12815, align 8, !tbaa !58
  %12825 = getelementptr inbounds ptr, ptr %12824, i64 2
  %12826 = load ptr, ptr %12825, align 8
  call void %12826(ptr noundef nonnull align 8 dereferenceable(16) %12815) #21
  %12827 = load ptr, ptr %12815, align 8, !tbaa !58
  %12828 = getelementptr inbounds ptr, ptr %12827, i64 3
  %12829 = load ptr, ptr %12828, align 8
  call void %12829(ptr noundef nonnull align 8 dereferenceable(16) %12815) #21
  br label %12841

12830:                                            ; preds = %12817
  %12831 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12832 = icmp eq i8 %12831, 0
  br i1 %12832, label %12835, label %12833

12833:                                            ; preds = %12830
  %12834 = add nsw i32 %12821, -1
  store i32 %12834, ptr %12818, align 8, !tbaa !73
  br label %12837

12835:                                            ; preds = %12830
  %12836 = atomicrmw volatile add ptr %12818, i32 -1 acq_rel, align 4
  br label %12837

12837:                                            ; preds = %12835, %12833
  %12838 = phi i32 [ %12821, %12833 ], [ %12836, %12835 ]
  %12839 = icmp eq i32 %12838, 1
  br i1 %12839, label %12840, label %12841, !prof !42

12840:                                            ; preds = %12837
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12815) #21
  br label %12841

12841:                                            ; preds = %12840, %12837, %12822, %12813
  %12842 = getelementptr inbounds %struct.TestCase, ptr %84, i64 6, i32 2
  %12843 = load ptr, ptr %12842, align 8, !tbaa !23
  %12844 = getelementptr inbounds %struct.TestCase, ptr %84, i64 6, i32 2, i32 2
  %12845 = icmp eq ptr %12843, %12844
  br i1 %12845, label %12847, label %12846

12846:                                            ; preds = %12841
  call void @_ZdlPv(ptr noundef %12843) #22
  br label %12847

12847:                                            ; preds = %12846, %12841
  %12848 = load ptr, ptr %12279, align 8, !tbaa !23
  %12849 = getelementptr inbounds %struct.TestCase, ptr %84, i64 6, i32 0, i32 2
  %12850 = icmp eq ptr %12848, %12849
  br i1 %12850, label %12852, label %12851

12851:                                            ; preds = %12847
  call void @_ZdlPv(ptr noundef %12848) #22
  br label %12852

12852:                                            ; preds = %12847, %12851
  %12853 = getelementptr inbounds %struct.TestCase, ptr %84, i64 5, i32 3, i32 0, i32 1
  %12854 = load ptr, ptr %12853, align 8, !tbaa !88
  %12855 = icmp eq ptr %12854, null
  br i1 %12855, label %12880, label %12856

12856:                                            ; preds = %12852
  %12857 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12854, i64 0, i32 1
  %12858 = load atomic i64, ptr %12857 acquire, align 8
  %12859 = icmp eq i64 %12858, 4294967297
  %12860 = trunc i64 %12858 to i32
  br i1 %12859, label %12861, label %12869

12861:                                            ; preds = %12856
  store i32 0, ptr %12857, align 8, !tbaa !90
  %12862 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12854, i64 0, i32 2
  store i32 0, ptr %12862, align 4, !tbaa !92
  %12863 = load ptr, ptr %12854, align 8, !tbaa !58
  %12864 = getelementptr inbounds ptr, ptr %12863, i64 2
  %12865 = load ptr, ptr %12864, align 8
  call void %12865(ptr noundef nonnull align 8 dereferenceable(16) %12854) #21
  %12866 = load ptr, ptr %12854, align 8, !tbaa !58
  %12867 = getelementptr inbounds ptr, ptr %12866, i64 3
  %12868 = load ptr, ptr %12867, align 8
  call void %12868(ptr noundef nonnull align 8 dereferenceable(16) %12854) #21
  br label %12880

12869:                                            ; preds = %12856
  %12870 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12871 = icmp eq i8 %12870, 0
  br i1 %12871, label %12874, label %12872

12872:                                            ; preds = %12869
  %12873 = add nsw i32 %12860, -1
  store i32 %12873, ptr %12857, align 8, !tbaa !73
  br label %12876

12874:                                            ; preds = %12869
  %12875 = atomicrmw volatile add ptr %12857, i32 -1 acq_rel, align 4
  br label %12876

12876:                                            ; preds = %12874, %12872
  %12877 = phi i32 [ %12860, %12872 ], [ %12875, %12874 ]
  %12878 = icmp eq i32 %12877, 1
  br i1 %12878, label %12879, label %12880, !prof !42

12879:                                            ; preds = %12876
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12854) #21
  br label %12880

12880:                                            ; preds = %12879, %12876, %12861, %12852
  %12881 = getelementptr inbounds %struct.TestCase, ptr %84, i64 5, i32 2
  %12882 = load ptr, ptr %12881, align 8, !tbaa !23
  %12883 = getelementptr inbounds %struct.TestCase, ptr %84, i64 5, i32 2, i32 2
  %12884 = icmp eq ptr %12882, %12883
  br i1 %12884, label %12886, label %12885

12885:                                            ; preds = %12880
  call void @_ZdlPv(ptr noundef %12882) #22
  br label %12886

12886:                                            ; preds = %12885, %12880
  %12887 = load ptr, ptr %12270, align 8, !tbaa !23
  %12888 = getelementptr inbounds %struct.TestCase, ptr %84, i64 5, i32 0, i32 2
  %12889 = icmp eq ptr %12887, %12888
  br i1 %12889, label %12891, label %12890

12890:                                            ; preds = %12886
  call void @_ZdlPv(ptr noundef %12887) #22
  br label %12891

12891:                                            ; preds = %12886, %12890
  %12892 = getelementptr inbounds %struct.TestCase, ptr %84, i64 4, i32 3, i32 0, i32 1
  %12893 = load ptr, ptr %12892, align 8, !tbaa !88
  %12894 = icmp eq ptr %12893, null
  br i1 %12894, label %12919, label %12895

12895:                                            ; preds = %12891
  %12896 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12893, i64 0, i32 1
  %12897 = load atomic i64, ptr %12896 acquire, align 8
  %12898 = icmp eq i64 %12897, 4294967297
  %12899 = trunc i64 %12897 to i32
  br i1 %12898, label %12900, label %12908

12900:                                            ; preds = %12895
  store i32 0, ptr %12896, align 8, !tbaa !90
  %12901 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12893, i64 0, i32 2
  store i32 0, ptr %12901, align 4, !tbaa !92
  %12902 = load ptr, ptr %12893, align 8, !tbaa !58
  %12903 = getelementptr inbounds ptr, ptr %12902, i64 2
  %12904 = load ptr, ptr %12903, align 8
  call void %12904(ptr noundef nonnull align 8 dereferenceable(16) %12893) #21
  %12905 = load ptr, ptr %12893, align 8, !tbaa !58
  %12906 = getelementptr inbounds ptr, ptr %12905, i64 3
  %12907 = load ptr, ptr %12906, align 8
  call void %12907(ptr noundef nonnull align 8 dereferenceable(16) %12893) #21
  br label %12919

12908:                                            ; preds = %12895
  %12909 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12910 = icmp eq i8 %12909, 0
  br i1 %12910, label %12913, label %12911

12911:                                            ; preds = %12908
  %12912 = add nsw i32 %12899, -1
  store i32 %12912, ptr %12896, align 8, !tbaa !73
  br label %12915

12913:                                            ; preds = %12908
  %12914 = atomicrmw volatile add ptr %12896, i32 -1 acq_rel, align 4
  br label %12915

12915:                                            ; preds = %12913, %12911
  %12916 = phi i32 [ %12899, %12911 ], [ %12914, %12913 ]
  %12917 = icmp eq i32 %12916, 1
  br i1 %12917, label %12918, label %12919, !prof !42

12918:                                            ; preds = %12915
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12893) #21
  br label %12919

12919:                                            ; preds = %12918, %12915, %12900, %12891
  %12920 = getelementptr inbounds %struct.TestCase, ptr %84, i64 4, i32 2
  %12921 = load ptr, ptr %12920, align 8, !tbaa !23
  %12922 = getelementptr inbounds %struct.TestCase, ptr %84, i64 4, i32 2, i32 2
  %12923 = icmp eq ptr %12921, %12922
  br i1 %12923, label %12925, label %12924

12924:                                            ; preds = %12919
  call void @_ZdlPv(ptr noundef %12921) #22
  br label %12925

12925:                                            ; preds = %12924, %12919
  %12926 = load ptr, ptr %12261, align 8, !tbaa !23
  %12927 = getelementptr inbounds %struct.TestCase, ptr %84, i64 4, i32 0, i32 2
  %12928 = icmp eq ptr %12926, %12927
  br i1 %12928, label %12930, label %12929

12929:                                            ; preds = %12925
  call void @_ZdlPv(ptr noundef %12926) #22
  br label %12930

12930:                                            ; preds = %12925, %12929
  %12931 = getelementptr inbounds %struct.TestCase, ptr %84, i64 3, i32 3, i32 0, i32 1
  %12932 = load ptr, ptr %12931, align 8, !tbaa !88
  %12933 = icmp eq ptr %12932, null
  br i1 %12933, label %12958, label %12934

12934:                                            ; preds = %12930
  %12935 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12932, i64 0, i32 1
  %12936 = load atomic i64, ptr %12935 acquire, align 8
  %12937 = icmp eq i64 %12936, 4294967297
  %12938 = trunc i64 %12936 to i32
  br i1 %12937, label %12939, label %12947

12939:                                            ; preds = %12934
  store i32 0, ptr %12935, align 8, !tbaa !90
  %12940 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12932, i64 0, i32 2
  store i32 0, ptr %12940, align 4, !tbaa !92
  %12941 = load ptr, ptr %12932, align 8, !tbaa !58
  %12942 = getelementptr inbounds ptr, ptr %12941, i64 2
  %12943 = load ptr, ptr %12942, align 8
  call void %12943(ptr noundef nonnull align 8 dereferenceable(16) %12932) #21
  %12944 = load ptr, ptr %12932, align 8, !tbaa !58
  %12945 = getelementptr inbounds ptr, ptr %12944, i64 3
  %12946 = load ptr, ptr %12945, align 8
  call void %12946(ptr noundef nonnull align 8 dereferenceable(16) %12932) #21
  br label %12958

12947:                                            ; preds = %12934
  %12948 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12949 = icmp eq i8 %12948, 0
  br i1 %12949, label %12952, label %12950

12950:                                            ; preds = %12947
  %12951 = add nsw i32 %12938, -1
  store i32 %12951, ptr %12935, align 8, !tbaa !73
  br label %12954

12952:                                            ; preds = %12947
  %12953 = atomicrmw volatile add ptr %12935, i32 -1 acq_rel, align 4
  br label %12954

12954:                                            ; preds = %12952, %12950
  %12955 = phi i32 [ %12938, %12950 ], [ %12953, %12952 ]
  %12956 = icmp eq i32 %12955, 1
  br i1 %12956, label %12957, label %12958, !prof !42

12957:                                            ; preds = %12954
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12932) #21
  br label %12958

12958:                                            ; preds = %12957, %12954, %12939, %12930
  %12959 = getelementptr inbounds %struct.TestCase, ptr %84, i64 3, i32 2
  %12960 = load ptr, ptr %12959, align 8, !tbaa !23
  %12961 = getelementptr inbounds %struct.TestCase, ptr %84, i64 3, i32 2, i32 2
  %12962 = icmp eq ptr %12960, %12961
  br i1 %12962, label %12964, label %12963

12963:                                            ; preds = %12958
  call void @_ZdlPv(ptr noundef %12960) #22
  br label %12964

12964:                                            ; preds = %12963, %12958
  %12965 = load ptr, ptr %12253, align 8, !tbaa !23
  %12966 = getelementptr inbounds %struct.TestCase, ptr %84, i64 3, i32 0, i32 2
  %12967 = icmp eq ptr %12965, %12966
  br i1 %12967, label %12969, label %12968

12968:                                            ; preds = %12964
  call void @_ZdlPv(ptr noundef %12965) #22
  br label %12969

12969:                                            ; preds = %12964, %12968
  %12970 = getelementptr inbounds %struct.TestCase, ptr %84, i64 2, i32 3, i32 0, i32 1
  %12971 = load ptr, ptr %12970, align 8, !tbaa !88
  %12972 = icmp eq ptr %12971, null
  br i1 %12972, label %12997, label %12973

12973:                                            ; preds = %12969
  %12974 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12971, i64 0, i32 1
  %12975 = load atomic i64, ptr %12974 acquire, align 8
  %12976 = icmp eq i64 %12975, 4294967297
  %12977 = trunc i64 %12975 to i32
  br i1 %12976, label %12978, label %12986

12978:                                            ; preds = %12973
  store i32 0, ptr %12974, align 8, !tbaa !90
  %12979 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %12971, i64 0, i32 2
  store i32 0, ptr %12979, align 4, !tbaa !92
  %12980 = load ptr, ptr %12971, align 8, !tbaa !58
  %12981 = getelementptr inbounds ptr, ptr %12980, i64 2
  %12982 = load ptr, ptr %12981, align 8
  call void %12982(ptr noundef nonnull align 8 dereferenceable(16) %12971) #21
  %12983 = load ptr, ptr %12971, align 8, !tbaa !58
  %12984 = getelementptr inbounds ptr, ptr %12983, i64 3
  %12985 = load ptr, ptr %12984, align 8
  call void %12985(ptr noundef nonnull align 8 dereferenceable(16) %12971) #21
  br label %12997

12986:                                            ; preds = %12973
  %12987 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %12988 = icmp eq i8 %12987, 0
  br i1 %12988, label %12991, label %12989

12989:                                            ; preds = %12986
  %12990 = add nsw i32 %12977, -1
  store i32 %12990, ptr %12974, align 8, !tbaa !73
  br label %12993

12991:                                            ; preds = %12986
  %12992 = atomicrmw volatile add ptr %12974, i32 -1 acq_rel, align 4
  br label %12993

12993:                                            ; preds = %12991, %12989
  %12994 = phi i32 [ %12977, %12989 ], [ %12992, %12991 ]
  %12995 = icmp eq i32 %12994, 1
  br i1 %12995, label %12996, label %12997, !prof !42

12996:                                            ; preds = %12993
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %12971) #21
  br label %12997

12997:                                            ; preds = %12996, %12993, %12978, %12969
  %12998 = getelementptr inbounds %struct.TestCase, ptr %84, i64 2, i32 2
  %12999 = load ptr, ptr %12998, align 8, !tbaa !23
  %13000 = getelementptr inbounds %struct.TestCase, ptr %84, i64 2, i32 2, i32 2
  %13001 = icmp eq ptr %12999, %13000
  br i1 %13001, label %13003, label %13002

13002:                                            ; preds = %12997
  call void @_ZdlPv(ptr noundef %12999) #22
  br label %13003

13003:                                            ; preds = %13002, %12997
  %13004 = load ptr, ptr %12244, align 8, !tbaa !23
  %13005 = getelementptr inbounds %struct.TestCase, ptr %84, i64 2, i32 0, i32 2
  %13006 = icmp eq ptr %13004, %13005
  br i1 %13006, label %13008, label %13007

13007:                                            ; preds = %13003
  call void @_ZdlPv(ptr noundef %13004) #22
  br label %13008

13008:                                            ; preds = %13003, %13007
  %13009 = getelementptr inbounds %struct.TestCase, ptr %84, i64 1, i32 3, i32 0, i32 1
  %13010 = load ptr, ptr %13009, align 8, !tbaa !88
  %13011 = icmp eq ptr %13010, null
  br i1 %13011, label %13036, label %13012

13012:                                            ; preds = %13008
  %13013 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13010, i64 0, i32 1
  %13014 = load atomic i64, ptr %13013 acquire, align 8
  %13015 = icmp eq i64 %13014, 4294967297
  %13016 = trunc i64 %13014 to i32
  br i1 %13015, label %13017, label %13025

13017:                                            ; preds = %13012
  store i32 0, ptr %13013, align 8, !tbaa !90
  %13018 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13010, i64 0, i32 2
  store i32 0, ptr %13018, align 4, !tbaa !92
  %13019 = load ptr, ptr %13010, align 8, !tbaa !58
  %13020 = getelementptr inbounds ptr, ptr %13019, i64 2
  %13021 = load ptr, ptr %13020, align 8
  call void %13021(ptr noundef nonnull align 8 dereferenceable(16) %13010) #21
  %13022 = load ptr, ptr %13010, align 8, !tbaa !58
  %13023 = getelementptr inbounds ptr, ptr %13022, i64 3
  %13024 = load ptr, ptr %13023, align 8
  call void %13024(ptr noundef nonnull align 8 dereferenceable(16) %13010) #21
  br label %13036

13025:                                            ; preds = %13012
  %13026 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %13027 = icmp eq i8 %13026, 0
  br i1 %13027, label %13030, label %13028

13028:                                            ; preds = %13025
  %13029 = add nsw i32 %13016, -1
  store i32 %13029, ptr %13013, align 8, !tbaa !73
  br label %13032

13030:                                            ; preds = %13025
  %13031 = atomicrmw volatile add ptr %13013, i32 -1 acq_rel, align 4
  br label %13032

13032:                                            ; preds = %13030, %13028
  %13033 = phi i32 [ %13016, %13028 ], [ %13031, %13030 ]
  %13034 = icmp eq i32 %13033, 1
  br i1 %13034, label %13035, label %13036, !prof !42

13035:                                            ; preds = %13032
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %13010) #21
  br label %13036

13036:                                            ; preds = %13035, %13032, %13017, %13008
  %13037 = getelementptr inbounds %struct.TestCase, ptr %84, i64 1, i32 2
  %13038 = load ptr, ptr %13037, align 8, !tbaa !23
  %13039 = getelementptr inbounds %struct.TestCase, ptr %84, i64 1, i32 2, i32 2
  %13040 = icmp eq ptr %13038, %13039
  br i1 %13040, label %13042, label %13041

13041:                                            ; preds = %13036
  call void @_ZdlPv(ptr noundef %13038) #22
  br label %13042

13042:                                            ; preds = %13041, %13036
  %13043 = load ptr, ptr %12235, align 8, !tbaa !23
  %13044 = getelementptr inbounds %struct.TestCase, ptr %84, i64 1, i32 0, i32 2
  %13045 = icmp eq ptr %13043, %13044
  br i1 %13045, label %13047, label %13046

13046:                                            ; preds = %13042
  call void @_ZdlPv(ptr noundef %13043) #22
  br label %13047

13047:                                            ; preds = %13042, %13046
  %13048 = getelementptr inbounds %struct.TestCase, ptr %84, i64 0, i32 3, i32 0, i32 1
  %13049 = load ptr, ptr %13048, align 8, !tbaa !88
  %13050 = icmp eq ptr %13049, null
  br i1 %13050, label %13075, label %13051

13051:                                            ; preds = %13047
  %13052 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13049, i64 0, i32 1
  %13053 = load atomic i64, ptr %13052 acquire, align 8
  %13054 = icmp eq i64 %13053, 4294967297
  %13055 = trunc i64 %13053 to i32
  br i1 %13054, label %13056, label %13064

13056:                                            ; preds = %13051
  store i32 0, ptr %13052, align 8, !tbaa !90
  %13057 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13049, i64 0, i32 2
  store i32 0, ptr %13057, align 4, !tbaa !92
  %13058 = load ptr, ptr %13049, align 8, !tbaa !58
  %13059 = getelementptr inbounds ptr, ptr %13058, i64 2
  %13060 = load ptr, ptr %13059, align 8
  call void %13060(ptr noundef nonnull align 8 dereferenceable(16) %13049) #21
  %13061 = load ptr, ptr %13049, align 8, !tbaa !58
  %13062 = getelementptr inbounds ptr, ptr %13061, i64 3
  %13063 = load ptr, ptr %13062, align 8
  call void %13063(ptr noundef nonnull align 8 dereferenceable(16) %13049) #21
  br label %13075

13064:                                            ; preds = %13051
  %13065 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %13066 = icmp eq i8 %13065, 0
  br i1 %13066, label %13069, label %13067

13067:                                            ; preds = %13064
  %13068 = add nsw i32 %13055, -1
  store i32 %13068, ptr %13052, align 8, !tbaa !73
  br label %13071

13069:                                            ; preds = %13064
  %13070 = atomicrmw volatile add ptr %13052, i32 -1 acq_rel, align 4
  br label %13071

13071:                                            ; preds = %13069, %13067
  %13072 = phi i32 [ %13055, %13067 ], [ %13070, %13069 ]
  %13073 = icmp eq i32 %13072, 1
  br i1 %13073, label %13074, label %13075, !prof !42

13074:                                            ; preds = %13071
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %13049) #21
  br label %13075

13075:                                            ; preds = %13074, %13071, %13056, %13047
  %13076 = getelementptr inbounds %struct.TestCase, ptr %84, i64 0, i32 2
  %13077 = load ptr, ptr %13076, align 8, !tbaa !23
  %13078 = getelementptr inbounds %struct.TestCase, ptr %84, i64 0, i32 2, i32 2
  %13079 = icmp eq ptr %13077, %13078
  br i1 %13079, label %13081, label %13080

13080:                                            ; preds = %13075
  call void @_ZdlPv(ptr noundef %13077) #22
  br label %13081

13081:                                            ; preds = %13080, %13075
  %13082 = load ptr, ptr %84, align 8, !tbaa !23
  %13083 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %84, i64 0, i32 2
  %13084 = icmp eq ptr %13082, %13083
  br i1 %13084, label %13086, label %13085

13085:                                            ; preds = %13081
  call void @_ZdlPv(ptr noundef %13082) #22
  br label %13086

13086:                                            ; preds = %13085, %13081, %12498
  %13087 = phi { ptr, i32 } [ %12499, %12498 ], [ %12501, %13081 ], [ %12501, %13085 ]
  %13088 = phi i1 [ true, %12498 ], [ false, %13081 ], [ false, %13085 ]
  %13089 = load ptr, ptr %99, align 8, !tbaa !23
  %13090 = icmp eq ptr %13089, %12340
  br i1 %13090, label %13092, label %13091

13091:                                            ; preds = %13086
  call void @_ZdlPv(ptr noundef %13089) #22
  br label %13092

13092:                                            ; preds = %13091, %13086, %12496
  %13093 = phi ptr [ %12334, %12496 ], [ %12339, %13091 ], [ %12339, %13086 ]
  %13094 = phi { ptr, i32 } [ %12497, %12496 ], [ %13087, %13091 ], [ %13087, %13086 ]
  %13095 = phi i1 [ true, %12496 ], [ %13088, %13091 ], [ %13088, %13086 ]
  %13096 = load ptr, ptr %98, align 8, !tbaa !23
  %13097 = icmp eq ptr %13096, %12335
  br i1 %13097, label %13099, label %13098

13098:                                            ; preds = %13092
  call void @_ZdlPv(ptr noundef %13096) #22
  br label %13099

13099:                                            ; preds = %13098, %13092, %12494
  %13100 = phi ptr [ %12329, %12494 ], [ %13093, %13098 ], [ %13093, %13092 ]
  %13101 = phi { ptr, i32 } [ %12495, %12494 ], [ %13094, %13098 ], [ %13094, %13092 ]
  %13102 = phi i1 [ true, %12494 ], [ %13095, %13098 ], [ %13095, %13092 ]
  %13103 = load ptr, ptr %97, align 8, !tbaa !23
  %13104 = icmp eq ptr %13103, %12330
  br i1 %13104, label %13106, label %13105

13105:                                            ; preds = %13099
  call void @_ZdlPv(ptr noundef %13103) #22
  br label %13106

13106:                                            ; preds = %13105, %13099, %12492
  %13107 = phi ptr [ %12320, %12492 ], [ %13100, %13105 ], [ %13100, %13099 ]
  %13108 = phi { ptr, i32 } [ %12493, %12492 ], [ %13101, %13105 ], [ %13101, %13099 ]
  %13109 = phi i1 [ true, %12492 ], [ %13102, %13105 ], [ %13102, %13099 ]
  %13110 = load ptr, ptr %96, align 8, !tbaa !23
  %13111 = icmp eq ptr %13110, %12321
  br i1 %13111, label %13113, label %13112

13112:                                            ; preds = %13106
  call void @_ZdlPv(ptr noundef %13110) #22
  br label %13113

13113:                                            ; preds = %13112, %13106, %12490, %12488
  %13114 = phi ptr [ %12311, %12488 ], [ %12320, %12490 ], [ %13107, %13106 ], [ %13107, %13112 ]
  %13115 = phi { ptr, i32 } [ %12489, %12488 ], [ %12491, %12490 ], [ %13108, %13106 ], [ %13108, %13112 ]
  %13116 = phi i1 [ true, %12488 ], [ true, %12490 ], [ %13109, %13106 ], [ %13109, %13112 ]
  %13117 = load ptr, ptr %95, align 8, !tbaa !23
  %13118 = icmp eq ptr %13117, %12312
  br i1 %13118, label %13120, label %13119

13119:                                            ; preds = %13113
  call void @_ZdlPv(ptr noundef %13117) #22
  br label %13120

13120:                                            ; preds = %13119, %13113, %12486, %12484
  %13121 = phi ptr [ %12302, %12484 ], [ %12311, %12486 ], [ %13114, %13113 ], [ %13114, %13119 ]
  %13122 = phi { ptr, i32 } [ %12485, %12484 ], [ %12487, %12486 ], [ %13115, %13113 ], [ %13115, %13119 ]
  %13123 = phi i1 [ true, %12484 ], [ true, %12486 ], [ %13116, %13113 ], [ %13116, %13119 ]
  %13124 = load ptr, ptr %94, align 8, !tbaa !23
  %13125 = icmp eq ptr %13124, %12303
  br i1 %13125, label %13127, label %13126

13126:                                            ; preds = %13120
  call void @_ZdlPv(ptr noundef %13124) #22
  br label %13127

13127:                                            ; preds = %13126, %13120, %12482, %12480
  %13128 = phi ptr [ %12293, %12480 ], [ %12302, %12482 ], [ %13121, %13120 ], [ %13121, %13126 ]
  %13129 = phi { ptr, i32 } [ %12481, %12480 ], [ %12483, %12482 ], [ %13122, %13120 ], [ %13122, %13126 ]
  %13130 = phi i1 [ true, %12480 ], [ true, %12482 ], [ %13123, %13120 ], [ %13123, %13126 ]
  %13131 = load ptr, ptr %93, align 8, !tbaa !23
  %13132 = icmp eq ptr %13131, %12294
  br i1 %13132, label %13134, label %13133

13133:                                            ; preds = %13127
  call void @_ZdlPv(ptr noundef %13131) #22
  br label %13134

13134:                                            ; preds = %13133, %13127, %12478, %12476
  %13135 = phi ptr [ %12288, %12476 ], [ %12293, %12478 ], [ %13128, %13127 ], [ %13128, %13133 ]
  %13136 = phi { ptr, i32 } [ %12477, %12476 ], [ %12479, %12478 ], [ %13129, %13127 ], [ %13129, %13133 ]
  %13137 = phi i1 [ true, %12476 ], [ true, %12478 ], [ %13130, %13127 ], [ %13130, %13133 ]
  %13138 = load ptr, ptr %92, align 8, !tbaa !23
  %13139 = icmp eq ptr %13138, %12289
  br i1 %13139, label %13141, label %13140

13140:                                            ; preds = %13134
  call void @_ZdlPv(ptr noundef %13138) #22
  br label %13141

13141:                                            ; preds = %13140, %13134, %12474
  %13142 = phi ptr [ %12279, %12474 ], [ %13135, %13140 ], [ %13135, %13134 ]
  %13143 = phi { ptr, i32 } [ %12475, %12474 ], [ %13136, %13140 ], [ %13136, %13134 ]
  %13144 = phi i1 [ true, %12474 ], [ %13137, %13140 ], [ %13137, %13134 ]
  %13145 = load ptr, ptr %91, align 8, !tbaa !23
  %13146 = icmp eq ptr %13145, %12280
  br i1 %13146, label %13148, label %13147

13147:                                            ; preds = %13141
  call void @_ZdlPv(ptr noundef %13145) #22
  br label %13148

13148:                                            ; preds = %13147, %13141, %12472, %12470
  %13149 = phi ptr [ %12270, %12470 ], [ %12279, %12472 ], [ %13142, %13141 ], [ %13142, %13147 ]
  %13150 = phi { ptr, i32 } [ %12471, %12470 ], [ %12473, %12472 ], [ %13143, %13141 ], [ %13143, %13147 ]
  %13151 = phi i1 [ true, %12470 ], [ true, %12472 ], [ %13144, %13141 ], [ %13144, %13147 ]
  %13152 = load ptr, ptr %90, align 8, !tbaa !23
  %13153 = icmp eq ptr %13152, %12271
  br i1 %13153, label %13155, label %13154

13154:                                            ; preds = %13148
  call void @_ZdlPv(ptr noundef %13152) #22
  br label %13155

13155:                                            ; preds = %13154, %13148, %12468, %12466
  %13156 = phi ptr [ %12261, %12466 ], [ %12270, %12468 ], [ %13149, %13148 ], [ %13149, %13154 ]
  %13157 = phi { ptr, i32 } [ %12467, %12466 ], [ %12469, %12468 ], [ %13150, %13148 ], [ %13150, %13154 ]
  %13158 = phi i1 [ true, %12466 ], [ true, %12468 ], [ %13151, %13148 ], [ %13151, %13154 ]
  %13159 = load ptr, ptr %89, align 8, !tbaa !23
  %13160 = icmp eq ptr %13159, %12262
  br i1 %13160, label %13162, label %13161

13161:                                            ; preds = %13155
  call void @_ZdlPv(ptr noundef %13159) #22
  br label %13162

13162:                                            ; preds = %13161, %13155, %12464, %12462
  %13163 = phi ptr [ %12253, %12462 ], [ %12261, %12464 ], [ %13156, %13155 ], [ %13156, %13161 ]
  %13164 = phi { ptr, i32 } [ %12463, %12462 ], [ %12465, %12464 ], [ %13157, %13155 ], [ %13157, %13161 ]
  %13165 = phi i1 [ true, %12462 ], [ true, %12464 ], [ %13158, %13155 ], [ %13158, %13161 ]
  %13166 = load ptr, ptr %88, align 8, !tbaa !23
  %13167 = icmp eq ptr %13166, %12254
  br i1 %13167, label %13169, label %13168

13168:                                            ; preds = %13162
  call void @_ZdlPv(ptr noundef %13166) #22
  br label %13169

13169:                                            ; preds = %13168, %13162, %12460, %12458
  %13170 = phi ptr [ %12244, %12458 ], [ %12253, %12460 ], [ %13163, %13162 ], [ %13163, %13168 ]
  %13171 = phi { ptr, i32 } [ %12459, %12458 ], [ %12461, %12460 ], [ %13164, %13162 ], [ %13164, %13168 ]
  %13172 = phi i1 [ true, %12458 ], [ true, %12460 ], [ %13165, %13162 ], [ %13165, %13168 ]
  %13173 = load ptr, ptr %87, align 8, !tbaa !23
  %13174 = icmp eq ptr %13173, %12245
  br i1 %13174, label %13176, label %13175

13175:                                            ; preds = %13169
  call void @_ZdlPv(ptr noundef %13173) #22
  br label %13176

13176:                                            ; preds = %13175, %13169, %12456, %12454
  %13177 = phi ptr [ %12235, %12454 ], [ %12244, %12456 ], [ %13170, %13169 ], [ %13170, %13175 ]
  %13178 = phi { ptr, i32 } [ %12455, %12454 ], [ %12457, %12456 ], [ %13171, %13169 ], [ %13171, %13175 ]
  %13179 = phi i1 [ true, %12454 ], [ true, %12456 ], [ %13172, %13169 ], [ %13172, %13175 ]
  %13180 = load ptr, ptr %86, align 8, !tbaa !23
  %13181 = icmp eq ptr %13180, %12236
  br i1 %13181, label %13183, label %13182

13182:                                            ; preds = %13176
  call void @_ZdlPv(ptr noundef %13180) #22
  br label %13183

13183:                                            ; preds = %13182, %13176, %12452, %12450
  %13184 = phi ptr [ %84, %12450 ], [ %12235, %12452 ], [ %13177, %13176 ], [ %13177, %13182 ]
  %13185 = phi { ptr, i32 } [ %12451, %12450 ], [ %12453, %12452 ], [ %13178, %13176 ], [ %13178, %13182 ]
  %13186 = phi i1 [ true, %12450 ], [ true, %12452 ], [ %13179, %13176 ], [ %13179, %13182 ]
  %13187 = load ptr, ptr %85, align 8, !tbaa !23
  %13188 = icmp eq ptr %13187, %12229
  br i1 %13188, label %13190, label %13189

13189:                                            ; preds = %13183
  call void @_ZdlPv(ptr noundef %13187) #22
  br label %13190

13190:                                            ; preds = %13189, %13183
  %13191 = icmp ne ptr %84, %13184
  %13192 = select i1 %13186, i1 %13191, i1 false
  br i1 %13192, label %13193, label %13236

13193:                                            ; preds = %13190, %13234
  %13194 = phi ptr [ %13195, %13234 ], [ %13184, %13190 ]
  %13195 = getelementptr inbounds %struct.TestCase, ptr %13194, i64 -1
  %13196 = getelementptr %struct.TestCase, ptr %13194, i64 -1, i32 3, i32 0, i32 1
  %13197 = load ptr, ptr %13196, align 8, !tbaa !88
  %13198 = icmp eq ptr %13197, null
  br i1 %13198, label %13223, label %13199

13199:                                            ; preds = %13193
  %13200 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13197, i64 0, i32 1
  %13201 = load atomic i64, ptr %13200 acquire, align 8
  %13202 = icmp eq i64 %13201, 4294967297
  %13203 = trunc i64 %13201 to i32
  br i1 %13202, label %13204, label %13212

13204:                                            ; preds = %13199
  store i32 0, ptr %13200, align 8, !tbaa !90
  %13205 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13197, i64 0, i32 2
  store i32 0, ptr %13205, align 4, !tbaa !92
  %13206 = load ptr, ptr %13197, align 8, !tbaa !58
  %13207 = getelementptr inbounds ptr, ptr %13206, i64 2
  %13208 = load ptr, ptr %13207, align 8
  call void %13208(ptr noundef nonnull align 8 dereferenceable(16) %13197) #21
  %13209 = load ptr, ptr %13197, align 8, !tbaa !58
  %13210 = getelementptr inbounds ptr, ptr %13209, i64 3
  %13211 = load ptr, ptr %13210, align 8
  call void %13211(ptr noundef nonnull align 8 dereferenceable(16) %13197) #21
  br label %13223

13212:                                            ; preds = %13199
  %13213 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %13214 = icmp eq i8 %13213, 0
  br i1 %13214, label %13217, label %13215

13215:                                            ; preds = %13212
  %13216 = add nsw i32 %13203, -1
  store i32 %13216, ptr %13200, align 8, !tbaa !73
  br label %13219

13217:                                            ; preds = %13212
  %13218 = atomicrmw volatile add ptr %13200, i32 -1 acq_rel, align 4
  br label %13219

13219:                                            ; preds = %13217, %13215
  %13220 = phi i32 [ %13203, %13215 ], [ %13218, %13217 ]
  %13221 = icmp eq i32 %13220, 1
  br i1 %13221, label %13222, label %13223, !prof !42

13222:                                            ; preds = %13219
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %13197) #21
  br label %13223

13223:                                            ; preds = %13222, %13219, %13204, %13193
  %13224 = getelementptr %struct.TestCase, ptr %13194, i64 -1, i32 2
  %13225 = load ptr, ptr %13224, align 8, !tbaa !23
  %13226 = getelementptr %struct.TestCase, ptr %13194, i64 -1, i32 2, i32 2
  %13227 = icmp eq ptr %13225, %13226
  br i1 %13227, label %13229, label %13228

13228:                                            ; preds = %13223
  call void @_ZdlPv(ptr noundef %13225) #22
  br label %13229

13229:                                            ; preds = %13228, %13223
  %13230 = load ptr, ptr %13195, align 8, !tbaa !23
  %13231 = getelementptr %struct.TestCase, ptr %13194, i64 -1, i32 0, i32 2
  %13232 = icmp eq ptr %13230, %13231
  br i1 %13232, label %13234, label %13233

13233:                                            ; preds = %13229
  call void @_ZdlPv(ptr noundef %13230) #22
  br label %13234

13234:                                            ; preds = %13229, %13233
  %13235 = icmp eq ptr %13195, %84
  br i1 %13235, label %13236, label %13193

13236:                                            ; preds = %13234, %13190
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %84) #21
  br label %762

13237:                                            ; preds = %12446, %12449
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %84) #21
  store i32 %12344, ptr @dummy447, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %85)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %86)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %87)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %88)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %89)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %90)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %91)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %92)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %93)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %94)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %95)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %96)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %97)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %98)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %99)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %72)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %71) #21
  %13238 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %72, i64 0, i32 2
  store ptr %13238, ptr %72, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %70) #21
  store i64 67, ptr %70, align 8, !tbaa !74
  %13239 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %72, ptr noundef nonnull align 8 dereferenceable(8) %70, i64 noundef 0)
  store ptr %13239, ptr %72, align 8, !tbaa !23
  %13240 = load i64, ptr %70, align 8, !tbaa !74
  store i64 %13240, ptr %13238, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(67) %13239, ptr noundef nonnull align 1 dereferenceable(67) @.str.169, i64 67, i1 false)
  %13241 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %72, i64 0, i32 1
  store i64 %13240, ptr %13241, align 8, !tbaa !10
  %13242 = getelementptr inbounds i8, ptr %13239, i64 %13240
  store i8 0, ptr %13242, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %70) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %71, ptr noundef nonnull %72, i32 noundef 0)
          to label %13243 unwind label %13288

13243:                                            ; preds = %13237
  %13244 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 4, ptr nonnull %71, i64 1)
          to label %13245 unwind label %13290

13245:                                            ; preds = %13243
  %13246 = getelementptr inbounds %struct.TestCase, ptr %71, i64 0, i32 3, i32 0, i32 1
  %13247 = load ptr, ptr %13246, align 8, !tbaa !88
  %13248 = icmp eq ptr %13247, null
  br i1 %13248, label %13273, label %13249

13249:                                            ; preds = %13245
  %13250 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13247, i64 0, i32 1
  %13251 = load atomic i64, ptr %13250 acquire, align 8
  %13252 = icmp eq i64 %13251, 4294967297
  %13253 = trunc i64 %13251 to i32
  br i1 %13252, label %13254, label %13262

13254:                                            ; preds = %13249
  store i32 0, ptr %13250, align 8, !tbaa !90
  %13255 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13247, i64 0, i32 2
  store i32 0, ptr %13255, align 4, !tbaa !92
  %13256 = load ptr, ptr %13247, align 8, !tbaa !58
  %13257 = getelementptr inbounds ptr, ptr %13256, i64 2
  %13258 = load ptr, ptr %13257, align 8
  call void %13258(ptr noundef nonnull align 8 dereferenceable(16) %13247) #21
  %13259 = load ptr, ptr %13247, align 8, !tbaa !58
  %13260 = getelementptr inbounds ptr, ptr %13259, i64 3
  %13261 = load ptr, ptr %13260, align 8
  call void %13261(ptr noundef nonnull align 8 dereferenceable(16) %13247) #21
  br label %13273

13262:                                            ; preds = %13249
  %13263 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %13264 = icmp eq i8 %13263, 0
  br i1 %13264, label %13267, label %13265

13265:                                            ; preds = %13262
  %13266 = add nsw i32 %13253, -1
  store i32 %13266, ptr %13250, align 8, !tbaa !73
  br label %13269

13267:                                            ; preds = %13262
  %13268 = atomicrmw volatile add ptr %13250, i32 -1 acq_rel, align 4
  br label %13269

13269:                                            ; preds = %13267, %13265
  %13270 = phi i32 [ %13253, %13265 ], [ %13268, %13267 ]
  %13271 = icmp eq i32 %13270, 1
  br i1 %13271, label %13272, label %13273, !prof !42

13272:                                            ; preds = %13269
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %13247) #21
  br label %13273

13273:                                            ; preds = %13272, %13269, %13254, %13245
  %13274 = getelementptr inbounds %struct.TestCase, ptr %71, i64 0, i32 2
  %13275 = load ptr, ptr %13274, align 8, !tbaa !23
  %13276 = getelementptr inbounds %struct.TestCase, ptr %71, i64 0, i32 2, i32 2
  %13277 = icmp eq ptr %13275, %13276
  br i1 %13277, label %13279, label %13278

13278:                                            ; preds = %13273
  call void @_ZdlPv(ptr noundef %13275) #22
  br label %13279

13279:                                            ; preds = %13278, %13273
  %13280 = load ptr, ptr %71, align 8, !tbaa !23
  %13281 = getelementptr inbounds %struct.TestCase, ptr %71, i64 0, i32 0, i32 2
  %13282 = icmp eq ptr %13280, %13281
  br i1 %13282, label %13284, label %13283

13283:                                            ; preds = %13279
  call void @_ZdlPv(ptr noundef %13280) #22
  br label %13284

13284:                                            ; preds = %13283, %13279
  %13285 = load ptr, ptr %72, align 8, !tbaa !23
  %13286 = icmp eq ptr %13285, %13238
  br i1 %13286, label %13336, label %13287

13287:                                            ; preds = %13284
  call void @_ZdlPv(ptr noundef %13285) #22
  br label %13336

13288:                                            ; preds = %13237
  %13289 = landingpad { ptr, i32 }
          cleanup
  br label %13330

13290:                                            ; preds = %13243
  %13291 = landingpad { ptr, i32 }
          cleanup
  %13292 = getelementptr inbounds %struct.TestCase, ptr %71, i64 0, i32 3, i32 0, i32 1
  %13293 = load ptr, ptr %13292, align 8, !tbaa !88
  %13294 = icmp eq ptr %13293, null
  br i1 %13294, label %13319, label %13295

13295:                                            ; preds = %13290
  %13296 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13293, i64 0, i32 1
  %13297 = load atomic i64, ptr %13296 acquire, align 8
  %13298 = icmp eq i64 %13297, 4294967297
  %13299 = trunc i64 %13297 to i32
  br i1 %13298, label %13300, label %13308

13300:                                            ; preds = %13295
  store i32 0, ptr %13296, align 8, !tbaa !90
  %13301 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13293, i64 0, i32 2
  store i32 0, ptr %13301, align 4, !tbaa !92
  %13302 = load ptr, ptr %13293, align 8, !tbaa !58
  %13303 = getelementptr inbounds ptr, ptr %13302, i64 2
  %13304 = load ptr, ptr %13303, align 8
  call void %13304(ptr noundef nonnull align 8 dereferenceable(16) %13293) #21
  %13305 = load ptr, ptr %13293, align 8, !tbaa !58
  %13306 = getelementptr inbounds ptr, ptr %13305, i64 3
  %13307 = load ptr, ptr %13306, align 8
  call void %13307(ptr noundef nonnull align 8 dereferenceable(16) %13293) #21
  br label %13319

13308:                                            ; preds = %13295
  %13309 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %13310 = icmp eq i8 %13309, 0
  br i1 %13310, label %13313, label %13311

13311:                                            ; preds = %13308
  %13312 = add nsw i32 %13299, -1
  store i32 %13312, ptr %13296, align 8, !tbaa !73
  br label %13315

13313:                                            ; preds = %13308
  %13314 = atomicrmw volatile add ptr %13296, i32 -1 acq_rel, align 4
  br label %13315

13315:                                            ; preds = %13313, %13311
  %13316 = phi i32 [ %13299, %13311 ], [ %13314, %13313 ]
  %13317 = icmp eq i32 %13316, 1
  br i1 %13317, label %13318, label %13319, !prof !42

13318:                                            ; preds = %13315
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %13293) #21
  br label %13319

13319:                                            ; preds = %13318, %13315, %13300, %13290
  %13320 = getelementptr inbounds %struct.TestCase, ptr %71, i64 0, i32 2
  %13321 = load ptr, ptr %13320, align 8, !tbaa !23
  %13322 = getelementptr inbounds %struct.TestCase, ptr %71, i64 0, i32 2, i32 2
  %13323 = icmp eq ptr %13321, %13322
  br i1 %13323, label %13325, label %13324

13324:                                            ; preds = %13319
  call void @_ZdlPv(ptr noundef %13321) #22
  br label %13325

13325:                                            ; preds = %13324, %13319
  %13326 = load ptr, ptr %71, align 8, !tbaa !23
  %13327 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %71, i64 0, i32 2
  %13328 = icmp eq ptr %13326, %13327
  br i1 %13328, label %13330, label %13329

13329:                                            ; preds = %13325
  call void @_ZdlPv(ptr noundef %13326) #22
  br label %13330

13330:                                            ; preds = %13329, %13325, %13288
  %13331 = phi { ptr, i32 } [ %13289, %13288 ], [ %13291, %13325 ], [ %13291, %13329 ]
  %13332 = load ptr, ptr %72, align 8, !tbaa !23
  %13333 = icmp eq ptr %13332, %13238
  br i1 %13333, label %13335, label %13334

13334:                                            ; preds = %13330
  call void @_ZdlPv(ptr noundef %13332) #22
  br label %13335

13335:                                            ; preds = %13334, %13330
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %71) #21
  br label %762

13336:                                            ; preds = %13284, %13287
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %71) #21
  store i32 %13244, ptr @dummy449, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %72)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %69) #21
  %13337 = getelementptr inbounds i8, ptr %69, i64 8
  store i64 0, ptr %13337, align 8
  %13338 = getelementptr inbounds %"class.std::function", ptr %69, i64 0, i32 1
  %13339 = getelementptr inbounds %"class.std::_Function_base", ptr %69, i64 0, i32 1
  store ptr @_Z29CheckIsIterationInvariantRateRK7Results, ptr %69, align 8, !tbaa !47
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E9_M_invokeERKSt9_Any_dataS2_, ptr %13338, align 8, !tbaa !115
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, ptr %13339, align 8, !tbaa !118
  %13340 = invoke noundef i64 @_Z10AddCheckerPKcRKSt8functionIFvRK7ResultsEE(ptr noundef nonnull @.str.161, ptr noundef nonnull align 8 dereferenceable(32) %69)
          to label %13341 unwind label %13349

13341:                                            ; preds = %13336
  %13342 = load ptr, ptr %13339, align 8, !tbaa !118
  %13343 = icmp eq ptr %13342, null
  br i1 %13343, label %13359, label %13344

13344:                                            ; preds = %13341
  %13345 = invoke noundef zeroext i1 %13342(ptr noundef nonnull align 8 dereferenceable(16) %69, ptr noundef nonnull align 8 dereferenceable(16) %69, i32 noundef 3)
          to label %13359 unwind label %13346

13346:                                            ; preds = %13344
  %13347 = landingpad { ptr, i32 }
          catch ptr null
  %13348 = extractvalue { ptr, i32 } %13347, 0
  call void @__clang_call_terminate(ptr %13348) #24
  unreachable

13349:                                            ; preds = %13336
  %13350 = landingpad { ptr, i32 }
          cleanup
  %13351 = load ptr, ptr %13339, align 8, !tbaa !118
  %13352 = icmp eq ptr %13351, null
  br i1 %13352, label %13358, label %13353

13353:                                            ; preds = %13349
  %13354 = invoke noundef zeroext i1 %13351(ptr noundef nonnull align 8 dereferenceable(16) %69, ptr noundef nonnull align 8 dereferenceable(16) %69, i32 noundef 3)
          to label %13358 unwind label %13355

13355:                                            ; preds = %13353
  %13356 = landingpad { ptr, i32 }
          catch ptr null
  %13357 = extractvalue { ptr, i32 } %13356, 0
  call void @__clang_call_terminate(ptr %13357) #24
  unreachable

13358:                                            ; preds = %13353, %13349
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %69) #21
  br label %762

13359:                                            ; preds = %13341, %13344
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %69) #21
  store i64 %13340, ptr @dummy460, align 8, !tbaa !74
  %13360 = call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #25
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %13360, ptr noundef nonnull @.str.174)
          to label %13363 unwind label %13361

13361:                                            ; preds = %13359
  %13362 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %13360) #22
  br label %762

13363:                                            ; preds = %13359
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %13360, align 8, !tbaa !58
  %13364 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %13360, i64 0, i32 1
  store ptr @_Z25BM_Counters_AvgIterationsRN9benchmark5StateE, ptr %13364, align 8, !tbaa !93
  %13365 = call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %13360)
  store ptr %13365, ptr @_ZL28benchmark_uniq_12_benchmark_, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %68)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %67) #21
  %13366 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %68, i64 0, i32 2
  store ptr %13366, ptr %68, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %66) #21
  store i64 69, ptr %66, align 8, !tbaa !74
  %13367 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %68, ptr noundef nonnull align 8 dereferenceable(8) %66, i64 noundef 0)
  store ptr %13367, ptr %68, align 8, !tbaa !23
  %13368 = load i64, ptr %66, align 8, !tbaa !74
  store i64 %13368, ptr %13366, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(69) %13367, ptr noundef nonnull align 1 dereferenceable(69) @.str.176, i64 69, i1 false)
  %13369 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %68, i64 0, i32 1
  store i64 %13368, ptr %13369, align 8, !tbaa !10
  %13370 = getelementptr inbounds i8, ptr %13367, i64 %13368
  store i8 0, ptr %13370, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %66) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %67, ptr noundef nonnull %68, i32 noundef 0)
          to label %13371 unwind label %13416

13371:                                            ; preds = %13363
  %13372 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 0, ptr nonnull %67, i64 1)
          to label %13373 unwind label %13418

13373:                                            ; preds = %13371
  %13374 = getelementptr inbounds %struct.TestCase, ptr %67, i64 0, i32 3, i32 0, i32 1
  %13375 = load ptr, ptr %13374, align 8, !tbaa !88
  %13376 = icmp eq ptr %13375, null
  br i1 %13376, label %13401, label %13377

13377:                                            ; preds = %13373
  %13378 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13375, i64 0, i32 1
  %13379 = load atomic i64, ptr %13378 acquire, align 8
  %13380 = icmp eq i64 %13379, 4294967297
  %13381 = trunc i64 %13379 to i32
  br i1 %13380, label %13382, label %13390

13382:                                            ; preds = %13377
  store i32 0, ptr %13378, align 8, !tbaa !90
  %13383 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13375, i64 0, i32 2
  store i32 0, ptr %13383, align 4, !tbaa !92
  %13384 = load ptr, ptr %13375, align 8, !tbaa !58
  %13385 = getelementptr inbounds ptr, ptr %13384, i64 2
  %13386 = load ptr, ptr %13385, align 8
  call void %13386(ptr noundef nonnull align 8 dereferenceable(16) %13375) #21
  %13387 = load ptr, ptr %13375, align 8, !tbaa !58
  %13388 = getelementptr inbounds ptr, ptr %13387, i64 3
  %13389 = load ptr, ptr %13388, align 8
  call void %13389(ptr noundef nonnull align 8 dereferenceable(16) %13375) #21
  br label %13401

13390:                                            ; preds = %13377
  %13391 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %13392 = icmp eq i8 %13391, 0
  br i1 %13392, label %13395, label %13393

13393:                                            ; preds = %13390
  %13394 = add nsw i32 %13381, -1
  store i32 %13394, ptr %13378, align 8, !tbaa !73
  br label %13397

13395:                                            ; preds = %13390
  %13396 = atomicrmw volatile add ptr %13378, i32 -1 acq_rel, align 4
  br label %13397

13397:                                            ; preds = %13395, %13393
  %13398 = phi i32 [ %13381, %13393 ], [ %13396, %13395 ]
  %13399 = icmp eq i32 %13398, 1
  br i1 %13399, label %13400, label %13401, !prof !42

13400:                                            ; preds = %13397
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %13375) #21
  br label %13401

13401:                                            ; preds = %13400, %13397, %13382, %13373
  %13402 = getelementptr inbounds %struct.TestCase, ptr %67, i64 0, i32 2
  %13403 = load ptr, ptr %13402, align 8, !tbaa !23
  %13404 = getelementptr inbounds %struct.TestCase, ptr %67, i64 0, i32 2, i32 2
  %13405 = icmp eq ptr %13403, %13404
  br i1 %13405, label %13407, label %13406

13406:                                            ; preds = %13401
  call void @_ZdlPv(ptr noundef %13403) #22
  br label %13407

13407:                                            ; preds = %13406, %13401
  %13408 = load ptr, ptr %67, align 8, !tbaa !23
  %13409 = getelementptr inbounds %struct.TestCase, ptr %67, i64 0, i32 0, i32 2
  %13410 = icmp eq ptr %13408, %13409
  br i1 %13410, label %13412, label %13411

13411:                                            ; preds = %13407
  call void @_ZdlPv(ptr noundef %13408) #22
  br label %13412

13412:                                            ; preds = %13411, %13407
  %13413 = load ptr, ptr %68, align 8, !tbaa !23
  %13414 = icmp eq ptr %13413, %13366
  br i1 %13414, label %13464, label %13415

13415:                                            ; preds = %13412
  call void @_ZdlPv(ptr noundef %13413) #22
  br label %13464

13416:                                            ; preds = %13363
  %13417 = landingpad { ptr, i32 }
          cleanup
  br label %13458

13418:                                            ; preds = %13371
  %13419 = landingpad { ptr, i32 }
          cleanup
  %13420 = getelementptr inbounds %struct.TestCase, ptr %67, i64 0, i32 3, i32 0, i32 1
  %13421 = load ptr, ptr %13420, align 8, !tbaa !88
  %13422 = icmp eq ptr %13421, null
  br i1 %13422, label %13447, label %13423

13423:                                            ; preds = %13418
  %13424 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13421, i64 0, i32 1
  %13425 = load atomic i64, ptr %13424 acquire, align 8
  %13426 = icmp eq i64 %13425, 4294967297
  %13427 = trunc i64 %13425 to i32
  br i1 %13426, label %13428, label %13436

13428:                                            ; preds = %13423
  store i32 0, ptr %13424, align 8, !tbaa !90
  %13429 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13421, i64 0, i32 2
  store i32 0, ptr %13429, align 4, !tbaa !92
  %13430 = load ptr, ptr %13421, align 8, !tbaa !58
  %13431 = getelementptr inbounds ptr, ptr %13430, i64 2
  %13432 = load ptr, ptr %13431, align 8
  call void %13432(ptr noundef nonnull align 8 dereferenceable(16) %13421) #21
  %13433 = load ptr, ptr %13421, align 8, !tbaa !58
  %13434 = getelementptr inbounds ptr, ptr %13433, i64 3
  %13435 = load ptr, ptr %13434, align 8
  call void %13435(ptr noundef nonnull align 8 dereferenceable(16) %13421) #21
  br label %13447

13436:                                            ; preds = %13423
  %13437 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %13438 = icmp eq i8 %13437, 0
  br i1 %13438, label %13441, label %13439

13439:                                            ; preds = %13436
  %13440 = add nsw i32 %13427, -1
  store i32 %13440, ptr %13424, align 8, !tbaa !73
  br label %13443

13441:                                            ; preds = %13436
  %13442 = atomicrmw volatile add ptr %13424, i32 -1 acq_rel, align 4
  br label %13443

13443:                                            ; preds = %13441, %13439
  %13444 = phi i32 [ %13427, %13439 ], [ %13442, %13441 ]
  %13445 = icmp eq i32 %13444, 1
  br i1 %13445, label %13446, label %13447, !prof !42

13446:                                            ; preds = %13443
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %13421) #21
  br label %13447

13447:                                            ; preds = %13446, %13443, %13428, %13418
  %13448 = getelementptr inbounds %struct.TestCase, ptr %67, i64 0, i32 2
  %13449 = load ptr, ptr %13448, align 8, !tbaa !23
  %13450 = getelementptr inbounds %struct.TestCase, ptr %67, i64 0, i32 2, i32 2
  %13451 = icmp eq ptr %13449, %13450
  br i1 %13451, label %13453, label %13452

13452:                                            ; preds = %13447
  call void @_ZdlPv(ptr noundef %13449) #22
  br label %13453

13453:                                            ; preds = %13452, %13447
  %13454 = load ptr, ptr %67, align 8, !tbaa !23
  %13455 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %67, i64 0, i32 2
  %13456 = icmp eq ptr %13454, %13455
  br i1 %13456, label %13458, label %13457

13457:                                            ; preds = %13453
  call void @_ZdlPv(ptr noundef %13454) #22
  br label %13458

13458:                                            ; preds = %13457, %13453, %13416
  %13459 = phi { ptr, i32 } [ %13417, %13416 ], [ %13419, %13453 ], [ %13419, %13457 ]
  %13460 = load ptr, ptr %68, align 8, !tbaa !23
  %13461 = icmp eq ptr %13460, %13366
  br i1 %13461, label %13463, label %13462

13462:                                            ; preds = %13458
  call void @_ZdlPv(ptr noundef %13460) #22
  br label %13463

13463:                                            ; preds = %13462, %13458
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %67) #21
  br label %762

13464:                                            ; preds = %13412, %13415
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %67) #21
  store i32 %13372, ptr @dummy475, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %68)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %51)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %52)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %53)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %54)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %55)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %56)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %57)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %58)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %59)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %60)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %61)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %62)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %63)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %64)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %65)
  call void @llvm.lifetime.start.p0(i64 1320, ptr nonnull %50) #21
  %13465 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %51, i64 0, i32 2
  store ptr %13465, ptr %51, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %49) #21
  store i64 37, ptr %49, align 8, !tbaa !74
  %13466 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %51, ptr noundef nonnull align 8 dereferenceable(8) %49, i64 noundef 0)
  store ptr %13466, ptr %51, align 8, !tbaa !23
  %13467 = load i64, ptr %49, align 8, !tbaa !74
  store i64 %13467, ptr %13465, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(37) %13466, ptr noundef nonnull align 1 dereferenceable(37) @.str.178, i64 37, i1 false)
  %13468 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %51, i64 0, i32 1
  store i64 %13467, ptr %13468, align 8, !tbaa !10
  %13469 = getelementptr inbounds i8, ptr %13466, i64 %13467
  store i8 0, ptr %13469, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %49) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %50, ptr noundef nonnull %51, i32 noundef 0)
          to label %13470 unwind label %13686

13470:                                            ; preds = %13464
  %13471 = getelementptr inbounds %struct.TestCase, ptr %50, i64 1
  %13472 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %52, i64 0, i32 2
  store ptr %13472, ptr %52, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %48) #21
  store i64 20, ptr %48, align 8, !tbaa !74
  %13473 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %52, ptr noundef nonnull align 8 dereferenceable(8) %48, i64 noundef 0)
          to label %13474 unwind label %13688

13474:                                            ; preds = %13470
  store ptr %13473, ptr %52, align 8, !tbaa !23
  %13475 = load i64, ptr %48, align 8, !tbaa !74
  store i64 %13475, ptr %13472, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %13473, ptr noundef nonnull align 1 dereferenceable(20) @.str.179, i64 20, i1 false)
  %13476 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %52, i64 0, i32 1
  store i64 %13475, ptr %13476, align 8, !tbaa !10
  %13477 = load ptr, ptr %52, align 8, !tbaa !23
  %13478 = getelementptr inbounds i8, ptr %13477, i64 %13475
  store i8 0, ptr %13478, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %48) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %13471, ptr noundef nonnull %52, i32 noundef 1)
          to label %13479 unwind label %13690

13479:                                            ; preds = %13474
  %13480 = getelementptr inbounds %struct.TestCase, ptr %50, i64 2
  %13481 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %53, i64 0, i32 2
  store ptr %13481, ptr %53, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %47) #21
  store i64 32, ptr %47, align 8, !tbaa !74
  %13482 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %53, ptr noundef nonnull align 8 dereferenceable(8) %47, i64 noundef 0)
          to label %13483 unwind label %13692

13483:                                            ; preds = %13479
  store ptr %13482, ptr %53, align 8, !tbaa !23
  %13484 = load i64, ptr %47, align 8, !tbaa !74
  store i64 %13484, ptr %13481, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %13482, ptr noundef nonnull align 1 dereferenceable(32) @.str.15, i64 32, i1 false)
  %13485 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %53, i64 0, i32 1
  store i64 %13484, ptr %13485, align 8, !tbaa !10
  %13486 = load ptr, ptr %53, align 8, !tbaa !23
  %13487 = getelementptr inbounds i8, ptr %13486, i64 %13484
  store i8 0, ptr %13487, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %47) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %13480, ptr noundef nonnull %53, i32 noundef 1)
          to label %13488 unwind label %13694

13488:                                            ; preds = %13483
  %13489 = getelementptr inbounds %struct.TestCase, ptr %50, i64 3
  %13490 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %54, i64 0, i32 2
  store ptr %13490, ptr %54, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %46) #21
  store i64 41, ptr %46, align 8, !tbaa !74
  %13491 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %54, ptr noundef nonnull align 8 dereferenceable(8) %46, i64 noundef 0)
          to label %13492 unwind label %13696

13492:                                            ; preds = %13488
  store ptr %13491, ptr %54, align 8, !tbaa !23
  %13493 = load i64, ptr %46, align 8, !tbaa !74
  store i64 %13493, ptr %13490, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(41) %13491, ptr noundef nonnull align 1 dereferenceable(41) @.str.180, i64 41, i1 false)
  %13494 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %54, i64 0, i32 1
  store i64 %13493, ptr %13494, align 8, !tbaa !10
  %13495 = getelementptr inbounds i8, ptr %13491, i64 %13493
  store i8 0, ptr %13495, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %46) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %13489, ptr noundef nonnull %54, i32 noundef 1)
          to label %13496 unwind label %13698

13496:                                            ; preds = %13492
  %13497 = getelementptr inbounds %struct.TestCase, ptr %50, i64 4
  %13498 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %55, i64 0, i32 2
  store ptr %13498, ptr %55, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %45) #21
  store i64 25, ptr %45, align 8, !tbaa !74
  %13499 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %55, ptr noundef nonnull align 8 dereferenceable(8) %45, i64 noundef 0)
          to label %13500 unwind label %13700

13500:                                            ; preds = %13496
  store ptr %13499, ptr %55, align 8, !tbaa !23
  %13501 = load i64, ptr %45, align 8, !tbaa !74
  store i64 %13501, ptr %13498, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(25) %13499, ptr noundef nonnull align 1 dereferenceable(25) @.str.17, i64 25, i1 false)
  %13502 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %55, i64 0, i32 1
  store i64 %13501, ptr %13502, align 8, !tbaa !10
  %13503 = load ptr, ptr %55, align 8, !tbaa !23
  %13504 = getelementptr inbounds i8, ptr %13503, i64 %13501
  store i8 0, ptr %13504, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %45) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %13497, ptr noundef nonnull %55, i32 noundef 1)
          to label %13505 unwind label %13702

13505:                                            ; preds = %13500
  %13506 = getelementptr inbounds %struct.TestCase, ptr %50, i64 5
  %13507 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %56, i64 0, i32 2
  store ptr %13507, ptr %56, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %44) #21
  store i64 18, ptr %44, align 8, !tbaa !74
  %13508 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %56, ptr noundef nonnull align 8 dereferenceable(8) %44, i64 noundef 0)
          to label %13509 unwind label %13704

13509:                                            ; preds = %13505
  store ptr %13508, ptr %56, align 8, !tbaa !23
  %13510 = load i64, ptr %44, align 8, !tbaa !74
  store i64 %13510, ptr %13507, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(18) %13508, ptr noundef nonnull align 1 dereferenceable(18) @.str.18, i64 18, i1 false)
  %13511 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %56, i64 0, i32 1
  store i64 %13510, ptr %13511, align 8, !tbaa !10
  %13512 = load ptr, ptr %56, align 8, !tbaa !23
  %13513 = getelementptr inbounds i8, ptr %13512, i64 %13510
  store i8 0, ptr %13513, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %44) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %13506, ptr noundef nonnull %56, i32 noundef 1)
          to label %13514 unwind label %13706

13514:                                            ; preds = %13509
  %13515 = getelementptr inbounds %struct.TestCase, ptr %50, i64 6
  %13516 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %57, i64 0, i32 2
  store ptr %13516, ptr %57, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %43) #21
  store i64 23, ptr %43, align 8, !tbaa !74
  %13517 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %57, ptr noundef nonnull align 8 dereferenceable(8) %43, i64 noundef 0)
          to label %13518 unwind label %13708

13518:                                            ; preds = %13514
  store ptr %13517, ptr %57, align 8, !tbaa !23
  %13519 = load i64, ptr %43, align 8, !tbaa !74
  store i64 %13519, ptr %13516, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(23) %13517, ptr noundef nonnull align 1 dereferenceable(23) @.str.19, i64 23, i1 false)
  %13520 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %57, i64 0, i32 1
  store i64 %13519, ptr %13520, align 8, !tbaa !10
  %13521 = load ptr, ptr %57, align 8, !tbaa !23
  %13522 = getelementptr inbounds i8, ptr %13521, i64 %13519
  store i8 0, ptr %13522, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %43) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %13515, ptr noundef nonnull %57, i32 noundef 1)
          to label %13523 unwind label %13710

13523:                                            ; preds = %13518
  %13524 = getelementptr inbounds %struct.TestCase, ptr %50, i64 7
  %13525 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %58, i64 0, i32 2
  store ptr %13525, ptr %58, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %13525, ptr noundef nonnull align 1 dereferenceable(14) @.str.20, i64 14, i1 false)
  %13526 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %58, i64 0, i32 1
  store i64 14, ptr %13526, align 8, !tbaa !10
  %13527 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %58, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %13527, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %13524, ptr noundef nonnull %58, i32 noundef 1)
          to label %13528 unwind label %13712

13528:                                            ; preds = %13523
  %13529 = getelementptr inbounds %struct.TestCase, ptr %50, i64 8
  %13530 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %59, i64 0, i32 2
  store ptr %13530, ptr %59, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %42) #21
  store i64 20, ptr %42, align 8, !tbaa !74
  %13531 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %59, ptr noundef nonnull align 8 dereferenceable(8) %42, i64 noundef 0)
          to label %13532 unwind label %13714

13532:                                            ; preds = %13528
  store ptr %13531, ptr %59, align 8, !tbaa !23
  %13533 = load i64, ptr %42, align 8, !tbaa !74
  store i64 %13533, ptr %13530, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %13531, ptr noundef nonnull align 1 dereferenceable(20) @.str.21, i64 20, i1 false)
  %13534 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %59, i64 0, i32 1
  store i64 %13533, ptr %13534, align 8, !tbaa !10
  %13535 = load ptr, ptr %59, align 8, !tbaa !23
  %13536 = getelementptr inbounds i8, ptr %13535, i64 %13533
  store i8 0, ptr %13536, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %42) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %13529, ptr noundef nonnull %59, i32 noundef 1)
          to label %13537 unwind label %13716

13537:                                            ; preds = %13532
  %13538 = getelementptr inbounds %struct.TestCase, ptr %50, i64 9
  %13539 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %60, i64 0, i32 2
  store ptr %13539, ptr %60, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %41) #21
  store i64 21, ptr %41, align 8, !tbaa !74
  %13540 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %60, ptr noundef nonnull align 8 dereferenceable(8) %41, i64 noundef 0)
          to label %13541 unwind label %13718

13541:                                            ; preds = %13537
  store ptr %13540, ptr %60, align 8, !tbaa !23
  %13542 = load i64, ptr %41, align 8, !tbaa !74
  store i64 %13542, ptr %13539, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %13540, ptr noundef nonnull align 1 dereferenceable(21) @.str.22, i64 21, i1 false)
  %13543 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %60, i64 0, i32 1
  store i64 %13542, ptr %13543, align 8, !tbaa !10
  %13544 = load ptr, ptr %60, align 8, !tbaa !23
  %13545 = getelementptr inbounds i8, ptr %13544, i64 %13542
  store i8 0, ptr %13545, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %41) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %13538, ptr noundef nonnull %60, i32 noundef 1)
          to label %13546 unwind label %13720

13546:                                            ; preds = %13541
  %13547 = getelementptr inbounds %struct.TestCase, ptr %50, i64 10
  %13548 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %61, i64 0, i32 2
  store ptr %13548, ptr %61, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %40) #21
  store i64 20, ptr %40, align 8, !tbaa !74
  %13549 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %61, ptr noundef nonnull align 8 dereferenceable(8) %40, i64 noundef 0)
          to label %13550 unwind label %13722

13550:                                            ; preds = %13546
  store ptr %13549, ptr %61, align 8, !tbaa !23
  %13551 = load i64, ptr %40, align 8, !tbaa !74
  store i64 %13551, ptr %13548, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %13549, ptr noundef nonnull align 1 dereferenceable(20) @.str.23, i64 20, i1 false)
  %13552 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %61, i64 0, i32 1
  store i64 %13551, ptr %13552, align 8, !tbaa !10
  %13553 = load ptr, ptr %61, align 8, !tbaa !23
  %13554 = getelementptr inbounds i8, ptr %13553, i64 %13551
  store i8 0, ptr %13554, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %40) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %13547, ptr noundef nonnull %61, i32 noundef 1)
          to label %13555 unwind label %13724

13555:                                            ; preds = %13550
  %13556 = getelementptr inbounds %struct.TestCase, ptr %50, i64 11
  %13557 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %62, i64 0, i32 2
  store ptr %13557, ptr %62, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %39) #21
  store i64 19, ptr %39, align 8, !tbaa !74
  %13558 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %62, ptr noundef nonnull align 8 dereferenceable(8) %39, i64 noundef 0)
          to label %13559 unwind label %13726

13559:                                            ; preds = %13555
  store ptr %13558, ptr %62, align 8, !tbaa !23
  %13560 = load i64, ptr %39, align 8, !tbaa !74
  store i64 %13560, ptr %13557, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %13558, ptr noundef nonnull align 1 dereferenceable(19) @.str.24, i64 19, i1 false)
  %13561 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %62, i64 0, i32 1
  store i64 %13560, ptr %13561, align 8, !tbaa !10
  %13562 = load ptr, ptr %62, align 8, !tbaa !23
  %13563 = getelementptr inbounds i8, ptr %13562, i64 %13560
  store i8 0, ptr %13563, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %39) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %13556, ptr noundef nonnull %62, i32 noundef 1)
          to label %13564 unwind label %13728

13564:                                            ; preds = %13559
  %13565 = getelementptr inbounds %struct.TestCase, ptr %50, i64 12
  %13566 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %63, i64 0, i32 2
  store ptr %13566, ptr %63, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(15) %13566, ptr noundef nonnull align 1 dereferenceable(15) @.str.25, i64 15, i1 false)
  %13567 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %63, i64 0, i32 1
  store i64 15, ptr %13567, align 8, !tbaa !10
  %13568 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %63, i64 0, i32 2, i32 1, i64 7
  store i8 0, ptr %13568, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %13565, ptr noundef nonnull %63, i32 noundef 1)
          to label %13569 unwind label %13730

13569:                                            ; preds = %13564
  %13570 = getelementptr inbounds %struct.TestCase, ptr %50, i64 13
  %13571 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %64, i64 0, i32 2
  store ptr %13571, ptr %64, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %13571, ptr noundef nonnull align 1 dereferenceable(14) @.str.26, i64 14, i1 false)
  %13572 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %64, i64 0, i32 1
  store i64 14, ptr %13572, align 8, !tbaa !10
  %13573 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %64, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %13573, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %13570, ptr noundef nonnull %64, i32 noundef 1)
          to label %13574 unwind label %13732

13574:                                            ; preds = %13569
  %13575 = getelementptr inbounds %struct.TestCase, ptr %50, i64 14
  %13576 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %65, i64 0, i32 2
  store ptr %13576, ptr %65, align 8, !tbaa !5
  store i8 125, ptr %13576, align 8, !tbaa !13
  %13577 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %65, i64 0, i32 1
  store i64 1, ptr %13577, align 8, !tbaa !10
  %13578 = getelementptr inbounds i8, ptr %65, i64 17
  store i8 0, ptr %13578, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %13575, ptr noundef nonnull %65, i32 noundef 1)
          to label %13579 unwind label %13734

13579:                                            ; preds = %13574
  %13580 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 2, ptr nonnull %50, i64 15)
          to label %13581 unwind label %13736

13581:                                            ; preds = %13579
  %13582 = getelementptr inbounds %struct.TestCase, ptr %50, i64 15
  br label %13583

13583:                                            ; preds = %13624, %13581
  %13584 = phi ptr [ %13582, %13581 ], [ %13585, %13624 ]
  %13585 = getelementptr inbounds %struct.TestCase, ptr %13584, i64 -1
  %13586 = getelementptr %struct.TestCase, ptr %13584, i64 -1, i32 3, i32 0, i32 1
  %13587 = load ptr, ptr %13586, align 8, !tbaa !88
  %13588 = icmp eq ptr %13587, null
  br i1 %13588, label %13613, label %13589

13589:                                            ; preds = %13583
  %13590 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13587, i64 0, i32 1
  %13591 = load atomic i64, ptr %13590 acquire, align 8
  %13592 = icmp eq i64 %13591, 4294967297
  %13593 = trunc i64 %13591 to i32
  br i1 %13592, label %13594, label %13602

13594:                                            ; preds = %13589
  store i32 0, ptr %13590, align 8, !tbaa !90
  %13595 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13587, i64 0, i32 2
  store i32 0, ptr %13595, align 4, !tbaa !92
  %13596 = load ptr, ptr %13587, align 8, !tbaa !58
  %13597 = getelementptr inbounds ptr, ptr %13596, i64 2
  %13598 = load ptr, ptr %13597, align 8
  call void %13598(ptr noundef nonnull align 8 dereferenceable(16) %13587) #21
  %13599 = load ptr, ptr %13587, align 8, !tbaa !58
  %13600 = getelementptr inbounds ptr, ptr %13599, i64 3
  %13601 = load ptr, ptr %13600, align 8
  call void %13601(ptr noundef nonnull align 8 dereferenceable(16) %13587) #21
  br label %13613

13602:                                            ; preds = %13589
  %13603 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %13604 = icmp eq i8 %13603, 0
  br i1 %13604, label %13607, label %13605

13605:                                            ; preds = %13602
  %13606 = add nsw i32 %13593, -1
  store i32 %13606, ptr %13590, align 8, !tbaa !73
  br label %13609

13607:                                            ; preds = %13602
  %13608 = atomicrmw volatile add ptr %13590, i32 -1 acq_rel, align 4
  br label %13609

13609:                                            ; preds = %13607, %13605
  %13610 = phi i32 [ %13593, %13605 ], [ %13608, %13607 ]
  %13611 = icmp eq i32 %13610, 1
  br i1 %13611, label %13612, label %13613, !prof !42

13612:                                            ; preds = %13609
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %13587) #21
  br label %13613

13613:                                            ; preds = %13612, %13609, %13594, %13583
  %13614 = getelementptr %struct.TestCase, ptr %13584, i64 -1, i32 2
  %13615 = load ptr, ptr %13614, align 8, !tbaa !23
  %13616 = getelementptr %struct.TestCase, ptr %13584, i64 -1, i32 2, i32 2
  %13617 = icmp eq ptr %13615, %13616
  br i1 %13617, label %13619, label %13618

13618:                                            ; preds = %13613
  call void @_ZdlPv(ptr noundef %13615) #22
  br label %13619

13619:                                            ; preds = %13618, %13613
  %13620 = load ptr, ptr %13585, align 8, !tbaa !23
  %13621 = getelementptr %struct.TestCase, ptr %13584, i64 -1, i32 0, i32 2
  %13622 = icmp eq ptr %13620, %13621
  br i1 %13622, label %13624, label %13623

13623:                                            ; preds = %13619
  call void @_ZdlPv(ptr noundef %13620) #22
  br label %13624

13624:                                            ; preds = %13623, %13619
  %13625 = icmp eq ptr %13585, %50
  br i1 %13625, label %13626, label %13583

13626:                                            ; preds = %13624
  %13627 = load ptr, ptr %65, align 8, !tbaa !23
  %13628 = icmp eq ptr %13627, %13576
  br i1 %13628, label %13630, label %13629

13629:                                            ; preds = %13626
  call void @_ZdlPv(ptr noundef %13627) #22
  br label %13630

13630:                                            ; preds = %13629, %13626
  %13631 = load ptr, ptr %64, align 8, !tbaa !23
  %13632 = icmp eq ptr %13631, %13571
  br i1 %13632, label %13634, label %13633

13633:                                            ; preds = %13630
  call void @_ZdlPv(ptr noundef %13631) #22
  br label %13634

13634:                                            ; preds = %13633, %13630
  %13635 = load ptr, ptr %63, align 8, !tbaa !23
  %13636 = icmp eq ptr %13635, %13566
  br i1 %13636, label %13638, label %13637

13637:                                            ; preds = %13634
  call void @_ZdlPv(ptr noundef %13635) #22
  br label %13638

13638:                                            ; preds = %13637, %13634
  %13639 = load ptr, ptr %62, align 8, !tbaa !23
  %13640 = icmp eq ptr %13639, %13557
  br i1 %13640, label %13642, label %13641

13641:                                            ; preds = %13638
  call void @_ZdlPv(ptr noundef %13639) #22
  br label %13642

13642:                                            ; preds = %13641, %13638
  %13643 = load ptr, ptr %61, align 8, !tbaa !23
  %13644 = icmp eq ptr %13643, %13548
  br i1 %13644, label %13646, label %13645

13645:                                            ; preds = %13642
  call void @_ZdlPv(ptr noundef %13643) #22
  br label %13646

13646:                                            ; preds = %13645, %13642
  %13647 = load ptr, ptr %60, align 8, !tbaa !23
  %13648 = icmp eq ptr %13647, %13539
  br i1 %13648, label %13650, label %13649

13649:                                            ; preds = %13646
  call void @_ZdlPv(ptr noundef %13647) #22
  br label %13650

13650:                                            ; preds = %13649, %13646
  %13651 = load ptr, ptr %59, align 8, !tbaa !23
  %13652 = icmp eq ptr %13651, %13530
  br i1 %13652, label %13654, label %13653

13653:                                            ; preds = %13650
  call void @_ZdlPv(ptr noundef %13651) #22
  br label %13654

13654:                                            ; preds = %13653, %13650
  %13655 = load ptr, ptr %58, align 8, !tbaa !23
  %13656 = icmp eq ptr %13655, %13525
  br i1 %13656, label %13658, label %13657

13657:                                            ; preds = %13654
  call void @_ZdlPv(ptr noundef %13655) #22
  br label %13658

13658:                                            ; preds = %13657, %13654
  %13659 = load ptr, ptr %57, align 8, !tbaa !23
  %13660 = icmp eq ptr %13659, %13516
  br i1 %13660, label %13662, label %13661

13661:                                            ; preds = %13658
  call void @_ZdlPv(ptr noundef %13659) #22
  br label %13662

13662:                                            ; preds = %13661, %13658
  %13663 = load ptr, ptr %56, align 8, !tbaa !23
  %13664 = icmp eq ptr %13663, %13507
  br i1 %13664, label %13666, label %13665

13665:                                            ; preds = %13662
  call void @_ZdlPv(ptr noundef %13663) #22
  br label %13666

13666:                                            ; preds = %13665, %13662
  %13667 = load ptr, ptr %55, align 8, !tbaa !23
  %13668 = icmp eq ptr %13667, %13498
  br i1 %13668, label %13670, label %13669

13669:                                            ; preds = %13666
  call void @_ZdlPv(ptr noundef %13667) #22
  br label %13670

13670:                                            ; preds = %13669, %13666
  %13671 = load ptr, ptr %54, align 8, !tbaa !23
  %13672 = icmp eq ptr %13671, %13490
  br i1 %13672, label %13674, label %13673

13673:                                            ; preds = %13670
  call void @_ZdlPv(ptr noundef %13671) #22
  br label %13674

13674:                                            ; preds = %13673, %13670
  %13675 = load ptr, ptr %53, align 8, !tbaa !23
  %13676 = icmp eq ptr %13675, %13481
  br i1 %13676, label %13678, label %13677

13677:                                            ; preds = %13674
  call void @_ZdlPv(ptr noundef %13675) #22
  br label %13678

13678:                                            ; preds = %13677, %13674
  %13679 = load ptr, ptr %52, align 8, !tbaa !23
  %13680 = icmp eq ptr %13679, %13472
  br i1 %13680, label %13682, label %13681

13681:                                            ; preds = %13678
  call void @_ZdlPv(ptr noundef %13679) #22
  br label %13682

13682:                                            ; preds = %13681, %13678
  %13683 = load ptr, ptr %51, align 8, !tbaa !23
  %13684 = icmp eq ptr %13683, %13465
  br i1 %13684, label %14473, label %13685

13685:                                            ; preds = %13682
  call void @_ZdlPv(ptr noundef %13683) #22
  br label %14473

13686:                                            ; preds = %13464
  %13687 = landingpad { ptr, i32 }
          cleanup
  br label %14419

13688:                                            ; preds = %13470
  %13689 = landingpad { ptr, i32 }
          cleanup
  br label %14419

13690:                                            ; preds = %13474
  %13691 = landingpad { ptr, i32 }
          cleanup
  br label %14412

13692:                                            ; preds = %13479
  %13693 = landingpad { ptr, i32 }
          cleanup
  br label %14412

13694:                                            ; preds = %13483
  %13695 = landingpad { ptr, i32 }
          cleanup
  br label %14405

13696:                                            ; preds = %13488
  %13697 = landingpad { ptr, i32 }
          cleanup
  br label %14405

13698:                                            ; preds = %13492
  %13699 = landingpad { ptr, i32 }
          cleanup
  br label %14398

13700:                                            ; preds = %13496
  %13701 = landingpad { ptr, i32 }
          cleanup
  br label %14398

13702:                                            ; preds = %13500
  %13703 = landingpad { ptr, i32 }
          cleanup
  br label %14391

13704:                                            ; preds = %13505
  %13705 = landingpad { ptr, i32 }
          cleanup
  br label %14391

13706:                                            ; preds = %13509
  %13707 = landingpad { ptr, i32 }
          cleanup
  br label %14384

13708:                                            ; preds = %13514
  %13709 = landingpad { ptr, i32 }
          cleanup
  br label %14384

13710:                                            ; preds = %13518
  %13711 = landingpad { ptr, i32 }
          cleanup
  br label %14377

13712:                                            ; preds = %13523
  %13713 = landingpad { ptr, i32 }
          cleanup
  br label %14370

13714:                                            ; preds = %13528
  %13715 = landingpad { ptr, i32 }
          cleanup
  br label %14370

13716:                                            ; preds = %13532
  %13717 = landingpad { ptr, i32 }
          cleanup
  br label %14363

13718:                                            ; preds = %13537
  %13719 = landingpad { ptr, i32 }
          cleanup
  br label %14363

13720:                                            ; preds = %13541
  %13721 = landingpad { ptr, i32 }
          cleanup
  br label %14356

13722:                                            ; preds = %13546
  %13723 = landingpad { ptr, i32 }
          cleanup
  br label %14356

13724:                                            ; preds = %13550
  %13725 = landingpad { ptr, i32 }
          cleanup
  br label %14349

13726:                                            ; preds = %13555
  %13727 = landingpad { ptr, i32 }
          cleanup
  br label %14349

13728:                                            ; preds = %13559
  %13729 = landingpad { ptr, i32 }
          cleanup
  br label %14342

13730:                                            ; preds = %13564
  %13731 = landingpad { ptr, i32 }
          cleanup
  br label %14335

13732:                                            ; preds = %13569
  %13733 = landingpad { ptr, i32 }
          cleanup
  br label %14328

13734:                                            ; preds = %13574
  %13735 = landingpad { ptr, i32 }
          cleanup
  br label %14322

13736:                                            ; preds = %13579
  %13737 = landingpad { ptr, i32 }
          cleanup
  %13738 = getelementptr inbounds %struct.TestCase, ptr %50, i64 14, i32 3, i32 0, i32 1
  %13739 = load ptr, ptr %13738, align 8, !tbaa !88
  %13740 = icmp eq ptr %13739, null
  br i1 %13740, label %13765, label %13741

13741:                                            ; preds = %13736
  %13742 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13739, i64 0, i32 1
  %13743 = load atomic i64, ptr %13742 acquire, align 8
  %13744 = icmp eq i64 %13743, 4294967297
  %13745 = trunc i64 %13743 to i32
  br i1 %13744, label %13746, label %13754

13746:                                            ; preds = %13741
  store i32 0, ptr %13742, align 8, !tbaa !90
  %13747 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13739, i64 0, i32 2
  store i32 0, ptr %13747, align 4, !tbaa !92
  %13748 = load ptr, ptr %13739, align 8, !tbaa !58
  %13749 = getelementptr inbounds ptr, ptr %13748, i64 2
  %13750 = load ptr, ptr %13749, align 8
  call void %13750(ptr noundef nonnull align 8 dereferenceable(16) %13739) #21
  %13751 = load ptr, ptr %13739, align 8, !tbaa !58
  %13752 = getelementptr inbounds ptr, ptr %13751, i64 3
  %13753 = load ptr, ptr %13752, align 8
  call void %13753(ptr noundef nonnull align 8 dereferenceable(16) %13739) #21
  br label %13765

13754:                                            ; preds = %13741
  %13755 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %13756 = icmp eq i8 %13755, 0
  br i1 %13756, label %13759, label %13757

13757:                                            ; preds = %13754
  %13758 = add nsw i32 %13745, -1
  store i32 %13758, ptr %13742, align 8, !tbaa !73
  br label %13761

13759:                                            ; preds = %13754
  %13760 = atomicrmw volatile add ptr %13742, i32 -1 acq_rel, align 4
  br label %13761

13761:                                            ; preds = %13759, %13757
  %13762 = phi i32 [ %13745, %13757 ], [ %13760, %13759 ]
  %13763 = icmp eq i32 %13762, 1
  br i1 %13763, label %13764, label %13765, !prof !42

13764:                                            ; preds = %13761
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %13739) #21
  br label %13765

13765:                                            ; preds = %13764, %13761, %13746, %13736
  %13766 = getelementptr inbounds %struct.TestCase, ptr %50, i64 14, i32 2
  %13767 = load ptr, ptr %13766, align 8, !tbaa !23
  %13768 = getelementptr inbounds %struct.TestCase, ptr %50, i64 14, i32 2, i32 2
  %13769 = icmp eq ptr %13767, %13768
  br i1 %13769, label %13771, label %13770

13770:                                            ; preds = %13765
  call void @_ZdlPv(ptr noundef %13767) #22
  br label %13771

13771:                                            ; preds = %13770, %13765
  %13772 = load ptr, ptr %13575, align 8, !tbaa !23
  %13773 = getelementptr inbounds %struct.TestCase, ptr %50, i64 14, i32 0, i32 2
  %13774 = icmp eq ptr %13772, %13773
  br i1 %13774, label %13776, label %13775

13775:                                            ; preds = %13771
  call void @_ZdlPv(ptr noundef %13772) #22
  br label %13776

13776:                                            ; preds = %13771, %13775
  %13777 = getelementptr inbounds %struct.TestCase, ptr %50, i64 13, i32 3, i32 0, i32 1
  %13778 = load ptr, ptr %13777, align 8, !tbaa !88
  %13779 = icmp eq ptr %13778, null
  br i1 %13779, label %13804, label %13780

13780:                                            ; preds = %13776
  %13781 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13778, i64 0, i32 1
  %13782 = load atomic i64, ptr %13781 acquire, align 8
  %13783 = icmp eq i64 %13782, 4294967297
  %13784 = trunc i64 %13782 to i32
  br i1 %13783, label %13785, label %13793

13785:                                            ; preds = %13780
  store i32 0, ptr %13781, align 8, !tbaa !90
  %13786 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13778, i64 0, i32 2
  store i32 0, ptr %13786, align 4, !tbaa !92
  %13787 = load ptr, ptr %13778, align 8, !tbaa !58
  %13788 = getelementptr inbounds ptr, ptr %13787, i64 2
  %13789 = load ptr, ptr %13788, align 8
  call void %13789(ptr noundef nonnull align 8 dereferenceable(16) %13778) #21
  %13790 = load ptr, ptr %13778, align 8, !tbaa !58
  %13791 = getelementptr inbounds ptr, ptr %13790, i64 3
  %13792 = load ptr, ptr %13791, align 8
  call void %13792(ptr noundef nonnull align 8 dereferenceable(16) %13778) #21
  br label %13804

13793:                                            ; preds = %13780
  %13794 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %13795 = icmp eq i8 %13794, 0
  br i1 %13795, label %13798, label %13796

13796:                                            ; preds = %13793
  %13797 = add nsw i32 %13784, -1
  store i32 %13797, ptr %13781, align 8, !tbaa !73
  br label %13800

13798:                                            ; preds = %13793
  %13799 = atomicrmw volatile add ptr %13781, i32 -1 acq_rel, align 4
  br label %13800

13800:                                            ; preds = %13798, %13796
  %13801 = phi i32 [ %13784, %13796 ], [ %13799, %13798 ]
  %13802 = icmp eq i32 %13801, 1
  br i1 %13802, label %13803, label %13804, !prof !42

13803:                                            ; preds = %13800
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %13778) #21
  br label %13804

13804:                                            ; preds = %13803, %13800, %13785, %13776
  %13805 = getelementptr inbounds %struct.TestCase, ptr %50, i64 13, i32 2
  %13806 = load ptr, ptr %13805, align 8, !tbaa !23
  %13807 = getelementptr inbounds %struct.TestCase, ptr %50, i64 13, i32 2, i32 2
  %13808 = icmp eq ptr %13806, %13807
  br i1 %13808, label %13810, label %13809

13809:                                            ; preds = %13804
  call void @_ZdlPv(ptr noundef %13806) #22
  br label %13810

13810:                                            ; preds = %13809, %13804
  %13811 = load ptr, ptr %13570, align 8, !tbaa !23
  %13812 = getelementptr inbounds %struct.TestCase, ptr %50, i64 13, i32 0, i32 2
  %13813 = icmp eq ptr %13811, %13812
  br i1 %13813, label %13815, label %13814

13814:                                            ; preds = %13810
  call void @_ZdlPv(ptr noundef %13811) #22
  br label %13815

13815:                                            ; preds = %13810, %13814
  %13816 = getelementptr inbounds %struct.TestCase, ptr %50, i64 12, i32 3, i32 0, i32 1
  %13817 = load ptr, ptr %13816, align 8, !tbaa !88
  %13818 = icmp eq ptr %13817, null
  br i1 %13818, label %13843, label %13819

13819:                                            ; preds = %13815
  %13820 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13817, i64 0, i32 1
  %13821 = load atomic i64, ptr %13820 acquire, align 8
  %13822 = icmp eq i64 %13821, 4294967297
  %13823 = trunc i64 %13821 to i32
  br i1 %13822, label %13824, label %13832

13824:                                            ; preds = %13819
  store i32 0, ptr %13820, align 8, !tbaa !90
  %13825 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13817, i64 0, i32 2
  store i32 0, ptr %13825, align 4, !tbaa !92
  %13826 = load ptr, ptr %13817, align 8, !tbaa !58
  %13827 = getelementptr inbounds ptr, ptr %13826, i64 2
  %13828 = load ptr, ptr %13827, align 8
  call void %13828(ptr noundef nonnull align 8 dereferenceable(16) %13817) #21
  %13829 = load ptr, ptr %13817, align 8, !tbaa !58
  %13830 = getelementptr inbounds ptr, ptr %13829, i64 3
  %13831 = load ptr, ptr %13830, align 8
  call void %13831(ptr noundef nonnull align 8 dereferenceable(16) %13817) #21
  br label %13843

13832:                                            ; preds = %13819
  %13833 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %13834 = icmp eq i8 %13833, 0
  br i1 %13834, label %13837, label %13835

13835:                                            ; preds = %13832
  %13836 = add nsw i32 %13823, -1
  store i32 %13836, ptr %13820, align 8, !tbaa !73
  br label %13839

13837:                                            ; preds = %13832
  %13838 = atomicrmw volatile add ptr %13820, i32 -1 acq_rel, align 4
  br label %13839

13839:                                            ; preds = %13837, %13835
  %13840 = phi i32 [ %13823, %13835 ], [ %13838, %13837 ]
  %13841 = icmp eq i32 %13840, 1
  br i1 %13841, label %13842, label %13843, !prof !42

13842:                                            ; preds = %13839
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %13817) #21
  br label %13843

13843:                                            ; preds = %13842, %13839, %13824, %13815
  %13844 = getelementptr inbounds %struct.TestCase, ptr %50, i64 12, i32 2
  %13845 = load ptr, ptr %13844, align 8, !tbaa !23
  %13846 = getelementptr inbounds %struct.TestCase, ptr %50, i64 12, i32 2, i32 2
  %13847 = icmp eq ptr %13845, %13846
  br i1 %13847, label %13849, label %13848

13848:                                            ; preds = %13843
  call void @_ZdlPv(ptr noundef %13845) #22
  br label %13849

13849:                                            ; preds = %13848, %13843
  %13850 = load ptr, ptr %13565, align 8, !tbaa !23
  %13851 = getelementptr inbounds %struct.TestCase, ptr %50, i64 12, i32 0, i32 2
  %13852 = icmp eq ptr %13850, %13851
  br i1 %13852, label %13854, label %13853

13853:                                            ; preds = %13849
  call void @_ZdlPv(ptr noundef %13850) #22
  br label %13854

13854:                                            ; preds = %13849, %13853
  %13855 = getelementptr inbounds %struct.TestCase, ptr %50, i64 11, i32 3, i32 0, i32 1
  %13856 = load ptr, ptr %13855, align 8, !tbaa !88
  %13857 = icmp eq ptr %13856, null
  br i1 %13857, label %13882, label %13858

13858:                                            ; preds = %13854
  %13859 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13856, i64 0, i32 1
  %13860 = load atomic i64, ptr %13859 acquire, align 8
  %13861 = icmp eq i64 %13860, 4294967297
  %13862 = trunc i64 %13860 to i32
  br i1 %13861, label %13863, label %13871

13863:                                            ; preds = %13858
  store i32 0, ptr %13859, align 8, !tbaa !90
  %13864 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13856, i64 0, i32 2
  store i32 0, ptr %13864, align 4, !tbaa !92
  %13865 = load ptr, ptr %13856, align 8, !tbaa !58
  %13866 = getelementptr inbounds ptr, ptr %13865, i64 2
  %13867 = load ptr, ptr %13866, align 8
  call void %13867(ptr noundef nonnull align 8 dereferenceable(16) %13856) #21
  %13868 = load ptr, ptr %13856, align 8, !tbaa !58
  %13869 = getelementptr inbounds ptr, ptr %13868, i64 3
  %13870 = load ptr, ptr %13869, align 8
  call void %13870(ptr noundef nonnull align 8 dereferenceable(16) %13856) #21
  br label %13882

13871:                                            ; preds = %13858
  %13872 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %13873 = icmp eq i8 %13872, 0
  br i1 %13873, label %13876, label %13874

13874:                                            ; preds = %13871
  %13875 = add nsw i32 %13862, -1
  store i32 %13875, ptr %13859, align 8, !tbaa !73
  br label %13878

13876:                                            ; preds = %13871
  %13877 = atomicrmw volatile add ptr %13859, i32 -1 acq_rel, align 4
  br label %13878

13878:                                            ; preds = %13876, %13874
  %13879 = phi i32 [ %13862, %13874 ], [ %13877, %13876 ]
  %13880 = icmp eq i32 %13879, 1
  br i1 %13880, label %13881, label %13882, !prof !42

13881:                                            ; preds = %13878
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %13856) #21
  br label %13882

13882:                                            ; preds = %13881, %13878, %13863, %13854
  %13883 = getelementptr inbounds %struct.TestCase, ptr %50, i64 11, i32 2
  %13884 = load ptr, ptr %13883, align 8, !tbaa !23
  %13885 = getelementptr inbounds %struct.TestCase, ptr %50, i64 11, i32 2, i32 2
  %13886 = icmp eq ptr %13884, %13885
  br i1 %13886, label %13888, label %13887

13887:                                            ; preds = %13882
  call void @_ZdlPv(ptr noundef %13884) #22
  br label %13888

13888:                                            ; preds = %13887, %13882
  %13889 = load ptr, ptr %13556, align 8, !tbaa !23
  %13890 = getelementptr inbounds %struct.TestCase, ptr %50, i64 11, i32 0, i32 2
  %13891 = icmp eq ptr %13889, %13890
  br i1 %13891, label %13893, label %13892

13892:                                            ; preds = %13888
  call void @_ZdlPv(ptr noundef %13889) #22
  br label %13893

13893:                                            ; preds = %13888, %13892
  %13894 = getelementptr inbounds %struct.TestCase, ptr %50, i64 10, i32 3, i32 0, i32 1
  %13895 = load ptr, ptr %13894, align 8, !tbaa !88
  %13896 = icmp eq ptr %13895, null
  br i1 %13896, label %13921, label %13897

13897:                                            ; preds = %13893
  %13898 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13895, i64 0, i32 1
  %13899 = load atomic i64, ptr %13898 acquire, align 8
  %13900 = icmp eq i64 %13899, 4294967297
  %13901 = trunc i64 %13899 to i32
  br i1 %13900, label %13902, label %13910

13902:                                            ; preds = %13897
  store i32 0, ptr %13898, align 8, !tbaa !90
  %13903 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13895, i64 0, i32 2
  store i32 0, ptr %13903, align 4, !tbaa !92
  %13904 = load ptr, ptr %13895, align 8, !tbaa !58
  %13905 = getelementptr inbounds ptr, ptr %13904, i64 2
  %13906 = load ptr, ptr %13905, align 8
  call void %13906(ptr noundef nonnull align 8 dereferenceable(16) %13895) #21
  %13907 = load ptr, ptr %13895, align 8, !tbaa !58
  %13908 = getelementptr inbounds ptr, ptr %13907, i64 3
  %13909 = load ptr, ptr %13908, align 8
  call void %13909(ptr noundef nonnull align 8 dereferenceable(16) %13895) #21
  br label %13921

13910:                                            ; preds = %13897
  %13911 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %13912 = icmp eq i8 %13911, 0
  br i1 %13912, label %13915, label %13913

13913:                                            ; preds = %13910
  %13914 = add nsw i32 %13901, -1
  store i32 %13914, ptr %13898, align 8, !tbaa !73
  br label %13917

13915:                                            ; preds = %13910
  %13916 = atomicrmw volatile add ptr %13898, i32 -1 acq_rel, align 4
  br label %13917

13917:                                            ; preds = %13915, %13913
  %13918 = phi i32 [ %13901, %13913 ], [ %13916, %13915 ]
  %13919 = icmp eq i32 %13918, 1
  br i1 %13919, label %13920, label %13921, !prof !42

13920:                                            ; preds = %13917
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %13895) #21
  br label %13921

13921:                                            ; preds = %13920, %13917, %13902, %13893
  %13922 = getelementptr inbounds %struct.TestCase, ptr %50, i64 10, i32 2
  %13923 = load ptr, ptr %13922, align 8, !tbaa !23
  %13924 = getelementptr inbounds %struct.TestCase, ptr %50, i64 10, i32 2, i32 2
  %13925 = icmp eq ptr %13923, %13924
  br i1 %13925, label %13927, label %13926

13926:                                            ; preds = %13921
  call void @_ZdlPv(ptr noundef %13923) #22
  br label %13927

13927:                                            ; preds = %13926, %13921
  %13928 = load ptr, ptr %13547, align 8, !tbaa !23
  %13929 = getelementptr inbounds %struct.TestCase, ptr %50, i64 10, i32 0, i32 2
  %13930 = icmp eq ptr %13928, %13929
  br i1 %13930, label %13932, label %13931

13931:                                            ; preds = %13927
  call void @_ZdlPv(ptr noundef %13928) #22
  br label %13932

13932:                                            ; preds = %13927, %13931
  %13933 = getelementptr inbounds %struct.TestCase, ptr %50, i64 9, i32 3, i32 0, i32 1
  %13934 = load ptr, ptr %13933, align 8, !tbaa !88
  %13935 = icmp eq ptr %13934, null
  br i1 %13935, label %13960, label %13936

13936:                                            ; preds = %13932
  %13937 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13934, i64 0, i32 1
  %13938 = load atomic i64, ptr %13937 acquire, align 8
  %13939 = icmp eq i64 %13938, 4294967297
  %13940 = trunc i64 %13938 to i32
  br i1 %13939, label %13941, label %13949

13941:                                            ; preds = %13936
  store i32 0, ptr %13937, align 8, !tbaa !90
  %13942 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13934, i64 0, i32 2
  store i32 0, ptr %13942, align 4, !tbaa !92
  %13943 = load ptr, ptr %13934, align 8, !tbaa !58
  %13944 = getelementptr inbounds ptr, ptr %13943, i64 2
  %13945 = load ptr, ptr %13944, align 8
  call void %13945(ptr noundef nonnull align 8 dereferenceable(16) %13934) #21
  %13946 = load ptr, ptr %13934, align 8, !tbaa !58
  %13947 = getelementptr inbounds ptr, ptr %13946, i64 3
  %13948 = load ptr, ptr %13947, align 8
  call void %13948(ptr noundef nonnull align 8 dereferenceable(16) %13934) #21
  br label %13960

13949:                                            ; preds = %13936
  %13950 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %13951 = icmp eq i8 %13950, 0
  br i1 %13951, label %13954, label %13952

13952:                                            ; preds = %13949
  %13953 = add nsw i32 %13940, -1
  store i32 %13953, ptr %13937, align 8, !tbaa !73
  br label %13956

13954:                                            ; preds = %13949
  %13955 = atomicrmw volatile add ptr %13937, i32 -1 acq_rel, align 4
  br label %13956

13956:                                            ; preds = %13954, %13952
  %13957 = phi i32 [ %13940, %13952 ], [ %13955, %13954 ]
  %13958 = icmp eq i32 %13957, 1
  br i1 %13958, label %13959, label %13960, !prof !42

13959:                                            ; preds = %13956
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %13934) #21
  br label %13960

13960:                                            ; preds = %13959, %13956, %13941, %13932
  %13961 = getelementptr inbounds %struct.TestCase, ptr %50, i64 9, i32 2
  %13962 = load ptr, ptr %13961, align 8, !tbaa !23
  %13963 = getelementptr inbounds %struct.TestCase, ptr %50, i64 9, i32 2, i32 2
  %13964 = icmp eq ptr %13962, %13963
  br i1 %13964, label %13966, label %13965

13965:                                            ; preds = %13960
  call void @_ZdlPv(ptr noundef %13962) #22
  br label %13966

13966:                                            ; preds = %13965, %13960
  %13967 = load ptr, ptr %13538, align 8, !tbaa !23
  %13968 = getelementptr inbounds %struct.TestCase, ptr %50, i64 9, i32 0, i32 2
  %13969 = icmp eq ptr %13967, %13968
  br i1 %13969, label %13971, label %13970

13970:                                            ; preds = %13966
  call void @_ZdlPv(ptr noundef %13967) #22
  br label %13971

13971:                                            ; preds = %13966, %13970
  %13972 = getelementptr inbounds %struct.TestCase, ptr %50, i64 8, i32 3, i32 0, i32 1
  %13973 = load ptr, ptr %13972, align 8, !tbaa !88
  %13974 = icmp eq ptr %13973, null
  br i1 %13974, label %13999, label %13975

13975:                                            ; preds = %13971
  %13976 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13973, i64 0, i32 1
  %13977 = load atomic i64, ptr %13976 acquire, align 8
  %13978 = icmp eq i64 %13977, 4294967297
  %13979 = trunc i64 %13977 to i32
  br i1 %13978, label %13980, label %13988

13980:                                            ; preds = %13975
  store i32 0, ptr %13976, align 8, !tbaa !90
  %13981 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %13973, i64 0, i32 2
  store i32 0, ptr %13981, align 4, !tbaa !92
  %13982 = load ptr, ptr %13973, align 8, !tbaa !58
  %13983 = getelementptr inbounds ptr, ptr %13982, i64 2
  %13984 = load ptr, ptr %13983, align 8
  call void %13984(ptr noundef nonnull align 8 dereferenceable(16) %13973) #21
  %13985 = load ptr, ptr %13973, align 8, !tbaa !58
  %13986 = getelementptr inbounds ptr, ptr %13985, i64 3
  %13987 = load ptr, ptr %13986, align 8
  call void %13987(ptr noundef nonnull align 8 dereferenceable(16) %13973) #21
  br label %13999

13988:                                            ; preds = %13975
  %13989 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %13990 = icmp eq i8 %13989, 0
  br i1 %13990, label %13993, label %13991

13991:                                            ; preds = %13988
  %13992 = add nsw i32 %13979, -1
  store i32 %13992, ptr %13976, align 8, !tbaa !73
  br label %13995

13993:                                            ; preds = %13988
  %13994 = atomicrmw volatile add ptr %13976, i32 -1 acq_rel, align 4
  br label %13995

13995:                                            ; preds = %13993, %13991
  %13996 = phi i32 [ %13979, %13991 ], [ %13994, %13993 ]
  %13997 = icmp eq i32 %13996, 1
  br i1 %13997, label %13998, label %13999, !prof !42

13998:                                            ; preds = %13995
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %13973) #21
  br label %13999

13999:                                            ; preds = %13998, %13995, %13980, %13971
  %14000 = getelementptr inbounds %struct.TestCase, ptr %50, i64 8, i32 2
  %14001 = load ptr, ptr %14000, align 8, !tbaa !23
  %14002 = getelementptr inbounds %struct.TestCase, ptr %50, i64 8, i32 2, i32 2
  %14003 = icmp eq ptr %14001, %14002
  br i1 %14003, label %14005, label %14004

14004:                                            ; preds = %13999
  call void @_ZdlPv(ptr noundef %14001) #22
  br label %14005

14005:                                            ; preds = %14004, %13999
  %14006 = load ptr, ptr %13529, align 8, !tbaa !23
  %14007 = getelementptr inbounds %struct.TestCase, ptr %50, i64 8, i32 0, i32 2
  %14008 = icmp eq ptr %14006, %14007
  br i1 %14008, label %14010, label %14009

14009:                                            ; preds = %14005
  call void @_ZdlPv(ptr noundef %14006) #22
  br label %14010

14010:                                            ; preds = %14005, %14009
  %14011 = getelementptr inbounds %struct.TestCase, ptr %50, i64 7, i32 3, i32 0, i32 1
  %14012 = load ptr, ptr %14011, align 8, !tbaa !88
  %14013 = icmp eq ptr %14012, null
  br i1 %14013, label %14038, label %14014

14014:                                            ; preds = %14010
  %14015 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14012, i64 0, i32 1
  %14016 = load atomic i64, ptr %14015 acquire, align 8
  %14017 = icmp eq i64 %14016, 4294967297
  %14018 = trunc i64 %14016 to i32
  br i1 %14017, label %14019, label %14027

14019:                                            ; preds = %14014
  store i32 0, ptr %14015, align 8, !tbaa !90
  %14020 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14012, i64 0, i32 2
  store i32 0, ptr %14020, align 4, !tbaa !92
  %14021 = load ptr, ptr %14012, align 8, !tbaa !58
  %14022 = getelementptr inbounds ptr, ptr %14021, i64 2
  %14023 = load ptr, ptr %14022, align 8
  call void %14023(ptr noundef nonnull align 8 dereferenceable(16) %14012) #21
  %14024 = load ptr, ptr %14012, align 8, !tbaa !58
  %14025 = getelementptr inbounds ptr, ptr %14024, i64 3
  %14026 = load ptr, ptr %14025, align 8
  call void %14026(ptr noundef nonnull align 8 dereferenceable(16) %14012) #21
  br label %14038

14027:                                            ; preds = %14014
  %14028 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %14029 = icmp eq i8 %14028, 0
  br i1 %14029, label %14032, label %14030

14030:                                            ; preds = %14027
  %14031 = add nsw i32 %14018, -1
  store i32 %14031, ptr %14015, align 8, !tbaa !73
  br label %14034

14032:                                            ; preds = %14027
  %14033 = atomicrmw volatile add ptr %14015, i32 -1 acq_rel, align 4
  br label %14034

14034:                                            ; preds = %14032, %14030
  %14035 = phi i32 [ %14018, %14030 ], [ %14033, %14032 ]
  %14036 = icmp eq i32 %14035, 1
  br i1 %14036, label %14037, label %14038, !prof !42

14037:                                            ; preds = %14034
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %14012) #21
  br label %14038

14038:                                            ; preds = %14037, %14034, %14019, %14010
  %14039 = getelementptr inbounds %struct.TestCase, ptr %50, i64 7, i32 2
  %14040 = load ptr, ptr %14039, align 8, !tbaa !23
  %14041 = getelementptr inbounds %struct.TestCase, ptr %50, i64 7, i32 2, i32 2
  %14042 = icmp eq ptr %14040, %14041
  br i1 %14042, label %14044, label %14043

14043:                                            ; preds = %14038
  call void @_ZdlPv(ptr noundef %14040) #22
  br label %14044

14044:                                            ; preds = %14043, %14038
  %14045 = load ptr, ptr %13524, align 8, !tbaa !23
  %14046 = getelementptr inbounds %struct.TestCase, ptr %50, i64 7, i32 0, i32 2
  %14047 = icmp eq ptr %14045, %14046
  br i1 %14047, label %14049, label %14048

14048:                                            ; preds = %14044
  call void @_ZdlPv(ptr noundef %14045) #22
  br label %14049

14049:                                            ; preds = %14044, %14048
  %14050 = getelementptr inbounds %struct.TestCase, ptr %50, i64 6, i32 3, i32 0, i32 1
  %14051 = load ptr, ptr %14050, align 8, !tbaa !88
  %14052 = icmp eq ptr %14051, null
  br i1 %14052, label %14077, label %14053

14053:                                            ; preds = %14049
  %14054 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14051, i64 0, i32 1
  %14055 = load atomic i64, ptr %14054 acquire, align 8
  %14056 = icmp eq i64 %14055, 4294967297
  %14057 = trunc i64 %14055 to i32
  br i1 %14056, label %14058, label %14066

14058:                                            ; preds = %14053
  store i32 0, ptr %14054, align 8, !tbaa !90
  %14059 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14051, i64 0, i32 2
  store i32 0, ptr %14059, align 4, !tbaa !92
  %14060 = load ptr, ptr %14051, align 8, !tbaa !58
  %14061 = getelementptr inbounds ptr, ptr %14060, i64 2
  %14062 = load ptr, ptr %14061, align 8
  call void %14062(ptr noundef nonnull align 8 dereferenceable(16) %14051) #21
  %14063 = load ptr, ptr %14051, align 8, !tbaa !58
  %14064 = getelementptr inbounds ptr, ptr %14063, i64 3
  %14065 = load ptr, ptr %14064, align 8
  call void %14065(ptr noundef nonnull align 8 dereferenceable(16) %14051) #21
  br label %14077

14066:                                            ; preds = %14053
  %14067 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %14068 = icmp eq i8 %14067, 0
  br i1 %14068, label %14071, label %14069

14069:                                            ; preds = %14066
  %14070 = add nsw i32 %14057, -1
  store i32 %14070, ptr %14054, align 8, !tbaa !73
  br label %14073

14071:                                            ; preds = %14066
  %14072 = atomicrmw volatile add ptr %14054, i32 -1 acq_rel, align 4
  br label %14073

14073:                                            ; preds = %14071, %14069
  %14074 = phi i32 [ %14057, %14069 ], [ %14072, %14071 ]
  %14075 = icmp eq i32 %14074, 1
  br i1 %14075, label %14076, label %14077, !prof !42

14076:                                            ; preds = %14073
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %14051) #21
  br label %14077

14077:                                            ; preds = %14076, %14073, %14058, %14049
  %14078 = getelementptr inbounds %struct.TestCase, ptr %50, i64 6, i32 2
  %14079 = load ptr, ptr %14078, align 8, !tbaa !23
  %14080 = getelementptr inbounds %struct.TestCase, ptr %50, i64 6, i32 2, i32 2
  %14081 = icmp eq ptr %14079, %14080
  br i1 %14081, label %14083, label %14082

14082:                                            ; preds = %14077
  call void @_ZdlPv(ptr noundef %14079) #22
  br label %14083

14083:                                            ; preds = %14082, %14077
  %14084 = load ptr, ptr %13515, align 8, !tbaa !23
  %14085 = getelementptr inbounds %struct.TestCase, ptr %50, i64 6, i32 0, i32 2
  %14086 = icmp eq ptr %14084, %14085
  br i1 %14086, label %14088, label %14087

14087:                                            ; preds = %14083
  call void @_ZdlPv(ptr noundef %14084) #22
  br label %14088

14088:                                            ; preds = %14083, %14087
  %14089 = getelementptr inbounds %struct.TestCase, ptr %50, i64 5, i32 3, i32 0, i32 1
  %14090 = load ptr, ptr %14089, align 8, !tbaa !88
  %14091 = icmp eq ptr %14090, null
  br i1 %14091, label %14116, label %14092

14092:                                            ; preds = %14088
  %14093 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14090, i64 0, i32 1
  %14094 = load atomic i64, ptr %14093 acquire, align 8
  %14095 = icmp eq i64 %14094, 4294967297
  %14096 = trunc i64 %14094 to i32
  br i1 %14095, label %14097, label %14105

14097:                                            ; preds = %14092
  store i32 0, ptr %14093, align 8, !tbaa !90
  %14098 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14090, i64 0, i32 2
  store i32 0, ptr %14098, align 4, !tbaa !92
  %14099 = load ptr, ptr %14090, align 8, !tbaa !58
  %14100 = getelementptr inbounds ptr, ptr %14099, i64 2
  %14101 = load ptr, ptr %14100, align 8
  call void %14101(ptr noundef nonnull align 8 dereferenceable(16) %14090) #21
  %14102 = load ptr, ptr %14090, align 8, !tbaa !58
  %14103 = getelementptr inbounds ptr, ptr %14102, i64 3
  %14104 = load ptr, ptr %14103, align 8
  call void %14104(ptr noundef nonnull align 8 dereferenceable(16) %14090) #21
  br label %14116

14105:                                            ; preds = %14092
  %14106 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %14107 = icmp eq i8 %14106, 0
  br i1 %14107, label %14110, label %14108

14108:                                            ; preds = %14105
  %14109 = add nsw i32 %14096, -1
  store i32 %14109, ptr %14093, align 8, !tbaa !73
  br label %14112

14110:                                            ; preds = %14105
  %14111 = atomicrmw volatile add ptr %14093, i32 -1 acq_rel, align 4
  br label %14112

14112:                                            ; preds = %14110, %14108
  %14113 = phi i32 [ %14096, %14108 ], [ %14111, %14110 ]
  %14114 = icmp eq i32 %14113, 1
  br i1 %14114, label %14115, label %14116, !prof !42

14115:                                            ; preds = %14112
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %14090) #21
  br label %14116

14116:                                            ; preds = %14115, %14112, %14097, %14088
  %14117 = getelementptr inbounds %struct.TestCase, ptr %50, i64 5, i32 2
  %14118 = load ptr, ptr %14117, align 8, !tbaa !23
  %14119 = getelementptr inbounds %struct.TestCase, ptr %50, i64 5, i32 2, i32 2
  %14120 = icmp eq ptr %14118, %14119
  br i1 %14120, label %14122, label %14121

14121:                                            ; preds = %14116
  call void @_ZdlPv(ptr noundef %14118) #22
  br label %14122

14122:                                            ; preds = %14121, %14116
  %14123 = load ptr, ptr %13506, align 8, !tbaa !23
  %14124 = getelementptr inbounds %struct.TestCase, ptr %50, i64 5, i32 0, i32 2
  %14125 = icmp eq ptr %14123, %14124
  br i1 %14125, label %14127, label %14126

14126:                                            ; preds = %14122
  call void @_ZdlPv(ptr noundef %14123) #22
  br label %14127

14127:                                            ; preds = %14122, %14126
  %14128 = getelementptr inbounds %struct.TestCase, ptr %50, i64 4, i32 3, i32 0, i32 1
  %14129 = load ptr, ptr %14128, align 8, !tbaa !88
  %14130 = icmp eq ptr %14129, null
  br i1 %14130, label %14155, label %14131

14131:                                            ; preds = %14127
  %14132 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14129, i64 0, i32 1
  %14133 = load atomic i64, ptr %14132 acquire, align 8
  %14134 = icmp eq i64 %14133, 4294967297
  %14135 = trunc i64 %14133 to i32
  br i1 %14134, label %14136, label %14144

14136:                                            ; preds = %14131
  store i32 0, ptr %14132, align 8, !tbaa !90
  %14137 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14129, i64 0, i32 2
  store i32 0, ptr %14137, align 4, !tbaa !92
  %14138 = load ptr, ptr %14129, align 8, !tbaa !58
  %14139 = getelementptr inbounds ptr, ptr %14138, i64 2
  %14140 = load ptr, ptr %14139, align 8
  call void %14140(ptr noundef nonnull align 8 dereferenceable(16) %14129) #21
  %14141 = load ptr, ptr %14129, align 8, !tbaa !58
  %14142 = getelementptr inbounds ptr, ptr %14141, i64 3
  %14143 = load ptr, ptr %14142, align 8
  call void %14143(ptr noundef nonnull align 8 dereferenceable(16) %14129) #21
  br label %14155

14144:                                            ; preds = %14131
  %14145 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %14146 = icmp eq i8 %14145, 0
  br i1 %14146, label %14149, label %14147

14147:                                            ; preds = %14144
  %14148 = add nsw i32 %14135, -1
  store i32 %14148, ptr %14132, align 8, !tbaa !73
  br label %14151

14149:                                            ; preds = %14144
  %14150 = atomicrmw volatile add ptr %14132, i32 -1 acq_rel, align 4
  br label %14151

14151:                                            ; preds = %14149, %14147
  %14152 = phi i32 [ %14135, %14147 ], [ %14150, %14149 ]
  %14153 = icmp eq i32 %14152, 1
  br i1 %14153, label %14154, label %14155, !prof !42

14154:                                            ; preds = %14151
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %14129) #21
  br label %14155

14155:                                            ; preds = %14154, %14151, %14136, %14127
  %14156 = getelementptr inbounds %struct.TestCase, ptr %50, i64 4, i32 2
  %14157 = load ptr, ptr %14156, align 8, !tbaa !23
  %14158 = getelementptr inbounds %struct.TestCase, ptr %50, i64 4, i32 2, i32 2
  %14159 = icmp eq ptr %14157, %14158
  br i1 %14159, label %14161, label %14160

14160:                                            ; preds = %14155
  call void @_ZdlPv(ptr noundef %14157) #22
  br label %14161

14161:                                            ; preds = %14160, %14155
  %14162 = load ptr, ptr %13497, align 8, !tbaa !23
  %14163 = getelementptr inbounds %struct.TestCase, ptr %50, i64 4, i32 0, i32 2
  %14164 = icmp eq ptr %14162, %14163
  br i1 %14164, label %14166, label %14165

14165:                                            ; preds = %14161
  call void @_ZdlPv(ptr noundef %14162) #22
  br label %14166

14166:                                            ; preds = %14161, %14165
  %14167 = getelementptr inbounds %struct.TestCase, ptr %50, i64 3, i32 3, i32 0, i32 1
  %14168 = load ptr, ptr %14167, align 8, !tbaa !88
  %14169 = icmp eq ptr %14168, null
  br i1 %14169, label %14194, label %14170

14170:                                            ; preds = %14166
  %14171 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14168, i64 0, i32 1
  %14172 = load atomic i64, ptr %14171 acquire, align 8
  %14173 = icmp eq i64 %14172, 4294967297
  %14174 = trunc i64 %14172 to i32
  br i1 %14173, label %14175, label %14183

14175:                                            ; preds = %14170
  store i32 0, ptr %14171, align 8, !tbaa !90
  %14176 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14168, i64 0, i32 2
  store i32 0, ptr %14176, align 4, !tbaa !92
  %14177 = load ptr, ptr %14168, align 8, !tbaa !58
  %14178 = getelementptr inbounds ptr, ptr %14177, i64 2
  %14179 = load ptr, ptr %14178, align 8
  call void %14179(ptr noundef nonnull align 8 dereferenceable(16) %14168) #21
  %14180 = load ptr, ptr %14168, align 8, !tbaa !58
  %14181 = getelementptr inbounds ptr, ptr %14180, i64 3
  %14182 = load ptr, ptr %14181, align 8
  call void %14182(ptr noundef nonnull align 8 dereferenceable(16) %14168) #21
  br label %14194

14183:                                            ; preds = %14170
  %14184 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %14185 = icmp eq i8 %14184, 0
  br i1 %14185, label %14188, label %14186

14186:                                            ; preds = %14183
  %14187 = add nsw i32 %14174, -1
  store i32 %14187, ptr %14171, align 8, !tbaa !73
  br label %14190

14188:                                            ; preds = %14183
  %14189 = atomicrmw volatile add ptr %14171, i32 -1 acq_rel, align 4
  br label %14190

14190:                                            ; preds = %14188, %14186
  %14191 = phi i32 [ %14174, %14186 ], [ %14189, %14188 ]
  %14192 = icmp eq i32 %14191, 1
  br i1 %14192, label %14193, label %14194, !prof !42

14193:                                            ; preds = %14190
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %14168) #21
  br label %14194

14194:                                            ; preds = %14193, %14190, %14175, %14166
  %14195 = getelementptr inbounds %struct.TestCase, ptr %50, i64 3, i32 2
  %14196 = load ptr, ptr %14195, align 8, !tbaa !23
  %14197 = getelementptr inbounds %struct.TestCase, ptr %50, i64 3, i32 2, i32 2
  %14198 = icmp eq ptr %14196, %14197
  br i1 %14198, label %14200, label %14199

14199:                                            ; preds = %14194
  call void @_ZdlPv(ptr noundef %14196) #22
  br label %14200

14200:                                            ; preds = %14199, %14194
  %14201 = load ptr, ptr %13489, align 8, !tbaa !23
  %14202 = getelementptr inbounds %struct.TestCase, ptr %50, i64 3, i32 0, i32 2
  %14203 = icmp eq ptr %14201, %14202
  br i1 %14203, label %14205, label %14204

14204:                                            ; preds = %14200
  call void @_ZdlPv(ptr noundef %14201) #22
  br label %14205

14205:                                            ; preds = %14200, %14204
  %14206 = getelementptr inbounds %struct.TestCase, ptr %50, i64 2, i32 3, i32 0, i32 1
  %14207 = load ptr, ptr %14206, align 8, !tbaa !88
  %14208 = icmp eq ptr %14207, null
  br i1 %14208, label %14233, label %14209

14209:                                            ; preds = %14205
  %14210 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14207, i64 0, i32 1
  %14211 = load atomic i64, ptr %14210 acquire, align 8
  %14212 = icmp eq i64 %14211, 4294967297
  %14213 = trunc i64 %14211 to i32
  br i1 %14212, label %14214, label %14222

14214:                                            ; preds = %14209
  store i32 0, ptr %14210, align 8, !tbaa !90
  %14215 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14207, i64 0, i32 2
  store i32 0, ptr %14215, align 4, !tbaa !92
  %14216 = load ptr, ptr %14207, align 8, !tbaa !58
  %14217 = getelementptr inbounds ptr, ptr %14216, i64 2
  %14218 = load ptr, ptr %14217, align 8
  call void %14218(ptr noundef nonnull align 8 dereferenceable(16) %14207) #21
  %14219 = load ptr, ptr %14207, align 8, !tbaa !58
  %14220 = getelementptr inbounds ptr, ptr %14219, i64 3
  %14221 = load ptr, ptr %14220, align 8
  call void %14221(ptr noundef nonnull align 8 dereferenceable(16) %14207) #21
  br label %14233

14222:                                            ; preds = %14209
  %14223 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %14224 = icmp eq i8 %14223, 0
  br i1 %14224, label %14227, label %14225

14225:                                            ; preds = %14222
  %14226 = add nsw i32 %14213, -1
  store i32 %14226, ptr %14210, align 8, !tbaa !73
  br label %14229

14227:                                            ; preds = %14222
  %14228 = atomicrmw volatile add ptr %14210, i32 -1 acq_rel, align 4
  br label %14229

14229:                                            ; preds = %14227, %14225
  %14230 = phi i32 [ %14213, %14225 ], [ %14228, %14227 ]
  %14231 = icmp eq i32 %14230, 1
  br i1 %14231, label %14232, label %14233, !prof !42

14232:                                            ; preds = %14229
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %14207) #21
  br label %14233

14233:                                            ; preds = %14232, %14229, %14214, %14205
  %14234 = getelementptr inbounds %struct.TestCase, ptr %50, i64 2, i32 2
  %14235 = load ptr, ptr %14234, align 8, !tbaa !23
  %14236 = getelementptr inbounds %struct.TestCase, ptr %50, i64 2, i32 2, i32 2
  %14237 = icmp eq ptr %14235, %14236
  br i1 %14237, label %14239, label %14238

14238:                                            ; preds = %14233
  call void @_ZdlPv(ptr noundef %14235) #22
  br label %14239

14239:                                            ; preds = %14238, %14233
  %14240 = load ptr, ptr %13480, align 8, !tbaa !23
  %14241 = getelementptr inbounds %struct.TestCase, ptr %50, i64 2, i32 0, i32 2
  %14242 = icmp eq ptr %14240, %14241
  br i1 %14242, label %14244, label %14243

14243:                                            ; preds = %14239
  call void @_ZdlPv(ptr noundef %14240) #22
  br label %14244

14244:                                            ; preds = %14239, %14243
  %14245 = getelementptr inbounds %struct.TestCase, ptr %50, i64 1, i32 3, i32 0, i32 1
  %14246 = load ptr, ptr %14245, align 8, !tbaa !88
  %14247 = icmp eq ptr %14246, null
  br i1 %14247, label %14272, label %14248

14248:                                            ; preds = %14244
  %14249 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14246, i64 0, i32 1
  %14250 = load atomic i64, ptr %14249 acquire, align 8
  %14251 = icmp eq i64 %14250, 4294967297
  %14252 = trunc i64 %14250 to i32
  br i1 %14251, label %14253, label %14261

14253:                                            ; preds = %14248
  store i32 0, ptr %14249, align 8, !tbaa !90
  %14254 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14246, i64 0, i32 2
  store i32 0, ptr %14254, align 4, !tbaa !92
  %14255 = load ptr, ptr %14246, align 8, !tbaa !58
  %14256 = getelementptr inbounds ptr, ptr %14255, i64 2
  %14257 = load ptr, ptr %14256, align 8
  call void %14257(ptr noundef nonnull align 8 dereferenceable(16) %14246) #21
  %14258 = load ptr, ptr %14246, align 8, !tbaa !58
  %14259 = getelementptr inbounds ptr, ptr %14258, i64 3
  %14260 = load ptr, ptr %14259, align 8
  call void %14260(ptr noundef nonnull align 8 dereferenceable(16) %14246) #21
  br label %14272

14261:                                            ; preds = %14248
  %14262 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %14263 = icmp eq i8 %14262, 0
  br i1 %14263, label %14266, label %14264

14264:                                            ; preds = %14261
  %14265 = add nsw i32 %14252, -1
  store i32 %14265, ptr %14249, align 8, !tbaa !73
  br label %14268

14266:                                            ; preds = %14261
  %14267 = atomicrmw volatile add ptr %14249, i32 -1 acq_rel, align 4
  br label %14268

14268:                                            ; preds = %14266, %14264
  %14269 = phi i32 [ %14252, %14264 ], [ %14267, %14266 ]
  %14270 = icmp eq i32 %14269, 1
  br i1 %14270, label %14271, label %14272, !prof !42

14271:                                            ; preds = %14268
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %14246) #21
  br label %14272

14272:                                            ; preds = %14271, %14268, %14253, %14244
  %14273 = getelementptr inbounds %struct.TestCase, ptr %50, i64 1, i32 2
  %14274 = load ptr, ptr %14273, align 8, !tbaa !23
  %14275 = getelementptr inbounds %struct.TestCase, ptr %50, i64 1, i32 2, i32 2
  %14276 = icmp eq ptr %14274, %14275
  br i1 %14276, label %14278, label %14277

14277:                                            ; preds = %14272
  call void @_ZdlPv(ptr noundef %14274) #22
  br label %14278

14278:                                            ; preds = %14277, %14272
  %14279 = load ptr, ptr %13471, align 8, !tbaa !23
  %14280 = getelementptr inbounds %struct.TestCase, ptr %50, i64 1, i32 0, i32 2
  %14281 = icmp eq ptr %14279, %14280
  br i1 %14281, label %14283, label %14282

14282:                                            ; preds = %14278
  call void @_ZdlPv(ptr noundef %14279) #22
  br label %14283

14283:                                            ; preds = %14278, %14282
  %14284 = getelementptr inbounds %struct.TestCase, ptr %50, i64 0, i32 3, i32 0, i32 1
  %14285 = load ptr, ptr %14284, align 8, !tbaa !88
  %14286 = icmp eq ptr %14285, null
  br i1 %14286, label %14311, label %14287

14287:                                            ; preds = %14283
  %14288 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14285, i64 0, i32 1
  %14289 = load atomic i64, ptr %14288 acquire, align 8
  %14290 = icmp eq i64 %14289, 4294967297
  %14291 = trunc i64 %14289 to i32
  br i1 %14290, label %14292, label %14300

14292:                                            ; preds = %14287
  store i32 0, ptr %14288, align 8, !tbaa !90
  %14293 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14285, i64 0, i32 2
  store i32 0, ptr %14293, align 4, !tbaa !92
  %14294 = load ptr, ptr %14285, align 8, !tbaa !58
  %14295 = getelementptr inbounds ptr, ptr %14294, i64 2
  %14296 = load ptr, ptr %14295, align 8
  call void %14296(ptr noundef nonnull align 8 dereferenceable(16) %14285) #21
  %14297 = load ptr, ptr %14285, align 8, !tbaa !58
  %14298 = getelementptr inbounds ptr, ptr %14297, i64 3
  %14299 = load ptr, ptr %14298, align 8
  call void %14299(ptr noundef nonnull align 8 dereferenceable(16) %14285) #21
  br label %14311

14300:                                            ; preds = %14287
  %14301 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %14302 = icmp eq i8 %14301, 0
  br i1 %14302, label %14305, label %14303

14303:                                            ; preds = %14300
  %14304 = add nsw i32 %14291, -1
  store i32 %14304, ptr %14288, align 8, !tbaa !73
  br label %14307

14305:                                            ; preds = %14300
  %14306 = atomicrmw volatile add ptr %14288, i32 -1 acq_rel, align 4
  br label %14307

14307:                                            ; preds = %14305, %14303
  %14308 = phi i32 [ %14291, %14303 ], [ %14306, %14305 ]
  %14309 = icmp eq i32 %14308, 1
  br i1 %14309, label %14310, label %14311, !prof !42

14310:                                            ; preds = %14307
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %14285) #21
  br label %14311

14311:                                            ; preds = %14310, %14307, %14292, %14283
  %14312 = getelementptr inbounds %struct.TestCase, ptr %50, i64 0, i32 2
  %14313 = load ptr, ptr %14312, align 8, !tbaa !23
  %14314 = getelementptr inbounds %struct.TestCase, ptr %50, i64 0, i32 2, i32 2
  %14315 = icmp eq ptr %14313, %14314
  br i1 %14315, label %14317, label %14316

14316:                                            ; preds = %14311
  call void @_ZdlPv(ptr noundef %14313) #22
  br label %14317

14317:                                            ; preds = %14316, %14311
  %14318 = load ptr, ptr %50, align 8, !tbaa !23
  %14319 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %50, i64 0, i32 2
  %14320 = icmp eq ptr %14318, %14319
  br i1 %14320, label %14322, label %14321

14321:                                            ; preds = %14317
  call void @_ZdlPv(ptr noundef %14318) #22
  br label %14322

14322:                                            ; preds = %14321, %14317, %13734
  %14323 = phi { ptr, i32 } [ %13735, %13734 ], [ %13737, %14317 ], [ %13737, %14321 ]
  %14324 = phi i1 [ true, %13734 ], [ false, %14317 ], [ false, %14321 ]
  %14325 = load ptr, ptr %65, align 8, !tbaa !23
  %14326 = icmp eq ptr %14325, %13576
  br i1 %14326, label %14328, label %14327

14327:                                            ; preds = %14322
  call void @_ZdlPv(ptr noundef %14325) #22
  br label %14328

14328:                                            ; preds = %14327, %14322, %13732
  %14329 = phi ptr [ %13570, %13732 ], [ %13575, %14327 ], [ %13575, %14322 ]
  %14330 = phi { ptr, i32 } [ %13733, %13732 ], [ %14323, %14327 ], [ %14323, %14322 ]
  %14331 = phi i1 [ true, %13732 ], [ %14324, %14327 ], [ %14324, %14322 ]
  %14332 = load ptr, ptr %64, align 8, !tbaa !23
  %14333 = icmp eq ptr %14332, %13571
  br i1 %14333, label %14335, label %14334

14334:                                            ; preds = %14328
  call void @_ZdlPv(ptr noundef %14332) #22
  br label %14335

14335:                                            ; preds = %14334, %14328, %13730
  %14336 = phi ptr [ %13565, %13730 ], [ %14329, %14334 ], [ %14329, %14328 ]
  %14337 = phi { ptr, i32 } [ %13731, %13730 ], [ %14330, %14334 ], [ %14330, %14328 ]
  %14338 = phi i1 [ true, %13730 ], [ %14331, %14334 ], [ %14331, %14328 ]
  %14339 = load ptr, ptr %63, align 8, !tbaa !23
  %14340 = icmp eq ptr %14339, %13566
  br i1 %14340, label %14342, label %14341

14341:                                            ; preds = %14335
  call void @_ZdlPv(ptr noundef %14339) #22
  br label %14342

14342:                                            ; preds = %14341, %14335, %13728
  %14343 = phi ptr [ %13556, %13728 ], [ %14336, %14341 ], [ %14336, %14335 ]
  %14344 = phi { ptr, i32 } [ %13729, %13728 ], [ %14337, %14341 ], [ %14337, %14335 ]
  %14345 = phi i1 [ true, %13728 ], [ %14338, %14341 ], [ %14338, %14335 ]
  %14346 = load ptr, ptr %62, align 8, !tbaa !23
  %14347 = icmp eq ptr %14346, %13557
  br i1 %14347, label %14349, label %14348

14348:                                            ; preds = %14342
  call void @_ZdlPv(ptr noundef %14346) #22
  br label %14349

14349:                                            ; preds = %14348, %14342, %13726, %13724
  %14350 = phi ptr [ %13547, %13724 ], [ %13556, %13726 ], [ %14343, %14342 ], [ %14343, %14348 ]
  %14351 = phi { ptr, i32 } [ %13725, %13724 ], [ %13727, %13726 ], [ %14344, %14342 ], [ %14344, %14348 ]
  %14352 = phi i1 [ true, %13724 ], [ true, %13726 ], [ %14345, %14342 ], [ %14345, %14348 ]
  %14353 = load ptr, ptr %61, align 8, !tbaa !23
  %14354 = icmp eq ptr %14353, %13548
  br i1 %14354, label %14356, label %14355

14355:                                            ; preds = %14349
  call void @_ZdlPv(ptr noundef %14353) #22
  br label %14356

14356:                                            ; preds = %14355, %14349, %13722, %13720
  %14357 = phi ptr [ %13538, %13720 ], [ %13547, %13722 ], [ %14350, %14349 ], [ %14350, %14355 ]
  %14358 = phi { ptr, i32 } [ %13721, %13720 ], [ %13723, %13722 ], [ %14351, %14349 ], [ %14351, %14355 ]
  %14359 = phi i1 [ true, %13720 ], [ true, %13722 ], [ %14352, %14349 ], [ %14352, %14355 ]
  %14360 = load ptr, ptr %60, align 8, !tbaa !23
  %14361 = icmp eq ptr %14360, %13539
  br i1 %14361, label %14363, label %14362

14362:                                            ; preds = %14356
  call void @_ZdlPv(ptr noundef %14360) #22
  br label %14363

14363:                                            ; preds = %14362, %14356, %13718, %13716
  %14364 = phi ptr [ %13529, %13716 ], [ %13538, %13718 ], [ %14357, %14356 ], [ %14357, %14362 ]
  %14365 = phi { ptr, i32 } [ %13717, %13716 ], [ %13719, %13718 ], [ %14358, %14356 ], [ %14358, %14362 ]
  %14366 = phi i1 [ true, %13716 ], [ true, %13718 ], [ %14359, %14356 ], [ %14359, %14362 ]
  %14367 = load ptr, ptr %59, align 8, !tbaa !23
  %14368 = icmp eq ptr %14367, %13530
  br i1 %14368, label %14370, label %14369

14369:                                            ; preds = %14363
  call void @_ZdlPv(ptr noundef %14367) #22
  br label %14370

14370:                                            ; preds = %14369, %14363, %13714, %13712
  %14371 = phi ptr [ %13524, %13712 ], [ %13529, %13714 ], [ %14364, %14363 ], [ %14364, %14369 ]
  %14372 = phi { ptr, i32 } [ %13713, %13712 ], [ %13715, %13714 ], [ %14365, %14363 ], [ %14365, %14369 ]
  %14373 = phi i1 [ true, %13712 ], [ true, %13714 ], [ %14366, %14363 ], [ %14366, %14369 ]
  %14374 = load ptr, ptr %58, align 8, !tbaa !23
  %14375 = icmp eq ptr %14374, %13525
  br i1 %14375, label %14377, label %14376

14376:                                            ; preds = %14370
  call void @_ZdlPv(ptr noundef %14374) #22
  br label %14377

14377:                                            ; preds = %14376, %14370, %13710
  %14378 = phi ptr [ %13515, %13710 ], [ %14371, %14376 ], [ %14371, %14370 ]
  %14379 = phi { ptr, i32 } [ %13711, %13710 ], [ %14372, %14376 ], [ %14372, %14370 ]
  %14380 = phi i1 [ true, %13710 ], [ %14373, %14376 ], [ %14373, %14370 ]
  %14381 = load ptr, ptr %57, align 8, !tbaa !23
  %14382 = icmp eq ptr %14381, %13516
  br i1 %14382, label %14384, label %14383

14383:                                            ; preds = %14377
  call void @_ZdlPv(ptr noundef %14381) #22
  br label %14384

14384:                                            ; preds = %14383, %14377, %13708, %13706
  %14385 = phi ptr [ %13506, %13706 ], [ %13515, %13708 ], [ %14378, %14377 ], [ %14378, %14383 ]
  %14386 = phi { ptr, i32 } [ %13707, %13706 ], [ %13709, %13708 ], [ %14379, %14377 ], [ %14379, %14383 ]
  %14387 = phi i1 [ true, %13706 ], [ true, %13708 ], [ %14380, %14377 ], [ %14380, %14383 ]
  %14388 = load ptr, ptr %56, align 8, !tbaa !23
  %14389 = icmp eq ptr %14388, %13507
  br i1 %14389, label %14391, label %14390

14390:                                            ; preds = %14384
  call void @_ZdlPv(ptr noundef %14388) #22
  br label %14391

14391:                                            ; preds = %14390, %14384, %13704, %13702
  %14392 = phi ptr [ %13497, %13702 ], [ %13506, %13704 ], [ %14385, %14384 ], [ %14385, %14390 ]
  %14393 = phi { ptr, i32 } [ %13703, %13702 ], [ %13705, %13704 ], [ %14386, %14384 ], [ %14386, %14390 ]
  %14394 = phi i1 [ true, %13702 ], [ true, %13704 ], [ %14387, %14384 ], [ %14387, %14390 ]
  %14395 = load ptr, ptr %55, align 8, !tbaa !23
  %14396 = icmp eq ptr %14395, %13498
  br i1 %14396, label %14398, label %14397

14397:                                            ; preds = %14391
  call void @_ZdlPv(ptr noundef %14395) #22
  br label %14398

14398:                                            ; preds = %14397, %14391, %13700, %13698
  %14399 = phi ptr [ %13489, %13698 ], [ %13497, %13700 ], [ %14392, %14391 ], [ %14392, %14397 ]
  %14400 = phi { ptr, i32 } [ %13699, %13698 ], [ %13701, %13700 ], [ %14393, %14391 ], [ %14393, %14397 ]
  %14401 = phi i1 [ true, %13698 ], [ true, %13700 ], [ %14394, %14391 ], [ %14394, %14397 ]
  %14402 = load ptr, ptr %54, align 8, !tbaa !23
  %14403 = icmp eq ptr %14402, %13490
  br i1 %14403, label %14405, label %14404

14404:                                            ; preds = %14398
  call void @_ZdlPv(ptr noundef %14402) #22
  br label %14405

14405:                                            ; preds = %14404, %14398, %13696, %13694
  %14406 = phi ptr [ %13480, %13694 ], [ %13489, %13696 ], [ %14399, %14398 ], [ %14399, %14404 ]
  %14407 = phi { ptr, i32 } [ %13695, %13694 ], [ %13697, %13696 ], [ %14400, %14398 ], [ %14400, %14404 ]
  %14408 = phi i1 [ true, %13694 ], [ true, %13696 ], [ %14401, %14398 ], [ %14401, %14404 ]
  %14409 = load ptr, ptr %53, align 8, !tbaa !23
  %14410 = icmp eq ptr %14409, %13481
  br i1 %14410, label %14412, label %14411

14411:                                            ; preds = %14405
  call void @_ZdlPv(ptr noundef %14409) #22
  br label %14412

14412:                                            ; preds = %14411, %14405, %13692, %13690
  %14413 = phi ptr [ %13471, %13690 ], [ %13480, %13692 ], [ %14406, %14405 ], [ %14406, %14411 ]
  %14414 = phi { ptr, i32 } [ %13691, %13690 ], [ %13693, %13692 ], [ %14407, %14405 ], [ %14407, %14411 ]
  %14415 = phi i1 [ true, %13690 ], [ true, %13692 ], [ %14408, %14405 ], [ %14408, %14411 ]
  %14416 = load ptr, ptr %52, align 8, !tbaa !23
  %14417 = icmp eq ptr %14416, %13472
  br i1 %14417, label %14419, label %14418

14418:                                            ; preds = %14412
  call void @_ZdlPv(ptr noundef %14416) #22
  br label %14419

14419:                                            ; preds = %14418, %14412, %13688, %13686
  %14420 = phi ptr [ %50, %13686 ], [ %13471, %13688 ], [ %14413, %14412 ], [ %14413, %14418 ]
  %14421 = phi { ptr, i32 } [ %13687, %13686 ], [ %13689, %13688 ], [ %14414, %14412 ], [ %14414, %14418 ]
  %14422 = phi i1 [ true, %13686 ], [ true, %13688 ], [ %14415, %14412 ], [ %14415, %14418 ]
  %14423 = load ptr, ptr %51, align 8, !tbaa !23
  %14424 = icmp eq ptr %14423, %13465
  br i1 %14424, label %14426, label %14425

14425:                                            ; preds = %14419
  call void @_ZdlPv(ptr noundef %14423) #22
  br label %14426

14426:                                            ; preds = %14425, %14419
  %14427 = icmp ne ptr %50, %14420
  %14428 = select i1 %14422, i1 %14427, i1 false
  br i1 %14428, label %14429, label %14472

14429:                                            ; preds = %14426, %14470
  %14430 = phi ptr [ %14431, %14470 ], [ %14420, %14426 ]
  %14431 = getelementptr inbounds %struct.TestCase, ptr %14430, i64 -1
  %14432 = getelementptr %struct.TestCase, ptr %14430, i64 -1, i32 3, i32 0, i32 1
  %14433 = load ptr, ptr %14432, align 8, !tbaa !88
  %14434 = icmp eq ptr %14433, null
  br i1 %14434, label %14459, label %14435

14435:                                            ; preds = %14429
  %14436 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14433, i64 0, i32 1
  %14437 = load atomic i64, ptr %14436 acquire, align 8
  %14438 = icmp eq i64 %14437, 4294967297
  %14439 = trunc i64 %14437 to i32
  br i1 %14438, label %14440, label %14448

14440:                                            ; preds = %14435
  store i32 0, ptr %14436, align 8, !tbaa !90
  %14441 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14433, i64 0, i32 2
  store i32 0, ptr %14441, align 4, !tbaa !92
  %14442 = load ptr, ptr %14433, align 8, !tbaa !58
  %14443 = getelementptr inbounds ptr, ptr %14442, i64 2
  %14444 = load ptr, ptr %14443, align 8
  call void %14444(ptr noundef nonnull align 8 dereferenceable(16) %14433) #21
  %14445 = load ptr, ptr %14433, align 8, !tbaa !58
  %14446 = getelementptr inbounds ptr, ptr %14445, i64 3
  %14447 = load ptr, ptr %14446, align 8
  call void %14447(ptr noundef nonnull align 8 dereferenceable(16) %14433) #21
  br label %14459

14448:                                            ; preds = %14435
  %14449 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %14450 = icmp eq i8 %14449, 0
  br i1 %14450, label %14453, label %14451

14451:                                            ; preds = %14448
  %14452 = add nsw i32 %14439, -1
  store i32 %14452, ptr %14436, align 8, !tbaa !73
  br label %14455

14453:                                            ; preds = %14448
  %14454 = atomicrmw volatile add ptr %14436, i32 -1 acq_rel, align 4
  br label %14455

14455:                                            ; preds = %14453, %14451
  %14456 = phi i32 [ %14439, %14451 ], [ %14454, %14453 ]
  %14457 = icmp eq i32 %14456, 1
  br i1 %14457, label %14458, label %14459, !prof !42

14458:                                            ; preds = %14455
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %14433) #21
  br label %14459

14459:                                            ; preds = %14458, %14455, %14440, %14429
  %14460 = getelementptr %struct.TestCase, ptr %14430, i64 -1, i32 2
  %14461 = load ptr, ptr %14460, align 8, !tbaa !23
  %14462 = getelementptr %struct.TestCase, ptr %14430, i64 -1, i32 2, i32 2
  %14463 = icmp eq ptr %14461, %14462
  br i1 %14463, label %14465, label %14464

14464:                                            ; preds = %14459
  call void @_ZdlPv(ptr noundef %14461) #22
  br label %14465

14465:                                            ; preds = %14464, %14459
  %14466 = load ptr, ptr %14431, align 8, !tbaa !23
  %14467 = getelementptr %struct.TestCase, ptr %14430, i64 -1, i32 0, i32 2
  %14468 = icmp eq ptr %14466, %14467
  br i1 %14468, label %14470, label %14469

14469:                                            ; preds = %14465
  call void @_ZdlPv(ptr noundef %14466) #22
  br label %14470

14470:                                            ; preds = %14465, %14469
  %14471 = icmp eq ptr %14431, %50
  br i1 %14471, label %14472, label %14429

14472:                                            ; preds = %14470, %14426
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %50) #21
  br label %762

14473:                                            ; preds = %13682, %13685
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %50) #21
  store i32 %13580, ptr @dummy491, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %51)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %52)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %53)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %54)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %55)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %56)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %57)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %58)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %59)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %60)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %61)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %62)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %63)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %64)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %65)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %38)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %37) #21
  %14474 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %38, i64 0, i32 2
  store ptr %14474, ptr %38, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %36) #21
  store i64 55, ptr %36, align 8, !tbaa !74
  %14475 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %38, ptr noundef nonnull align 8 dereferenceable(8) %36, i64 noundef 0)
  store ptr %14475, ptr %38, align 8, !tbaa !23
  %14476 = load i64, ptr %36, align 8, !tbaa !74
  store i64 %14476, ptr %14474, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(55) %14475, ptr noundef nonnull align 1 dereferenceable(55) @.str.182, i64 55, i1 false)
  %14477 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %38, i64 0, i32 1
  store i64 %14476, ptr %14477, align 8, !tbaa !10
  %14478 = getelementptr inbounds i8, ptr %14475, i64 %14476
  store i8 0, ptr %14478, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %36) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %37, ptr noundef nonnull %38, i32 noundef 0)
          to label %14479 unwind label %14524

14479:                                            ; preds = %14473
  %14480 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 4, ptr nonnull %37, i64 1)
          to label %14481 unwind label %14526

14481:                                            ; preds = %14479
  %14482 = getelementptr inbounds %struct.TestCase, ptr %37, i64 0, i32 3, i32 0, i32 1
  %14483 = load ptr, ptr %14482, align 8, !tbaa !88
  %14484 = icmp eq ptr %14483, null
  br i1 %14484, label %14509, label %14485

14485:                                            ; preds = %14481
  %14486 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14483, i64 0, i32 1
  %14487 = load atomic i64, ptr %14486 acquire, align 8
  %14488 = icmp eq i64 %14487, 4294967297
  %14489 = trunc i64 %14487 to i32
  br i1 %14488, label %14490, label %14498

14490:                                            ; preds = %14485
  store i32 0, ptr %14486, align 8, !tbaa !90
  %14491 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14483, i64 0, i32 2
  store i32 0, ptr %14491, align 4, !tbaa !92
  %14492 = load ptr, ptr %14483, align 8, !tbaa !58
  %14493 = getelementptr inbounds ptr, ptr %14492, i64 2
  %14494 = load ptr, ptr %14493, align 8
  call void %14494(ptr noundef nonnull align 8 dereferenceable(16) %14483) #21
  %14495 = load ptr, ptr %14483, align 8, !tbaa !58
  %14496 = getelementptr inbounds ptr, ptr %14495, i64 3
  %14497 = load ptr, ptr %14496, align 8
  call void %14497(ptr noundef nonnull align 8 dereferenceable(16) %14483) #21
  br label %14509

14498:                                            ; preds = %14485
  %14499 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %14500 = icmp eq i8 %14499, 0
  br i1 %14500, label %14503, label %14501

14501:                                            ; preds = %14498
  %14502 = add nsw i32 %14489, -1
  store i32 %14502, ptr %14486, align 8, !tbaa !73
  br label %14505

14503:                                            ; preds = %14498
  %14504 = atomicrmw volatile add ptr %14486, i32 -1 acq_rel, align 4
  br label %14505

14505:                                            ; preds = %14503, %14501
  %14506 = phi i32 [ %14489, %14501 ], [ %14504, %14503 ]
  %14507 = icmp eq i32 %14506, 1
  br i1 %14507, label %14508, label %14509, !prof !42

14508:                                            ; preds = %14505
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %14483) #21
  br label %14509

14509:                                            ; preds = %14508, %14505, %14490, %14481
  %14510 = getelementptr inbounds %struct.TestCase, ptr %37, i64 0, i32 2
  %14511 = load ptr, ptr %14510, align 8, !tbaa !23
  %14512 = getelementptr inbounds %struct.TestCase, ptr %37, i64 0, i32 2, i32 2
  %14513 = icmp eq ptr %14511, %14512
  br i1 %14513, label %14515, label %14514

14514:                                            ; preds = %14509
  call void @_ZdlPv(ptr noundef %14511) #22
  br label %14515

14515:                                            ; preds = %14514, %14509
  %14516 = load ptr, ptr %37, align 8, !tbaa !23
  %14517 = getelementptr inbounds %struct.TestCase, ptr %37, i64 0, i32 0, i32 2
  %14518 = icmp eq ptr %14516, %14517
  br i1 %14518, label %14520, label %14519

14519:                                            ; preds = %14515
  call void @_ZdlPv(ptr noundef %14516) #22
  br label %14520

14520:                                            ; preds = %14519, %14515
  %14521 = load ptr, ptr %38, align 8, !tbaa !23
  %14522 = icmp eq ptr %14521, %14474
  br i1 %14522, label %14572, label %14523

14523:                                            ; preds = %14520
  call void @_ZdlPv(ptr noundef %14521) #22
  br label %14572

14524:                                            ; preds = %14473
  %14525 = landingpad { ptr, i32 }
          cleanup
  br label %14566

14526:                                            ; preds = %14479
  %14527 = landingpad { ptr, i32 }
          cleanup
  %14528 = getelementptr inbounds %struct.TestCase, ptr %37, i64 0, i32 3, i32 0, i32 1
  %14529 = load ptr, ptr %14528, align 8, !tbaa !88
  %14530 = icmp eq ptr %14529, null
  br i1 %14530, label %14555, label %14531

14531:                                            ; preds = %14526
  %14532 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14529, i64 0, i32 1
  %14533 = load atomic i64, ptr %14532 acquire, align 8
  %14534 = icmp eq i64 %14533, 4294967297
  %14535 = trunc i64 %14533 to i32
  br i1 %14534, label %14536, label %14544

14536:                                            ; preds = %14531
  store i32 0, ptr %14532, align 8, !tbaa !90
  %14537 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14529, i64 0, i32 2
  store i32 0, ptr %14537, align 4, !tbaa !92
  %14538 = load ptr, ptr %14529, align 8, !tbaa !58
  %14539 = getelementptr inbounds ptr, ptr %14538, i64 2
  %14540 = load ptr, ptr %14539, align 8
  call void %14540(ptr noundef nonnull align 8 dereferenceable(16) %14529) #21
  %14541 = load ptr, ptr %14529, align 8, !tbaa !58
  %14542 = getelementptr inbounds ptr, ptr %14541, i64 3
  %14543 = load ptr, ptr %14542, align 8
  call void %14543(ptr noundef nonnull align 8 dereferenceable(16) %14529) #21
  br label %14555

14544:                                            ; preds = %14531
  %14545 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %14546 = icmp eq i8 %14545, 0
  br i1 %14546, label %14549, label %14547

14547:                                            ; preds = %14544
  %14548 = add nsw i32 %14535, -1
  store i32 %14548, ptr %14532, align 8, !tbaa !73
  br label %14551

14549:                                            ; preds = %14544
  %14550 = atomicrmw volatile add ptr %14532, i32 -1 acq_rel, align 4
  br label %14551

14551:                                            ; preds = %14549, %14547
  %14552 = phi i32 [ %14535, %14547 ], [ %14550, %14549 ]
  %14553 = icmp eq i32 %14552, 1
  br i1 %14553, label %14554, label %14555, !prof !42

14554:                                            ; preds = %14551
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %14529) #21
  br label %14555

14555:                                            ; preds = %14554, %14551, %14536, %14526
  %14556 = getelementptr inbounds %struct.TestCase, ptr %37, i64 0, i32 2
  %14557 = load ptr, ptr %14556, align 8, !tbaa !23
  %14558 = getelementptr inbounds %struct.TestCase, ptr %37, i64 0, i32 2, i32 2
  %14559 = icmp eq ptr %14557, %14558
  br i1 %14559, label %14561, label %14560

14560:                                            ; preds = %14555
  call void @_ZdlPv(ptr noundef %14557) #22
  br label %14561

14561:                                            ; preds = %14560, %14555
  %14562 = load ptr, ptr %37, align 8, !tbaa !23
  %14563 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %37, i64 0, i32 2
  %14564 = icmp eq ptr %14562, %14563
  br i1 %14564, label %14566, label %14565

14565:                                            ; preds = %14561
  call void @_ZdlPv(ptr noundef %14562) #22
  br label %14566

14566:                                            ; preds = %14565, %14561, %14524
  %14567 = phi { ptr, i32 } [ %14525, %14524 ], [ %14527, %14561 ], [ %14527, %14565 ]
  %14568 = load ptr, ptr %38, align 8, !tbaa !23
  %14569 = icmp eq ptr %14568, %14474
  br i1 %14569, label %14571, label %14570

14570:                                            ; preds = %14566
  call void @_ZdlPv(ptr noundef %14568) #22
  br label %14571

14571:                                            ; preds = %14570, %14566
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %37) #21
  br label %762

14572:                                            ; preds = %14520, %14523
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %37) #21
  store i32 %14480, ptr @dummy493, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %38)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %35) #21
  %14573 = getelementptr inbounds i8, ptr %35, i64 8
  store i64 0, ptr %14573, align 8
  %14574 = getelementptr inbounds %"class.std::function", ptr %35, i64 0, i32 1
  %14575 = getelementptr inbounds %"class.std::_Function_base", ptr %35, i64 0, i32 1
  store ptr @_Z18CheckAvgIterationsRK7Results, ptr %35, align 8, !tbaa !47
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E9_M_invokeERKSt9_Any_dataS2_, ptr %14574, align 8, !tbaa !115
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, ptr %14575, align 8, !tbaa !118
  %14576 = invoke noundef i64 @_Z10AddCheckerPKcRKSt8functionIFvRK7ResultsEE(ptr noundef nonnull @.str.174, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %14577 unwind label %14585

14577:                                            ; preds = %14572
  %14578 = load ptr, ptr %14575, align 8, !tbaa !118
  %14579 = icmp eq ptr %14578, null
  br i1 %14579, label %14595, label %14580

14580:                                            ; preds = %14577
  %14581 = invoke noundef zeroext i1 %14578(ptr noundef nonnull align 8 dereferenceable(16) %35, ptr noundef nonnull align 8 dereferenceable(16) %35, i32 noundef 3)
          to label %14595 unwind label %14582

14582:                                            ; preds = %14580
  %14583 = landingpad { ptr, i32 }
          catch ptr null
  %14584 = extractvalue { ptr, i32 } %14583, 0
  call void @__clang_call_terminate(ptr %14584) #24
  unreachable

14585:                                            ; preds = %14572
  %14586 = landingpad { ptr, i32 }
          cleanup
  %14587 = load ptr, ptr %14575, align 8, !tbaa !118
  %14588 = icmp eq ptr %14587, null
  br i1 %14588, label %14594, label %14589

14589:                                            ; preds = %14585
  %14590 = invoke noundef zeroext i1 %14587(ptr noundef nonnull align 8 dereferenceable(16) %35, ptr noundef nonnull align 8 dereferenceable(16) %35, i32 noundef 3)
          to label %14594 unwind label %14591

14591:                                            ; preds = %14589
  %14592 = landingpad { ptr, i32 }
          catch ptr null
  %14593 = extractvalue { ptr, i32 } %14592, 0
  call void @__clang_call_terminate(ptr %14593) #24
  unreachable

14594:                                            ; preds = %14589, %14585
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %35) #21
  br label %762

14595:                                            ; preds = %14577, %14580
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %35) #21
  store i64 %14576, ptr @dummy502, align 8, !tbaa !74
  %14596 = call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #25
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %14596, ptr noundef nonnull @.str.187)
          to label %14599 unwind label %14597

14597:                                            ; preds = %14595
  %14598 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %14596) #22
  br label %762

14599:                                            ; preds = %14595
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %14596, align 8, !tbaa !58
  %14600 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %14596, i64 0, i32 1
  store ptr @_Z30BM_Counters_kAvgIterationsRateRN9benchmark5StateE, ptr %14600, align 8, !tbaa !93
  %14601 = call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %14596)
  store ptr %14601, ptr @_ZL28benchmark_uniq_13_benchmark_, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %34)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %33) #21
  %14602 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %34, i64 0, i32 2
  store ptr %14602, ptr %34, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %32) #21
  store i64 78, ptr %32, align 8, !tbaa !74
  %14603 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %34, ptr noundef nonnull align 8 dereferenceable(8) %32, i64 noundef 0)
  store ptr %14603, ptr %34, align 8, !tbaa !23
  %14604 = load i64, ptr %32, align 8, !tbaa !74
  store i64 %14604, ptr %14602, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(78) %14603, ptr noundef nonnull align 1 dereferenceable(78) @.str.189, i64 78, i1 false)
  %14605 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %34, i64 0, i32 1
  store i64 %14604, ptr %14605, align 8, !tbaa !10
  %14606 = getelementptr inbounds i8, ptr %14603, i64 %14604
  store i8 0, ptr %14606, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %32) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %33, ptr noundef nonnull %34, i32 noundef 0)
          to label %14607 unwind label %14652

14607:                                            ; preds = %14599
  %14608 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 0, ptr nonnull %33, i64 1)
          to label %14609 unwind label %14654

14609:                                            ; preds = %14607
  %14610 = getelementptr inbounds %struct.TestCase, ptr %33, i64 0, i32 3, i32 0, i32 1
  %14611 = load ptr, ptr %14610, align 8, !tbaa !88
  %14612 = icmp eq ptr %14611, null
  br i1 %14612, label %14637, label %14613

14613:                                            ; preds = %14609
  %14614 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14611, i64 0, i32 1
  %14615 = load atomic i64, ptr %14614 acquire, align 8
  %14616 = icmp eq i64 %14615, 4294967297
  %14617 = trunc i64 %14615 to i32
  br i1 %14616, label %14618, label %14626

14618:                                            ; preds = %14613
  store i32 0, ptr %14614, align 8, !tbaa !90
  %14619 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14611, i64 0, i32 2
  store i32 0, ptr %14619, align 4, !tbaa !92
  %14620 = load ptr, ptr %14611, align 8, !tbaa !58
  %14621 = getelementptr inbounds ptr, ptr %14620, i64 2
  %14622 = load ptr, ptr %14621, align 8
  call void %14622(ptr noundef nonnull align 8 dereferenceable(16) %14611) #21
  %14623 = load ptr, ptr %14611, align 8, !tbaa !58
  %14624 = getelementptr inbounds ptr, ptr %14623, i64 3
  %14625 = load ptr, ptr %14624, align 8
  call void %14625(ptr noundef nonnull align 8 dereferenceable(16) %14611) #21
  br label %14637

14626:                                            ; preds = %14613
  %14627 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %14628 = icmp eq i8 %14627, 0
  br i1 %14628, label %14631, label %14629

14629:                                            ; preds = %14626
  %14630 = add nsw i32 %14617, -1
  store i32 %14630, ptr %14614, align 8, !tbaa !73
  br label %14633

14631:                                            ; preds = %14626
  %14632 = atomicrmw volatile add ptr %14614, i32 -1 acq_rel, align 4
  br label %14633

14633:                                            ; preds = %14631, %14629
  %14634 = phi i32 [ %14617, %14629 ], [ %14632, %14631 ]
  %14635 = icmp eq i32 %14634, 1
  br i1 %14635, label %14636, label %14637, !prof !42

14636:                                            ; preds = %14633
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %14611) #21
  br label %14637

14637:                                            ; preds = %14636, %14633, %14618, %14609
  %14638 = getelementptr inbounds %struct.TestCase, ptr %33, i64 0, i32 2
  %14639 = load ptr, ptr %14638, align 8, !tbaa !23
  %14640 = getelementptr inbounds %struct.TestCase, ptr %33, i64 0, i32 2, i32 2
  %14641 = icmp eq ptr %14639, %14640
  br i1 %14641, label %14643, label %14642

14642:                                            ; preds = %14637
  call void @_ZdlPv(ptr noundef %14639) #22
  br label %14643

14643:                                            ; preds = %14642, %14637
  %14644 = load ptr, ptr %33, align 8, !tbaa !23
  %14645 = getelementptr inbounds %struct.TestCase, ptr %33, i64 0, i32 0, i32 2
  %14646 = icmp eq ptr %14644, %14645
  br i1 %14646, label %14648, label %14647

14647:                                            ; preds = %14643
  call void @_ZdlPv(ptr noundef %14644) #22
  br label %14648

14648:                                            ; preds = %14647, %14643
  %14649 = load ptr, ptr %34, align 8, !tbaa !23
  %14650 = icmp eq ptr %14649, %14602
  br i1 %14650, label %14700, label %14651

14651:                                            ; preds = %14648
  call void @_ZdlPv(ptr noundef %14649) #22
  br label %14700

14652:                                            ; preds = %14599
  %14653 = landingpad { ptr, i32 }
          cleanup
  br label %14694

14654:                                            ; preds = %14607
  %14655 = landingpad { ptr, i32 }
          cleanup
  %14656 = getelementptr inbounds %struct.TestCase, ptr %33, i64 0, i32 3, i32 0, i32 1
  %14657 = load ptr, ptr %14656, align 8, !tbaa !88
  %14658 = icmp eq ptr %14657, null
  br i1 %14658, label %14683, label %14659

14659:                                            ; preds = %14654
  %14660 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14657, i64 0, i32 1
  %14661 = load atomic i64, ptr %14660 acquire, align 8
  %14662 = icmp eq i64 %14661, 4294967297
  %14663 = trunc i64 %14661 to i32
  br i1 %14662, label %14664, label %14672

14664:                                            ; preds = %14659
  store i32 0, ptr %14660, align 8, !tbaa !90
  %14665 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14657, i64 0, i32 2
  store i32 0, ptr %14665, align 4, !tbaa !92
  %14666 = load ptr, ptr %14657, align 8, !tbaa !58
  %14667 = getelementptr inbounds ptr, ptr %14666, i64 2
  %14668 = load ptr, ptr %14667, align 8
  call void %14668(ptr noundef nonnull align 8 dereferenceable(16) %14657) #21
  %14669 = load ptr, ptr %14657, align 8, !tbaa !58
  %14670 = getelementptr inbounds ptr, ptr %14669, i64 3
  %14671 = load ptr, ptr %14670, align 8
  call void %14671(ptr noundef nonnull align 8 dereferenceable(16) %14657) #21
  br label %14683

14672:                                            ; preds = %14659
  %14673 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %14674 = icmp eq i8 %14673, 0
  br i1 %14674, label %14677, label %14675

14675:                                            ; preds = %14672
  %14676 = add nsw i32 %14663, -1
  store i32 %14676, ptr %14660, align 8, !tbaa !73
  br label %14679

14677:                                            ; preds = %14672
  %14678 = atomicrmw volatile add ptr %14660, i32 -1 acq_rel, align 4
  br label %14679

14679:                                            ; preds = %14677, %14675
  %14680 = phi i32 [ %14663, %14675 ], [ %14678, %14677 ]
  %14681 = icmp eq i32 %14680, 1
  br i1 %14681, label %14682, label %14683, !prof !42

14682:                                            ; preds = %14679
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %14657) #21
  br label %14683

14683:                                            ; preds = %14682, %14679, %14664, %14654
  %14684 = getelementptr inbounds %struct.TestCase, ptr %33, i64 0, i32 2
  %14685 = load ptr, ptr %14684, align 8, !tbaa !23
  %14686 = getelementptr inbounds %struct.TestCase, ptr %33, i64 0, i32 2, i32 2
  %14687 = icmp eq ptr %14685, %14686
  br i1 %14687, label %14689, label %14688

14688:                                            ; preds = %14683
  call void @_ZdlPv(ptr noundef %14685) #22
  br label %14689

14689:                                            ; preds = %14688, %14683
  %14690 = load ptr, ptr %33, align 8, !tbaa !23
  %14691 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %33, i64 0, i32 2
  %14692 = icmp eq ptr %14690, %14691
  br i1 %14692, label %14694, label %14693

14693:                                            ; preds = %14689
  call void @_ZdlPv(ptr noundef %14690) #22
  br label %14694

14694:                                            ; preds = %14693, %14689, %14652
  %14695 = phi { ptr, i32 } [ %14653, %14652 ], [ %14655, %14689 ], [ %14655, %14693 ]
  %14696 = load ptr, ptr %34, align 8, !tbaa !23
  %14697 = icmp eq ptr %14696, %14602
  br i1 %14697, label %14699, label %14698

14698:                                            ; preds = %14694
  call void @_ZdlPv(ptr noundef %14696) #22
  br label %14699

14699:                                            ; preds = %14698, %14694
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %33) #21
  br label %762

14700:                                            ; preds = %14648, %14651
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %33) #21
  store i32 %14608, ptr @dummy520, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %34)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %17)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %18)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %19)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %20)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %21)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %22)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %23)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %24)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %25)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %26)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %27)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %28)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %29)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %30)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %31)
  call void @llvm.lifetime.start.p0(i64 1320, ptr nonnull %16) #21
  %14701 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %17, i64 0, i32 2
  store ptr %14701, ptr %17, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %15) #21
  store i64 42, ptr %15, align 8, !tbaa !74
  %14702 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %17, ptr noundef nonnull align 8 dereferenceable(8) %15, i64 noundef 0)
  store ptr %14702, ptr %17, align 8, !tbaa !23
  %14703 = load i64, ptr %15, align 8, !tbaa !74
  store i64 %14703, ptr %14701, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(42) %14702, ptr noundef nonnull align 1 dereferenceable(42) @.str.191, i64 42, i1 false)
  %14704 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %17, i64 0, i32 1
  store i64 %14703, ptr %14704, align 8, !tbaa !10
  %14705 = getelementptr inbounds i8, ptr %14702, i64 %14703
  store i8 0, ptr %14705, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %15) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %16, ptr noundef nonnull %17, i32 noundef 0)
          to label %14706 unwind label %14922

14706:                                            ; preds = %14700
  %14707 = getelementptr inbounds %struct.TestCase, ptr %16, i64 1
  %14708 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %18, i64 0, i32 2
  store ptr %14708, ptr %18, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14) #21
  store i64 20, ptr %14, align 8, !tbaa !74
  %14709 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %18, ptr noundef nonnull align 8 dereferenceable(8) %14, i64 noundef 0)
          to label %14710 unwind label %14924

14710:                                            ; preds = %14706
  store ptr %14709, ptr %18, align 8, !tbaa !23
  %14711 = load i64, ptr %14, align 8, !tbaa !74
  store i64 %14711, ptr %14708, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %14709, ptr noundef nonnull align 1 dereferenceable(20) @.str.192, i64 20, i1 false)
  %14712 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %18, i64 0, i32 1
  store i64 %14711, ptr %14712, align 8, !tbaa !10
  %14713 = load ptr, ptr %18, align 8, !tbaa !23
  %14714 = getelementptr inbounds i8, ptr %14713, i64 %14711
  store i8 0, ptr %14714, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %14707, ptr noundef nonnull %18, i32 noundef 1)
          to label %14715 unwind label %14926

14715:                                            ; preds = %14710
  %14716 = getelementptr inbounds %struct.TestCase, ptr %16, i64 2
  %14717 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 0, i32 2
  store ptr %14717, ptr %19, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #21
  store i64 32, ptr %13, align 8, !tbaa !74
  %14718 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %19, ptr noundef nonnull align 8 dereferenceable(8) %13, i64 noundef 0)
          to label %14719 unwind label %14928

14719:                                            ; preds = %14715
  store ptr %14718, ptr %19, align 8, !tbaa !23
  %14720 = load i64, ptr %13, align 8, !tbaa !74
  store i64 %14720, ptr %14717, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %14718, ptr noundef nonnull align 1 dereferenceable(32) @.str.15, i64 32, i1 false)
  %14721 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 0, i32 1
  store i64 %14720, ptr %14721, align 8, !tbaa !10
  %14722 = load ptr, ptr %19, align 8, !tbaa !23
  %14723 = getelementptr inbounds i8, ptr %14722, i64 %14720
  store i8 0, ptr %14723, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %14716, ptr noundef nonnull %19, i32 noundef 1)
          to label %14724 unwind label %14930

14724:                                            ; preds = %14719
  %14725 = getelementptr inbounds %struct.TestCase, ptr %16, i64 3
  %14726 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %20, i64 0, i32 2
  store ptr %14726, ptr %20, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #21
  store i64 46, ptr %12, align 8, !tbaa !74
  %14727 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %20, ptr noundef nonnull align 8 dereferenceable(8) %12, i64 noundef 0)
          to label %14728 unwind label %14932

14728:                                            ; preds = %14724
  store ptr %14727, ptr %20, align 8, !tbaa !23
  %14729 = load i64, ptr %12, align 8, !tbaa !74
  store i64 %14729, ptr %14726, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(46) %14727, ptr noundef nonnull align 1 dereferenceable(46) @.str.193, i64 46, i1 false)
  %14730 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %20, i64 0, i32 1
  store i64 %14729, ptr %14730, align 8, !tbaa !10
  %14731 = getelementptr inbounds i8, ptr %14727, i64 %14729
  store i8 0, ptr %14731, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %14725, ptr noundef nonnull %20, i32 noundef 1)
          to label %14732 unwind label %14934

14732:                                            ; preds = %14728
  %14733 = getelementptr inbounds %struct.TestCase, ptr %16, i64 4
  %14734 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %21, i64 0, i32 2
  store ptr %14734, ptr %21, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #21
  store i64 25, ptr %11, align 8, !tbaa !74
  %14735 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %21, ptr noundef nonnull align 8 dereferenceable(8) %11, i64 noundef 0)
          to label %14736 unwind label %14936

14736:                                            ; preds = %14732
  store ptr %14735, ptr %21, align 8, !tbaa !23
  %14737 = load i64, ptr %11, align 8, !tbaa !74
  store i64 %14737, ptr %14734, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(25) %14735, ptr noundef nonnull align 1 dereferenceable(25) @.str.17, i64 25, i1 false)
  %14738 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %21, i64 0, i32 1
  store i64 %14737, ptr %14738, align 8, !tbaa !10
  %14739 = load ptr, ptr %21, align 8, !tbaa !23
  %14740 = getelementptr inbounds i8, ptr %14739, i64 %14737
  store i8 0, ptr %14740, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %14733, ptr noundef nonnull %21, i32 noundef 1)
          to label %14741 unwind label %14938

14741:                                            ; preds = %14736
  %14742 = getelementptr inbounds %struct.TestCase, ptr %16, i64 5
  %14743 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %22, i64 0, i32 2
  store ptr %14743, ptr %22, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #21
  store i64 18, ptr %10, align 8, !tbaa !74
  %14744 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %22, ptr noundef nonnull align 8 dereferenceable(8) %10, i64 noundef 0)
          to label %14745 unwind label %14940

14745:                                            ; preds = %14741
  store ptr %14744, ptr %22, align 8, !tbaa !23
  %14746 = load i64, ptr %10, align 8, !tbaa !74
  store i64 %14746, ptr %14743, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(18) %14744, ptr noundef nonnull align 1 dereferenceable(18) @.str.18, i64 18, i1 false)
  %14747 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %22, i64 0, i32 1
  store i64 %14746, ptr %14747, align 8, !tbaa !10
  %14748 = load ptr, ptr %22, align 8, !tbaa !23
  %14749 = getelementptr inbounds i8, ptr %14748, i64 %14746
  store i8 0, ptr %14749, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %14742, ptr noundef nonnull %22, i32 noundef 1)
          to label %14750 unwind label %14942

14750:                                            ; preds = %14745
  %14751 = getelementptr inbounds %struct.TestCase, ptr %16, i64 6
  %14752 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %23, i64 0, i32 2
  store ptr %14752, ptr %23, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #21
  store i64 23, ptr %9, align 8, !tbaa !74
  %14753 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %23, ptr noundef nonnull align 8 dereferenceable(8) %9, i64 noundef 0)
          to label %14754 unwind label %14944

14754:                                            ; preds = %14750
  store ptr %14753, ptr %23, align 8, !tbaa !23
  %14755 = load i64, ptr %9, align 8, !tbaa !74
  store i64 %14755, ptr %14752, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(23) %14753, ptr noundef nonnull align 1 dereferenceable(23) @.str.19, i64 23, i1 false)
  %14756 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %23, i64 0, i32 1
  store i64 %14755, ptr %14756, align 8, !tbaa !10
  %14757 = load ptr, ptr %23, align 8, !tbaa !23
  %14758 = getelementptr inbounds i8, ptr %14757, i64 %14755
  store i8 0, ptr %14758, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %14751, ptr noundef nonnull %23, i32 noundef 1)
          to label %14759 unwind label %14946

14759:                                            ; preds = %14754
  %14760 = getelementptr inbounds %struct.TestCase, ptr %16, i64 7
  %14761 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %24, i64 0, i32 2
  store ptr %14761, ptr %24, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %14761, ptr noundef nonnull align 1 dereferenceable(14) @.str.20, i64 14, i1 false)
  %14762 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %24, i64 0, i32 1
  store i64 14, ptr %14762, align 8, !tbaa !10
  %14763 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %24, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %14763, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %14760, ptr noundef nonnull %24, i32 noundef 1)
          to label %14764 unwind label %14948

14764:                                            ; preds = %14759
  %14765 = getelementptr inbounds %struct.TestCase, ptr %16, i64 8
  %14766 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %25, i64 0, i32 2
  store ptr %14766, ptr %25, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #21
  store i64 20, ptr %8, align 8, !tbaa !74
  %14767 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %25, ptr noundef nonnull align 8 dereferenceable(8) %8, i64 noundef 0)
          to label %14768 unwind label %14950

14768:                                            ; preds = %14764
  store ptr %14767, ptr %25, align 8, !tbaa !23
  %14769 = load i64, ptr %8, align 8, !tbaa !74
  store i64 %14769, ptr %14766, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %14767, ptr noundef nonnull align 1 dereferenceable(20) @.str.21, i64 20, i1 false)
  %14770 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %25, i64 0, i32 1
  store i64 %14769, ptr %14770, align 8, !tbaa !10
  %14771 = load ptr, ptr %25, align 8, !tbaa !23
  %14772 = getelementptr inbounds i8, ptr %14771, i64 %14769
  store i8 0, ptr %14772, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %14765, ptr noundef nonnull %25, i32 noundef 1)
          to label %14773 unwind label %14952

14773:                                            ; preds = %14768
  %14774 = getelementptr inbounds %struct.TestCase, ptr %16, i64 9
  %14775 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %26, i64 0, i32 2
  store ptr %14775, ptr %26, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #21
  store i64 21, ptr %7, align 8, !tbaa !74
  %14776 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %26, ptr noundef nonnull align 8 dereferenceable(8) %7, i64 noundef 0)
          to label %14777 unwind label %14954

14777:                                            ; preds = %14773
  store ptr %14776, ptr %26, align 8, !tbaa !23
  %14778 = load i64, ptr %7, align 8, !tbaa !74
  store i64 %14778, ptr %14775, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %14776, ptr noundef nonnull align 1 dereferenceable(21) @.str.22, i64 21, i1 false)
  %14779 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %26, i64 0, i32 1
  store i64 %14778, ptr %14779, align 8, !tbaa !10
  %14780 = load ptr, ptr %26, align 8, !tbaa !23
  %14781 = getelementptr inbounds i8, ptr %14780, i64 %14778
  store i8 0, ptr %14781, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %14774, ptr noundef nonnull %26, i32 noundef 1)
          to label %14782 unwind label %14956

14782:                                            ; preds = %14777
  %14783 = getelementptr inbounds %struct.TestCase, ptr %16, i64 10
  %14784 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %27, i64 0, i32 2
  store ptr %14784, ptr %27, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #21
  store i64 20, ptr %6, align 8, !tbaa !74
  %14785 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %27, ptr noundef nonnull align 8 dereferenceable(8) %6, i64 noundef 0)
          to label %14786 unwind label %14958

14786:                                            ; preds = %14782
  store ptr %14785, ptr %27, align 8, !tbaa !23
  %14787 = load i64, ptr %6, align 8, !tbaa !74
  store i64 %14787, ptr %14784, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %14785, ptr noundef nonnull align 1 dereferenceable(20) @.str.23, i64 20, i1 false)
  %14788 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %27, i64 0, i32 1
  store i64 %14787, ptr %14788, align 8, !tbaa !10
  %14789 = load ptr, ptr %27, align 8, !tbaa !23
  %14790 = getelementptr inbounds i8, ptr %14789, i64 %14787
  store i8 0, ptr %14790, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %14783, ptr noundef nonnull %27, i32 noundef 1)
          to label %14791 unwind label %14960

14791:                                            ; preds = %14786
  %14792 = getelementptr inbounds %struct.TestCase, ptr %16, i64 11
  %14793 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %28, i64 0, i32 2
  store ptr %14793, ptr %28, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #21
  store i64 19, ptr %5, align 8, !tbaa !74
  %14794 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %28, ptr noundef nonnull align 8 dereferenceable(8) %5, i64 noundef 0)
          to label %14795 unwind label %14962

14795:                                            ; preds = %14791
  store ptr %14794, ptr %28, align 8, !tbaa !23
  %14796 = load i64, ptr %5, align 8, !tbaa !74
  store i64 %14796, ptr %14793, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(19) %14794, ptr noundef nonnull align 1 dereferenceable(19) @.str.24, i64 19, i1 false)
  %14797 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %28, i64 0, i32 1
  store i64 %14796, ptr %14797, align 8, !tbaa !10
  %14798 = load ptr, ptr %28, align 8, !tbaa !23
  %14799 = getelementptr inbounds i8, ptr %14798, i64 %14796
  store i8 0, ptr %14799, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %14792, ptr noundef nonnull %28, i32 noundef 1)
          to label %14800 unwind label %14964

14800:                                            ; preds = %14795
  %14801 = getelementptr inbounds %struct.TestCase, ptr %16, i64 12
  %14802 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 2
  store ptr %14802, ptr %29, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(15) %14802, ptr noundef nonnull align 1 dereferenceable(15) @.str.25, i64 15, i1 false)
  %14803 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 1
  store i64 15, ptr %14803, align 8, !tbaa !10
  %14804 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 2, i32 1, i64 7
  store i8 0, ptr %14804, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %14801, ptr noundef nonnull %29, i32 noundef 1)
          to label %14805 unwind label %14966

14805:                                            ; preds = %14800
  %14806 = getelementptr inbounds %struct.TestCase, ptr %16, i64 13
  %14807 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %30, i64 0, i32 2
  store ptr %14807, ptr %30, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %14807, ptr noundef nonnull align 1 dereferenceable(14) @.str.26, i64 14, i1 false)
  %14808 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %30, i64 0, i32 1
  store i64 14, ptr %14808, align 8, !tbaa !10
  %14809 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %30, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %14809, align 2, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %14806, ptr noundef nonnull %30, i32 noundef 1)
          to label %14810 unwind label %14968

14810:                                            ; preds = %14805
  %14811 = getelementptr inbounds %struct.TestCase, ptr %16, i64 14
  %14812 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %31, i64 0, i32 2
  store ptr %14812, ptr %31, align 8, !tbaa !5
  store i8 125, ptr %14812, align 8, !tbaa !13
  %14813 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %31, i64 0, i32 1
  store i64 1, ptr %14813, align 8, !tbaa !10
  %14814 = getelementptr inbounds i8, ptr %31, i64 17
  store i8 0, ptr %14814, align 1, !tbaa !13
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %14811, ptr noundef nonnull %31, i32 noundef 1)
          to label %14815 unwind label %14970

14815:                                            ; preds = %14810
  %14816 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 2, ptr nonnull %16, i64 15)
          to label %14817 unwind label %14972

14817:                                            ; preds = %14815
  %14818 = getelementptr inbounds %struct.TestCase, ptr %16, i64 15
  br label %14819

14819:                                            ; preds = %14860, %14817
  %14820 = phi ptr [ %14818, %14817 ], [ %14821, %14860 ]
  %14821 = getelementptr inbounds %struct.TestCase, ptr %14820, i64 -1
  %14822 = getelementptr %struct.TestCase, ptr %14820, i64 -1, i32 3, i32 0, i32 1
  %14823 = load ptr, ptr %14822, align 8, !tbaa !88
  %14824 = icmp eq ptr %14823, null
  br i1 %14824, label %14849, label %14825

14825:                                            ; preds = %14819
  %14826 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14823, i64 0, i32 1
  %14827 = load atomic i64, ptr %14826 acquire, align 8
  %14828 = icmp eq i64 %14827, 4294967297
  %14829 = trunc i64 %14827 to i32
  br i1 %14828, label %14830, label %14838

14830:                                            ; preds = %14825
  store i32 0, ptr %14826, align 8, !tbaa !90
  %14831 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14823, i64 0, i32 2
  store i32 0, ptr %14831, align 4, !tbaa !92
  %14832 = load ptr, ptr %14823, align 8, !tbaa !58
  %14833 = getelementptr inbounds ptr, ptr %14832, i64 2
  %14834 = load ptr, ptr %14833, align 8
  call void %14834(ptr noundef nonnull align 8 dereferenceable(16) %14823) #21
  %14835 = load ptr, ptr %14823, align 8, !tbaa !58
  %14836 = getelementptr inbounds ptr, ptr %14835, i64 3
  %14837 = load ptr, ptr %14836, align 8
  call void %14837(ptr noundef nonnull align 8 dereferenceable(16) %14823) #21
  br label %14849

14838:                                            ; preds = %14825
  %14839 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %14840 = icmp eq i8 %14839, 0
  br i1 %14840, label %14843, label %14841

14841:                                            ; preds = %14838
  %14842 = add nsw i32 %14829, -1
  store i32 %14842, ptr %14826, align 8, !tbaa !73
  br label %14845

14843:                                            ; preds = %14838
  %14844 = atomicrmw volatile add ptr %14826, i32 -1 acq_rel, align 4
  br label %14845

14845:                                            ; preds = %14843, %14841
  %14846 = phi i32 [ %14829, %14841 ], [ %14844, %14843 ]
  %14847 = icmp eq i32 %14846, 1
  br i1 %14847, label %14848, label %14849, !prof !42

14848:                                            ; preds = %14845
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %14823) #21
  br label %14849

14849:                                            ; preds = %14848, %14845, %14830, %14819
  %14850 = getelementptr %struct.TestCase, ptr %14820, i64 -1, i32 2
  %14851 = load ptr, ptr %14850, align 8, !tbaa !23
  %14852 = getelementptr %struct.TestCase, ptr %14820, i64 -1, i32 2, i32 2
  %14853 = icmp eq ptr %14851, %14852
  br i1 %14853, label %14855, label %14854

14854:                                            ; preds = %14849
  call void @_ZdlPv(ptr noundef %14851) #22
  br label %14855

14855:                                            ; preds = %14854, %14849
  %14856 = load ptr, ptr %14821, align 8, !tbaa !23
  %14857 = getelementptr %struct.TestCase, ptr %14820, i64 -1, i32 0, i32 2
  %14858 = icmp eq ptr %14856, %14857
  br i1 %14858, label %14860, label %14859

14859:                                            ; preds = %14855
  call void @_ZdlPv(ptr noundef %14856) #22
  br label %14860

14860:                                            ; preds = %14859, %14855
  %14861 = icmp eq ptr %14821, %16
  br i1 %14861, label %14862, label %14819

14862:                                            ; preds = %14860
  %14863 = load ptr, ptr %31, align 8, !tbaa !23
  %14864 = icmp eq ptr %14863, %14812
  br i1 %14864, label %14866, label %14865

14865:                                            ; preds = %14862
  call void @_ZdlPv(ptr noundef %14863) #22
  br label %14866

14866:                                            ; preds = %14865, %14862
  %14867 = load ptr, ptr %30, align 8, !tbaa !23
  %14868 = icmp eq ptr %14867, %14807
  br i1 %14868, label %14870, label %14869

14869:                                            ; preds = %14866
  call void @_ZdlPv(ptr noundef %14867) #22
  br label %14870

14870:                                            ; preds = %14869, %14866
  %14871 = load ptr, ptr %29, align 8, !tbaa !23
  %14872 = icmp eq ptr %14871, %14802
  br i1 %14872, label %14874, label %14873

14873:                                            ; preds = %14870
  call void @_ZdlPv(ptr noundef %14871) #22
  br label %14874

14874:                                            ; preds = %14873, %14870
  %14875 = load ptr, ptr %28, align 8, !tbaa !23
  %14876 = icmp eq ptr %14875, %14793
  br i1 %14876, label %14878, label %14877

14877:                                            ; preds = %14874
  call void @_ZdlPv(ptr noundef %14875) #22
  br label %14878

14878:                                            ; preds = %14877, %14874
  %14879 = load ptr, ptr %27, align 8, !tbaa !23
  %14880 = icmp eq ptr %14879, %14784
  br i1 %14880, label %14882, label %14881

14881:                                            ; preds = %14878
  call void @_ZdlPv(ptr noundef %14879) #22
  br label %14882

14882:                                            ; preds = %14881, %14878
  %14883 = load ptr, ptr %26, align 8, !tbaa !23
  %14884 = icmp eq ptr %14883, %14775
  br i1 %14884, label %14886, label %14885

14885:                                            ; preds = %14882
  call void @_ZdlPv(ptr noundef %14883) #22
  br label %14886

14886:                                            ; preds = %14885, %14882
  %14887 = load ptr, ptr %25, align 8, !tbaa !23
  %14888 = icmp eq ptr %14887, %14766
  br i1 %14888, label %14890, label %14889

14889:                                            ; preds = %14886
  call void @_ZdlPv(ptr noundef %14887) #22
  br label %14890

14890:                                            ; preds = %14889, %14886
  %14891 = load ptr, ptr %24, align 8, !tbaa !23
  %14892 = icmp eq ptr %14891, %14761
  br i1 %14892, label %14894, label %14893

14893:                                            ; preds = %14890
  call void @_ZdlPv(ptr noundef %14891) #22
  br label %14894

14894:                                            ; preds = %14893, %14890
  %14895 = load ptr, ptr %23, align 8, !tbaa !23
  %14896 = icmp eq ptr %14895, %14752
  br i1 %14896, label %14898, label %14897

14897:                                            ; preds = %14894
  call void @_ZdlPv(ptr noundef %14895) #22
  br label %14898

14898:                                            ; preds = %14897, %14894
  %14899 = load ptr, ptr %22, align 8, !tbaa !23
  %14900 = icmp eq ptr %14899, %14743
  br i1 %14900, label %14902, label %14901

14901:                                            ; preds = %14898
  call void @_ZdlPv(ptr noundef %14899) #22
  br label %14902

14902:                                            ; preds = %14901, %14898
  %14903 = load ptr, ptr %21, align 8, !tbaa !23
  %14904 = icmp eq ptr %14903, %14734
  br i1 %14904, label %14906, label %14905

14905:                                            ; preds = %14902
  call void @_ZdlPv(ptr noundef %14903) #22
  br label %14906

14906:                                            ; preds = %14905, %14902
  %14907 = load ptr, ptr %20, align 8, !tbaa !23
  %14908 = icmp eq ptr %14907, %14726
  br i1 %14908, label %14910, label %14909

14909:                                            ; preds = %14906
  call void @_ZdlPv(ptr noundef %14907) #22
  br label %14910

14910:                                            ; preds = %14909, %14906
  %14911 = load ptr, ptr %19, align 8, !tbaa !23
  %14912 = icmp eq ptr %14911, %14717
  br i1 %14912, label %14914, label %14913

14913:                                            ; preds = %14910
  call void @_ZdlPv(ptr noundef %14911) #22
  br label %14914

14914:                                            ; preds = %14913, %14910
  %14915 = load ptr, ptr %18, align 8, !tbaa !23
  %14916 = icmp eq ptr %14915, %14708
  br i1 %14916, label %14918, label %14917

14917:                                            ; preds = %14914
  call void @_ZdlPv(ptr noundef %14915) #22
  br label %14918

14918:                                            ; preds = %14917, %14914
  %14919 = load ptr, ptr %17, align 8, !tbaa !23
  %14920 = icmp eq ptr %14919, %14701
  br i1 %14920, label %15709, label %14921

14921:                                            ; preds = %14918
  call void @_ZdlPv(ptr noundef %14919) #22
  br label %15709

14922:                                            ; preds = %14700
  %14923 = landingpad { ptr, i32 }
          cleanup
  br label %15655

14924:                                            ; preds = %14706
  %14925 = landingpad { ptr, i32 }
          cleanup
  br label %15655

14926:                                            ; preds = %14710
  %14927 = landingpad { ptr, i32 }
          cleanup
  br label %15648

14928:                                            ; preds = %14715
  %14929 = landingpad { ptr, i32 }
          cleanup
  br label %15648

14930:                                            ; preds = %14719
  %14931 = landingpad { ptr, i32 }
          cleanup
  br label %15641

14932:                                            ; preds = %14724
  %14933 = landingpad { ptr, i32 }
          cleanup
  br label %15641

14934:                                            ; preds = %14728
  %14935 = landingpad { ptr, i32 }
          cleanup
  br label %15634

14936:                                            ; preds = %14732
  %14937 = landingpad { ptr, i32 }
          cleanup
  br label %15634

14938:                                            ; preds = %14736
  %14939 = landingpad { ptr, i32 }
          cleanup
  br label %15627

14940:                                            ; preds = %14741
  %14941 = landingpad { ptr, i32 }
          cleanup
  br label %15627

14942:                                            ; preds = %14745
  %14943 = landingpad { ptr, i32 }
          cleanup
  br label %15620

14944:                                            ; preds = %14750
  %14945 = landingpad { ptr, i32 }
          cleanup
  br label %15620

14946:                                            ; preds = %14754
  %14947 = landingpad { ptr, i32 }
          cleanup
  br label %15613

14948:                                            ; preds = %14759
  %14949 = landingpad { ptr, i32 }
          cleanup
  br label %15606

14950:                                            ; preds = %14764
  %14951 = landingpad { ptr, i32 }
          cleanup
  br label %15606

14952:                                            ; preds = %14768
  %14953 = landingpad { ptr, i32 }
          cleanup
  br label %15599

14954:                                            ; preds = %14773
  %14955 = landingpad { ptr, i32 }
          cleanup
  br label %15599

14956:                                            ; preds = %14777
  %14957 = landingpad { ptr, i32 }
          cleanup
  br label %15592

14958:                                            ; preds = %14782
  %14959 = landingpad { ptr, i32 }
          cleanup
  br label %15592

14960:                                            ; preds = %14786
  %14961 = landingpad { ptr, i32 }
          cleanup
  br label %15585

14962:                                            ; preds = %14791
  %14963 = landingpad { ptr, i32 }
          cleanup
  br label %15585

14964:                                            ; preds = %14795
  %14965 = landingpad { ptr, i32 }
          cleanup
  br label %15578

14966:                                            ; preds = %14800
  %14967 = landingpad { ptr, i32 }
          cleanup
  br label %15571

14968:                                            ; preds = %14805
  %14969 = landingpad { ptr, i32 }
          cleanup
  br label %15564

14970:                                            ; preds = %14810
  %14971 = landingpad { ptr, i32 }
          cleanup
  br label %15558

14972:                                            ; preds = %14815
  %14973 = landingpad { ptr, i32 }
          cleanup
  %14974 = getelementptr inbounds %struct.TestCase, ptr %16, i64 14, i32 3, i32 0, i32 1
  %14975 = load ptr, ptr %14974, align 8, !tbaa !88
  %14976 = icmp eq ptr %14975, null
  br i1 %14976, label %15001, label %14977

14977:                                            ; preds = %14972
  %14978 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14975, i64 0, i32 1
  %14979 = load atomic i64, ptr %14978 acquire, align 8
  %14980 = icmp eq i64 %14979, 4294967297
  %14981 = trunc i64 %14979 to i32
  br i1 %14980, label %14982, label %14990

14982:                                            ; preds = %14977
  store i32 0, ptr %14978, align 8, !tbaa !90
  %14983 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %14975, i64 0, i32 2
  store i32 0, ptr %14983, align 4, !tbaa !92
  %14984 = load ptr, ptr %14975, align 8, !tbaa !58
  %14985 = getelementptr inbounds ptr, ptr %14984, i64 2
  %14986 = load ptr, ptr %14985, align 8
  call void %14986(ptr noundef nonnull align 8 dereferenceable(16) %14975) #21
  %14987 = load ptr, ptr %14975, align 8, !tbaa !58
  %14988 = getelementptr inbounds ptr, ptr %14987, i64 3
  %14989 = load ptr, ptr %14988, align 8
  call void %14989(ptr noundef nonnull align 8 dereferenceable(16) %14975) #21
  br label %15001

14990:                                            ; preds = %14977
  %14991 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %14992 = icmp eq i8 %14991, 0
  br i1 %14992, label %14995, label %14993

14993:                                            ; preds = %14990
  %14994 = add nsw i32 %14981, -1
  store i32 %14994, ptr %14978, align 8, !tbaa !73
  br label %14997

14995:                                            ; preds = %14990
  %14996 = atomicrmw volatile add ptr %14978, i32 -1 acq_rel, align 4
  br label %14997

14997:                                            ; preds = %14995, %14993
  %14998 = phi i32 [ %14981, %14993 ], [ %14996, %14995 ]
  %14999 = icmp eq i32 %14998, 1
  br i1 %14999, label %15000, label %15001, !prof !42

15000:                                            ; preds = %14997
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %14975) #21
  br label %15001

15001:                                            ; preds = %15000, %14997, %14982, %14972
  %15002 = getelementptr inbounds %struct.TestCase, ptr %16, i64 14, i32 2
  %15003 = load ptr, ptr %15002, align 8, !tbaa !23
  %15004 = getelementptr inbounds %struct.TestCase, ptr %16, i64 14, i32 2, i32 2
  %15005 = icmp eq ptr %15003, %15004
  br i1 %15005, label %15007, label %15006

15006:                                            ; preds = %15001
  call void @_ZdlPv(ptr noundef %15003) #22
  br label %15007

15007:                                            ; preds = %15006, %15001
  %15008 = load ptr, ptr %14811, align 8, !tbaa !23
  %15009 = getelementptr inbounds %struct.TestCase, ptr %16, i64 14, i32 0, i32 2
  %15010 = icmp eq ptr %15008, %15009
  br i1 %15010, label %15012, label %15011

15011:                                            ; preds = %15007
  call void @_ZdlPv(ptr noundef %15008) #22
  br label %15012

15012:                                            ; preds = %15007, %15011
  %15013 = getelementptr inbounds %struct.TestCase, ptr %16, i64 13, i32 3, i32 0, i32 1
  %15014 = load ptr, ptr %15013, align 8, !tbaa !88
  %15015 = icmp eq ptr %15014, null
  br i1 %15015, label %15040, label %15016

15016:                                            ; preds = %15012
  %15017 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15014, i64 0, i32 1
  %15018 = load atomic i64, ptr %15017 acquire, align 8
  %15019 = icmp eq i64 %15018, 4294967297
  %15020 = trunc i64 %15018 to i32
  br i1 %15019, label %15021, label %15029

15021:                                            ; preds = %15016
  store i32 0, ptr %15017, align 8, !tbaa !90
  %15022 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15014, i64 0, i32 2
  store i32 0, ptr %15022, align 4, !tbaa !92
  %15023 = load ptr, ptr %15014, align 8, !tbaa !58
  %15024 = getelementptr inbounds ptr, ptr %15023, i64 2
  %15025 = load ptr, ptr %15024, align 8
  call void %15025(ptr noundef nonnull align 8 dereferenceable(16) %15014) #21
  %15026 = load ptr, ptr %15014, align 8, !tbaa !58
  %15027 = getelementptr inbounds ptr, ptr %15026, i64 3
  %15028 = load ptr, ptr %15027, align 8
  call void %15028(ptr noundef nonnull align 8 dereferenceable(16) %15014) #21
  br label %15040

15029:                                            ; preds = %15016
  %15030 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15031 = icmp eq i8 %15030, 0
  br i1 %15031, label %15034, label %15032

15032:                                            ; preds = %15029
  %15033 = add nsw i32 %15020, -1
  store i32 %15033, ptr %15017, align 8, !tbaa !73
  br label %15036

15034:                                            ; preds = %15029
  %15035 = atomicrmw volatile add ptr %15017, i32 -1 acq_rel, align 4
  br label %15036

15036:                                            ; preds = %15034, %15032
  %15037 = phi i32 [ %15020, %15032 ], [ %15035, %15034 ]
  %15038 = icmp eq i32 %15037, 1
  br i1 %15038, label %15039, label %15040, !prof !42

15039:                                            ; preds = %15036
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15014) #21
  br label %15040

15040:                                            ; preds = %15039, %15036, %15021, %15012
  %15041 = getelementptr inbounds %struct.TestCase, ptr %16, i64 13, i32 2
  %15042 = load ptr, ptr %15041, align 8, !tbaa !23
  %15043 = getelementptr inbounds %struct.TestCase, ptr %16, i64 13, i32 2, i32 2
  %15044 = icmp eq ptr %15042, %15043
  br i1 %15044, label %15046, label %15045

15045:                                            ; preds = %15040
  call void @_ZdlPv(ptr noundef %15042) #22
  br label %15046

15046:                                            ; preds = %15045, %15040
  %15047 = load ptr, ptr %14806, align 8, !tbaa !23
  %15048 = getelementptr inbounds %struct.TestCase, ptr %16, i64 13, i32 0, i32 2
  %15049 = icmp eq ptr %15047, %15048
  br i1 %15049, label %15051, label %15050

15050:                                            ; preds = %15046
  call void @_ZdlPv(ptr noundef %15047) #22
  br label %15051

15051:                                            ; preds = %15046, %15050
  %15052 = getelementptr inbounds %struct.TestCase, ptr %16, i64 12, i32 3, i32 0, i32 1
  %15053 = load ptr, ptr %15052, align 8, !tbaa !88
  %15054 = icmp eq ptr %15053, null
  br i1 %15054, label %15079, label %15055

15055:                                            ; preds = %15051
  %15056 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15053, i64 0, i32 1
  %15057 = load atomic i64, ptr %15056 acquire, align 8
  %15058 = icmp eq i64 %15057, 4294967297
  %15059 = trunc i64 %15057 to i32
  br i1 %15058, label %15060, label %15068

15060:                                            ; preds = %15055
  store i32 0, ptr %15056, align 8, !tbaa !90
  %15061 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15053, i64 0, i32 2
  store i32 0, ptr %15061, align 4, !tbaa !92
  %15062 = load ptr, ptr %15053, align 8, !tbaa !58
  %15063 = getelementptr inbounds ptr, ptr %15062, i64 2
  %15064 = load ptr, ptr %15063, align 8
  call void %15064(ptr noundef nonnull align 8 dereferenceable(16) %15053) #21
  %15065 = load ptr, ptr %15053, align 8, !tbaa !58
  %15066 = getelementptr inbounds ptr, ptr %15065, i64 3
  %15067 = load ptr, ptr %15066, align 8
  call void %15067(ptr noundef nonnull align 8 dereferenceable(16) %15053) #21
  br label %15079

15068:                                            ; preds = %15055
  %15069 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15070 = icmp eq i8 %15069, 0
  br i1 %15070, label %15073, label %15071

15071:                                            ; preds = %15068
  %15072 = add nsw i32 %15059, -1
  store i32 %15072, ptr %15056, align 8, !tbaa !73
  br label %15075

15073:                                            ; preds = %15068
  %15074 = atomicrmw volatile add ptr %15056, i32 -1 acq_rel, align 4
  br label %15075

15075:                                            ; preds = %15073, %15071
  %15076 = phi i32 [ %15059, %15071 ], [ %15074, %15073 ]
  %15077 = icmp eq i32 %15076, 1
  br i1 %15077, label %15078, label %15079, !prof !42

15078:                                            ; preds = %15075
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15053) #21
  br label %15079

15079:                                            ; preds = %15078, %15075, %15060, %15051
  %15080 = getelementptr inbounds %struct.TestCase, ptr %16, i64 12, i32 2
  %15081 = load ptr, ptr %15080, align 8, !tbaa !23
  %15082 = getelementptr inbounds %struct.TestCase, ptr %16, i64 12, i32 2, i32 2
  %15083 = icmp eq ptr %15081, %15082
  br i1 %15083, label %15085, label %15084

15084:                                            ; preds = %15079
  call void @_ZdlPv(ptr noundef %15081) #22
  br label %15085

15085:                                            ; preds = %15084, %15079
  %15086 = load ptr, ptr %14801, align 8, !tbaa !23
  %15087 = getelementptr inbounds %struct.TestCase, ptr %16, i64 12, i32 0, i32 2
  %15088 = icmp eq ptr %15086, %15087
  br i1 %15088, label %15090, label %15089

15089:                                            ; preds = %15085
  call void @_ZdlPv(ptr noundef %15086) #22
  br label %15090

15090:                                            ; preds = %15085, %15089
  %15091 = getelementptr inbounds %struct.TestCase, ptr %16, i64 11, i32 3, i32 0, i32 1
  %15092 = load ptr, ptr %15091, align 8, !tbaa !88
  %15093 = icmp eq ptr %15092, null
  br i1 %15093, label %15118, label %15094

15094:                                            ; preds = %15090
  %15095 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15092, i64 0, i32 1
  %15096 = load atomic i64, ptr %15095 acquire, align 8
  %15097 = icmp eq i64 %15096, 4294967297
  %15098 = trunc i64 %15096 to i32
  br i1 %15097, label %15099, label %15107

15099:                                            ; preds = %15094
  store i32 0, ptr %15095, align 8, !tbaa !90
  %15100 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15092, i64 0, i32 2
  store i32 0, ptr %15100, align 4, !tbaa !92
  %15101 = load ptr, ptr %15092, align 8, !tbaa !58
  %15102 = getelementptr inbounds ptr, ptr %15101, i64 2
  %15103 = load ptr, ptr %15102, align 8
  call void %15103(ptr noundef nonnull align 8 dereferenceable(16) %15092) #21
  %15104 = load ptr, ptr %15092, align 8, !tbaa !58
  %15105 = getelementptr inbounds ptr, ptr %15104, i64 3
  %15106 = load ptr, ptr %15105, align 8
  call void %15106(ptr noundef nonnull align 8 dereferenceable(16) %15092) #21
  br label %15118

15107:                                            ; preds = %15094
  %15108 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15109 = icmp eq i8 %15108, 0
  br i1 %15109, label %15112, label %15110

15110:                                            ; preds = %15107
  %15111 = add nsw i32 %15098, -1
  store i32 %15111, ptr %15095, align 8, !tbaa !73
  br label %15114

15112:                                            ; preds = %15107
  %15113 = atomicrmw volatile add ptr %15095, i32 -1 acq_rel, align 4
  br label %15114

15114:                                            ; preds = %15112, %15110
  %15115 = phi i32 [ %15098, %15110 ], [ %15113, %15112 ]
  %15116 = icmp eq i32 %15115, 1
  br i1 %15116, label %15117, label %15118, !prof !42

15117:                                            ; preds = %15114
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15092) #21
  br label %15118

15118:                                            ; preds = %15117, %15114, %15099, %15090
  %15119 = getelementptr inbounds %struct.TestCase, ptr %16, i64 11, i32 2
  %15120 = load ptr, ptr %15119, align 8, !tbaa !23
  %15121 = getelementptr inbounds %struct.TestCase, ptr %16, i64 11, i32 2, i32 2
  %15122 = icmp eq ptr %15120, %15121
  br i1 %15122, label %15124, label %15123

15123:                                            ; preds = %15118
  call void @_ZdlPv(ptr noundef %15120) #22
  br label %15124

15124:                                            ; preds = %15123, %15118
  %15125 = load ptr, ptr %14792, align 8, !tbaa !23
  %15126 = getelementptr inbounds %struct.TestCase, ptr %16, i64 11, i32 0, i32 2
  %15127 = icmp eq ptr %15125, %15126
  br i1 %15127, label %15129, label %15128

15128:                                            ; preds = %15124
  call void @_ZdlPv(ptr noundef %15125) #22
  br label %15129

15129:                                            ; preds = %15124, %15128
  %15130 = getelementptr inbounds %struct.TestCase, ptr %16, i64 10, i32 3, i32 0, i32 1
  %15131 = load ptr, ptr %15130, align 8, !tbaa !88
  %15132 = icmp eq ptr %15131, null
  br i1 %15132, label %15157, label %15133

15133:                                            ; preds = %15129
  %15134 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15131, i64 0, i32 1
  %15135 = load atomic i64, ptr %15134 acquire, align 8
  %15136 = icmp eq i64 %15135, 4294967297
  %15137 = trunc i64 %15135 to i32
  br i1 %15136, label %15138, label %15146

15138:                                            ; preds = %15133
  store i32 0, ptr %15134, align 8, !tbaa !90
  %15139 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15131, i64 0, i32 2
  store i32 0, ptr %15139, align 4, !tbaa !92
  %15140 = load ptr, ptr %15131, align 8, !tbaa !58
  %15141 = getelementptr inbounds ptr, ptr %15140, i64 2
  %15142 = load ptr, ptr %15141, align 8
  call void %15142(ptr noundef nonnull align 8 dereferenceable(16) %15131) #21
  %15143 = load ptr, ptr %15131, align 8, !tbaa !58
  %15144 = getelementptr inbounds ptr, ptr %15143, i64 3
  %15145 = load ptr, ptr %15144, align 8
  call void %15145(ptr noundef nonnull align 8 dereferenceable(16) %15131) #21
  br label %15157

15146:                                            ; preds = %15133
  %15147 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15148 = icmp eq i8 %15147, 0
  br i1 %15148, label %15151, label %15149

15149:                                            ; preds = %15146
  %15150 = add nsw i32 %15137, -1
  store i32 %15150, ptr %15134, align 8, !tbaa !73
  br label %15153

15151:                                            ; preds = %15146
  %15152 = atomicrmw volatile add ptr %15134, i32 -1 acq_rel, align 4
  br label %15153

15153:                                            ; preds = %15151, %15149
  %15154 = phi i32 [ %15137, %15149 ], [ %15152, %15151 ]
  %15155 = icmp eq i32 %15154, 1
  br i1 %15155, label %15156, label %15157, !prof !42

15156:                                            ; preds = %15153
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15131) #21
  br label %15157

15157:                                            ; preds = %15156, %15153, %15138, %15129
  %15158 = getelementptr inbounds %struct.TestCase, ptr %16, i64 10, i32 2
  %15159 = load ptr, ptr %15158, align 8, !tbaa !23
  %15160 = getelementptr inbounds %struct.TestCase, ptr %16, i64 10, i32 2, i32 2
  %15161 = icmp eq ptr %15159, %15160
  br i1 %15161, label %15163, label %15162

15162:                                            ; preds = %15157
  call void @_ZdlPv(ptr noundef %15159) #22
  br label %15163

15163:                                            ; preds = %15162, %15157
  %15164 = load ptr, ptr %14783, align 8, !tbaa !23
  %15165 = getelementptr inbounds %struct.TestCase, ptr %16, i64 10, i32 0, i32 2
  %15166 = icmp eq ptr %15164, %15165
  br i1 %15166, label %15168, label %15167

15167:                                            ; preds = %15163
  call void @_ZdlPv(ptr noundef %15164) #22
  br label %15168

15168:                                            ; preds = %15163, %15167
  %15169 = getelementptr inbounds %struct.TestCase, ptr %16, i64 9, i32 3, i32 0, i32 1
  %15170 = load ptr, ptr %15169, align 8, !tbaa !88
  %15171 = icmp eq ptr %15170, null
  br i1 %15171, label %15196, label %15172

15172:                                            ; preds = %15168
  %15173 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15170, i64 0, i32 1
  %15174 = load atomic i64, ptr %15173 acquire, align 8
  %15175 = icmp eq i64 %15174, 4294967297
  %15176 = trunc i64 %15174 to i32
  br i1 %15175, label %15177, label %15185

15177:                                            ; preds = %15172
  store i32 0, ptr %15173, align 8, !tbaa !90
  %15178 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15170, i64 0, i32 2
  store i32 0, ptr %15178, align 4, !tbaa !92
  %15179 = load ptr, ptr %15170, align 8, !tbaa !58
  %15180 = getelementptr inbounds ptr, ptr %15179, i64 2
  %15181 = load ptr, ptr %15180, align 8
  call void %15181(ptr noundef nonnull align 8 dereferenceable(16) %15170) #21
  %15182 = load ptr, ptr %15170, align 8, !tbaa !58
  %15183 = getelementptr inbounds ptr, ptr %15182, i64 3
  %15184 = load ptr, ptr %15183, align 8
  call void %15184(ptr noundef nonnull align 8 dereferenceable(16) %15170) #21
  br label %15196

15185:                                            ; preds = %15172
  %15186 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15187 = icmp eq i8 %15186, 0
  br i1 %15187, label %15190, label %15188

15188:                                            ; preds = %15185
  %15189 = add nsw i32 %15176, -1
  store i32 %15189, ptr %15173, align 8, !tbaa !73
  br label %15192

15190:                                            ; preds = %15185
  %15191 = atomicrmw volatile add ptr %15173, i32 -1 acq_rel, align 4
  br label %15192

15192:                                            ; preds = %15190, %15188
  %15193 = phi i32 [ %15176, %15188 ], [ %15191, %15190 ]
  %15194 = icmp eq i32 %15193, 1
  br i1 %15194, label %15195, label %15196, !prof !42

15195:                                            ; preds = %15192
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15170) #21
  br label %15196

15196:                                            ; preds = %15195, %15192, %15177, %15168
  %15197 = getelementptr inbounds %struct.TestCase, ptr %16, i64 9, i32 2
  %15198 = load ptr, ptr %15197, align 8, !tbaa !23
  %15199 = getelementptr inbounds %struct.TestCase, ptr %16, i64 9, i32 2, i32 2
  %15200 = icmp eq ptr %15198, %15199
  br i1 %15200, label %15202, label %15201

15201:                                            ; preds = %15196
  call void @_ZdlPv(ptr noundef %15198) #22
  br label %15202

15202:                                            ; preds = %15201, %15196
  %15203 = load ptr, ptr %14774, align 8, !tbaa !23
  %15204 = getelementptr inbounds %struct.TestCase, ptr %16, i64 9, i32 0, i32 2
  %15205 = icmp eq ptr %15203, %15204
  br i1 %15205, label %15207, label %15206

15206:                                            ; preds = %15202
  call void @_ZdlPv(ptr noundef %15203) #22
  br label %15207

15207:                                            ; preds = %15202, %15206
  %15208 = getelementptr inbounds %struct.TestCase, ptr %16, i64 8, i32 3, i32 0, i32 1
  %15209 = load ptr, ptr %15208, align 8, !tbaa !88
  %15210 = icmp eq ptr %15209, null
  br i1 %15210, label %15235, label %15211

15211:                                            ; preds = %15207
  %15212 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15209, i64 0, i32 1
  %15213 = load atomic i64, ptr %15212 acquire, align 8
  %15214 = icmp eq i64 %15213, 4294967297
  %15215 = trunc i64 %15213 to i32
  br i1 %15214, label %15216, label %15224

15216:                                            ; preds = %15211
  store i32 0, ptr %15212, align 8, !tbaa !90
  %15217 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15209, i64 0, i32 2
  store i32 0, ptr %15217, align 4, !tbaa !92
  %15218 = load ptr, ptr %15209, align 8, !tbaa !58
  %15219 = getelementptr inbounds ptr, ptr %15218, i64 2
  %15220 = load ptr, ptr %15219, align 8
  call void %15220(ptr noundef nonnull align 8 dereferenceable(16) %15209) #21
  %15221 = load ptr, ptr %15209, align 8, !tbaa !58
  %15222 = getelementptr inbounds ptr, ptr %15221, i64 3
  %15223 = load ptr, ptr %15222, align 8
  call void %15223(ptr noundef nonnull align 8 dereferenceable(16) %15209) #21
  br label %15235

15224:                                            ; preds = %15211
  %15225 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15226 = icmp eq i8 %15225, 0
  br i1 %15226, label %15229, label %15227

15227:                                            ; preds = %15224
  %15228 = add nsw i32 %15215, -1
  store i32 %15228, ptr %15212, align 8, !tbaa !73
  br label %15231

15229:                                            ; preds = %15224
  %15230 = atomicrmw volatile add ptr %15212, i32 -1 acq_rel, align 4
  br label %15231

15231:                                            ; preds = %15229, %15227
  %15232 = phi i32 [ %15215, %15227 ], [ %15230, %15229 ]
  %15233 = icmp eq i32 %15232, 1
  br i1 %15233, label %15234, label %15235, !prof !42

15234:                                            ; preds = %15231
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15209) #21
  br label %15235

15235:                                            ; preds = %15234, %15231, %15216, %15207
  %15236 = getelementptr inbounds %struct.TestCase, ptr %16, i64 8, i32 2
  %15237 = load ptr, ptr %15236, align 8, !tbaa !23
  %15238 = getelementptr inbounds %struct.TestCase, ptr %16, i64 8, i32 2, i32 2
  %15239 = icmp eq ptr %15237, %15238
  br i1 %15239, label %15241, label %15240

15240:                                            ; preds = %15235
  call void @_ZdlPv(ptr noundef %15237) #22
  br label %15241

15241:                                            ; preds = %15240, %15235
  %15242 = load ptr, ptr %14765, align 8, !tbaa !23
  %15243 = getelementptr inbounds %struct.TestCase, ptr %16, i64 8, i32 0, i32 2
  %15244 = icmp eq ptr %15242, %15243
  br i1 %15244, label %15246, label %15245

15245:                                            ; preds = %15241
  call void @_ZdlPv(ptr noundef %15242) #22
  br label %15246

15246:                                            ; preds = %15241, %15245
  %15247 = getelementptr inbounds %struct.TestCase, ptr %16, i64 7, i32 3, i32 0, i32 1
  %15248 = load ptr, ptr %15247, align 8, !tbaa !88
  %15249 = icmp eq ptr %15248, null
  br i1 %15249, label %15274, label %15250

15250:                                            ; preds = %15246
  %15251 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15248, i64 0, i32 1
  %15252 = load atomic i64, ptr %15251 acquire, align 8
  %15253 = icmp eq i64 %15252, 4294967297
  %15254 = trunc i64 %15252 to i32
  br i1 %15253, label %15255, label %15263

15255:                                            ; preds = %15250
  store i32 0, ptr %15251, align 8, !tbaa !90
  %15256 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15248, i64 0, i32 2
  store i32 0, ptr %15256, align 4, !tbaa !92
  %15257 = load ptr, ptr %15248, align 8, !tbaa !58
  %15258 = getelementptr inbounds ptr, ptr %15257, i64 2
  %15259 = load ptr, ptr %15258, align 8
  call void %15259(ptr noundef nonnull align 8 dereferenceable(16) %15248) #21
  %15260 = load ptr, ptr %15248, align 8, !tbaa !58
  %15261 = getelementptr inbounds ptr, ptr %15260, i64 3
  %15262 = load ptr, ptr %15261, align 8
  call void %15262(ptr noundef nonnull align 8 dereferenceable(16) %15248) #21
  br label %15274

15263:                                            ; preds = %15250
  %15264 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15265 = icmp eq i8 %15264, 0
  br i1 %15265, label %15268, label %15266

15266:                                            ; preds = %15263
  %15267 = add nsw i32 %15254, -1
  store i32 %15267, ptr %15251, align 8, !tbaa !73
  br label %15270

15268:                                            ; preds = %15263
  %15269 = atomicrmw volatile add ptr %15251, i32 -1 acq_rel, align 4
  br label %15270

15270:                                            ; preds = %15268, %15266
  %15271 = phi i32 [ %15254, %15266 ], [ %15269, %15268 ]
  %15272 = icmp eq i32 %15271, 1
  br i1 %15272, label %15273, label %15274, !prof !42

15273:                                            ; preds = %15270
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15248) #21
  br label %15274

15274:                                            ; preds = %15273, %15270, %15255, %15246
  %15275 = getelementptr inbounds %struct.TestCase, ptr %16, i64 7, i32 2
  %15276 = load ptr, ptr %15275, align 8, !tbaa !23
  %15277 = getelementptr inbounds %struct.TestCase, ptr %16, i64 7, i32 2, i32 2
  %15278 = icmp eq ptr %15276, %15277
  br i1 %15278, label %15280, label %15279

15279:                                            ; preds = %15274
  call void @_ZdlPv(ptr noundef %15276) #22
  br label %15280

15280:                                            ; preds = %15279, %15274
  %15281 = load ptr, ptr %14760, align 8, !tbaa !23
  %15282 = getelementptr inbounds %struct.TestCase, ptr %16, i64 7, i32 0, i32 2
  %15283 = icmp eq ptr %15281, %15282
  br i1 %15283, label %15285, label %15284

15284:                                            ; preds = %15280
  call void @_ZdlPv(ptr noundef %15281) #22
  br label %15285

15285:                                            ; preds = %15280, %15284
  %15286 = getelementptr inbounds %struct.TestCase, ptr %16, i64 6, i32 3, i32 0, i32 1
  %15287 = load ptr, ptr %15286, align 8, !tbaa !88
  %15288 = icmp eq ptr %15287, null
  br i1 %15288, label %15313, label %15289

15289:                                            ; preds = %15285
  %15290 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15287, i64 0, i32 1
  %15291 = load atomic i64, ptr %15290 acquire, align 8
  %15292 = icmp eq i64 %15291, 4294967297
  %15293 = trunc i64 %15291 to i32
  br i1 %15292, label %15294, label %15302

15294:                                            ; preds = %15289
  store i32 0, ptr %15290, align 8, !tbaa !90
  %15295 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15287, i64 0, i32 2
  store i32 0, ptr %15295, align 4, !tbaa !92
  %15296 = load ptr, ptr %15287, align 8, !tbaa !58
  %15297 = getelementptr inbounds ptr, ptr %15296, i64 2
  %15298 = load ptr, ptr %15297, align 8
  call void %15298(ptr noundef nonnull align 8 dereferenceable(16) %15287) #21
  %15299 = load ptr, ptr %15287, align 8, !tbaa !58
  %15300 = getelementptr inbounds ptr, ptr %15299, i64 3
  %15301 = load ptr, ptr %15300, align 8
  call void %15301(ptr noundef nonnull align 8 dereferenceable(16) %15287) #21
  br label %15313

15302:                                            ; preds = %15289
  %15303 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15304 = icmp eq i8 %15303, 0
  br i1 %15304, label %15307, label %15305

15305:                                            ; preds = %15302
  %15306 = add nsw i32 %15293, -1
  store i32 %15306, ptr %15290, align 8, !tbaa !73
  br label %15309

15307:                                            ; preds = %15302
  %15308 = atomicrmw volatile add ptr %15290, i32 -1 acq_rel, align 4
  br label %15309

15309:                                            ; preds = %15307, %15305
  %15310 = phi i32 [ %15293, %15305 ], [ %15308, %15307 ]
  %15311 = icmp eq i32 %15310, 1
  br i1 %15311, label %15312, label %15313, !prof !42

15312:                                            ; preds = %15309
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15287) #21
  br label %15313

15313:                                            ; preds = %15312, %15309, %15294, %15285
  %15314 = getelementptr inbounds %struct.TestCase, ptr %16, i64 6, i32 2
  %15315 = load ptr, ptr %15314, align 8, !tbaa !23
  %15316 = getelementptr inbounds %struct.TestCase, ptr %16, i64 6, i32 2, i32 2
  %15317 = icmp eq ptr %15315, %15316
  br i1 %15317, label %15319, label %15318

15318:                                            ; preds = %15313
  call void @_ZdlPv(ptr noundef %15315) #22
  br label %15319

15319:                                            ; preds = %15318, %15313
  %15320 = load ptr, ptr %14751, align 8, !tbaa !23
  %15321 = getelementptr inbounds %struct.TestCase, ptr %16, i64 6, i32 0, i32 2
  %15322 = icmp eq ptr %15320, %15321
  br i1 %15322, label %15324, label %15323

15323:                                            ; preds = %15319
  call void @_ZdlPv(ptr noundef %15320) #22
  br label %15324

15324:                                            ; preds = %15319, %15323
  %15325 = getelementptr inbounds %struct.TestCase, ptr %16, i64 5, i32 3, i32 0, i32 1
  %15326 = load ptr, ptr %15325, align 8, !tbaa !88
  %15327 = icmp eq ptr %15326, null
  br i1 %15327, label %15352, label %15328

15328:                                            ; preds = %15324
  %15329 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15326, i64 0, i32 1
  %15330 = load atomic i64, ptr %15329 acquire, align 8
  %15331 = icmp eq i64 %15330, 4294967297
  %15332 = trunc i64 %15330 to i32
  br i1 %15331, label %15333, label %15341

15333:                                            ; preds = %15328
  store i32 0, ptr %15329, align 8, !tbaa !90
  %15334 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15326, i64 0, i32 2
  store i32 0, ptr %15334, align 4, !tbaa !92
  %15335 = load ptr, ptr %15326, align 8, !tbaa !58
  %15336 = getelementptr inbounds ptr, ptr %15335, i64 2
  %15337 = load ptr, ptr %15336, align 8
  call void %15337(ptr noundef nonnull align 8 dereferenceable(16) %15326) #21
  %15338 = load ptr, ptr %15326, align 8, !tbaa !58
  %15339 = getelementptr inbounds ptr, ptr %15338, i64 3
  %15340 = load ptr, ptr %15339, align 8
  call void %15340(ptr noundef nonnull align 8 dereferenceable(16) %15326) #21
  br label %15352

15341:                                            ; preds = %15328
  %15342 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15343 = icmp eq i8 %15342, 0
  br i1 %15343, label %15346, label %15344

15344:                                            ; preds = %15341
  %15345 = add nsw i32 %15332, -1
  store i32 %15345, ptr %15329, align 8, !tbaa !73
  br label %15348

15346:                                            ; preds = %15341
  %15347 = atomicrmw volatile add ptr %15329, i32 -1 acq_rel, align 4
  br label %15348

15348:                                            ; preds = %15346, %15344
  %15349 = phi i32 [ %15332, %15344 ], [ %15347, %15346 ]
  %15350 = icmp eq i32 %15349, 1
  br i1 %15350, label %15351, label %15352, !prof !42

15351:                                            ; preds = %15348
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15326) #21
  br label %15352

15352:                                            ; preds = %15351, %15348, %15333, %15324
  %15353 = getelementptr inbounds %struct.TestCase, ptr %16, i64 5, i32 2
  %15354 = load ptr, ptr %15353, align 8, !tbaa !23
  %15355 = getelementptr inbounds %struct.TestCase, ptr %16, i64 5, i32 2, i32 2
  %15356 = icmp eq ptr %15354, %15355
  br i1 %15356, label %15358, label %15357

15357:                                            ; preds = %15352
  call void @_ZdlPv(ptr noundef %15354) #22
  br label %15358

15358:                                            ; preds = %15357, %15352
  %15359 = load ptr, ptr %14742, align 8, !tbaa !23
  %15360 = getelementptr inbounds %struct.TestCase, ptr %16, i64 5, i32 0, i32 2
  %15361 = icmp eq ptr %15359, %15360
  br i1 %15361, label %15363, label %15362

15362:                                            ; preds = %15358
  call void @_ZdlPv(ptr noundef %15359) #22
  br label %15363

15363:                                            ; preds = %15358, %15362
  %15364 = getelementptr inbounds %struct.TestCase, ptr %16, i64 4, i32 3, i32 0, i32 1
  %15365 = load ptr, ptr %15364, align 8, !tbaa !88
  %15366 = icmp eq ptr %15365, null
  br i1 %15366, label %15391, label %15367

15367:                                            ; preds = %15363
  %15368 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15365, i64 0, i32 1
  %15369 = load atomic i64, ptr %15368 acquire, align 8
  %15370 = icmp eq i64 %15369, 4294967297
  %15371 = trunc i64 %15369 to i32
  br i1 %15370, label %15372, label %15380

15372:                                            ; preds = %15367
  store i32 0, ptr %15368, align 8, !tbaa !90
  %15373 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15365, i64 0, i32 2
  store i32 0, ptr %15373, align 4, !tbaa !92
  %15374 = load ptr, ptr %15365, align 8, !tbaa !58
  %15375 = getelementptr inbounds ptr, ptr %15374, i64 2
  %15376 = load ptr, ptr %15375, align 8
  call void %15376(ptr noundef nonnull align 8 dereferenceable(16) %15365) #21
  %15377 = load ptr, ptr %15365, align 8, !tbaa !58
  %15378 = getelementptr inbounds ptr, ptr %15377, i64 3
  %15379 = load ptr, ptr %15378, align 8
  call void %15379(ptr noundef nonnull align 8 dereferenceable(16) %15365) #21
  br label %15391

15380:                                            ; preds = %15367
  %15381 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15382 = icmp eq i8 %15381, 0
  br i1 %15382, label %15385, label %15383

15383:                                            ; preds = %15380
  %15384 = add nsw i32 %15371, -1
  store i32 %15384, ptr %15368, align 8, !tbaa !73
  br label %15387

15385:                                            ; preds = %15380
  %15386 = atomicrmw volatile add ptr %15368, i32 -1 acq_rel, align 4
  br label %15387

15387:                                            ; preds = %15385, %15383
  %15388 = phi i32 [ %15371, %15383 ], [ %15386, %15385 ]
  %15389 = icmp eq i32 %15388, 1
  br i1 %15389, label %15390, label %15391, !prof !42

15390:                                            ; preds = %15387
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15365) #21
  br label %15391

15391:                                            ; preds = %15390, %15387, %15372, %15363
  %15392 = getelementptr inbounds %struct.TestCase, ptr %16, i64 4, i32 2
  %15393 = load ptr, ptr %15392, align 8, !tbaa !23
  %15394 = getelementptr inbounds %struct.TestCase, ptr %16, i64 4, i32 2, i32 2
  %15395 = icmp eq ptr %15393, %15394
  br i1 %15395, label %15397, label %15396

15396:                                            ; preds = %15391
  call void @_ZdlPv(ptr noundef %15393) #22
  br label %15397

15397:                                            ; preds = %15396, %15391
  %15398 = load ptr, ptr %14733, align 8, !tbaa !23
  %15399 = getelementptr inbounds %struct.TestCase, ptr %16, i64 4, i32 0, i32 2
  %15400 = icmp eq ptr %15398, %15399
  br i1 %15400, label %15402, label %15401

15401:                                            ; preds = %15397
  call void @_ZdlPv(ptr noundef %15398) #22
  br label %15402

15402:                                            ; preds = %15397, %15401
  %15403 = getelementptr inbounds %struct.TestCase, ptr %16, i64 3, i32 3, i32 0, i32 1
  %15404 = load ptr, ptr %15403, align 8, !tbaa !88
  %15405 = icmp eq ptr %15404, null
  br i1 %15405, label %15430, label %15406

15406:                                            ; preds = %15402
  %15407 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15404, i64 0, i32 1
  %15408 = load atomic i64, ptr %15407 acquire, align 8
  %15409 = icmp eq i64 %15408, 4294967297
  %15410 = trunc i64 %15408 to i32
  br i1 %15409, label %15411, label %15419

15411:                                            ; preds = %15406
  store i32 0, ptr %15407, align 8, !tbaa !90
  %15412 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15404, i64 0, i32 2
  store i32 0, ptr %15412, align 4, !tbaa !92
  %15413 = load ptr, ptr %15404, align 8, !tbaa !58
  %15414 = getelementptr inbounds ptr, ptr %15413, i64 2
  %15415 = load ptr, ptr %15414, align 8
  call void %15415(ptr noundef nonnull align 8 dereferenceable(16) %15404) #21
  %15416 = load ptr, ptr %15404, align 8, !tbaa !58
  %15417 = getelementptr inbounds ptr, ptr %15416, i64 3
  %15418 = load ptr, ptr %15417, align 8
  call void %15418(ptr noundef nonnull align 8 dereferenceable(16) %15404) #21
  br label %15430

15419:                                            ; preds = %15406
  %15420 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15421 = icmp eq i8 %15420, 0
  br i1 %15421, label %15424, label %15422

15422:                                            ; preds = %15419
  %15423 = add nsw i32 %15410, -1
  store i32 %15423, ptr %15407, align 8, !tbaa !73
  br label %15426

15424:                                            ; preds = %15419
  %15425 = atomicrmw volatile add ptr %15407, i32 -1 acq_rel, align 4
  br label %15426

15426:                                            ; preds = %15424, %15422
  %15427 = phi i32 [ %15410, %15422 ], [ %15425, %15424 ]
  %15428 = icmp eq i32 %15427, 1
  br i1 %15428, label %15429, label %15430, !prof !42

15429:                                            ; preds = %15426
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15404) #21
  br label %15430

15430:                                            ; preds = %15429, %15426, %15411, %15402
  %15431 = getelementptr inbounds %struct.TestCase, ptr %16, i64 3, i32 2
  %15432 = load ptr, ptr %15431, align 8, !tbaa !23
  %15433 = getelementptr inbounds %struct.TestCase, ptr %16, i64 3, i32 2, i32 2
  %15434 = icmp eq ptr %15432, %15433
  br i1 %15434, label %15436, label %15435

15435:                                            ; preds = %15430
  call void @_ZdlPv(ptr noundef %15432) #22
  br label %15436

15436:                                            ; preds = %15435, %15430
  %15437 = load ptr, ptr %14725, align 8, !tbaa !23
  %15438 = getelementptr inbounds %struct.TestCase, ptr %16, i64 3, i32 0, i32 2
  %15439 = icmp eq ptr %15437, %15438
  br i1 %15439, label %15441, label %15440

15440:                                            ; preds = %15436
  call void @_ZdlPv(ptr noundef %15437) #22
  br label %15441

15441:                                            ; preds = %15436, %15440
  %15442 = getelementptr inbounds %struct.TestCase, ptr %16, i64 2, i32 3, i32 0, i32 1
  %15443 = load ptr, ptr %15442, align 8, !tbaa !88
  %15444 = icmp eq ptr %15443, null
  br i1 %15444, label %15469, label %15445

15445:                                            ; preds = %15441
  %15446 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15443, i64 0, i32 1
  %15447 = load atomic i64, ptr %15446 acquire, align 8
  %15448 = icmp eq i64 %15447, 4294967297
  %15449 = trunc i64 %15447 to i32
  br i1 %15448, label %15450, label %15458

15450:                                            ; preds = %15445
  store i32 0, ptr %15446, align 8, !tbaa !90
  %15451 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15443, i64 0, i32 2
  store i32 0, ptr %15451, align 4, !tbaa !92
  %15452 = load ptr, ptr %15443, align 8, !tbaa !58
  %15453 = getelementptr inbounds ptr, ptr %15452, i64 2
  %15454 = load ptr, ptr %15453, align 8
  call void %15454(ptr noundef nonnull align 8 dereferenceable(16) %15443) #21
  %15455 = load ptr, ptr %15443, align 8, !tbaa !58
  %15456 = getelementptr inbounds ptr, ptr %15455, i64 3
  %15457 = load ptr, ptr %15456, align 8
  call void %15457(ptr noundef nonnull align 8 dereferenceable(16) %15443) #21
  br label %15469

15458:                                            ; preds = %15445
  %15459 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15460 = icmp eq i8 %15459, 0
  br i1 %15460, label %15463, label %15461

15461:                                            ; preds = %15458
  %15462 = add nsw i32 %15449, -1
  store i32 %15462, ptr %15446, align 8, !tbaa !73
  br label %15465

15463:                                            ; preds = %15458
  %15464 = atomicrmw volatile add ptr %15446, i32 -1 acq_rel, align 4
  br label %15465

15465:                                            ; preds = %15463, %15461
  %15466 = phi i32 [ %15449, %15461 ], [ %15464, %15463 ]
  %15467 = icmp eq i32 %15466, 1
  br i1 %15467, label %15468, label %15469, !prof !42

15468:                                            ; preds = %15465
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15443) #21
  br label %15469

15469:                                            ; preds = %15468, %15465, %15450, %15441
  %15470 = getelementptr inbounds %struct.TestCase, ptr %16, i64 2, i32 2
  %15471 = load ptr, ptr %15470, align 8, !tbaa !23
  %15472 = getelementptr inbounds %struct.TestCase, ptr %16, i64 2, i32 2, i32 2
  %15473 = icmp eq ptr %15471, %15472
  br i1 %15473, label %15475, label %15474

15474:                                            ; preds = %15469
  call void @_ZdlPv(ptr noundef %15471) #22
  br label %15475

15475:                                            ; preds = %15474, %15469
  %15476 = load ptr, ptr %14716, align 8, !tbaa !23
  %15477 = getelementptr inbounds %struct.TestCase, ptr %16, i64 2, i32 0, i32 2
  %15478 = icmp eq ptr %15476, %15477
  br i1 %15478, label %15480, label %15479

15479:                                            ; preds = %15475
  call void @_ZdlPv(ptr noundef %15476) #22
  br label %15480

15480:                                            ; preds = %15475, %15479
  %15481 = getelementptr inbounds %struct.TestCase, ptr %16, i64 1, i32 3, i32 0, i32 1
  %15482 = load ptr, ptr %15481, align 8, !tbaa !88
  %15483 = icmp eq ptr %15482, null
  br i1 %15483, label %15508, label %15484

15484:                                            ; preds = %15480
  %15485 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15482, i64 0, i32 1
  %15486 = load atomic i64, ptr %15485 acquire, align 8
  %15487 = icmp eq i64 %15486, 4294967297
  %15488 = trunc i64 %15486 to i32
  br i1 %15487, label %15489, label %15497

15489:                                            ; preds = %15484
  store i32 0, ptr %15485, align 8, !tbaa !90
  %15490 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15482, i64 0, i32 2
  store i32 0, ptr %15490, align 4, !tbaa !92
  %15491 = load ptr, ptr %15482, align 8, !tbaa !58
  %15492 = getelementptr inbounds ptr, ptr %15491, i64 2
  %15493 = load ptr, ptr %15492, align 8
  call void %15493(ptr noundef nonnull align 8 dereferenceable(16) %15482) #21
  %15494 = load ptr, ptr %15482, align 8, !tbaa !58
  %15495 = getelementptr inbounds ptr, ptr %15494, i64 3
  %15496 = load ptr, ptr %15495, align 8
  call void %15496(ptr noundef nonnull align 8 dereferenceable(16) %15482) #21
  br label %15508

15497:                                            ; preds = %15484
  %15498 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15499 = icmp eq i8 %15498, 0
  br i1 %15499, label %15502, label %15500

15500:                                            ; preds = %15497
  %15501 = add nsw i32 %15488, -1
  store i32 %15501, ptr %15485, align 8, !tbaa !73
  br label %15504

15502:                                            ; preds = %15497
  %15503 = atomicrmw volatile add ptr %15485, i32 -1 acq_rel, align 4
  br label %15504

15504:                                            ; preds = %15502, %15500
  %15505 = phi i32 [ %15488, %15500 ], [ %15503, %15502 ]
  %15506 = icmp eq i32 %15505, 1
  br i1 %15506, label %15507, label %15508, !prof !42

15507:                                            ; preds = %15504
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15482) #21
  br label %15508

15508:                                            ; preds = %15507, %15504, %15489, %15480
  %15509 = getelementptr inbounds %struct.TestCase, ptr %16, i64 1, i32 2
  %15510 = load ptr, ptr %15509, align 8, !tbaa !23
  %15511 = getelementptr inbounds %struct.TestCase, ptr %16, i64 1, i32 2, i32 2
  %15512 = icmp eq ptr %15510, %15511
  br i1 %15512, label %15514, label %15513

15513:                                            ; preds = %15508
  call void @_ZdlPv(ptr noundef %15510) #22
  br label %15514

15514:                                            ; preds = %15513, %15508
  %15515 = load ptr, ptr %14707, align 8, !tbaa !23
  %15516 = getelementptr inbounds %struct.TestCase, ptr %16, i64 1, i32 0, i32 2
  %15517 = icmp eq ptr %15515, %15516
  br i1 %15517, label %15519, label %15518

15518:                                            ; preds = %15514
  call void @_ZdlPv(ptr noundef %15515) #22
  br label %15519

15519:                                            ; preds = %15514, %15518
  %15520 = getelementptr inbounds %struct.TestCase, ptr %16, i64 0, i32 3, i32 0, i32 1
  %15521 = load ptr, ptr %15520, align 8, !tbaa !88
  %15522 = icmp eq ptr %15521, null
  br i1 %15522, label %15547, label %15523

15523:                                            ; preds = %15519
  %15524 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15521, i64 0, i32 1
  %15525 = load atomic i64, ptr %15524 acquire, align 8
  %15526 = icmp eq i64 %15525, 4294967297
  %15527 = trunc i64 %15525 to i32
  br i1 %15526, label %15528, label %15536

15528:                                            ; preds = %15523
  store i32 0, ptr %15524, align 8, !tbaa !90
  %15529 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15521, i64 0, i32 2
  store i32 0, ptr %15529, align 4, !tbaa !92
  %15530 = load ptr, ptr %15521, align 8, !tbaa !58
  %15531 = getelementptr inbounds ptr, ptr %15530, i64 2
  %15532 = load ptr, ptr %15531, align 8
  call void %15532(ptr noundef nonnull align 8 dereferenceable(16) %15521) #21
  %15533 = load ptr, ptr %15521, align 8, !tbaa !58
  %15534 = getelementptr inbounds ptr, ptr %15533, i64 3
  %15535 = load ptr, ptr %15534, align 8
  call void %15535(ptr noundef nonnull align 8 dereferenceable(16) %15521) #21
  br label %15547

15536:                                            ; preds = %15523
  %15537 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15538 = icmp eq i8 %15537, 0
  br i1 %15538, label %15541, label %15539

15539:                                            ; preds = %15536
  %15540 = add nsw i32 %15527, -1
  store i32 %15540, ptr %15524, align 8, !tbaa !73
  br label %15543

15541:                                            ; preds = %15536
  %15542 = atomicrmw volatile add ptr %15524, i32 -1 acq_rel, align 4
  br label %15543

15543:                                            ; preds = %15541, %15539
  %15544 = phi i32 [ %15527, %15539 ], [ %15542, %15541 ]
  %15545 = icmp eq i32 %15544, 1
  br i1 %15545, label %15546, label %15547, !prof !42

15546:                                            ; preds = %15543
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15521) #21
  br label %15547

15547:                                            ; preds = %15546, %15543, %15528, %15519
  %15548 = getelementptr inbounds %struct.TestCase, ptr %16, i64 0, i32 2
  %15549 = load ptr, ptr %15548, align 8, !tbaa !23
  %15550 = getelementptr inbounds %struct.TestCase, ptr %16, i64 0, i32 2, i32 2
  %15551 = icmp eq ptr %15549, %15550
  br i1 %15551, label %15553, label %15552

15552:                                            ; preds = %15547
  call void @_ZdlPv(ptr noundef %15549) #22
  br label %15553

15553:                                            ; preds = %15552, %15547
  %15554 = load ptr, ptr %16, align 8, !tbaa !23
  %15555 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 2
  %15556 = icmp eq ptr %15554, %15555
  br i1 %15556, label %15558, label %15557

15557:                                            ; preds = %15553
  call void @_ZdlPv(ptr noundef %15554) #22
  br label %15558

15558:                                            ; preds = %15557, %15553, %14970
  %15559 = phi { ptr, i32 } [ %14971, %14970 ], [ %14973, %15553 ], [ %14973, %15557 ]
  %15560 = phi i1 [ true, %14970 ], [ false, %15553 ], [ false, %15557 ]
  %15561 = load ptr, ptr %31, align 8, !tbaa !23
  %15562 = icmp eq ptr %15561, %14812
  br i1 %15562, label %15564, label %15563

15563:                                            ; preds = %15558
  call void @_ZdlPv(ptr noundef %15561) #22
  br label %15564

15564:                                            ; preds = %15563, %15558, %14968
  %15565 = phi ptr [ %14806, %14968 ], [ %14811, %15563 ], [ %14811, %15558 ]
  %15566 = phi { ptr, i32 } [ %14969, %14968 ], [ %15559, %15563 ], [ %15559, %15558 ]
  %15567 = phi i1 [ true, %14968 ], [ %15560, %15563 ], [ %15560, %15558 ]
  %15568 = load ptr, ptr %30, align 8, !tbaa !23
  %15569 = icmp eq ptr %15568, %14807
  br i1 %15569, label %15571, label %15570

15570:                                            ; preds = %15564
  call void @_ZdlPv(ptr noundef %15568) #22
  br label %15571

15571:                                            ; preds = %15570, %15564, %14966
  %15572 = phi ptr [ %14801, %14966 ], [ %15565, %15570 ], [ %15565, %15564 ]
  %15573 = phi { ptr, i32 } [ %14967, %14966 ], [ %15566, %15570 ], [ %15566, %15564 ]
  %15574 = phi i1 [ true, %14966 ], [ %15567, %15570 ], [ %15567, %15564 ]
  %15575 = load ptr, ptr %29, align 8, !tbaa !23
  %15576 = icmp eq ptr %15575, %14802
  br i1 %15576, label %15578, label %15577

15577:                                            ; preds = %15571
  call void @_ZdlPv(ptr noundef %15575) #22
  br label %15578

15578:                                            ; preds = %15577, %15571, %14964
  %15579 = phi ptr [ %14792, %14964 ], [ %15572, %15577 ], [ %15572, %15571 ]
  %15580 = phi { ptr, i32 } [ %14965, %14964 ], [ %15573, %15577 ], [ %15573, %15571 ]
  %15581 = phi i1 [ true, %14964 ], [ %15574, %15577 ], [ %15574, %15571 ]
  %15582 = load ptr, ptr %28, align 8, !tbaa !23
  %15583 = icmp eq ptr %15582, %14793
  br i1 %15583, label %15585, label %15584

15584:                                            ; preds = %15578
  call void @_ZdlPv(ptr noundef %15582) #22
  br label %15585

15585:                                            ; preds = %15584, %15578, %14962, %14960
  %15586 = phi ptr [ %14783, %14960 ], [ %14792, %14962 ], [ %15579, %15578 ], [ %15579, %15584 ]
  %15587 = phi { ptr, i32 } [ %14961, %14960 ], [ %14963, %14962 ], [ %15580, %15578 ], [ %15580, %15584 ]
  %15588 = phi i1 [ true, %14960 ], [ true, %14962 ], [ %15581, %15578 ], [ %15581, %15584 ]
  %15589 = load ptr, ptr %27, align 8, !tbaa !23
  %15590 = icmp eq ptr %15589, %14784
  br i1 %15590, label %15592, label %15591

15591:                                            ; preds = %15585
  call void @_ZdlPv(ptr noundef %15589) #22
  br label %15592

15592:                                            ; preds = %15591, %15585, %14958, %14956
  %15593 = phi ptr [ %14774, %14956 ], [ %14783, %14958 ], [ %15586, %15585 ], [ %15586, %15591 ]
  %15594 = phi { ptr, i32 } [ %14957, %14956 ], [ %14959, %14958 ], [ %15587, %15585 ], [ %15587, %15591 ]
  %15595 = phi i1 [ true, %14956 ], [ true, %14958 ], [ %15588, %15585 ], [ %15588, %15591 ]
  %15596 = load ptr, ptr %26, align 8, !tbaa !23
  %15597 = icmp eq ptr %15596, %14775
  br i1 %15597, label %15599, label %15598

15598:                                            ; preds = %15592
  call void @_ZdlPv(ptr noundef %15596) #22
  br label %15599

15599:                                            ; preds = %15598, %15592, %14954, %14952
  %15600 = phi ptr [ %14765, %14952 ], [ %14774, %14954 ], [ %15593, %15592 ], [ %15593, %15598 ]
  %15601 = phi { ptr, i32 } [ %14953, %14952 ], [ %14955, %14954 ], [ %15594, %15592 ], [ %15594, %15598 ]
  %15602 = phi i1 [ true, %14952 ], [ true, %14954 ], [ %15595, %15592 ], [ %15595, %15598 ]
  %15603 = load ptr, ptr %25, align 8, !tbaa !23
  %15604 = icmp eq ptr %15603, %14766
  br i1 %15604, label %15606, label %15605

15605:                                            ; preds = %15599
  call void @_ZdlPv(ptr noundef %15603) #22
  br label %15606

15606:                                            ; preds = %15605, %15599, %14950, %14948
  %15607 = phi ptr [ %14760, %14948 ], [ %14765, %14950 ], [ %15600, %15599 ], [ %15600, %15605 ]
  %15608 = phi { ptr, i32 } [ %14949, %14948 ], [ %14951, %14950 ], [ %15601, %15599 ], [ %15601, %15605 ]
  %15609 = phi i1 [ true, %14948 ], [ true, %14950 ], [ %15602, %15599 ], [ %15602, %15605 ]
  %15610 = load ptr, ptr %24, align 8, !tbaa !23
  %15611 = icmp eq ptr %15610, %14761
  br i1 %15611, label %15613, label %15612

15612:                                            ; preds = %15606
  call void @_ZdlPv(ptr noundef %15610) #22
  br label %15613

15613:                                            ; preds = %15612, %15606, %14946
  %15614 = phi ptr [ %14751, %14946 ], [ %15607, %15612 ], [ %15607, %15606 ]
  %15615 = phi { ptr, i32 } [ %14947, %14946 ], [ %15608, %15612 ], [ %15608, %15606 ]
  %15616 = phi i1 [ true, %14946 ], [ %15609, %15612 ], [ %15609, %15606 ]
  %15617 = load ptr, ptr %23, align 8, !tbaa !23
  %15618 = icmp eq ptr %15617, %14752
  br i1 %15618, label %15620, label %15619

15619:                                            ; preds = %15613
  call void @_ZdlPv(ptr noundef %15617) #22
  br label %15620

15620:                                            ; preds = %15619, %15613, %14944, %14942
  %15621 = phi ptr [ %14742, %14942 ], [ %14751, %14944 ], [ %15614, %15613 ], [ %15614, %15619 ]
  %15622 = phi { ptr, i32 } [ %14943, %14942 ], [ %14945, %14944 ], [ %15615, %15613 ], [ %15615, %15619 ]
  %15623 = phi i1 [ true, %14942 ], [ true, %14944 ], [ %15616, %15613 ], [ %15616, %15619 ]
  %15624 = load ptr, ptr %22, align 8, !tbaa !23
  %15625 = icmp eq ptr %15624, %14743
  br i1 %15625, label %15627, label %15626

15626:                                            ; preds = %15620
  call void @_ZdlPv(ptr noundef %15624) #22
  br label %15627

15627:                                            ; preds = %15626, %15620, %14940, %14938
  %15628 = phi ptr [ %14733, %14938 ], [ %14742, %14940 ], [ %15621, %15620 ], [ %15621, %15626 ]
  %15629 = phi { ptr, i32 } [ %14939, %14938 ], [ %14941, %14940 ], [ %15622, %15620 ], [ %15622, %15626 ]
  %15630 = phi i1 [ true, %14938 ], [ true, %14940 ], [ %15623, %15620 ], [ %15623, %15626 ]
  %15631 = load ptr, ptr %21, align 8, !tbaa !23
  %15632 = icmp eq ptr %15631, %14734
  br i1 %15632, label %15634, label %15633

15633:                                            ; preds = %15627
  call void @_ZdlPv(ptr noundef %15631) #22
  br label %15634

15634:                                            ; preds = %15633, %15627, %14936, %14934
  %15635 = phi ptr [ %14725, %14934 ], [ %14733, %14936 ], [ %15628, %15627 ], [ %15628, %15633 ]
  %15636 = phi { ptr, i32 } [ %14935, %14934 ], [ %14937, %14936 ], [ %15629, %15627 ], [ %15629, %15633 ]
  %15637 = phi i1 [ true, %14934 ], [ true, %14936 ], [ %15630, %15627 ], [ %15630, %15633 ]
  %15638 = load ptr, ptr %20, align 8, !tbaa !23
  %15639 = icmp eq ptr %15638, %14726
  br i1 %15639, label %15641, label %15640

15640:                                            ; preds = %15634
  call void @_ZdlPv(ptr noundef %15638) #22
  br label %15641

15641:                                            ; preds = %15640, %15634, %14932, %14930
  %15642 = phi ptr [ %14716, %14930 ], [ %14725, %14932 ], [ %15635, %15634 ], [ %15635, %15640 ]
  %15643 = phi { ptr, i32 } [ %14931, %14930 ], [ %14933, %14932 ], [ %15636, %15634 ], [ %15636, %15640 ]
  %15644 = phi i1 [ true, %14930 ], [ true, %14932 ], [ %15637, %15634 ], [ %15637, %15640 ]
  %15645 = load ptr, ptr %19, align 8, !tbaa !23
  %15646 = icmp eq ptr %15645, %14717
  br i1 %15646, label %15648, label %15647

15647:                                            ; preds = %15641
  call void @_ZdlPv(ptr noundef %15645) #22
  br label %15648

15648:                                            ; preds = %15647, %15641, %14928, %14926
  %15649 = phi ptr [ %14707, %14926 ], [ %14716, %14928 ], [ %15642, %15641 ], [ %15642, %15647 ]
  %15650 = phi { ptr, i32 } [ %14927, %14926 ], [ %14929, %14928 ], [ %15643, %15641 ], [ %15643, %15647 ]
  %15651 = phi i1 [ true, %14926 ], [ true, %14928 ], [ %15644, %15641 ], [ %15644, %15647 ]
  %15652 = load ptr, ptr %18, align 8, !tbaa !23
  %15653 = icmp eq ptr %15652, %14708
  br i1 %15653, label %15655, label %15654

15654:                                            ; preds = %15648
  call void @_ZdlPv(ptr noundef %15652) #22
  br label %15655

15655:                                            ; preds = %15654, %15648, %14924, %14922
  %15656 = phi ptr [ %16, %14922 ], [ %14707, %14924 ], [ %15649, %15648 ], [ %15649, %15654 ]
  %15657 = phi { ptr, i32 } [ %14923, %14922 ], [ %14925, %14924 ], [ %15650, %15648 ], [ %15650, %15654 ]
  %15658 = phi i1 [ true, %14922 ], [ true, %14924 ], [ %15651, %15648 ], [ %15651, %15654 ]
  %15659 = load ptr, ptr %17, align 8, !tbaa !23
  %15660 = icmp eq ptr %15659, %14701
  br i1 %15660, label %15662, label %15661

15661:                                            ; preds = %15655
  call void @_ZdlPv(ptr noundef %15659) #22
  br label %15662

15662:                                            ; preds = %15661, %15655
  %15663 = icmp ne ptr %16, %15656
  %15664 = select i1 %15658, i1 %15663, i1 false
  br i1 %15664, label %15665, label %15708

15665:                                            ; preds = %15662, %15706
  %15666 = phi ptr [ %15667, %15706 ], [ %15656, %15662 ]
  %15667 = getelementptr inbounds %struct.TestCase, ptr %15666, i64 -1
  %15668 = getelementptr %struct.TestCase, ptr %15666, i64 -1, i32 3, i32 0, i32 1
  %15669 = load ptr, ptr %15668, align 8, !tbaa !88
  %15670 = icmp eq ptr %15669, null
  br i1 %15670, label %15695, label %15671

15671:                                            ; preds = %15665
  %15672 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15669, i64 0, i32 1
  %15673 = load atomic i64, ptr %15672 acquire, align 8
  %15674 = icmp eq i64 %15673, 4294967297
  %15675 = trunc i64 %15673 to i32
  br i1 %15674, label %15676, label %15684

15676:                                            ; preds = %15671
  store i32 0, ptr %15672, align 8, !tbaa !90
  %15677 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15669, i64 0, i32 2
  store i32 0, ptr %15677, align 4, !tbaa !92
  %15678 = load ptr, ptr %15669, align 8, !tbaa !58
  %15679 = getelementptr inbounds ptr, ptr %15678, i64 2
  %15680 = load ptr, ptr %15679, align 8
  call void %15680(ptr noundef nonnull align 8 dereferenceable(16) %15669) #21
  %15681 = load ptr, ptr %15669, align 8, !tbaa !58
  %15682 = getelementptr inbounds ptr, ptr %15681, i64 3
  %15683 = load ptr, ptr %15682, align 8
  call void %15683(ptr noundef nonnull align 8 dereferenceable(16) %15669) #21
  br label %15695

15684:                                            ; preds = %15671
  %15685 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15686 = icmp eq i8 %15685, 0
  br i1 %15686, label %15689, label %15687

15687:                                            ; preds = %15684
  %15688 = add nsw i32 %15675, -1
  store i32 %15688, ptr %15672, align 8, !tbaa !73
  br label %15691

15689:                                            ; preds = %15684
  %15690 = atomicrmw volatile add ptr %15672, i32 -1 acq_rel, align 4
  br label %15691

15691:                                            ; preds = %15689, %15687
  %15692 = phi i32 [ %15675, %15687 ], [ %15690, %15689 ]
  %15693 = icmp eq i32 %15692, 1
  br i1 %15693, label %15694, label %15695, !prof !42

15694:                                            ; preds = %15691
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15669) #21
  br label %15695

15695:                                            ; preds = %15694, %15691, %15676, %15665
  %15696 = getelementptr %struct.TestCase, ptr %15666, i64 -1, i32 2
  %15697 = load ptr, ptr %15696, align 8, !tbaa !23
  %15698 = getelementptr %struct.TestCase, ptr %15666, i64 -1, i32 2, i32 2
  %15699 = icmp eq ptr %15697, %15698
  br i1 %15699, label %15701, label %15700

15700:                                            ; preds = %15695
  call void @_ZdlPv(ptr noundef %15697) #22
  br label %15701

15701:                                            ; preds = %15700, %15695
  %15702 = load ptr, ptr %15667, align 8, !tbaa !23
  %15703 = getelementptr %struct.TestCase, ptr %15666, i64 -1, i32 0, i32 2
  %15704 = icmp eq ptr %15702, %15703
  br i1 %15704, label %15706, label %15705

15705:                                            ; preds = %15701
  call void @_ZdlPv(ptr noundef %15702) #22
  br label %15706

15706:                                            ; preds = %15701, %15705
  %15707 = icmp eq ptr %15667, %16
  br i1 %15707, label %15708, label %15665

15708:                                            ; preds = %15706, %15662
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %16) #21
  br label %762

15709:                                            ; preds = %14918, %14921
  call void @llvm.lifetime.end.p0(i64 1320, ptr nonnull %16) #21
  store i32 %14816, ptr @dummy536, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %17)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %18)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %19)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %20)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %21)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %22)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %23)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %24)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %25)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %26)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %27)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %28)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %29)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %30)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %31)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %3) #21
  %15710 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 2
  store ptr %15710, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  store i64 60, ptr %2, align 8, !tbaa !74
  %15711 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %4, ptr noundef nonnull align 8 dereferenceable(8) %2, i64 noundef 0)
  store ptr %15711, ptr %4, align 8, !tbaa !23
  %15712 = load i64, ptr %2, align 8, !tbaa !74
  store i64 %15712, ptr %15710, align 8, !tbaa !13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(60) %15711, ptr noundef nonnull align 1 dereferenceable(60) @.str.195, i64 60, i1 false)
  %15713 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 1
  store i64 %15712, ptr %15713, align 8, !tbaa !10
  %15714 = getelementptr inbounds i8, ptr %15711, i64 %15712
  store i8 0, ptr %15714, align 1, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #21
  invoke void @_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull %4, i32 noundef 0)
          to label %15715 unwind label %15760

15715:                                            ; preds = %15709
  %15716 = invoke noundef i32 @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE(i32 noundef 4, ptr nonnull %3, i64 1)
          to label %15717 unwind label %15762

15717:                                            ; preds = %15715
  %15718 = getelementptr inbounds %struct.TestCase, ptr %3, i64 0, i32 3, i32 0, i32 1
  %15719 = load ptr, ptr %15718, align 8, !tbaa !88
  %15720 = icmp eq ptr %15719, null
  br i1 %15720, label %15745, label %15721

15721:                                            ; preds = %15717
  %15722 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15719, i64 0, i32 1
  %15723 = load atomic i64, ptr %15722 acquire, align 8
  %15724 = icmp eq i64 %15723, 4294967297
  %15725 = trunc i64 %15723 to i32
  br i1 %15724, label %15726, label %15734

15726:                                            ; preds = %15721
  store i32 0, ptr %15722, align 8, !tbaa !90
  %15727 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15719, i64 0, i32 2
  store i32 0, ptr %15727, align 4, !tbaa !92
  %15728 = load ptr, ptr %15719, align 8, !tbaa !58
  %15729 = getelementptr inbounds ptr, ptr %15728, i64 2
  %15730 = load ptr, ptr %15729, align 8
  call void %15730(ptr noundef nonnull align 8 dereferenceable(16) %15719) #21
  %15731 = load ptr, ptr %15719, align 8, !tbaa !58
  %15732 = getelementptr inbounds ptr, ptr %15731, i64 3
  %15733 = load ptr, ptr %15732, align 8
  call void %15733(ptr noundef nonnull align 8 dereferenceable(16) %15719) #21
  br label %15745

15734:                                            ; preds = %15721
  %15735 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15736 = icmp eq i8 %15735, 0
  br i1 %15736, label %15739, label %15737

15737:                                            ; preds = %15734
  %15738 = add nsw i32 %15725, -1
  store i32 %15738, ptr %15722, align 8, !tbaa !73
  br label %15741

15739:                                            ; preds = %15734
  %15740 = atomicrmw volatile add ptr %15722, i32 -1 acq_rel, align 4
  br label %15741

15741:                                            ; preds = %15739, %15737
  %15742 = phi i32 [ %15725, %15737 ], [ %15740, %15739 ]
  %15743 = icmp eq i32 %15742, 1
  br i1 %15743, label %15744, label %15745, !prof !42

15744:                                            ; preds = %15741
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15719) #21
  br label %15745

15745:                                            ; preds = %15744, %15741, %15726, %15717
  %15746 = getelementptr inbounds %struct.TestCase, ptr %3, i64 0, i32 2
  %15747 = load ptr, ptr %15746, align 8, !tbaa !23
  %15748 = getelementptr inbounds %struct.TestCase, ptr %3, i64 0, i32 2, i32 2
  %15749 = icmp eq ptr %15747, %15748
  br i1 %15749, label %15751, label %15750

15750:                                            ; preds = %15745
  call void @_ZdlPv(ptr noundef %15747) #22
  br label %15751

15751:                                            ; preds = %15750, %15745
  %15752 = load ptr, ptr %3, align 8, !tbaa !23
  %15753 = getelementptr inbounds %struct.TestCase, ptr %3, i64 0, i32 0, i32 2
  %15754 = icmp eq ptr %15752, %15753
  br i1 %15754, label %15756, label %15755

15755:                                            ; preds = %15751
  call void @_ZdlPv(ptr noundef %15752) #22
  br label %15756

15756:                                            ; preds = %15755, %15751
  %15757 = load ptr, ptr %4, align 8, !tbaa !23
  %15758 = icmp eq ptr %15757, %15710
  br i1 %15758, label %15808, label %15759

15759:                                            ; preds = %15756
  call void @_ZdlPv(ptr noundef %15757) #22
  br label %15808

15760:                                            ; preds = %15709
  %15761 = landingpad { ptr, i32 }
          cleanup
  br label %15802

15762:                                            ; preds = %15715
  %15763 = landingpad { ptr, i32 }
          cleanup
  %15764 = getelementptr inbounds %struct.TestCase, ptr %3, i64 0, i32 3, i32 0, i32 1
  %15765 = load ptr, ptr %15764, align 8, !tbaa !88
  %15766 = icmp eq ptr %15765, null
  br i1 %15766, label %15791, label %15767

15767:                                            ; preds = %15762
  %15768 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15765, i64 0, i32 1
  %15769 = load atomic i64, ptr %15768 acquire, align 8
  %15770 = icmp eq i64 %15769, 4294967297
  %15771 = trunc i64 %15769 to i32
  br i1 %15770, label %15772, label %15780

15772:                                            ; preds = %15767
  store i32 0, ptr %15768, align 8, !tbaa !90
  %15773 = getelementptr inbounds %"class.std::_Sp_counted_base", ptr %15765, i64 0, i32 2
  store i32 0, ptr %15773, align 4, !tbaa !92
  %15774 = load ptr, ptr %15765, align 8, !tbaa !58
  %15775 = getelementptr inbounds ptr, ptr %15774, i64 2
  %15776 = load ptr, ptr %15775, align 8
  call void %15776(ptr noundef nonnull align 8 dereferenceable(16) %15765) #21
  %15777 = load ptr, ptr %15765, align 8, !tbaa !58
  %15778 = getelementptr inbounds ptr, ptr %15777, i64 3
  %15779 = load ptr, ptr %15778, align 8
  call void %15779(ptr noundef nonnull align 8 dereferenceable(16) %15765) #21
  br label %15791

15780:                                            ; preds = %15767
  %15781 = load i8, ptr @__libc_single_threaded, align 1, !tbaa !13
  %15782 = icmp eq i8 %15781, 0
  br i1 %15782, label %15785, label %15783

15783:                                            ; preds = %15780
  %15784 = add nsw i32 %15771, -1
  store i32 %15784, ptr %15768, align 8, !tbaa !73
  br label %15787

15785:                                            ; preds = %15780
  %15786 = atomicrmw volatile add ptr %15768, i32 -1 acq_rel, align 4
  br label %15787

15787:                                            ; preds = %15785, %15783
  %15788 = phi i32 [ %15771, %15783 ], [ %15786, %15785 ]
  %15789 = icmp eq i32 %15788, 1
  br i1 %15789, label %15790, label %15791, !prof !42

15790:                                            ; preds = %15787
  call void @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv(ptr noundef nonnull align 8 dereferenceable(16) %15765) #21
  br label %15791

15791:                                            ; preds = %15790, %15787, %15772, %15762
  %15792 = getelementptr inbounds %struct.TestCase, ptr %3, i64 0, i32 2
  %15793 = load ptr, ptr %15792, align 8, !tbaa !23
  %15794 = getelementptr inbounds %struct.TestCase, ptr %3, i64 0, i32 2, i32 2
  %15795 = icmp eq ptr %15793, %15794
  br i1 %15795, label %15797, label %15796

15796:                                            ; preds = %15791
  call void @_ZdlPv(ptr noundef %15793) #22
  br label %15797

15797:                                            ; preds = %15796, %15791
  %15798 = load ptr, ptr %3, align 8, !tbaa !23
  %15799 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  %15800 = icmp eq ptr %15798, %15799
  br i1 %15800, label %15802, label %15801

15801:                                            ; preds = %15797
  call void @_ZdlPv(ptr noundef %15798) #22
  br label %15802

15802:                                            ; preds = %15801, %15797, %15760
  %15803 = phi { ptr, i32 } [ %15761, %15760 ], [ %15763, %15797 ], [ %15763, %15801 ]
  %15804 = load ptr, ptr %4, align 8, !tbaa !23
  %15805 = icmp eq ptr %15804, %15710
  br i1 %15805, label %15807, label %15806

15806:                                            ; preds = %15802
  call void @_ZdlPv(ptr noundef %15804) #22
  br label %15807

15807:                                            ; preds = %15806, %15802
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %3) #21
  br label %762

15808:                                            ; preds = %15756, %15759
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %3) #21
  store i32 %15716, ptr @dummy538, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %1) #21
  %15809 = getelementptr inbounds i8, ptr %1, i64 8
  store i64 0, ptr %15809, align 8
  %15810 = getelementptr inbounds %"class.std::function", ptr %1, i64 0, i32 1
  %15811 = getelementptr inbounds %"class.std::_Function_base", ptr %1, i64 0, i32 1
  store ptr @_Z22CheckAvgIterationsRateRK7Results, ptr %1, align 8, !tbaa !47
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E9_M_invokeERKSt9_Any_dataS2_, ptr %15810, align 8, !tbaa !115
  store ptr @_ZNSt17_Function_handlerIFvRK7ResultsEPS3_E10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, ptr %15811, align 8, !tbaa !118
  %15812 = invoke noundef i64 @_Z10AddCheckerPKcRKSt8functionIFvRK7ResultsEE(ptr noundef nonnull @.str.187, ptr noundef nonnull align 8 dereferenceable(32) %1)
          to label %15813 unwind label %15821

15813:                                            ; preds = %15808
  %15814 = load ptr, ptr %15811, align 8, !tbaa !118
  %15815 = icmp eq ptr %15814, null
  br i1 %15815, label %15831, label %15816

15816:                                            ; preds = %15813
  %15817 = invoke noundef zeroext i1 %15814(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 8 dereferenceable(16) %1, i32 noundef 3)
          to label %15831 unwind label %15818

15818:                                            ; preds = %15816
  %15819 = landingpad { ptr, i32 }
          catch ptr null
  %15820 = extractvalue { ptr, i32 } %15819, 0
  call void @__clang_call_terminate(ptr %15820) #24
  unreachable

15821:                                            ; preds = %15808
  %15822 = landingpad { ptr, i32 }
          cleanup
  %15823 = load ptr, ptr %15811, align 8, !tbaa !118
  %15824 = icmp eq ptr %15823, null
  br i1 %15824, label %15830, label %15825

15825:                                            ; preds = %15821
  %15826 = invoke noundef zeroext i1 %15823(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 8 dereferenceable(16) %1, i32 noundef 3)
          to label %15830 unwind label %15827

15827:                                            ; preds = %15825
  %15828 = landingpad { ptr, i32 }
          catch ptr null
  %15829 = extractvalue { ptr, i32 } %15828, 0
  call void @__clang_call_terminate(ptr %15829) #24
  unreachable

15830:                                            ; preds = %15825, %15821
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %1) #21
  br label %762

15831:                                            ; preds = %15813, %15816
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %1) #21
  store i64 %15812, ptr @dummy549, align 8, !tbaa !74
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #20

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #20

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umin.i64(i64, i64) #20

attributes #0 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #6 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { noreturn uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { noinline noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #11 = { mustprogress norecurse uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { mustprogress noinline nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { mustprogress nofree nounwind willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { inlinehint mustprogress noreturn uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { noreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { mustprogress nofree nounwind willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #21 = { nounwind }
attributes #22 = { builtin nounwind }
attributes #23 = { noreturn }
attributes #24 = { noreturn nounwind }
attributes #25 = { builtin allocsize(0) }
attributes #26 = { nounwind willreturn memory(read) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !7, i64 0}
!6 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !7, i64 0}
!7 = !{!"any pointer", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C++ TBAA"}
!10 = !{!11, !12, i64 8}
!11 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !6, i64 0, !12, i64 8, !8, i64 16}
!12 = !{!"long", !8, i64 0}
!13 = !{!8, !8, i64 0}
!14 = !{i64 0, i64 8, !15, i64 8, i64 4, !17, i64 12, i64 4, !19}
!15 = !{!16, !16, i64 0}
!16 = !{!"double", !8, i64 0}
!17 = !{!18, !18, i64 0}
!18 = !{!"_ZTSN9benchmark7Counter5FlagsE", !8, i64 0}
!19 = !{!20, !20, i64 0}
!20 = !{!"_ZTSN9benchmark7Counter4OneKE", !8, i64 0}
!21 = !{i64 0, i64 4, !17, i64 4, i64 4, !19}
!22 = !{i64 0, i64 4, !19}
!23 = !{!11, !7, i64 0}
!24 = !{!25, !26, i64 24}
!25 = !{!"_ZTSN9benchmark5StateE", !12, i64 0, !12, i64 8, !12, i64 16, !26, i64 24, !26, i64 25, !26, i64 26, !27, i64 32, !12, i64 56, !31, i64 64, !39, i64 112, !39, i64 116, !7, i64 120, !7, i64 128, !7, i64 136}
!26 = !{!"bool", !8, i64 0}
!27 = !{!"_ZTSSt6vectorIlSaIlEE", !28, i64 0}
!28 = !{!"_ZTSSt12_Vector_baseIlSaIlEE", !29, i64 0}
!29 = !{!"_ZTSNSt12_Vector_baseIlSaIlEE12_Vector_implE", !30, i64 0}
!30 = !{!"_ZTSNSt12_Vector_baseIlSaIlEE17_Vector_impl_dataE", !7, i64 0, !7, i64 8, !7, i64 16}
!31 = !{!"_ZTSSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEE", !32, i64 0}
!32 = !{!"_ZTSSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE", !33, i64 0}
!33 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE13_Rb_tree_implISE_Lb1EEE", !34, i64 0, !36, i64 8}
!34 = !{!"_ZTSSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE", !35, i64 0}
!35 = !{!"_ZTSSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE"}
!36 = !{!"_ZTSSt15_Rb_tree_header", !37, i64 0, !12, i64 32}
!37 = !{!"_ZTSSt18_Rb_tree_node_base", !38, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}
!38 = !{!"_ZTSSt14_Rb_tree_color", !8, i64 0}
!39 = !{!"int", !8, i64 0}
!40 = !{i8 0, i8 2}
!41 = !{}
!42 = !{!"branch_weights", i32 1, i32 2000}
!43 = !{!25, !12, i64 16}
!44 = !{!25, !12, i64 0}
!45 = !{!25, !12, i64 8}
!46 = !{!36, !7, i64 8}
!47 = !{!7, !7, i64 0}
!48 = distinct !{!48, !49}
!49 = !{!"llvm.loop.mustprogress"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_: argument 0"}
!52 = distinct !{!52, !"_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_"}
!53 = !{!"branch_weights", i32 1, i32 1048575}
!54 = !{!55, !7, i64 0}
!55 = !{!"_ZTSN9benchmark8internal7LogTypeE", !7, i64 0}
!56 = !{!57, !7, i64 0}
!57 = !{!"_ZTSN9benchmark8internal12CheckHandlerE", !7, i64 0}
!58 = !{!59, !59, i64 0}
!59 = !{!"vtable pointer", !9, i64 0}
!60 = !{!61, !63, i64 32}
!61 = !{!"_ZTSSt8ios_base", !12, i64 8, !12, i64 16, !62, i64 24, !63, i64 28, !63, i64 32, !7, i64 40, !64, i64 48, !8, i64 64, !39, i64 192, !7, i64 200, !65, i64 208}
!62 = !{!"_ZTSSt13_Ios_Fmtflags", !8, i64 0}
!63 = !{!"_ZTSSt12_Ios_Iostate", !8, i64 0}
!64 = !{!"_ZTSNSt8ios_base6_WordsE", !7, i64 0, !12, i64 8}
!65 = !{!"_ZTSSt6locale", !7, i64 0}
!66 = !{!67, !7, i64 240}
!67 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !61, i64 0, !7, i64 216, !8, i64 224, !26, i64 225, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256}
!68 = !{!69, !8, i64 56}
!69 = !{!"_ZTSSt5ctypeIcE", !70, i64 0, !7, i64 16, !26, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !8, i64 56, !8, i64 57, !8, i64 313, !8, i64 569}
!70 = !{!"_ZTSNSt6locale5facetE", !39, i64 8}
!71 = !{!25, !26, i64 26}
!72 = !{i64 55518}
!73 = !{!39, !39, i64 0}
!74 = !{!12, !12, i64 0}
!75 = !{!76, !12, i64 8}
!76 = !{!"_ZTSSi", !12, i64 8}
!77 = !{!78, !16, i64 0}
!78 = !{!"_ZTSN9benchmark7CounterE", !16, i64 0, !18, i64 8, !20, i64 12}
!79 = !{!78, !18, i64 8}
!80 = !{!78, !20, i64 12}
!81 = !{!82, !7, i64 8}
!82 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeE", !7, i64 0, !7, i64 8}
!83 = !{!36, !12, i64 32}
!84 = !{!37, !7, i64 24}
!85 = distinct !{!85, !49}
!86 = !{!36, !7, i64 16}
!87 = distinct !{!87, !49}
!88 = !{!89, !7, i64 0}
!89 = !{!"_ZTSSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE", !7, i64 0}
!90 = !{!91, !39, i64 8}
!91 = !{!"_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE", !39, i64 8, !39, i64 12}
!92 = !{!91, !39, i64 12}
!93 = !{!94, !7, i64 216}
!94 = !{!"_ZTSN9benchmark8internal17FunctionBenchmarkE", !95, i64 0, !7, i64 216}
!95 = !{!"_ZTSN9benchmark8internal9BenchmarkE", !11, i64 8, !96, i64 40, !97, i64 48, !101, i64 72, !105, i64 96, !26, i64 100, !39, i64 104, !16, i64 112, !12, i64 120, !39, i64 128, !26, i64 132, !26, i64 133, !26, i64 134, !106, i64 136, !7, i64 144, !107, i64 152, !111, i64 176, !7, i64 200, !7, i64 208}
!96 = !{!"_ZTSN9benchmark8internal21AggregationReportModeE", !8, i64 0}
!97 = !{!"_ZTSSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE", !98, i64 0}
!98 = !{!"_ZTSSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE", !99, i64 0}
!99 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implE", !100, i64 0}
!100 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !7, i64 0, !7, i64 8, !7, i64 16}
!101 = !{!"_ZTSSt6vectorIS_IlSaIlEESaIS1_EE", !102, i64 0}
!102 = !{!"_ZTSSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE", !103, i64 0}
!103 = !{!"_ZTSNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE12_Vector_implE", !104, i64 0}
!104 = !{!"_ZTSNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE17_Vector_impl_dataE", !7, i64 0, !7, i64 8, !7, i64 16}
!105 = !{!"_ZTSN9benchmark8TimeUnitE", !8, i64 0}
!106 = !{!"_ZTSN9benchmark4BigOE", !8, i64 0}
!107 = !{!"_ZTSSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE", !108, i64 0}
!108 = !{!"_ZTSSt12_Vector_baseIN9benchmark8internal10StatisticsESaIS2_EE", !109, i64 0}
!109 = !{!"_ZTSNSt12_Vector_baseIN9benchmark8internal10StatisticsESaIS2_EE12_Vector_implE", !110, i64 0}
!110 = !{!"_ZTSNSt12_Vector_baseIN9benchmark8internal10StatisticsESaIS2_EE17_Vector_impl_dataE", !7, i64 0, !7, i64 8, !7, i64 16}
!111 = !{!"_ZTSSt6vectorIiSaIiEE", !112, i64 0}
!112 = !{!"_ZTSSt12_Vector_baseIiSaIiEE", !113, i64 0}
!113 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE12_Vector_implE", !114, i64 0}
!114 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !7, i64 0, !7, i64 8, !7, i64 16}
!115 = !{!116, !7, i64 24}
!116 = !{!"_ZTSSt8functionIFvRK7ResultsEE", !117, i64 0, !7, i64 24}
!117 = !{!"_ZTSSt14_Function_base", !8, i64 0, !7, i64 16}
!118 = !{!117, !7, i64 16}
