; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/DOE-ProxyApps-C++/miniFE/main.cpp'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/DOE-ProxyApps-C++/miniFE/main.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { ptr, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", ptr, i8, i8, ptr, ptr, ptr, ptr }
%"class.std::ios_base" = type { ptr, i64, i64, i32, i32, i32, ptr, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, ptr, %"class.std::locale" }
%"struct.std::ios_base::_Words" = type { ptr, i64 }
%"class.std::locale" = type { ptr }
%"struct.miniFE::Parameters" = type <{ i32, i32, i32, i32, i32, i32, float, [4 x i8], %"class.std::__cxx11::basic_string", i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { ptr }
%union.anon = type { i64, [8 x i8] }
%struct.Box = type { [6 x i32] }
%"class.std::__cxx11::basic_ostringstream" = type { %"class.std::basic_ostream.base", %"class.std::__cxx11::basic_stringbuf", %"class.std::basic_ios" }
%"class.std::basic_ostream.base" = type { ptr }
%"class.std::__cxx11::basic_stringbuf" = type { %"class.std::basic_streambuf", i32, %"class.std::__cxx11::basic_string" }
%"class.std::basic_streambuf" = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, %"class.std::locale" }
%class.YAML_Doc = type { %class.YAML_Element, %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string" }
%class.YAML_Element = type { %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::vector.3" }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<YAML_Element *, std::allocator<YAML_Element *>>::_Vector_impl" }
%"struct.std::_Vector_base<YAML_Element *, std::allocator<YAML_Element *>>::_Vector_impl" = type { %"struct.std::_Vector_base<YAML_Element *, std::allocator<YAML_Element *>>::_Vector_impl_data" }
%"struct.std::_Vector_base<YAML_Element *, std::allocator<YAML_Element *>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], ptr, i8, [7 x i8], ptr, ptr, ptr, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ ptr, i32 }>
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, ptr }
%"class.miniFE::simple_mesh_description" = type { %"class.std::set", %"class.std::set", %"class.std::map", %struct.Box, %struct.Box }
%"class.std::set" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, ptr, ptr, ptr }
%"class.std::map" = type { %"class.std::_Rb_tree.12" }
%"class.std::_Rb_tree.12" = type { %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.miniFE::CSRMatrix" = type <{ i8, [7 x i8], %"class.std::vector.16", %"class.std::vector.16", %"class.std::vector.16", %"class.std::vector.16", %"class.std::vector.21", i32, [4 x i8] }>
%"class.std::vector.16" = type { %"struct.std::_Vector_base.17" }
%"struct.std::_Vector_base.17" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.21" = type { %"struct.std::_Vector_base.22" }
%"struct.std::_Vector_base.22" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"struct.miniFE::Vector" = type { i32, i32, %"class.std::vector.21" }
%"struct.std::_Rb_tree_node.44" = type <{ %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.45", [4 x i8] }>
%"struct.__gnu_cxx::__aligned_membuf.45" = type { [4 x i8] }
%struct.MatrixInitOp = type { ptr, ptr, ptr, i32, i32, i32, i32, ptr, ptr, ptr, ptr, i32, i32, ptr }
%"struct.std::pair" = type { i32, i32 }
%"struct.std::pair.31" = type { i32, i64 }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [8 x i8] }
%"struct.__gnu_cxx::__ops::_Iter_less_iter" = type { i8 }
%"struct.miniFE::ElemData" = type { i64, [8 x i32], [192 x double], [24 x double], [36 x double], [8 x double] }

$_ZN6miniFE6driverIdiiEEiRK3BoxRS1_RNS_10ParametersER8YAML_Doc = comdat any

$__clang_call_terminate = comdat any

$_ZN6miniFE17compute_imbalanceIiEEvRK3BoxS3_RfS4_R8YAML_Docb = comdat any

$_ZN6miniFE23simple_mesh_descriptionIiEC2ERK3BoxS4_ = comdat any

$_ZN6miniFE25generate_matrix_structureINS_9CSRMatrixIdiiEEEEiRKNS_23simple_mesh_descriptionINT_17GlobalOrdinalTypeEEERS4_ = comdat any

$_ZN6miniFE16impose_dirichletINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEEvNT_10ScalarTypeERS5_RT0_iiiRKSt3setINS5_17GlobalOrdinalTypeESt4lessISB_ESaISB_EE = comdat any

$_ZN6miniFE20compute_matrix_statsINS_9CSRMatrixIdiiEEEEmRKT_iiR8YAML_Doc = comdat any

$_ZN6miniFE31rearrange_matrix_local_externalINS_9CSRMatrixIdiiEEEEvRT_ = comdat any

$_ZN6miniFE8cg_solveINS_9CSRMatrixIdiiEENS_6VectorIdiiEENS_14matvec_overlapIS2_S4_EEEEvRT_RKT0_RS9_T1_NS7_16LocalOrdinalTypeERNS_10TypeTraitsINS7_10ScalarTypeEE14magnitude_typeERSE_SJ_Pd = comdat any

$_ZN6miniFE8cg_solveINS_9CSRMatrixIdiiEENS_6VectorIdiiEENS_10matvec_stdIS2_S4_EEEEvRT_RKT0_RS9_T1_NS7_16LocalOrdinalTypeERNS_10TypeTraitsINS7_10ScalarTypeEE14magnitude_typeERSE_SJ_Pd = comdat any

$_ZN6miniFE15verify_solutionINS_6VectorIdiiEEEEiRKNS_23simple_mesh_descriptionINT_17GlobalOrdinalTypeEEERKS4_db = comdat any

$_ZN6miniFE9CSRMatrixIdiiED2Ev = comdat any

$_ZN6miniFE23simple_mesh_descriptionIiED2Ev = comdat any

$_ZN6miniFE20create_map_id_to_rowIiEEviiiRK3BoxRSt3mapIT_S5_St4lessIS5_ESaISt4pairIKS5_S5_EEE = comdat any

$_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev = comdat any

$_ZNSt3setIiSt4lessIiESaIiEED2Ev = comdat any

$_ZN6miniFE7get_idsIiEEviiiRK3BoxRSt6vectorIT_SaIS5_EEb = comdat any

$_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEE6insertIS2_IiiEEENSt9enable_ifIXsr16is_constructibleIS4_T_EE5valueES2_ISt17_Rb_tree_iteratorIS4_EbEE4typeEOSA_ = comdat any

$_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEE6insertIS2_IimEEENSt9enable_ifIXsr16is_constructibleIS4_T_EE5valueES2_ISt17_Rb_tree_iteratorIS4_EbEE4typeEOSA_ = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_ = comdat any

$_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE = comdat any

$_ZN6miniFE9CSRMatrixIdiiE13reserve_spaceEjj = comdat any

$_ZNSt6vectorIiSaIiEE17_M_default_appendEm = comdat any

$_ZN12MatrixInitOpIN6miniFE9CSRMatrixIdiiEEEC2ERKSt6vectorIiSaIiEES8_S8_iiiiRKNS0_23simple_mesh_descriptionIiEERS2_ = comdat any

$_ZN12MatrixInitOpIN6miniFE9CSRMatrixIdiiEEEclEi = comdat any

$_ZNSt6vectorIdSaIdEE17_M_default_appendEm = comdat any

$_ZSt16__introsort_loopIPilN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_ = comdat any

$_ZSt22__final_insertion_sortIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_ = comdat any

$_ZSt11__make_heapIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_ = comdat any

$_ZN6miniFE20perform_element_loopIiNS_9CSRMatrixIdiiEENS_6VectorIdiiEEEEvRKNS_23simple_mesh_descriptionIT_EERK3BoxRT0_RT1_RNS_10ParametersE = comdat any

$_ZN6miniFE23compute_gradient_valuesIdEEvPT_ = comdat any

$_ZN6miniFE25get_elem_nodes_and_coordsIidEEvRKNS_23simple_mesh_descriptionIT_EES2_PS2_PT0_ = comdat any

$_ZN6miniFE4Hex820diffusionMatrix_symmIdEEvPKT_S4_PS2_ = comdat any

$_ZN6miniFE4Hex812sourceVectorIdEEvPKT_S4_PS2_ = comdat any

$_ZN6miniFE4Hex827gradients_and_invJ_and_detJIdEEvPKT_S4_PS2_RS2_ = comdat any

$_ZN6miniFE4Hex818gradients_and_detJIdEEvPKT_S4_RS2_ = comdat any

$_ZN6miniFE23sum_in_symm_elem_matrixINS_9CSRMatrixIdiiEEEEvmPKNT_17GlobalOrdinalTypeEPKNS3_10ScalarTypeERS3_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [75 x i8] c"One or more processors have 0 equations. Not currently supported. Exiting.\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"miniFE.\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"miniFE\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"2.0\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"Total Program Time\00", align 1
@.str.8 = private unnamed_addr constant [22 x i8] c"Global Run Parameters\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"dimensions\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"load_imbalance\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"1 (yes)\00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"mv_overlap_comm_comp\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"0 (no)\00", align 1
@.str.17 = private unnamed_addr constant [21 x i8] c"number of processors\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"kernel name\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"kernel release\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"processor\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"Build\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"CXX\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"using MPI\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"Run Date/Time\00", align 1
@_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE = external unnamed_addr constant [4 x ptr], align 8
@_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE = external unnamed_addr constant { [16 x ptr] }, align 8
@_ZTVSt15basic_streambufIcSt11char_traitsIcEE = external unnamed_addr constant { [16 x ptr] }, align 8
@.str.34 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@.str.36 = private unnamed_addr constant [28 x i8] c"Matrix structure generation\00", align 1
@.str.37 = private unnamed_addr constant [19 x i8] c"Mat-struc-gen Time\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"FE assembly\00", align 1
@.str.39 = private unnamed_addr constant [17 x i8] c"FE assembly Time\00", align 1
@.str.40 = private unnamed_addr constant [24 x i8] c"Starting CG solver ... \00", align 1
@.str.41 = private unnamed_addr constant [19 x i8] c"Final Resid Norm: \00", align 1
@.str.43 = private unnamed_addr constant [44 x i8] c"verifying solution at ~ (0.5, 0.5, 0.5) ...\00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"ScalarType\00", align 1
@.str.46 = private unnamed_addr constant [18 x i8] c"GlobalOrdinalType\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"LocalOrdinalType\00", align 1
@.str.48 = private unnamed_addr constant [11 x i8] c"Iterations\00", align 1
@.str.49 = private unnamed_addr constant [17 x i8] c"Final Resid Norm\00", align 1
@.str.50 = private unnamed_addr constant [11 x i8] c"WAXPY Time\00", align 1
@.str.51 = private unnamed_addr constant [12 x i8] c"WAXPY Flops\00", align 1
@.str.52 = private unnamed_addr constant [13 x i8] c"WAXPY Mflops\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.55 = private unnamed_addr constant [10 x i8] c"DOT Flops\00", align 1
@.str.56 = private unnamed_addr constant [11 x i8] c"DOT Mflops\00", align 1
@.str.57 = private unnamed_addr constant [12 x i8] c"MATVEC Time\00", align 1
@.str.58 = private unnamed_addr constant [13 x i8] c"MATVEC Flops\00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"MATVEC Mflops\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"Total\00", align 1
@.str.61 = private unnamed_addr constant [14 x i8] c"Total CG Time\00", align 1
@.str.62 = private unnamed_addr constant [15 x i8] c"Total CG Flops\00", align 1
@.str.63 = private unnamed_addr constant [16 x i8] c"Total CG Mflops\00", align 1
@.str.64 = private unnamed_addr constant [19 x i8] c"Time per iteration\00", align 1
@.str.65 = private unnamed_addr constant [29 x i8] c"Rows-per-proc Load Imbalance\00", align 1
@.str.66 = private unnamed_addr constant [22 x i8] c"Largest (from avg, %)\00", align 1
@.str.67 = private unnamed_addr constant [12 x i8] c"Std Dev (%)\00", align 1
@.str.68 = private unnamed_addr constant [22 x i8] c"on the y==0 face (ix=\00", align 1
@.str.69 = private unnamed_addr constant [6 x i8] c", iz=\00", align 1
@.str.70 = private unnamed_addr constant [31 x i8] c"), ERROR: found negative row (\00", align 1
@.str.71 = private unnamed_addr constant [14 x i8] c") for nodeID=\00", align 1
@.str.72 = private unnamed_addr constant [16 x i8] c"vector::reserve\00", align 1
@.str.73 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@.str.74 = private unnamed_addr constant [32 x i8] c"ERROR, failed to map id to row.\00", align 1
@.str.75 = private unnamed_addr constant [11 x i8] c"ERROR, id:\00", align 1
@.str.76 = private unnamed_addr constant [24 x i8] c", ids_to_rows.begin(): \00", align 1
@.str.77 = private unnamed_addr constant [50 x i8] c"ERROR, negative offset in find_row_for_id for id=\00", align 1
@_ZTISt9exception = external constant ptr
@.str.78 = private unnamed_addr constant [100 x i8] c"One of A.rows.resize, A.row_offsets.resize, A.packed_cols.reserve or A.packed_coefs.reserve: nrows=\00", align 1
@.str.79 = private unnamed_addr constant [3 x i8] c": \00", align 1
@_ZTISt13runtime_error = external constant ptr
@.str.80 = private unnamed_addr constant [54 x i8] c"ERROR in generate_matrix_structure, roffset != nrows.\00", align 1
@.str.81 = private unnamed_addr constant [6 x i8] c"proc \00", align 1
@.str.82 = private unnamed_addr constant [89 x i8] c" threw an exception in generate_matrix_structure, probably due to running out of memory.\00", align 1
@.str.83 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.84 = private unnamed_addr constant [32 x i8] c"Warning, packed_cols.capacity (\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c") != \00", align 1
@.str.86 = private unnamed_addr constant [24 x i8] c"packed_coefs.capacity (\00", align 1
@.str.87 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.88 = private unnamed_addr constant [11 x i8] c") <  nnz (\00", align 1
@.str.89 = private unnamed_addr constant [34 x i8] c"mesh->map_id_to_row produced col=\00", align 1
@.str.90 = private unnamed_addr constant [14 x i8] c" from col_id=\00", align 1
@.str.91 = private unnamed_addr constant [20 x i8] c", but global_nrows=\00", align 1
@.str.92 = private unnamed_addr constant [18 x i8] c", max_row_in_map=\00", align 1
@.str.93 = private unnamed_addr constant [8 x i8] c", proc=\00", align 1
@.str.94 = private unnamed_addr constant [49 x i8] c"get_elem_nodes_and_coords ERROR, negative elemID\00", align 1
@.str.95 = private unnamed_addr constant [18 x i8] c"Matrix attributes\00", align 1
@.str.96 = private unnamed_addr constant [13 x i8] c"Global Nrows\00", align 1
@.str.97 = private unnamed_addr constant [11 x i8] c"Global NNZ\00", align 1
@.str.98 = private unnamed_addr constant [19 x i8] c"Global Memory (GB)\00", align 1
@.str.99 = private unnamed_addr constant [25 x i8] c"Pll Memory Overhead (MB)\00", align 1
@.str.100 = private unnamed_addr constant [18 x i8] c"Rows per proc MIN\00", align 1
@.str.101 = private unnamed_addr constant [18 x i8] c"Rows per proc MAX\00", align 1
@.str.102 = private unnamed_addr constant [18 x i8] c"Rows per proc AVG\00", align 1
@.str.103 = private unnamed_addr constant [17 x i8] c"NNZ per proc MIN\00", align 1
@.str.104 = private unnamed_addr constant [17 x i8] c"NNZ per proc MAX\00", align 1
@.str.105 = private unnamed_addr constant [17 x i8] c"NNZ per proc AVG\00", align 1
@_ZSt4cerr = external global %"class.std::basic_ostream", align 8
@.str.106 = private unnamed_addr constant [93 x i8] c"miniFE::cg_solve ERROR, A.has_local_indices is false, needs to be true. This probably means \00", align 1
@.str.107 = private unnamed_addr constant [79 x i8] c"miniFE::make_local_matrix(A) was not called prior to calling miniFE::cg_solve.\00", align 1
@.str.108 = private unnamed_addr constant [20 x i8] c"Initial Residual = \00", align 1
@.str.109 = private unnamed_addr constant [13 x i8] c"Iteration = \00", align 1
@.str.110 = private unnamed_addr constant [15 x i8] c"   Residual = \00", align 1
@.str.111 = private unnamed_addr constant [45 x i8] c"miniFE::cg_solve ERROR, numerical breakdown!\00", align 1
@.str.112 = private unnamed_addr constant [23 x i8] c"max absolute error is \00", align 1
@.str.113 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.114 = private unnamed_addr constant [17 x i8] c"   at position (\00", align 1
@.str.115 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.116 = private unnamed_addr constant [4 x i8] c"), \00", align 1
@.str.117 = private unnamed_addr constant [23 x i8] c"   computed solution: \00", align 1
@.str.118 = private unnamed_addr constant [23 x i8] c",  analytic solution: \00", align 1
@.str.119 = private unnamed_addr constant [46 x i8] c"solution matches analytic solution to within \00", align 1
@.str.120 = private unnamed_addr constant [12 x i8] c" or better.\00", align 1
@.str.121 = private unnamed_addr constant [7 x i8] c"double\00", align 1
@.str.122 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_main.cpp, ptr null }]

declare void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(ptr noundef nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(ptr, ptr, ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local noundef zeroext i1 @_ZN6miniFE11is_neighborERK3BoxS2_(ptr nocapture noundef nonnull readonly align 4 dereferenceable(24) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(24) %1) local_unnamed_addr #3 {
  %3 = getelementptr inbounds i32, ptr %0, i64 1
  %4 = load i32, ptr %3, align 4, !tbaa !5
  %5 = load i32, ptr %1, align 4, !tbaa !5
  %6 = icmp eq i32 %4, %5
  br i1 %6, label %36, label %7

7:                                                ; preds = %2
  %8 = load i32, ptr %0, align 4, !tbaa !5
  %9 = getelementptr inbounds i32, ptr %1, i64 1
  %10 = load i32, ptr %9, align 4, !tbaa !5
  %11 = icmp eq i32 %8, %10
  %12 = icmp eq i32 %8, %5
  %13 = select i1 %11, i1 true, i1 %12
  %14 = icmp eq i32 %4, %10
  %15 = select i1 %13, i1 true, i1 %14
  br i1 %15, label %36, label %16

16:                                               ; preds = %7
  %17 = icmp sgt i32 %8, %5
  %18 = icmp slt i32 %4, %10
  %19 = select i1 %17, i1 %18, i1 false
  br i1 %19, label %36, label %20

20:                                               ; preds = %16
  %21 = icmp sgt i32 %5, %8
  %22 = icmp slt i32 %10, %4
  %23 = select i1 %21, i1 %22, i1 false
  %24 = icmp slt i32 %8, %10
  %25 = select i1 %17, i1 %24, i1 false
  %26 = select i1 %23, i1 true, i1 %25
  %27 = icmp slt i32 %5, %4
  %28 = select i1 %21, i1 %27, i1 false
  %29 = select i1 %26, i1 true, i1 %28
  br i1 %29, label %36, label %30

30:                                               ; preds = %20
  %31 = add nsw i32 %5, -1
  %32 = icmp eq i32 %4, %31
  %33 = add nsw i32 %10, 1
  %34 = icmp eq i32 %8, %33
  %35 = select i1 %32, i1 true, i1 %34
  br label %36

36:                                               ; preds = %20, %16, %2, %7, %30
  %37 = phi i1 [ %35, %30 ], [ true, %7 ], [ true, %2 ], [ true, %16 ], [ true, %20 ]
  %38 = getelementptr inbounds [6 x i32], ptr %0, i64 0, i64 3
  %39 = load i32, ptr %38, align 4, !tbaa !5
  %40 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 2
  %41 = load i32, ptr %40, align 4, !tbaa !5
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %73, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds [6 x i32], ptr %0, i64 0, i64 2
  %45 = load i32, ptr %44, align 4, !tbaa !5
  %46 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 3
  %47 = load i32, ptr %46, align 4, !tbaa !5
  %48 = icmp eq i32 %45, %47
  %49 = icmp eq i32 %45, %41
  %50 = select i1 %48, i1 true, i1 %49
  %51 = icmp eq i32 %39, %47
  %52 = select i1 %50, i1 true, i1 %51
  br i1 %52, label %73, label %53

53:                                               ; preds = %43
  %54 = icmp sgt i32 %45, %41
  %55 = icmp slt i32 %39, %47
  %56 = select i1 %54, i1 %55, i1 false
  br i1 %56, label %73, label %57

57:                                               ; preds = %53
  %58 = icmp sgt i32 %41, %45
  %59 = icmp slt i32 %47, %39
  %60 = select i1 %58, i1 %59, i1 false
  %61 = icmp slt i32 %45, %47
  %62 = select i1 %54, i1 %61, i1 false
  %63 = select i1 %60, i1 true, i1 %62
  %64 = icmp slt i32 %41, %39
  %65 = select i1 %58, i1 %64, i1 false
  %66 = select i1 %63, i1 true, i1 %65
  br i1 %66, label %73, label %67

67:                                               ; preds = %57
  %68 = add nsw i32 %41, -1
  %69 = icmp eq i32 %39, %68
  %70 = add nsw i32 %47, 1
  %71 = icmp eq i32 %45, %70
  %72 = select i1 %69, i1 true, i1 %71
  br label %73

73:                                               ; preds = %57, %53, %36, %43, %67
  %74 = phi i1 [ %72, %67 ], [ true, %43 ], [ true, %36 ], [ true, %53 ], [ true, %57 ]
  %75 = getelementptr inbounds [6 x i32], ptr %0, i64 0, i64 5
  %76 = load i32, ptr %75, align 4, !tbaa !5
  %77 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 4
  %78 = load i32, ptr %77, align 4, !tbaa !5
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %110, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds [6 x i32], ptr %0, i64 0, i64 4
  %82 = load i32, ptr %81, align 4, !tbaa !5
  %83 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 5
  %84 = load i32, ptr %83, align 4, !tbaa !5
  %85 = icmp eq i32 %82, %84
  %86 = icmp eq i32 %82, %78
  %87 = select i1 %85, i1 true, i1 %86
  %88 = icmp eq i32 %76, %84
  %89 = select i1 %87, i1 true, i1 %88
  br i1 %89, label %110, label %90

90:                                               ; preds = %80
  %91 = icmp sgt i32 %82, %78
  %92 = icmp slt i32 %76, %84
  %93 = select i1 %91, i1 %92, i1 false
  br i1 %93, label %110, label %94

94:                                               ; preds = %90
  %95 = icmp sgt i32 %78, %82
  %96 = icmp slt i32 %84, %76
  %97 = select i1 %95, i1 %96, i1 false
  %98 = icmp slt i32 %82, %84
  %99 = select i1 %91, i1 %98, i1 false
  %100 = select i1 %97, i1 true, i1 %99
  %101 = icmp slt i32 %78, %76
  %102 = select i1 %95, i1 %101, i1 false
  %103 = select i1 %100, i1 true, i1 %102
  br i1 %103, label %110, label %104

104:                                              ; preds = %94
  %105 = add nsw i32 %78, -1
  %106 = icmp eq i32 %76, %105
  %107 = add nsw i32 %84, 1
  %108 = icmp eq i32 %82, %107
  %109 = select i1 %106, i1 true, i1 %108
  br label %110

110:                                              ; preds = %94, %90, %73, %80, %104
  %111 = phi i1 [ %109, %104 ], [ true, %80 ], [ true, %73 ], [ true, %90 ], [ true, %94 ]
  br i1 %37, label %112, label %114

112:                                              ; preds = %110
  %113 = select i1 %74, i1 %111, i1 false
  br label %114

114:                                              ; preds = %112, %110
  %115 = phi i1 [ false, %110 ], [ %113, %112 ]
  ret i1 %115
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i64 @_ZN6miniFE18decide_how_to_growERK3BoxS2_(ptr nocapture noundef nonnull readonly align 4 dereferenceable(24) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(24) %1) local_unnamed_addr #3 {
  %3 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 5
  %4 = load i32, ptr %3, align 4, !tbaa !5
  %5 = getelementptr inbounds [6 x i32], ptr %0, i64 0, i64 5
  %6 = load i32, ptr %5, align 4, !tbaa !5
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %38, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 4
  %10 = load i32, ptr %9, align 4, !tbaa !5
  %11 = getelementptr inbounds [6 x i32], ptr %0, i64 0, i64 4
  %12 = load i32, ptr %11, align 4, !tbaa !5
  %13 = icmp sgt i32 %10, %12
  br i1 %13, label %38, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 3
  %16 = load i32, ptr %15, align 4, !tbaa !5
  %17 = getelementptr inbounds [6 x i32], ptr %0, i64 0, i64 3
  %18 = load i32, ptr %17, align 4, !tbaa !5
  %19 = icmp slt i32 %16, %18
  br i1 %19, label %38, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 2
  %22 = load i32, ptr %21, align 4, !tbaa !5
  %23 = getelementptr inbounds [6 x i32], ptr %0, i64 0, i64 2
  %24 = load i32, ptr %23, align 4, !tbaa !5
  %25 = icmp sgt i32 %22, %24
  br i1 %25, label %38, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds i32, ptr %1, i64 1
  %28 = load i32, ptr %27, align 4, !tbaa !5
  %29 = getelementptr inbounds i32, ptr %0, i64 1
  %30 = load i32, ptr %29, align 4, !tbaa !5
  %31 = icmp slt i32 %28, %30
  br i1 %31, label %38, label %32

32:                                               ; preds = %26
  %33 = load i32, ptr %1, align 4, !tbaa !5
  %34 = load i32, ptr %0, align 4, !tbaa !5
  %35 = icmp sgt i32 %33, %34
  %36 = select i1 %35, i64 0, i64 4294967296
  %37 = select i1 %35, i64 0, i64 3
  br label %38

38:                                               ; preds = %32, %26, %20, %14, %8, %2
  %39 = phi i64 [ 4294967296, %2 ], [ 0, %8 ], [ 4294967296, %14 ], [ 0, %20 ], [ 4294967296, %26 ], [ %36, %32 ]
  %40 = phi i64 [ 2, %2 ], [ 2, %8 ], [ 1, %14 ], [ 1, %20 ], [ 0, %26 ], [ %37, %32 ]
  %41 = or i64 %40, %39
  ret i64 %41
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i64 @_ZN6miniFE20decide_how_to_shrinkERK3BoxS2_(ptr nocapture noundef nonnull readonly align 4 dereferenceable(24) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(24) %1) local_unnamed_addr #3 {
  %3 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 5
  %4 = load i32, ptr %3, align 4, !tbaa !5
  %5 = getelementptr inbounds [6 x i32], ptr %0, i64 0, i64 5
  %6 = load i32, ptr %5, align 4, !tbaa !5
  %7 = icmp slt i32 %4, %6
  %8 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 4
  %9 = load i32, ptr %8, align 4, !tbaa !5
  %10 = sub nsw i32 %4, %9
  br i1 %7, label %11, label %13

11:                                               ; preds = %2
  %12 = icmp sgt i32 %10, 2
  br i1 %12, label %54, label %19

13:                                               ; preds = %2
  %14 = getelementptr inbounds [6 x i32], ptr %0, i64 0, i64 4
  %15 = load i32, ptr %14, align 4, !tbaa !5
  %16 = icmp sgt i32 %9, %15
  %17 = icmp sgt i32 %10, 2
  %18 = select i1 %16, i1 %17, i1 false
  br i1 %18, label %54, label %19

19:                                               ; preds = %11, %13
  %20 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 3
  %21 = load i32, ptr %20, align 4, !tbaa !5
  %22 = getelementptr inbounds [6 x i32], ptr %0, i64 0, i64 3
  %23 = load i32, ptr %22, align 4, !tbaa !5
  %24 = icmp slt i32 %21, %23
  %25 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 2
  %26 = load i32, ptr %25, align 4, !tbaa !5
  %27 = sub nsw i32 %21, %26
  br i1 %24, label %28, label %30

28:                                               ; preds = %19
  %29 = icmp sgt i32 %27, 2
  br i1 %29, label %54, label %36

30:                                               ; preds = %19
  %31 = getelementptr inbounds [6 x i32], ptr %0, i64 0, i64 2
  %32 = load i32, ptr %31, align 4, !tbaa !5
  %33 = icmp sgt i32 %26, %32
  %34 = icmp sgt i32 %27, 2
  %35 = select i1 %33, i1 %34, i1 false
  br i1 %35, label %54, label %36

36:                                               ; preds = %28, %30
  %37 = getelementptr inbounds i32, ptr %1, i64 1
  %38 = load i32, ptr %37, align 4, !tbaa !5
  %39 = getelementptr inbounds i32, ptr %0, i64 1
  %40 = load i32, ptr %39, align 4, !tbaa !5
  %41 = icmp slt i32 %38, %40
  %42 = load i32, ptr %1, align 4, !tbaa !5
  %43 = sub nsw i32 %38, %42
  %44 = icmp sgt i32 %43, 2
  %45 = select i1 %41, i1 %44, i1 false
  br i1 %45, label %54, label %46

46:                                               ; preds = %36
  %47 = load i32, ptr %0, align 4, !tbaa !5
  %48 = icmp sgt i32 %42, %47
  br i1 %48, label %49, label %54

49:                                               ; preds = %46
  %50 = sub nsw i32 %38, %42
  %51 = icmp sgt i32 %50, 2
  %52 = select i1 %51, i64 0, i64 4294967296
  %53 = select i1 %51, i64 0, i64 3
  br label %54

54:                                               ; preds = %36, %30, %13, %49, %28, %11, %46
  %55 = phi i64 [ 4294967296, %46 ], [ 4294967296, %11 ], [ 4294967296, %28 ], [ %52, %49 ], [ 0, %13 ], [ 0, %30 ], [ 4294967296, %36 ]
  %56 = phi i64 [ 3, %46 ], [ 2, %11 ], [ 1, %28 ], [ %53, %49 ], [ 2, %13 ], [ 1, %30 ], [ 0, %36 ]
  %57 = or i64 %56, %55
  ret i64 %57
}

; Function Attrs: norecurse uwtable
define dso_local noundef i32 @main(i32 noundef %0, ptr noundef %1) local_unnamed_addr #5 personality ptr @__gxx_personality_v0 {
  %3 = alloca i64, align 8
  %4 = alloca %"struct.miniFE::Parameters", align 16
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.Box, align 4
  %8 = alloca %"class.std::__cxx11::basic_ostringstream", align 8
  %9 = alloca %class.YAML_Doc, align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = alloca %"class.std::__cxx11::basic_string", align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.std::__cxx11::basic_string", align 8
  %14 = alloca %"class.std::__cxx11::basic_string", align 8
  %15 = alloca %"class.std::__cxx11::basic_string", align 8
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %4) #25
  %16 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %4, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %4, i64 0, i32 2
  store <4 x i32> <i32 5, i32 5, i32 5, i32 1>, ptr %4, align 16, !tbaa !5
  %18 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %4, i64 0, i32 4
  store i32 0, ptr %18, align 16, !tbaa !9
  %19 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %4, i64 0, i32 5
  store i32 0, ptr %19, align 4, !tbaa !16
  %20 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %4, i64 0, i32 6
  store float 0.000000e+00, ptr %20, align 8, !tbaa !17
  %21 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %4, i64 0, i32 8
  %22 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %4, i64 0, i32 8, i32 2
  store ptr %22, ptr %21, align 16, !tbaa !18
  %23 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %4, i64 0, i32 8, i32 1
  store i64 0, ptr %23, align 8, !tbaa !19
  store i8 0, ptr %22, align 16, !tbaa !20
  %24 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %4, i64 0, i32 9
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, ptr %24, align 16, !tbaa !5
  %25 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %4, i64 0, i32 13
  store i32 2, ptr %25, align 16, !tbaa !21
  %26 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %4, i64 0, i32 14
  store i32 9999, ptr %26, align 4, !tbaa !22
  %27 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %4, i64 0, i32 15
  store i32 1, ptr %27, align 8, !tbaa !23
  invoke void @_ZN6miniFE14get_parametersEiPPcRNS_10ParametersE(i32 noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(92) %4)
          to label %28 unwind label %114

28:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #25
  store i32 1, ptr %5, align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #25
  store i32 0, ptr %6, align 4, !tbaa !5
  invoke void @_ZN6miniFE14initialize_mpiEiPPcRiS2_(i32 noundef %0, ptr noundef %1, ptr noundef nonnull align 4 dereferenceable(4) %5, ptr noundef nonnull align 4 dereferenceable(4) %6)
          to label %29 unwind label %116

29:                                               ; preds = %28
  %30 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %31 unwind label %118

31:                                               ; preds = %29
  invoke void @_ZN6miniFE20broadcast_parametersERNS_10ParametersE(ptr noundef nonnull align 8 dereferenceable(92) %4)
          to label %32 unwind label %118

32:                                               ; preds = %31
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #25
  store i32 0, ptr %7, align 4, !tbaa !5
  %33 = getelementptr inbounds i32, ptr %7, i64 1
  %34 = load i32, ptr %4, align 16, !tbaa !24
  store i32 %34, ptr %33, align 4, !tbaa !5
  %35 = getelementptr inbounds i32, ptr %7, i64 2
  store i32 0, ptr %35, align 4, !tbaa !5
  %36 = getelementptr inbounds i32, ptr %7, i64 3
  %37 = load i32, ptr %16, align 4, !tbaa !25
  store i32 %37, ptr %36, align 4, !tbaa !5
  %38 = getelementptr inbounds i32, ptr %7, i64 4
  store i32 0, ptr %38, align 4, !tbaa !5
  %39 = getelementptr inbounds i32, ptr %7, i64 5
  %40 = load i32, ptr %17, align 8, !tbaa !26
  store i32 %40, ptr %39, align 4, !tbaa !5
  %41 = load i32, ptr %5, align 4, !tbaa !5
  %42 = sext i32 %41 to i64
  %43 = icmp slt i32 %41, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %32
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.34) #26
          to label %45 unwind label %120

45:                                               ; preds = %44
  unreachable

46:                                               ; preds = %32
  %47 = icmp eq i32 %41, 0
  br i1 %47, label %60, label %48

48:                                               ; preds = %46
  %49 = mul nuw nsw i64 %42, 24
  %50 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %49) #27
          to label %51 unwind label %120

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.Box, ptr %50, i64 %42
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(24) %50, i8 0, i64 24, i1 false)
  %53 = icmp eq i32 %41, 1
  br i1 %53, label %60, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.Box, ptr %50, i64 1
  br label %56

56:                                               ; preds = %54, %56
  %57 = phi ptr [ %58, %56 ], [ %55, %54 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(24) %57, ptr noundef nonnull align 4 dereferenceable(24) %50, i64 24, i1 false), !tbaa.struct !27
  %58 = getelementptr inbounds %struct.Box, ptr %57, i64 1
  %59 = icmp eq ptr %58, %52
  br i1 %59, label %60, label %56, !llvm.loop !28

60:                                               ; preds = %56, %51, %46
  %61 = phi ptr [ %50, %51 ], [ null, %46 ], [ %50, %56 ]
  invoke void @_Z13box_partitioniiiRK3BoxPS_(i32 noundef 0, i32 noundef %41, i32 noundef 2, ptr noundef nonnull align 4 dereferenceable(24) %7, ptr noundef %61)
          to label %62 unwind label %306

62:                                               ; preds = %60
  %63 = load i32, ptr %6, align 4, !tbaa !5
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %struct.Box, ptr %61, i64 %64
  %66 = getelementptr inbounds i32, ptr %65, i64 1
  %67 = load i32, ptr %66, align 4, !tbaa !5
  %68 = load i32, ptr %65, align 4, !tbaa !5
  %69 = sub nsw i32 %67, %68
  %70 = getelementptr inbounds [6 x i32], ptr %65, i64 0, i64 3
  %71 = load i32, ptr %70, align 4, !tbaa !5
  %72 = getelementptr inbounds [6 x i32], ptr %65, i64 0, i64 2
  %73 = load i32, ptr %72, align 4, !tbaa !5
  %74 = sub nsw i32 %71, %73
  %75 = getelementptr inbounds [6 x i32], ptr %65, i64 0, i64 5
  %76 = load i32, ptr %75, align 4, !tbaa !5
  %77 = getelementptr inbounds [6 x i32], ptr %65, i64 0, i64 4
  %78 = load i32, ptr %77, align 4, !tbaa !5
  %79 = sub nsw i32 %76, %78
  %80 = mul nsw i32 %74, %69
  %81 = mul nsw i32 %80, %79
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %124

83:                                               ; preds = %62
  %84 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str, i64 noundef 74)
          to label %85 unwind label %122

85:                                               ; preds = %83
  %86 = load ptr, ptr @_ZSt4cout, align 8, !tbaa !30
  %87 = getelementptr i8, ptr %86, i64 -24
  %88 = load i64, ptr %87, align 8
  %89 = getelementptr inbounds i8, ptr @_ZSt4cout, i64 %88
  %90 = getelementptr inbounds %"class.std::basic_ios", ptr %89, i64 0, i32 5
  %91 = load ptr, ptr %90, align 8, !tbaa !32
  %92 = icmp eq ptr %91, null
  br i1 %92, label %93, label %95

93:                                               ; preds = %85
  invoke void @_ZSt16__throw_bad_castv() #26
          to label %94 unwind label %122

94:                                               ; preds = %93
  unreachable

95:                                               ; preds = %85
  %96 = getelementptr inbounds %"class.std::ctype", ptr %91, i64 0, i32 8
  %97 = load i8, ptr %96, align 8, !tbaa !40
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.std::ctype", ptr %91, i64 0, i32 9, i64 10
  %101 = load i8, ptr %100, align 1, !tbaa !20
  br label %108

102:                                              ; preds = %95
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %91)
          to label %103 unwind label %122

103:                                              ; preds = %102
  %104 = load ptr, ptr %91, align 8, !tbaa !30
  %105 = getelementptr inbounds ptr, ptr %104, i64 6
  %106 = load ptr, ptr %105, align 8
  %107 = invoke noundef signext i8 %106(ptr noundef nonnull align 8 dereferenceable(570) %91, i8 noundef signext 10)
          to label %108 unwind label %122

108:                                              ; preds = %103, %99
  %109 = phi i8 [ %101, %99 ], [ %107, %103 ]
  %110 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 noundef signext %109)
          to label %111 unwind label %122

111:                                              ; preds = %108
  %112 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %110)
          to label %113 unwind label %122

113:                                              ; preds = %111
  invoke void @_ZN6miniFE12finalize_mpiEv()
          to label %300 unwind label %122

114:                                              ; preds = %2
  %115 = landingpad { ptr, i32 }
          cleanup
  br label %315

116:                                              ; preds = %28
  %117 = landingpad { ptr, i32 }
          cleanup
  br label %313

118:                                              ; preds = %31, %29
  %119 = landingpad { ptr, i32 }
          cleanup
  br label %313

120:                                              ; preds = %48, %44
  %121 = landingpad { ptr, i32 }
          cleanup
  br label %311

122:                                              ; preds = %111, %108, %103, %102, %93, %83, %113
  %123 = landingpad { ptr, i32 }
          cleanup
  br label %309

124:                                              ; preds = %62
  call void @llvm.lifetime.start.p0(i64 376, ptr nonnull %8) #25
  invoke void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1Ev(ptr noundef nonnull align 8 dereferenceable(112) %8)
          to label %125 unwind label %151

125:                                              ; preds = %124
  %126 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %8, ptr noundef nonnull @.str.1, i64 noundef 7)
          to label %127 unwind label %153

127:                                              ; preds = %125
  %128 = load i32, ptr %4, align 16, !tbaa !24
  %129 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %8, i32 noundef %128)
          to label %130 unwind label %153

130:                                              ; preds = %127
  %131 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %129, ptr noundef nonnull @.str.2, i64 noundef 1)
          to label %132 unwind label %153

132:                                              ; preds = %130
  %133 = load i32, ptr %16, align 4, !tbaa !25
  %134 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %129, i32 noundef %133)
          to label %135 unwind label %153

135:                                              ; preds = %132
  %136 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %134, ptr noundef nonnull @.str.2, i64 noundef 1)
          to label %137 unwind label %153

137:                                              ; preds = %135
  %138 = load i32, ptr %17, align 8, !tbaa !26
  %139 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %134, i32 noundef %138)
          to label %140 unwind label %153

140:                                              ; preds = %137
  %141 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %8, ptr noundef nonnull @.str.3, i64 noundef 1)
          to label %142 unwind label %153

142:                                              ; preds = %140
  %143 = call noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(ptr noundef nonnull align 8 dereferenceable(32) %21, ptr noundef nonnull @.str.4) #25
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %155, label %145

145:                                              ; preds = %142
  %146 = load ptr, ptr %21, align 16, !tbaa !43
  %147 = load i64, ptr %23, align 8, !tbaa !19
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %8, ptr noundef %146, i64 noundef %147)
          to label %149 unwind label %153

149:                                              ; preds = %145
  %150 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %148, ptr noundef nonnull @.str.3, i64 noundef 1)
          to label %155 unwind label %153

151:                                              ; preds = %124
  %152 = landingpad { ptr, i32 }
          cleanup
  br label %298

153:                                              ; preds = %149, %145, %140, %135, %130, %125, %137, %132, %127
  %154 = landingpad { ptr, i32 }
          cleanup
  br label %296

155:                                              ; preds = %149, %142
  call void @llvm.lifetime.start.p0(i64 216, ptr nonnull %9) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %10) #25
  %156 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 2
  store ptr %156, ptr %10, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %156, ptr noundef nonnull align 1 dereferenceable(6) @.str.5, i64 6, i1 false)
  %157 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 1
  store i64 6, ptr %157, align 8, !tbaa !19
  %158 = getelementptr inbounds i8, ptr %10, i64 22
  store i8 0, ptr %158, align 2, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %11) #25
  %159 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 2
  store ptr %159, ptr %11, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %159, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %160 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 1
  store i64 3, ptr %160, align 8, !tbaa !19
  %161 = getelementptr inbounds i8, ptr %11, i64 19
  store i8 0, ptr %161, align 1, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #25
  %162 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2
  store ptr %162, ptr %12, align 8, !tbaa !18
  store i8 46, ptr %162, align 8, !tbaa !20
  %163 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 1
  store i64 1, ptr %163, align 8, !tbaa !19
  %164 = getelementptr inbounds i8, ptr %12, i64 17
  store i8 0, ptr %164, align 1, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #25
  call void @llvm.experimental.noalias.scope.decl(metadata !44)
  call void @llvm.experimental.noalias.scope.decl(metadata !47)
  %165 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 2
  store ptr %165, ptr %13, align 8, !tbaa !18, !alias.scope !50
  %166 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 1
  store i64 0, ptr %166, align 8, !tbaa !19, !alias.scope !50
  store i8 0, ptr %165, align 8, !tbaa !20, !alias.scope !50
  %167 = getelementptr inbounds %"class.std::__cxx11::basic_ostringstream", ptr %8, i64 0, i32 1, i32 0, i32 5
  %168 = load ptr, ptr %167, align 8, !tbaa !51, !noalias !50
  %169 = icmp eq ptr %168, null
  br i1 %169, label %187, label %170

170:                                              ; preds = %155
  %171 = getelementptr inbounds %"class.std::__cxx11::basic_ostringstream", ptr %8, i64 0, i32 1, i32 0, i32 3
  %172 = load ptr, ptr %171, align 8, !tbaa !53, !noalias !50
  %173 = icmp eq ptr %172, null
  %174 = icmp ugt ptr %168, %172
  %175 = select i1 %173, i1 true, i1 %174
  %176 = select i1 %175, ptr %168, ptr %172
  %177 = getelementptr inbounds %"class.std::__cxx11::basic_ostringstream", ptr %8, i64 0, i32 1, i32 0, i32 4
  %178 = load ptr, ptr %177, align 8, !tbaa !54, !noalias !50
  %179 = ptrtoint ptr %176 to i64
  %180 = ptrtoint ptr %178 to i64
  %181 = sub i64 %179, %180
  %182 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %13, i64 noundef 0, i64 noundef 0, ptr noundef %178, i64 noundef %181)
          to label %189 unwind label %183

183:                                              ; preds = %187, %170
  %184 = landingpad { ptr, i32 }
          cleanup
  %185 = load ptr, ptr %13, align 8, !tbaa !43, !alias.scope !50
  %186 = icmp eq ptr %185, %165
  br i1 %186, label %220, label %217

187:                                              ; preds = %155
  %188 = getelementptr inbounds %"class.std::__cxx11::basic_ostringstream", ptr %8, i64 0, i32 1, i32 2
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull align 8 dereferenceable(32) %188)
          to label %189 unwind label %183

189:                                              ; preds = %187, %170
  invoke void @_ZN8YAML_DocC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_S7_(ptr noundef nonnull align 8 dereferenceable(216) %9, ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef nonnull align 8 dereferenceable(32) %11, ptr noundef nonnull align 8 dereferenceable(32) %12, ptr noundef nonnull align 8 dereferenceable(32) %13)
          to label %190 unwind label %213

190:                                              ; preds = %189
  %191 = load ptr, ptr %13, align 8, !tbaa !43
  %192 = icmp eq ptr %191, %165
  br i1 %192, label %194, label %193

193:                                              ; preds = %190
  call void @_ZdlPv(ptr noundef %191) #28
  br label %194

194:                                              ; preds = %190, %193
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #25
  %195 = load ptr, ptr %12, align 8, !tbaa !43
  %196 = icmp eq ptr %195, %162
  br i1 %196, label %198, label %197

197:                                              ; preds = %194
  call void @_ZdlPv(ptr noundef %195) #28
  br label %198

198:                                              ; preds = %194, %197
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #25
  %199 = load ptr, ptr %11, align 8, !tbaa !43
  %200 = icmp eq ptr %199, %159
  br i1 %200, label %202, label %201

201:                                              ; preds = %198
  call void @_ZdlPv(ptr noundef %199) #28
  br label %202

202:                                              ; preds = %198, %201
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #25
  %203 = load ptr, ptr %10, align 8, !tbaa !43
  %204 = icmp eq ptr %203, %156
  br i1 %204, label %206, label %205

205:                                              ; preds = %202
  call void @_ZdlPv(ptr noundef %203) #28
  br label %206

206:                                              ; preds = %202, %205
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #25
  %207 = load i32, ptr %6, align 4, !tbaa !5
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %236

209:                                              ; preds = %206
  invoke void @_Z18add_params_to_yamlR8YAML_DocRN6miniFE10ParametersE(ptr noundef nonnull align 8 dereferenceable(216) %9, ptr noundef nonnull align 8 dereferenceable(92) %4)
          to label %210 unwind label %234

210:                                              ; preds = %209
  %211 = load i32, ptr %5, align 4, !tbaa !5
  invoke void @_Z25add_configuration_to_yamlR8YAML_Docii(ptr noundef nonnull align 8 dereferenceable(216) %9, i32 noundef %211, i32 poison)
          to label %212 unwind label %234

212:                                              ; preds = %210
  invoke void @_Z22add_timestring_to_yamlR8YAML_Doc(ptr noundef nonnull align 8 dereferenceable(216) %9)
          to label %236 unwind label %234

213:                                              ; preds = %189
  %214 = landingpad { ptr, i32 }
          cleanup
  %215 = load ptr, ptr %13, align 8, !tbaa !43
  %216 = icmp eq ptr %215, %165
  br i1 %216, label %220, label %217

217:                                              ; preds = %213, %183
  %218 = phi ptr [ %185, %183 ], [ %215, %213 ]
  %219 = phi { ptr, i32 } [ %184, %183 ], [ %214, %213 ]
  call void @_ZdlPv(ptr noundef %218) #28
  br label %220

220:                                              ; preds = %217, %213, %183
  %221 = phi { ptr, i32 } [ %184, %183 ], [ %214, %213 ], [ %219, %217 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #25
  %222 = load ptr, ptr %12, align 8, !tbaa !43
  %223 = icmp eq ptr %222, %162
  br i1 %223, label %225, label %224

224:                                              ; preds = %220
  call void @_ZdlPv(ptr noundef %222) #28
  br label %225

225:                                              ; preds = %224, %220
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #25
  %226 = load ptr, ptr %11, align 8, !tbaa !43
  %227 = icmp eq ptr %226, %159
  br i1 %227, label %229, label %228

228:                                              ; preds = %225
  call void @_ZdlPv(ptr noundef %226) #28
  br label %229

229:                                              ; preds = %228, %225
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #25
  %230 = load ptr, ptr %10, align 8, !tbaa !43
  %231 = icmp eq ptr %230, %156
  br i1 %231, label %233, label %232

232:                                              ; preds = %229
  call void @_ZdlPv(ptr noundef %230) #28
  br label %233

233:                                              ; preds = %232, %229
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #25
  br label %294

234:                                              ; preds = %212, %210, %209
  %235 = landingpad { ptr, i32 }
          cleanup
  br label %292

236:                                              ; preds = %212, %206
  %237 = invoke noundef i32 @_ZN6miniFE6driverIdiiEEiRK3BoxRS1_RNS_10ParametersER8YAML_Doc(ptr noundef nonnull align 4 dereferenceable(24) %7, ptr noundef nonnull align 4 dereferenceable(24) %65, ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(216) %9)
          to label %238 unwind label %263

238:                                              ; preds = %236
  %239 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %240 unwind label %265

240:                                              ; preds = %238
  %241 = fsub double %239, %30
  %242 = load i32, ptr %6, align 4, !tbaa !5
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %276

244:                                              ; preds = %240
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %14) #25
  %245 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 0, i32 2
  store ptr %245, ptr %14, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #25
  store i64 18, ptr %3, align 8, !tbaa !55
  %246 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %14, ptr noundef nonnull align 8 dereferenceable(8) %3, i64 noundef 0)
          to label %247 unwind label %267

247:                                              ; preds = %244
  store ptr %246, ptr %14, align 8, !tbaa !43
  %248 = load i64, ptr %3, align 8, !tbaa !55
  store i64 %248, ptr %245, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(18) %246, ptr noundef nonnull align 1 dereferenceable(18) @.str.7, i64 18, i1 false)
  %249 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 0, i32 1
  store i64 %248, ptr %249, align 8, !tbaa !19
  %250 = load ptr, ptr %14, align 8, !tbaa !43
  %251 = getelementptr inbounds i8, ptr %250, i64 %248
  store i8 0, ptr %251, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #25
  %252 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %9, ptr noundef nonnull align 8 dereferenceable(32) %14, double noundef %241)
          to label %253 unwind label %269

253:                                              ; preds = %247
  %254 = load ptr, ptr %14, align 8, !tbaa !43
  %255 = icmp eq ptr %254, %245
  br i1 %255, label %257, label %256

256:                                              ; preds = %253
  call void @_ZdlPv(ptr noundef %254) #28
  br label %257

257:                                              ; preds = %253, %256
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %14) #25
  invoke void @_ZN8YAML_Doc12generateYAMLB5cxx11Ev(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %15, ptr noundef nonnull align 8 dereferenceable(216) %9)
          to label %258 unwind label %265

258:                                              ; preds = %257
  %259 = load ptr, ptr %15, align 8, !tbaa !43
  %260 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 2
  %261 = icmp eq ptr %259, %260
  br i1 %261, label %276, label %262

262:                                              ; preds = %258
  call void @_ZdlPv(ptr noundef %259) #28
  br label %276

263:                                              ; preds = %236
  %264 = landingpad { ptr, i32 }
          cleanup
  br label %292

265:                                              ; preds = %276, %257, %238
  %266 = landingpad { ptr, i32 }
          cleanup
  br label %292

267:                                              ; preds = %244
  %268 = landingpad { ptr, i32 }
          cleanup
  br label %274

269:                                              ; preds = %247
  %270 = landingpad { ptr, i32 }
          cleanup
  %271 = load ptr, ptr %14, align 8, !tbaa !43
  %272 = icmp eq ptr %271, %245
  br i1 %272, label %274, label %273

273:                                              ; preds = %269
  call void @_ZdlPv(ptr noundef %271) #28
  br label %274

274:                                              ; preds = %273, %269, %267
  %275 = phi { ptr, i32 } [ %268, %267 ], [ %270, %269 ], [ %270, %273 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %14) #25
  br label %292

276:                                              ; preds = %262, %258, %240
  invoke void @_ZN6miniFE12finalize_mpiEv()
          to label %277 unwind label %265

277:                                              ; preds = %276
  call void @_ZN8YAML_DocD1Ev(ptr noundef nonnull align 8 dereferenceable(216) %9) #25
  call void @llvm.lifetime.end.p0(i64 216, ptr nonnull %9) #25
  %278 = load ptr, ptr @_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE, align 8
  store ptr %278, ptr %8, align 8, !tbaa !30
  %279 = load ptr, ptr getelementptr inbounds ([4 x ptr], ptr @_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 3), align 8
  %280 = getelementptr i8, ptr %278, i64 -24
  %281 = load i64, ptr %280, align 8
  %282 = getelementptr inbounds i8, ptr %8, i64 %281
  store ptr %279, ptr %282, align 8, !tbaa !30
  %283 = getelementptr inbounds %"class.std::__cxx11::basic_ostringstream", ptr %8, i64 0, i32 1
  store ptr getelementptr inbounds ({ [16 x ptr] }, ptr @_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 0, i64 2), ptr %283, align 8, !tbaa !30
  %284 = getelementptr inbounds %"class.std::__cxx11::basic_ostringstream", ptr %8, i64 0, i32 1, i32 2
  %285 = load ptr, ptr %284, align 8, !tbaa !43
  %286 = getelementptr inbounds %"class.std::__cxx11::basic_ostringstream", ptr %8, i64 0, i32 1, i32 2, i32 2
  %287 = icmp eq ptr %285, %286
  br i1 %287, label %289, label %288

288:                                              ; preds = %277
  call void @_ZdlPv(ptr noundef %285) #28
  br label %289

289:                                              ; preds = %277, %288
  store ptr getelementptr inbounds ({ [16 x ptr] }, ptr @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2), ptr %283, align 8, !tbaa !30
  %290 = getelementptr inbounds %"class.std::__cxx11::basic_ostringstream", ptr %8, i64 0, i32 1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %290) #25
  %291 = getelementptr inbounds i8, ptr %8, i64 112
  call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %291) #25
  call void @llvm.lifetime.end.p0(i64 376, ptr nonnull %8) #25
  br label %300

292:                                              ; preds = %263, %274, %265, %234
  %293 = phi { ptr, i32 } [ %235, %234 ], [ %264, %263 ], [ %266, %265 ], [ %275, %274 ]
  call void @_ZN8YAML_DocD1Ev(ptr noundef nonnull align 8 dereferenceable(216) %9) #25
  br label %294

294:                                              ; preds = %292, %233
  %295 = phi { ptr, i32 } [ %293, %292 ], [ %221, %233 ]
  call void @llvm.lifetime.end.p0(i64 216, ptr nonnull %9) #25
  br label %296

296:                                              ; preds = %294, %153
  %297 = phi { ptr, i32 } [ %295, %294 ], [ %154, %153 ]
  call void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev(ptr noundef nonnull align 8 dereferenceable(112) %8) #25
  br label %298

298:                                              ; preds = %296, %151
  %299 = phi { ptr, i32 } [ %297, %296 ], [ %152, %151 ]
  call void @llvm.lifetime.end.p0(i64 376, ptr nonnull %8) #25
  br label %309

300:                                              ; preds = %113, %289
  %301 = phi i32 [ %237, %289 ], [ 1, %113 ]
  call void @_ZdlPv(ptr noundef nonnull %61) #28
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #25
  %302 = load ptr, ptr %21, align 16, !tbaa !43
  %303 = icmp eq ptr %302, %22
  br i1 %303, label %305, label %304

304:                                              ; preds = %300
  call void @_ZdlPv(ptr noundef %302) #28
  br label %305

305:                                              ; preds = %300, %304
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %4) #25
  ret i32 %301

306:                                              ; preds = %60
  %307 = landingpad { ptr, i32 }
          cleanup
  %308 = icmp eq ptr %61, null
  br i1 %308, label %311, label %309

309:                                              ; preds = %298, %122, %306
  %310 = phi { ptr, i32 } [ %307, %306 ], [ %299, %298 ], [ %123, %122 ]
  call void @_ZdlPv(ptr noundef nonnull %61) #28
  br label %311

311:                                              ; preds = %309, %306, %120
  %312 = phi { ptr, i32 } [ %121, %120 ], [ %307, %306 ], [ %310, %309 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #25
  br label %313

313:                                              ; preds = %118, %311, %116
  %314 = phi { ptr, i32 } [ %117, %116 ], [ %312, %311 ], [ %119, %118 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #25
  br label %315

315:                                              ; preds = %313, %114
  %316 = phi { ptr, i32 } [ %314, %313 ], [ %115, %114 ]
  %317 = load ptr, ptr %21, align 16, !tbaa !43
  %318 = icmp eq ptr %317, %22
  br i1 %318, label %320, label %319

319:                                              ; preds = %315
  call void @_ZdlPv(ptr noundef %317) #28
  br label %320

320:                                              ; preds = %315, %319
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %4) #25
  resume { ptr, i32 } %316
}

declare void @_ZN6miniFE14get_parametersEiPPcRNS_10ParametersE(i32 noundef, ptr noundef, ptr noundef nonnull align 8 dereferenceable(92)) local_unnamed_addr #0

declare i32 @__gxx_personality_v0(...)

declare void @_ZN6miniFE14initialize_mpiEiPPcRiS2_(i32 noundef, ptr noundef, ptr noundef nonnull align 4 dereferenceable(4), ptr noundef nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

declare noundef double @_ZN6miniFE7mytimerEv() local_unnamed_addr #0

declare void @_ZN6miniFE20broadcast_parametersERNS_10ParametersE(ptr noundef nonnull align 8 dereferenceable(92)) local_unnamed_addr #0

declare void @_Z13box_partitioniiiRK3BoxPS_(i32 noundef, i32 noundef, i32 noundef, ptr noundef nonnull align 4 dereferenceable(24), ptr noundef) local_unnamed_addr #0

; Function Attrs: inlinehint mustprogress uwtable
declare noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef) local_unnamed_addr #6

declare void @_ZN6miniFE12finalize_mpiEv() local_unnamed_addr #0

; Function Attrs: uwtable
declare void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1Ev(ptr noundef nonnull align 8 dereferenceable(112)) unnamed_addr #7 align 2

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8), i32 noundef) local_unnamed_addr #0

; Function Attrs: uwtable
declare void @_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv(ptr noalias sret(%"class.std::__cxx11::basic_string") align 8, ptr noundef nonnull align 8 dereferenceable(112)) local_unnamed_addr #7 align 2

declare void @_ZN8YAML_DocC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_S7_(ptr noundef nonnull align 8 dereferenceable(216), ptr noundef nonnull align 8 dereferenceable(32), ptr noundef nonnull align 8 dereferenceable(32), ptr noundef nonnull align 8 dereferenceable(32), ptr noundef nonnull align 8 dereferenceable(32)) unnamed_addr #0

; Function Attrs: uwtable
define dso_local void @_Z18add_params_to_yamlR8YAML_DocRN6miniFE10ParametersE(ptr noundef nonnull align 8 dereferenceable(216) %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(92) %1) local_unnamed_addr #7 personality ptr @__gxx_personality_v0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca %"class.std::__cxx11::basic_string", align 8
  %14 = alloca %"class.std::__cxx11::basic_string", align 8
  %15 = alloca %"class.std::__cxx11::basic_string", align 8
  %16 = alloca %"class.std::__cxx11::basic_string", align 8
  %17 = alloca %"class.std::__cxx11::basic_string", align 8
  %18 = alloca %"class.std::__cxx11::basic_string", align 8
  %19 = alloca %"class.std::__cxx11::basic_string", align 8
  %20 = alloca %"class.std::__cxx11::basic_string", align 8
  %21 = alloca %"class.std::__cxx11::basic_string", align 8
  %22 = alloca %"class.std::__cxx11::basic_string", align 8
  %23 = alloca %"class.std::__cxx11::basic_string", align 8
  %24 = alloca %"class.std::__cxx11::basic_string", align 8
  %25 = alloca %"class.std::__cxx11::basic_string", align 8
  %26 = alloca %"class.std::__cxx11::basic_string", align 8
  %27 = alloca %"class.std::__cxx11::basic_string", align 8
  %28 = alloca %"class.std::__cxx11::basic_string", align 8
  %29 = alloca %"class.std::__cxx11::basic_string", align 8
  %30 = alloca %"class.std::__cxx11::basic_string", align 8
  %31 = alloca %"class.std::__cxx11::basic_string", align 8
  %32 = alloca %"class.std::__cxx11::basic_string", align 8
  %33 = alloca %"class.std::__cxx11::basic_string", align 8
  %34 = alloca %"class.std::__cxx11::basic_string", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #25
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 2
  store ptr %35, ptr %13, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #25
  store i64 21, ptr %12, align 8, !tbaa !55
  %36 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull align 8 dereferenceable(8) %12, i64 noundef 0)
          to label %37 unwind label %242

37:                                               ; preds = %2
  store ptr %36, ptr %13, align 8, !tbaa !43
  %38 = load i64, ptr %12, align 8, !tbaa !55
  store i64 %38, ptr %35, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %36, ptr noundef nonnull align 1 dereferenceable(21) @.str.8, i64 21, i1 false)
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 1
  store i64 %38, ptr %39, align 8, !tbaa !19
  %40 = load ptr, ptr %13, align 8, !tbaa !43
  %41 = getelementptr inbounds i8, ptr %40, i64 %38
  store i8 0, ptr %41, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %14) #25
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 0, i32 2
  store ptr %42, ptr %14, align 8, !tbaa !18
  %43 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 0, i32 1
  store i64 0, ptr %43, align 8, !tbaa !19
  store i8 0, ptr %42, align 8, !tbaa !20
  %44 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull align 8 dereferenceable(32) %14)
          to label %45 unwind label %244

45:                                               ; preds = %37
  %46 = load ptr, ptr %14, align 8, !tbaa !43
  %47 = icmp eq ptr %46, %42
  br i1 %47, label %49, label %48

48:                                               ; preds = %45
  call void @_ZdlPv(ptr noundef %46) #28
  br label %49

49:                                               ; preds = %45, %48
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %14) #25
  %50 = load ptr, ptr %13, align 8, !tbaa !43
  %51 = icmp eq ptr %50, %35
  br i1 %51, label %53, label %52

52:                                               ; preds = %49
  call void @_ZdlPv(ptr noundef %50) #28
  br label %53

53:                                               ; preds = %49, %52
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %15) #25
  %54 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 2
  store ptr %54, ptr %15, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #25
  store i64 21, ptr %11, align 8, !tbaa !55
  %55 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %15, ptr noundef nonnull align 8 dereferenceable(8) %11, i64 noundef 0)
          to label %56 unwind label %255

56:                                               ; preds = %53
  store ptr %55, ptr %15, align 8, !tbaa !43
  %57 = load i64, ptr %11, align 8, !tbaa !55
  store i64 %57, ptr %54, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %55, ptr noundef nonnull align 1 dereferenceable(21) @.str.8, i64 21, i1 false)
  %58 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 1
  store i64 %57, ptr %58, align 8, !tbaa !19
  %59 = load ptr, ptr %15, align 8, !tbaa !43
  %60 = getelementptr inbounds i8, ptr %59, i64 %57
  store i8 0, ptr %60, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #25
  %61 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %15)
          to label %62 unwind label %257

62:                                               ; preds = %56
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %16) #25
  %63 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 2
  store ptr %63, ptr %16, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %63, ptr noundef nonnull align 1 dereferenceable(10) @.str.9, i64 10, i1 false)
  %64 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 1
  store i64 10, ptr %64, align 8, !tbaa !19
  %65 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 2, i32 1, i64 2
  store i8 0, ptr %65, align 2, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %17) #25
  %66 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %17, i64 0, i32 2
  store ptr %66, ptr %17, align 8, !tbaa !18
  %67 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %17, i64 0, i32 1
  store i64 0, ptr %67, align 8, !tbaa !19
  store i8 0, ptr %66, align 8, !tbaa !20
  %68 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %61, ptr noundef nonnull align 8 dereferenceable(32) %16, ptr noundef nonnull align 8 dereferenceable(32) %17)
          to label %69 unwind label %259

69:                                               ; preds = %62
  %70 = load ptr, ptr %17, align 8, !tbaa !43
  %71 = icmp eq ptr %70, %66
  br i1 %71, label %73, label %72

72:                                               ; preds = %69
  call void @_ZdlPv(ptr noundef %70) #28
  br label %73

73:                                               ; preds = %69, %72
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %17) #25
  %74 = load ptr, ptr %16, align 8, !tbaa !43
  %75 = icmp eq ptr %74, %63
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  call void @_ZdlPv(ptr noundef %74) #28
  br label %77

77:                                               ; preds = %73, %76
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %16) #25
  %78 = load ptr, ptr %15, align 8, !tbaa !43
  %79 = icmp eq ptr %78, %54
  br i1 %79, label %81, label %80

80:                                               ; preds = %77
  call void @_ZdlPv(ptr noundef %78) #28
  br label %81

81:                                               ; preds = %77, %80
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %18) #25
  %82 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %18, i64 0, i32 2
  store ptr %82, ptr %18, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #25
  store i64 21, ptr %10, align 8, !tbaa !55
  %83 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %18, ptr noundef nonnull align 8 dereferenceable(8) %10, i64 noundef 0)
          to label %84 unwind label %276

84:                                               ; preds = %81
  store ptr %83, ptr %18, align 8, !tbaa !43
  %85 = load i64, ptr %10, align 8, !tbaa !55
  store i64 %85, ptr %82, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %83, ptr noundef nonnull align 1 dereferenceable(21) @.str.8, i64 21, i1 false)
  %86 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %18, i64 0, i32 1
  store i64 %85, ptr %86, align 8, !tbaa !19
  %87 = load ptr, ptr %18, align 8, !tbaa !43
  %88 = getelementptr inbounds i8, ptr %87, i64 %85
  store i8 0, ptr %88, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #25
  %89 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %18)
          to label %90 unwind label %278

90:                                               ; preds = %84
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %19) #25
  %91 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 0, i32 2
  store ptr %91, ptr %19, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %91, ptr noundef nonnull align 1 dereferenceable(10) @.str.9, i64 10, i1 false)
  %92 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 0, i32 1
  store i64 10, ptr %92, align 8, !tbaa !19
  %93 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 0, i32 2, i32 1, i64 2
  store i8 0, ptr %93, align 2, !tbaa !20
  %94 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %89, ptr noundef nonnull align 8 dereferenceable(32) %19)
          to label %95 unwind label %280

95:                                               ; preds = %90
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %20) #25
  %96 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %20, i64 0, i32 2
  store ptr %96, ptr %20, align 8, !tbaa !18
  store i16 30830, ptr %96, align 8
  %97 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %20, i64 0, i32 1
  store i64 2, ptr %97, align 8, !tbaa !19
  %98 = getelementptr inbounds i8, ptr %20, i64 18
  store i8 0, ptr %98, align 2, !tbaa !20
  %99 = load i32, ptr %1, align 8, !tbaa !24
  %100 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %94, ptr noundef nonnull align 8 dereferenceable(32) %20, i32 noundef %99)
          to label %101 unwind label %282

101:                                              ; preds = %95
  %102 = load ptr, ptr %20, align 8, !tbaa !43
  %103 = icmp eq ptr %102, %96
  br i1 %103, label %105, label %104

104:                                              ; preds = %101
  call void @_ZdlPv(ptr noundef %102) #28
  br label %105

105:                                              ; preds = %101, %104
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %20) #25
  %106 = load ptr, ptr %19, align 8, !tbaa !43
  %107 = icmp eq ptr %106, %91
  br i1 %107, label %109, label %108

108:                                              ; preds = %105
  call void @_ZdlPv(ptr noundef %106) #28
  br label %109

109:                                              ; preds = %105, %108
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %19) #25
  %110 = load ptr, ptr %18, align 8, !tbaa !43
  %111 = icmp eq ptr %110, %82
  br i1 %111, label %113, label %112

112:                                              ; preds = %109
  call void @_ZdlPv(ptr noundef %110) #28
  br label %113

113:                                              ; preds = %109, %112
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %18) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %21) #25
  %114 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %21, i64 0, i32 2
  store ptr %114, ptr %21, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #25
  store i64 21, ptr %9, align 8, !tbaa !55
  %115 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %21, ptr noundef nonnull align 8 dereferenceable(8) %9, i64 noundef 0)
          to label %116 unwind label %301

116:                                              ; preds = %113
  store ptr %115, ptr %21, align 8, !tbaa !43
  %117 = load i64, ptr %9, align 8, !tbaa !55
  store i64 %117, ptr %114, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %115, ptr noundef nonnull align 1 dereferenceable(21) @.str.8, i64 21, i1 false)
  %118 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %21, i64 0, i32 1
  store i64 %117, ptr %118, align 8, !tbaa !19
  %119 = load ptr, ptr %21, align 8, !tbaa !43
  %120 = getelementptr inbounds i8, ptr %119, i64 %117
  store i8 0, ptr %120, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #25
  %121 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %21)
          to label %122 unwind label %303

122:                                              ; preds = %116
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %22) #25
  %123 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %22, i64 0, i32 2
  store ptr %123, ptr %22, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %123, ptr noundef nonnull align 1 dereferenceable(10) @.str.9, i64 10, i1 false)
  %124 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %22, i64 0, i32 1
  store i64 10, ptr %124, align 8, !tbaa !19
  %125 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %22, i64 0, i32 2, i32 1, i64 2
  store i8 0, ptr %125, align 2, !tbaa !20
  %126 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %121, ptr noundef nonnull align 8 dereferenceable(32) %22)
          to label %127 unwind label %305

127:                                              ; preds = %122
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %23) #25
  %128 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %23, i64 0, i32 2
  store ptr %128, ptr %23, align 8, !tbaa !18
  store i16 31086, ptr %128, align 8
  %129 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %23, i64 0, i32 1
  store i64 2, ptr %129, align 8, !tbaa !19
  %130 = getelementptr inbounds i8, ptr %23, i64 18
  store i8 0, ptr %130, align 2, !tbaa !20
  %131 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %1, i64 0, i32 1
  %132 = load i32, ptr %131, align 4, !tbaa !25
  %133 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %126, ptr noundef nonnull align 8 dereferenceable(32) %23, i32 noundef %132)
          to label %134 unwind label %307

134:                                              ; preds = %127
  %135 = load ptr, ptr %23, align 8, !tbaa !43
  %136 = icmp eq ptr %135, %128
  br i1 %136, label %138, label %137

137:                                              ; preds = %134
  call void @_ZdlPv(ptr noundef %135) #28
  br label %138

138:                                              ; preds = %134, %137
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %23) #25
  %139 = load ptr, ptr %22, align 8, !tbaa !43
  %140 = icmp eq ptr %139, %123
  br i1 %140, label %142, label %141

141:                                              ; preds = %138
  call void @_ZdlPv(ptr noundef %139) #28
  br label %142

142:                                              ; preds = %138, %141
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %22) #25
  %143 = load ptr, ptr %21, align 8, !tbaa !43
  %144 = icmp eq ptr %143, %114
  br i1 %144, label %146, label %145

145:                                              ; preds = %142
  call void @_ZdlPv(ptr noundef %143) #28
  br label %146

146:                                              ; preds = %142, %145
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %21) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %24) #25
  %147 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %24, i64 0, i32 2
  store ptr %147, ptr %24, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #25
  store i64 21, ptr %8, align 8, !tbaa !55
  %148 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %24, ptr noundef nonnull align 8 dereferenceable(8) %8, i64 noundef 0)
          to label %149 unwind label %326

149:                                              ; preds = %146
  store ptr %148, ptr %24, align 8, !tbaa !43
  %150 = load i64, ptr %8, align 8, !tbaa !55
  store i64 %150, ptr %147, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %148, ptr noundef nonnull align 1 dereferenceable(21) @.str.8, i64 21, i1 false)
  %151 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %24, i64 0, i32 1
  store i64 %150, ptr %151, align 8, !tbaa !19
  %152 = load ptr, ptr %24, align 8, !tbaa !43
  %153 = getelementptr inbounds i8, ptr %152, i64 %150
  store i8 0, ptr %153, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #25
  %154 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %24)
          to label %155 unwind label %328

155:                                              ; preds = %149
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %25) #25
  %156 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %25, i64 0, i32 2
  store ptr %156, ptr %25, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %156, ptr noundef nonnull align 1 dereferenceable(10) @.str.9, i64 10, i1 false)
  %157 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %25, i64 0, i32 1
  store i64 10, ptr %157, align 8, !tbaa !19
  %158 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %25, i64 0, i32 2, i32 1, i64 2
  store i8 0, ptr %158, align 2, !tbaa !20
  %159 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %154, ptr noundef nonnull align 8 dereferenceable(32) %25)
          to label %160 unwind label %330

160:                                              ; preds = %155
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %26) #25
  %161 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %26, i64 0, i32 2
  store ptr %161, ptr %26, align 8, !tbaa !18
  store i16 31342, ptr %161, align 8
  %162 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %26, i64 0, i32 1
  store i64 2, ptr %162, align 8, !tbaa !19
  %163 = getelementptr inbounds i8, ptr %26, i64 18
  store i8 0, ptr %163, align 2, !tbaa !20
  %164 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %1, i64 0, i32 2
  %165 = load i32, ptr %164, align 8, !tbaa !26
  %166 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %159, ptr noundef nonnull align 8 dereferenceable(32) %26, i32 noundef %165)
          to label %167 unwind label %332

167:                                              ; preds = %160
  %168 = load ptr, ptr %26, align 8, !tbaa !43
  %169 = icmp eq ptr %168, %161
  br i1 %169, label %171, label %170

170:                                              ; preds = %167
  call void @_ZdlPv(ptr noundef %168) #28
  br label %171

171:                                              ; preds = %167, %170
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %26) #25
  %172 = load ptr, ptr %25, align 8, !tbaa !43
  %173 = icmp eq ptr %172, %156
  br i1 %173, label %175, label %174

174:                                              ; preds = %171
  call void @_ZdlPv(ptr noundef %172) #28
  br label %175

175:                                              ; preds = %171, %174
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %25) #25
  %176 = load ptr, ptr %24, align 8, !tbaa !43
  %177 = icmp eq ptr %176, %147
  br i1 %177, label %179, label %178

178:                                              ; preds = %175
  call void @_ZdlPv(ptr noundef %176) #28
  br label %179

179:                                              ; preds = %175, %178
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %24) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %27) #25
  %180 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %27, i64 0, i32 2
  store ptr %180, ptr %27, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #25
  store i64 21, ptr %7, align 8, !tbaa !55
  %181 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %27, ptr noundef nonnull align 8 dereferenceable(8) %7, i64 noundef 0)
          to label %182 unwind label %351

182:                                              ; preds = %179
  store ptr %181, ptr %27, align 8, !tbaa !43
  %183 = load i64, ptr %7, align 8, !tbaa !55
  store i64 %183, ptr %180, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %181, ptr noundef nonnull align 1 dereferenceable(21) @.str.8, i64 21, i1 false)
  %184 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %27, i64 0, i32 1
  store i64 %183, ptr %184, align 8, !tbaa !19
  %185 = load ptr, ptr %27, align 8, !tbaa !43
  %186 = getelementptr inbounds i8, ptr %185, i64 %183
  store i8 0, ptr %186, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #25
  %187 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %27)
          to label %188 unwind label %353

188:                                              ; preds = %182
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %28) #25
  %189 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %28, i64 0, i32 2
  store ptr %189, ptr %28, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %189, ptr noundef nonnull align 1 dereferenceable(14) @.str.13, i64 14, i1 false)
  %190 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %28, i64 0, i32 1
  store i64 14, ptr %190, align 8, !tbaa !19
  %191 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %28, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %191, align 2, !tbaa !20
  %192 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %1, i64 0, i32 6
  %193 = load float, ptr %192, align 8, !tbaa !17
  %194 = fpext float %193 to double
  %195 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %187, ptr noundef nonnull align 8 dereferenceable(32) %28, double noundef %194)
          to label %196 unwind label %355

196:                                              ; preds = %188
  %197 = load ptr, ptr %28, align 8, !tbaa !43
  %198 = icmp eq ptr %197, %189
  br i1 %198, label %200, label %199

199:                                              ; preds = %196
  call void @_ZdlPv(ptr noundef %197) #28
  br label %200

200:                                              ; preds = %196, %199
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %28) #25
  %201 = load ptr, ptr %27, align 8, !tbaa !43
  %202 = icmp eq ptr %201, %180
  br i1 %202, label %204, label %203

203:                                              ; preds = %200
  call void @_ZdlPv(ptr noundef %201) #28
  br label %204

204:                                              ; preds = %200, %203
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %27) #25
  %205 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %1, i64 0, i32 4
  %206 = load i32, ptr %205, align 8, !tbaa !9
  %207 = icmp eq i32 %206, 1
  br i1 %207, label %208, label %392

208:                                              ; preds = %204
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %29) #25
  %209 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 2
  store ptr %209, ptr %29, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %209, ptr noundef nonnull align 1 dereferenceable(7) @.str.14, i64 7, i1 false)
  %210 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 1
  store i64 7, ptr %210, align 8, !tbaa !19
  %211 = getelementptr inbounds i8, ptr %29, i64 23
  store i8 0, ptr %211, align 1, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %30) #25
  %212 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %30, i64 0, i32 2
  store ptr %212, ptr %30, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #25
  store i64 21, ptr %6, align 8, !tbaa !55
  %213 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %30, ptr noundef nonnull align 8 dereferenceable(8) %6, i64 noundef 0)
          to label %214 unwind label %368

214:                                              ; preds = %208
  store ptr %213, ptr %30, align 8, !tbaa !43
  %215 = load i64, ptr %6, align 8, !tbaa !55
  store i64 %215, ptr %212, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %213, ptr noundef nonnull align 1 dereferenceable(21) @.str.8, i64 21, i1 false)
  %216 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %30, i64 0, i32 1
  store i64 %215, ptr %216, align 8, !tbaa !19
  %217 = load ptr, ptr %30, align 8, !tbaa !43
  %218 = getelementptr inbounds i8, ptr %217, i64 %215
  store i8 0, ptr %218, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #25
  %219 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %30)
          to label %220 unwind label %370

220:                                              ; preds = %214
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %31) #25
  %221 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %31, i64 0, i32 2
  store ptr %221, ptr %31, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #25
  store i64 20, ptr %5, align 8, !tbaa !55
  %222 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %31, ptr noundef nonnull align 8 dereferenceable(8) %5, i64 noundef 0)
          to label %223 unwind label %372

223:                                              ; preds = %220
  store ptr %222, ptr %31, align 8, !tbaa !43
  %224 = load i64, ptr %5, align 8, !tbaa !55
  store i64 %224, ptr %221, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %222, ptr noundef nonnull align 1 dereferenceable(20) @.str.15, i64 20, i1 false)
  %225 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %31, i64 0, i32 1
  store i64 %224, ptr %225, align 8, !tbaa !19
  %226 = load ptr, ptr %31, align 8, !tbaa !43
  %227 = getelementptr inbounds i8, ptr %226, i64 %224
  store i8 0, ptr %227, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #25
  %228 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %219, ptr noundef nonnull align 8 dereferenceable(32) %31, ptr noundef nonnull align 8 dereferenceable(32) %29)
          to label %229 unwind label %374

229:                                              ; preds = %223
  %230 = load ptr, ptr %31, align 8, !tbaa !43
  %231 = icmp eq ptr %230, %221
  br i1 %231, label %233, label %232

232:                                              ; preds = %229
  call void @_ZdlPv(ptr noundef %230) #28
  br label %233

233:                                              ; preds = %229, %232
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %31) #25
  %234 = load ptr, ptr %30, align 8, !tbaa !43
  %235 = icmp eq ptr %234, %212
  br i1 %235, label %237, label %236

236:                                              ; preds = %233
  call void @_ZdlPv(ptr noundef %234) #28
  br label %237

237:                                              ; preds = %233, %236
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %30) #25
  %238 = load ptr, ptr %29, align 8, !tbaa !43
  %239 = icmp eq ptr %238, %209
  br i1 %239, label %241, label %240

240:                                              ; preds = %237
  call void @_ZdlPv(ptr noundef %238) #28
  br label %241

241:                                              ; preds = %237, %240
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %29) #25
  br label %450

242:                                              ; preds = %2
  %243 = landingpad { ptr, i32 }
          cleanup
  br label %253

244:                                              ; preds = %37
  %245 = landingpad { ptr, i32 }
          cleanup
  %246 = load ptr, ptr %14, align 8, !tbaa !43
  %247 = icmp eq ptr %246, %42
  br i1 %247, label %249, label %248

248:                                              ; preds = %244
  call void @_ZdlPv(ptr noundef %246) #28
  br label %249

249:                                              ; preds = %248, %244
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %14) #25
  %250 = load ptr, ptr %13, align 8, !tbaa !43
  %251 = icmp eq ptr %250, %35
  br i1 %251, label %253, label %252

252:                                              ; preds = %249
  call void @_ZdlPv(ptr noundef %250) #28
  br label %253

253:                                              ; preds = %252, %249, %242
  %254 = phi { ptr, i32 } [ %243, %242 ], [ %245, %249 ], [ %245, %252 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #25
  br label %451

255:                                              ; preds = %53
  %256 = landingpad { ptr, i32 }
          cleanup
  br label %274

257:                                              ; preds = %56
  %258 = landingpad { ptr, i32 }
          cleanup
  br label %269

259:                                              ; preds = %62
  %260 = landingpad { ptr, i32 }
          cleanup
  %261 = load ptr, ptr %17, align 8, !tbaa !43
  %262 = icmp eq ptr %261, %66
  br i1 %262, label %264, label %263

263:                                              ; preds = %259
  call void @_ZdlPv(ptr noundef %261) #28
  br label %264

264:                                              ; preds = %263, %259
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %17) #25
  %265 = load ptr, ptr %16, align 8, !tbaa !43
  %266 = icmp eq ptr %265, %63
  br i1 %266, label %268, label %267

267:                                              ; preds = %264
  call void @_ZdlPv(ptr noundef %265) #28
  br label %268

268:                                              ; preds = %267, %264
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %16) #25
  br label %269

269:                                              ; preds = %268, %257
  %270 = phi { ptr, i32 } [ %260, %268 ], [ %258, %257 ]
  %271 = load ptr, ptr %15, align 8, !tbaa !43
  %272 = icmp eq ptr %271, %54
  br i1 %272, label %274, label %273

273:                                              ; preds = %269
  call void @_ZdlPv(ptr noundef %271) #28
  br label %274

274:                                              ; preds = %273, %269, %255
  %275 = phi { ptr, i32 } [ %256, %255 ], [ %270, %269 ], [ %270, %273 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #25
  br label %451

276:                                              ; preds = %81
  %277 = landingpad { ptr, i32 }
          cleanup
  br label %299

278:                                              ; preds = %84
  %279 = landingpad { ptr, i32 }
          cleanup
  br label %294

280:                                              ; preds = %90
  %281 = landingpad { ptr, i32 }
          cleanup
  br label %288

282:                                              ; preds = %95
  %283 = landingpad { ptr, i32 }
          cleanup
  %284 = load ptr, ptr %20, align 8, !tbaa !43
  %285 = icmp eq ptr %284, %96
  br i1 %285, label %287, label %286

286:                                              ; preds = %282
  call void @_ZdlPv(ptr noundef %284) #28
  br label %287

287:                                              ; preds = %286, %282
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %20) #25
  br label %288

288:                                              ; preds = %287, %280
  %289 = phi { ptr, i32 } [ %283, %287 ], [ %281, %280 ]
  %290 = load ptr, ptr %19, align 8, !tbaa !43
  %291 = icmp eq ptr %290, %91
  br i1 %291, label %293, label %292

292:                                              ; preds = %288
  call void @_ZdlPv(ptr noundef %290) #28
  br label %293

293:                                              ; preds = %292, %288
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %19) #25
  br label %294

294:                                              ; preds = %293, %278
  %295 = phi { ptr, i32 } [ %289, %293 ], [ %279, %278 ]
  %296 = load ptr, ptr %18, align 8, !tbaa !43
  %297 = icmp eq ptr %296, %82
  br i1 %297, label %299, label %298

298:                                              ; preds = %294
  call void @_ZdlPv(ptr noundef %296) #28
  br label %299

299:                                              ; preds = %298, %294, %276
  %300 = phi { ptr, i32 } [ %277, %276 ], [ %295, %294 ], [ %295, %298 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %18) #25
  br label %451

301:                                              ; preds = %113
  %302 = landingpad { ptr, i32 }
          cleanup
  br label %324

303:                                              ; preds = %116
  %304 = landingpad { ptr, i32 }
          cleanup
  br label %319

305:                                              ; preds = %122
  %306 = landingpad { ptr, i32 }
          cleanup
  br label %313

307:                                              ; preds = %127
  %308 = landingpad { ptr, i32 }
          cleanup
  %309 = load ptr, ptr %23, align 8, !tbaa !43
  %310 = icmp eq ptr %309, %128
  br i1 %310, label %312, label %311

311:                                              ; preds = %307
  call void @_ZdlPv(ptr noundef %309) #28
  br label %312

312:                                              ; preds = %311, %307
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %23) #25
  br label %313

313:                                              ; preds = %312, %305
  %314 = phi { ptr, i32 } [ %308, %312 ], [ %306, %305 ]
  %315 = load ptr, ptr %22, align 8, !tbaa !43
  %316 = icmp eq ptr %315, %123
  br i1 %316, label %318, label %317

317:                                              ; preds = %313
  call void @_ZdlPv(ptr noundef %315) #28
  br label %318

318:                                              ; preds = %317, %313
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %22) #25
  br label %319

319:                                              ; preds = %318, %303
  %320 = phi { ptr, i32 } [ %314, %318 ], [ %304, %303 ]
  %321 = load ptr, ptr %21, align 8, !tbaa !43
  %322 = icmp eq ptr %321, %114
  br i1 %322, label %324, label %323

323:                                              ; preds = %319
  call void @_ZdlPv(ptr noundef %321) #28
  br label %324

324:                                              ; preds = %323, %319, %301
  %325 = phi { ptr, i32 } [ %302, %301 ], [ %320, %319 ], [ %320, %323 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %21) #25
  br label %451

326:                                              ; preds = %146
  %327 = landingpad { ptr, i32 }
          cleanup
  br label %349

328:                                              ; preds = %149
  %329 = landingpad { ptr, i32 }
          cleanup
  br label %344

330:                                              ; preds = %155
  %331 = landingpad { ptr, i32 }
          cleanup
  br label %338

332:                                              ; preds = %160
  %333 = landingpad { ptr, i32 }
          cleanup
  %334 = load ptr, ptr %26, align 8, !tbaa !43
  %335 = icmp eq ptr %334, %161
  br i1 %335, label %337, label %336

336:                                              ; preds = %332
  call void @_ZdlPv(ptr noundef %334) #28
  br label %337

337:                                              ; preds = %336, %332
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %26) #25
  br label %338

338:                                              ; preds = %337, %330
  %339 = phi { ptr, i32 } [ %333, %337 ], [ %331, %330 ]
  %340 = load ptr, ptr %25, align 8, !tbaa !43
  %341 = icmp eq ptr %340, %156
  br i1 %341, label %343, label %342

342:                                              ; preds = %338
  call void @_ZdlPv(ptr noundef %340) #28
  br label %343

343:                                              ; preds = %342, %338
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %25) #25
  br label %344

344:                                              ; preds = %343, %328
  %345 = phi { ptr, i32 } [ %339, %343 ], [ %329, %328 ]
  %346 = load ptr, ptr %24, align 8, !tbaa !43
  %347 = icmp eq ptr %346, %147
  br i1 %347, label %349, label %348

348:                                              ; preds = %344
  call void @_ZdlPv(ptr noundef %346) #28
  br label %349

349:                                              ; preds = %348, %344, %326
  %350 = phi { ptr, i32 } [ %327, %326 ], [ %345, %344 ], [ %345, %348 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %24) #25
  br label %451

351:                                              ; preds = %179
  %352 = landingpad { ptr, i32 }
          cleanup
  br label %366

353:                                              ; preds = %182
  %354 = landingpad { ptr, i32 }
          cleanup
  br label %361

355:                                              ; preds = %188
  %356 = landingpad { ptr, i32 }
          cleanup
  %357 = load ptr, ptr %28, align 8, !tbaa !43
  %358 = icmp eq ptr %357, %189
  br i1 %358, label %360, label %359

359:                                              ; preds = %355
  call void @_ZdlPv(ptr noundef %357) #28
  br label %360

360:                                              ; preds = %359, %355
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %28) #25
  br label %361

361:                                              ; preds = %360, %353
  %362 = phi { ptr, i32 } [ %356, %360 ], [ %354, %353 ]
  %363 = load ptr, ptr %27, align 8, !tbaa !43
  %364 = icmp eq ptr %363, %180
  br i1 %364, label %366, label %365

365:                                              ; preds = %361
  call void @_ZdlPv(ptr noundef %363) #28
  br label %366

366:                                              ; preds = %365, %361, %351
  %367 = phi { ptr, i32 } [ %352, %351 ], [ %362, %361 ], [ %362, %365 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %27) #25
  br label %451

368:                                              ; preds = %208
  %369 = landingpad { ptr, i32 }
          cleanup
  br label %386

370:                                              ; preds = %214
  %371 = landingpad { ptr, i32 }
          cleanup
  br label %381

372:                                              ; preds = %220
  %373 = landingpad { ptr, i32 }
          cleanup
  br label %379

374:                                              ; preds = %223
  %375 = landingpad { ptr, i32 }
          cleanup
  %376 = load ptr, ptr %31, align 8, !tbaa !43
  %377 = icmp eq ptr %376, %221
  br i1 %377, label %379, label %378

378:                                              ; preds = %374
  call void @_ZdlPv(ptr noundef %376) #28
  br label %379

379:                                              ; preds = %378, %374, %372
  %380 = phi { ptr, i32 } [ %373, %372 ], [ %375, %374 ], [ %375, %378 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %31) #25
  br label %381

381:                                              ; preds = %379, %370
  %382 = phi { ptr, i32 } [ %380, %379 ], [ %371, %370 ]
  %383 = load ptr, ptr %30, align 8, !tbaa !43
  %384 = icmp eq ptr %383, %212
  br i1 %384, label %386, label %385

385:                                              ; preds = %381
  call void @_ZdlPv(ptr noundef %383) #28
  br label %386

386:                                              ; preds = %385, %381, %368
  %387 = phi { ptr, i32 } [ %369, %368 ], [ %382, %381 ], [ %382, %385 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %30) #25
  %388 = load ptr, ptr %29, align 8, !tbaa !43
  %389 = icmp eq ptr %388, %209
  br i1 %389, label %391, label %390

390:                                              ; preds = %386
  call void @_ZdlPv(ptr noundef %388) #28
  br label %391

391:                                              ; preds = %390, %386
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %29) #25
  br label %451

392:                                              ; preds = %204
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %32) #25
  %393 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %32, i64 0, i32 2
  store ptr %393, ptr %32, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %393, ptr noundef nonnull align 1 dereferenceable(6) @.str.16, i64 6, i1 false)
  %394 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %32, i64 0, i32 1
  store i64 6, ptr %394, align 8, !tbaa !19
  %395 = getelementptr inbounds i8, ptr %32, i64 22
  store i8 0, ptr %395, align 2, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %33) #25
  %396 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %33, i64 0, i32 2
  store ptr %396, ptr %33, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #25
  store i64 21, ptr %4, align 8, !tbaa !55
  %397 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %33, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %398 unwind label %426

398:                                              ; preds = %392
  store ptr %397, ptr %33, align 8, !tbaa !43
  %399 = load i64, ptr %4, align 8, !tbaa !55
  store i64 %399, ptr %396, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %397, ptr noundef nonnull align 1 dereferenceable(21) @.str.8, i64 21, i1 false)
  %400 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %33, i64 0, i32 1
  store i64 %399, ptr %400, align 8, !tbaa !19
  %401 = load ptr, ptr %33, align 8, !tbaa !43
  %402 = getelementptr inbounds i8, ptr %401, i64 %399
  store i8 0, ptr %402, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #25
  %403 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %33)
          to label %404 unwind label %428

404:                                              ; preds = %398
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %34) #25
  %405 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %34, i64 0, i32 2
  store ptr %405, ptr %34, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #25
  store i64 20, ptr %3, align 8, !tbaa !55
  %406 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %34, ptr noundef nonnull align 8 dereferenceable(8) %3, i64 noundef 0)
          to label %407 unwind label %430

407:                                              ; preds = %404
  store ptr %406, ptr %34, align 8, !tbaa !43
  %408 = load i64, ptr %3, align 8, !tbaa !55
  store i64 %408, ptr %405, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %406, ptr noundef nonnull align 1 dereferenceable(20) @.str.15, i64 20, i1 false)
  %409 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %34, i64 0, i32 1
  store i64 %408, ptr %409, align 8, !tbaa !19
  %410 = load ptr, ptr %34, align 8, !tbaa !43
  %411 = getelementptr inbounds i8, ptr %410, i64 %408
  store i8 0, ptr %411, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #25
  %412 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %403, ptr noundef nonnull align 8 dereferenceable(32) %34, ptr noundef nonnull align 8 dereferenceable(32) %32)
          to label %413 unwind label %432

413:                                              ; preds = %407
  %414 = load ptr, ptr %34, align 8, !tbaa !43
  %415 = icmp eq ptr %414, %405
  br i1 %415, label %417, label %416

416:                                              ; preds = %413
  call void @_ZdlPv(ptr noundef %414) #28
  br label %417

417:                                              ; preds = %413, %416
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %34) #25
  %418 = load ptr, ptr %33, align 8, !tbaa !43
  %419 = icmp eq ptr %418, %396
  br i1 %419, label %421, label %420

420:                                              ; preds = %417
  call void @_ZdlPv(ptr noundef %418) #28
  br label %421

421:                                              ; preds = %417, %420
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %33) #25
  %422 = load ptr, ptr %32, align 8, !tbaa !43
  %423 = icmp eq ptr %422, %393
  br i1 %423, label %425, label %424

424:                                              ; preds = %421
  call void @_ZdlPv(ptr noundef %422) #28
  br label %425

425:                                              ; preds = %421, %424
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %32) #25
  br label %450

426:                                              ; preds = %392
  %427 = landingpad { ptr, i32 }
          cleanup
  br label %444

428:                                              ; preds = %398
  %429 = landingpad { ptr, i32 }
          cleanup
  br label %439

430:                                              ; preds = %404
  %431 = landingpad { ptr, i32 }
          cleanup
  br label %437

432:                                              ; preds = %407
  %433 = landingpad { ptr, i32 }
          cleanup
  %434 = load ptr, ptr %34, align 8, !tbaa !43
  %435 = icmp eq ptr %434, %405
  br i1 %435, label %437, label %436

436:                                              ; preds = %432
  call void @_ZdlPv(ptr noundef %434) #28
  br label %437

437:                                              ; preds = %436, %432, %430
  %438 = phi { ptr, i32 } [ %431, %430 ], [ %433, %432 ], [ %433, %436 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %34) #25
  br label %439

439:                                              ; preds = %437, %428
  %440 = phi { ptr, i32 } [ %438, %437 ], [ %429, %428 ]
  %441 = load ptr, ptr %33, align 8, !tbaa !43
  %442 = icmp eq ptr %441, %396
  br i1 %442, label %444, label %443

443:                                              ; preds = %439
  call void @_ZdlPv(ptr noundef %441) #28
  br label %444

444:                                              ; preds = %443, %439, %426
  %445 = phi { ptr, i32 } [ %427, %426 ], [ %440, %439 ], [ %440, %443 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %33) #25
  %446 = load ptr, ptr %32, align 8, !tbaa !43
  %447 = icmp eq ptr %446, %393
  br i1 %447, label %449, label %448

448:                                              ; preds = %444
  call void @_ZdlPv(ptr noundef %446) #28
  br label %449

449:                                              ; preds = %448, %444
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %32) #25
  br label %451

450:                                              ; preds = %425, %241
  ret void

451:                                              ; preds = %449, %391, %366, %349, %324, %299, %274, %253
  %452 = phi { ptr, i32 } [ %387, %391 ], [ %445, %449 ], [ %367, %366 ], [ %350, %349 ], [ %325, %324 ], [ %300, %299 ], [ %275, %274 ], [ %254, %253 ]
  resume { ptr, i32 } %452
}

; Function Attrs: uwtable
define dso_local void @_Z25add_configuration_to_yamlR8YAML_Docii(ptr noundef nonnull align 8 dereferenceable(216) %0, i32 noundef %1, i32 %2) local_unnamed_addr #7 personality ptr @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = alloca %"class.std::__cxx11::basic_string", align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.std::__cxx11::basic_string", align 8
  %14 = alloca %"class.std::__cxx11::basic_string", align 8
  %15 = alloca %"class.std::__cxx11::basic_string", align 8
  %16 = alloca %"class.std::__cxx11::basic_string", align 8
  %17 = alloca %"class.std::__cxx11::basic_string", align 8
  %18 = alloca %"class.std::__cxx11::basic_string", align 8
  %19 = alloca %"class.std::__cxx11::basic_string", align 8
  %20 = alloca %"class.std::__cxx11::basic_string", align 8
  %21 = alloca %"class.std::__cxx11::basic_string", align 8
  %22 = alloca %"class.std::__cxx11::basic_string", align 8
  %23 = alloca %"class.std::__cxx11::basic_string", align 8
  %24 = alloca %"class.std::__cxx11::basic_string", align 8
  %25 = alloca %"class.std::__cxx11::basic_string", align 8
  %26 = alloca %"class.std::__cxx11::basic_string", align 8
  %27 = alloca %"class.std::__cxx11::basic_string", align 8
  %28 = alloca %"class.std::__cxx11::basic_string", align 8
  %29 = alloca %"class.std::__cxx11::basic_string", align 8
  %30 = alloca %"class.std::__cxx11::basic_string", align 8
  %31 = alloca %"class.std::__cxx11::basic_string", align 8
  %32 = alloca %"class.std::__cxx11::basic_string", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #25
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 2
  store ptr %33, ptr %6, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #25
  store i64 21, ptr %5, align 8, !tbaa !55
  %34 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %6, ptr noundef nonnull align 8 dereferenceable(8) %5, i64 noundef 0)
          to label %35 unwind label %264

35:                                               ; preds = %3
  store ptr %34, ptr %6, align 8, !tbaa !43
  %36 = load i64, ptr %5, align 8, !tbaa !55
  store i64 %36, ptr %33, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %34, ptr noundef nonnull align 1 dereferenceable(21) @.str.8, i64 21, i1 false)
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 1
  store i64 %36, ptr %37, align 8, !tbaa !19
  %38 = load ptr, ptr %6, align 8, !tbaa !43
  %39 = getelementptr inbounds i8, ptr %38, i64 %36
  store i8 0, ptr %39, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #25
  %40 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %6)
          to label %41 unwind label %266

41:                                               ; preds = %35
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #25
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 2
  store ptr %42, ptr %7, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #25
  store i64 20, ptr %4, align 8, !tbaa !55
  %43 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %7, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %44 unwind label %268

44:                                               ; preds = %41
  store ptr %43, ptr %7, align 8, !tbaa !43
  %45 = load i64, ptr %4, align 8, !tbaa !55
  store i64 %45, ptr %42, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(20) %43, ptr noundef nonnull align 1 dereferenceable(20) @.str.17, i64 20, i1 false)
  %46 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 1
  store i64 %45, ptr %46, align 8, !tbaa !19
  %47 = load ptr, ptr %7, align 8, !tbaa !43
  %48 = getelementptr inbounds i8, ptr %47, i64 %45
  store i8 0, ptr %48, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #25
  %49 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %40, ptr noundef nonnull align 8 dereferenceable(32) %7, i32 noundef %1)
          to label %50 unwind label %270

50:                                               ; preds = %44
  %51 = load ptr, ptr %7, align 8, !tbaa !43
  %52 = icmp eq ptr %51, %42
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  call void @_ZdlPv(ptr noundef %51) #28
  br label %54

54:                                               ; preds = %50, %53
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #25
  %55 = load ptr, ptr %6, align 8, !tbaa !43
  %56 = icmp eq ptr %55, %33
  br i1 %56, label %58, label %57

57:                                               ; preds = %54
  call void @_ZdlPv(ptr noundef %55) #28
  br label %58

58:                                               ; preds = %54, %57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %8) #25
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 2
  store ptr %59, ptr %8, align 8, !tbaa !18
  store i64 7886488383309048912, ptr %59, align 8
  %60 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 1
  store i64 8, ptr %60, align 8, !tbaa !19
  %61 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 2, i32 1
  store i8 0, ptr %61, align 8, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %9) #25
  %62 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 2
  store ptr %62, ptr %9, align 8, !tbaa !18
  %63 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 1
  store i64 0, ptr %63, align 8, !tbaa !19
  store i8 0, ptr %62, align 8, !tbaa !20
  %64 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %8, ptr noundef nonnull align 8 dereferenceable(32) %9)
          to label %65 unwind label %284

65:                                               ; preds = %58
  %66 = load ptr, ptr %9, align 8, !tbaa !43
  %67 = icmp eq ptr %66, %62
  br i1 %67, label %69, label %68

68:                                               ; preds = %65
  call void @_ZdlPv(ptr noundef %66) #28
  br label %69

69:                                               ; preds = %65, %68
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #25
  %70 = load ptr, ptr %8, align 8, !tbaa !43
  %71 = icmp eq ptr %70, %59
  br i1 %71, label %73, label %72

72:                                               ; preds = %69
  call void @_ZdlPv(ptr noundef %70) #28
  br label %73

73:                                               ; preds = %69, %72
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %10) #25
  %74 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 2
  store ptr %74, ptr %10, align 8, !tbaa !18
  store i64 7886488383309048912, ptr %74, align 8
  %75 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 1
  store i64 8, ptr %75, align 8, !tbaa !19
  %76 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 2, i32 1
  store i8 0, ptr %76, align 8, !tbaa !20
  %77 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %10)
          to label %78 unwind label %294

78:                                               ; preds = %73
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %11) #25
  %79 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 2
  store ptr %79, ptr %11, align 8, !tbaa !18
  store i64 7308604897320202088, ptr %79, align 8
  %80 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 1
  store i64 8, ptr %80, align 8, !tbaa !19
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 2, i32 1
  store i8 0, ptr %81, align 8, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #25
  %82 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2
  store ptr %82, ptr %12, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %82, ptr noundef nonnull align 1 dereferenceable(7) @.str.20, i64 7, i1 false)
  %83 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 1
  store i64 7, ptr %83, align 8, !tbaa !19
  %84 = getelementptr inbounds i8, ptr %12, i64 23
  store i8 0, ptr %84, align 1, !tbaa !20
  %85 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %77, ptr noundef nonnull align 8 dereferenceable(32) %11, ptr noundef nonnull align 8 dereferenceable(32) %12)
          to label %86 unwind label %296

86:                                               ; preds = %78
  %87 = load ptr, ptr %12, align 8, !tbaa !43
  %88 = icmp eq ptr %87, %82
  br i1 %88, label %90, label %89

89:                                               ; preds = %86
  call void @_ZdlPv(ptr noundef %87) #28
  br label %90

90:                                               ; preds = %86, %89
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #25
  %91 = load ptr, ptr %11, align 8, !tbaa !43
  %92 = icmp eq ptr %91, %79
  br i1 %92, label %94, label %93

93:                                               ; preds = %90
  call void @_ZdlPv(ptr noundef %91) #28
  br label %94

94:                                               ; preds = %90, %93
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #25
  %95 = load ptr, ptr %10, align 8, !tbaa !43
  %96 = icmp eq ptr %95, %74
  br i1 %96, label %98, label %97

97:                                               ; preds = %94
  call void @_ZdlPv(ptr noundef %95) #28
  br label %98

98:                                               ; preds = %94, %97
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #25
  %99 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 2
  store ptr %99, ptr %13, align 8, !tbaa !18
  store i64 7886488383309048912, ptr %99, align 8
  %100 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 1
  store i64 8, ptr %100, align 8, !tbaa !19
  %101 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 2, i32 1
  store i8 0, ptr %101, align 8, !tbaa !20
  %102 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %13)
          to label %103 unwind label %312

103:                                              ; preds = %98
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %14) #25
  %104 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 0, i32 2
  store ptr %104, ptr %14, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %104, ptr noundef nonnull align 1 dereferenceable(11) @.str.21, i64 11, i1 false)
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 0, i32 1
  store i64 11, ptr %105, align 8, !tbaa !19
  %106 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 0, i32 2, i32 1, i64 3
  store i8 0, ptr %106, align 1, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %15) #25
  %107 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 2
  store ptr %107, ptr %15, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %107, ptr noundef nonnull align 1 dereferenceable(7) @.str.20, i64 7, i1 false)
  %108 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 1
  store i64 7, ptr %108, align 8, !tbaa !19
  %109 = getelementptr inbounds i8, ptr %15, i64 23
  store i8 0, ptr %109, align 1, !tbaa !20
  %110 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %102, ptr noundef nonnull align 8 dereferenceable(32) %14, ptr noundef nonnull align 8 dereferenceable(32) %15)
          to label %111 unwind label %314

111:                                              ; preds = %103
  %112 = load ptr, ptr %15, align 8, !tbaa !43
  %113 = icmp eq ptr %112, %107
  br i1 %113, label %115, label %114

114:                                              ; preds = %111
  call void @_ZdlPv(ptr noundef %112) #28
  br label %115

115:                                              ; preds = %111, %114
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #25
  %116 = load ptr, ptr %14, align 8, !tbaa !43
  %117 = icmp eq ptr %116, %104
  br i1 %117, label %119, label %118

118:                                              ; preds = %115
  call void @_ZdlPv(ptr noundef %116) #28
  br label %119

119:                                              ; preds = %115, %118
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %14) #25
  %120 = load ptr, ptr %13, align 8, !tbaa !43
  %121 = icmp eq ptr %120, %99
  br i1 %121, label %123, label %122

122:                                              ; preds = %119
  call void @_ZdlPv(ptr noundef %120) #28
  br label %123

123:                                              ; preds = %119, %122
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %16) #25
  %124 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 2
  store ptr %124, ptr %16, align 8, !tbaa !18
  store i64 7886488383309048912, ptr %124, align 8
  %125 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 1
  store i64 8, ptr %125, align 8, !tbaa !19
  %126 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 2, i32 1
  store i8 0, ptr %126, align 8, !tbaa !20
  %127 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %16)
          to label %128 unwind label %330

128:                                              ; preds = %123
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %17) #25
  %129 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %17, i64 0, i32 2
  store ptr %129, ptr %17, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %129, ptr noundef nonnull align 1 dereferenceable(14) @.str.22, i64 14, i1 false)
  %130 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %17, i64 0, i32 1
  store i64 14, ptr %130, align 8, !tbaa !19
  %131 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %17, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %131, align 2, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %18) #25
  %132 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %18, i64 0, i32 2
  store ptr %132, ptr %18, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %132, ptr noundef nonnull align 1 dereferenceable(7) @.str.20, i64 7, i1 false)
  %133 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %18, i64 0, i32 1
  store i64 7, ptr %133, align 8, !tbaa !19
  %134 = getelementptr inbounds i8, ptr %18, i64 23
  store i8 0, ptr %134, align 1, !tbaa !20
  %135 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %127, ptr noundef nonnull align 8 dereferenceable(32) %17, ptr noundef nonnull align 8 dereferenceable(32) %18)
          to label %136 unwind label %332

136:                                              ; preds = %128
  %137 = load ptr, ptr %18, align 8, !tbaa !43
  %138 = icmp eq ptr %137, %132
  br i1 %138, label %140, label %139

139:                                              ; preds = %136
  call void @_ZdlPv(ptr noundef %137) #28
  br label %140

140:                                              ; preds = %136, %139
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %18) #25
  %141 = load ptr, ptr %17, align 8, !tbaa !43
  %142 = icmp eq ptr %141, %129
  br i1 %142, label %144, label %143

143:                                              ; preds = %140
  call void @_ZdlPv(ptr noundef %141) #28
  br label %144

144:                                              ; preds = %140, %143
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %17) #25
  %145 = load ptr, ptr %16, align 8, !tbaa !43
  %146 = icmp eq ptr %145, %124
  br i1 %146, label %148, label %147

147:                                              ; preds = %144
  call void @_ZdlPv(ptr noundef %145) #28
  br label %148

148:                                              ; preds = %144, %147
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %16) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %19) #25
  %149 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 0, i32 2
  store ptr %149, ptr %19, align 8, !tbaa !18
  store i64 7886488383309048912, ptr %149, align 8
  %150 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 0, i32 1
  store i64 8, ptr %150, align 8, !tbaa !19
  %151 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 0, i32 2, i32 1
  store i8 0, ptr %151, align 8, !tbaa !20
  %152 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %19)
          to label %153 unwind label %348

153:                                              ; preds = %148
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %20) #25
  %154 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %20, i64 0, i32 2
  store ptr %154, ptr %20, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %154, ptr noundef nonnull align 1 dereferenceable(9) @.str.23, i64 9, i1 false)
  %155 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %20, i64 0, i32 1
  store i64 9, ptr %155, align 8, !tbaa !19
  %156 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %20, i64 0, i32 2, i32 1, i64 1
  store i8 0, ptr %156, align 1, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %21) #25
  %157 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %21, i64 0, i32 2
  store ptr %157, ptr %21, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %157, ptr noundef nonnull align 1 dereferenceable(7) @.str.20, i64 7, i1 false)
  %158 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %21, i64 0, i32 1
  store i64 7, ptr %158, align 8, !tbaa !19
  %159 = getelementptr inbounds i8, ptr %21, i64 23
  store i8 0, ptr %159, align 1, !tbaa !20
  %160 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %152, ptr noundef nonnull align 8 dereferenceable(32) %20, ptr noundef nonnull align 8 dereferenceable(32) %21)
          to label %161 unwind label %350

161:                                              ; preds = %153
  %162 = load ptr, ptr %21, align 8, !tbaa !43
  %163 = icmp eq ptr %162, %157
  br i1 %163, label %165, label %164

164:                                              ; preds = %161
  call void @_ZdlPv(ptr noundef %162) #28
  br label %165

165:                                              ; preds = %161, %164
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %21) #25
  %166 = load ptr, ptr %20, align 8, !tbaa !43
  %167 = icmp eq ptr %166, %154
  br i1 %167, label %169, label %168

168:                                              ; preds = %165
  call void @_ZdlPv(ptr noundef %166) #28
  br label %169

169:                                              ; preds = %165, %168
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %20) #25
  %170 = load ptr, ptr %19, align 8, !tbaa !43
  %171 = icmp eq ptr %170, %149
  br i1 %171, label %173, label %172

172:                                              ; preds = %169
  call void @_ZdlPv(ptr noundef %170) #28
  br label %173

173:                                              ; preds = %169, %172
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %19) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %22) #25
  %174 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %22, i64 0, i32 2
  store ptr %174, ptr %22, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %174, ptr noundef nonnull align 1 dereferenceable(5) @.str.24, i64 5, i1 false)
  %175 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %22, i64 0, i32 1
  store i64 5, ptr %175, align 8, !tbaa !19
  %176 = getelementptr inbounds i8, ptr %22, i64 21
  store i8 0, ptr %176, align 1, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %23) #25
  %177 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %23, i64 0, i32 2
  store ptr %177, ptr %23, align 8, !tbaa !18
  %178 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %23, i64 0, i32 1
  store i64 0, ptr %178, align 8, !tbaa !19
  store i8 0, ptr %177, align 8, !tbaa !20
  %179 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %22, ptr noundef nonnull align 8 dereferenceable(32) %23)
          to label %180 unwind label %366

180:                                              ; preds = %173
  %181 = load ptr, ptr %23, align 8, !tbaa !43
  %182 = icmp eq ptr %181, %177
  br i1 %182, label %184, label %183

183:                                              ; preds = %180
  call void @_ZdlPv(ptr noundef %181) #28
  br label %184

184:                                              ; preds = %180, %183
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %23) #25
  %185 = load ptr, ptr %22, align 8, !tbaa !43
  %186 = icmp eq ptr %185, %174
  br i1 %186, label %188, label %187

187:                                              ; preds = %184
  call void @_ZdlPv(ptr noundef %185) #28
  br label %188

188:                                              ; preds = %184, %187
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %22) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %24) #25
  %189 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %24, i64 0, i32 2
  store ptr %189, ptr %24, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %189, ptr noundef nonnull align 1 dereferenceable(5) @.str.24, i64 5, i1 false)
  %190 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %24, i64 0, i32 1
  store i64 5, ptr %190, align 8, !tbaa !19
  %191 = getelementptr inbounds i8, ptr %24, i64 21
  store i8 0, ptr %191, align 1, !tbaa !20
  %192 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %24)
          to label %193 unwind label %376

193:                                              ; preds = %188
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %25) #25
  %194 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %25, i64 0, i32 2
  store ptr %194, ptr %25, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %194, ptr noundef nonnull align 1 dereferenceable(3) @.str.25, i64 3, i1 false)
  %195 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %25, i64 0, i32 1
  store i64 3, ptr %195, align 8, !tbaa !19
  %196 = getelementptr inbounds i8, ptr %25, i64 19
  store i8 0, ptr %196, align 1, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %26) #25
  %197 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %26, i64 0, i32 2
  store ptr %197, ptr %26, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %197, ptr noundef nonnull align 1 dereferenceable(7) @.str.20, i64 7, i1 false)
  %198 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %26, i64 0, i32 1
  store i64 7, ptr %198, align 8, !tbaa !19
  %199 = getelementptr inbounds i8, ptr %26, i64 23
  store i8 0, ptr %199, align 1, !tbaa !20
  %200 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %192, ptr noundef nonnull align 8 dereferenceable(32) %25, ptr noundef nonnull align 8 dereferenceable(32) %26)
          to label %201 unwind label %378

201:                                              ; preds = %193
  %202 = load ptr, ptr %26, align 8, !tbaa !43
  %203 = icmp eq ptr %202, %197
  br i1 %203, label %205, label %204

204:                                              ; preds = %201
  call void @_ZdlPv(ptr noundef %202) #28
  br label %205

205:                                              ; preds = %201, %204
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %26) #25
  %206 = load ptr, ptr %25, align 8, !tbaa !43
  %207 = icmp eq ptr %206, %194
  br i1 %207, label %209, label %208

208:                                              ; preds = %205
  call void @_ZdlPv(ptr noundef %206) #28
  br label %209

209:                                              ; preds = %205, %208
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %25) #25
  %210 = load ptr, ptr %24, align 8, !tbaa !43
  %211 = icmp eq ptr %210, %189
  br i1 %211, label %213, label %212

212:                                              ; preds = %209
  call void @_ZdlPv(ptr noundef %210) #28
  br label %213

213:                                              ; preds = %209, %212
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %24) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %27) #25
  %214 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %27, i64 0, i32 2
  store ptr %214, ptr %27, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %214, ptr noundef nonnull align 1 dereferenceable(5) @.str.24, i64 5, i1 false)
  %215 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %27, i64 0, i32 1
  store i64 5, ptr %215, align 8, !tbaa !19
  %216 = getelementptr inbounds i8, ptr %27, i64 21
  store i8 0, ptr %216, align 1, !tbaa !20
  %217 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %27)
          to label %218 unwind label %394

218:                                              ; preds = %213
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %28) #25
  %219 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %28, i64 0, i32 2
  store ptr %219, ptr %28, align 8, !tbaa !18
  store i64 6000836824347990083, ptr %219, align 8
  %220 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %28, i64 0, i32 1
  store i64 8, ptr %220, align 8, !tbaa !19
  %221 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %28, i64 0, i32 2, i32 1
  store i8 0, ptr %221, align 8, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %29) #25
  %222 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 2
  store ptr %222, ptr %29, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %222, ptr noundef nonnull align 1 dereferenceable(7) @.str.20, i64 7, i1 false)
  %223 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 1
  store i64 7, ptr %223, align 8, !tbaa !19
  %224 = getelementptr inbounds i8, ptr %29, i64 23
  store i8 0, ptr %224, align 1, !tbaa !20
  %225 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %217, ptr noundef nonnull align 8 dereferenceable(32) %28, ptr noundef nonnull align 8 dereferenceable(32) %29)
          to label %226 unwind label %396

226:                                              ; preds = %218
  %227 = load ptr, ptr %29, align 8, !tbaa !43
  %228 = icmp eq ptr %227, %222
  br i1 %228, label %230, label %229

229:                                              ; preds = %226
  call void @_ZdlPv(ptr noundef %227) #28
  br label %230

230:                                              ; preds = %226, %229
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %29) #25
  %231 = load ptr, ptr %28, align 8, !tbaa !43
  %232 = icmp eq ptr %231, %219
  br i1 %232, label %234, label %233

233:                                              ; preds = %230
  call void @_ZdlPv(ptr noundef %231) #28
  br label %234

234:                                              ; preds = %230, %233
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %28) #25
  %235 = load ptr, ptr %27, align 8, !tbaa !43
  %236 = icmp eq ptr %235, %214
  br i1 %236, label %238, label %237

237:                                              ; preds = %234
  call void @_ZdlPv(ptr noundef %235) #28
  br label %238

238:                                              ; preds = %234, %237
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %27) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %30) #25
  %239 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %30, i64 0, i32 2
  store ptr %239, ptr %30, align 8, !tbaa !18
  store i16 28526, ptr %239, align 8
  %240 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %30, i64 0, i32 1
  store i64 2, ptr %240, align 8, !tbaa !19
  %241 = getelementptr inbounds i8, ptr %30, i64 18
  store i8 0, ptr %241, align 2, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %31) #25
  %242 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %31, i64 0, i32 2
  store ptr %242, ptr %31, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %242, ptr noundef nonnull align 1 dereferenceable(5) @.str.24, i64 5, i1 false)
  %243 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %31, i64 0, i32 1
  store i64 5, ptr %243, align 8, !tbaa !19
  %244 = getelementptr inbounds i8, ptr %31, i64 21
  store i8 0, ptr %244, align 1, !tbaa !20
  %245 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %31)
          to label %246 unwind label %412

246:                                              ; preds = %238
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %32) #25
  %247 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %32, i64 0, i32 2
  store ptr %247, ptr %32, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %247, ptr noundef nonnull align 1 dereferenceable(9) @.str.28, i64 9, i1 false)
  %248 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %32, i64 0, i32 1
  store i64 9, ptr %248, align 8, !tbaa !19
  %249 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %32, i64 0, i32 2, i32 1, i64 1
  store i8 0, ptr %249, align 1, !tbaa !20
  %250 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %245, ptr noundef nonnull align 8 dereferenceable(32) %32, ptr noundef nonnull align 8 dereferenceable(32) %30)
          to label %251 unwind label %414

251:                                              ; preds = %246
  %252 = load ptr, ptr %32, align 8, !tbaa !43
  %253 = icmp eq ptr %252, %247
  br i1 %253, label %255, label %254

254:                                              ; preds = %251
  call void @_ZdlPv(ptr noundef %252) #28
  br label %255

255:                                              ; preds = %251, %254
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %32) #25
  %256 = load ptr, ptr %31, align 8, !tbaa !43
  %257 = icmp eq ptr %256, %242
  br i1 %257, label %259, label %258

258:                                              ; preds = %255
  call void @_ZdlPv(ptr noundef %256) #28
  br label %259

259:                                              ; preds = %255, %258
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %31) #25
  %260 = load ptr, ptr %30, align 8, !tbaa !43
  %261 = icmp eq ptr %260, %239
  br i1 %261, label %263, label %262

262:                                              ; preds = %259
  call void @_ZdlPv(ptr noundef %260) #28
  br label %263

263:                                              ; preds = %259, %262
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %30) #25
  ret void

264:                                              ; preds = %3
  %265 = landingpad { ptr, i32 }
          cleanup
  br label %282

266:                                              ; preds = %35
  %267 = landingpad { ptr, i32 }
          cleanup
  br label %277

268:                                              ; preds = %41
  %269 = landingpad { ptr, i32 }
          cleanup
  br label %275

270:                                              ; preds = %44
  %271 = landingpad { ptr, i32 }
          cleanup
  %272 = load ptr, ptr %7, align 8, !tbaa !43
  %273 = icmp eq ptr %272, %42
  br i1 %273, label %275, label %274

274:                                              ; preds = %270
  call void @_ZdlPv(ptr noundef %272) #28
  br label %275

275:                                              ; preds = %274, %270, %268
  %276 = phi { ptr, i32 } [ %269, %268 ], [ %271, %270 ], [ %271, %274 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #25
  br label %277

277:                                              ; preds = %275, %266
  %278 = phi { ptr, i32 } [ %276, %275 ], [ %267, %266 ]
  %279 = load ptr, ptr %6, align 8, !tbaa !43
  %280 = icmp eq ptr %279, %33
  br i1 %280, label %282, label %281

281:                                              ; preds = %277
  call void @_ZdlPv(ptr noundef %279) #28
  br label %282

282:                                              ; preds = %281, %277, %264
  %283 = phi { ptr, i32 } [ %265, %264 ], [ %278, %277 ], [ %278, %281 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #25
  br label %430

284:                                              ; preds = %58
  %285 = landingpad { ptr, i32 }
          cleanup
  %286 = load ptr, ptr %9, align 8, !tbaa !43
  %287 = icmp eq ptr %286, %62
  br i1 %287, label %289, label %288

288:                                              ; preds = %284
  call void @_ZdlPv(ptr noundef %286) #28
  br label %289

289:                                              ; preds = %288, %284
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #25
  %290 = load ptr, ptr %8, align 8, !tbaa !43
  %291 = icmp eq ptr %290, %59
  br i1 %291, label %293, label %292

292:                                              ; preds = %289
  call void @_ZdlPv(ptr noundef %290) #28
  br label %293

293:                                              ; preds = %292, %289
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #25
  br label %430

294:                                              ; preds = %73
  %295 = landingpad { ptr, i32 }
          cleanup
  br label %306

296:                                              ; preds = %78
  %297 = landingpad { ptr, i32 }
          cleanup
  %298 = load ptr, ptr %12, align 8, !tbaa !43
  %299 = icmp eq ptr %298, %82
  br i1 %299, label %301, label %300

300:                                              ; preds = %296
  call void @_ZdlPv(ptr noundef %298) #28
  br label %301

301:                                              ; preds = %300, %296
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #25
  %302 = load ptr, ptr %11, align 8, !tbaa !43
  %303 = icmp eq ptr %302, %79
  br i1 %303, label %305, label %304

304:                                              ; preds = %301
  call void @_ZdlPv(ptr noundef %302) #28
  br label %305

305:                                              ; preds = %304, %301
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #25
  br label %306

306:                                              ; preds = %305, %294
  %307 = phi { ptr, i32 } [ %297, %305 ], [ %295, %294 ]
  %308 = load ptr, ptr %10, align 8, !tbaa !43
  %309 = icmp eq ptr %308, %74
  br i1 %309, label %311, label %310

310:                                              ; preds = %306
  call void @_ZdlPv(ptr noundef %308) #28
  br label %311

311:                                              ; preds = %310, %306
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #25
  br label %430

312:                                              ; preds = %98
  %313 = landingpad { ptr, i32 }
          cleanup
  br label %324

314:                                              ; preds = %103
  %315 = landingpad { ptr, i32 }
          cleanup
  %316 = load ptr, ptr %15, align 8, !tbaa !43
  %317 = icmp eq ptr %316, %107
  br i1 %317, label %319, label %318

318:                                              ; preds = %314
  call void @_ZdlPv(ptr noundef %316) #28
  br label %319

319:                                              ; preds = %318, %314
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #25
  %320 = load ptr, ptr %14, align 8, !tbaa !43
  %321 = icmp eq ptr %320, %104
  br i1 %321, label %323, label %322

322:                                              ; preds = %319
  call void @_ZdlPv(ptr noundef %320) #28
  br label %323

323:                                              ; preds = %322, %319
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %14) #25
  br label %324

324:                                              ; preds = %323, %312
  %325 = phi { ptr, i32 } [ %315, %323 ], [ %313, %312 ]
  %326 = load ptr, ptr %13, align 8, !tbaa !43
  %327 = icmp eq ptr %326, %99
  br i1 %327, label %329, label %328

328:                                              ; preds = %324
  call void @_ZdlPv(ptr noundef %326) #28
  br label %329

329:                                              ; preds = %328, %324
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #25
  br label %430

330:                                              ; preds = %123
  %331 = landingpad { ptr, i32 }
          cleanup
  br label %342

332:                                              ; preds = %128
  %333 = landingpad { ptr, i32 }
          cleanup
  %334 = load ptr, ptr %18, align 8, !tbaa !43
  %335 = icmp eq ptr %334, %132
  br i1 %335, label %337, label %336

336:                                              ; preds = %332
  call void @_ZdlPv(ptr noundef %334) #28
  br label %337

337:                                              ; preds = %336, %332
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %18) #25
  %338 = load ptr, ptr %17, align 8, !tbaa !43
  %339 = icmp eq ptr %338, %129
  br i1 %339, label %341, label %340

340:                                              ; preds = %337
  call void @_ZdlPv(ptr noundef %338) #28
  br label %341

341:                                              ; preds = %340, %337
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %17) #25
  br label %342

342:                                              ; preds = %341, %330
  %343 = phi { ptr, i32 } [ %333, %341 ], [ %331, %330 ]
  %344 = load ptr, ptr %16, align 8, !tbaa !43
  %345 = icmp eq ptr %344, %124
  br i1 %345, label %347, label %346

346:                                              ; preds = %342
  call void @_ZdlPv(ptr noundef %344) #28
  br label %347

347:                                              ; preds = %346, %342
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %16) #25
  br label %430

348:                                              ; preds = %148
  %349 = landingpad { ptr, i32 }
          cleanup
  br label %360

350:                                              ; preds = %153
  %351 = landingpad { ptr, i32 }
          cleanup
  %352 = load ptr, ptr %21, align 8, !tbaa !43
  %353 = icmp eq ptr %352, %157
  br i1 %353, label %355, label %354

354:                                              ; preds = %350
  call void @_ZdlPv(ptr noundef %352) #28
  br label %355

355:                                              ; preds = %354, %350
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %21) #25
  %356 = load ptr, ptr %20, align 8, !tbaa !43
  %357 = icmp eq ptr %356, %154
  br i1 %357, label %359, label %358

358:                                              ; preds = %355
  call void @_ZdlPv(ptr noundef %356) #28
  br label %359

359:                                              ; preds = %358, %355
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %20) #25
  br label %360

360:                                              ; preds = %359, %348
  %361 = phi { ptr, i32 } [ %351, %359 ], [ %349, %348 ]
  %362 = load ptr, ptr %19, align 8, !tbaa !43
  %363 = icmp eq ptr %362, %149
  br i1 %363, label %365, label %364

364:                                              ; preds = %360
  call void @_ZdlPv(ptr noundef %362) #28
  br label %365

365:                                              ; preds = %364, %360
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %19) #25
  br label %430

366:                                              ; preds = %173
  %367 = landingpad { ptr, i32 }
          cleanup
  %368 = load ptr, ptr %23, align 8, !tbaa !43
  %369 = icmp eq ptr %368, %177
  br i1 %369, label %371, label %370

370:                                              ; preds = %366
  call void @_ZdlPv(ptr noundef %368) #28
  br label %371

371:                                              ; preds = %370, %366
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %23) #25
  %372 = load ptr, ptr %22, align 8, !tbaa !43
  %373 = icmp eq ptr %372, %174
  br i1 %373, label %375, label %374

374:                                              ; preds = %371
  call void @_ZdlPv(ptr noundef %372) #28
  br label %375

375:                                              ; preds = %374, %371
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %22) #25
  br label %430

376:                                              ; preds = %188
  %377 = landingpad { ptr, i32 }
          cleanup
  br label %388

378:                                              ; preds = %193
  %379 = landingpad { ptr, i32 }
          cleanup
  %380 = load ptr, ptr %26, align 8, !tbaa !43
  %381 = icmp eq ptr %380, %197
  br i1 %381, label %383, label %382

382:                                              ; preds = %378
  call void @_ZdlPv(ptr noundef %380) #28
  br label %383

383:                                              ; preds = %382, %378
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %26) #25
  %384 = load ptr, ptr %25, align 8, !tbaa !43
  %385 = icmp eq ptr %384, %194
  br i1 %385, label %387, label %386

386:                                              ; preds = %383
  call void @_ZdlPv(ptr noundef %384) #28
  br label %387

387:                                              ; preds = %386, %383
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %25) #25
  br label %388

388:                                              ; preds = %387, %376
  %389 = phi { ptr, i32 } [ %379, %387 ], [ %377, %376 ]
  %390 = load ptr, ptr %24, align 8, !tbaa !43
  %391 = icmp eq ptr %390, %189
  br i1 %391, label %393, label %392

392:                                              ; preds = %388
  call void @_ZdlPv(ptr noundef %390) #28
  br label %393

393:                                              ; preds = %392, %388
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %24) #25
  br label %430

394:                                              ; preds = %213
  %395 = landingpad { ptr, i32 }
          cleanup
  br label %406

396:                                              ; preds = %218
  %397 = landingpad { ptr, i32 }
          cleanup
  %398 = load ptr, ptr %29, align 8, !tbaa !43
  %399 = icmp eq ptr %398, %222
  br i1 %399, label %401, label %400

400:                                              ; preds = %396
  call void @_ZdlPv(ptr noundef %398) #28
  br label %401

401:                                              ; preds = %400, %396
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %29) #25
  %402 = load ptr, ptr %28, align 8, !tbaa !43
  %403 = icmp eq ptr %402, %219
  br i1 %403, label %405, label %404

404:                                              ; preds = %401
  call void @_ZdlPv(ptr noundef %402) #28
  br label %405

405:                                              ; preds = %404, %401
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %28) #25
  br label %406

406:                                              ; preds = %405, %394
  %407 = phi { ptr, i32 } [ %397, %405 ], [ %395, %394 ]
  %408 = load ptr, ptr %27, align 8, !tbaa !43
  %409 = icmp eq ptr %408, %214
  br i1 %409, label %411, label %410

410:                                              ; preds = %406
  call void @_ZdlPv(ptr noundef %408) #28
  br label %411

411:                                              ; preds = %410, %406
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %27) #25
  br label %430

412:                                              ; preds = %238
  %413 = landingpad { ptr, i32 }
          cleanup
  br label %420

414:                                              ; preds = %246
  %415 = landingpad { ptr, i32 }
          cleanup
  %416 = load ptr, ptr %32, align 8, !tbaa !43
  %417 = icmp eq ptr %416, %247
  br i1 %417, label %419, label %418

418:                                              ; preds = %414
  call void @_ZdlPv(ptr noundef %416) #28
  br label %419

419:                                              ; preds = %418, %414
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %32) #25
  br label %420

420:                                              ; preds = %419, %412
  %421 = phi { ptr, i32 } [ %415, %419 ], [ %413, %412 ]
  %422 = load ptr, ptr %31, align 8, !tbaa !43
  %423 = icmp eq ptr %422, %242
  br i1 %423, label %425, label %424

424:                                              ; preds = %420
  call void @_ZdlPv(ptr noundef %422) #28
  br label %425

425:                                              ; preds = %424, %420
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %31) #25
  %426 = load ptr, ptr %30, align 8, !tbaa !43
  %427 = icmp eq ptr %426, %239
  br i1 %427, label %429, label %428

428:                                              ; preds = %425
  call void @_ZdlPv(ptr noundef %426) #28
  br label %429

429:                                              ; preds = %428, %425
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %30) #25
  br label %430

430:                                              ; preds = %429, %411, %393, %375, %365, %347, %329, %311, %293, %282
  %431 = phi { ptr, i32 } [ %421, %429 ], [ %407, %411 ], [ %389, %393 ], [ %367, %375 ], [ %361, %365 ], [ %343, %347 ], [ %325, %329 ], [ %307, %311 ], [ %285, %293 ], [ %283, %282 ]
  resume { ptr, i32 } %431
}

; Function Attrs: uwtable
define dso_local void @_Z22add_timestring_to_yamlR8YAML_Doc(ptr noundef nonnull align 8 dereferenceable(216) %0) local_unnamed_addr #7 personality ptr @__gxx_personality_v0 {
  %2 = alloca i64, align 8
  %3 = alloca %"class.std::__cxx11::basic_ostringstream", align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #25
  %6 = call i64 @time(ptr noundef nonnull %2) #25
  %7 = call ptr @localtime(ptr noundef nonnull %2) #25
  call void @llvm.lifetime.start.p0(i64 376, ptr nonnull %3) #25
  call void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1Ev(ptr noundef nonnull align 8 dereferenceable(112) %3)
  %8 = load ptr, ptr %3, align 8, !tbaa !30
  %9 = getelementptr i8, ptr %8, i64 -24
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr %3, i64 %10
  %12 = getelementptr inbounds %"class.std::basic_ios", ptr %11, i64 0, i32 3
  %13 = load i8, ptr %12, align 1, !tbaa !56, !range !57, !noundef !58
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %32

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.std::basic_ios", ptr %11, i64 0, i32 5
  %17 = load ptr, ptr %16, align 8, !tbaa !32
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  invoke void @_ZSt16__throw_bad_castv() #26
          to label %20 unwind label %146

20:                                               ; preds = %19
  unreachable

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.std::ctype", ptr %17, i64 0, i32 8
  %23 = load i8, ptr %22, align 8, !tbaa !40
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %17)
          to label %26 unwind label %146

26:                                               ; preds = %25
  %27 = load ptr, ptr %17, align 8, !tbaa !30
  %28 = getelementptr inbounds ptr, ptr %27, i64 6
  %29 = load ptr, ptr %28, align 8
  %30 = invoke noundef signext i8 %29(ptr noundef nonnull align 8 dereferenceable(570) %17, i8 noundef signext 32)
          to label %31 unwind label %146

31:                                               ; preds = %26, %21
  store i8 1, ptr %12, align 1, !tbaa !56
  br label %32

32:                                               ; preds = %1, %31
  %33 = getelementptr inbounds %"class.std::basic_ios", ptr %11, i64 0, i32 2
  store i8 48, ptr %33, align 8, !tbaa !59
  %34 = getelementptr inbounds %struct.tm, ptr %7, i64 0, i32 5
  %35 = load i32, ptr %34, align 4, !tbaa !60
  %36 = add nsw i32 %35, 1900
  %37 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %3, i32 noundef %36)
          to label %38 unwind label %146

38:                                               ; preds = %32
  %39 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %37, ptr noundef nonnull @.str.29, i64 noundef 1)
          to label %40 unwind label %146

40:                                               ; preds = %38
  %41 = load ptr, ptr %3, align 8, !tbaa !30
  %42 = getelementptr i8, ptr %41, i64 -24
  %43 = load i64, ptr %42, align 8
  %44 = getelementptr inbounds i8, ptr %3, i64 %43
  %45 = getelementptr inbounds %"class.std::ios_base", ptr %44, i64 0, i32 2
  store i64 2, ptr %45, align 8, !tbaa !62
  %46 = getelementptr inbounds %struct.tm, ptr %7, i64 0, i32 4
  %47 = load i32, ptr %46, align 8, !tbaa !63
  %48 = add nsw i32 %47, 1
  %49 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %3, i32 noundef %48)
          to label %50 unwind label %146

50:                                               ; preds = %40
  %51 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %49, ptr noundef nonnull @.str.29, i64 noundef 1)
          to label %52 unwind label %146

52:                                               ; preds = %50
  %53 = load ptr, ptr %3, align 8, !tbaa !30
  %54 = getelementptr i8, ptr %53, i64 -24
  %55 = load i64, ptr %54, align 8
  %56 = getelementptr inbounds i8, ptr %3, i64 %55
  %57 = getelementptr inbounds %"class.std::ios_base", ptr %56, i64 0, i32 2
  store i64 2, ptr %57, align 8, !tbaa !62
  %58 = getelementptr inbounds %struct.tm, ptr %7, i64 0, i32 3
  %59 = load i32, ptr %58, align 4, !tbaa !64
  %60 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %3, i32 noundef %59)
          to label %61 unwind label %146

61:                                               ; preds = %52
  %62 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %60, ptr noundef nonnull @.str.30, i64 noundef 2)
          to label %63 unwind label %146

63:                                               ; preds = %61
  %64 = load ptr, ptr %3, align 8, !tbaa !30
  %65 = getelementptr i8, ptr %64, i64 -24
  %66 = load i64, ptr %65, align 8
  %67 = getelementptr inbounds i8, ptr %3, i64 %66
  %68 = getelementptr inbounds %"class.std::ios_base", ptr %67, i64 0, i32 2
  store i64 2, ptr %68, align 8, !tbaa !62
  %69 = getelementptr inbounds %struct.tm, ptr %7, i64 0, i32 2
  %70 = load i32, ptr %69, align 8, !tbaa !65
  %71 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %3, i32 noundef %70)
          to label %72 unwind label %146

72:                                               ; preds = %63
  %73 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %71, ptr noundef nonnull @.str.29, i64 noundef 1)
          to label %74 unwind label %146

74:                                               ; preds = %72
  %75 = load ptr, ptr %3, align 8, !tbaa !30
  %76 = getelementptr i8, ptr %75, i64 -24
  %77 = load i64, ptr %76, align 8
  %78 = getelementptr inbounds i8, ptr %3, i64 %77
  %79 = getelementptr inbounds %"class.std::ios_base", ptr %78, i64 0, i32 2
  store i64 2, ptr %79, align 8, !tbaa !62
  %80 = getelementptr inbounds %struct.tm, ptr %7, i64 0, i32 1
  %81 = load i32, ptr %80, align 4, !tbaa !66
  %82 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %3, i32 noundef %81)
          to label %83 unwind label %146

83:                                               ; preds = %74
  %84 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %82, ptr noundef nonnull @.str.29, i64 noundef 1)
          to label %85 unwind label %146

85:                                               ; preds = %83
  %86 = load ptr, ptr %3, align 8, !tbaa !30
  %87 = getelementptr i8, ptr %86, i64 -24
  %88 = load i64, ptr %87, align 8
  %89 = getelementptr inbounds i8, ptr %3, i64 %88
  %90 = getelementptr inbounds %"class.std::ios_base", ptr %89, i64 0, i32 2
  store i64 2, ptr %90, align 8, !tbaa !62
  %91 = load i32, ptr %7, align 8, !tbaa !67
  %92 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %3, i32 noundef %91)
          to label %93 unwind label %146

93:                                               ; preds = %85
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #25
  call void @llvm.experimental.noalias.scope.decl(metadata !68)
  call void @llvm.experimental.noalias.scope.decl(metadata !71)
  %94 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 2
  store ptr %94, ptr %4, align 8, !tbaa !18, !alias.scope !74
  %95 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 1
  store i64 0, ptr %95, align 8, !tbaa !19, !alias.scope !74
  store i8 0, ptr %94, align 8, !tbaa !20, !alias.scope !74
  %96 = getelementptr inbounds %"class.std::__cxx11::basic_ostringstream", ptr %3, i64 0, i32 1, i32 0, i32 5
  %97 = load ptr, ptr %96, align 8, !tbaa !51, !noalias !74
  %98 = icmp eq ptr %97, null
  br i1 %98, label %116, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.std::__cxx11::basic_ostringstream", ptr %3, i64 0, i32 1, i32 0, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !53, !noalias !74
  %102 = icmp eq ptr %101, null
  %103 = icmp ugt ptr %97, %101
  %104 = select i1 %102, i1 true, i1 %103
  %105 = select i1 %104, ptr %97, ptr %101
  %106 = getelementptr inbounds %"class.std::__cxx11::basic_ostringstream", ptr %3, i64 0, i32 1, i32 0, i32 4
  %107 = load ptr, ptr %106, align 8, !tbaa !54, !noalias !74
  %108 = ptrtoint ptr %105 to i64
  %109 = ptrtoint ptr %107 to i64
  %110 = sub i64 %108, %109
  %111 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef 0, i64 noundef 0, ptr noundef %107, i64 noundef %110)
          to label %118 unwind label %112

112:                                              ; preds = %116, %99
  %113 = landingpad { ptr, i32 }
          cleanup
  %114 = load ptr, ptr %4, align 8, !tbaa !43, !alias.scope !74
  %115 = icmp eq ptr %114, %94
  br i1 %115, label %159, label %156

116:                                              ; preds = %93
  %117 = getelementptr inbounds %"class.std::__cxx11::basic_ostringstream", ptr %3, i64 0, i32 1, i32 2
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %4, ptr noundef nonnull align 8 dereferenceable(32) %117)
          to label %118 unwind label %112

118:                                              ; preds = %116, %99
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #25
  %119 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 2
  store ptr %119, ptr %5, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %119, ptr noundef nonnull align 1 dereferenceable(13) @.str.31, i64 13, i1 false)
  %120 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 1
  store i64 13, ptr %120, align 8, !tbaa !19
  %121 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 2, i32 1, i64 5
  store i8 0, ptr %121, align 1, !tbaa !20
  %122 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef nonnull align 8 dereferenceable(32) %4)
          to label %123 unwind label %148

123:                                              ; preds = %118
  %124 = load ptr, ptr %5, align 8, !tbaa !43
  %125 = icmp eq ptr %124, %119
  br i1 %125, label %127, label %126

126:                                              ; preds = %123
  call void @_ZdlPv(ptr noundef %124) #28
  br label %127

127:                                              ; preds = %123, %126
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #25
  %128 = load ptr, ptr %4, align 8, !tbaa !43
  %129 = icmp eq ptr %128, %94
  br i1 %129, label %131, label %130

130:                                              ; preds = %127
  call void @_ZdlPv(ptr noundef %128) #28
  br label %131

131:                                              ; preds = %127, %130
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #25
  %132 = load ptr, ptr @_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE, align 8
  store ptr %132, ptr %3, align 8, !tbaa !30
  %133 = load ptr, ptr getelementptr inbounds ([4 x ptr], ptr @_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 3), align 8
  %134 = getelementptr i8, ptr %132, i64 -24
  %135 = load i64, ptr %134, align 8
  %136 = getelementptr inbounds i8, ptr %3, i64 %135
  store ptr %133, ptr %136, align 8, !tbaa !30
  %137 = getelementptr inbounds %"class.std::__cxx11::basic_ostringstream", ptr %3, i64 0, i32 1
  store ptr getelementptr inbounds ({ [16 x ptr] }, ptr @_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 0, i64 2), ptr %137, align 8, !tbaa !30
  %138 = getelementptr inbounds %"class.std::__cxx11::basic_ostringstream", ptr %3, i64 0, i32 1, i32 2
  %139 = load ptr, ptr %138, align 8, !tbaa !43
  %140 = getelementptr inbounds %"class.std::__cxx11::basic_ostringstream", ptr %3, i64 0, i32 1, i32 2, i32 2
  %141 = icmp eq ptr %139, %140
  br i1 %141, label %143, label %142

142:                                              ; preds = %131
  call void @_ZdlPv(ptr noundef %139) #28
  br label %143

143:                                              ; preds = %131, %142
  store ptr getelementptr inbounds ({ [16 x ptr] }, ptr @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2), ptr %137, align 8, !tbaa !30
  %144 = getelementptr inbounds %"class.std::__cxx11::basic_ostringstream", ptr %3, i64 0, i32 1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %144) #25
  %145 = getelementptr inbounds i8, ptr %3, i64 112
  call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %145) #25
  call void @llvm.lifetime.end.p0(i64 376, ptr nonnull %3) #25
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #25
  ret void

146:                                              ; preds = %83, %72, %61, %50, %38, %26, %25, %19, %85, %74, %63, %52, %40, %32
  %147 = landingpad { ptr, i32 }
          cleanup
  br label %161

148:                                              ; preds = %118
  %149 = landingpad { ptr, i32 }
          cleanup
  %150 = load ptr, ptr %5, align 8, !tbaa !43
  %151 = icmp eq ptr %150, %119
  br i1 %151, label %153, label %152

152:                                              ; preds = %148
  call void @_ZdlPv(ptr noundef %150) #28
  br label %153

153:                                              ; preds = %152, %148
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #25
  %154 = load ptr, ptr %4, align 8, !tbaa !43
  %155 = icmp eq ptr %154, %94
  br i1 %155, label %159, label %156

156:                                              ; preds = %153, %112
  %157 = phi ptr [ %114, %112 ], [ %154, %153 ]
  %158 = phi { ptr, i32 } [ %113, %112 ], [ %149, %153 ]
  call void @_ZdlPv(ptr noundef %157) #28
  br label %159

159:                                              ; preds = %156, %153, %112
  %160 = phi { ptr, i32 } [ %113, %112 ], [ %149, %153 ], [ %158, %156 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #25
  br label %161

161:                                              ; preds = %159, %146
  %162 = phi { ptr, i32 } [ %160, %159 ], [ %147, %146 ]
  call void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev(ptr noundef nonnull align 8 dereferenceable(112) %3) #25
  call void @llvm.lifetime.end.p0(i64 376, ptr nonnull %3) #25
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #25
  resume { ptr, i32 } %162
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef i32 @_ZN6miniFE6driverIdiiEEiRK3BoxRS1_RNS_10ParametersER8YAML_Doc(ptr noundef nonnull align 4 dereferenceable(24) %0, ptr noundef nonnull align 4 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(92) %2, ptr noundef nonnull align 8 dereferenceable(216) %3) local_unnamed_addr #7 comdat personality ptr @__gxx_personality_v0 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca %struct.Box, align 4
  %17 = alloca float, align 4
  %18 = alloca float, align 4
  %19 = alloca %"class.miniFE::simple_mesh_description", align 8
  %20 = alloca %"struct.miniFE::CSRMatrix", align 8
  %21 = alloca %"struct.miniFE::Vector", align 8
  %22 = alloca %"struct.miniFE::Vector", align 8
  %23 = alloca %"class.std::__cxx11::basic_string", align 8
  %24 = alloca %"class.std::__cxx11::basic_string", align 8
  %25 = alloca %"class.std::__cxx11::basic_string", align 8
  %26 = alloca %"class.std::__cxx11::basic_string", align 8
  %27 = alloca %"class.std::__cxx11::basic_string", align 8
  %28 = alloca %"class.std::__cxx11::basic_string", align 8
  %29 = alloca %"class.std::__cxx11::basic_string", align 8
  %30 = alloca %"class.std::__cxx11::basic_string", align 8
  %31 = alloca i32, align 4
  %32 = alloca double, align 8
  %33 = alloca double, align 8
  %34 = alloca [5 x double], align 16
  %35 = alloca %"class.std::__cxx11::basic_string", align 8
  %36 = alloca %"class.std::__cxx11::basic_string", align 8
  %37 = alloca %"class.std::__cxx11::basic_string", align 8
  %38 = alloca %"class.std::__cxx11::basic_string", align 8
  %39 = alloca %"class.std::__cxx11::basic_string", align 8
  %40 = alloca %"class.std::__cxx11::basic_string", align 8
  %41 = alloca %"class.std::__cxx11::basic_string", align 8
  %42 = alloca %"class.std::__cxx11::basic_string", align 8
  %43 = alloca %"class.std::__cxx11::basic_string", align 8
  %44 = alloca %"class.std::__cxx11::basic_string", align 8
  %45 = alloca %"class.std::__cxx11::basic_string", align 8
  %46 = alloca %"class.std::__cxx11::basic_string", align 8
  %47 = alloca %"class.std::__cxx11::basic_string", align 8
  %48 = alloca %"class.std::__cxx11::basic_string", align 8
  %49 = alloca %"class.std::__cxx11::basic_string", align 8
  %50 = alloca %"class.std::__cxx11::basic_string", align 8
  %51 = alloca %"class.std::__cxx11::basic_string", align 8
  %52 = alloca %"class.std::__cxx11::basic_string", align 8
  %53 = alloca %"class.std::__cxx11::basic_string", align 8
  %54 = alloca %"class.std::__cxx11::basic_string", align 8
  %55 = alloca %"class.std::__cxx11::basic_string", align 8
  %56 = alloca %"class.std::__cxx11::basic_string", align 8
  %57 = alloca %"class.std::__cxx11::basic_string", align 8
  %58 = alloca %"class.std::__cxx11::basic_string", align 8
  %59 = alloca %"class.std::__cxx11::basic_string", align 8
  %60 = alloca %"class.std::__cxx11::basic_string", align 8
  %61 = alloca %"class.std::__cxx11::basic_string", align 8
  %62 = alloca %"class.std::__cxx11::basic_string", align 8
  %63 = alloca %"class.std::__cxx11::basic_string", align 8
  %64 = alloca %"class.std::__cxx11::basic_string", align 8
  %65 = alloca %"class.std::__cxx11::basic_string", align 8
  %66 = alloca %"class.std::__cxx11::basic_string", align 8
  %67 = alloca %"class.std::__cxx11::basic_string", align 8
  %68 = alloca %"class.std::__cxx11::basic_string", align 8
  %69 = alloca %"class.std::__cxx11::basic_string", align 8
  %70 = alloca %"class.std::__cxx11::basic_string", align 8
  %71 = alloca %"class.std::__cxx11::basic_string", align 8
  %72 = alloca %"class.std::__cxx11::basic_string", align 8
  %73 = alloca %"class.std::__cxx11::basic_string", align 8
  %74 = alloca %"class.std::__cxx11::basic_string", align 8
  %75 = getelementptr inbounds i32, ptr %0, i64 1
  %76 = load i32, ptr %75, align 4, !tbaa !5
  %77 = getelementptr inbounds [6 x i32], ptr %0, i64 0, i64 3
  %78 = load i32, ptr %77, align 4, !tbaa !5
  %79 = getelementptr inbounds [6 x i32], ptr %0, i64 0, i64 5
  %80 = load i32, ptr %79, align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #25
  store float 0.000000e+00, ptr %17, align 4, !tbaa !75
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #25
  store float 0.000000e+00, ptr %18, align 4, !tbaa !75
  call void @_ZN6miniFE17compute_imbalanceIiEEvRK3BoxS3_RfS4_R8YAML_Docb(ptr noundef nonnull align 4 dereferenceable(24) %0, ptr noundef nonnull align 4 dereferenceable(24) %1, ptr noundef nonnull align 4 dereferenceable(4) %17, ptr noundef nonnull align 4 dereferenceable(4) %18, ptr noundef nonnull align 8 dereferenceable(216) %3, i1 noundef zeroext true)
  %81 = call noundef double @_ZN6miniFE7mytimerEv()
  %82 = call noundef double @_ZN6miniFE7mytimerEv()
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %19) #25
  call void @_ZN6miniFE23simple_mesh_descriptionIiEC2ERK3BoxS4_(ptr noundef nonnull align 8 dereferenceable(192) %19, ptr noundef nonnull align 4 dereferenceable(24) %0, ptr noundef nonnull align 4 dereferenceable(24) %1)
  %83 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %84 unwind label %289

84:                                               ; preds = %4
  %85 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %86 unwind label %291

86:                                               ; preds = %84
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %20) #25
  store i8 0, ptr %20, align 8, !tbaa !76
  %87 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %20, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(124) %87, i8 0, i64 124, i1 false)
  %88 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %89 unwind label %293

89:                                               ; preds = %86
  %90 = invoke noundef i32 @_ZN6miniFE25generate_matrix_structureINS_9CSRMatrixIdiiEEEEiRKNS_23simple_mesh_descriptionINT_17GlobalOrdinalTypeEEERS4_(ptr noundef nonnull align 8 dereferenceable(192) %19, ptr noundef nonnull align 8 dereferenceable(132) %20)
          to label %91 unwind label %293

91:                                               ; preds = %89
  %92 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %93 unwind label %293

93:                                               ; preds = %91
  %94 = fsub double %92, %88
  %95 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %96 = load ptr, ptr %95, align 8, !tbaa !86
  %97 = load ptr, ptr %87, align 8, !tbaa !87
  %98 = ptrtoint ptr %96 to i64
  %99 = ptrtoint ptr %97 to i64
  %100 = sub i64 %98, %99
  %101 = lshr exact i64 %100, 2
  %102 = trunc i64 %101 to i32
  %103 = icmp sgt i32 %102, 0
  br i1 %103, label %109, label %104

104:                                              ; preds = %93
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %21) #25
  store i32 -1, ptr %21, align 8, !tbaa !88
  %105 = getelementptr inbounds %"struct.miniFE::Vector", ptr %21, i64 0, i32 1
  store i32 %102, ptr %105, align 4, !tbaa !90
  %106 = icmp slt i32 %102, 0
  br i1 %106, label %107, label %136

107:                                              ; preds = %104
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.34) #26
          to label %108 unwind label %295

108:                                              ; preds = %107
  unreachable

109:                                              ; preds = %93
  %110 = load i32, ptr %97, align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %21) #25
  store i32 %110, ptr %21, align 8, !tbaa !88
  %111 = getelementptr inbounds %"struct.miniFE::Vector", ptr %21, i64 0, i32 1
  store i32 %102, ptr %111, align 4, !tbaa !90
  %112 = getelementptr inbounds %"struct.miniFE::Vector", ptr %21, i64 0, i32 2
  %113 = shl i64 %100, 30
  %114 = ashr i64 %113, 32
  %115 = shl nuw nsw i64 %114, 3
  %116 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %115) #27
          to label %117 unwind label %295

117:                                              ; preds = %109
  store ptr %116, ptr %112, align 8, !tbaa !91
  %118 = getelementptr inbounds double, ptr %116, i64 %114
  %119 = getelementptr inbounds %"struct.miniFE::Vector", ptr %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %118, ptr %119, align 8, !tbaa !92
  store double 0.000000e+00, ptr %116, align 8, !tbaa !93
  %120 = getelementptr double, ptr %116, i64 1
  %121 = icmp eq i32 %102, 1
  br i1 %121, label %124, label %122

122:                                              ; preds = %117
  %123 = add nsw i64 %115, -8
  call void @llvm.memset.p0.i64(ptr align 8 %120, i8 0, i64 %123, i1 false), !tbaa !93
  br label %124

124:                                              ; preds = %117, %122
  %125 = phi ptr [ %118, %122 ], [ %120, %117 ]
  %126 = getelementptr inbounds %"struct.miniFE::Vector", ptr %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %125, ptr %126, align 8, !tbaa !95
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %116, i8 0, i64 %115, i1 false), !tbaa !93
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %22) #25
  store i32 %110, ptr %22, align 8, !tbaa !88
  %127 = getelementptr inbounds %"struct.miniFE::Vector", ptr %22, i64 0, i32 1
  store i32 %102, ptr %127, align 4, !tbaa !90
  %128 = getelementptr inbounds %"struct.miniFE::Vector", ptr %22, i64 0, i32 2
  %129 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %115) #27
          to label %130 unwind label %297

130:                                              ; preds = %124
  store ptr %129, ptr %128, align 8, !tbaa !91
  %131 = getelementptr inbounds double, ptr %129, i64 %114
  %132 = getelementptr inbounds %"struct.miniFE::Vector", ptr %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %131, ptr %132, align 8, !tbaa !92
  store double 0.000000e+00, ptr %129, align 8, !tbaa !93
  %133 = getelementptr double, ptr %129, i64 1
  br i1 %121, label %140, label %134

134:                                              ; preds = %130
  %135 = add nsw i64 %115, -8
  call void @llvm.memset.p0.i64(ptr align 8 %133, i8 0, i64 %135, i1 false), !tbaa !93
  br label %140

136:                                              ; preds = %104
  %137 = getelementptr inbounds %"struct.miniFE::Vector", ptr %21, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %137, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %22) #25
  store i32 -1, ptr %22, align 8, !tbaa !88
  %138 = getelementptr inbounds %"struct.miniFE::Vector", ptr %22, i64 0, i32 1
  store i32 %102, ptr %138, align 4, !tbaa !90
  %139 = getelementptr inbounds %"struct.miniFE::Vector", ptr %22, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %139, i8 0, i64 24, i1 false)
  br label %143

140:                                              ; preds = %134, %130
  %141 = phi ptr [ %131, %134 ], [ %133, %130 ]
  %142 = getelementptr inbounds %"struct.miniFE::Vector", ptr %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %141, ptr %142, align 8, !tbaa !95
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %129, i8 0, i64 %115, i1 false), !tbaa !93
  br label %143

143:                                              ; preds = %140, %136
  %144 = phi ptr [ %128, %140 ], [ %139, %136 ]
  %145 = phi ptr [ %112, %140 ], [ %137, %136 ]
  %146 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %147 unwind label %299

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %19, i64 0, i32 3, i32 0, i64 1
  %149 = load i32, ptr %148, align 4, !tbaa !5
  %150 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %19, i64 0, i32 3, i32 0, i64 3
  %151 = load i32, ptr %150, align 4, !tbaa !5
  %152 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %19, i64 0, i32 3, i32 0, i64 5
  %153 = load i32, ptr %152, align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %16) #25
  %154 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %19, i64 0, i32 4
  %155 = load i32, ptr %154, align 8, !tbaa !5
  store i32 %155, ptr %16, align 4, !tbaa !5
  %156 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %19, i64 0, i32 4, i32 0, i64 1
  %157 = load i32, ptr %156, align 4, !tbaa !5
  %158 = getelementptr inbounds i32, ptr %16, i64 1
  store i32 %157, ptr %158, align 4, !tbaa !5
  %159 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %19, i64 0, i32 4, i32 0, i64 2
  %160 = load i32, ptr %159, align 8, !tbaa !5
  %161 = getelementptr inbounds [6 x i32], ptr %16, i64 0, i64 2
  store i32 %160, ptr %161, align 4, !tbaa !5
  %162 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %19, i64 0, i32 4, i32 0, i64 3
  %163 = load i32, ptr %162, align 4, !tbaa !5
  %164 = getelementptr inbounds [6 x i32], ptr %16, i64 0, i64 3
  store i32 %163, ptr %164, align 4, !tbaa !5
  %165 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %19, i64 0, i32 4, i32 0, i64 4
  %166 = load i32, ptr %165, align 8, !tbaa !5
  %167 = getelementptr inbounds [6 x i32], ptr %16, i64 0, i64 4
  store i32 %166, ptr %167, align 4, !tbaa !5
  %168 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %19, i64 0, i32 4, i32 0, i64 5
  %169 = load i32, ptr %168, align 4, !tbaa !5
  %170 = getelementptr inbounds [6 x i32], ptr %16, i64 0, i64 5
  store i32 %169, ptr %170, align 4, !tbaa !5
  %171 = sub nsw i32 %157, %155
  %172 = sub nsw i32 %163, %160
  %173 = sub nsw i32 %169, %166
  %174 = mul nsw i32 %172, %171
  %175 = mul nsw i32 %174, %173
  %176 = icmp slt i32 %175, 1
  br i1 %176, label %202, label %177

177:                                              ; preds = %147
  %178 = icmp sgt i32 %155, 0
  br i1 %178, label %179, label %181

179:                                              ; preds = %177
  %180 = add nsw i32 %155, -1
  store i32 %180, ptr %16, align 4, !tbaa !5
  br label %181

181:                                              ; preds = %179, %177
  %182 = icmp sgt i32 %160, 0
  br i1 %182, label %183, label %185

183:                                              ; preds = %181
  %184 = add nsw i32 %160, -1
  store i32 %184, ptr %161, align 4, !tbaa !5
  br label %185

185:                                              ; preds = %183, %181
  %186 = icmp sgt i32 %166, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %185
  %188 = add nsw i32 %166, -1
  store i32 %188, ptr %167, align 4, !tbaa !5
  br label %189

189:                                              ; preds = %187, %185
  %190 = icmp slt i32 %157, %149
  br i1 %190, label %191, label %193

191:                                              ; preds = %189
  %192 = add nsw i32 %157, 1
  store i32 %192, ptr %158, align 4, !tbaa !5
  br label %193

193:                                              ; preds = %191, %189
  %194 = icmp slt i32 %163, %151
  br i1 %194, label %195, label %197

195:                                              ; preds = %193
  %196 = add nsw i32 %163, 1
  store i32 %196, ptr %164, align 4, !tbaa !5
  br label %197

197:                                              ; preds = %195, %193
  %198 = icmp slt i32 %169, %153
  br i1 %198, label %199, label %201

199:                                              ; preds = %197
  %200 = add nsw i32 %169, 1
  store i32 %200, ptr %170, align 4, !tbaa !5
  br label %201

201:                                              ; preds = %199, %197
  invoke void @_ZN6miniFE20perform_element_loopIiNS_9CSRMatrixIdiiEENS_6VectorIdiiEEEEvRKNS_23simple_mesh_descriptionIT_EERK3BoxRT0_RT1_RNS_10ParametersE(ptr noundef nonnull align 8 dereferenceable(192) %19, ptr noundef nonnull align 4 dereferenceable(24) %16, ptr noundef nonnull align 8 dereferenceable(132) %20, ptr noundef nonnull align 8 dereferenceable(32) %21, ptr noundef nonnull align 8 dereferenceable(92) %2)
          to label %202 unwind label %299

202:                                              ; preds = %201, %147
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %16) #25
  %203 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %204 unwind label %299

204:                                              ; preds = %202
  %205 = fsub double %203, %146
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %23) #25
  %206 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %23, i64 0, i32 2
  store ptr %206, ptr %23, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %15) #25
  store i64 27, ptr %15, align 8, !tbaa !55
  %207 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %23, ptr noundef nonnull align 8 dereferenceable(8) %15, i64 noundef 0)
          to label %208 unwind label %301

208:                                              ; preds = %204
  store ptr %207, ptr %23, align 8, !tbaa !43
  %209 = load i64, ptr %15, align 8, !tbaa !55
  store i64 %209, ptr %206, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(27) %207, ptr noundef nonnull align 1 dereferenceable(27) @.str.36, i64 27, i1 false)
  %210 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %23, i64 0, i32 1
  store i64 %209, ptr %210, align 8, !tbaa !19
  %211 = load ptr, ptr %23, align 8, !tbaa !43
  %212 = getelementptr inbounds i8, ptr %211, i64 %209
  store i8 0, ptr %212, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %15) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %24) #25
  %213 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %24, i64 0, i32 2
  store ptr %213, ptr %24, align 8, !tbaa !18
  %214 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %24, i64 0, i32 1
  store i64 0, ptr %214, align 8, !tbaa !19
  store i8 0, ptr %213, align 8, !tbaa !20
  %215 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %23, ptr noundef nonnull align 8 dereferenceable(32) %24)
          to label %216 unwind label %303

216:                                              ; preds = %208
  %217 = load ptr, ptr %24, align 8, !tbaa !43
  %218 = icmp eq ptr %217, %213
  br i1 %218, label %220, label %219

219:                                              ; preds = %216
  call void @_ZdlPv(ptr noundef %217) #28
  br label %220

220:                                              ; preds = %216, %219
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %24) #25
  %221 = load ptr, ptr %23, align 8, !tbaa !43
  %222 = icmp eq ptr %221, %206
  br i1 %222, label %224, label %223

223:                                              ; preds = %220
  call void @_ZdlPv(ptr noundef %221) #28
  br label %224

224:                                              ; preds = %220, %223
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %23) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %25) #25
  %225 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %25, i64 0, i32 2
  store ptr %225, ptr %25, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14) #25
  store i64 27, ptr %14, align 8, !tbaa !55
  %226 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %25, ptr noundef nonnull align 8 dereferenceable(8) %14, i64 noundef 0)
          to label %227 unwind label %314

227:                                              ; preds = %224
  store ptr %226, ptr %25, align 8, !tbaa !43
  %228 = load i64, ptr %14, align 8, !tbaa !55
  store i64 %228, ptr %225, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(27) %226, ptr noundef nonnull align 1 dereferenceable(27) @.str.36, i64 27, i1 false)
  %229 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %25, i64 0, i32 1
  store i64 %228, ptr %229, align 8, !tbaa !19
  %230 = load ptr, ptr %25, align 8, !tbaa !43
  %231 = getelementptr inbounds i8, ptr %230, i64 %228
  store i8 0, ptr %231, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14) #25
  %232 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %25)
          to label %233 unwind label %316

233:                                              ; preds = %227
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %26) #25
  %234 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %26, i64 0, i32 2
  store ptr %234, ptr %26, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #25
  store i64 18, ptr %13, align 8, !tbaa !55
  %235 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %26, ptr noundef nonnull align 8 dereferenceable(8) %13, i64 noundef 0)
          to label %236 unwind label %318

236:                                              ; preds = %233
  store ptr %235, ptr %26, align 8, !tbaa !43
  %237 = load i64, ptr %13, align 8, !tbaa !55
  store i64 %237, ptr %234, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(18) %235, ptr noundef nonnull align 1 dereferenceable(18) @.str.37, i64 18, i1 false)
  %238 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %26, i64 0, i32 1
  store i64 %237, ptr %238, align 8, !tbaa !19
  %239 = load ptr, ptr %26, align 8, !tbaa !43
  %240 = getelementptr inbounds i8, ptr %239, i64 %237
  store i8 0, ptr %240, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #25
  %241 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %232, ptr noundef nonnull align 8 dereferenceable(32) %26, double noundef %94)
          to label %242 unwind label %320

242:                                              ; preds = %236
  %243 = load ptr, ptr %26, align 8, !tbaa !43
  %244 = icmp eq ptr %243, %234
  br i1 %244, label %246, label %245

245:                                              ; preds = %242
  call void @_ZdlPv(ptr noundef %243) #28
  br label %246

246:                                              ; preds = %242, %245
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %26) #25
  %247 = load ptr, ptr %25, align 8, !tbaa !43
  %248 = icmp eq ptr %247, %225
  br i1 %248, label %250, label %249

249:                                              ; preds = %246
  call void @_ZdlPv(ptr noundef %247) #28
  br label %250

250:                                              ; preds = %246, %249
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %25) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %27) #25
  %251 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %27, i64 0, i32 2
  store ptr %251, ptr %27, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %251, ptr noundef nonnull align 1 dereferenceable(11) @.str.38, i64 11, i1 false)
  %252 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %27, i64 0, i32 1
  store i64 11, ptr %252, align 8, !tbaa !19
  %253 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %27, i64 0, i32 2, i32 1, i64 3
  store i8 0, ptr %253, align 1, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %28) #25
  %254 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %28, i64 0, i32 2
  store ptr %254, ptr %28, align 8, !tbaa !18
  %255 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %28, i64 0, i32 1
  store i64 0, ptr %255, align 8, !tbaa !19
  store i8 0, ptr %254, align 8, !tbaa !20
  %256 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %27, ptr noundef nonnull align 8 dereferenceable(32) %28)
          to label %257 unwind label %334

257:                                              ; preds = %250
  %258 = load ptr, ptr %28, align 8, !tbaa !43
  %259 = icmp eq ptr %258, %254
  br i1 %259, label %261, label %260

260:                                              ; preds = %257
  call void @_ZdlPv(ptr noundef %258) #28
  br label %261

261:                                              ; preds = %257, %260
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %28) #25
  %262 = load ptr, ptr %27, align 8, !tbaa !43
  %263 = icmp eq ptr %262, %251
  br i1 %263, label %265, label %264

264:                                              ; preds = %261
  call void @_ZdlPv(ptr noundef %262) #28
  br label %265

265:                                              ; preds = %261, %264
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %27) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %29) #25
  %266 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 2
  store ptr %266, ptr %29, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %266, ptr noundef nonnull align 1 dereferenceable(11) @.str.38, i64 11, i1 false)
  %267 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 1
  store i64 11, ptr %267, align 8, !tbaa !19
  %268 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 2, i32 1, i64 3
  store i8 0, ptr %268, align 1, !tbaa !20
  %269 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %29)
          to label %270 unwind label %344

270:                                              ; preds = %265
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %30) #25
  %271 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %30, i64 0, i32 2
  store ptr %271, ptr %30, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #25
  store i64 16, ptr %12, align 8, !tbaa !55
  %272 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %30, ptr noundef nonnull align 8 dereferenceable(8) %12, i64 noundef 0)
          to label %273 unwind label %346

273:                                              ; preds = %270
  store ptr %272, ptr %30, align 8, !tbaa !43
  %274 = load i64, ptr %12, align 8, !tbaa !55
  store i64 %274, ptr %271, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %272, ptr noundef nonnull align 1 dereferenceable(16) @.str.39, i64 16, i1 false)
  %275 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %30, i64 0, i32 1
  store i64 %274, ptr %275, align 8, !tbaa !19
  %276 = load ptr, ptr %30, align 8, !tbaa !43
  %277 = getelementptr inbounds i8, ptr %276, i64 %274
  store i8 0, ptr %277, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #25
  %278 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %269, ptr noundef nonnull align 8 dereferenceable(32) %30, double noundef %205)
          to label %279 unwind label %348

279:                                              ; preds = %273
  %280 = load ptr, ptr %30, align 8, !tbaa !43
  %281 = icmp eq ptr %280, %271
  br i1 %281, label %283, label %282

282:                                              ; preds = %279
  call void @_ZdlPv(ptr noundef %280) #28
  br label %283

283:                                              ; preds = %279, %282
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %30) #25
  %284 = load ptr, ptr %29, align 8, !tbaa !43
  %285 = icmp eq ptr %284, %266
  br i1 %285, label %287, label %286

286:                                              ; preds = %283
  call void @_ZdlPv(ptr noundef %284) #28
  br label %287

287:                                              ; preds = %283, %286
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %29) #25
  %288 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %361 unwind label %420

289:                                              ; preds = %4
  %290 = landingpad { ptr, i32 }
          cleanup
  br label %1317

291:                                              ; preds = %84
  %292 = landingpad { ptr, i32 }
          cleanup
  br label %1317

293:                                              ; preds = %91, %89, %86
  %294 = landingpad { ptr, i32 }
          cleanup
  br label %1315

295:                                              ; preds = %109, %107
  %296 = landingpad { ptr, i32 }
          cleanup
  br label %1313

297:                                              ; preds = %124
  %298 = landingpad { ptr, i32 }
          cleanup
  br label %1307

299:                                              ; preds = %201, %202, %143
  %300 = landingpad { ptr, i32 }
          cleanup
  br label %1302

301:                                              ; preds = %204
  %302 = landingpad { ptr, i32 }
          cleanup
  br label %312

303:                                              ; preds = %208
  %304 = landingpad { ptr, i32 }
          cleanup
  %305 = load ptr, ptr %24, align 8, !tbaa !43
  %306 = icmp eq ptr %305, %213
  br i1 %306, label %308, label %307

307:                                              ; preds = %303
  call void @_ZdlPv(ptr noundef %305) #28
  br label %308

308:                                              ; preds = %307, %303
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %24) #25
  %309 = load ptr, ptr %23, align 8, !tbaa !43
  %310 = icmp eq ptr %309, %206
  br i1 %310, label %312, label %311

311:                                              ; preds = %308
  call void @_ZdlPv(ptr noundef %309) #28
  br label %312

312:                                              ; preds = %311, %308, %301
  %313 = phi { ptr, i32 } [ %302, %301 ], [ %304, %308 ], [ %304, %311 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %23) #25
  br label %1302

314:                                              ; preds = %224
  %315 = landingpad { ptr, i32 }
          cleanup
  br label %332

316:                                              ; preds = %227
  %317 = landingpad { ptr, i32 }
          cleanup
  br label %327

318:                                              ; preds = %233
  %319 = landingpad { ptr, i32 }
          cleanup
  br label %325

320:                                              ; preds = %236
  %321 = landingpad { ptr, i32 }
          cleanup
  %322 = load ptr, ptr %26, align 8, !tbaa !43
  %323 = icmp eq ptr %322, %234
  br i1 %323, label %325, label %324

324:                                              ; preds = %320
  call void @_ZdlPv(ptr noundef %322) #28
  br label %325

325:                                              ; preds = %324, %320, %318
  %326 = phi { ptr, i32 } [ %319, %318 ], [ %321, %320 ], [ %321, %324 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %26) #25
  br label %327

327:                                              ; preds = %325, %316
  %328 = phi { ptr, i32 } [ %326, %325 ], [ %317, %316 ]
  %329 = load ptr, ptr %25, align 8, !tbaa !43
  %330 = icmp eq ptr %329, %225
  br i1 %330, label %332, label %331

331:                                              ; preds = %327
  call void @_ZdlPv(ptr noundef %329) #28
  br label %332

332:                                              ; preds = %331, %327, %314
  %333 = phi { ptr, i32 } [ %315, %314 ], [ %328, %327 ], [ %328, %331 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %25) #25
  br label %1302

334:                                              ; preds = %250
  %335 = landingpad { ptr, i32 }
          cleanup
  %336 = load ptr, ptr %28, align 8, !tbaa !43
  %337 = icmp eq ptr %336, %254
  br i1 %337, label %339, label %338

338:                                              ; preds = %334
  call void @_ZdlPv(ptr noundef %336) #28
  br label %339

339:                                              ; preds = %338, %334
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %28) #25
  %340 = load ptr, ptr %27, align 8, !tbaa !43
  %341 = icmp eq ptr %340, %251
  br i1 %341, label %343, label %342

342:                                              ; preds = %339
  call void @_ZdlPv(ptr noundef %340) #28
  br label %343

343:                                              ; preds = %342, %339
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %27) #25
  br label %1302

344:                                              ; preds = %265
  %345 = landingpad { ptr, i32 }
          cleanup
  br label %355

346:                                              ; preds = %270
  %347 = landingpad { ptr, i32 }
          cleanup
  br label %353

348:                                              ; preds = %273
  %349 = landingpad { ptr, i32 }
          cleanup
  %350 = load ptr, ptr %30, align 8, !tbaa !43
  %351 = icmp eq ptr %350, %271
  br i1 %351, label %353, label %352

352:                                              ; preds = %348
  call void @_ZdlPv(ptr noundef %350) #28
  br label %353

353:                                              ; preds = %352, %348, %346
  %354 = phi { ptr, i32 } [ %347, %346 ], [ %349, %348 ], [ %349, %352 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %30) #25
  br label %355

355:                                              ; preds = %353, %344
  %356 = phi { ptr, i32 } [ %354, %353 ], [ %345, %344 ]
  %357 = load ptr, ptr %29, align 8, !tbaa !43
  %358 = icmp eq ptr %357, %266
  br i1 %358, label %360, label %359

359:                                              ; preds = %355
  call void @_ZdlPv(ptr noundef %357) #28
  br label %360

360:                                              ; preds = %359, %355
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %29) #25
  br label %1302

361:                                              ; preds = %287
  %362 = add nsw i32 %76, 1
  %363 = add nsw i32 %78, 1
  %364 = add nsw i32 %80, 1
  invoke void @_ZN6miniFE16impose_dirichletINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEEvNT_10ScalarTypeERS5_RT0_iiiRKSt3setINS5_17GlobalOrdinalTypeESt4lessISB_ESaISB_EE(double noundef 0.000000e+00, ptr noundef nonnull align 8 dereferenceable(132) %20, ptr noundef nonnull align 8 dereferenceable(32) %21, i32 noundef %362, i32 noundef %363, i32 noundef %364, ptr noundef nonnull align 8 dereferenceable(48) %19)
          to label %365 unwind label %420

365:                                              ; preds = %361
  %366 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %367 unwind label %420

367:                                              ; preds = %365
  %368 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %369 unwind label %422

369:                                              ; preds = %367
  %370 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %19, i64 0, i32 1
  invoke void @_ZN6miniFE16impose_dirichletINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEEvNT_10ScalarTypeERS5_RT0_iiiRKSt3setINS5_17GlobalOrdinalTypeESt4lessISB_ESaISB_EE(double noundef 1.000000e+00, ptr noundef nonnull align 8 dereferenceable(132) %20, ptr noundef nonnull align 8 dereferenceable(32) %21, i32 noundef %362, i32 noundef %363, i32 noundef %364, ptr noundef nonnull align 8 dereferenceable(48) %370)
          to label %371 unwind label %422

371:                                              ; preds = %369
  %372 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %373 unwind label %422

373:                                              ; preds = %371
  %374 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %375 unwind label %424

375:                                              ; preds = %373
  %376 = load ptr, ptr %95, align 8, !tbaa !86
  %377 = load ptr, ptr %87, align 8, !tbaa !87
  %378 = ptrtoint ptr %376 to i64
  %379 = ptrtoint ptr %377 to i64
  %380 = sub i64 %378, %379
  %381 = lshr exact i64 %380, 2
  %382 = trunc i64 %381 to i32
  %383 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %20, i64 0, i32 7
  store i32 %382, ptr %383, align 8, !tbaa !96
  store i8 1, ptr %20, align 8, !tbaa !76
  %384 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %385 unwind label %424

385:                                              ; preds = %375
  %386 = invoke noundef i64 @_ZN6miniFE20compute_matrix_statsINS_9CSRMatrixIdiiEEEEmRKT_iiR8YAML_Doc(ptr noundef nonnull align 8 dereferenceable(132) %20, i32 noundef 0, i32 noundef 1, ptr noundef nonnull align 8 dereferenceable(216) %3)
          to label %387 unwind label %426

387:                                              ; preds = %385
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %31) #25
  store i32 0, ptr %31, align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %32) #25
  store double 0.000000e+00, ptr %32, align 8, !tbaa !93
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %33) #25
  store double 0x3CB0000000000000, ptr %33, align 8, !tbaa !93
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %34) #25
  %388 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %389 unwind label %428

389:                                              ; preds = %387
  %390 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %2, i64 0, i32 4
  %391 = load i32, ptr %390, align 8, !tbaa !9
  %392 = icmp eq i32 %391, 1
  %393 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.40, i64 noundef 23)
          to label %394 unwind label %430

394:                                              ; preds = %389
  %395 = load ptr, ptr @_ZSt4cout, align 8, !tbaa !30
  %396 = getelementptr i8, ptr %395, i64 -24
  %397 = load i64, ptr %396, align 8
  %398 = getelementptr inbounds i8, ptr @_ZSt4cout, i64 %397
  %399 = getelementptr inbounds %"class.std::basic_ios", ptr %398, i64 0, i32 5
  %400 = load ptr, ptr %399, align 8, !tbaa !32
  %401 = icmp eq ptr %400, null
  br i1 %401, label %449, label %402

402:                                              ; preds = %394
  %403 = getelementptr inbounds %"class.std::ctype", ptr %400, i64 0, i32 8
  %404 = load i8, ptr %403, align 8, !tbaa !40
  %405 = icmp eq i8 %404, 0
  br i1 %405, label %409, label %406

406:                                              ; preds = %402
  %407 = getelementptr inbounds %"class.std::ctype", ptr %400, i64 0, i32 9, i64 10
  %408 = load i8, ptr %407, align 1, !tbaa !20
  br label %415

409:                                              ; preds = %402
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %400)
          to label %410 unwind label %430

410:                                              ; preds = %409
  %411 = load ptr, ptr %400, align 8, !tbaa !30
  %412 = getelementptr inbounds ptr, ptr %411, i64 6
  %413 = load ptr, ptr %412, align 8
  %414 = invoke noundef signext i8 %413(ptr noundef nonnull align 8 dereferenceable(570) %400, i8 noundef signext 10)
          to label %415 unwind label %430

415:                                              ; preds = %410, %406
  %416 = phi i8 [ %408, %406 ], [ %414, %410 ]
  %417 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 noundef signext %416)
          to label %418 unwind label %430

418:                                              ; preds = %415
  %419 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %417)
          to label %432 unwind label %430

420:                                              ; preds = %365, %361, %287
  %421 = landingpad { ptr, i32 }
          cleanup
  br label %1302

422:                                              ; preds = %371, %369, %367
  %423 = landingpad { ptr, i32 }
          cleanup
  br label %1302

424:                                              ; preds = %375, %373
  %425 = landingpad { ptr, i32 }
          cleanup
  br label %1302

426:                                              ; preds = %385
  %427 = landingpad { ptr, i32 }
          cleanup
  br label %1302

428:                                              ; preds = %387
  %429 = landingpad { ptr, i32 }
          cleanup
  br label %1300

430:                                              ; preds = %449, %467, %464, %459, %458, %418, %415, %410, %409, %438, %436, %389, %435, %434, %433
  %431 = landingpad { ptr, i32 }
          cleanup
  br label %1300

432:                                              ; preds = %418
  br i1 %392, label %433, label %435

433:                                              ; preds = %432
  invoke void @_ZN6miniFE31rearrange_matrix_local_externalINS_9CSRMatrixIdiiEEEEvRT_(ptr noundef nonnull align 8 dereferenceable(132) %20)
          to label %434 unwind label %430

434:                                              ; preds = %433
  invoke void @_ZN6miniFE8cg_solveINS_9CSRMatrixIdiiEENS_6VectorIdiiEENS_14matvec_overlapIS2_S4_EEEEvRT_RKT0_RS9_T1_NS7_16LocalOrdinalTypeERNS_10TypeTraitsINS7_10ScalarTypeEE14magnitude_typeERSE_SJ_Pd(ptr noundef nonnull align 8 dereferenceable(132) %20, ptr noundef nonnull align 8 dereferenceable(32) %21, ptr noundef nonnull align 8 dereferenceable(32) %22, i32 noundef 200, ptr noundef nonnull align 8 dereferenceable(8) %33, ptr noundef nonnull align 4 dereferenceable(4) %31, ptr noundef nonnull align 8 dereferenceable(8) %32, ptr noundef nonnull %34)
          to label %507 unwind label %430

435:                                              ; preds = %432
  invoke void @_ZN6miniFE8cg_solveINS_9CSRMatrixIdiiEENS_6VectorIdiiEENS_10matvec_stdIS2_S4_EEEEvRT_RKT0_RS9_T1_NS7_16LocalOrdinalTypeERNS_10TypeTraitsINS7_10ScalarTypeEE14magnitude_typeERSE_SJ_Pd(ptr noundef nonnull align 8 dereferenceable(132) %20, ptr noundef nonnull align 8 dereferenceable(32) %21, ptr noundef nonnull align 8 dereferenceable(32) %22, i32 noundef 200, ptr noundef nonnull align 8 dereferenceable(8) %33, ptr noundef nonnull align 4 dereferenceable(4) %31, ptr noundef nonnull align 8 dereferenceable(8) %32, ptr noundef nonnull %34)
          to label %436 unwind label %430

436:                                              ; preds = %435
  %437 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.41, i64 noundef 18)
          to label %438 unwind label %430

438:                                              ; preds = %436
  %439 = load double, ptr %32, align 8, !tbaa !93
  %440 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %439)
          to label %441 unwind label %430

441:                                              ; preds = %438
  %442 = load ptr, ptr %440, align 8, !tbaa !30
  %443 = getelementptr i8, ptr %442, i64 -24
  %444 = load i64, ptr %443, align 8
  %445 = getelementptr inbounds i8, ptr %440, i64 %444
  %446 = getelementptr inbounds %"class.std::basic_ios", ptr %445, i64 0, i32 5
  %447 = load ptr, ptr %446, align 8, !tbaa !32
  %448 = icmp eq ptr %447, null
  br i1 %448, label %449, label %451

449:                                              ; preds = %394, %441
  invoke void @_ZSt16__throw_bad_castv() #26
          to label %450 unwind label %430

450:                                              ; preds = %449
  unreachable

451:                                              ; preds = %441
  %452 = getelementptr inbounds %"class.std::ctype", ptr %447, i64 0, i32 8
  %453 = load i8, ptr %452, align 8, !tbaa !40
  %454 = icmp eq i8 %453, 0
  br i1 %454, label %458, label %455

455:                                              ; preds = %451
  %456 = getelementptr inbounds %"class.std::ctype", ptr %447, i64 0, i32 9, i64 10
  %457 = load i8, ptr %456, align 1, !tbaa !20
  br label %464

458:                                              ; preds = %451
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %447)
          to label %459 unwind label %430

459:                                              ; preds = %458
  %460 = load ptr, ptr %447, align 8, !tbaa !30
  %461 = getelementptr inbounds ptr, ptr %460, i64 6
  %462 = load ptr, ptr %461, align 8
  %463 = invoke noundef signext i8 %462(ptr noundef nonnull align 8 dereferenceable(570) %447, i8 noundef signext 10)
          to label %464 unwind label %430

464:                                              ; preds = %459, %455
  %465 = phi i8 [ %457, %455 ], [ %463, %459 ]
  %466 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %440, i8 noundef signext %465)
          to label %467 unwind label %430

467:                                              ; preds = %464
  %468 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %466)
          to label %469 unwind label %430

469:                                              ; preds = %467
  %470 = getelementptr inbounds %"struct.miniFE::Parameters", ptr %2, i64 0, i32 11
  %471 = load i32, ptr %470, align 8, !tbaa !97
  %472 = icmp sgt i32 %471, 0
  br i1 %472, label %475, label %507

473:                                              ; preds = %503, %500, %495, %494, %485, %475, %505
  %474 = landingpad { ptr, i32 }
          cleanup
  br label %1300

475:                                              ; preds = %469
  %476 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.43, i64 noundef 43)
          to label %477 unwind label %473

477:                                              ; preds = %475
  %478 = load ptr, ptr @_ZSt4cout, align 8, !tbaa !30
  %479 = getelementptr i8, ptr %478, i64 -24
  %480 = load i64, ptr %479, align 8
  %481 = getelementptr inbounds i8, ptr @_ZSt4cout, i64 %480
  %482 = getelementptr inbounds %"class.std::basic_ios", ptr %481, i64 0, i32 5
  %483 = load ptr, ptr %482, align 8, !tbaa !32
  %484 = icmp eq ptr %483, null
  br i1 %484, label %485, label %487

485:                                              ; preds = %477
  invoke void @_ZSt16__throw_bad_castv() #26
          to label %486 unwind label %473

486:                                              ; preds = %485
  unreachable

487:                                              ; preds = %477
  %488 = getelementptr inbounds %"class.std::ctype", ptr %483, i64 0, i32 8
  %489 = load i8, ptr %488, align 8, !tbaa !40
  %490 = icmp eq i8 %489, 0
  br i1 %490, label %494, label %491

491:                                              ; preds = %487
  %492 = getelementptr inbounds %"class.std::ctype", ptr %483, i64 0, i32 9, i64 10
  %493 = load i8, ptr %492, align 1, !tbaa !20
  br label %500

494:                                              ; preds = %487
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %483)
          to label %495 unwind label %473

495:                                              ; preds = %494
  %496 = load ptr, ptr %483, align 8, !tbaa !30
  %497 = getelementptr inbounds ptr, ptr %496, i64 6
  %498 = load ptr, ptr %497, align 8
  %499 = invoke noundef signext i8 %498(ptr noundef nonnull align 8 dereferenceable(570) %483, i8 noundef signext 10)
          to label %500 unwind label %473

500:                                              ; preds = %495, %491
  %501 = phi i8 [ %493, %491 ], [ %499, %495 ]
  %502 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 noundef signext %501)
          to label %503 unwind label %473

503:                                              ; preds = %500
  %504 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %502)
          to label %505 unwind label %473

505:                                              ; preds = %503
  %506 = invoke noundef i32 @_ZN6miniFE15verify_solutionINS_6VectorIdiiEEEEiRKNS_23simple_mesh_descriptionINT_17GlobalOrdinalTypeEEERKS4_db(ptr noundef nonnull align 8 dereferenceable(192) %19, ptr noundef nonnull align 8 dereferenceable(32) %22, double noundef 6.000000e-02, i1 noundef zeroext false)
          to label %507 unwind label %473

507:                                              ; preds = %505, %469, %434
  %508 = phi i32 [ 0, %434 ], [ 0, %469 ], [ %506, %505 ]
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %35) #25
  %509 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %35, i64 0, i32 2
  store ptr %509, ptr %35, align 8, !tbaa !18
  store i64 7311150271011243843, ptr %509, align 8
  %510 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %35, i64 0, i32 1
  store i64 8, ptr %510, align 8, !tbaa !19
  %511 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %35, i64 0, i32 2, i32 1
  store i8 0, ptr %511, align 8, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %36) #25
  %512 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %36, i64 0, i32 2
  store ptr %512, ptr %36, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #25
  store i64 21, ptr %11, align 8, !tbaa !55
  %513 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %36, ptr noundef nonnull align 8 dereferenceable(8) %11, i64 noundef 0)
          to label %514 unwind label %687

514:                                              ; preds = %507
  store ptr %513, ptr %36, align 8, !tbaa !43
  %515 = load i64, ptr %11, align 8, !tbaa !55
  store i64 %515, ptr %512, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %513, ptr noundef nonnull align 1 dereferenceable(21) @.str.8, i64 21, i1 false)
  %516 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %36, i64 0, i32 1
  store i64 %515, ptr %516, align 8, !tbaa !19
  %517 = load ptr, ptr %36, align 8, !tbaa !43
  %518 = getelementptr inbounds i8, ptr %517, i64 %515
  store i8 0, ptr %518, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #25
  %519 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %36)
          to label %520 unwind label %689

520:                                              ; preds = %514
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %37) #25
  %521 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %37, i64 0, i32 2
  store ptr %521, ptr %37, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %521, ptr noundef nonnull align 1 dereferenceable(10) @.str.45, i64 10, i1 false)
  %522 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %37, i64 0, i32 1
  store i64 10, ptr %522, align 8, !tbaa !19
  %523 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %37, i64 0, i32 2, i32 1, i64 2
  store i8 0, ptr %523, align 2, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %38) #25
  %524 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %38, i64 0, i32 2
  store ptr %524, ptr %38, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %524, ptr noundef nonnull align 1 dereferenceable(6) @.str.121, i64 6, i1 false)
  %525 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %38, i64 0, i32 1
  store i64 6, ptr %525, align 8, !tbaa !19
  %526 = getelementptr inbounds i8, ptr %38, i64 22
  store i8 0, ptr %526, align 2, !tbaa !20
  %527 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %519, ptr noundef nonnull align 8 dereferenceable(32) %37, ptr noundef nonnull align 8 dereferenceable(32) %38)
          to label %528 unwind label %691

528:                                              ; preds = %520
  %529 = load ptr, ptr %38, align 8, !tbaa !43
  %530 = icmp eq ptr %529, %524
  br i1 %530, label %532, label %531

531:                                              ; preds = %528
  call void @_ZdlPv(ptr noundef %529) #28
  br label %532

532:                                              ; preds = %528, %531
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %38) #25
  %533 = load ptr, ptr %37, align 8, !tbaa !43
  %534 = icmp eq ptr %533, %521
  br i1 %534, label %536, label %535

535:                                              ; preds = %532
  call void @_ZdlPv(ptr noundef %533) #28
  br label %536

536:                                              ; preds = %532, %535
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %37) #25
  %537 = load ptr, ptr %36, align 8, !tbaa !43
  %538 = icmp eq ptr %537, %512
  br i1 %538, label %540, label %539

539:                                              ; preds = %536
  call void @_ZdlPv(ptr noundef %537) #28
  br label %540

540:                                              ; preds = %536, %539
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %36) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %39) #25
  %541 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %39, i64 0, i32 2
  store ptr %541, ptr %39, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #25
  store i64 21, ptr %10, align 8, !tbaa !55
  %542 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %39, ptr noundef nonnull align 8 dereferenceable(8) %10, i64 noundef 0)
          to label %543 unwind label %708

543:                                              ; preds = %540
  store ptr %542, ptr %39, align 8, !tbaa !43
  %544 = load i64, ptr %10, align 8, !tbaa !55
  store i64 %544, ptr %541, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %542, ptr noundef nonnull align 1 dereferenceable(21) @.str.8, i64 21, i1 false)
  %545 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %39, i64 0, i32 1
  store i64 %544, ptr %545, align 8, !tbaa !19
  %546 = load ptr, ptr %39, align 8, !tbaa !43
  %547 = getelementptr inbounds i8, ptr %546, i64 %544
  store i8 0, ptr %547, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #25
  %548 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %39)
          to label %549 unwind label %710

549:                                              ; preds = %543
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %40) #25
  %550 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %40, i64 0, i32 2
  store ptr %550, ptr %40, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #25
  store i64 17, ptr %9, align 8, !tbaa !55
  %551 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %40, ptr noundef nonnull align 8 dereferenceable(8) %9, i64 noundef 0)
          to label %552 unwind label %712

552:                                              ; preds = %549
  store ptr %551, ptr %40, align 8, !tbaa !43
  %553 = load i64, ptr %9, align 8, !tbaa !55
  store i64 %553, ptr %550, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %551, ptr noundef nonnull align 1 dereferenceable(17) @.str.46, i64 17, i1 false)
  %554 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %40, i64 0, i32 1
  store i64 %553, ptr %554, align 8, !tbaa !19
  %555 = load ptr, ptr %40, align 8, !tbaa !43
  %556 = getelementptr inbounds i8, ptr %555, i64 %553
  store i8 0, ptr %556, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %41) #25
  %557 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %41, i64 0, i32 2
  store ptr %557, ptr %41, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %557, ptr noundef nonnull align 1 dereferenceable(3) @.str.122, i64 3, i1 false)
  %558 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %41, i64 0, i32 1
  store i64 3, ptr %558, align 8, !tbaa !19
  %559 = getelementptr inbounds i8, ptr %41, i64 19
  store i8 0, ptr %559, align 1, !tbaa !20
  %560 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %548, ptr noundef nonnull align 8 dereferenceable(32) %40, ptr noundef nonnull align 8 dereferenceable(32) %41)
          to label %561 unwind label %714

561:                                              ; preds = %552
  %562 = load ptr, ptr %41, align 8, !tbaa !43
  %563 = icmp eq ptr %562, %557
  br i1 %563, label %565, label %564

564:                                              ; preds = %561
  call void @_ZdlPv(ptr noundef %562) #28
  br label %565

565:                                              ; preds = %561, %564
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %41) #25
  %566 = load ptr, ptr %40, align 8, !tbaa !43
  %567 = icmp eq ptr %566, %550
  br i1 %567, label %569, label %568

568:                                              ; preds = %565
  call void @_ZdlPv(ptr noundef %566) #28
  br label %569

569:                                              ; preds = %565, %568
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %40) #25
  %570 = load ptr, ptr %39, align 8, !tbaa !43
  %571 = icmp eq ptr %570, %541
  br i1 %571, label %573, label %572

572:                                              ; preds = %569
  call void @_ZdlPv(ptr noundef %570) #28
  br label %573

573:                                              ; preds = %569, %572
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %39) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %42) #25
  %574 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %42, i64 0, i32 2
  store ptr %574, ptr %42, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #25
  store i64 21, ptr %8, align 8, !tbaa !55
  %575 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %42, ptr noundef nonnull align 8 dereferenceable(8) %8, i64 noundef 0)
          to label %576 unwind label %732

576:                                              ; preds = %573
  store ptr %575, ptr %42, align 8, !tbaa !43
  %577 = load i64, ptr %8, align 8, !tbaa !55
  store i64 %577, ptr %574, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %575, ptr noundef nonnull align 1 dereferenceable(21) @.str.8, i64 21, i1 false)
  %578 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %42, i64 0, i32 1
  store i64 %577, ptr %578, align 8, !tbaa !19
  %579 = load ptr, ptr %42, align 8, !tbaa !43
  %580 = getelementptr inbounds i8, ptr %579, i64 %577
  store i8 0, ptr %580, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #25
  %581 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %42)
          to label %582 unwind label %734

582:                                              ; preds = %576
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %43) #25
  %583 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %43, i64 0, i32 2
  store ptr %583, ptr %43, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #25
  store i64 16, ptr %7, align 8, !tbaa !55
  %584 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %43, ptr noundef nonnull align 8 dereferenceable(8) %7, i64 noundef 0)
          to label %585 unwind label %736

585:                                              ; preds = %582
  store ptr %584, ptr %43, align 8, !tbaa !43
  %586 = load i64, ptr %7, align 8, !tbaa !55
  store i64 %586, ptr %583, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %584, ptr noundef nonnull align 1 dereferenceable(16) @.str.47, i64 16, i1 false)
  %587 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %43, i64 0, i32 1
  store i64 %586, ptr %587, align 8, !tbaa !19
  %588 = load ptr, ptr %43, align 8, !tbaa !43
  %589 = getelementptr inbounds i8, ptr %588, i64 %586
  store i8 0, ptr %589, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %44) #25
  %590 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %44, i64 0, i32 2
  store ptr %590, ptr %44, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %590, ptr noundef nonnull align 1 dereferenceable(3) @.str.122, i64 3, i1 false)
  %591 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %44, i64 0, i32 1
  store i64 3, ptr %591, align 8, !tbaa !19
  %592 = getelementptr inbounds i8, ptr %44, i64 19
  store i8 0, ptr %592, align 1, !tbaa !20
  %593 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %581, ptr noundef nonnull align 8 dereferenceable(32) %43, ptr noundef nonnull align 8 dereferenceable(32) %44)
          to label %594 unwind label %738

594:                                              ; preds = %585
  %595 = load ptr, ptr %44, align 8, !tbaa !43
  %596 = icmp eq ptr %595, %590
  br i1 %596, label %598, label %597

597:                                              ; preds = %594
  call void @_ZdlPv(ptr noundef %595) #28
  br label %598

598:                                              ; preds = %594, %597
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %44) #25
  %599 = load ptr, ptr %43, align 8, !tbaa !43
  %600 = icmp eq ptr %599, %583
  br i1 %600, label %602, label %601

601:                                              ; preds = %598
  call void @_ZdlPv(ptr noundef %599) #28
  br label %602

602:                                              ; preds = %598, %601
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %43) #25
  %603 = load ptr, ptr %42, align 8, !tbaa !43
  %604 = icmp eq ptr %603, %574
  br i1 %604, label %606, label %605

605:                                              ; preds = %602
  call void @_ZdlPv(ptr noundef %603) #28
  br label %606

606:                                              ; preds = %602, %605
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %42) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %45) #25
  %607 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %45, i64 0, i32 2
  store ptr %607, ptr %45, align 8, !tbaa !18
  %608 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %45, i64 0, i32 1
  store i64 0, ptr %608, align 8, !tbaa !19
  store i8 0, ptr %607, align 8, !tbaa !20
  %609 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35, ptr noundef nonnull align 8 dereferenceable(32) %45)
          to label %610 unwind label %756

610:                                              ; preds = %606
  %611 = load ptr, ptr %45, align 8, !tbaa !43
  %612 = icmp eq ptr %611, %607
  br i1 %612, label %614, label %613

613:                                              ; preds = %610
  call void @_ZdlPv(ptr noundef %611) #28
  br label %614

614:                                              ; preds = %610, %613
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %45) #25
  %615 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %616 unwind label %762

616:                                              ; preds = %614
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %46) #25
  %617 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %46, i64 0, i32 2
  store ptr %617, ptr %46, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %617, ptr noundef nonnull align 1 dereferenceable(10) @.str.48, i64 10, i1 false)
  %618 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %46, i64 0, i32 1
  store i64 10, ptr %618, align 8, !tbaa !19
  %619 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %46, i64 0, i32 2, i32 1, i64 2
  store i8 0, ptr %619, align 2, !tbaa !20
  %620 = load i32, ptr %31, align 4, !tbaa !5
  %621 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88) %615, ptr noundef nonnull align 8 dereferenceable(32) %46, i32 noundef %620)
          to label %622 unwind label %764

622:                                              ; preds = %616
  %623 = load ptr, ptr %46, align 8, !tbaa !43
  %624 = icmp eq ptr %623, %617
  br i1 %624, label %626, label %625

625:                                              ; preds = %622
  call void @_ZdlPv(ptr noundef %623) #28
  br label %626

626:                                              ; preds = %622, %625
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %46) #25
  %627 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %628 unwind label %762

628:                                              ; preds = %626
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %47) #25
  %629 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %47, i64 0, i32 2
  store ptr %629, ptr %47, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #25
  store i64 16, ptr %6, align 8, !tbaa !55
  %630 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %47, ptr noundef nonnull align 8 dereferenceable(8) %6, i64 noundef 0)
          to label %631 unwind label %770

631:                                              ; preds = %628
  store ptr %630, ptr %47, align 8, !tbaa !43
  %632 = load i64, ptr %6, align 8, !tbaa !55
  store i64 %632, ptr %629, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %630, ptr noundef nonnull align 1 dereferenceable(16) @.str.49, i64 16, i1 false)
  %633 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %47, i64 0, i32 1
  store i64 %632, ptr %633, align 8, !tbaa !19
  %634 = load ptr, ptr %47, align 8, !tbaa !43
  %635 = getelementptr inbounds i8, ptr %634, i64 %632
  store i8 0, ptr %635, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #25
  %636 = load double, ptr %32, align 8, !tbaa !93
  %637 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %627, ptr noundef nonnull align 8 dereferenceable(32) %47, double noundef %636)
          to label %638 unwind label %772

638:                                              ; preds = %631
  %639 = load ptr, ptr %47, align 8, !tbaa !43
  %640 = icmp eq ptr %639, %629
  br i1 %640, label %642, label %641

641:                                              ; preds = %638
  call void @_ZdlPv(ptr noundef %639) #28
  br label %642

642:                                              ; preds = %638, %641
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %47) #25
  %643 = mul i32 %78, %76
  %644 = mul i32 %643, %80
  %645 = uitofp i64 %386 to double
  %646 = fmul double %645, 2.000000e+00
  %647 = sitofp i32 %644 to double
  %648 = fmul double %647, 2.000000e+00
  %649 = fmul double %647, 3.000000e+00
  %650 = load i32, ptr %31, align 4, !tbaa !5
  %651 = add nsw i32 %650, 1
  %652 = sitofp i32 %651 to double
  %653 = fmul double %646, %652
  %654 = shl nsw i32 %650, 1
  %655 = sitofp i32 %654 to double
  %656 = fmul double %648, %655
  %657 = mul nsw i32 %650, 3
  %658 = add nsw i32 %657, 2
  %659 = sitofp i32 %658 to double
  %660 = fmul double %649, %659
  %661 = fadd double %653, %656
  %662 = fadd double %661, %660
  %663 = getelementptr inbounds [5 x double], ptr %34, i64 0, i64 2
  %664 = load double, ptr %663, align 16, !tbaa !93
  %665 = fcmp ogt double %664, 1.000000e-04
  %666 = fdiv double %653, %664
  %667 = fmul double %666, 0x3EB0C6F7A0B5ED8D
  %668 = select i1 %665, double %667, double -1.000000e+00
  %669 = getelementptr inbounds [5 x double], ptr %34, i64 0, i64 1
  %670 = load double, ptr %669, align 8, !tbaa !93
  %671 = fcmp ogt double %670, 1.000000e-04
  %672 = fdiv double %656, %670
  %673 = fmul double %672, 0x3EB0C6F7A0B5ED8D
  %674 = select i1 %671, double %673, double -1.000000e+00
  %675 = load double, ptr %34, align 16, !tbaa !93
  %676 = fcmp ogt double %675, 1.000000e-04
  %677 = fdiv double %660, %675
  %678 = fmul double %677, 0x3EB0C6F7A0B5ED8D
  %679 = select i1 %676, double %678, double -1.000000e+00
  %680 = getelementptr inbounds [5 x double], ptr %34, i64 0, i64 4
  %681 = load double, ptr %680, align 16, !tbaa !93
  %682 = fcmp ogt double %681, 1.000000e-04
  %683 = fdiv double %662, %681
  %684 = fmul double %683, 0x3EB0C6F7A0B5ED8D
  %685 = select i1 %682, double %684, double -1.000000e+00
  %686 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %779 unwind label %814

687:                                              ; preds = %507
  %688 = landingpad { ptr, i32 }
          cleanup
  br label %706

689:                                              ; preds = %514
  %690 = landingpad { ptr, i32 }
          cleanup
  br label %701

691:                                              ; preds = %520
  %692 = landingpad { ptr, i32 }
          cleanup
  %693 = load ptr, ptr %38, align 8, !tbaa !43
  %694 = icmp eq ptr %693, %524
  br i1 %694, label %696, label %695

695:                                              ; preds = %691
  call void @_ZdlPv(ptr noundef %693) #28
  br label %696

696:                                              ; preds = %695, %691
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %38) #25
  %697 = load ptr, ptr %37, align 8, !tbaa !43
  %698 = icmp eq ptr %697, %521
  br i1 %698, label %700, label %699

699:                                              ; preds = %696
  call void @_ZdlPv(ptr noundef %697) #28
  br label %700

700:                                              ; preds = %699, %696
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %37) #25
  br label %701

701:                                              ; preds = %700, %689
  %702 = phi { ptr, i32 } [ %692, %700 ], [ %690, %689 ]
  %703 = load ptr, ptr %36, align 8, !tbaa !43
  %704 = icmp eq ptr %703, %512
  br i1 %704, label %706, label %705

705:                                              ; preds = %701
  call void @_ZdlPv(ptr noundef %703) #28
  br label %706

706:                                              ; preds = %705, %701, %687
  %707 = phi { ptr, i32 } [ %688, %687 ], [ %702, %701 ], [ %702, %705 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %36) #25
  br label %1294

708:                                              ; preds = %540
  %709 = landingpad { ptr, i32 }
          cleanup
  br label %730

710:                                              ; preds = %543
  %711 = landingpad { ptr, i32 }
          cleanup
  br label %725

712:                                              ; preds = %549
  %713 = landingpad { ptr, i32 }
          cleanup
  br label %723

714:                                              ; preds = %552
  %715 = landingpad { ptr, i32 }
          cleanup
  %716 = load ptr, ptr %41, align 8, !tbaa !43
  %717 = icmp eq ptr %716, %557
  br i1 %717, label %719, label %718

718:                                              ; preds = %714
  call void @_ZdlPv(ptr noundef %716) #28
  br label %719

719:                                              ; preds = %718, %714
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %41) #25
  %720 = load ptr, ptr %40, align 8, !tbaa !43
  %721 = icmp eq ptr %720, %550
  br i1 %721, label %723, label %722

722:                                              ; preds = %719
  call void @_ZdlPv(ptr noundef %720) #28
  br label %723

723:                                              ; preds = %722, %719, %712
  %724 = phi { ptr, i32 } [ %713, %712 ], [ %715, %719 ], [ %715, %722 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %40) #25
  br label %725

725:                                              ; preds = %723, %710
  %726 = phi { ptr, i32 } [ %724, %723 ], [ %711, %710 ]
  %727 = load ptr, ptr %39, align 8, !tbaa !43
  %728 = icmp eq ptr %727, %541
  br i1 %728, label %730, label %729

729:                                              ; preds = %725
  call void @_ZdlPv(ptr noundef %727) #28
  br label %730

730:                                              ; preds = %729, %725, %708
  %731 = phi { ptr, i32 } [ %709, %708 ], [ %726, %725 ], [ %726, %729 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %39) #25
  br label %1294

732:                                              ; preds = %573
  %733 = landingpad { ptr, i32 }
          cleanup
  br label %754

734:                                              ; preds = %576
  %735 = landingpad { ptr, i32 }
          cleanup
  br label %749

736:                                              ; preds = %582
  %737 = landingpad { ptr, i32 }
          cleanup
  br label %747

738:                                              ; preds = %585
  %739 = landingpad { ptr, i32 }
          cleanup
  %740 = load ptr, ptr %44, align 8, !tbaa !43
  %741 = icmp eq ptr %740, %590
  br i1 %741, label %743, label %742

742:                                              ; preds = %738
  call void @_ZdlPv(ptr noundef %740) #28
  br label %743

743:                                              ; preds = %742, %738
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %44) #25
  %744 = load ptr, ptr %43, align 8, !tbaa !43
  %745 = icmp eq ptr %744, %583
  br i1 %745, label %747, label %746

746:                                              ; preds = %743
  call void @_ZdlPv(ptr noundef %744) #28
  br label %747

747:                                              ; preds = %746, %743, %736
  %748 = phi { ptr, i32 } [ %737, %736 ], [ %739, %743 ], [ %739, %746 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %43) #25
  br label %749

749:                                              ; preds = %747, %734
  %750 = phi { ptr, i32 } [ %748, %747 ], [ %735, %734 ]
  %751 = load ptr, ptr %42, align 8, !tbaa !43
  %752 = icmp eq ptr %751, %574
  br i1 %752, label %754, label %753

753:                                              ; preds = %749
  call void @_ZdlPv(ptr noundef %751) #28
  br label %754

754:                                              ; preds = %753, %749, %732
  %755 = phi { ptr, i32 } [ %733, %732 ], [ %750, %749 ], [ %750, %753 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %42) #25
  br label %1294

756:                                              ; preds = %606
  %757 = landingpad { ptr, i32 }
          cleanup
  %758 = load ptr, ptr %45, align 8, !tbaa !43
  %759 = icmp eq ptr %758, %607
  br i1 %759, label %761, label %760

760:                                              ; preds = %756
  call void @_ZdlPv(ptr noundef %758) #28
  br label %761

761:                                              ; preds = %760, %756
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %45) #25
  br label %1294

762:                                              ; preds = %626, %614
  %763 = landingpad { ptr, i32 }
          cleanup
  br label %1294

764:                                              ; preds = %616
  %765 = landingpad { ptr, i32 }
          cleanup
  %766 = load ptr, ptr %46, align 8, !tbaa !43
  %767 = icmp eq ptr %766, %617
  br i1 %767, label %769, label %768

768:                                              ; preds = %764
  call void @_ZdlPv(ptr noundef %766) #28
  br label %769

769:                                              ; preds = %768, %764
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %46) #25
  br label %1294

770:                                              ; preds = %628
  %771 = landingpad { ptr, i32 }
          cleanup
  br label %777

772:                                              ; preds = %631
  %773 = landingpad { ptr, i32 }
          cleanup
  %774 = load ptr, ptr %47, align 8, !tbaa !43
  %775 = icmp eq ptr %774, %629
  br i1 %775, label %777, label %776

776:                                              ; preds = %772
  call void @_ZdlPv(ptr noundef %774) #28
  br label %777

777:                                              ; preds = %776, %772, %770
  %778 = phi { ptr, i32 } [ %771, %770 ], [ %773, %772 ], [ %773, %776 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %47) #25
  br label %1294

779:                                              ; preds = %642
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %48) #25
  %780 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %48, i64 0, i32 2
  store ptr %780, ptr %48, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %780, ptr noundef nonnull align 1 dereferenceable(10) @.str.50, i64 10, i1 false)
  %781 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %48, i64 0, i32 1
  store i64 10, ptr %781, align 8, !tbaa !19
  %782 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %48, i64 0, i32 2, i32 1, i64 2
  store i8 0, ptr %782, align 2, !tbaa !20
  %783 = load double, ptr %34, align 16, !tbaa !93
  %784 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %686, ptr noundef nonnull align 8 dereferenceable(32) %48, double noundef %783)
          to label %785 unwind label %816

785:                                              ; preds = %779
  %786 = load ptr, ptr %48, align 8, !tbaa !43
  %787 = icmp eq ptr %786, %780
  br i1 %787, label %789, label %788

788:                                              ; preds = %785
  call void @_ZdlPv(ptr noundef %786) #28
  br label %789

789:                                              ; preds = %785, %788
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %48) #25
  %790 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %791 unwind label %814

791:                                              ; preds = %789
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %49) #25
  %792 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %49, i64 0, i32 2
  store ptr %792, ptr %49, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %792, ptr noundef nonnull align 1 dereferenceable(11) @.str.51, i64 11, i1 false)
  %793 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %49, i64 0, i32 1
  store i64 11, ptr %793, align 8, !tbaa !19
  %794 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %49, i64 0, i32 2, i32 1, i64 3
  store i8 0, ptr %794, align 1, !tbaa !20
  %795 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %790, ptr noundef nonnull align 8 dereferenceable(32) %49, double noundef %660)
          to label %796 unwind label %822

796:                                              ; preds = %791
  %797 = load ptr, ptr %49, align 8, !tbaa !43
  %798 = icmp eq ptr %797, %792
  br i1 %798, label %800, label %799

799:                                              ; preds = %796
  call void @_ZdlPv(ptr noundef %797) #28
  br label %800

800:                                              ; preds = %796, %799
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %49) #25
  %801 = fcmp ult double %679, 0.000000e+00
  br i1 %801, label %834, label %802

802:                                              ; preds = %800
  %803 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %804 unwind label %814

804:                                              ; preds = %802
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %50) #25
  %805 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %50, i64 0, i32 2
  store ptr %805, ptr %50, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %805, ptr noundef nonnull align 1 dereferenceable(12) @.str.52, i64 12, i1 false)
  %806 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %50, i64 0, i32 1
  store i64 12, ptr %806, align 8, !tbaa !19
  %807 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %50, i64 0, i32 2, i32 1, i64 4
  store i8 0, ptr %807, align 4, !tbaa !20
  %808 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %803, ptr noundef nonnull align 8 dereferenceable(32) %50, double noundef %679)
          to label %809 unwind label %828

809:                                              ; preds = %804
  %810 = load ptr, ptr %50, align 8, !tbaa !43
  %811 = icmp eq ptr %810, %805
  br i1 %811, label %813, label %812

812:                                              ; preds = %809
  call void @_ZdlPv(ptr noundef %810) #28
  br label %813

813:                                              ; preds = %809, %812
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %50) #25
  br label %863

814:                                              ; preds = %1210, %1164, %1091, %1069, %1048, %1031, %1002, %972, %959, %947, %918, %888, %875, %863, %834, %802, %789, %642
  %815 = landingpad { ptr, i32 }
          cleanup
  br label %1294

816:                                              ; preds = %779
  %817 = landingpad { ptr, i32 }
          cleanup
  %818 = load ptr, ptr %48, align 8, !tbaa !43
  %819 = icmp eq ptr %818, %780
  br i1 %819, label %821, label %820

820:                                              ; preds = %816
  call void @_ZdlPv(ptr noundef %818) #28
  br label %821

821:                                              ; preds = %820, %816
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %48) #25
  br label %1294

822:                                              ; preds = %791
  %823 = landingpad { ptr, i32 }
          cleanup
  %824 = load ptr, ptr %49, align 8, !tbaa !43
  %825 = icmp eq ptr %824, %792
  br i1 %825, label %827, label %826

826:                                              ; preds = %822
  call void @_ZdlPv(ptr noundef %824) #28
  br label %827

827:                                              ; preds = %826, %822
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %49) #25
  br label %1294

828:                                              ; preds = %804
  %829 = landingpad { ptr, i32 }
          cleanup
  %830 = load ptr, ptr %50, align 8, !tbaa !43
  %831 = icmp eq ptr %830, %805
  br i1 %831, label %833, label %832

832:                                              ; preds = %828
  call void @_ZdlPv(ptr noundef %830) #28
  br label %833

833:                                              ; preds = %832, %828
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %50) #25
  br label %1294

834:                                              ; preds = %800
  %835 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %836 unwind label %814

836:                                              ; preds = %834
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %51) #25
  %837 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %51, i64 0, i32 2
  store ptr %837, ptr %51, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %837, ptr noundef nonnull align 1 dereferenceable(12) @.str.52, i64 12, i1 false)
  %838 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %51, i64 0, i32 1
  store i64 12, ptr %838, align 8, !tbaa !19
  %839 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %51, i64 0, i32 2, i32 1, i64 4
  store i8 0, ptr %839, align 4, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %52) #25
  %840 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %52, i64 0, i32 2
  store ptr %840, ptr %52, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %840, ptr noundef nonnull align 1 dereferenceable(3) @.str.53, i64 3, i1 false)
  %841 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %52, i64 0, i32 1
  store i64 3, ptr %841, align 8, !tbaa !19
  %842 = getelementptr inbounds i8, ptr %52, i64 19
  store i8 0, ptr %842, align 1, !tbaa !20
  %843 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %835, ptr noundef nonnull align 8 dereferenceable(32) %51, ptr noundef nonnull align 8 dereferenceable(32) %52)
          to label %844 unwind label %853

844:                                              ; preds = %836
  %845 = load ptr, ptr %52, align 8, !tbaa !43
  %846 = icmp eq ptr %845, %840
  br i1 %846, label %848, label %847

847:                                              ; preds = %844
  call void @_ZdlPv(ptr noundef %845) #28
  br label %848

848:                                              ; preds = %844, %847
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %52) #25
  %849 = load ptr, ptr %51, align 8, !tbaa !43
  %850 = icmp eq ptr %849, %837
  br i1 %850, label %852, label %851

851:                                              ; preds = %848
  call void @_ZdlPv(ptr noundef %849) #28
  br label %852

852:                                              ; preds = %848, %851
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %51) #25
  br label %863

853:                                              ; preds = %836
  %854 = landingpad { ptr, i32 }
          cleanup
  %855 = load ptr, ptr %52, align 8, !tbaa !43
  %856 = icmp eq ptr %855, %840
  br i1 %856, label %858, label %857

857:                                              ; preds = %853
  call void @_ZdlPv(ptr noundef %855) #28
  br label %858

858:                                              ; preds = %857, %853
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %52) #25
  %859 = load ptr, ptr %51, align 8, !tbaa !43
  %860 = icmp eq ptr %859, %837
  br i1 %860, label %862, label %861

861:                                              ; preds = %858
  call void @_ZdlPv(ptr noundef %859) #28
  br label %862

862:                                              ; preds = %861, %858
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %51) #25
  br label %1294

863:                                              ; preds = %852, %813
  %864 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %865 unwind label %814

865:                                              ; preds = %863
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %53) #25
  %866 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %53, i64 0, i32 2
  store ptr %866, ptr %53, align 8, !tbaa !18
  store i64 7308613580332748612, ptr %866, align 8
  %867 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %53, i64 0, i32 1
  store i64 8, ptr %867, align 8, !tbaa !19
  %868 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %53, i64 0, i32 2, i32 1
  store i8 0, ptr %868, align 8, !tbaa !20
  %869 = load double, ptr %669, align 8, !tbaa !93
  %870 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %864, ptr noundef nonnull align 8 dereferenceable(32) %53, double noundef %869)
          to label %871 unwind label %900

871:                                              ; preds = %865
  %872 = load ptr, ptr %53, align 8, !tbaa !43
  %873 = icmp eq ptr %872, %866
  br i1 %873, label %875, label %874

874:                                              ; preds = %871
  call void @_ZdlPv(ptr noundef %872) #28
  br label %875

875:                                              ; preds = %871, %874
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %53) #25
  %876 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %877 unwind label %814

877:                                              ; preds = %875
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %54) #25
  %878 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %54, i64 0, i32 2
  store ptr %878, ptr %54, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %878, ptr noundef nonnull align 1 dereferenceable(9) @.str.55, i64 9, i1 false)
  %879 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %54, i64 0, i32 1
  store i64 9, ptr %879, align 8, !tbaa !19
  %880 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %54, i64 0, i32 2, i32 1, i64 1
  store i8 0, ptr %880, align 1, !tbaa !20
  %881 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %876, ptr noundef nonnull align 8 dereferenceable(32) %54, double noundef %656)
          to label %882 unwind label %906

882:                                              ; preds = %877
  %883 = load ptr, ptr %54, align 8, !tbaa !43
  %884 = icmp eq ptr %883, %878
  br i1 %884, label %886, label %885

885:                                              ; preds = %882
  call void @_ZdlPv(ptr noundef %883) #28
  br label %886

886:                                              ; preds = %882, %885
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %54) #25
  %887 = fcmp ult double %674, 0.000000e+00
  br i1 %887, label %918, label %888

888:                                              ; preds = %886
  %889 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %890 unwind label %814

890:                                              ; preds = %888
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %55) #25
  %891 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %55, i64 0, i32 2
  store ptr %891, ptr %55, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %891, ptr noundef nonnull align 1 dereferenceable(10) @.str.56, i64 10, i1 false)
  %892 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %55, i64 0, i32 1
  store i64 10, ptr %892, align 8, !tbaa !19
  %893 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %55, i64 0, i32 2, i32 1, i64 2
  store i8 0, ptr %893, align 2, !tbaa !20
  %894 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %889, ptr noundef nonnull align 8 dereferenceable(32) %55, double noundef %674)
          to label %895 unwind label %912

895:                                              ; preds = %890
  %896 = load ptr, ptr %55, align 8, !tbaa !43
  %897 = icmp eq ptr %896, %891
  br i1 %897, label %899, label %898

898:                                              ; preds = %895
  call void @_ZdlPv(ptr noundef %896) #28
  br label %899

899:                                              ; preds = %895, %898
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %55) #25
  br label %947

900:                                              ; preds = %865
  %901 = landingpad { ptr, i32 }
          cleanup
  %902 = load ptr, ptr %53, align 8, !tbaa !43
  %903 = icmp eq ptr %902, %866
  br i1 %903, label %905, label %904

904:                                              ; preds = %900
  call void @_ZdlPv(ptr noundef %902) #28
  br label %905

905:                                              ; preds = %904, %900
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %53) #25
  br label %1294

906:                                              ; preds = %877
  %907 = landingpad { ptr, i32 }
          cleanup
  %908 = load ptr, ptr %54, align 8, !tbaa !43
  %909 = icmp eq ptr %908, %878
  br i1 %909, label %911, label %910

910:                                              ; preds = %906
  call void @_ZdlPv(ptr noundef %908) #28
  br label %911

911:                                              ; preds = %910, %906
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %54) #25
  br label %1294

912:                                              ; preds = %890
  %913 = landingpad { ptr, i32 }
          cleanup
  %914 = load ptr, ptr %55, align 8, !tbaa !43
  %915 = icmp eq ptr %914, %891
  br i1 %915, label %917, label %916

916:                                              ; preds = %912
  call void @_ZdlPv(ptr noundef %914) #28
  br label %917

917:                                              ; preds = %916, %912
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %55) #25
  br label %1294

918:                                              ; preds = %886
  %919 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %920 unwind label %814

920:                                              ; preds = %918
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %56) #25
  %921 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %56, i64 0, i32 2
  store ptr %921, ptr %56, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %921, ptr noundef nonnull align 1 dereferenceable(10) @.str.56, i64 10, i1 false)
  %922 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %56, i64 0, i32 1
  store i64 10, ptr %922, align 8, !tbaa !19
  %923 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %56, i64 0, i32 2, i32 1, i64 2
  store i8 0, ptr %923, align 2, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %57) #25
  %924 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %57, i64 0, i32 2
  store ptr %924, ptr %57, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %924, ptr noundef nonnull align 1 dereferenceable(3) @.str.53, i64 3, i1 false)
  %925 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %57, i64 0, i32 1
  store i64 3, ptr %925, align 8, !tbaa !19
  %926 = getelementptr inbounds i8, ptr %57, i64 19
  store i8 0, ptr %926, align 1, !tbaa !20
  %927 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %919, ptr noundef nonnull align 8 dereferenceable(32) %56, ptr noundef nonnull align 8 dereferenceable(32) %57)
          to label %928 unwind label %937

928:                                              ; preds = %920
  %929 = load ptr, ptr %57, align 8, !tbaa !43
  %930 = icmp eq ptr %929, %924
  br i1 %930, label %932, label %931

931:                                              ; preds = %928
  call void @_ZdlPv(ptr noundef %929) #28
  br label %932

932:                                              ; preds = %928, %931
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %57) #25
  %933 = load ptr, ptr %56, align 8, !tbaa !43
  %934 = icmp eq ptr %933, %921
  br i1 %934, label %936, label %935

935:                                              ; preds = %932
  call void @_ZdlPv(ptr noundef %933) #28
  br label %936

936:                                              ; preds = %932, %935
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %56) #25
  br label %947

937:                                              ; preds = %920
  %938 = landingpad { ptr, i32 }
          cleanup
  %939 = load ptr, ptr %57, align 8, !tbaa !43
  %940 = icmp eq ptr %939, %924
  br i1 %940, label %942, label %941

941:                                              ; preds = %937
  call void @_ZdlPv(ptr noundef %939) #28
  br label %942

942:                                              ; preds = %941, %937
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %57) #25
  %943 = load ptr, ptr %56, align 8, !tbaa !43
  %944 = icmp eq ptr %943, %921
  br i1 %944, label %946, label %945

945:                                              ; preds = %942
  call void @_ZdlPv(ptr noundef %943) #28
  br label %946

946:                                              ; preds = %945, %942
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %56) #25
  br label %1294

947:                                              ; preds = %936, %899
  %948 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %949 unwind label %814

949:                                              ; preds = %947
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %58) #25
  %950 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %58, i64 0, i32 2
  store ptr %950, ptr %58, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %950, ptr noundef nonnull align 1 dereferenceable(11) @.str.57, i64 11, i1 false)
  %951 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %58, i64 0, i32 1
  store i64 11, ptr %951, align 8, !tbaa !19
  %952 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %58, i64 0, i32 2, i32 1, i64 3
  store i8 0, ptr %952, align 1, !tbaa !20
  %953 = load double, ptr %663, align 16, !tbaa !93
  %954 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %948, ptr noundef nonnull align 8 dereferenceable(32) %58, double noundef %953)
          to label %955 unwind label %984

955:                                              ; preds = %949
  %956 = load ptr, ptr %58, align 8, !tbaa !43
  %957 = icmp eq ptr %956, %950
  br i1 %957, label %959, label %958

958:                                              ; preds = %955
  call void @_ZdlPv(ptr noundef %956) #28
  br label %959

959:                                              ; preds = %955, %958
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %58) #25
  %960 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %961 unwind label %814

961:                                              ; preds = %959
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %59) #25
  %962 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %59, i64 0, i32 2
  store ptr %962, ptr %59, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %962, ptr noundef nonnull align 1 dereferenceable(12) @.str.58, i64 12, i1 false)
  %963 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %59, i64 0, i32 1
  store i64 12, ptr %963, align 8, !tbaa !19
  %964 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %59, i64 0, i32 2, i32 1, i64 4
  store i8 0, ptr %964, align 4, !tbaa !20
  %965 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %960, ptr noundef nonnull align 8 dereferenceable(32) %59, double noundef %653)
          to label %966 unwind label %990

966:                                              ; preds = %961
  %967 = load ptr, ptr %59, align 8, !tbaa !43
  %968 = icmp eq ptr %967, %962
  br i1 %968, label %970, label %969

969:                                              ; preds = %966
  call void @_ZdlPv(ptr noundef %967) #28
  br label %970

970:                                              ; preds = %966, %969
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %59) #25
  %971 = fcmp ult double %668, 0.000000e+00
  br i1 %971, label %1002, label %972

972:                                              ; preds = %970
  %973 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %974 unwind label %814

974:                                              ; preds = %972
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %60) #25
  %975 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %60, i64 0, i32 2
  store ptr %975, ptr %60, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %975, ptr noundef nonnull align 1 dereferenceable(13) @.str.59, i64 13, i1 false)
  %976 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %60, i64 0, i32 1
  store i64 13, ptr %976, align 8, !tbaa !19
  %977 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %60, i64 0, i32 2, i32 1, i64 5
  store i8 0, ptr %977, align 1, !tbaa !20
  %978 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %973, ptr noundef nonnull align 8 dereferenceable(32) %60, double noundef %668)
          to label %979 unwind label %996

979:                                              ; preds = %974
  %980 = load ptr, ptr %60, align 8, !tbaa !43
  %981 = icmp eq ptr %980, %975
  br i1 %981, label %983, label %982

982:                                              ; preds = %979
  call void @_ZdlPv(ptr noundef %980) #28
  br label %983

983:                                              ; preds = %979, %982
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %60) #25
  br label %1031

984:                                              ; preds = %949
  %985 = landingpad { ptr, i32 }
          cleanup
  %986 = load ptr, ptr %58, align 8, !tbaa !43
  %987 = icmp eq ptr %986, %950
  br i1 %987, label %989, label %988

988:                                              ; preds = %984
  call void @_ZdlPv(ptr noundef %986) #28
  br label %989

989:                                              ; preds = %988, %984
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %58) #25
  br label %1294

990:                                              ; preds = %961
  %991 = landingpad { ptr, i32 }
          cleanup
  %992 = load ptr, ptr %59, align 8, !tbaa !43
  %993 = icmp eq ptr %992, %962
  br i1 %993, label %995, label %994

994:                                              ; preds = %990
  call void @_ZdlPv(ptr noundef %992) #28
  br label %995

995:                                              ; preds = %994, %990
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %59) #25
  br label %1294

996:                                              ; preds = %974
  %997 = landingpad { ptr, i32 }
          cleanup
  %998 = load ptr, ptr %60, align 8, !tbaa !43
  %999 = icmp eq ptr %998, %975
  br i1 %999, label %1001, label %1000

1000:                                             ; preds = %996
  call void @_ZdlPv(ptr noundef %998) #28
  br label %1001

1001:                                             ; preds = %1000, %996
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %60) #25
  br label %1294

1002:                                             ; preds = %970
  %1003 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %1004 unwind label %814

1004:                                             ; preds = %1002
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %61) #25
  %1005 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %61, i64 0, i32 2
  store ptr %1005, ptr %61, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %1005, ptr noundef nonnull align 1 dereferenceable(13) @.str.59, i64 13, i1 false)
  %1006 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %61, i64 0, i32 1
  store i64 13, ptr %1006, align 8, !tbaa !19
  %1007 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %61, i64 0, i32 2, i32 1, i64 5
  store i8 0, ptr %1007, align 1, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %62) #25
  %1008 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %62, i64 0, i32 2
  store ptr %1008, ptr %62, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %1008, ptr noundef nonnull align 1 dereferenceable(3) @.str.53, i64 3, i1 false)
  %1009 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %62, i64 0, i32 1
  store i64 3, ptr %1009, align 8, !tbaa !19
  %1010 = getelementptr inbounds i8, ptr %62, i64 19
  store i8 0, ptr %1010, align 1, !tbaa !20
  %1011 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %1003, ptr noundef nonnull align 8 dereferenceable(32) %61, ptr noundef nonnull align 8 dereferenceable(32) %62)
          to label %1012 unwind label %1021

1012:                                             ; preds = %1004
  %1013 = load ptr, ptr %62, align 8, !tbaa !43
  %1014 = icmp eq ptr %1013, %1008
  br i1 %1014, label %1016, label %1015

1015:                                             ; preds = %1012
  call void @_ZdlPv(ptr noundef %1013) #28
  br label %1016

1016:                                             ; preds = %1012, %1015
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %62) #25
  %1017 = load ptr, ptr %61, align 8, !tbaa !43
  %1018 = icmp eq ptr %1017, %1005
  br i1 %1018, label %1020, label %1019

1019:                                             ; preds = %1016
  call void @_ZdlPv(ptr noundef %1017) #28
  br label %1020

1020:                                             ; preds = %1016, %1019
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %61) #25
  br label %1031

1021:                                             ; preds = %1004
  %1022 = landingpad { ptr, i32 }
          cleanup
  %1023 = load ptr, ptr %62, align 8, !tbaa !43
  %1024 = icmp eq ptr %1023, %1008
  br i1 %1024, label %1026, label %1025

1025:                                             ; preds = %1021
  call void @_ZdlPv(ptr noundef %1023) #28
  br label %1026

1026:                                             ; preds = %1025, %1021
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %62) #25
  %1027 = load ptr, ptr %61, align 8, !tbaa !43
  %1028 = icmp eq ptr %1027, %1005
  br i1 %1028, label %1030, label %1029

1029:                                             ; preds = %1026
  call void @_ZdlPv(ptr noundef %1027) #28
  br label %1030

1030:                                             ; preds = %1029, %1026
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %61) #25
  br label %1294

1031:                                             ; preds = %1020, %983
  %1032 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %1033 unwind label %814

1033:                                             ; preds = %1031
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %63) #25
  %1034 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %63, i64 0, i32 2
  store ptr %1034, ptr %63, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %1034, ptr noundef nonnull align 1 dereferenceable(5) @.str.60, i64 5, i1 false)
  %1035 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %63, i64 0, i32 1
  store i64 5, ptr %1035, align 8, !tbaa !19
  %1036 = getelementptr inbounds i8, ptr %63, i64 21
  store i8 0, ptr %1036, align 1, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %64) #25
  %1037 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %64, i64 0, i32 2
  store ptr %1037, ptr %64, align 8, !tbaa !18
  %1038 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %64, i64 0, i32 1
  store i64 0, ptr %1038, align 8, !tbaa !19
  store i8 0, ptr %1037, align 8, !tbaa !20
  %1039 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %1032, ptr noundef nonnull align 8 dereferenceable(32) %63, ptr noundef nonnull align 8 dereferenceable(32) %64)
          to label %1040 unwind label %1112

1040:                                             ; preds = %1033
  %1041 = load ptr, ptr %64, align 8, !tbaa !43
  %1042 = icmp eq ptr %1041, %1037
  br i1 %1042, label %1044, label %1043

1043:                                             ; preds = %1040
  call void @_ZdlPv(ptr noundef %1041) #28
  br label %1044

1044:                                             ; preds = %1040, %1043
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %64) #25
  %1045 = load ptr, ptr %63, align 8, !tbaa !43
  %1046 = icmp eq ptr %1045, %1034
  br i1 %1046, label %1048, label %1047

1047:                                             ; preds = %1044
  call void @_ZdlPv(ptr noundef %1045) #28
  br label %1048

1048:                                             ; preds = %1044, %1047
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %63) #25
  %1049 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %1050 unwind label %814

1050:                                             ; preds = %1048
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %65) #25
  %1051 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %65, i64 0, i32 2
  store ptr %1051, ptr %65, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %1051, ptr noundef nonnull align 1 dereferenceable(5) @.str.60, i64 5, i1 false)
  %1052 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %65, i64 0, i32 1
  store i64 5, ptr %1052, align 8, !tbaa !19
  %1053 = getelementptr inbounds i8, ptr %65, i64 21
  store i8 0, ptr %1053, align 1, !tbaa !20
  %1054 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %1049, ptr noundef nonnull align 8 dereferenceable(32) %65)
          to label %1055 unwind label %1122

1055:                                             ; preds = %1050
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %66) #25
  %1056 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %66, i64 0, i32 2
  store ptr %1056, ptr %66, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %1056, ptr noundef nonnull align 1 dereferenceable(13) @.str.61, i64 13, i1 false)
  %1057 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %66, i64 0, i32 1
  store i64 13, ptr %1057, align 8, !tbaa !19
  %1058 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %66, i64 0, i32 2, i32 1, i64 5
  store i8 0, ptr %1058, align 1, !tbaa !20
  %1059 = load double, ptr %680, align 16, !tbaa !93
  %1060 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %1054, ptr noundef nonnull align 8 dereferenceable(32) %66, double noundef %1059)
          to label %1061 unwind label %1124

1061:                                             ; preds = %1055
  %1062 = load ptr, ptr %66, align 8, !tbaa !43
  %1063 = icmp eq ptr %1062, %1056
  br i1 %1063, label %1065, label %1064

1064:                                             ; preds = %1061
  call void @_ZdlPv(ptr noundef %1062) #28
  br label %1065

1065:                                             ; preds = %1061, %1064
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %66) #25
  %1066 = load ptr, ptr %65, align 8, !tbaa !43
  %1067 = icmp eq ptr %1066, %1051
  br i1 %1067, label %1069, label %1068

1068:                                             ; preds = %1065
  call void @_ZdlPv(ptr noundef %1066) #28
  br label %1069

1069:                                             ; preds = %1065, %1068
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %65) #25
  %1070 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %1071 unwind label %814

1071:                                             ; preds = %1069
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %67) #25
  %1072 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %67, i64 0, i32 2
  store ptr %1072, ptr %67, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %1072, ptr noundef nonnull align 1 dereferenceable(5) @.str.60, i64 5, i1 false)
  %1073 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %67, i64 0, i32 1
  store i64 5, ptr %1073, align 8, !tbaa !19
  %1074 = getelementptr inbounds i8, ptr %67, i64 21
  store i8 0, ptr %1074, align 1, !tbaa !20
  %1075 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %1070, ptr noundef nonnull align 8 dereferenceable(32) %67)
          to label %1076 unwind label %1136

1076:                                             ; preds = %1071
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %68) #25
  %1077 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %68, i64 0, i32 2
  store ptr %1077, ptr %68, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %1077, ptr noundef nonnull align 1 dereferenceable(14) @.str.62, i64 14, i1 false)
  %1078 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %68, i64 0, i32 1
  store i64 14, ptr %1078, align 8, !tbaa !19
  %1079 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %68, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %1079, align 2, !tbaa !20
  %1080 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %1075, ptr noundef nonnull align 8 dereferenceable(32) %68, double noundef %662)
          to label %1081 unwind label %1138

1081:                                             ; preds = %1076
  %1082 = load ptr, ptr %68, align 8, !tbaa !43
  %1083 = icmp eq ptr %1082, %1077
  br i1 %1083, label %1085, label %1084

1084:                                             ; preds = %1081
  call void @_ZdlPv(ptr noundef %1082) #28
  br label %1085

1085:                                             ; preds = %1081, %1084
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %68) #25
  %1086 = load ptr, ptr %67, align 8, !tbaa !43
  %1087 = icmp eq ptr %1086, %1072
  br i1 %1087, label %1089, label %1088

1088:                                             ; preds = %1085
  call void @_ZdlPv(ptr noundef %1086) #28
  br label %1089

1089:                                             ; preds = %1085, %1088
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %67) #25
  %1090 = fcmp ult double %685, 0.000000e+00
  br i1 %1090, label %1164, label %1091

1091:                                             ; preds = %1089
  %1092 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %1093 unwind label %814

1093:                                             ; preds = %1091
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %69) #25
  %1094 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %69, i64 0, i32 2
  store ptr %1094, ptr %69, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %1094, ptr noundef nonnull align 1 dereferenceable(5) @.str.60, i64 5, i1 false)
  %1095 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %69, i64 0, i32 1
  store i64 5, ptr %1095, align 8, !tbaa !19
  %1096 = getelementptr inbounds i8, ptr %69, i64 21
  store i8 0, ptr %1096, align 1, !tbaa !20
  %1097 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %1092, ptr noundef nonnull align 8 dereferenceable(32) %69)
          to label %1098 unwind label %1150

1098:                                             ; preds = %1093
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %70) #25
  %1099 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %70, i64 0, i32 2
  store ptr %1099, ptr %70, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(15) %1099, ptr noundef nonnull align 1 dereferenceable(15) @.str.63, i64 15, i1 false)
  %1100 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %70, i64 0, i32 1
  store i64 15, ptr %1100, align 8, !tbaa !19
  %1101 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %70, i64 0, i32 2, i32 1, i64 7
  store i8 0, ptr %1101, align 1, !tbaa !20
  %1102 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %1097, ptr noundef nonnull align 8 dereferenceable(32) %70, double noundef %685)
          to label %1103 unwind label %1152

1103:                                             ; preds = %1098
  %1104 = load ptr, ptr %70, align 8, !tbaa !43
  %1105 = icmp eq ptr %1104, %1099
  br i1 %1105, label %1107, label %1106

1106:                                             ; preds = %1103
  call void @_ZdlPv(ptr noundef %1104) #28
  br label %1107

1107:                                             ; preds = %1103, %1106
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %70) #25
  %1108 = load ptr, ptr %69, align 8, !tbaa !43
  %1109 = icmp eq ptr %1108, %1094
  br i1 %1109, label %1111, label %1110

1110:                                             ; preds = %1107
  call void @_ZdlPv(ptr noundef %1108) #28
  br label %1111

1111:                                             ; preds = %1107, %1110
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %69) #25
  br label %1210

1112:                                             ; preds = %1033
  %1113 = landingpad { ptr, i32 }
          cleanup
  %1114 = load ptr, ptr %64, align 8, !tbaa !43
  %1115 = icmp eq ptr %1114, %1037
  br i1 %1115, label %1117, label %1116

1116:                                             ; preds = %1112
  call void @_ZdlPv(ptr noundef %1114) #28
  br label %1117

1117:                                             ; preds = %1116, %1112
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %64) #25
  %1118 = load ptr, ptr %63, align 8, !tbaa !43
  %1119 = icmp eq ptr %1118, %1034
  br i1 %1119, label %1121, label %1120

1120:                                             ; preds = %1117
  call void @_ZdlPv(ptr noundef %1118) #28
  br label %1121

1121:                                             ; preds = %1120, %1117
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %63) #25
  br label %1294

1122:                                             ; preds = %1050
  %1123 = landingpad { ptr, i32 }
          cleanup
  br label %1130

1124:                                             ; preds = %1055
  %1125 = landingpad { ptr, i32 }
          cleanup
  %1126 = load ptr, ptr %66, align 8, !tbaa !43
  %1127 = icmp eq ptr %1126, %1056
  br i1 %1127, label %1129, label %1128

1128:                                             ; preds = %1124
  call void @_ZdlPv(ptr noundef %1126) #28
  br label %1129

1129:                                             ; preds = %1128, %1124
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %66) #25
  br label %1130

1130:                                             ; preds = %1129, %1122
  %1131 = phi { ptr, i32 } [ %1125, %1129 ], [ %1123, %1122 ]
  %1132 = load ptr, ptr %65, align 8, !tbaa !43
  %1133 = icmp eq ptr %1132, %1051
  br i1 %1133, label %1135, label %1134

1134:                                             ; preds = %1130
  call void @_ZdlPv(ptr noundef %1132) #28
  br label %1135

1135:                                             ; preds = %1134, %1130
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %65) #25
  br label %1294

1136:                                             ; preds = %1071
  %1137 = landingpad { ptr, i32 }
          cleanup
  br label %1144

1138:                                             ; preds = %1076
  %1139 = landingpad { ptr, i32 }
          cleanup
  %1140 = load ptr, ptr %68, align 8, !tbaa !43
  %1141 = icmp eq ptr %1140, %1077
  br i1 %1141, label %1143, label %1142

1142:                                             ; preds = %1138
  call void @_ZdlPv(ptr noundef %1140) #28
  br label %1143

1143:                                             ; preds = %1142, %1138
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %68) #25
  br label %1144

1144:                                             ; preds = %1143, %1136
  %1145 = phi { ptr, i32 } [ %1139, %1143 ], [ %1137, %1136 ]
  %1146 = load ptr, ptr %67, align 8, !tbaa !43
  %1147 = icmp eq ptr %1146, %1072
  br i1 %1147, label %1149, label %1148

1148:                                             ; preds = %1144
  call void @_ZdlPv(ptr noundef %1146) #28
  br label %1149

1149:                                             ; preds = %1148, %1144
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %67) #25
  br label %1294

1150:                                             ; preds = %1093
  %1151 = landingpad { ptr, i32 }
          cleanup
  br label %1158

1152:                                             ; preds = %1098
  %1153 = landingpad { ptr, i32 }
          cleanup
  %1154 = load ptr, ptr %70, align 8, !tbaa !43
  %1155 = icmp eq ptr %1154, %1099
  br i1 %1155, label %1157, label %1156

1156:                                             ; preds = %1152
  call void @_ZdlPv(ptr noundef %1154) #28
  br label %1157

1157:                                             ; preds = %1156, %1152
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %70) #25
  br label %1158

1158:                                             ; preds = %1157, %1150
  %1159 = phi { ptr, i32 } [ %1153, %1157 ], [ %1151, %1150 ]
  %1160 = load ptr, ptr %69, align 8, !tbaa !43
  %1161 = icmp eq ptr %1160, %1094
  br i1 %1161, label %1163, label %1162

1162:                                             ; preds = %1158
  call void @_ZdlPv(ptr noundef %1160) #28
  br label %1163

1163:                                             ; preds = %1162, %1158
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %69) #25
  br label %1294

1164:                                             ; preds = %1089
  %1165 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %1166 unwind label %814

1166:                                             ; preds = %1164
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %71) #25
  %1167 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %71, i64 0, i32 2
  store ptr %1167, ptr %71, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %1167, ptr noundef nonnull align 1 dereferenceable(5) @.str.60, i64 5, i1 false)
  %1168 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %71, i64 0, i32 1
  store i64 5, ptr %1168, align 8, !tbaa !19
  %1169 = getelementptr inbounds i8, ptr %71, i64 21
  store i8 0, ptr %1169, align 1, !tbaa !20
  %1170 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %1165, ptr noundef nonnull align 8 dereferenceable(32) %71)
          to label %1171 unwind label %1192

1171:                                             ; preds = %1166
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %72) #25
  %1172 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %72, i64 0, i32 2
  store ptr %1172, ptr %72, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(15) %1172, ptr noundef nonnull align 1 dereferenceable(15) @.str.63, i64 15, i1 false)
  %1173 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %72, i64 0, i32 1
  store i64 15, ptr %1173, align 8, !tbaa !19
  %1174 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %72, i64 0, i32 2, i32 1, i64 7
  store i8 0, ptr %1174, align 1, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %73) #25
  %1175 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %73, i64 0, i32 2
  store ptr %1175, ptr %73, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %1175, ptr noundef nonnull align 1 dereferenceable(3) @.str.53, i64 3, i1 false)
  %1176 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %73, i64 0, i32 1
  store i64 3, ptr %1176, align 8, !tbaa !19
  %1177 = getelementptr inbounds i8, ptr %73, i64 19
  store i8 0, ptr %1177, align 1, !tbaa !20
  %1178 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %1170, ptr noundef nonnull align 8 dereferenceable(32) %72, ptr noundef nonnull align 8 dereferenceable(32) %73)
          to label %1179 unwind label %1194

1179:                                             ; preds = %1171
  %1180 = load ptr, ptr %73, align 8, !tbaa !43
  %1181 = icmp eq ptr %1180, %1175
  br i1 %1181, label %1183, label %1182

1182:                                             ; preds = %1179
  call void @_ZdlPv(ptr noundef %1180) #28
  br label %1183

1183:                                             ; preds = %1179, %1182
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %73) #25
  %1184 = load ptr, ptr %72, align 8, !tbaa !43
  %1185 = icmp eq ptr %1184, %1172
  br i1 %1185, label %1187, label %1186

1186:                                             ; preds = %1183
  call void @_ZdlPv(ptr noundef %1184) #28
  br label %1187

1187:                                             ; preds = %1183, %1186
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %72) #25
  %1188 = load ptr, ptr %71, align 8, !tbaa !43
  %1189 = icmp eq ptr %1188, %1167
  br i1 %1189, label %1191, label %1190

1190:                                             ; preds = %1187
  call void @_ZdlPv(ptr noundef %1188) #28
  br label %1191

1191:                                             ; preds = %1187, %1190
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %71) #25
  br label %1210

1192:                                             ; preds = %1166
  %1193 = landingpad { ptr, i32 }
          cleanup
  br label %1204

1194:                                             ; preds = %1171
  %1195 = landingpad { ptr, i32 }
          cleanup
  %1196 = load ptr, ptr %73, align 8, !tbaa !43
  %1197 = icmp eq ptr %1196, %1175
  br i1 %1197, label %1199, label %1198

1198:                                             ; preds = %1194
  call void @_ZdlPv(ptr noundef %1196) #28
  br label %1199

1199:                                             ; preds = %1198, %1194
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %73) #25
  %1200 = load ptr, ptr %72, align 8, !tbaa !43
  %1201 = icmp eq ptr %1200, %1172
  br i1 %1201, label %1203, label %1202

1202:                                             ; preds = %1199
  call void @_ZdlPv(ptr noundef %1200) #28
  br label %1203

1203:                                             ; preds = %1202, %1199
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %72) #25
  br label %1204

1204:                                             ; preds = %1203, %1192
  %1205 = phi { ptr, i32 } [ %1195, %1203 ], [ %1193, %1192 ]
  %1206 = load ptr, ptr %71, align 8, !tbaa !43
  %1207 = icmp eq ptr %1206, %1167
  br i1 %1207, label %1209, label %1208

1208:                                             ; preds = %1204
  call void @_ZdlPv(ptr noundef %1206) #28
  br label %1209

1209:                                             ; preds = %1208, %1204
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %71) #25
  br label %1294

1210:                                             ; preds = %1191, %1111
  %1211 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %1212 unwind label %814

1212:                                             ; preds = %1210
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %74) #25
  %1213 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %74, i64 0, i32 2
  store ptr %1213, ptr %74, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #25
  store i64 18, ptr %5, align 8, !tbaa !55
  %1214 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %74, ptr noundef nonnull align 8 dereferenceable(8) %5, i64 noundef 0)
          to label %1215 unwind label %1232

1215:                                             ; preds = %1212
  store ptr %1214, ptr %74, align 8, !tbaa !43
  %1216 = load i64, ptr %5, align 8, !tbaa !55
  store i64 %1216, ptr %1213, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(18) %1214, ptr noundef nonnull align 1 dereferenceable(18) @.str.64, i64 18, i1 false)
  %1217 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %74, i64 0, i32 1
  store i64 %1216, ptr %1217, align 8, !tbaa !19
  %1218 = load ptr, ptr %74, align 8, !tbaa !43
  %1219 = getelementptr inbounds i8, ptr %1218, i64 %1216
  store i8 0, ptr %1219, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #25
  %1220 = load double, ptr %680, align 16, !tbaa !93
  %1221 = load i32, ptr %31, align 4, !tbaa !5
  %1222 = sitofp i32 %1221 to double
  %1223 = fdiv double %1220, %1222
  %1224 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %1211, ptr noundef nonnull align 8 dereferenceable(32) %74, double noundef %1223)
          to label %1225 unwind label %1234

1225:                                             ; preds = %1215
  %1226 = load ptr, ptr %74, align 8, !tbaa !43
  %1227 = icmp eq ptr %1226, %1213
  br i1 %1227, label %1229, label %1228

1228:                                             ; preds = %1225
  call void @_ZdlPv(ptr noundef %1226) #28
  br label %1229

1229:                                             ; preds = %1225, %1228
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %74) #25
  %1230 = load ptr, ptr %35, align 8, !tbaa !43
  %1231 = icmp eq ptr %1230, %509
  br i1 %1231, label %1242, label %1241

1232:                                             ; preds = %1212
  %1233 = landingpad { ptr, i32 }
          cleanup
  br label %1239

1234:                                             ; preds = %1215
  %1235 = landingpad { ptr, i32 }
          cleanup
  %1236 = load ptr, ptr %74, align 8, !tbaa !43
  %1237 = icmp eq ptr %1236, %1213
  br i1 %1237, label %1239, label %1238

1238:                                             ; preds = %1234
  call void @_ZdlPv(ptr noundef %1236) #28
  br label %1239

1239:                                             ; preds = %1238, %1234, %1232
  %1240 = phi { ptr, i32 } [ %1233, %1232 ], [ %1235, %1234 ], [ %1235, %1238 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %74) #25
  br label %1294

1241:                                             ; preds = %1229
  call void @_ZdlPv(ptr noundef %1230) #28
  br label %1242

1242:                                             ; preds = %1229, %1241
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %35) #25
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %34) #25
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %33) #25
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %32) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %31) #25
  %1243 = load ptr, ptr %144, align 8, !tbaa !91
  %1244 = icmp eq ptr %1243, null
  br i1 %1244, label %1246, label %1245

1245:                                             ; preds = %1242
  call void @_ZdlPv(ptr noundef nonnull %1243) #28
  br label %1246

1246:                                             ; preds = %1242, %1245
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %22) #25
  %1247 = load ptr, ptr %145, align 8, !tbaa !91
  %1248 = icmp eq ptr %1247, null
  br i1 %1248, label %1250, label %1249

1249:                                             ; preds = %1246
  call void @_ZdlPv(ptr noundef nonnull %1247) #28
  br label %1250

1250:                                             ; preds = %1246, %1249
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %21) #25
  %1251 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %20, i64 0, i32 6
  %1252 = load ptr, ptr %1251, align 8, !tbaa !91
  %1253 = icmp eq ptr %1252, null
  br i1 %1253, label %1255, label %1254

1254:                                             ; preds = %1250
  call void @_ZdlPv(ptr noundef nonnull %1252) #28
  br label %1255

1255:                                             ; preds = %1254, %1250
  %1256 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %20, i64 0, i32 5
  %1257 = load ptr, ptr %1256, align 8, !tbaa !87
  %1258 = icmp eq ptr %1257, null
  br i1 %1258, label %1260, label %1259

1259:                                             ; preds = %1255
  call void @_ZdlPv(ptr noundef nonnull %1257) #28
  br label %1260

1260:                                             ; preds = %1259, %1255
  %1261 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %20, i64 0, i32 4
  %1262 = load ptr, ptr %1261, align 8, !tbaa !87
  %1263 = icmp eq ptr %1262, null
  br i1 %1263, label %1265, label %1264

1264:                                             ; preds = %1260
  call void @_ZdlPv(ptr noundef nonnull %1262) #28
  br label %1265

1265:                                             ; preds = %1264, %1260
  %1266 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %20, i64 0, i32 3
  %1267 = load ptr, ptr %1266, align 8, !tbaa !87
  %1268 = icmp eq ptr %1267, null
  br i1 %1268, label %1270, label %1269

1269:                                             ; preds = %1265
  call void @_ZdlPv(ptr noundef nonnull %1267) #28
  br label %1270

1270:                                             ; preds = %1269, %1265
  %1271 = load ptr, ptr %87, align 8, !tbaa !87
  %1272 = icmp eq ptr %1271, null
  br i1 %1272, label %1274, label %1273

1273:                                             ; preds = %1270
  call void @_ZdlPv(ptr noundef nonnull %1271) #28
  br label %1274

1274:                                             ; preds = %1270, %1273
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %20) #25
  %1275 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %19, i64 0, i32 2
  %1276 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %19, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 1
  %1277 = load ptr, ptr %1276, align 8, !tbaa !98
  invoke void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(ptr noundef nonnull align 8 dereferenceable(48) %1275, ptr noundef %1277)
          to label %1281 unwind label %1278

1278:                                             ; preds = %1274
  %1279 = landingpad { ptr, i32 }
          catch ptr null
  %1280 = extractvalue { ptr, i32 } %1279, 0
  call void @__clang_call_terminate(ptr %1280) #29
  unreachable

1281:                                             ; preds = %1274
  %1282 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %19, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %1283 = load ptr, ptr %1282, align 8, !tbaa !98
  invoke void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(ptr noundef nonnull align 8 dereferenceable(48) %370, ptr noundef %1283)
          to label %1287 unwind label %1284

1284:                                             ; preds = %1281
  %1285 = landingpad { ptr, i32 }
          catch ptr null
  %1286 = extractvalue { ptr, i32 } %1285, 0
  call void @__clang_call_terminate(ptr %1286) #29
  unreachable

1287:                                             ; preds = %1281
  %1288 = getelementptr inbounds i8, ptr %19, i64 16
  %1289 = load ptr, ptr %1288, align 8, !tbaa !98
  invoke void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(ptr noundef nonnull align 8 dereferenceable(48) %19, ptr noundef %1289)
          to label %1293 unwind label %1290

1290:                                             ; preds = %1287
  %1291 = landingpad { ptr, i32 }
          catch ptr null
  %1292 = extractvalue { ptr, i32 } %1291, 0
  call void @__clang_call_terminate(ptr %1292) #29
  unreachable

1293:                                             ; preds = %1287
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %19) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #25
  ret i32 %508

1294:                                             ; preds = %814, %821, %827, %833, %862, %905, %911, %917, %946, %989, %995, %1001, %1030, %1121, %1135, %1149, %1163, %1209, %1239, %777, %769, %762, %761, %754, %730, %706
  %1295 = phi { ptr, i32 } [ %778, %777 ], [ %763, %762 ], [ %765, %769 ], [ %757, %761 ], [ %755, %754 ], [ %731, %730 ], [ %707, %706 ], [ %1240, %1239 ], [ %815, %814 ], [ %1159, %1163 ], [ %1205, %1209 ], [ %1145, %1149 ], [ %1131, %1135 ], [ %1113, %1121 ], [ %997, %1001 ], [ %1022, %1030 ], [ %991, %995 ], [ %985, %989 ], [ %913, %917 ], [ %938, %946 ], [ %907, %911 ], [ %901, %905 ], [ %829, %833 ], [ %854, %862 ], [ %823, %827 ], [ %817, %821 ]
  %1296 = load ptr, ptr %35, align 8, !tbaa !43
  %1297 = icmp eq ptr %1296, %509
  br i1 %1297, label %1299, label %1298

1298:                                             ; preds = %1294
  call void @_ZdlPv(ptr noundef %1296) #28
  br label %1299

1299:                                             ; preds = %1298, %1294
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %35) #25
  br label %1300

1300:                                             ; preds = %430, %473, %1299, %428
  %1301 = phi { ptr, i32 } [ %429, %428 ], [ %1295, %1299 ], [ %431, %430 ], [ %474, %473 ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %34) #25
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %33) #25
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %32) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %31) #25
  br label %1302

1302:                                             ; preds = %420, %422, %426, %1300, %424, %360, %343, %332, %312, %299
  %1303 = phi { ptr, i32 } [ %356, %360 ], [ %335, %343 ], [ %333, %332 ], [ %313, %312 ], [ %300, %299 ], [ %423, %422 ], [ %421, %420 ], [ %425, %424 ], [ %1301, %1300 ], [ %427, %426 ]
  %1304 = load ptr, ptr %144, align 8, !tbaa !91
  %1305 = icmp eq ptr %1304, null
  br i1 %1305, label %1307, label %1306

1306:                                             ; preds = %1302
  call void @_ZdlPv(ptr noundef nonnull %1304) #28
  br label %1307

1307:                                             ; preds = %1306, %1302, %297
  %1308 = phi ptr [ %112, %297 ], [ %145, %1302 ], [ %145, %1306 ]
  %1309 = phi { ptr, i32 } [ %298, %297 ], [ %1303, %1302 ], [ %1303, %1306 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %22) #25
  %1310 = load ptr, ptr %1308, align 8, !tbaa !91
  %1311 = icmp eq ptr %1310, null
  br i1 %1311, label %1313, label %1312

1312:                                             ; preds = %1307
  call void @_ZdlPv(ptr noundef nonnull %1310) #28
  br label %1313

1313:                                             ; preds = %1312, %1307, %295
  %1314 = phi { ptr, i32 } [ %296, %295 ], [ %1309, %1307 ], [ %1309, %1312 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %21) #25
  br label %1315

1315:                                             ; preds = %1313, %293
  %1316 = phi { ptr, i32 } [ %1314, %1313 ], [ %294, %293 ]
  call void @_ZN6miniFE9CSRMatrixIdiiED2Ev(ptr noundef nonnull align 8 dereferenceable(132) %20) #25
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %20) #25
  br label %1317

1317:                                             ; preds = %291, %1315, %289
  %1318 = phi { ptr, i32 } [ %290, %289 ], [ %1316, %1315 ], [ %292, %291 ]
  call void @_ZN6miniFE23simple_mesh_descriptionIiED2Ev(ptr noundef nonnull align 8 dereferenceable(192) %19) #25
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %19) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #25
  resume { ptr, i32 } %1318
}

declare noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88), ptr noundef nonnull align 8 dereferenceable(32), double noundef) local_unnamed_addr #0

declare void @_ZN8YAML_Doc12generateYAMLB5cxx11Ev(ptr sret(%"class.std::__cxx11::basic_string") align 8, ptr noundef nonnull align 8 dereferenceable(216)) local_unnamed_addr #0

; Function Attrs: nounwind
declare void @_ZN8YAML_DocD1Ev(ptr noundef nonnull align 8 dereferenceable(216)) unnamed_addr #1

; Function Attrs: nounwind uwtable
declare void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev(ptr noundef nonnull align 8 dereferenceable(112)) unnamed_addr #8 align 2

declare noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88), ptr noundef nonnull align 8 dereferenceable(32), ptr noundef nonnull align 8 dereferenceable(32)) local_unnamed_addr #0

declare noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88), ptr noundef nonnull align 8 dereferenceable(32)) local_unnamed_addr #0

declare noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(ptr noundef nonnull align 8 dereferenceable(88), ptr noundef nonnull align 8 dereferenceable(32), i32 noundef) local_unnamed_addr #0

; Function Attrs: nounwind
declare i64 @time(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind
declare ptr @localtime(ptr noundef) local_unnamed_addr #1

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(ptr noundef %0) local_unnamed_addr #9 comdat {
  %2 = tail call ptr @__cxa_begin_catch(ptr %0) #25
  tail call void @_ZSt9terminatev() #29
  unreachable
}

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(216)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt6localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #1

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, i64 noundef) local_unnamed_addr #0

declare noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32), i64 noundef, i64 noundef, ptr noundef, i64 noundef) local_unnamed_addr #0

declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef nonnull align 8 dereferenceable(32)) local_unnamed_addr #0

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8), i8 noundef signext) local_unnamed_addr #0

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @_ZSt16__throw_bad_castv() local_unnamed_addr #11

declare void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(ptr noundef) local_unnamed_addr #11

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #12

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #13

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #14

; Function Attrs: nounwind
declare noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef) local_unnamed_addr #1

declare noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef nonnull align 8 dereferenceable(8), i64 noundef) local_unnamed_addr #0

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE17compute_imbalanceIiEEvRK3BoxS3_RfS4_R8YAML_Docb(ptr noundef nonnull align 4 dereferenceable(24) %0, ptr noundef nonnull align 4 dereferenceable(24) %1, ptr noundef nonnull align 4 dereferenceable(4) %2, ptr noundef nonnull align 4 dereferenceable(4) %3, ptr noundef nonnull align 8 dereferenceable(216) %4, i1 noundef zeroext %5) local_unnamed_addr #7 comdat personality ptr @__gxx_personality_v0 {
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.std::__cxx11::basic_string", align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.std::__cxx11::basic_string", align 8
  %14 = alloca %"class.std::__cxx11::basic_string", align 8
  %15 = alloca %"class.std::__cxx11::basic_string", align 8
  %16 = alloca %"class.std::__cxx11::basic_string", align 8
  %17 = getelementptr inbounds i32, ptr %1, i64 1
  %18 = load i32, ptr %17, align 4, !tbaa !5
  %19 = load i32, ptr %1, align 4, !tbaa !5
  %20 = sub nsw i32 %18, %19
  %21 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 3
  %22 = load i32, ptr %21, align 4, !tbaa !5
  %23 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 2
  %24 = load i32, ptr %23, align 4, !tbaa !5
  %25 = sub nsw i32 %22, %24
  %26 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 5
  %27 = load i32, ptr %26, align 4, !tbaa !5
  %28 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 4
  %29 = load i32, ptr %28, align 4, !tbaa !5
  %30 = sub nsw i32 %27, %29
  %31 = mul nsw i32 %25, %20
  %32 = mul nsw i32 %31, %30
  %33 = sitofp i32 %32 to float
  %34 = tail call float @llvm.fabs.f32(float %33)
  %35 = fpext float %34 to double
  %36 = fcmp ogt double %35, 1.000000e-05
  br i1 %36, label %37, label %53

37:                                               ; preds = %6
  %38 = tail call i32 @llvm.smax.i32(i32 %32, i32 0)
  %39 = mul nsw i32 %32, 5
  %40 = tail call i32 @llvm.smin.i32(i32 %39, i32 %32)
  %41 = insertelement <2 x i32> poison, i32 %38, i64 0
  %42 = insertelement <2 x i32> %41, i32 %40, i64 1
  %43 = sitofp <2 x i32> %42 to <2 x float>
  %44 = insertelement <2 x float> poison, float %33, i64 0
  %45 = shufflevector <2 x float> %44, <2 x float> poison, <2 x i32> zeroinitializer
  %46 = fsub <2 x float> %43, %45
  %47 = tail call <2 x float> @llvm.fabs.v2f32(<2 x float> %46)
  %48 = fdiv <2 x float> %47, %45
  %49 = fmul <2 x float> %48, <float 1.000000e+02, float 1.000000e+02>
  %50 = extractelement <2 x float> %49, i64 0
  %51 = extractelement <2 x float> %49, i64 1
  %52 = fcmp ogt float %50, %51
  br i1 %52, label %53, label %55

53:                                               ; preds = %37, %6
  %54 = phi float [ -1.000000e+00, %6 ], [ %50, %37 ]
  br label %55

55:                                               ; preds = %53, %37
  %56 = phi float [ %54, %53 ], [ %51, %37 ]
  store float %56, ptr %2, align 4, !tbaa !75
  store float 0.000000e+00, ptr %3, align 4, !tbaa !75
  br i1 %5, label %57, label %179

57:                                               ; preds = %55
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %11) #25
  %58 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 2
  store ptr %58, ptr %11, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #25
  store i64 28, ptr %10, align 8, !tbaa !55
  %59 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %11, ptr noundef nonnull align 8 dereferenceable(8) %10, i64 noundef 0)
          to label %60 unwind label %129

60:                                               ; preds = %57
  store ptr %59, ptr %11, align 8, !tbaa !43
  %61 = load i64, ptr %10, align 8, !tbaa !55
  store i64 %61, ptr %58, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(28) %59, ptr noundef nonnull align 1 dereferenceable(28) @.str.65, i64 28, i1 false)
  %62 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 1
  store i64 %61, ptr %62, align 8, !tbaa !19
  %63 = load ptr, ptr %11, align 8, !tbaa !43
  %64 = getelementptr inbounds i8, ptr %63, i64 %61
  store i8 0, ptr %64, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #25
  %65 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2
  store ptr %65, ptr %12, align 8, !tbaa !18
  %66 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 1
  store i64 0, ptr %66, align 8, !tbaa !19
  store i8 0, ptr %65, align 8, !tbaa !20
  %67 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(32) %11, ptr noundef nonnull align 8 dereferenceable(32) %12)
          to label %68 unwind label %131

68:                                               ; preds = %60
  %69 = load ptr, ptr %12, align 8, !tbaa !43
  %70 = icmp eq ptr %69, %65
  br i1 %70, label %72, label %71

71:                                               ; preds = %68
  call void @_ZdlPv(ptr noundef %69) #28
  br label %72

72:                                               ; preds = %68, %71
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #25
  %73 = load ptr, ptr %11, align 8, !tbaa !43
  %74 = icmp eq ptr %73, %58
  br i1 %74, label %76, label %75

75:                                               ; preds = %72
  call void @_ZdlPv(ptr noundef %73) #28
  br label %76

76:                                               ; preds = %72, %75
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #25
  %77 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 2
  store ptr %77, ptr %13, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #25
  store i64 28, ptr %9, align 8, !tbaa !55
  %78 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull align 8 dereferenceable(8) %9, i64 noundef 0)
          to label %79 unwind label %142

79:                                               ; preds = %76
  store ptr %78, ptr %13, align 8, !tbaa !43
  %80 = load i64, ptr %9, align 8, !tbaa !55
  store i64 %80, ptr %77, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(28) %78, ptr noundef nonnull align 1 dereferenceable(28) @.str.65, i64 28, i1 false)
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 1
  store i64 %80, ptr %81, align 8, !tbaa !19
  %82 = load ptr, ptr %13, align 8, !tbaa !43
  %83 = getelementptr inbounds i8, ptr %82, i64 %80
  store i8 0, ptr %83, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #25
  %84 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(32) %13)
          to label %85 unwind label %144

85:                                               ; preds = %79
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %14) #25
  %86 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 0, i32 2
  store ptr %86, ptr %14, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #25
  store i64 21, ptr %8, align 8, !tbaa !55
  %87 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %14, ptr noundef nonnull align 8 dereferenceable(8) %8, i64 noundef 0)
          to label %88 unwind label %146

88:                                               ; preds = %85
  store ptr %87, ptr %14, align 8, !tbaa !43
  %89 = load i64, ptr %8, align 8, !tbaa !55
  store i64 %89, ptr %86, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(21) %87, ptr noundef nonnull align 1 dereferenceable(21) @.str.66, i64 21, i1 false)
  %90 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 0, i32 1
  store i64 %89, ptr %90, align 8, !tbaa !19
  %91 = load ptr, ptr %14, align 8, !tbaa !43
  %92 = getelementptr inbounds i8, ptr %91, i64 %89
  store i8 0, ptr %92, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #25
  %93 = load float, ptr %2, align 4, !tbaa !75
  %94 = fpext float %93 to double
  %95 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %84, ptr noundef nonnull align 8 dereferenceable(32) %14, double noundef %94)
          to label %96 unwind label %148

96:                                               ; preds = %88
  %97 = load ptr, ptr %14, align 8, !tbaa !43
  %98 = icmp eq ptr %97, %86
  br i1 %98, label %100, label %99

99:                                               ; preds = %96
  call void @_ZdlPv(ptr noundef %97) #28
  br label %100

100:                                              ; preds = %96, %99
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %14) #25
  %101 = load ptr, ptr %13, align 8, !tbaa !43
  %102 = icmp eq ptr %101, %77
  br i1 %102, label %104, label %103

103:                                              ; preds = %100
  call void @_ZdlPv(ptr noundef %101) #28
  br label %104

104:                                              ; preds = %100, %103
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %15) #25
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 2
  store ptr %105, ptr %15, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #25
  store i64 28, ptr %7, align 8, !tbaa !55
  %106 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %15, ptr noundef nonnull align 8 dereferenceable(8) %7, i64 noundef 0)
          to label %107 unwind label %162

107:                                              ; preds = %104
  store ptr %106, ptr %15, align 8, !tbaa !43
  %108 = load i64, ptr %7, align 8, !tbaa !55
  store i64 %108, ptr %105, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(28) %106, ptr noundef nonnull align 1 dereferenceable(28) @.str.65, i64 28, i1 false)
  %109 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 1
  store i64 %108, ptr %109, align 8, !tbaa !19
  %110 = load ptr, ptr %15, align 8, !tbaa !43
  %111 = getelementptr inbounds i8, ptr %110, i64 %108
  store i8 0, ptr %111, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #25
  %112 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(32) %15)
          to label %113 unwind label %164

113:                                              ; preds = %107
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %16) #25
  %114 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 2
  store ptr %114, ptr %16, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %114, ptr noundef nonnull align 1 dereferenceable(11) @.str.67, i64 11, i1 false)
  %115 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 1
  store i64 11, ptr %115, align 8, !tbaa !19
  %116 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 2, i32 1, i64 3
  store i8 0, ptr %116, align 1, !tbaa !20
  %117 = load float, ptr %3, align 4, !tbaa !75
  %118 = fpext float %117 to double
  %119 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %112, ptr noundef nonnull align 8 dereferenceable(32) %16, double noundef %118)
          to label %120 unwind label %166

120:                                              ; preds = %113
  %121 = load ptr, ptr %16, align 8, !tbaa !43
  %122 = icmp eq ptr %121, %114
  br i1 %122, label %124, label %123

123:                                              ; preds = %120
  call void @_ZdlPv(ptr noundef %121) #28
  br label %124

124:                                              ; preds = %120, %123
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %16) #25
  %125 = load ptr, ptr %15, align 8, !tbaa !43
  %126 = icmp eq ptr %125, %105
  br i1 %126, label %128, label %127

127:                                              ; preds = %124
  call void @_ZdlPv(ptr noundef %125) #28
  br label %128

128:                                              ; preds = %124, %127
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #25
  br label %179

129:                                              ; preds = %57
  %130 = landingpad { ptr, i32 }
          cleanup
  br label %140

131:                                              ; preds = %60
  %132 = landingpad { ptr, i32 }
          cleanup
  %133 = load ptr, ptr %12, align 8, !tbaa !43
  %134 = icmp eq ptr %133, %65
  br i1 %134, label %136, label %135

135:                                              ; preds = %131
  call void @_ZdlPv(ptr noundef %133) #28
  br label %136

136:                                              ; preds = %135, %131
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #25
  %137 = load ptr, ptr %11, align 8, !tbaa !43
  %138 = icmp eq ptr %137, %58
  br i1 %138, label %140, label %139

139:                                              ; preds = %136
  call void @_ZdlPv(ptr noundef %137) #28
  br label %140

140:                                              ; preds = %139, %136, %129
  %141 = phi { ptr, i32 } [ %130, %129 ], [ %132, %136 ], [ %132, %139 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #25
  br label %180

142:                                              ; preds = %76
  %143 = landingpad { ptr, i32 }
          cleanup
  br label %160

144:                                              ; preds = %79
  %145 = landingpad { ptr, i32 }
          cleanup
  br label %155

146:                                              ; preds = %85
  %147 = landingpad { ptr, i32 }
          cleanup
  br label %153

148:                                              ; preds = %88
  %149 = landingpad { ptr, i32 }
          cleanup
  %150 = load ptr, ptr %14, align 8, !tbaa !43
  %151 = icmp eq ptr %150, %86
  br i1 %151, label %153, label %152

152:                                              ; preds = %148
  call void @_ZdlPv(ptr noundef %150) #28
  br label %153

153:                                              ; preds = %152, %148, %146
  %154 = phi { ptr, i32 } [ %147, %146 ], [ %149, %148 ], [ %149, %152 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %14) #25
  br label %155

155:                                              ; preds = %153, %144
  %156 = phi { ptr, i32 } [ %154, %153 ], [ %145, %144 ]
  %157 = load ptr, ptr %13, align 8, !tbaa !43
  %158 = icmp eq ptr %157, %77
  br i1 %158, label %160, label %159

159:                                              ; preds = %155
  call void @_ZdlPv(ptr noundef %157) #28
  br label %160

160:                                              ; preds = %159, %155, %142
  %161 = phi { ptr, i32 } [ %143, %142 ], [ %156, %155 ], [ %156, %159 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #25
  br label %180

162:                                              ; preds = %104
  %163 = landingpad { ptr, i32 }
          cleanup
  br label %177

164:                                              ; preds = %107
  %165 = landingpad { ptr, i32 }
          cleanup
  br label %172

166:                                              ; preds = %113
  %167 = landingpad { ptr, i32 }
          cleanup
  %168 = load ptr, ptr %16, align 8, !tbaa !43
  %169 = icmp eq ptr %168, %114
  br i1 %169, label %171, label %170

170:                                              ; preds = %166
  call void @_ZdlPv(ptr noundef %168) #28
  br label %171

171:                                              ; preds = %170, %166
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %16) #25
  br label %172

172:                                              ; preds = %171, %164
  %173 = phi { ptr, i32 } [ %167, %171 ], [ %165, %164 ]
  %174 = load ptr, ptr %15, align 8, !tbaa !43
  %175 = icmp eq ptr %174, %105
  br i1 %175, label %177, label %176

176:                                              ; preds = %172
  call void @_ZdlPv(ptr noundef %174) #28
  br label %177

177:                                              ; preds = %176, %172, %162
  %178 = phi { ptr, i32 } [ %163, %162 ], [ %173, %172 ], [ %173, %176 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #25
  br label %180

179:                                              ; preds = %128, %55
  ret void

180:                                              ; preds = %177, %160, %140
  %181 = phi { ptr, i32 } [ %178, %177 ], [ %161, %160 ], [ %141, %140 ]
  resume { ptr, i32 } %181
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE23simple_mesh_descriptionIiEC2ERK3BoxS4_(ptr noundef nonnull align 8 dereferenceable(192) %0, ptr noundef nonnull align 4 dereferenceable(24) %1, ptr noundef nonnull align 4 dereferenceable(24) %2) unnamed_addr #7 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %struct.Box, align 4
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 0, ptr %5, align 8, !tbaa !102
  %6 = getelementptr inbounds i8, ptr %0, i64 16
  store ptr null, ptr %6, align 8, !tbaa !98
  %7 = getelementptr inbounds i8, ptr %0, i64 24
  store ptr %5, ptr %7, align 8, !tbaa !103
  %8 = getelementptr inbounds i8, ptr %0, i64 32
  store ptr %5, ptr %8, align 8, !tbaa !104
  %9 = getelementptr inbounds i8, ptr %0, i64 40
  store i64 0, ptr %9, align 8, !tbaa !105
  %10 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, ptr %10, align 8, !tbaa !102
  %11 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %11, align 8, !tbaa !98
  %12 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %10, ptr %12, align 8, !tbaa !103
  %13 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %10, ptr %13, align 8, !tbaa !104
  %14 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %14, align 8, !tbaa !105
  %15 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store i32 0, ptr %15, align 8, !tbaa !102
  %16 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %16, align 8, !tbaa !98
  %17 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %15, ptr %17, align 8, !tbaa !103
  %18 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %15, ptr %18, align 8, !tbaa !104
  %19 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %19, align 8, !tbaa !105
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  %20 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3
  %21 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4
  %22 = load i32, ptr %1, align 4, !tbaa !5
  store i32 %22, ptr %20, align 8, !tbaa !5
  %23 = getelementptr inbounds i32, ptr %1, i64 1
  %24 = load i32, ptr %23, align 4, !tbaa !5
  %25 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 1
  store i32 %24, ptr %25, align 4, !tbaa !5
  %26 = load i32, ptr %2, align 4, !tbaa !5
  store i32 %26, ptr %21, align 8, !tbaa !5
  %27 = getelementptr inbounds i32, ptr %2, i64 1
  %28 = load i32, ptr %27, align 4, !tbaa !5
  %29 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 1
  store i32 %28, ptr %29, align 4, !tbaa !5
  %30 = load i32, ptr %2, align 4, !tbaa !5
  store i32 %30, ptr %4, align 4, !tbaa !5
  %31 = load i32, ptr %27, align 4, !tbaa !5
  %32 = getelementptr inbounds i32, ptr %4, i64 1
  %33 = icmp sgt i32 %31, %30
  %34 = icmp eq i32 %31, %24
  %35 = select i1 %33, i1 %34, i1 false
  %36 = add nsw i32 %24, 1
  %37 = select i1 %35, i32 %36, i32 %31
  store i32 %37, ptr %32, align 4, !tbaa !5
  %38 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 2
  %39 = load i32, ptr %38, align 4, !tbaa !5
  %40 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 2
  store i32 %39, ptr %40, align 8, !tbaa !5
  %41 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 3
  %42 = load i32, ptr %41, align 4, !tbaa !5
  %43 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 3
  store i32 %42, ptr %43, align 4, !tbaa !5
  %44 = getelementptr inbounds [6 x i32], ptr %2, i64 0, i64 2
  %45 = load i32, ptr %44, align 4, !tbaa !5
  %46 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 2
  store i32 %45, ptr %46, align 8, !tbaa !5
  %47 = getelementptr inbounds [6 x i32], ptr %2, i64 0, i64 3
  %48 = load i32, ptr %47, align 4, !tbaa !5
  %49 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 3
  store i32 %48, ptr %49, align 4, !tbaa !5
  %50 = load i32, ptr %44, align 4, !tbaa !5
  %51 = getelementptr inbounds [6 x i32], ptr %4, i64 0, i64 2
  store i32 %50, ptr %51, align 4, !tbaa !5
  %52 = load i32, ptr %47, align 4, !tbaa !5
  %53 = getelementptr inbounds [6 x i32], ptr %4, i64 0, i64 3
  %54 = icmp sgt i32 %52, %50
  %55 = icmp eq i32 %52, %42
  %56 = select i1 %54, i1 %55, i1 false
  %57 = add nsw i32 %42, 1
  %58 = select i1 %56, i32 %57, i32 %52
  store i32 %58, ptr %53, align 4, !tbaa !5
  %59 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 4
  %60 = load i32, ptr %59, align 4, !tbaa !5
  %61 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 4
  store i32 %60, ptr %61, align 8, !tbaa !5
  %62 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 5
  %63 = load i32, ptr %62, align 4, !tbaa !5
  %64 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 5
  store i32 %63, ptr %64, align 4, !tbaa !5
  %65 = getelementptr inbounds [6 x i32], ptr %2, i64 0, i64 4
  %66 = load i32, ptr %65, align 4, !tbaa !5
  %67 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 4
  store i32 %66, ptr %67, align 8, !tbaa !5
  %68 = getelementptr inbounds [6 x i32], ptr %2, i64 0, i64 5
  %69 = load i32, ptr %68, align 4, !tbaa !5
  %70 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 5
  store i32 %69, ptr %70, align 4, !tbaa !5
  %71 = load i32, ptr %65, align 4, !tbaa !5
  %72 = getelementptr inbounds [6 x i32], ptr %4, i64 0, i64 4
  store i32 %71, ptr %72, align 4, !tbaa !5
  %73 = load i32, ptr %68, align 4, !tbaa !5
  %74 = getelementptr inbounds [6 x i32], ptr %4, i64 0, i64 5
  %75 = icmp sgt i32 %73, %71
  %76 = icmp eq i32 %73, %63
  %77 = select i1 %75, i1 %76, i1 false
  %78 = add nsw i32 %63, 1
  %79 = add nsw i32 %63, 1
  %80 = select i1 %77, i32 %79, i32 %78
  %81 = select i1 %77, i32 %79, i32 %73
  store i32 %81, ptr %74, align 4, !tbaa !5
  %82 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 2
  %83 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 1
  %84 = add nsw i32 %24, 1
  %85 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 3
  %86 = add nsw i32 %42, 1
  %87 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 5
  invoke void @_ZN6miniFE20create_map_id_to_rowIiEEviiiRK3BoxRSt3mapIT_S5_St4lessIS5_ESaISt4pairIKS5_S5_EEE(i32 noundef %84, i32 noundef %86, i32 noundef %80, ptr noundef nonnull align 4 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(48) %82)
          to label %88 unwind label %181

88:                                               ; preds = %3
  %89 = load i32, ptr %20, align 8, !tbaa !5
  %90 = load i32, ptr %21, align 8, !tbaa !5
  %91 = icmp eq i32 %89, %90
  br i1 %91, label %92, label %183

92:                                               ; preds = %88
  %93 = load i32, ptr %51, align 4, !tbaa !5
  %94 = load i32, ptr %72, align 4, !tbaa !5
  %95 = getelementptr inbounds [6 x i32], ptr %4, i64 0, i64 3
  %96 = load i32, ptr %95, align 4, !tbaa !5
  %97 = getelementptr inbounds [6 x i32], ptr %4, i64 0, i64 5
  %98 = load i32, ptr %97, align 4, !tbaa !5
  %99 = icmp sgt i32 %93, 0
  %100 = sext i1 %99 to i32
  %101 = add nsw i32 %93, %100
  %102 = icmp sgt i32 %94, 0
  %103 = sext i1 %102 to i32
  %104 = add nsw i32 %94, %103
  %105 = icmp sle i32 %96, %42
  %106 = zext i1 %105 to i32
  %107 = add nsw i32 %96, %106
  %108 = icmp sle i32 %98, %63
  %109 = zext i1 %108 to i32
  %110 = add nsw i32 %98, %109
  %111 = icmp slt i32 %104, %110
  br i1 %111, label %112, label %183

112:                                              ; preds = %92
  %113 = icmp slt i32 %101, %107
  %114 = icmp sgt i32 %24, -1
  br i1 %113, label %115, label %183

115:                                              ; preds = %112, %176
  %116 = phi i32 [ %177, %176 ], [ %104, %112 ]
  %117 = icmp sle i32 %116, %63
  %118 = mul i32 %116, %86
  br label %119

119:                                              ; preds = %115, %173
  %120 = phi i32 [ %101, %115 ], [ %174, %173 ]
  %121 = or i32 %120, %116
  %122 = icmp sgt i32 %121, -1
  br i1 %122, label %123, label %130

123:                                              ; preds = %119
  %124 = icmp sle i32 %120, %42
  %125 = and i1 %114, %124
  %126 = and i1 %117, %125
  br i1 %126, label %127, label %130

127:                                              ; preds = %123
  %128 = add i32 %120, %118
  %129 = mul i32 %128, %84
  br label %130

130:                                              ; preds = %127, %123, %119
  %131 = phi i32 [ %129, %127 ], [ -1, %119 ], [ -1, %123 ]
  %132 = invoke noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %131, ptr noundef nonnull align 8 dereferenceable(48) %82)
          to label %133 unwind label %179

133:                                              ; preds = %130
  %134 = load ptr, ptr %6, align 8, !tbaa !106
  %135 = icmp eq ptr %134, null
  br i1 %135, label %147, label %136

136:                                              ; preds = %133, %136
  %137 = phi ptr [ %144, %136 ], [ %134, %133 ]
  %138 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %137, i64 0, i32 1
  %139 = load i32, ptr %138, align 4, !tbaa !5
  %140 = icmp slt i32 %132, %139
  %141 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %137, i64 0, i32 2
  %142 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %137, i64 0, i32 3
  %143 = select i1 %140, ptr %141, ptr %142
  %144 = load ptr, ptr %143, align 8, !tbaa !106
  %145 = icmp eq ptr %144, null
  br i1 %145, label %146, label %136, !llvm.loop !107

146:                                              ; preds = %136
  br i1 %140, label %147, label %155

147:                                              ; preds = %146, %133
  %148 = phi ptr [ %137, %146 ], [ %5, %133 ]
  %149 = load ptr, ptr %7, align 8, !tbaa !103
  %150 = icmp eq ptr %148, %149
  br i1 %150, label %159, label %151

151:                                              ; preds = %147
  %152 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %148) #30
  %153 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %152, i64 0, i32 1
  %154 = load i32, ptr %153, align 4, !tbaa !5
  br label %155

155:                                              ; preds = %151, %146
  %156 = phi i32 [ %154, %151 ], [ %139, %146 ]
  %157 = phi ptr [ %148, %151 ], [ %137, %146 ]
  %158 = icmp slt i32 %156, %132
  br i1 %158, label %159, label %173

159:                                              ; preds = %155, %147
  %160 = phi ptr [ %148, %147 ], [ %157, %155 ]
  %161 = icmp eq ptr %5, %160
  br i1 %161, label %166, label %162

162:                                              ; preds = %159
  %163 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %160, i64 0, i32 1
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = icmp slt i32 %132, %164
  br label %166

166:                                              ; preds = %162, %159
  %167 = phi i1 [ %165, %162 ], [ true, %159 ]
  %168 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #27
          to label %169 unwind label %179

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %168, i64 0, i32 1
  store i32 %132, ptr %170, align 4, !tbaa !5
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %167, ptr noundef nonnull %168, ptr noundef nonnull %160, ptr noundef nonnull align 8 dereferenceable(32) %5) #25
  %171 = load i64, ptr %9, align 8, !tbaa !105
  %172 = add i64 %171, 1
  store i64 %172, ptr %9, align 8, !tbaa !105
  br label %173

173:                                              ; preds = %169, %155
  %174 = add nsw i32 %120, 1
  %175 = icmp slt i32 %174, %107
  br i1 %175, label %119, label %176, !llvm.loop !108

176:                                              ; preds = %173
  %177 = add nsw i32 %116, 1
  %178 = icmp slt i32 %177, %110
  br i1 %178, label %115, label %183, !llvm.loop !109

179:                                              ; preds = %166, %130
  %180 = landingpad { ptr, i32 }
          cleanup
  br label %837

181:                                              ; preds = %3
  %182 = landingpad { ptr, i32 }
          cleanup
  br label %837

183:                                              ; preds = %176, %112, %92, %88
  %184 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 2
  %185 = load i32, ptr %184, align 8, !tbaa !5
  %186 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 2
  %187 = load i32, ptr %186, align 8, !tbaa !5
  %188 = icmp eq i32 %185, %187
  br i1 %188, label %189, label %325

189:                                              ; preds = %183
  %190 = load i32, ptr %4, align 4, !tbaa !5
  %191 = load i32, ptr %72, align 4, !tbaa !5
  %192 = load i32, ptr %32, align 4, !tbaa !5
  %193 = getelementptr inbounds [6 x i32], ptr %4, i64 0, i64 5
  %194 = load i32, ptr %193, align 4, !tbaa !5
  %195 = icmp sgt i32 %190, 0
  %196 = sext i1 %195 to i32
  %197 = add nsw i32 %190, %196
  %198 = icmp sgt i32 %191, 0
  %199 = sext i1 %198 to i32
  %200 = add nsw i32 %191, %199
  %201 = icmp sle i32 %192, %24
  %202 = zext i1 %201 to i32
  %203 = add nsw i32 %192, %202
  %204 = icmp sle i32 %194, %63
  %205 = zext i1 %204 to i32
  %206 = add nsw i32 %194, %205
  %207 = icmp slt i32 %200, %206
  br i1 %207, label %208, label %325

208:                                              ; preds = %189
  %209 = icmp slt i32 %197, %203
  %210 = icmp sgt i32 %42, -1
  %211 = mul i32 %86, %84
  br i1 %209, label %212, label %325

212:                                              ; preds = %208, %316
  %213 = phi i32 [ %317, %316 ], [ %200, %208 ]
  %214 = icmp sle i32 %213, %63
  %215 = mul i32 %211, %213
  br label %216

216:                                              ; preds = %212, %313
  %217 = phi i32 [ %197, %212 ], [ %314, %313 ]
  %218 = or i32 %217, %213
  %219 = icmp sgt i32 %218, -1
  br i1 %219, label %220, label %226

220:                                              ; preds = %216
  %221 = icmp sle i32 %217, %24
  %222 = and i1 %210, %221
  %223 = and i1 %214, %222
  %224 = add i32 %217, %215
  %225 = select i1 %223, i32 %224, i32 -1
  br label %226

226:                                              ; preds = %220, %216
  %227 = phi i32 [ -1, %216 ], [ %225, %220 ]
  %228 = invoke noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %227, ptr noundef nonnull align 8 dereferenceable(48) %82)
          to label %229 unwind label %319

229:                                              ; preds = %226
  %230 = icmp slt i32 %228, 0
  br i1 %230, label %231, label %273

231:                                              ; preds = %229
  %232 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.68, i64 noundef 21)
          to label %233 unwind label %319

233:                                              ; preds = %231
  %234 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 noundef %217)
          to label %235 unwind label %319

235:                                              ; preds = %233
  %236 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %234, ptr noundef nonnull @.str.69, i64 noundef 5)
          to label %237 unwind label %319

237:                                              ; preds = %235
  %238 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %234, i32 noundef %213)
          to label %239 unwind label %319

239:                                              ; preds = %237
  %240 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %238, ptr noundef nonnull @.str.70, i64 noundef 30)
          to label %241 unwind label %319

241:                                              ; preds = %239
  %242 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %238, i32 noundef %228)
          to label %243 unwind label %319

243:                                              ; preds = %241
  %244 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %242, ptr noundef nonnull @.str.71, i64 noundef 13)
          to label %245 unwind label %319

245:                                              ; preds = %243
  %246 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %242, i32 noundef %227)
          to label %247 unwind label %319

247:                                              ; preds = %245
  %248 = load ptr, ptr %246, align 8, !tbaa !30
  %249 = getelementptr i8, ptr %248, i64 -24
  %250 = load i64, ptr %249, align 8
  %251 = getelementptr inbounds i8, ptr %246, i64 %250
  %252 = getelementptr inbounds %"class.std::basic_ios", ptr %251, i64 0, i32 5
  %253 = load ptr, ptr %252, align 8, !tbaa !32
  %254 = icmp eq ptr %253, null
  br i1 %254, label %321, label %255

255:                                              ; preds = %247
  %256 = getelementptr inbounds %"class.std::ctype", ptr %253, i64 0, i32 8
  %257 = load i8, ptr %256, align 8, !tbaa !40
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %262, label %259

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"class.std::ctype", ptr %253, i64 0, i32 9, i64 10
  %261 = load i8, ptr %260, align 1, !tbaa !20
  br label %268

262:                                              ; preds = %255
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %253)
          to label %263 unwind label %319

263:                                              ; preds = %262
  %264 = load ptr, ptr %253, align 8, !tbaa !30
  %265 = getelementptr inbounds ptr, ptr %264, i64 6
  %266 = load ptr, ptr %265, align 8
  %267 = invoke noundef signext i8 %266(ptr noundef nonnull align 8 dereferenceable(570) %253, i8 noundef signext 10)
          to label %268 unwind label %319

268:                                              ; preds = %263, %259
  %269 = phi i8 [ %261, %259 ], [ %267, %263 ]
  %270 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %246, i8 noundef signext %269)
          to label %271 unwind label %319

271:                                              ; preds = %268
  %272 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %270)
          to label %273 unwind label %319

273:                                              ; preds = %271, %229
  %274 = load ptr, ptr %6, align 8, !tbaa !106
  %275 = icmp eq ptr %274, null
  br i1 %275, label %287, label %276

276:                                              ; preds = %273, %276
  %277 = phi ptr [ %284, %276 ], [ %274, %273 ]
  %278 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %277, i64 0, i32 1
  %279 = load i32, ptr %278, align 4, !tbaa !5
  %280 = icmp slt i32 %228, %279
  %281 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %277, i64 0, i32 2
  %282 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %277, i64 0, i32 3
  %283 = select i1 %280, ptr %281, ptr %282
  %284 = load ptr, ptr %283, align 8, !tbaa !106
  %285 = icmp eq ptr %284, null
  br i1 %285, label %286, label %276, !llvm.loop !107

286:                                              ; preds = %276
  br i1 %280, label %287, label %295

287:                                              ; preds = %286, %273
  %288 = phi ptr [ %277, %286 ], [ %5, %273 ]
  %289 = load ptr, ptr %7, align 8, !tbaa !103
  %290 = icmp eq ptr %288, %289
  br i1 %290, label %299, label %291

291:                                              ; preds = %287
  %292 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %288) #30
  %293 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %292, i64 0, i32 1
  %294 = load i32, ptr %293, align 4, !tbaa !5
  br label %295

295:                                              ; preds = %291, %286
  %296 = phi i32 [ %294, %291 ], [ %279, %286 ]
  %297 = phi ptr [ %288, %291 ], [ %277, %286 ]
  %298 = icmp slt i32 %296, %228
  br i1 %298, label %299, label %313

299:                                              ; preds = %295, %287
  %300 = phi ptr [ %288, %287 ], [ %297, %295 ]
  %301 = icmp eq ptr %5, %300
  br i1 %301, label %306, label %302

302:                                              ; preds = %299
  %303 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %300, i64 0, i32 1
  %304 = load i32, ptr %303, align 4, !tbaa !5
  %305 = icmp slt i32 %228, %304
  br label %306

306:                                              ; preds = %302, %299
  %307 = phi i1 [ %305, %302 ], [ true, %299 ]
  %308 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #27
          to label %309 unwind label %319

309:                                              ; preds = %306
  %310 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %308, i64 0, i32 1
  store i32 %228, ptr %310, align 4, !tbaa !5
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %307, ptr noundef nonnull %308, ptr noundef nonnull %300, ptr noundef nonnull align 8 dereferenceable(32) %5) #25
  %311 = load i64, ptr %9, align 8, !tbaa !105
  %312 = add i64 %311, 1
  store i64 %312, ptr %9, align 8, !tbaa !105
  br label %313

313:                                              ; preds = %309, %295
  %314 = add nsw i32 %217, 1
  %315 = icmp slt i32 %314, %203
  br i1 %315, label %216, label %316, !llvm.loop !110

316:                                              ; preds = %313
  %317 = add nsw i32 %213, 1
  %318 = icmp slt i32 %317, %206
  br i1 %318, label %212, label %325, !llvm.loop !111

319:                                              ; preds = %306, %271, %268, %263, %262, %245, %243, %241, %239, %237, %235, %233, %231, %226
  %320 = landingpad { ptr, i32 }
          cleanup
  br label %837

321:                                              ; preds = %247
  invoke void @_ZSt16__throw_bad_castv() #26
          to label %322 unwind label %323

322:                                              ; preds = %321
  unreachable

323:                                              ; preds = %321
  %324 = landingpad { ptr, i32 }
          cleanup
  br label %837

325:                                              ; preds = %316, %208, %189, %183
  %326 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 4
  %327 = load i32, ptr %326, align 8, !tbaa !5
  %328 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 4
  %329 = load i32, ptr %328, align 8, !tbaa !5
  %330 = icmp eq i32 %327, %329
  br i1 %330, label %331, label %418

331:                                              ; preds = %325
  %332 = load i32, ptr %4, align 4, !tbaa !5
  %333 = load i32, ptr %51, align 4, !tbaa !5
  %334 = load i32, ptr %32, align 4, !tbaa !5
  %335 = getelementptr inbounds [6 x i32], ptr %4, i64 0, i64 3
  %336 = load i32, ptr %335, align 4, !tbaa !5
  %337 = icmp sgt i32 %332, 0
  %338 = sext i1 %337 to i32
  %339 = add nsw i32 %332, %338
  %340 = icmp sgt i32 %333, 0
  %341 = sext i1 %340 to i32
  %342 = add nsw i32 %333, %341
  %343 = icmp sle i32 %334, %24
  %344 = zext i1 %343 to i32
  %345 = add nsw i32 %334, %344
  %346 = icmp sle i32 %336, %42
  %347 = zext i1 %346 to i32
  %348 = add nsw i32 %336, %347
  %349 = icmp slt i32 %342, %348
  br i1 %349, label %350, label %418

350:                                              ; preds = %331
  %351 = icmp slt i32 %339, %345
  %352 = icmp sgt i32 %63, -1
  br i1 %351, label %353, label %418

353:                                              ; preds = %350, %413
  %354 = phi i32 [ %414, %413 ], [ %342, %350 ]
  %355 = icmp sle i32 %354, %42
  %356 = mul i32 %354, %84
  br label %357

357:                                              ; preds = %353, %410
  %358 = phi i32 [ %339, %353 ], [ %411, %410 ]
  %359 = or i32 %358, %354
  %360 = icmp sgt i32 %359, -1
  br i1 %360, label %361, label %367

361:                                              ; preds = %357
  %362 = icmp sle i32 %358, %24
  %363 = and i1 %355, %362
  %364 = and i1 %352, %363
  %365 = add i32 %358, %356
  %366 = select i1 %364, i32 %365, i32 -1
  br label %367

367:                                              ; preds = %361, %357
  %368 = phi i32 [ -1, %357 ], [ %366, %361 ]
  %369 = invoke noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %368, ptr noundef nonnull align 8 dereferenceable(48) %82)
          to label %370 unwind label %416

370:                                              ; preds = %367
  %371 = load ptr, ptr %6, align 8, !tbaa !106
  %372 = icmp eq ptr %371, null
  br i1 %372, label %384, label %373

373:                                              ; preds = %370, %373
  %374 = phi ptr [ %381, %373 ], [ %371, %370 ]
  %375 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %374, i64 0, i32 1
  %376 = load i32, ptr %375, align 4, !tbaa !5
  %377 = icmp slt i32 %369, %376
  %378 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %374, i64 0, i32 2
  %379 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %374, i64 0, i32 3
  %380 = select i1 %377, ptr %378, ptr %379
  %381 = load ptr, ptr %380, align 8, !tbaa !106
  %382 = icmp eq ptr %381, null
  br i1 %382, label %383, label %373, !llvm.loop !107

383:                                              ; preds = %373
  br i1 %377, label %384, label %392

384:                                              ; preds = %383, %370
  %385 = phi ptr [ %374, %383 ], [ %5, %370 ]
  %386 = load ptr, ptr %7, align 8, !tbaa !103
  %387 = icmp eq ptr %385, %386
  br i1 %387, label %396, label %388

388:                                              ; preds = %384
  %389 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %385) #30
  %390 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %389, i64 0, i32 1
  %391 = load i32, ptr %390, align 4, !tbaa !5
  br label %392

392:                                              ; preds = %388, %383
  %393 = phi i32 [ %391, %388 ], [ %376, %383 ]
  %394 = phi ptr [ %385, %388 ], [ %374, %383 ]
  %395 = icmp slt i32 %393, %369
  br i1 %395, label %396, label %410

396:                                              ; preds = %392, %384
  %397 = phi ptr [ %385, %384 ], [ %394, %392 ]
  %398 = icmp eq ptr %5, %397
  br i1 %398, label %403, label %399

399:                                              ; preds = %396
  %400 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %397, i64 0, i32 1
  %401 = load i32, ptr %400, align 4, !tbaa !5
  %402 = icmp slt i32 %369, %401
  br label %403

403:                                              ; preds = %399, %396
  %404 = phi i1 [ %402, %399 ], [ true, %396 ]
  %405 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #27
          to label %406 unwind label %416

406:                                              ; preds = %403
  %407 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %405, i64 0, i32 1
  store i32 %369, ptr %407, align 4, !tbaa !5
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %404, ptr noundef nonnull %405, ptr noundef nonnull %397, ptr noundef nonnull align 8 dereferenceable(32) %5) #25
  %408 = load i64, ptr %9, align 8, !tbaa !105
  %409 = add i64 %408, 1
  store i64 %409, ptr %9, align 8, !tbaa !105
  br label %410

410:                                              ; preds = %406, %392
  %411 = add nsw i32 %358, 1
  %412 = icmp slt i32 %411, %345
  br i1 %412, label %357, label %413, !llvm.loop !112

413:                                              ; preds = %410
  %414 = add nsw i32 %354, 1
  %415 = icmp slt i32 %414, %348
  br i1 %415, label %353, label %418, !llvm.loop !113

416:                                              ; preds = %403, %367
  %417 = landingpad { ptr, i32 }
          cleanup
  br label %837

418:                                              ; preds = %413, %350, %331, %325
  %419 = load i32, ptr %83, align 4, !tbaa !5
  %420 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 1
  %421 = load i32, ptr %420, align 4, !tbaa !5
  %422 = icmp eq i32 %419, %421
  br i1 %422, label %423, label %558

423:                                              ; preds = %418
  %424 = load i32, ptr %72, align 4, !tbaa !5
  %425 = load i32, ptr %51, align 4, !tbaa !5
  %426 = getelementptr inbounds [6 x i32], ptr %4, i64 0, i64 5
  %427 = load i32, ptr %426, align 4, !tbaa !5
  %428 = getelementptr inbounds [6 x i32], ptr %4, i64 0, i64 3
  %429 = load i32, ptr %428, align 4, !tbaa !5
  %430 = icmp sgt i32 %424, 0
  %431 = sext i1 %430 to i32
  %432 = add nsw i32 %424, %431
  %433 = icmp sgt i32 %425, 0
  %434 = sext i1 %433 to i32
  %435 = add nsw i32 %425, %434
  %436 = icmp sle i32 %427, %63
  %437 = zext i1 %436 to i32
  %438 = add nsw i32 %427, %437
  %439 = icmp sle i32 %429, %42
  %440 = zext i1 %439 to i32
  %441 = add nsw i32 %429, %440
  %442 = icmp slt i32 %435, %441
  %443 = icmp slt i32 %432, %438
  %444 = select i1 %442, i1 %443, i1 false
  br i1 %444, label %445, label %558

445:                                              ; preds = %423, %505
  %446 = phi i32 [ %506, %505 ], [ %435, %423 ]
  %447 = or i32 %446, %24
  %448 = icmp sle i32 %446, %42
  %449 = freeze i1 %448
  br i1 %449, label %450, label %508

450:                                              ; preds = %445, %502
  %451 = phi i32 [ %503, %502 ], [ %432, %445 ]
  %452 = or i32 %447, %451
  %453 = icmp sgt i32 %452, -1
  %454 = icmp sle i32 %451, %63
  %455 = select i1 %453, i1 %454, i1 false
  %456 = mul i32 %451, %86
  %457 = add i32 %456, %446
  %458 = mul i32 %457, %84
  %459 = add i32 %458, %24
  %460 = select i1 %455, i32 %459, i32 -1
  %461 = invoke noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %460, ptr noundef nonnull align 8 dereferenceable(48) %82)
          to label %462 unwind label %554

462:                                              ; preds = %450
  %463 = load ptr, ptr %11, align 8, !tbaa !106
  %464 = icmp eq ptr %463, null
  br i1 %464, label %476, label %465

465:                                              ; preds = %462, %465
  %466 = phi ptr [ %473, %465 ], [ %463, %462 ]
  %467 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %466, i64 0, i32 1
  %468 = load i32, ptr %467, align 4, !tbaa !5
  %469 = icmp slt i32 %461, %468
  %470 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %466, i64 0, i32 2
  %471 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %466, i64 0, i32 3
  %472 = select i1 %469, ptr %470, ptr %471
  %473 = load ptr, ptr %472, align 8, !tbaa !106
  %474 = icmp eq ptr %473, null
  br i1 %474, label %475, label %465, !llvm.loop !107

475:                                              ; preds = %465
  br i1 %469, label %476, label %484

476:                                              ; preds = %475, %462
  %477 = phi ptr [ %466, %475 ], [ %10, %462 ]
  %478 = load ptr, ptr %12, align 8, !tbaa !103
  %479 = icmp eq ptr %477, %478
  br i1 %479, label %488, label %480

480:                                              ; preds = %476
  %481 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %477) #30
  %482 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %481, i64 0, i32 1
  %483 = load i32, ptr %482, align 4, !tbaa !5
  br label %484

484:                                              ; preds = %480, %475
  %485 = phi i32 [ %483, %480 ], [ %468, %475 ]
  %486 = phi ptr [ %477, %480 ], [ %466, %475 ]
  %487 = icmp slt i32 %485, %461
  br i1 %487, label %488, label %502

488:                                              ; preds = %484, %476
  %489 = phi ptr [ %477, %476 ], [ %486, %484 ]
  %490 = icmp eq ptr %10, %489
  br i1 %490, label %495, label %491

491:                                              ; preds = %488
  %492 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %489, i64 0, i32 1
  %493 = load i32, ptr %492, align 4, !tbaa !5
  %494 = icmp slt i32 %461, %493
  br label %495

495:                                              ; preds = %491, %488
  %496 = phi i1 [ %494, %491 ], [ true, %488 ]
  %497 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #27
          to label %498 unwind label %554

498:                                              ; preds = %495
  %499 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %497, i64 0, i32 1
  store i32 %461, ptr %499, align 4, !tbaa !5
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %496, ptr noundef nonnull %497, ptr noundef nonnull %489, ptr noundef nonnull align 8 dereferenceable(32) %10) #25
  %500 = load i64, ptr %14, align 8, !tbaa !105
  %501 = add i64 %500, 1
  store i64 %501, ptr %14, align 8, !tbaa !105
  br label %502

502:                                              ; preds = %498, %484
  %503 = add nsw i32 %451, 1
  %504 = icmp slt i32 %503, %438
  br i1 %504, label %450, label %505, !llvm.loop !114

505:                                              ; preds = %551, %502
  %506 = add nsw i32 %446, 1
  %507 = icmp slt i32 %506, %441
  br i1 %507, label %445, label %558, !llvm.loop !115

508:                                              ; preds = %445, %551
  %509 = phi i32 [ %552, %551 ], [ %432, %445 ]
  %510 = invoke noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef -1, ptr noundef nonnull align 8 dereferenceable(48) %82)
          to label %511 unwind label %556

511:                                              ; preds = %508
  %512 = load ptr, ptr %11, align 8, !tbaa !106
  %513 = icmp eq ptr %512, null
  br i1 %513, label %525, label %514

514:                                              ; preds = %511, %514
  %515 = phi ptr [ %522, %514 ], [ %512, %511 ]
  %516 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %515, i64 0, i32 1
  %517 = load i32, ptr %516, align 4, !tbaa !5
  %518 = icmp slt i32 %510, %517
  %519 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %515, i64 0, i32 2
  %520 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %515, i64 0, i32 3
  %521 = select i1 %518, ptr %519, ptr %520
  %522 = load ptr, ptr %521, align 8, !tbaa !106
  %523 = icmp eq ptr %522, null
  br i1 %523, label %524, label %514, !llvm.loop !107

524:                                              ; preds = %514
  br i1 %518, label %525, label %533

525:                                              ; preds = %524, %511
  %526 = phi ptr [ %515, %524 ], [ %10, %511 ]
  %527 = load ptr, ptr %12, align 8, !tbaa !103
  %528 = icmp eq ptr %526, %527
  br i1 %528, label %537, label %529

529:                                              ; preds = %525
  %530 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %526) #30
  %531 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %530, i64 0, i32 1
  %532 = load i32, ptr %531, align 4, !tbaa !5
  br label %533

533:                                              ; preds = %529, %524
  %534 = phi i32 [ %532, %529 ], [ %517, %524 ]
  %535 = phi ptr [ %526, %529 ], [ %515, %524 ]
  %536 = icmp slt i32 %534, %510
  br i1 %536, label %537, label %551

537:                                              ; preds = %533, %525
  %538 = phi ptr [ %526, %525 ], [ %535, %533 ]
  %539 = icmp eq ptr %10, %538
  br i1 %539, label %544, label %540

540:                                              ; preds = %537
  %541 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %538, i64 0, i32 1
  %542 = load i32, ptr %541, align 4, !tbaa !5
  %543 = icmp slt i32 %510, %542
  br label %544

544:                                              ; preds = %540, %537
  %545 = phi i1 [ %543, %540 ], [ true, %537 ]
  %546 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #27
          to label %547 unwind label %556

547:                                              ; preds = %544
  %548 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %546, i64 0, i32 1
  store i32 %510, ptr %548, align 4, !tbaa !5
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %545, ptr noundef nonnull %546, ptr noundef nonnull %538, ptr noundef nonnull align 8 dereferenceable(32) %10) #25
  %549 = load i64, ptr %14, align 8, !tbaa !105
  %550 = add i64 %549, 1
  store i64 %550, ptr %14, align 8, !tbaa !105
  br label %551

551:                                              ; preds = %547, %533
  %552 = add nsw i32 %509, 1
  %553 = icmp slt i32 %552, %438
  br i1 %553, label %508, label %505, !llvm.loop !114

554:                                              ; preds = %495, %450
  %555 = landingpad { ptr, i32 }
          cleanup
  br label %837

556:                                              ; preds = %544, %508
  %557 = landingpad { ptr, i32 }
          cleanup
  br label %837

558:                                              ; preds = %505, %423, %418
  %559 = load i32, ptr %85, align 4, !tbaa !5
  %560 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 3
  %561 = load i32, ptr %560, align 4, !tbaa !5
  %562 = icmp eq i32 %559, %561
  br i1 %562, label %563, label %697

563:                                              ; preds = %558
  %564 = load i32, ptr %72, align 4, !tbaa !5
  %565 = load i32, ptr %4, align 4, !tbaa !5
  %566 = getelementptr inbounds [6 x i32], ptr %4, i64 0, i64 5
  %567 = load i32, ptr %566, align 4, !tbaa !5
  %568 = load i32, ptr %32, align 4, !tbaa !5
  %569 = icmp sgt i32 %564, 0
  %570 = sext i1 %569 to i32
  %571 = add nsw i32 %564, %570
  %572 = icmp sgt i32 %565, 0
  %573 = sext i1 %572 to i32
  %574 = add nsw i32 %565, %573
  %575 = icmp sle i32 %567, %63
  %576 = zext i1 %575 to i32
  %577 = add nsw i32 %567, %576
  %578 = icmp sle i32 %568, %24
  %579 = zext i1 %578 to i32
  %580 = add nsw i32 %568, %579
  %581 = icmp slt i32 %574, %580
  %582 = icmp slt i32 %571, %577
  %583 = select i1 %581, i1 %582, i1 false
  br i1 %583, label %584, label %697

584:                                              ; preds = %563, %644
  %585 = phi i32 [ %645, %644 ], [ %574, %563 ]
  %586 = or i32 %585, %42
  %587 = icmp sle i32 %585, %24
  %588 = freeze i1 %587
  br i1 %588, label %589, label %647

589:                                              ; preds = %584, %641
  %590 = phi i32 [ %642, %641 ], [ %571, %584 ]
  %591 = or i32 %586, %590
  %592 = icmp sgt i32 %591, -1
  %593 = icmp sle i32 %590, %63
  %594 = select i1 %592, i1 %593, i1 false
  %595 = mul i32 %590, %86
  %596 = add i32 %595, %42
  %597 = mul i32 %596, %84
  %598 = add i32 %597, %585
  %599 = select i1 %594, i32 %598, i32 -1
  %600 = invoke noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %599, ptr noundef nonnull align 8 dereferenceable(48) %82)
          to label %601 unwind label %693

601:                                              ; preds = %589
  %602 = load ptr, ptr %6, align 8, !tbaa !106
  %603 = icmp eq ptr %602, null
  br i1 %603, label %615, label %604

604:                                              ; preds = %601, %604
  %605 = phi ptr [ %612, %604 ], [ %602, %601 ]
  %606 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %605, i64 0, i32 1
  %607 = load i32, ptr %606, align 4, !tbaa !5
  %608 = icmp slt i32 %600, %607
  %609 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %605, i64 0, i32 2
  %610 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %605, i64 0, i32 3
  %611 = select i1 %608, ptr %609, ptr %610
  %612 = load ptr, ptr %611, align 8, !tbaa !106
  %613 = icmp eq ptr %612, null
  br i1 %613, label %614, label %604, !llvm.loop !107

614:                                              ; preds = %604
  br i1 %608, label %615, label %623

615:                                              ; preds = %614, %601
  %616 = phi ptr [ %605, %614 ], [ %5, %601 ]
  %617 = load ptr, ptr %7, align 8, !tbaa !103
  %618 = icmp eq ptr %616, %617
  br i1 %618, label %627, label %619

619:                                              ; preds = %615
  %620 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %616) #30
  %621 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %620, i64 0, i32 1
  %622 = load i32, ptr %621, align 4, !tbaa !5
  br label %623

623:                                              ; preds = %619, %614
  %624 = phi i32 [ %622, %619 ], [ %607, %614 ]
  %625 = phi ptr [ %616, %619 ], [ %605, %614 ]
  %626 = icmp slt i32 %624, %600
  br i1 %626, label %627, label %641

627:                                              ; preds = %623, %615
  %628 = phi ptr [ %616, %615 ], [ %625, %623 ]
  %629 = icmp eq ptr %5, %628
  br i1 %629, label %634, label %630

630:                                              ; preds = %627
  %631 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %628, i64 0, i32 1
  %632 = load i32, ptr %631, align 4, !tbaa !5
  %633 = icmp slt i32 %600, %632
  br label %634

634:                                              ; preds = %630, %627
  %635 = phi i1 [ %633, %630 ], [ true, %627 ]
  %636 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #27
          to label %637 unwind label %693

637:                                              ; preds = %634
  %638 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %636, i64 0, i32 1
  store i32 %600, ptr %638, align 4, !tbaa !5
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %635, ptr noundef nonnull %636, ptr noundef nonnull %628, ptr noundef nonnull align 8 dereferenceable(32) %5) #25
  %639 = load i64, ptr %9, align 8, !tbaa !105
  %640 = add i64 %639, 1
  store i64 %640, ptr %9, align 8, !tbaa !105
  br label %641

641:                                              ; preds = %637, %623
  %642 = add nsw i32 %590, 1
  %643 = icmp slt i32 %642, %577
  br i1 %643, label %589, label %644, !llvm.loop !116

644:                                              ; preds = %690, %641
  %645 = add nsw i32 %585, 1
  %646 = icmp slt i32 %645, %580
  br i1 %646, label %584, label %697, !llvm.loop !117

647:                                              ; preds = %584, %690
  %648 = phi i32 [ %691, %690 ], [ %571, %584 ]
  %649 = invoke noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef -1, ptr noundef nonnull align 8 dereferenceable(48) %82)
          to label %650 unwind label %695

650:                                              ; preds = %647
  %651 = load ptr, ptr %6, align 8, !tbaa !106
  %652 = icmp eq ptr %651, null
  br i1 %652, label %664, label %653

653:                                              ; preds = %650, %653
  %654 = phi ptr [ %661, %653 ], [ %651, %650 ]
  %655 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %654, i64 0, i32 1
  %656 = load i32, ptr %655, align 4, !tbaa !5
  %657 = icmp slt i32 %649, %656
  %658 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %654, i64 0, i32 2
  %659 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %654, i64 0, i32 3
  %660 = select i1 %657, ptr %658, ptr %659
  %661 = load ptr, ptr %660, align 8, !tbaa !106
  %662 = icmp eq ptr %661, null
  br i1 %662, label %663, label %653, !llvm.loop !107

663:                                              ; preds = %653
  br i1 %657, label %664, label %672

664:                                              ; preds = %663, %650
  %665 = phi ptr [ %654, %663 ], [ %5, %650 ]
  %666 = load ptr, ptr %7, align 8, !tbaa !103
  %667 = icmp eq ptr %665, %666
  br i1 %667, label %676, label %668

668:                                              ; preds = %664
  %669 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %665) #30
  %670 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %669, i64 0, i32 1
  %671 = load i32, ptr %670, align 4, !tbaa !5
  br label %672

672:                                              ; preds = %668, %663
  %673 = phi i32 [ %671, %668 ], [ %656, %663 ]
  %674 = phi ptr [ %665, %668 ], [ %654, %663 ]
  %675 = icmp slt i32 %673, %649
  br i1 %675, label %676, label %690

676:                                              ; preds = %672, %664
  %677 = phi ptr [ %665, %664 ], [ %674, %672 ]
  %678 = icmp eq ptr %5, %677
  br i1 %678, label %683, label %679

679:                                              ; preds = %676
  %680 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %677, i64 0, i32 1
  %681 = load i32, ptr %680, align 4, !tbaa !5
  %682 = icmp slt i32 %649, %681
  br label %683

683:                                              ; preds = %679, %676
  %684 = phi i1 [ %682, %679 ], [ true, %676 ]
  %685 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #27
          to label %686 unwind label %695

686:                                              ; preds = %683
  %687 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %685, i64 0, i32 1
  store i32 %649, ptr %687, align 4, !tbaa !5
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %684, ptr noundef nonnull %685, ptr noundef nonnull %677, ptr noundef nonnull align 8 dereferenceable(32) %5) #25
  %688 = load i64, ptr %9, align 8, !tbaa !105
  %689 = add i64 %688, 1
  store i64 %689, ptr %9, align 8, !tbaa !105
  br label %690

690:                                              ; preds = %686, %672
  %691 = add nsw i32 %648, 1
  %692 = icmp slt i32 %691, %577
  br i1 %692, label %647, label %644, !llvm.loop !116

693:                                              ; preds = %634, %589
  %694 = landingpad { ptr, i32 }
          cleanup
  br label %837

695:                                              ; preds = %683, %647
  %696 = landingpad { ptr, i32 }
          cleanup
  br label %837

697:                                              ; preds = %644, %563, %558
  %698 = load i32, ptr %87, align 4, !tbaa !5
  %699 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 5
  %700 = load i32, ptr %699, align 4, !tbaa !5
  %701 = icmp eq i32 %698, %700
  br i1 %701, label %702, label %836

702:                                              ; preds = %697
  %703 = load i32, ptr %51, align 4, !tbaa !5
  %704 = load i32, ptr %4, align 4, !tbaa !5
  %705 = getelementptr inbounds [6 x i32], ptr %4, i64 0, i64 3
  %706 = load i32, ptr %705, align 4, !tbaa !5
  %707 = load i32, ptr %32, align 4, !tbaa !5
  %708 = icmp sgt i32 %703, 0
  %709 = sext i1 %708 to i32
  %710 = add nsw i32 %703, %709
  %711 = icmp sgt i32 %704, 0
  %712 = sext i1 %711 to i32
  %713 = add nsw i32 %704, %712
  %714 = icmp sle i32 %706, %42
  %715 = zext i1 %714 to i32
  %716 = add nsw i32 %706, %715
  %717 = icmp sle i32 %707, %24
  %718 = zext i1 %717 to i32
  %719 = add nsw i32 %707, %718
  %720 = icmp slt i32 %713, %719
  br i1 %720, label %721, label %836

721:                                              ; preds = %702
  %722 = icmp slt i32 %710, %716
  %723 = mul i32 %63, %86
  br i1 %722, label %724, label %836

724:                                              ; preds = %721, %783
  %725 = phi i32 [ %784, %783 ], [ %713, %721 ]
  %726 = or i32 %725, %63
  %727 = icmp sle i32 %725, %24
  %728 = freeze i1 %727
  br i1 %728, label %729, label %786

729:                                              ; preds = %724, %780
  %730 = phi i32 [ %781, %780 ], [ %710, %724 ]
  %731 = or i32 %726, %730
  %732 = icmp sgt i32 %731, -1
  %733 = icmp sle i32 %730, %42
  %734 = select i1 %732, i1 %733, i1 false
  %735 = add i32 %730, %723
  %736 = mul i32 %735, %84
  %737 = add i32 %736, %725
  %738 = select i1 %734, i32 %737, i32 -1
  %739 = invoke noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %738, ptr noundef nonnull align 8 dereferenceable(48) %82)
          to label %740 unwind label %832

740:                                              ; preds = %729
  %741 = load ptr, ptr %6, align 8, !tbaa !106
  %742 = icmp eq ptr %741, null
  br i1 %742, label %754, label %743

743:                                              ; preds = %740, %743
  %744 = phi ptr [ %751, %743 ], [ %741, %740 ]
  %745 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %744, i64 0, i32 1
  %746 = load i32, ptr %745, align 4, !tbaa !5
  %747 = icmp slt i32 %739, %746
  %748 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %744, i64 0, i32 2
  %749 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %744, i64 0, i32 3
  %750 = select i1 %747, ptr %748, ptr %749
  %751 = load ptr, ptr %750, align 8, !tbaa !106
  %752 = icmp eq ptr %751, null
  br i1 %752, label %753, label %743, !llvm.loop !107

753:                                              ; preds = %743
  br i1 %747, label %754, label %762

754:                                              ; preds = %753, %740
  %755 = phi ptr [ %744, %753 ], [ %5, %740 ]
  %756 = load ptr, ptr %7, align 8, !tbaa !103
  %757 = icmp eq ptr %755, %756
  br i1 %757, label %766, label %758

758:                                              ; preds = %754
  %759 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %755) #30
  %760 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %759, i64 0, i32 1
  %761 = load i32, ptr %760, align 4, !tbaa !5
  br label %762

762:                                              ; preds = %758, %753
  %763 = phi i32 [ %761, %758 ], [ %746, %753 ]
  %764 = phi ptr [ %755, %758 ], [ %744, %753 ]
  %765 = icmp slt i32 %763, %739
  br i1 %765, label %766, label %780

766:                                              ; preds = %762, %754
  %767 = phi ptr [ %755, %754 ], [ %764, %762 ]
  %768 = icmp eq ptr %5, %767
  br i1 %768, label %773, label %769

769:                                              ; preds = %766
  %770 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %767, i64 0, i32 1
  %771 = load i32, ptr %770, align 4, !tbaa !5
  %772 = icmp slt i32 %739, %771
  br label %773

773:                                              ; preds = %769, %766
  %774 = phi i1 [ %772, %769 ], [ true, %766 ]
  %775 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #27
          to label %776 unwind label %832

776:                                              ; preds = %773
  %777 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %775, i64 0, i32 1
  store i32 %739, ptr %777, align 4, !tbaa !5
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %774, ptr noundef nonnull %775, ptr noundef nonnull %767, ptr noundef nonnull align 8 dereferenceable(32) %5) #25
  %778 = load i64, ptr %9, align 8, !tbaa !105
  %779 = add i64 %778, 1
  store i64 %779, ptr %9, align 8, !tbaa !105
  br label %780

780:                                              ; preds = %776, %762
  %781 = add nsw i32 %730, 1
  %782 = icmp slt i32 %781, %716
  br i1 %782, label %729, label %783, !llvm.loop !118

783:                                              ; preds = %829, %780
  %784 = add nsw i32 %725, 1
  %785 = icmp slt i32 %784, %719
  br i1 %785, label %724, label %836, !llvm.loop !119

786:                                              ; preds = %724, %829
  %787 = phi i32 [ %830, %829 ], [ %710, %724 ]
  %788 = invoke noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef -1, ptr noundef nonnull align 8 dereferenceable(48) %82)
          to label %789 unwind label %834

789:                                              ; preds = %786
  %790 = load ptr, ptr %6, align 8, !tbaa !106
  %791 = icmp eq ptr %790, null
  br i1 %791, label %803, label %792

792:                                              ; preds = %789, %792
  %793 = phi ptr [ %800, %792 ], [ %790, %789 ]
  %794 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %793, i64 0, i32 1
  %795 = load i32, ptr %794, align 4, !tbaa !5
  %796 = icmp slt i32 %788, %795
  %797 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %793, i64 0, i32 2
  %798 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %793, i64 0, i32 3
  %799 = select i1 %796, ptr %797, ptr %798
  %800 = load ptr, ptr %799, align 8, !tbaa !106
  %801 = icmp eq ptr %800, null
  br i1 %801, label %802, label %792, !llvm.loop !107

802:                                              ; preds = %792
  br i1 %796, label %803, label %811

803:                                              ; preds = %802, %789
  %804 = phi ptr [ %793, %802 ], [ %5, %789 ]
  %805 = load ptr, ptr %7, align 8, !tbaa !103
  %806 = icmp eq ptr %804, %805
  br i1 %806, label %815, label %807

807:                                              ; preds = %803
  %808 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %804) #30
  %809 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %808, i64 0, i32 1
  %810 = load i32, ptr %809, align 4, !tbaa !5
  br label %811

811:                                              ; preds = %807, %802
  %812 = phi i32 [ %810, %807 ], [ %795, %802 ]
  %813 = phi ptr [ %804, %807 ], [ %793, %802 ]
  %814 = icmp slt i32 %812, %788
  br i1 %814, label %815, label %829

815:                                              ; preds = %811, %803
  %816 = phi ptr [ %804, %803 ], [ %813, %811 ]
  %817 = icmp eq ptr %5, %816
  br i1 %817, label %822, label %818

818:                                              ; preds = %815
  %819 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %816, i64 0, i32 1
  %820 = load i32, ptr %819, align 4, !tbaa !5
  %821 = icmp slt i32 %788, %820
  br label %822

822:                                              ; preds = %818, %815
  %823 = phi i1 [ %821, %818 ], [ true, %815 ]
  %824 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #27
          to label %825 unwind label %834

825:                                              ; preds = %822
  %826 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %824, i64 0, i32 1
  store i32 %788, ptr %826, align 4, !tbaa !5
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %823, ptr noundef nonnull %824, ptr noundef nonnull %816, ptr noundef nonnull align 8 dereferenceable(32) %5) #25
  %827 = load i64, ptr %9, align 8, !tbaa !105
  %828 = add i64 %827, 1
  store i64 %828, ptr %9, align 8, !tbaa !105
  br label %829

829:                                              ; preds = %825, %811
  %830 = add nsw i32 %787, 1
  %831 = icmp slt i32 %830, %716
  br i1 %831, label %786, label %783, !llvm.loop !118

832:                                              ; preds = %773, %729
  %833 = landingpad { ptr, i32 }
          cleanup
  br label %837

834:                                              ; preds = %822, %786
  %835 = landingpad { ptr, i32 }
          cleanup
  br label %837

836:                                              ; preds = %783, %721, %702, %697
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  ret void

837:                                              ; preds = %832, %834, %693, %695, %554, %556, %319, %323, %179, %416, %181
  %838 = phi { ptr, i32 } [ %182, %181 ], [ %180, %179 ], [ %417, %416 ], [ %320, %319 ], [ %324, %323 ], [ %555, %554 ], [ %557, %556 ], [ %694, %693 ], [ %696, %695 ], [ %833, %832 ], [ %835, %834 ]
  %839 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 1
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  call void @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %82) #25
  call void @_ZNSt3setIiSt4lessIiESaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %839) #25
  call void @_ZNSt3setIiSt4lessIiESaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) #25
  resume { ptr, i32 } %838
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef i32 @_ZN6miniFE25generate_matrix_structureINS_9CSRMatrixIdiiEEEEiRKNS_23simple_mesh_descriptionINT_17GlobalOrdinalTypeEEERS4_(ptr noundef nonnull align 8 dereferenceable(192) %0, ptr noundef nonnull align 8 dereferenceable(132) %1) local_unnamed_addr #7 comdat personality ptr @__gxx_personality_v0 {
  %3 = alloca %struct.MatrixInitOp, align 8
  %4 = alloca %"class.std::__cxx11::basic_ostringstream", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::vector.16", align 8
  %7 = alloca %"class.std::vector.16", align 8
  %8 = alloca %"class.std::vector.16", align 8
  %9 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 1
  %10 = load i32, ptr %9, align 4, !tbaa !5
  %11 = add nsw i32 %10, 1
  %12 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 3
  %13 = load i32, ptr %12, align 4, !tbaa !5
  %14 = add nsw i32 %13, 1
  %15 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 5
  %16 = load i32, ptr %15, align 4, !tbaa !5
  %17 = add nsw i32 %16, 1
  %18 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4
  %19 = load i32, ptr %18, align 8, !tbaa !5
  %20 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 1
  %21 = load i32, ptr %20, align 4, !tbaa !5
  %22 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 2
  %23 = load i32, ptr %22, align 8, !tbaa !5
  %24 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 3
  %25 = load i32, ptr %24, align 4, !tbaa !5
  %26 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 4
  %27 = load i32, ptr %26, align 8, !tbaa !5
  %28 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 5
  %29 = load i32, ptr %28, align 4, !tbaa !5
  %30 = icmp sgt i32 %21, %19
  %31 = icmp eq i32 %21, %10
  %32 = select i1 %30, i1 %31, i1 false
  %33 = zext i1 %32 to i32
  %34 = add nsw i32 %21, %33
  %35 = icmp sgt i32 %25, %23
  %36 = icmp eq i32 %25, %13
  %37 = select i1 %35, i1 %36, i1 false
  %38 = zext i1 %37 to i32
  %39 = add nsw i32 %25, %38
  %40 = icmp sgt i32 %29, %27
  %41 = icmp eq i32 %29, %16
  %42 = select i1 %40, i1 %41, i1 false
  %43 = zext i1 %42 to i32
  %44 = add nsw i32 %29, %43
  %45 = mul i32 %14, %11
  %46 = mul i32 %45, %17
  %47 = sub nsw i32 %34, %19
  %48 = sub nsw i32 %39, %23
  %49 = sub nsw i32 %44, %27
  %50 = mul nsw i32 %48, %47
  %51 = mul nsw i32 %50, %49
  invoke void @_ZN6miniFE9CSRMatrixIdiiE13reserve_spaceEjj(ptr noundef nonnull align 8 dereferenceable(132) %1, i32 noundef %51, i32 noundef 27)
          to label %100 unwind label %52

52:                                               ; preds = %2
  %53 = landingpad { ptr, i32 }
          catch ptr @_ZTISt9exception
          catch ptr null
  %54 = extractvalue { ptr, i32 } %53, 0
  %55 = extractvalue { ptr, i32 } %53, 1
  %56 = tail call i32 @llvm.eh.typeid.for(ptr nonnull @_ZTISt9exception) #25
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %58, label %459

58:                                               ; preds = %52
  %59 = tail call ptr @__cxa_begin_catch(ptr %54) #25
  call void @llvm.lifetime.start.p0(i64 376, ptr nonnull %4) #25
  invoke void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1Ev(ptr noundef nonnull align 8 dereferenceable(112) %4)
          to label %60 unwind label %76

60:                                               ; preds = %58
  %61 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %4, ptr noundef nonnull @.str.78, i64 noundef 99)
          to label %62 unwind label %78

62:                                               ; preds = %60
  %63 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %4, i32 noundef %51)
          to label %64 unwind label %78

64:                                               ; preds = %62
  %65 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %63, ptr noundef nonnull @.str.79, i64 noundef 2)
          to label %66 unwind label %78

66:                                               ; preds = %64
  %67 = load ptr, ptr %59, align 8, !tbaa !30
  %68 = getelementptr inbounds ptr, ptr %67, i64 2
  %69 = load ptr, ptr %68, align 8
  %70 = call noundef ptr %69(ptr noundef nonnull align 8 dereferenceable(8) %59) #25
  %71 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %4, ptr noundef %70)
          to label %72 unwind label %78

72:                                               ; preds = %66
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #25
  invoke void @_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %5, ptr noundef nonnull align 8 dereferenceable(112) %4)
          to label %73 unwind label %80

73:                                               ; preds = %72
  %74 = call ptr @__cxa_allocate_exception(i64 16) #25
  invoke void @_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(16) %74, ptr noundef nonnull align 8 dereferenceable(32) %5)
          to label %75 unwind label %82

75:                                               ; preds = %73
  invoke void @__cxa_throw(ptr nonnull %74, ptr nonnull @_ZTISt13runtime_error, ptr nonnull @_ZNSt13runtime_errorD1Ev) #26
          to label %505 unwind label %84

76:                                               ; preds = %58
  %77 = landingpad { ptr, i32 }
          catch ptr null
  br label %96

78:                                               ; preds = %64, %60, %66, %62
  %79 = landingpad { ptr, i32 }
          catch ptr null
  br label %94

80:                                               ; preds = %72
  %81 = landingpad { ptr, i32 }
          catch ptr null
  br label %92

82:                                               ; preds = %73
  %83 = landingpad { ptr, i32 }
          catch ptr null
  call void @__cxa_free_exception(ptr %74) #25
  br label %86

84:                                               ; preds = %75
  %85 = landingpad { ptr, i32 }
          catch ptr null
  br label %86

86:                                               ; preds = %84, %82
  %87 = phi { ptr, i32 } [ %85, %84 ], [ %83, %82 ]
  %88 = load ptr, ptr %5, align 8, !tbaa !43
  %89 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 2
  %90 = icmp eq ptr %88, %89
  br i1 %90, label %92, label %91

91:                                               ; preds = %86
  call void @_ZdlPv(ptr noundef %88) #28
  br label %92

92:                                               ; preds = %91, %86, %80
  %93 = phi { ptr, i32 } [ %81, %80 ], [ %87, %86 ], [ %87, %91 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #25
  br label %94

94:                                               ; preds = %92, %78
  %95 = phi { ptr, i32 } [ %93, %92 ], [ %79, %78 ]
  call void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev(ptr noundef nonnull align 8 dereferenceable(112) %4) #25
  br label %96

96:                                               ; preds = %94, %76
  %97 = phi { ptr, i32 } [ %95, %94 ], [ %77, %76 ]
  call void @llvm.lifetime.end.p0(i64 376, ptr nonnull %4) #25
  invoke void @__cxa_end_catch()
          to label %98 unwind label %502

98:                                               ; preds = %96
  %99 = extractvalue { ptr, i32 } %97, 0
  br label %459

100:                                              ; preds = %2
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #25
  %101 = sext i32 %51 to i64
  %102 = icmp slt i32 %51, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.34) #26
          to label %104 unwind label %401

104:                                              ; preds = %103
  unreachable

105:                                              ; preds = %100
  %106 = icmp eq i32 %51, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %105
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  br label %118

108:                                              ; preds = %105
  %109 = shl nuw nsw i64 %101, 2
  %110 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %109) #27
          to label %111 unwind label %401

111:                                              ; preds = %108
  store ptr %110, ptr %6, align 8, !tbaa !87
  %112 = getelementptr inbounds i32, ptr %110, i64 %101
  %113 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %6, i64 0, i32 2
  store ptr %112, ptr %113, align 8, !tbaa !120
  store i32 0, ptr %110, align 4, !tbaa !5
  %114 = getelementptr i32, ptr %110, i64 1
  %115 = icmp eq i32 %51, 1
  br i1 %115, label %118, label %116

116:                                              ; preds = %111
  %117 = add nsw i64 %109, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %114, i8 0, i64 %117, i1 false), !tbaa !5
  br label %118

118:                                              ; preds = %107, %111, %116
  %119 = phi ptr [ %114, %111 ], [ %112, %116 ], [ null, %107 ]
  %120 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %6, i64 0, i32 1
  store ptr %119, ptr %120, align 8, !tbaa !86
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #25
  %121 = add nuw nsw i32 %51, 1
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i8, ptr %7, i64 8
  store i64 0, ptr %123, align 8
  %124 = shl nuw nsw i64 %122, 2
  %125 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %124) #27
          to label %126 unwind label %403

126:                                              ; preds = %118
  store ptr %125, ptr %7, align 8, !tbaa !87
  %127 = getelementptr inbounds i32, ptr %125, i64 %122
  %128 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %127, ptr %128, align 8, !tbaa !120
  store i32 0, ptr %125, align 4, !tbaa !5
  %129 = getelementptr i32, ptr %125, i64 1
  br i1 %106, label %130, label %132

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %129, ptr %131, align 8, !tbaa !86
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false)
  br label %144

132:                                              ; preds = %126
  %133 = add nsw i64 %124, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %129, i8 0, i64 %133, i1 false), !tbaa !5
  %134 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %127, ptr %134, align 8, !tbaa !86
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #25
  %135 = mul nsw i32 %51, 3
  %136 = sext i32 %135 to i64
  %137 = shl nuw nsw i64 %136, 2
  %138 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %137) #27
          to label %139 unwind label %405

139:                                              ; preds = %132
  store ptr %138, ptr %8, align 8, !tbaa !87
  %140 = getelementptr inbounds i32, ptr %138, i64 %136
  %141 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %8, i64 0, i32 2
  store ptr %140, ptr %141, align 8, !tbaa !120
  store i32 0, ptr %138, align 4, !tbaa !5
  %142 = getelementptr i32, ptr %138, i64 1
  %143 = add nsw i64 %137, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %142, i8 0, i64 %143, i1 false), !tbaa !5
  br label %144

144:                                              ; preds = %130, %139
  %145 = phi ptr [ %140, %139 ], [ null, %130 ]
  %146 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %8, i64 0, i32 1
  store ptr %145, ptr %146, align 8, !tbaa !86
  %147 = icmp sgt i32 %44, %27
  br i1 %147, label %148, label %396

148:                                              ; preds = %144
  %149 = icmp sgt i32 %39, %23
  %150 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 2
  %151 = icmp sgt i32 %34, %19
  %152 = select i1 %149, i1 %151, i1 false
  br i1 %152, label %153, label %396

153:                                              ; preds = %148
  %154 = insertelement <2 x i32> poison, i32 %10, i64 0
  %155 = shufflevector <2 x i32> %154, <2 x i32> poison, <2 x i32> zeroinitializer
  %156 = insertelement <4 x i32> poison, i32 %16, i64 0
  %157 = shufflevector <4 x i32> %156, <4 x i32> poison, <4 x i32> zeroinitializer
  %158 = insertelement <4 x i32> poison, i32 %14, i64 0
  %159 = shufflevector <4 x i32> %158, <4 x i32> poison, <4 x i32> zeroinitializer
  %160 = insertelement <4 x i32> poison, i32 %11, i64 0
  %161 = shufflevector <4 x i32> %160, <4 x i32> poison, <4 x i32> zeroinitializer
  %162 = insertelement <4 x i32> poison, i32 %46, i64 0
  %163 = shufflevector <4 x i32> %162, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %164

164:                                              ; preds = %153, %391
  %165 = phi i32 [ %392, %391 ], [ %27, %153 ]
  %166 = phi i32 [ %384, %391 ], [ 0, %153 ]
  %167 = phi i32 [ %385, %391 ], [ 0, %153 ]
  %168 = icmp sle i32 %165, %16
  %169 = mul i32 %165, %14
  %170 = insertelement <4 x i32> poison, i32 %165, i64 0
  %171 = shufflevector <4 x i32> %170, <4 x i32> poison, <4 x i32> zeroinitializer
  %172 = add nsw <4 x i32> %171, <i32 -1, i32 0, i32 1, i32 2>
  %173 = icmp sle <4 x i32> %172, %157
  %174 = mul <4 x i32> %172, %159
  %175 = freeze <4 x i1> %173
  %176 = and <4 x i1> %175, <i1 true, i1 true, i1 true, i1 false>
  br label %177

177:                                              ; preds = %388, %164
  %178 = phi i32 [ %23, %164 ], [ %389, %388 ]
  %179 = phi i32 [ %166, %164 ], [ %384, %388 ]
  %180 = phi i32 [ %167, %164 ], [ %385, %388 ]
  %181 = or i32 %178, %165
  %182 = icmp sle i32 %178, %13
  %183 = freeze i1 %182
  %184 = add i32 %178, %169
  %185 = mul i32 %184, %11
  %186 = add nsw i32 %178, -1
  %187 = icmp sle i32 %186, %13
  %188 = freeze i1 %187
  %189 = icmp slt i32 %178, %13
  %190 = freeze i1 %189
  %191 = add nsw i32 %178, 1
  %192 = insertelement <4 x i32> poison, i32 %186, i64 0
  %193 = shufflevector <4 x i32> %192, <4 x i32> poison, <4 x i32> zeroinitializer
  %194 = insertelement <4 x i32> poison, i32 %178, i64 0
  %195 = shufflevector <4 x i32> %194, <4 x i32> poison, <4 x i32> zeroinitializer
  %196 = insertelement <4 x i32> poison, i32 %191, i64 0
  %197 = shufflevector <4 x i32> %196, <4 x i32> poison, <4 x i32> zeroinitializer
  %198 = insertelement <4 x i1> poison, i1 %190, i64 0
  %199 = shufflevector <4 x i1> %198, <4 x i1> poison, <4 x i32> zeroinitializer
  %200 = add <4 x i32> %193, %174
  %201 = mul <4 x i32> %200, %161
  %202 = or <4 x i32> %193, %172
  %203 = xor i1 %188, true
  %204 = insertelement <4 x i1> poison, i1 %203, i64 0
  %205 = shufflevector <4 x i1> %204, <4 x i1> poison, <4 x i32> zeroinitializer
  %206 = select <4 x i1> %176, <4 x i1> %205, <4 x i1> zeroinitializer
  %207 = add <4 x i32> %195, %174
  %208 = mul <4 x i32> %207, %161
  %209 = or <4 x i32> %195, %172
  %210 = xor i1 %183, true
  %211 = insertelement <4 x i1> poison, i1 %210, i64 0
  %212 = shufflevector <4 x i1> %211, <4 x i1> poison, <4 x i32> zeroinitializer
  %213 = select <4 x i1> %176, <4 x i1> %212, <4 x i1> zeroinitializer
  %214 = add <4 x i32> %197, %174
  %215 = mul <4 x i32> %214, %161
  %216 = or <4 x i32> %197, %172
  %217 = select <4 x i1> %176, <4 x i1> %199, <4 x i1> <i1 false, i1 false, i1 false, i1 poison>
  %218 = xor <4 x i1> %199, <i1 true, i1 true, i1 true, i1 poison>
  %219 = select <4 x i1> %176, <4 x i1> %218, <4 x i1> <i1 false, i1 false, i1 false, i1 poison>
  br label %220

220:                                              ; preds = %235, %177
  %221 = phi i32 [ %19, %177 ], [ %386, %235 ]
  %222 = phi i32 [ %179, %177 ], [ %384, %235 ]
  %223 = phi i32 [ %180, %177 ], [ %385, %235 ]
  %224 = or i32 %181, %221
  %225 = icmp sgt i32 %224, -1
  br i1 %225, label %226, label %232

226:                                              ; preds = %220
  %227 = icmp sle i32 %221, %10
  %228 = and i1 %227, %168
  %229 = and i1 %228, %183
  %230 = add i32 %221, %185
  %231 = select i1 %229, i32 %230, i32 -1
  br label %232

232:                                              ; preds = %226, %220
  %233 = phi i32 [ -1, %220 ], [ %231, %226 ]
  %234 = invoke noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %233, ptr noundef nonnull align 8 dereferenceable(48) %150)
          to label %235 unwind label %394

235:                                              ; preds = %232
  %236 = zext i32 %223 to i64
  %237 = load ptr, ptr %6, align 8, !tbaa !87
  %238 = getelementptr inbounds i32, ptr %237, i64 %236
  store i32 %234, ptr %238, align 4, !tbaa !5
  %239 = mul i32 %223, 3
  %240 = zext i32 %239 to i64
  %241 = load ptr, ptr %8, align 8, !tbaa !87
  %242 = getelementptr inbounds i32, ptr %241, i64 %240
  store i32 %221, ptr %242, align 4, !tbaa !5
  %243 = add i32 %239, 1
  %244 = zext i32 %243 to i64
  %245 = getelementptr inbounds i32, ptr %241, i64 %244
  store i32 %178, ptr %245, align 4, !tbaa !5
  %246 = add i32 %239, 2
  %247 = zext i32 %246 to i64
  %248 = getelementptr inbounds i32, ptr %241, i64 %247
  store i32 %165, ptr %248, align 4, !tbaa !5
  %249 = load ptr, ptr %7, align 8, !tbaa !87
  %250 = getelementptr inbounds i32, ptr %249, i64 %236
  store i32 %222, ptr %250, align 4, !tbaa !5
  %251 = insertelement <2 x i32> poison, i32 %221, i64 0
  %252 = shufflevector <2 x i32> %251, <2 x i32> poison, <2 x i32> zeroinitializer
  %253 = icmp slt <2 x i32> %252, %155
  %254 = add nsw i32 %221, 1
  %255 = icmp sle <2 x i32> %252, %155
  %256 = add nsw <2 x i32> %252, <i32 -1, i32 -1>
  %257 = add nsw i32 %221, 1
  %258 = icmp sle <2 x i32> %256, %155
  %259 = icmp slt i32 %221, %10
  %260 = add nsw i32 %221, 1
  %261 = icmp sle i32 %221, %10
  %262 = add nsw i32 %221, -1
  %263 = icmp sle i32 %262, %10
  %264 = insertelement <4 x i32> <i32 poison, i32 0, i32 0, i32 0>, i32 %222, i64 0
  %265 = insertelement <4 x i32> poison, i32 %262, i64 0
  %266 = shufflevector <4 x i32> %265, <4 x i32> poison, <4 x i32> zeroinitializer
  %267 = insertelement <4 x i1> poison, i1 %263, i64 0
  %268 = shufflevector <4 x i1> %267, <4 x i1> poison, <4 x i32> zeroinitializer
  %269 = insertelement <4 x i32> poison, i32 %221, i64 0
  %270 = shufflevector <4 x i32> %269, <4 x i32> poison, <4 x i32> zeroinitializer
  %271 = insertelement <4 x i1> poison, i1 %261, i64 0
  %272 = shufflevector <4 x i1> %271, <4 x i1> poison, <4 x i32> zeroinitializer
  %273 = insertelement <4 x i32> poison, i32 %260, i64 0
  %274 = shufflevector <4 x i32> %273, <4 x i32> poison, <4 x i32> zeroinitializer
  %275 = insertelement <4 x i1> poison, i1 %259, i64 0
  %276 = shufflevector <4 x i1> %275, <4 x i1> poison, <4 x i32> zeroinitializer
  %277 = shufflevector <2 x i32> %256, <2 x i32> poison, <4 x i32> zeroinitializer
  %278 = shufflevector <2 x i1> %258, <2 x i1> poison, <4 x i32> zeroinitializer
  %279 = shufflevector <2 x i1> %255, <2 x i1> poison, <4 x i32> zeroinitializer
  %280 = insertelement <4 x i32> poison, i32 %257, i64 0
  %281 = shufflevector <4 x i32> %280, <4 x i32> poison, <4 x i32> zeroinitializer
  %282 = shufflevector <2 x i1> %253, <2 x i1> poison, <4 x i32> zeroinitializer
  %283 = shufflevector <2 x i32> %256, <2 x i32> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %284 = shufflevector <2 x i1> %258, <2 x i1> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %285 = shufflevector <2 x i1> %255, <2 x i1> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %286 = insertelement <4 x i32> poison, i32 %254, i64 0
  %287 = shufflevector <4 x i32> %286, <4 x i32> poison, <4 x i32> zeroinitializer
  %288 = shufflevector <2 x i1> %253, <2 x i1> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %289 = or <4 x i32> %202, %266
  %290 = icmp sgt <4 x i32> %289, <i32 -1, i32 -1, i32 -1, i32 -1>
  %291 = select <4 x i1> %290, <4 x i1> %268, <4 x i1> zeroinitializer
  %292 = add <4 x i32> %266, %201
  %293 = select <4 x i1> %291, <4 x i32> %292, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %294 = icmp sgt <4 x i32> %293, <i32 -1, i32 -1, i32 -1, i32 -1>
  %295 = icmp slt <4 x i32> %293, %163
  %296 = select <4 x i1> %294, <4 x i1> %295, <4 x i1> zeroinitializer
  %297 = zext <4 x i1> %296 to <4 x i32>
  %298 = add <4 x i32> %264, %297
  %299 = or <4 x i32> %202, %270
  %300 = icmp sgt <4 x i32> %299, <i32 -1, i32 -1, i32 -1, i32 -1>
  %301 = select <4 x i1> %300, <4 x i1> %272, <4 x i1> zeroinitializer
  %302 = add <4 x i32> %270, %201
  %303 = select <4 x i1> %301, <4 x i32> %302, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %304 = icmp sgt <4 x i32> %303, <i32 -1, i32 -1, i32 -1, i32 -1>
  %305 = icmp slt <4 x i32> %303, %163
  %306 = select <4 x i1> %304, <4 x i1> %305, <4 x i1> zeroinitializer
  %307 = zext <4 x i1> %306 to <4 x i32>
  %308 = add <4 x i32> %298, %307
  %309 = or <4 x i32> %202, %274
  %310 = icmp sgt <4 x i32> %309, <i32 -1, i32 -1, i32 -1, i32 -1>
  %311 = select <4 x i1> %310, <4 x i1> %276, <4 x i1> zeroinitializer
  %312 = add <4 x i32> %274, %201
  %313 = select <4 x i1> %311, <4 x i32> %312, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %314 = icmp sgt <4 x i32> %313, <i32 -1, i32 -1, i32 -1, i32 -1>
  %315 = icmp slt <4 x i32> %313, %163
  %316 = select <4 x i1> %314, <4 x i1> %315, <4 x i1> zeroinitializer
  %317 = zext <4 x i1> %316 to <4 x i32>
  %318 = add <4 x i32> %308, %317
  %319 = select <4 x i1> %206, <4 x i32> %264, <4 x i32> %318
  %320 = or <4 x i32> %209, %277
  %321 = icmp sgt <4 x i32> %320, <i32 -1, i32 -1, i32 -1, i32 -1>
  %322 = select <4 x i1> %321, <4 x i1> %278, <4 x i1> zeroinitializer
  %323 = add <4 x i32> %277, %208
  %324 = select <4 x i1> %322, <4 x i32> %323, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %325 = icmp sgt <4 x i32> %324, <i32 -1, i32 -1, i32 -1, i32 -1>
  %326 = icmp slt <4 x i32> %324, %163
  %327 = select <4 x i1> %325, <4 x i1> %326, <4 x i1> zeroinitializer
  %328 = zext <4 x i1> %327 to <4 x i32>
  %329 = add <4 x i32> %319, %328
  %330 = or <4 x i32> %209, %270
  %331 = icmp sgt <4 x i32> %330, <i32 -1, i32 -1, i32 -1, i32 -1>
  %332 = select <4 x i1> %331, <4 x i1> %279, <4 x i1> zeroinitializer
  %333 = add <4 x i32> %270, %208
  %334 = select <4 x i1> %332, <4 x i32> %333, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %335 = icmp sgt <4 x i32> %334, <i32 -1, i32 -1, i32 -1, i32 -1>
  %336 = icmp slt <4 x i32> %334, %163
  %337 = select <4 x i1> %335, <4 x i1> %336, <4 x i1> zeroinitializer
  %338 = zext <4 x i1> %337 to <4 x i32>
  %339 = add <4 x i32> %329, %338
  %340 = or <4 x i32> %209, %281
  %341 = icmp sgt <4 x i32> %340, <i32 -1, i32 -1, i32 -1, i32 -1>
  %342 = select <4 x i1> %341, <4 x i1> %282, <4 x i1> zeroinitializer
  %343 = add <4 x i32> %281, %208
  %344 = select <4 x i1> %342, <4 x i32> %343, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %345 = icmp sgt <4 x i32> %344, <i32 -1, i32 -1, i32 -1, i32 -1>
  %346 = icmp slt <4 x i32> %344, %163
  %347 = select <4 x i1> %345, <4 x i1> %346, <4 x i1> zeroinitializer
  %348 = zext <4 x i1> %347 to <4 x i32>
  %349 = add <4 x i32> %339, %348
  %350 = select <4 x i1> %213, <4 x i32> %319, <4 x i32> %349
  %351 = or <4 x i32> %216, %283
  %352 = icmp sgt <4 x i32> %351, <i32 -1, i32 -1, i32 -1, i32 -1>
  %353 = select <4 x i1> %352, <4 x i1> %284, <4 x i1> zeroinitializer
  %354 = add <4 x i32> %283, %215
  %355 = select <4 x i1> %353, <4 x i32> %354, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %356 = icmp sgt <4 x i32> %355, <i32 -1, i32 -1, i32 -1, i32 -1>
  %357 = icmp slt <4 x i32> %355, %163
  %358 = select <4 x i1> %356, <4 x i1> %357, <4 x i1> zeroinitializer
  %359 = zext <4 x i1> %358 to <4 x i32>
  %360 = add <4 x i32> %350, %359
  %361 = or <4 x i32> %216, %270
  %362 = icmp sgt <4 x i32> %361, <i32 -1, i32 -1, i32 -1, i32 -1>
  %363 = select <4 x i1> %362, <4 x i1> %285, <4 x i1> zeroinitializer
  %364 = add <4 x i32> %270, %215
  %365 = select <4 x i1> %363, <4 x i32> %364, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %366 = icmp sgt <4 x i32> %365, <i32 -1, i32 -1, i32 -1, i32 -1>
  %367 = icmp slt <4 x i32> %365, %163
  %368 = select <4 x i1> %366, <4 x i1> %367, <4 x i1> zeroinitializer
  %369 = zext <4 x i1> %368 to <4 x i32>
  %370 = add <4 x i32> %360, %369
  %371 = or <4 x i32> %216, %287
  %372 = icmp sgt <4 x i32> %371, <i32 -1, i32 -1, i32 -1, i32 -1>
  %373 = select <4 x i1> %372, <4 x i1> %288, <4 x i1> zeroinitializer
  %374 = add <4 x i32> %287, %215
  %375 = select <4 x i1> %373, <4 x i32> %374, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %376 = icmp sgt <4 x i32> %375, <i32 -1, i32 -1, i32 -1, i32 -1>
  %377 = icmp slt <4 x i32> %375, %163
  %378 = select <4 x i1> %376, <4 x i1> %377, <4 x i1> zeroinitializer
  %379 = zext <4 x i1> %378 to <4 x i32>
  %380 = add <4 x i32> %370, %379
  %381 = select <4 x i1> %217, <4 x i32> %380, <4 x i32> %264
  %382 = select <4 x i1> %219, <4 x i32> %350, <4 x i32> %381
  %383 = insertelement <4 x i32> %382, i32 0, i64 3
  %384 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %383)
  %385 = add i32 %223, 1
  %386 = add nsw i32 %221, 1
  %387 = icmp eq i32 %386, %34
  br i1 %387, label %388, label %220, !llvm.loop !121

388:                                              ; preds = %235
  %389 = add nsw i32 %178, 1
  %390 = icmp eq i32 %389, %39
  br i1 %390, label %391, label %177, !llvm.loop !122

391:                                              ; preds = %388
  %392 = add nsw i32 %165, 1
  %393 = icmp eq i32 %392, %44
  br i1 %393, label %396, label %164, !llvm.loop !123

394:                                              ; preds = %232
  %395 = landingpad { ptr, i32 }
          catch ptr null
  br label %441

396:                                              ; preds = %391, %148, %144
  %397 = phi ptr [ %125, %144 ], [ %125, %148 ], [ %249, %391 ]
  %398 = phi i32 [ 0, %144 ], [ 0, %148 ], [ %385, %391 ]
  %399 = phi i32 [ 0, %144 ], [ 0, %148 ], [ %384, %391 ]
  %400 = icmp eq i32 %398, %51
  br i1 %400, label %416, label %407

401:                                              ; preds = %108, %103
  %402 = landingpad { ptr, i32 }
          catch ptr null
  br label %456

403:                                              ; preds = %118
  %404 = landingpad { ptr, i32 }
          catch ptr null
  br label %451

405:                                              ; preds = %132
  %406 = landingpad { ptr, i32 }
          catch ptr null
  br label %446

407:                                              ; preds = %396
  %408 = tail call ptr @__cxa_allocate_exception(i64 16) #25
  invoke void @_ZNSt13runtime_errorC1EPKc(ptr noundef nonnull align 8 dereferenceable(16) %408, ptr noundef nonnull @.str.80)
          to label %409 unwind label %410

409:                                              ; preds = %407
  invoke void @__cxa_throw(ptr nonnull %408, ptr nonnull @_ZTISt13runtime_error, ptr nonnull @_ZNSt13runtime_errorD1Ev) #26
          to label %505 unwind label %414

410:                                              ; preds = %407
  %411 = landingpad { ptr, i32 }
          catch ptr null
  tail call void @__cxa_free_exception(ptr %408) #25
  br label %441

412:                                              ; preds = %423
  %413 = landingpad { ptr, i32 }
          catch ptr null
  br label %441

414:                                              ; preds = %409, %416
  %415 = landingpad { ptr, i32 }
          catch ptr null
  br label %441

416:                                              ; preds = %396
  %417 = zext i32 %51 to i64
  %418 = getelementptr inbounds i32, ptr %397, i64 %417
  store i32 %399, ptr %418, align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %3) #25
  invoke void @_ZN12MatrixInitOpIN6miniFE9CSRMatrixIdiiEEEC2ERKSt6vectorIiSaIiEES8_S8_iiiiRKNS0_23simple_mesh_descriptionIiEERS2_(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %8, i32 noundef %11, i32 noundef %14, i32 noundef %17, i32 noundef %46, ptr noundef nonnull align 8 dereferenceable(192) %0, ptr noundef nonnull align 8 dereferenceable(132) %1)
          to label %419 unwind label %414

419:                                              ; preds = %416
  %420 = getelementptr inbounds %struct.MatrixInitOp, ptr %3, i64 0, i32 11
  %421 = load i32, ptr %420, align 8, !tbaa !124
  %422 = icmp sgt i32 %421, 0
  br i1 %422, label %423, label %429

423:                                              ; preds = %419, %425
  %424 = phi i32 [ %426, %425 ], [ 0, %419 ]
  invoke void @_ZN12MatrixInitOpIN6miniFE9CSRMatrixIdiiEEEclEi(ptr noundef nonnull align 8 dereferenceable(88) %3, i32 noundef %424)
          to label %425 unwind label %412

425:                                              ; preds = %423
  %426 = add nuw nsw i32 %424, 1
  %427 = load i32, ptr %420, align 8, !tbaa !124
  %428 = icmp slt i32 %426, %427
  br i1 %428, label %423, label %429, !llvm.loop !126

429:                                              ; preds = %425, %419
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %3) #25
  %430 = load ptr, ptr %8, align 8, !tbaa !87
  %431 = icmp eq ptr %430, null
  br i1 %431, label %433, label %432

432:                                              ; preds = %429
  call void @_ZdlPv(ptr noundef nonnull %430) #28
  br label %433

433:                                              ; preds = %429, %432
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #25
  %434 = load ptr, ptr %7, align 8, !tbaa !87
  %435 = icmp eq ptr %434, null
  br i1 %435, label %437, label %436

436:                                              ; preds = %433
  call void @_ZdlPv(ptr noundef nonnull %434) #28
  br label %437

437:                                              ; preds = %433, %436
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #25
  %438 = load ptr, ptr %6, align 8, !tbaa !87
  %439 = icmp eq ptr %438, null
  br i1 %439, label %496, label %440

440:                                              ; preds = %437
  call void @_ZdlPv(ptr noundef nonnull %438) #28
  br label %496

441:                                              ; preds = %412, %414, %410, %394
  %442 = phi { ptr, i32 } [ %395, %394 ], [ %411, %410 ], [ %413, %412 ], [ %415, %414 ]
  %443 = load ptr, ptr %8, align 8, !tbaa !87
  %444 = icmp eq ptr %443, null
  br i1 %444, label %446, label %445

445:                                              ; preds = %441
  call void @_ZdlPv(ptr noundef nonnull %443) #28
  br label %446

446:                                              ; preds = %445, %441, %405
  %447 = phi { ptr, i32 } [ %406, %405 ], [ %442, %441 ], [ %442, %445 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #25
  %448 = load ptr, ptr %7, align 8, !tbaa !87
  %449 = icmp eq ptr %448, null
  br i1 %449, label %451, label %450

450:                                              ; preds = %446
  call void @_ZdlPv(ptr noundef nonnull %448) #28
  br label %451

451:                                              ; preds = %450, %446, %403
  %452 = phi { ptr, i32 } [ %404, %403 ], [ %447, %446 ], [ %447, %450 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #25
  %453 = load ptr, ptr %6, align 8, !tbaa !87
  %454 = icmp eq ptr %453, null
  br i1 %454, label %456, label %455

455:                                              ; preds = %451
  call void @_ZdlPv(ptr noundef nonnull %453) #28
  br label %456

456:                                              ; preds = %455, %451, %401
  %457 = phi { ptr, i32 } [ %402, %401 ], [ %452, %451 ], [ %452, %455 ]
  %458 = extractvalue { ptr, i32 } %457, 0
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  br label %459

459:                                              ; preds = %456, %98, %52
  %460 = phi ptr [ %458, %456 ], [ %99, %98 ], [ %54, %52 ]
  %461 = call ptr @__cxa_begin_catch(ptr %460) #25
  %462 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.81, i64 noundef 5)
          to label %463 unwind label %499

463:                                              ; preds = %459
  %464 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 noundef 0)
          to label %465 unwind label %499

465:                                              ; preds = %463
  %466 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %464, ptr noundef nonnull @.str.82, i64 noundef 88)
          to label %467 unwind label %499

467:                                              ; preds = %465
  %468 = load ptr, ptr %464, align 8, !tbaa !30
  %469 = getelementptr i8, ptr %468, i64 -24
  %470 = load i64, ptr %469, align 8
  %471 = getelementptr inbounds i8, ptr %464, i64 %470
  %472 = getelementptr inbounds %"class.std::basic_ios", ptr %471, i64 0, i32 5
  %473 = load ptr, ptr %472, align 8, !tbaa !32
  %474 = icmp eq ptr %473, null
  br i1 %474, label %475, label %477

475:                                              ; preds = %467
  invoke void @_ZSt16__throw_bad_castv() #26
          to label %476 unwind label %499

476:                                              ; preds = %475
  unreachable

477:                                              ; preds = %467
  %478 = getelementptr inbounds %"class.std::ctype", ptr %473, i64 0, i32 8
  %479 = load i8, ptr %478, align 8, !tbaa !40
  %480 = icmp eq i8 %479, 0
  br i1 %480, label %484, label %481

481:                                              ; preds = %477
  %482 = getelementptr inbounds %"class.std::ctype", ptr %473, i64 0, i32 9, i64 10
  %483 = load i8, ptr %482, align 1, !tbaa !20
  br label %490

484:                                              ; preds = %477
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %473)
          to label %485 unwind label %499

485:                                              ; preds = %484
  %486 = load ptr, ptr %473, align 8, !tbaa !30
  %487 = getelementptr inbounds ptr, ptr %486, i64 6
  %488 = load ptr, ptr %487, align 8
  %489 = invoke noundef signext i8 %488(ptr noundef nonnull align 8 dereferenceable(570) %473, i8 noundef signext 10)
          to label %490 unwind label %499

490:                                              ; preds = %485, %481
  %491 = phi i8 [ %483, %481 ], [ %489, %485 ]
  %492 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %464, i8 noundef signext %491)
          to label %493 unwind label %499

493:                                              ; preds = %490
  %494 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %492)
          to label %495 unwind label %499

495:                                              ; preds = %493
  call void @__cxa_end_catch()
  br label %497

496:                                              ; preds = %440, %437
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  br label %497

497:                                              ; preds = %495, %496
  %498 = phi i32 [ 0, %496 ], [ 1, %495 ]
  ret i32 %498

499:                                              ; preds = %493, %490, %485, %484, %475, %465, %459, %463
  %500 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %501 unwind label %502

501:                                              ; preds = %499
  resume { ptr, i32 } %500

502:                                              ; preds = %499, %96
  %503 = landingpad { ptr, i32 }
          catch ptr null
  %504 = extractvalue { ptr, i32 } %503, 0
  call void @__clang_call_terminate(ptr %504) #29
  unreachable

505:                                              ; preds = %409, %75
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE16impose_dirichletINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEEvNT_10ScalarTypeERS5_RT0_iiiRKSt3setINS5_17GlobalOrdinalTypeESt4lessISB_ESaISB_EE(double noundef %0, ptr noundef nonnull align 8 dereferenceable(132) %1, ptr noundef nonnull align 8 dereferenceable(32) %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, ptr noundef nonnull align 8 dereferenceable(48) %6) local_unnamed_addr #7 comdat {
  %8 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %1, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !86
  %11 = load ptr, ptr %8, align 8, !tbaa !87
  %12 = icmp eq ptr %10, %11
  br i1 %12, label %22, label %13

13:                                               ; preds = %7
  %14 = load i32, ptr %11, align 4, !tbaa !5
  %15 = ptrtoint ptr %10 to i64
  %16 = ptrtoint ptr %11 to i64
  %17 = sub i64 %15, %16
  %18 = ashr exact i64 %17, 2
  %19 = add nsw i64 %18, -1
  %20 = getelementptr inbounds i32, ptr %11, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  br label %22

22:                                               ; preds = %7, %13
  %23 = phi i32 [ %14, %13 ], [ 0, %7 ]
  %24 = phi i32 [ %21, %13 ], [ -1, %7 ]
  %25 = getelementptr inbounds i8, ptr %6, i64 24
  %26 = load ptr, ptr %25, align 8, !tbaa !103
  %27 = getelementptr inbounds i8, ptr %6, i64 8
  %28 = icmp eq ptr %26, %27
  br i1 %28, label %37, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.miniFE::Vector", ptr %2, i64 0, i32 2
  %31 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %1, i64 0, i32 3
  %32 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %1, i64 0, i32 5
  %33 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %1, i64 0, i32 6
  br label %60

34:                                               ; preds = %177
  %35 = load ptr, ptr %9, align 8, !tbaa !86
  %36 = load ptr, ptr %8, align 8, !tbaa !87
  br label %37

37:                                               ; preds = %34, %22
  %38 = phi ptr [ %36, %34 ], [ %11, %22 ]
  %39 = phi ptr [ %35, %34 ], [ %10, %22 ]
  %40 = ptrtoint ptr %39 to i64
  %41 = ptrtoint ptr %38 to i64
  %42 = sub i64 %40, %41
  %43 = ashr i64 %42, 2
  %44 = icmp eq ptr %39, %38
  br i1 %44, label %180, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds i8, ptr %6, i64 16
  %47 = load ptr, ptr %46, align 8, !tbaa !98
  %48 = icmp eq ptr %47, null
  %49 = icmp sgt i64 %42, 0
  %50 = lshr exact i64 %42, 2
  %51 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %1, i64 0, i32 3
  %52 = load ptr, ptr %51, align 8
  %53 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %1, i64 0, i32 5
  %54 = load ptr, ptr %53, align 8
  %55 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %1, i64 0, i32 6
  %56 = load ptr, ptr %55, align 8
  %57 = getelementptr inbounds %"struct.miniFE::Vector", ptr %2, i64 0, i32 2
  %58 = load ptr, ptr %57, align 8
  %59 = tail call i64 @llvm.umax.i64(i64 %43, i64 1)
  br label %181

60:                                               ; preds = %29, %177
  %61 = phi ptr [ %26, %29 ], [ %178, %177 ]
  %62 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %61, i64 0, i32 1
  %63 = load i32, ptr %62, align 4, !tbaa !5
  %64 = icmp slt i32 %63, %23
  %65 = icmp sgt i32 %63, %24
  %66 = select i1 %64, i1 true, i1 %65
  br i1 %66, label %177, label %67

67:                                               ; preds = %60
  %68 = sub nsw i32 %63, %23
  %69 = sext i32 %68 to i64
  %70 = load ptr, ptr %30, align 8, !tbaa !91
  %71 = getelementptr inbounds double, ptr %70, i64 %69
  store double %0, ptr %71, align 8, !tbaa !93
  %72 = load ptr, ptr %9, align 8, !tbaa !86
  %73 = load ptr, ptr %8, align 8, !tbaa !87
  %74 = icmp eq ptr %72, %73
  br i1 %74, label %177, label %75

75:                                               ; preds = %67
  %76 = load i32, ptr %73, align 4, !tbaa !5
  %77 = sub nsw i32 %63, %76
  %78 = sext i32 %77 to i64
  %79 = ptrtoint ptr %72 to i64
  %80 = ptrtoint ptr %73 to i64
  %81 = sub i64 %79, %80
  %82 = ashr exact i64 %81, 2
  %83 = icmp ugt i64 %82, %78
  br i1 %83, label %84, label %90

84:                                               ; preds = %75
  %85 = getelementptr inbounds i32, ptr %73, i64 %78
  %86 = load i32, ptr %85, align 4, !tbaa !5
  %87 = icmp ne i32 %86, %63
  %88 = icmp eq i32 %77, -1
  %89 = select i1 %87, i1 true, i1 %88
  br i1 %89, label %90, label %117

90:                                               ; preds = %84, %75
  %91 = icmp sgt i64 %81, 0
  br i1 %91, label %92, label %107

92:                                               ; preds = %90
  %93 = lshr exact i64 %81, 2
  br label %94

94:                                               ; preds = %94, %92
  %95 = phi i64 [ %93, %92 ], [ %105, %94 ]
  %96 = phi ptr [ %73, %92 ], [ %104, %94 ]
  %97 = lshr i64 %95, 1
  %98 = getelementptr inbounds i32, ptr %96, i64 %97
  %99 = load i32, ptr %98, align 4, !tbaa !5
  %100 = icmp slt i32 %99, %63
  %101 = getelementptr inbounds i32, ptr %98, i64 1
  %102 = xor i64 %97, -1
  %103 = add nsw i64 %95, %102
  %104 = select i1 %100, ptr %101, ptr %96
  %105 = select i1 %100, i64 %103, i64 %97
  %106 = icmp sgt i64 %105, 0
  br i1 %106, label %94, label %107, !llvm.loop !127

107:                                              ; preds = %94, %90
  %108 = phi ptr [ %73, %90 ], [ %104, %94 ]
  %109 = icmp eq ptr %108, %72
  br i1 %109, label %177, label %110

110:                                              ; preds = %107
  %111 = load i32, ptr %108, align 4, !tbaa !5
  %112 = icmp eq i32 %111, %63
  br i1 %112, label %113, label %177

113:                                              ; preds = %110
  %114 = ptrtoint ptr %108 to i64
  %115 = sub i64 %114, %80
  %116 = ashr exact i64 %115, 2
  br label %117

117:                                              ; preds = %113, %84
  %118 = phi i64 [ %116, %113 ], [ %78, %84 ]
  %119 = load ptr, ptr %31, align 8, !tbaa !87
  %120 = getelementptr inbounds i32, ptr %119, i64 %118
  %121 = load i32, ptr %120, align 4, !tbaa !5
  %122 = add nsw i64 %118, 1
  %123 = getelementptr inbounds i32, ptr %119, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !5
  %125 = sub nsw i32 %124, %121
  %126 = sext i32 %125 to i64
  %127 = sext i32 %121 to i64
  %128 = load ptr, ptr %32, align 8, !tbaa !87
  %129 = getelementptr i32, ptr %128, i64 %127
  %130 = load ptr, ptr %33, align 8, !tbaa !91
  %131 = getelementptr double, ptr %130, i64 %127
  %132 = icmp eq i32 %124, %121
  br i1 %132, label %177, label %133

133:                                              ; preds = %117
  %134 = icmp ult i32 %125, 8
  br i1 %134, label %166, label %135

135:                                              ; preds = %133
  %136 = sext i32 %124 to i64
  %137 = shl nsw i64 %136, 3
  %138 = getelementptr i8, ptr %130, i64 %137
  %139 = shl nsw i64 %136, 2
  %140 = getelementptr i8, ptr %128, i64 %139
  %141 = icmp ult ptr %131, %140
  %142 = icmp ult ptr %129, %138
  %143 = and i1 %141, %142
  br i1 %143, label %166, label %144

144:                                              ; preds = %135
  %145 = and i64 %126, -4
  %146 = insertelement <2 x i32> poison, i32 %63, i64 0
  %147 = shufflevector <2 x i32> %146, <2 x i32> poison, <2 x i32> zeroinitializer
  %148 = insertelement <2 x i32> poison, i32 %63, i64 0
  %149 = shufflevector <2 x i32> %148, <2 x i32> poison, <2 x i32> zeroinitializer
  br label %150

150:                                              ; preds = %150, %144
  %151 = phi i64 [ 0, %144 ], [ %162, %150 ]
  %152 = getelementptr inbounds i32, ptr %129, i64 %151
  %153 = load <2 x i32>, ptr %152, align 4, !tbaa !5, !alias.scope !128
  %154 = getelementptr inbounds i32, ptr %152, i64 2
  %155 = load <2 x i32>, ptr %154, align 4, !tbaa !5, !alias.scope !128
  %156 = icmp eq <2 x i32> %153, %147
  %157 = icmp eq <2 x i32> %155, %149
  %158 = select <2 x i1> %156, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> zeroinitializer
  %159 = select <2 x i1> %157, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> zeroinitializer
  %160 = getelementptr inbounds double, ptr %131, i64 %151
  store <2 x double> %158, ptr %160, align 8, !alias.scope !131, !noalias !128
  %161 = getelementptr inbounds double, ptr %160, i64 2
  store <2 x double> %159, ptr %161, align 8, !alias.scope !131, !noalias !128
  %162 = add nuw i64 %151, 4
  %163 = icmp eq i64 %162, %145
  br i1 %163, label %164, label %150, !llvm.loop !133

164:                                              ; preds = %150
  %165 = icmp eq i64 %145, %126
  br i1 %165, label %177, label %166

166:                                              ; preds = %135, %133, %164
  %167 = phi i64 [ 0, %135 ], [ 0, %133 ], [ %145, %164 ]
  br label %168

168:                                              ; preds = %166, %168
  %169 = phi i64 [ %175, %168 ], [ %167, %166 ]
  %170 = getelementptr inbounds i32, ptr %129, i64 %169
  %171 = load i32, ptr %170, align 4, !tbaa !5
  %172 = icmp eq i32 %171, %63
  %173 = select i1 %172, double 1.000000e+00, double 0.000000e+00
  %174 = getelementptr inbounds double, ptr %131, i64 %169
  store double %173, ptr %174, align 8
  %175 = add nuw i64 %169, 1
  %176 = icmp eq i64 %175, %126
  br i1 %176, label %177, label %168, !llvm.loop !136

177:                                              ; preds = %168, %164, %67, %117, %110, %107, %60
  %178 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(ptr noundef %61) #30
  %179 = icmp eq ptr %178, %27
  br i1 %179, label %34, label %60, !llvm.loop !137

180:                                              ; preds = %289, %37
  ret void

181:                                              ; preds = %45, %289
  %182 = phi i64 [ 0, %45 ], [ %290, %289 ]
  %183 = getelementptr inbounds i32, ptr %38, i64 %182
  %184 = load i32, ptr %183, align 4, !tbaa !5
  br i1 %48, label %203, label %185

185:                                              ; preds = %181, %185
  %186 = phi ptr [ %195, %185 ], [ %47, %181 ]
  %187 = phi ptr [ %193, %185 ], [ %27, %181 ]
  %188 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %186, i64 0, i32 1
  %189 = load i32, ptr %188, align 4, !tbaa !5
  %190 = icmp slt i32 %189, %184
  %191 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %186, i64 0, i32 3
  %192 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %186, i64 0, i32 2
  %193 = select i1 %190, ptr %187, ptr %186
  %194 = select i1 %190, ptr %191, ptr %192
  %195 = load ptr, ptr %194, align 8, !tbaa !106
  %196 = icmp eq ptr %195, null
  br i1 %196, label %197, label %185, !llvm.loop !138

197:                                              ; preds = %185
  %198 = icmp eq ptr %193, %27
  br i1 %198, label %203, label %199

199:                                              ; preds = %197
  %200 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %193, i64 0, i32 1
  %201 = load i32, ptr %200, align 4, !tbaa !5
  %202 = icmp slt i32 %184, %201
  br i1 %202, label %203, label %289

203:                                              ; preds = %181, %197, %199
  %204 = load i32, ptr %38, align 4, !tbaa !5
  %205 = sub nsw i32 %184, %204
  %206 = sext i32 %205 to i64
  %207 = icmp ugt i64 %43, %206
  br i1 %207, label %208, label %214

208:                                              ; preds = %203
  %209 = getelementptr inbounds i32, ptr %38, i64 %206
  %210 = load i32, ptr %209, align 4, !tbaa !5
  %211 = icmp ne i32 %210, %184
  %212 = icmp eq i32 %205, -1
  %213 = select i1 %211, i1 true, i1 %212
  br i1 %213, label %214, label %238

214:                                              ; preds = %208, %203
  br i1 %49, label %215, label %228

215:                                              ; preds = %214, %215
  %216 = phi i64 [ %226, %215 ], [ %50, %214 ]
  %217 = phi ptr [ %225, %215 ], [ %38, %214 ]
  %218 = lshr i64 %216, 1
  %219 = getelementptr inbounds i32, ptr %217, i64 %218
  %220 = load i32, ptr %219, align 4, !tbaa !5
  %221 = icmp slt i32 %220, %184
  %222 = getelementptr inbounds i32, ptr %219, i64 1
  %223 = xor i64 %218, -1
  %224 = add nsw i64 %216, %223
  %225 = select i1 %221, ptr %222, ptr %217
  %226 = select i1 %221, i64 %224, i64 %218
  %227 = icmp sgt i64 %226, 0
  br i1 %227, label %215, label %228, !llvm.loop !127

228:                                              ; preds = %215, %214
  %229 = phi ptr [ %38, %214 ], [ %225, %215 ]
  %230 = icmp eq ptr %229, %39
  br i1 %230, label %252, label %231

231:                                              ; preds = %228
  %232 = load i32, ptr %229, align 4, !tbaa !5
  %233 = icmp eq i32 %232, %184
  br i1 %233, label %234, label %252

234:                                              ; preds = %231
  %235 = ptrtoint ptr %229 to i64
  %236 = sub i64 %235, %41
  %237 = ashr exact i64 %236, 2
  br label %238

238:                                              ; preds = %208, %234
  %239 = phi i64 [ %237, %234 ], [ %206, %208 ]
  %240 = getelementptr inbounds i32, ptr %52, i64 %239
  %241 = load i32, ptr %240, align 4, !tbaa !5
  %242 = add nsw i64 %239, 1
  %243 = getelementptr inbounds i32, ptr %52, i64 %242
  %244 = load i32, ptr %243, align 4, !tbaa !5
  %245 = sub nsw i32 %244, %241
  %246 = sext i32 %245 to i64
  %247 = sext i32 %241 to i64
  %248 = getelementptr inbounds i32, ptr %54, i64 %247
  %249 = getelementptr inbounds double, ptr %56, i64 %247
  %250 = icmp eq i32 %244, %241
  %251 = select i1 %250, i1 true, i1 %48
  br i1 %251, label %252, label %258

252:                                              ; preds = %285, %238, %228, %231
  %253 = phi double [ 0.000000e+00, %238 ], [ 0.000000e+00, %231 ], [ 0.000000e+00, %228 ], [ %286, %285 ]
  %254 = fmul double %253, %0
  %255 = getelementptr inbounds double, ptr %58, i64 %182
  %256 = load double, ptr %255, align 8, !tbaa !93
  %257 = fsub double %256, %254
  store double %257, ptr %255, align 8, !tbaa !93
  br label %289

258:                                              ; preds = %238, %285
  %259 = phi i64 [ %287, %285 ], [ 0, %238 ]
  %260 = phi double [ %286, %285 ], [ 0.000000e+00, %238 ]
  %261 = getelementptr inbounds i32, ptr %248, i64 %259
  %262 = load i32, ptr %261, align 4, !tbaa !5
  br label %263

263:                                              ; preds = %263, %258
  %264 = phi ptr [ %47, %258 ], [ %273, %263 ]
  %265 = phi ptr [ %27, %258 ], [ %271, %263 ]
  %266 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %264, i64 0, i32 1
  %267 = load i32, ptr %266, align 4, !tbaa !5
  %268 = icmp slt i32 %267, %262
  %269 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %264, i64 0, i32 3
  %270 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %264, i64 0, i32 2
  %271 = select i1 %268, ptr %265, ptr %264
  %272 = select i1 %268, ptr %269, ptr %270
  %273 = load ptr, ptr %272, align 8, !tbaa !106
  %274 = icmp eq ptr %273, null
  br i1 %274, label %275, label %263, !llvm.loop !138

275:                                              ; preds = %263
  %276 = icmp eq ptr %271, %27
  br i1 %276, label %285, label %277

277:                                              ; preds = %275
  %278 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", ptr %271, i64 0, i32 1
  %279 = load i32, ptr %278, align 4, !tbaa !5
  %280 = icmp slt i32 %262, %279
  br i1 %280, label %285, label %281

281:                                              ; preds = %277
  %282 = getelementptr inbounds double, ptr %249, i64 %259
  %283 = load double, ptr %282, align 8, !tbaa !93
  %284 = fadd double %260, %283
  store double 0.000000e+00, ptr %282, align 8, !tbaa !93
  br label %285

285:                                              ; preds = %277, %275, %281
  %286 = phi double [ %284, %281 ], [ %260, %275 ], [ %260, %277 ]
  %287 = add nuw i64 %259, 1
  %288 = icmp eq i64 %287, %246
  br i1 %288, label %252, label %258, !llvm.loop !139

289:                                              ; preds = %199, %252
  %290 = add nuw i64 %182, 1
  %291 = icmp eq i64 %290, %59
  br i1 %291, label %180, label %181, !llvm.loop !140
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef i64 @_ZN6miniFE20compute_matrix_statsINS_9CSRMatrixIdiiEEEEmRKT_iiR8YAML_Doc(ptr noundef nonnull align 8 dereferenceable(132) %0, i32 noundef %1, i32 noundef %2, ptr noundef nonnull align 8 dereferenceable(216) %3) local_unnamed_addr #7 comdat personality ptr @__gxx_personality_v0 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca %"class.std::__cxx11::basic_string", align 8
  %25 = alloca %"class.std::__cxx11::basic_string", align 8
  %26 = alloca %"class.std::__cxx11::basic_string", align 8
  %27 = alloca %"class.std::__cxx11::basic_string", align 8
  %28 = alloca %"class.std::__cxx11::basic_string", align 8
  %29 = alloca %"class.std::__cxx11::basic_string", align 8
  %30 = alloca %"class.std::__cxx11::basic_string", align 8
  %31 = alloca %"class.std::__cxx11::basic_string", align 8
  %32 = alloca %"class.std::__cxx11::basic_string", align 8
  %33 = alloca %"class.std::__cxx11::basic_string", align 8
  %34 = alloca %"class.std::__cxx11::basic_string", align 8
  %35 = alloca %"class.std::__cxx11::basic_string", align 8
  %36 = alloca %"class.std::__cxx11::basic_string", align 8
  %37 = alloca %"class.std::__cxx11::basic_string", align 8
  %38 = alloca %"class.std::__cxx11::basic_string", align 8
  %39 = alloca %"class.std::__cxx11::basic_string", align 8
  %40 = alloca %"class.std::__cxx11::basic_string", align 8
  %41 = alloca %"class.std::__cxx11::basic_string", align 8
  %42 = alloca %"class.std::__cxx11::basic_string", align 8
  %43 = alloca %"class.std::__cxx11::basic_string", align 8
  %44 = alloca %"class.std::__cxx11::basic_string", align 8
  %45 = alloca %"class.std::__cxx11::basic_string", align 8
  %46 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 2
  %47 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !86
  %49 = load ptr, ptr %46, align 8, !tbaa !87
  %50 = ptrtoint ptr %48 to i64
  %51 = ptrtoint ptr %49 to i64
  %52 = sub i64 %50, %51
  %53 = lshr exact i64 %52, 2
  %54 = trunc i64 %53 to i32
  %55 = mul nsw i32 %54, 5
  %56 = tail call i32 @llvm.smin.i32(i32 %55, i32 %54)
  %57 = icmp slt i32 %54, 0
  %58 = shl i64 %52, 30
  %59 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 3
  %60 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %61 = load ptr, ptr %60, align 8, !tbaa !86
  %62 = load ptr, ptr %59, align 8, !tbaa !87
  %63 = ptrtoint ptr %61 to i64
  %64 = ptrtoint ptr %62 to i64
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 2
  %67 = add nsw i64 %66, -1
  %68 = getelementptr inbounds i32, ptr %62, i64 %67
  %69 = load i32, ptr %68, align 4, !tbaa !5
  %70 = sext i32 %69 to i64
  %71 = uitofp i64 %70 to double
  %72 = fmul double %71, 5.000000e+00
  %73 = fcmp ogt double %72, %71
  %74 = select i1 %73, double %71, double %72
  %75 = sitofp i32 %54 to double
  %76 = sitofp i32 %2 to double
  %77 = fdiv double %75, %76
  %78 = fdiv double %71, %76
  %79 = fptoui double %71 to i64
  %80 = tail call double @llvm.ceil.f64(double %74)
  %81 = fptoui double %80 to i64
  %82 = ashr i64 %58, 32
  %83 = icmp eq i32 %1, 0
  br i1 %83, label %84, label %574

84:                                               ; preds = %4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %24) #25
  %85 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %24, i64 0, i32 2
  store ptr %85, ptr %24, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %23) #25
  store i64 17, ptr %23, align 8, !tbaa !55
  %86 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %24, ptr noundef nonnull align 8 dereferenceable(8) %23, i64 noundef 0)
          to label %87 unwind label %367

87:                                               ; preds = %84
  store ptr %86, ptr %24, align 8, !tbaa !43
  %88 = load i64, ptr %23, align 8, !tbaa !55
  store i64 %88, ptr %85, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %86, ptr noundef nonnull align 1 dereferenceable(17) @.str.95, i64 17, i1 false)
  %89 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %24, i64 0, i32 1
  store i64 %88, ptr %89, align 8, !tbaa !19
  %90 = load ptr, ptr %24, align 8, !tbaa !43
  %91 = getelementptr inbounds i8, ptr %90, i64 %88
  store i8 0, ptr %91, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %23) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %25) #25
  %92 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %25, i64 0, i32 2
  store ptr %92, ptr %25, align 8, !tbaa !18
  %93 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %25, i64 0, i32 1
  store i64 0, ptr %93, align 8, !tbaa !19
  store i8 0, ptr %92, align 8, !tbaa !20
  %94 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %24, ptr noundef nonnull align 8 dereferenceable(32) %25)
          to label %95 unwind label %369

95:                                               ; preds = %87
  %96 = load ptr, ptr %25, align 8, !tbaa !43
  %97 = icmp eq ptr %96, %92
  br i1 %97, label %99, label %98

98:                                               ; preds = %95
  call void @_ZdlPv(ptr noundef %96) #28
  br label %99

99:                                               ; preds = %95, %98
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %25) #25
  %100 = load ptr, ptr %24, align 8, !tbaa !43
  %101 = icmp eq ptr %100, %85
  br i1 %101, label %103, label %102

102:                                              ; preds = %99
  call void @_ZdlPv(ptr noundef %100) #28
  br label %103

103:                                              ; preds = %99, %102
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %24) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %26) #25
  %104 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %26, i64 0, i32 2
  store ptr %104, ptr %26, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %22) #25
  store i64 17, ptr %22, align 8, !tbaa !55
  %105 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %26, ptr noundef nonnull align 8 dereferenceable(8) %22, i64 noundef 0)
          to label %106 unwind label %380

106:                                              ; preds = %103
  store ptr %105, ptr %26, align 8, !tbaa !43
  %107 = load i64, ptr %22, align 8, !tbaa !55
  store i64 %107, ptr %104, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %105, ptr noundef nonnull align 1 dereferenceable(17) @.str.95, i64 17, i1 false)
  %108 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %26, i64 0, i32 1
  store i64 %107, ptr %108, align 8, !tbaa !19
  %109 = load ptr, ptr %26, align 8, !tbaa !43
  %110 = getelementptr inbounds i8, ptr %109, i64 %107
  store i8 0, ptr %110, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %22) #25
  %111 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %26)
          to label %112 unwind label %382

112:                                              ; preds = %106
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %27) #25
  %113 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %27, i64 0, i32 2
  store ptr %113, ptr %27, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %113, ptr noundef nonnull align 1 dereferenceable(12) @.str.96, i64 12, i1 false)
  %114 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %27, i64 0, i32 1
  store i64 12, ptr %114, align 8, !tbaa !19
  %115 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %27, i64 0, i32 2, i32 1, i64 4
  store i8 0, ptr %115, align 4, !tbaa !20
  %116 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm(ptr noundef nonnull align 8 dereferenceable(88) %111, ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %82)
          to label %117 unwind label %384

117:                                              ; preds = %112
  %118 = load ptr, ptr %27, align 8, !tbaa !43
  %119 = icmp eq ptr %118, %113
  br i1 %119, label %121, label %120

120:                                              ; preds = %117
  call void @_ZdlPv(ptr noundef %118) #28
  br label %121

121:                                              ; preds = %117, %120
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %27) #25
  %122 = load ptr, ptr %26, align 8, !tbaa !43
  %123 = icmp eq ptr %122, %104
  br i1 %123, label %125, label %124

124:                                              ; preds = %121
  call void @_ZdlPv(ptr noundef %122) #28
  br label %125

125:                                              ; preds = %121, %124
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %26) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %28) #25
  %126 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %28, i64 0, i32 2
  store ptr %126, ptr %28, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %21) #25
  store i64 17, ptr %21, align 8, !tbaa !55
  %127 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %28, ptr noundef nonnull align 8 dereferenceable(8) %21, i64 noundef 0)
          to label %128 unwind label %397

128:                                              ; preds = %125
  store ptr %127, ptr %28, align 8, !tbaa !43
  %129 = load i64, ptr %21, align 8, !tbaa !55
  store i64 %129, ptr %126, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %127, ptr noundef nonnull align 1 dereferenceable(17) @.str.95, i64 17, i1 false)
  %130 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %28, i64 0, i32 1
  store i64 %129, ptr %130, align 8, !tbaa !19
  %131 = load ptr, ptr %28, align 8, !tbaa !43
  %132 = getelementptr inbounds i8, ptr %131, i64 %129
  store i8 0, ptr %132, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #25
  %133 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %28)
          to label %134 unwind label %399

134:                                              ; preds = %128
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %29) #25
  %135 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 2
  store ptr %135, ptr %29, align 8, !tbaa !18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %135, ptr noundef nonnull align 1 dereferenceable(10) @.str.97, i64 10, i1 false)
  %136 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 1
  store i64 10, ptr %136, align 8, !tbaa !19
  %137 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 2, i32 1, i64 2
  store i8 0, ptr %137, align 2, !tbaa !20
  %138 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm(ptr noundef nonnull align 8 dereferenceable(88) %133, ptr noundef nonnull align 8 dereferenceable(32) %29, i64 noundef %79)
          to label %139 unwind label %401

139:                                              ; preds = %134
  %140 = load ptr, ptr %29, align 8, !tbaa !43
  %141 = icmp eq ptr %140, %135
  br i1 %141, label %143, label %142

142:                                              ; preds = %139
  call void @_ZdlPv(ptr noundef %140) #28
  br label %143

143:                                              ; preds = %139, %142
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %29) #25
  %144 = load ptr, ptr %28, align 8, !tbaa !43
  %145 = icmp eq ptr %144, %126
  br i1 %145, label %147, label %146

146:                                              ; preds = %143
  call void @_ZdlPv(ptr noundef %144) #28
  br label %147

147:                                              ; preds = %143, %146
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %28) #25
  %148 = fmul double %75, 0x3E10000000000000
  %149 = fmul double %148, 4.000000e+00
  %150 = fadd double %149, %149
  %151 = uitofp i64 %79 to double
  %152 = fmul double %151, 0x3E10000000000000
  %153 = fmul double %152, 4.000000e+00
  %154 = fadd double %150, %153
  %155 = fmul double %152, 8.000000e+00
  %156 = fadd double %155, %154
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %30) #25
  %157 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %30, i64 0, i32 2
  store ptr %157, ptr %30, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %20) #25
  store i64 17, ptr %20, align 8, !tbaa !55
  %158 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %30, ptr noundef nonnull align 8 dereferenceable(8) %20, i64 noundef 0)
          to label %159 unwind label %414

159:                                              ; preds = %147
  store ptr %158, ptr %30, align 8, !tbaa !43
  %160 = load i64, ptr %20, align 8, !tbaa !55
  store i64 %160, ptr %157, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %158, ptr noundef nonnull align 1 dereferenceable(17) @.str.95, i64 17, i1 false)
  %161 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %30, i64 0, i32 1
  store i64 %160, ptr %161, align 8, !tbaa !19
  %162 = load ptr, ptr %30, align 8, !tbaa !43
  %163 = getelementptr inbounds i8, ptr %162, i64 %160
  store i8 0, ptr %163, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20) #25
  %164 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %30)
          to label %165 unwind label %416

165:                                              ; preds = %159
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %31) #25
  %166 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %31, i64 0, i32 2
  store ptr %166, ptr %31, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %19) #25
  store i64 18, ptr %19, align 8, !tbaa !55
  %167 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %31, ptr noundef nonnull align 8 dereferenceable(8) %19, i64 noundef 0)
          to label %168 unwind label %418

168:                                              ; preds = %165
  store ptr %167, ptr %31, align 8, !tbaa !43
  %169 = load i64, ptr %19, align 8, !tbaa !55
  store i64 %169, ptr %166, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(18) %167, ptr noundef nonnull align 1 dereferenceable(18) @.str.98, i64 18, i1 false)
  %170 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %31, i64 0, i32 1
  store i64 %169, ptr %170, align 8, !tbaa !19
  %171 = load ptr, ptr %31, align 8, !tbaa !43
  %172 = getelementptr inbounds i8, ptr %171, i64 %169
  store i8 0, ptr %172, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #25
  %173 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %164, ptr noundef nonnull align 8 dereferenceable(32) %31, double noundef %156)
          to label %174 unwind label %420

174:                                              ; preds = %168
  %175 = load ptr, ptr %31, align 8, !tbaa !43
  %176 = icmp eq ptr %175, %166
  br i1 %176, label %178, label %177

177:                                              ; preds = %174
  call void @_ZdlPv(ptr noundef %175) #28
  br label %178

178:                                              ; preds = %174, %177
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %31) #25
  %179 = load ptr, ptr %30, align 8, !tbaa !43
  %180 = icmp eq ptr %179, %157
  br i1 %180, label %182, label %181

181:                                              ; preds = %178
  call void @_ZdlPv(ptr noundef %179) #28
  br label %182

182:                                              ; preds = %178, %181
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %30) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %32) #25
  %183 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %32, i64 0, i32 2
  store ptr %183, ptr %32, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %18) #25
  store i64 17, ptr %18, align 8, !tbaa !55
  %184 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %32, ptr noundef nonnull align 8 dereferenceable(8) %18, i64 noundef 0)
          to label %185 unwind label %434

185:                                              ; preds = %182
  store ptr %184, ptr %32, align 8, !tbaa !43
  %186 = load i64, ptr %18, align 8, !tbaa !55
  store i64 %186, ptr %183, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %184, ptr noundef nonnull align 1 dereferenceable(17) @.str.95, i64 17, i1 false)
  %187 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %32, i64 0, i32 1
  store i64 %186, ptr %187, align 8, !tbaa !19
  %188 = load ptr, ptr %32, align 8, !tbaa !43
  %189 = getelementptr inbounds i8, ptr %188, i64 %186
  store i8 0, ptr %189, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %18) #25
  %190 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %32)
          to label %191 unwind label %436

191:                                              ; preds = %185
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %33) #25
  %192 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %33, i64 0, i32 2
  store ptr %192, ptr %33, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %17) #25
  store i64 24, ptr %17, align 8, !tbaa !55
  %193 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %33, ptr noundef nonnull align 8 dereferenceable(8) %17, i64 noundef 0)
          to label %194 unwind label %438

194:                                              ; preds = %191
  store ptr %193, ptr %33, align 8, !tbaa !43
  %195 = load i64, ptr %17, align 8, !tbaa !55
  store i64 %195, ptr %192, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(24) %193, ptr noundef nonnull align 1 dereferenceable(24) @.str.99, i64 24, i1 false)
  %196 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %33, i64 0, i32 1
  store i64 %195, ptr %196, align 8, !tbaa !19
  %197 = load ptr, ptr %33, align 8, !tbaa !43
  %198 = getelementptr inbounds i8, ptr %197, i64 %195
  store i8 0, ptr %198, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %17) #25
  %199 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %190, ptr noundef nonnull align 8 dereferenceable(32) %33, double noundef 0.000000e+00)
          to label %200 unwind label %440

200:                                              ; preds = %194
  %201 = load ptr, ptr %33, align 8, !tbaa !43
  %202 = icmp eq ptr %201, %192
  br i1 %202, label %204, label %203

203:                                              ; preds = %200
  call void @_ZdlPv(ptr noundef %201) #28
  br label %204

204:                                              ; preds = %200, %203
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %33) #25
  %205 = load ptr, ptr %32, align 8, !tbaa !43
  %206 = icmp eq ptr %205, %183
  br i1 %206, label %208, label %207

207:                                              ; preds = %204
  call void @_ZdlPv(ptr noundef %205) #28
  br label %208

208:                                              ; preds = %204, %207
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %32) #25
  %209 = sext i32 %56 to i64
  %210 = select i1 %57, i64 0, i64 %82
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %34) #25
  %211 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %34, i64 0, i32 2
  store ptr %211, ptr %34, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %16) #25
  store i64 17, ptr %16, align 8, !tbaa !55
  %212 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %34, ptr noundef nonnull align 8 dereferenceable(8) %16, i64 noundef 0)
          to label %213 unwind label %454

213:                                              ; preds = %208
  store ptr %212, ptr %34, align 8, !tbaa !43
  %214 = load i64, ptr %16, align 8, !tbaa !55
  store i64 %214, ptr %211, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %212, ptr noundef nonnull align 1 dereferenceable(17) @.str.95, i64 17, i1 false)
  %215 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %34, i64 0, i32 1
  store i64 %214, ptr %215, align 8, !tbaa !19
  %216 = load ptr, ptr %34, align 8, !tbaa !43
  %217 = getelementptr inbounds i8, ptr %216, i64 %214
  store i8 0, ptr %217, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %16) #25
  %218 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %34)
          to label %219 unwind label %456

219:                                              ; preds = %213
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %35) #25
  %220 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %35, i64 0, i32 2
  store ptr %220, ptr %35, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %15) #25
  store i64 17, ptr %15, align 8, !tbaa !55
  %221 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %35, ptr noundef nonnull align 8 dereferenceable(8) %15, i64 noundef 0)
          to label %222 unwind label %458

222:                                              ; preds = %219
  store ptr %221, ptr %35, align 8, !tbaa !43
  %223 = load i64, ptr %15, align 8, !tbaa !55
  store i64 %223, ptr %220, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %221, ptr noundef nonnull align 1 dereferenceable(17) @.str.100, i64 17, i1 false)
  %224 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %35, i64 0, i32 1
  store i64 %223, ptr %224, align 8, !tbaa !19
  %225 = load ptr, ptr %35, align 8, !tbaa !43
  %226 = getelementptr inbounds i8, ptr %225, i64 %223
  store i8 0, ptr %226, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %15) #25
  %227 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm(ptr noundef nonnull align 8 dereferenceable(88) %218, ptr noundef nonnull align 8 dereferenceable(32) %35, i64 noundef %209)
          to label %228 unwind label %460

228:                                              ; preds = %222
  %229 = load ptr, ptr %35, align 8, !tbaa !43
  %230 = icmp eq ptr %229, %220
  br i1 %230, label %232, label %231

231:                                              ; preds = %228
  call void @_ZdlPv(ptr noundef %229) #28
  br label %232

232:                                              ; preds = %228, %231
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %35) #25
  %233 = load ptr, ptr %34, align 8, !tbaa !43
  %234 = icmp eq ptr %233, %211
  br i1 %234, label %236, label %235

235:                                              ; preds = %232
  call void @_ZdlPv(ptr noundef %233) #28
  br label %236

236:                                              ; preds = %232, %235
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %34) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %36) #25
  %237 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %36, i64 0, i32 2
  store ptr %237, ptr %36, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14) #25
  store i64 17, ptr %14, align 8, !tbaa !55
  %238 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %36, ptr noundef nonnull align 8 dereferenceable(8) %14, i64 noundef 0)
          to label %239 unwind label %474

239:                                              ; preds = %236
  store ptr %238, ptr %36, align 8, !tbaa !43
  %240 = load i64, ptr %14, align 8, !tbaa !55
  store i64 %240, ptr %237, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %238, ptr noundef nonnull align 1 dereferenceable(17) @.str.95, i64 17, i1 false)
  %241 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %36, i64 0, i32 1
  store i64 %240, ptr %241, align 8, !tbaa !19
  %242 = load ptr, ptr %36, align 8, !tbaa !43
  %243 = getelementptr inbounds i8, ptr %242, i64 %240
  store i8 0, ptr %243, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14) #25
  %244 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %36)
          to label %245 unwind label %476

245:                                              ; preds = %239
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %37) #25
  %246 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %37, i64 0, i32 2
  store ptr %246, ptr %37, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #25
  store i64 17, ptr %13, align 8, !tbaa !55
  %247 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %37, ptr noundef nonnull align 8 dereferenceable(8) %13, i64 noundef 0)
          to label %248 unwind label %478

248:                                              ; preds = %245
  store ptr %247, ptr %37, align 8, !tbaa !43
  %249 = load i64, ptr %13, align 8, !tbaa !55
  store i64 %249, ptr %246, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %247, ptr noundef nonnull align 1 dereferenceable(17) @.str.101, i64 17, i1 false)
  %250 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %37, i64 0, i32 1
  store i64 %249, ptr %250, align 8, !tbaa !19
  %251 = load ptr, ptr %37, align 8, !tbaa !43
  %252 = getelementptr inbounds i8, ptr %251, i64 %249
  store i8 0, ptr %252, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #25
  %253 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm(ptr noundef nonnull align 8 dereferenceable(88) %244, ptr noundef nonnull align 8 dereferenceable(32) %37, i64 noundef %210)
          to label %254 unwind label %480

254:                                              ; preds = %248
  %255 = load ptr, ptr %37, align 8, !tbaa !43
  %256 = icmp eq ptr %255, %246
  br i1 %256, label %258, label %257

257:                                              ; preds = %254
  call void @_ZdlPv(ptr noundef %255) #28
  br label %258

258:                                              ; preds = %254, %257
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %37) #25
  %259 = load ptr, ptr %36, align 8, !tbaa !43
  %260 = icmp eq ptr %259, %237
  br i1 %260, label %262, label %261

261:                                              ; preds = %258
  call void @_ZdlPv(ptr noundef %259) #28
  br label %262

262:                                              ; preds = %258, %261
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %36) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %38) #25
  %263 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %38, i64 0, i32 2
  store ptr %263, ptr %38, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #25
  store i64 17, ptr %12, align 8, !tbaa !55
  %264 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %38, ptr noundef nonnull align 8 dereferenceable(8) %12, i64 noundef 0)
          to label %265 unwind label %494

265:                                              ; preds = %262
  store ptr %264, ptr %38, align 8, !tbaa !43
  %266 = load i64, ptr %12, align 8, !tbaa !55
  store i64 %266, ptr %263, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %264, ptr noundef nonnull align 1 dereferenceable(17) @.str.95, i64 17, i1 false)
  %267 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %38, i64 0, i32 1
  store i64 %266, ptr %267, align 8, !tbaa !19
  %268 = load ptr, ptr %38, align 8, !tbaa !43
  %269 = getelementptr inbounds i8, ptr %268, i64 %266
  store i8 0, ptr %269, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #25
  %270 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %38)
          to label %271 unwind label %496

271:                                              ; preds = %265
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %39) #25
  %272 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %39, i64 0, i32 2
  store ptr %272, ptr %39, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #25
  store i64 17, ptr %11, align 8, !tbaa !55
  %273 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %39, ptr noundef nonnull align 8 dereferenceable(8) %11, i64 noundef 0)
          to label %274 unwind label %498

274:                                              ; preds = %271
  store ptr %273, ptr %39, align 8, !tbaa !43
  %275 = load i64, ptr %11, align 8, !tbaa !55
  store i64 %275, ptr %272, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %273, ptr noundef nonnull align 1 dereferenceable(17) @.str.102, i64 17, i1 false)
  %276 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %39, i64 0, i32 1
  store i64 %275, ptr %276, align 8, !tbaa !19
  %277 = load ptr, ptr %39, align 8, !tbaa !43
  %278 = getelementptr inbounds i8, ptr %277, i64 %275
  store i8 0, ptr %278, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #25
  %279 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %270, ptr noundef nonnull align 8 dereferenceable(32) %39, double noundef %77)
          to label %280 unwind label %500

280:                                              ; preds = %274
  %281 = load ptr, ptr %39, align 8, !tbaa !43
  %282 = icmp eq ptr %281, %272
  br i1 %282, label %284, label %283

283:                                              ; preds = %280
  call void @_ZdlPv(ptr noundef %281) #28
  br label %284

284:                                              ; preds = %280, %283
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %39) #25
  %285 = load ptr, ptr %38, align 8, !tbaa !43
  %286 = icmp eq ptr %285, %263
  br i1 %286, label %288, label %287

287:                                              ; preds = %284
  call void @_ZdlPv(ptr noundef %285) #28
  br label %288

288:                                              ; preds = %284, %287
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %38) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %40) #25
  %289 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %40, i64 0, i32 2
  store ptr %289, ptr %40, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #25
  store i64 17, ptr %10, align 8, !tbaa !55
  %290 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %40, ptr noundef nonnull align 8 dereferenceable(8) %10, i64 noundef 0)
          to label %291 unwind label %514

291:                                              ; preds = %288
  store ptr %290, ptr %40, align 8, !tbaa !43
  %292 = load i64, ptr %10, align 8, !tbaa !55
  store i64 %292, ptr %289, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %290, ptr noundef nonnull align 1 dereferenceable(17) @.str.95, i64 17, i1 false)
  %293 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %40, i64 0, i32 1
  store i64 %292, ptr %293, align 8, !tbaa !19
  %294 = load ptr, ptr %40, align 8, !tbaa !43
  %295 = getelementptr inbounds i8, ptr %294, i64 %292
  store i8 0, ptr %295, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #25
  %296 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %40)
          to label %297 unwind label %516

297:                                              ; preds = %291
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %41) #25
  %298 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %41, i64 0, i32 2
  store ptr %298, ptr %41, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #25
  store i64 16, ptr %9, align 8, !tbaa !55
  %299 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %41, ptr noundef nonnull align 8 dereferenceable(8) %9, i64 noundef 0)
          to label %300 unwind label %518

300:                                              ; preds = %297
  store ptr %299, ptr %41, align 8, !tbaa !43
  %301 = load i64, ptr %9, align 8, !tbaa !55
  store i64 %301, ptr %298, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %299, ptr noundef nonnull align 1 dereferenceable(16) @.str.103, i64 16, i1 false)
  %302 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %41, i64 0, i32 1
  store i64 %301, ptr %302, align 8, !tbaa !19
  %303 = load ptr, ptr %41, align 8, !tbaa !43
  %304 = getelementptr inbounds i8, ptr %303, i64 %301
  store i8 0, ptr %304, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #25
  %305 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm(ptr noundef nonnull align 8 dereferenceable(88) %296, ptr noundef nonnull align 8 dereferenceable(32) %41, i64 noundef %81)
          to label %306 unwind label %520

306:                                              ; preds = %300
  %307 = load ptr, ptr %41, align 8, !tbaa !43
  %308 = icmp eq ptr %307, %298
  br i1 %308, label %310, label %309

309:                                              ; preds = %306
  call void @_ZdlPv(ptr noundef %307) #28
  br label %310

310:                                              ; preds = %306, %309
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %41) #25
  %311 = load ptr, ptr %40, align 8, !tbaa !43
  %312 = icmp eq ptr %311, %289
  br i1 %312, label %314, label %313

313:                                              ; preds = %310
  call void @_ZdlPv(ptr noundef %311) #28
  br label %314

314:                                              ; preds = %310, %313
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %40) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %42) #25
  %315 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %42, i64 0, i32 2
  store ptr %315, ptr %42, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #25
  store i64 17, ptr %8, align 8, !tbaa !55
  %316 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %42, ptr noundef nonnull align 8 dereferenceable(8) %8, i64 noundef 0)
          to label %317 unwind label %534

317:                                              ; preds = %314
  store ptr %316, ptr %42, align 8, !tbaa !43
  %318 = load i64, ptr %8, align 8, !tbaa !55
  store i64 %318, ptr %315, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %316, ptr noundef nonnull align 1 dereferenceable(17) @.str.95, i64 17, i1 false)
  %319 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %42, i64 0, i32 1
  store i64 %318, ptr %319, align 8, !tbaa !19
  %320 = load ptr, ptr %42, align 8, !tbaa !43
  %321 = getelementptr inbounds i8, ptr %320, i64 %318
  store i8 0, ptr %321, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #25
  %322 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %42)
          to label %323 unwind label %536

323:                                              ; preds = %317
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %43) #25
  %324 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %43, i64 0, i32 2
  store ptr %324, ptr %43, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #25
  store i64 16, ptr %7, align 8, !tbaa !55
  %325 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %43, ptr noundef nonnull align 8 dereferenceable(8) %7, i64 noundef 0)
          to label %326 unwind label %538

326:                                              ; preds = %323
  store ptr %325, ptr %43, align 8, !tbaa !43
  %327 = load i64, ptr %7, align 8, !tbaa !55
  store i64 %327, ptr %324, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %325, ptr noundef nonnull align 1 dereferenceable(16) @.str.104, i64 16, i1 false)
  %328 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %43, i64 0, i32 1
  store i64 %327, ptr %328, align 8, !tbaa !19
  %329 = load ptr, ptr %43, align 8, !tbaa !43
  %330 = getelementptr inbounds i8, ptr %329, i64 %327
  store i8 0, ptr %330, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #25
  %331 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm(ptr noundef nonnull align 8 dereferenceable(88) %322, ptr noundef nonnull align 8 dereferenceable(32) %43, i64 noundef %79)
          to label %332 unwind label %540

332:                                              ; preds = %326
  %333 = load ptr, ptr %43, align 8, !tbaa !43
  %334 = icmp eq ptr %333, %324
  br i1 %334, label %336, label %335

335:                                              ; preds = %332
  call void @_ZdlPv(ptr noundef %333) #28
  br label %336

336:                                              ; preds = %332, %335
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %43) #25
  %337 = load ptr, ptr %42, align 8, !tbaa !43
  %338 = icmp eq ptr %337, %315
  br i1 %338, label %340, label %339

339:                                              ; preds = %336
  call void @_ZdlPv(ptr noundef %337) #28
  br label %340

340:                                              ; preds = %336, %339
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %42) #25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %44) #25
  %341 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %44, i64 0, i32 2
  store ptr %341, ptr %44, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #25
  store i64 17, ptr %6, align 8, !tbaa !55
  %342 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %44, ptr noundef nonnull align 8 dereferenceable(8) %6, i64 noundef 0)
          to label %343 unwind label %554

343:                                              ; preds = %340
  store ptr %342, ptr %44, align 8, !tbaa !43
  %344 = load i64, ptr %6, align 8, !tbaa !55
  store i64 %344, ptr %341, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %342, ptr noundef nonnull align 1 dereferenceable(17) @.str.95, i64 17, i1 false)
  %345 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %44, i64 0, i32 1
  store i64 %344, ptr %345, align 8, !tbaa !19
  %346 = load ptr, ptr %44, align 8, !tbaa !43
  %347 = getelementptr inbounds i8, ptr %346, i64 %344
  store i8 0, ptr %347, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #25
  %348 = invoke noundef ptr @_ZN12YAML_Element3getERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(32) %44)
          to label %349 unwind label %556

349:                                              ; preds = %343
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %45) #25
  %350 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %45, i64 0, i32 2
  store ptr %350, ptr %45, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #25
  store i64 16, ptr %5, align 8, !tbaa !55
  %351 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %45, ptr noundef nonnull align 8 dereferenceable(8) %5, i64 noundef 0)
          to label %352 unwind label %558

352:                                              ; preds = %349
  store ptr %351, ptr %45, align 8, !tbaa !43
  %353 = load i64, ptr %5, align 8, !tbaa !55
  store i64 %353, ptr %350, align 8, !tbaa !20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %351, ptr noundef nonnull align 1 dereferenceable(16) @.str.105, i64 16, i1 false)
  %354 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %45, i64 0, i32 1
  store i64 %353, ptr %354, align 8, !tbaa !19
  %355 = load ptr, ptr %45, align 8, !tbaa !43
  %356 = getelementptr inbounds i8, ptr %355, i64 %353
  store i8 0, ptr %356, align 1, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #25
  %357 = invoke noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd(ptr noundef nonnull align 8 dereferenceable(88) %348, ptr noundef nonnull align 8 dereferenceable(32) %45, double noundef %78)
          to label %358 unwind label %560

358:                                              ; preds = %352
  %359 = load ptr, ptr %45, align 8, !tbaa !43
  %360 = icmp eq ptr %359, %350
  br i1 %360, label %362, label %361

361:                                              ; preds = %358
  call void @_ZdlPv(ptr noundef %359) #28
  br label %362

362:                                              ; preds = %358, %361
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %45) #25
  %363 = load ptr, ptr %44, align 8, !tbaa !43
  %364 = icmp eq ptr %363, %341
  br i1 %364, label %366, label %365

365:                                              ; preds = %362
  call void @_ZdlPv(ptr noundef %363) #28
  br label %366

366:                                              ; preds = %362, %365
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %44) #25
  br label %574

367:                                              ; preds = %84
  %368 = landingpad { ptr, i32 }
          cleanup
  br label %378

369:                                              ; preds = %87
  %370 = landingpad { ptr, i32 }
          cleanup
  %371 = load ptr, ptr %25, align 8, !tbaa !43
  %372 = icmp eq ptr %371, %92
  br i1 %372, label %374, label %373

373:                                              ; preds = %369
  call void @_ZdlPv(ptr noundef %371) #28
  br label %374

374:                                              ; preds = %373, %369
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %25) #25
  %375 = load ptr, ptr %24, align 8, !tbaa !43
  %376 = icmp eq ptr %375, %85
  br i1 %376, label %378, label %377

377:                                              ; preds = %374
  call void @_ZdlPv(ptr noundef %375) #28
  br label %378

378:                                              ; preds = %377, %374, %367
  %379 = phi { ptr, i32 } [ %368, %367 ], [ %370, %374 ], [ %370, %377 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %24) #25
  br label %575

380:                                              ; preds = %103
  %381 = landingpad { ptr, i32 }
          cleanup
  br label %395

382:                                              ; preds = %106
  %383 = landingpad { ptr, i32 }
          cleanup
  br label %390

384:                                              ; preds = %112
  %385 = landingpad { ptr, i32 }
          cleanup
  %386 = load ptr, ptr %27, align 8, !tbaa !43
  %387 = icmp eq ptr %386, %113
  br i1 %387, label %389, label %388

388:                                              ; preds = %384
  call void @_ZdlPv(ptr noundef %386) #28
  br label %389

389:                                              ; preds = %388, %384
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %27) #25
  br label %390

390:                                              ; preds = %389, %382
  %391 = phi { ptr, i32 } [ %385, %389 ], [ %383, %382 ]
  %392 = load ptr, ptr %26, align 8, !tbaa !43
  %393 = icmp eq ptr %392, %104
  br i1 %393, label %395, label %394

394:                                              ; preds = %390
  call void @_ZdlPv(ptr noundef %392) #28
  br label %395

395:                                              ; preds = %394, %390, %380
  %396 = phi { ptr, i32 } [ %381, %380 ], [ %391, %390 ], [ %391, %394 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %26) #25
  br label %575

397:                                              ; preds = %125
  %398 = landingpad { ptr, i32 }
          cleanup
  br label %412

399:                                              ; preds = %128
  %400 = landingpad { ptr, i32 }
          cleanup
  br label %407

401:                                              ; preds = %134
  %402 = landingpad { ptr, i32 }
          cleanup
  %403 = load ptr, ptr %29, align 8, !tbaa !43
  %404 = icmp eq ptr %403, %135
  br i1 %404, label %406, label %405

405:                                              ; preds = %401
  call void @_ZdlPv(ptr noundef %403) #28
  br label %406

406:                                              ; preds = %405, %401
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %29) #25
  br label %407

407:                                              ; preds = %406, %399
  %408 = phi { ptr, i32 } [ %402, %406 ], [ %400, %399 ]
  %409 = load ptr, ptr %28, align 8, !tbaa !43
  %410 = icmp eq ptr %409, %126
  br i1 %410, label %412, label %411

411:                                              ; preds = %407
  call void @_ZdlPv(ptr noundef %409) #28
  br label %412

412:                                              ; preds = %411, %407, %397
  %413 = phi { ptr, i32 } [ %398, %397 ], [ %408, %407 ], [ %408, %411 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %28) #25
  br label %575

414:                                              ; preds = %147
  %415 = landingpad { ptr, i32 }
          cleanup
  br label %432

416:                                              ; preds = %159
  %417 = landingpad { ptr, i32 }
          cleanup
  br label %427

418:                                              ; preds = %165
  %419 = landingpad { ptr, i32 }
          cleanup
  br label %425

420:                                              ; preds = %168
  %421 = landingpad { ptr, i32 }
          cleanup
  %422 = load ptr, ptr %31, align 8, !tbaa !43
  %423 = icmp eq ptr %422, %166
  br i1 %423, label %425, label %424

424:                                              ; preds = %420
  call void @_ZdlPv(ptr noundef %422) #28
  br label %425

425:                                              ; preds = %424, %420, %418
  %426 = phi { ptr, i32 } [ %419, %418 ], [ %421, %420 ], [ %421, %424 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %31) #25
  br label %427

427:                                              ; preds = %425, %416
  %428 = phi { ptr, i32 } [ %426, %425 ], [ %417, %416 ]
  %429 = load ptr, ptr %30, align 8, !tbaa !43
  %430 = icmp eq ptr %429, %157
  br i1 %430, label %432, label %431

431:                                              ; preds = %427
  call void @_ZdlPv(ptr noundef %429) #28
  br label %432

432:                                              ; preds = %431, %427, %414
  %433 = phi { ptr, i32 } [ %415, %414 ], [ %428, %427 ], [ %428, %431 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %30) #25
  br label %575

434:                                              ; preds = %182
  %435 = landingpad { ptr, i32 }
          cleanup
  br label %452

436:                                              ; preds = %185
  %437 = landingpad { ptr, i32 }
          cleanup
  br label %447

438:                                              ; preds = %191
  %439 = landingpad { ptr, i32 }
          cleanup
  br label %445

440:                                              ; preds = %194
  %441 = landingpad { ptr, i32 }
          cleanup
  %442 = load ptr, ptr %33, align 8, !tbaa !43
  %443 = icmp eq ptr %442, %192
  br i1 %443, label %445, label %444

444:                                              ; preds = %440
  call void @_ZdlPv(ptr noundef %442) #28
  br label %445

445:                                              ; preds = %444, %440, %438
  %446 = phi { ptr, i32 } [ %439, %438 ], [ %441, %440 ], [ %441, %444 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %33) #25
  br label %447

447:                                              ; preds = %445, %436
  %448 = phi { ptr, i32 } [ %446, %445 ], [ %437, %436 ]
  %449 = load ptr, ptr %32, align 8, !tbaa !43
  %450 = icmp eq ptr %449, %183
  br i1 %450, label %452, label %451

451:                                              ; preds = %447
  call void @_ZdlPv(ptr noundef %449) #28
  br label %452

452:                                              ; preds = %451, %447, %434
  %453 = phi { ptr, i32 } [ %435, %434 ], [ %448, %447 ], [ %448, %451 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %32) #25
  br label %575

454:                                              ; preds = %208
  %455 = landingpad { ptr, i32 }
          cleanup
  br label %472

456:                                              ; preds = %213
  %457 = landingpad { ptr, i32 }
          cleanup
  br label %467

458:                                              ; preds = %219
  %459 = landingpad { ptr, i32 }
          cleanup
  br label %465

460:                                              ; preds = %222
  %461 = landingpad { ptr, i32 }
          cleanup
  %462 = load ptr, ptr %35, align 8, !tbaa !43
  %463 = icmp eq ptr %462, %220
  br i1 %463, label %465, label %464

464:                                              ; preds = %460
  call void @_ZdlPv(ptr noundef %462) #28
  br label %465

465:                                              ; preds = %464, %460, %458
  %466 = phi { ptr, i32 } [ %459, %458 ], [ %461, %460 ], [ %461, %464 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %35) #25
  br label %467

467:                                              ; preds = %465, %456
  %468 = phi { ptr, i32 } [ %466, %465 ], [ %457, %456 ]
  %469 = load ptr, ptr %34, align 8, !tbaa !43
  %470 = icmp eq ptr %469, %211
  br i1 %470, label %472, label %471

471:                                              ; preds = %467
  call void @_ZdlPv(ptr noundef %469) #28
  br label %472

472:                                              ; preds = %471, %467, %454
  %473 = phi { ptr, i32 } [ %455, %454 ], [ %468, %467 ], [ %468, %471 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %34) #25
  br label %575

474:                                              ; preds = %236
  %475 = landingpad { ptr, i32 }
          cleanup
  br label %492

476:                                              ; preds = %239
  %477 = landingpad { ptr, i32 }
          cleanup
  br label %487

478:                                              ; preds = %245
  %479 = landingpad { ptr, i32 }
          cleanup
  br label %485

480:                                              ; preds = %248
  %481 = landingpad { ptr, i32 }
          cleanup
  %482 = load ptr, ptr %37, align 8, !tbaa !43
  %483 = icmp eq ptr %482, %246
  br i1 %483, label %485, label %484

484:                                              ; preds = %480
  call void @_ZdlPv(ptr noundef %482) #28
  br label %485

485:                                              ; preds = %484, %480, %478
  %486 = phi { ptr, i32 } [ %479, %478 ], [ %481, %480 ], [ %481, %484 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %37) #25
  br label %487

487:                                              ; preds = %485, %476
  %488 = phi { ptr, i32 } [ %486, %485 ], [ %477, %476 ]
  %489 = load ptr, ptr %36, align 8, !tbaa !43
  %490 = icmp eq ptr %489, %237
  br i1 %490, label %492, label %491

491:                                              ; preds = %487
  call void @_ZdlPv(ptr noundef %489) #28
  br label %492

492:                                              ; preds = %491, %487, %474
  %493 = phi { ptr, i32 } [ %475, %474 ], [ %488, %487 ], [ %488, %491 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %36) #25
  br label %575

494:                                              ; preds = %262
  %495 = landingpad { ptr, i32 }
          cleanup
  br label %512

496:                                              ; preds = %265
  %497 = landingpad { ptr, i32 }
          cleanup
  br label %507

498:                                              ; preds = %271
  %499 = landingpad { ptr, i32 }
          cleanup
  br label %505

500:                                              ; preds = %274
  %501 = landingpad { ptr, i32 }
          cleanup
  %502 = load ptr, ptr %39, align 8, !tbaa !43
  %503 = icmp eq ptr %502, %272
  br i1 %503, label %505, label %504

504:                                              ; preds = %500
  call void @_ZdlPv(ptr noundef %502) #28
  br label %505

505:                                              ; preds = %504, %500, %498
  %506 = phi { ptr, i32 } [ %499, %498 ], [ %501, %500 ], [ %501, %504 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %39) #25
  br label %507

507:                                              ; preds = %505, %496
  %508 = phi { ptr, i32 } [ %506, %505 ], [ %497, %496 ]
  %509 = load ptr, ptr %38, align 8, !tbaa !43
  %510 = icmp eq ptr %509, %263
  br i1 %510, label %512, label %511

511:                                              ; preds = %507
  call void @_ZdlPv(ptr noundef %509) #28
  br label %512

512:                                              ; preds = %511, %507, %494
  %513 = phi { ptr, i32 } [ %495, %494 ], [ %508, %507 ], [ %508, %511 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %38) #25
  br label %575

514:                                              ; preds = %288
  %515 = landingpad { ptr, i32 }
          cleanup
  br label %532

516:                                              ; preds = %291
  %517 = landingpad { ptr, i32 }
          cleanup
  br label %527

518:                                              ; preds = %297
  %519 = landingpad { ptr, i32 }
          cleanup
  br label %525

520:                                              ; preds = %300
  %521 = landingpad { ptr, i32 }
          cleanup
  %522 = load ptr, ptr %41, align 8, !tbaa !43
  %523 = icmp eq ptr %522, %298
  br i1 %523, label %525, label %524

524:                                              ; preds = %520
  call void @_ZdlPv(ptr noundef %522) #28
  br label %525

525:                                              ; preds = %524, %520, %518
  %526 = phi { ptr, i32 } [ %519, %518 ], [ %521, %520 ], [ %521, %524 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %41) #25
  br label %527

527:                                              ; preds = %525, %516
  %528 = phi { ptr, i32 } [ %526, %525 ], [ %517, %516 ]
  %529 = load ptr, ptr %40, align 8, !tbaa !43
  %530 = icmp eq ptr %529, %289
  br i1 %530, label %532, label %531

531:                                              ; preds = %527
  call void @_ZdlPv(ptr noundef %529) #28
  br label %532

532:                                              ; preds = %531, %527, %514
  %533 = phi { ptr, i32 } [ %515, %514 ], [ %528, %527 ], [ %528, %531 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %40) #25
  br label %575

534:                                              ; preds = %314
  %535 = landingpad { ptr, i32 }
          cleanup
  br label %552

536:                                              ; preds = %317
  %537 = landingpad { ptr, i32 }
          cleanup
  br label %547

538:                                              ; preds = %323
  %539 = landingpad { ptr, i32 }
          cleanup
  br label %545

540:                                              ; preds = %326
  %541 = landingpad { ptr, i32 }
          cleanup
  %542 = load ptr, ptr %43, align 8, !tbaa !43
  %543 = icmp eq ptr %542, %324
  br i1 %543, label %545, label %544

544:                                              ; preds = %540
  call void @_ZdlPv(ptr noundef %542) #28
  br label %545

545:                                              ; preds = %544, %540, %538
  %546 = phi { ptr, i32 } [ %539, %538 ], [ %541, %540 ], [ %541, %544 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %43) #25
  br label %547

547:                                              ; preds = %545, %536
  %548 = phi { ptr, i32 } [ %546, %545 ], [ %537, %536 ]
  %549 = load ptr, ptr %42, align 8, !tbaa !43
  %550 = icmp eq ptr %549, %315
  br i1 %550, label %552, label %551

551:                                              ; preds = %547
  call void @_ZdlPv(ptr noundef %549) #28
  br label %552

552:                                              ; preds = %551, %547, %534
  %553 = phi { ptr, i32 } [ %535, %534 ], [ %548, %547 ], [ %548, %551 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %42) #25
  br label %575

554:                                              ; preds = %340
  %555 = landingpad { ptr, i32 }
          cleanup
  br label %572

556:                                              ; preds = %343
  %557 = landingpad { ptr, i32 }
          cleanup
  br label %567

558:                                              ; preds = %349
  %559 = landingpad { ptr, i32 }
          cleanup
  br label %565

560:                                              ; preds = %352
  %561 = landingpad { ptr, i32 }
          cleanup
  %562 = load ptr, ptr %45, align 8, !tbaa !43
  %563 = icmp eq ptr %562, %350
  br i1 %563, label %565, label %564

564:                                              ; preds = %560
  call void @_ZdlPv(ptr noundef %562) #28
  br label %565

565:                                              ; preds = %564, %560, %558
  %566 = phi { ptr, i32 } [ %559, %558 ], [ %561, %560 ], [ %561, %564 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %45) #25
  br label %567

567:                                              ; preds = %565, %556
  %568 = phi { ptr, i32 } [ %566, %565 ], [ %557, %556 ]
  %569 = load ptr, ptr %44, align 8, !tbaa !43
  %570 = icmp eq ptr %569, %341
  br i1 %570, label %572, label %571

571:                                              ; preds = %567
  call void @_ZdlPv(ptr noundef %569) #28
  br label %572

572:                                              ; preds = %571, %567, %554
  %573 = phi { ptr, i32 } [ %555, %554 ], [ %568, %567 ], [ %568, %571 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %44) #25
  br label %575

574:                                              ; preds = %366, %4
  ret i64 %79

575:                                              ; preds = %432, %452, %572, %552, %532, %512, %492, %472, %412, %395, %378
  %576 = phi { ptr, i32 } [ %413, %412 ], [ %396, %395 ], [ %379, %378 ], [ %453, %452 ], [ %433, %432 ], [ %573, %572 ], [ %553, %552 ], [ %533, %532 ], [ %513, %512 ], [ %493, %492 ], [ %473, %472 ]
  resume { ptr, i32 } %576
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE31rearrange_matrix_local_externalINS_9CSRMatrixIdiiEEEEvRT_(ptr noundef nonnull align 8 dereferenceable(132) %0) local_unnamed_addr #7 comdat personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 2
  %3 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !86
  %5 = load ptr, ptr %2, align 8, !tbaa !87
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = ashr i64 %8, 2
  %10 = icmp ugt i64 %8, 4611686018427387902
  br i1 %10, label %11, label %12

11:                                               ; preds = %1
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.34) #26
  unreachable

12:                                               ; preds = %1
  %13 = icmp eq ptr %4, %5
  br i1 %13, label %137, label %14

14:                                               ; preds = %12
  %15 = shl nuw nsw i64 %8, 1
  %16 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %15) #27
  store i32 0, ptr %16, align 4, !tbaa !5
  %17 = getelementptr i32, ptr %16, i64 1
  %18 = add nsw i64 %15, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %17, i8 0, i64 %18, i1 false), !tbaa !5
  %19 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %15) #27
          to label %20 unwind label %45

20:                                               ; preds = %14
  store i32 0, ptr %19, align 4, !tbaa !5
  %21 = getelementptr i32, ptr %19, i64 1
  tail call void @llvm.memset.p0.i64(ptr align 4 %21, i8 0, i64 %18, i1 false), !tbaa !5
  %22 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 5
  %23 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !87
  %25 = load ptr, ptr %22, align 8, !tbaa !87
  %26 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 6
  %27 = load ptr, ptr %26, align 8, !tbaa !91
  %28 = tail call i64 @llvm.umax.i64(i64 %9, i64 1)
  br label %47

29:                                               ; preds = %116
  %30 = zext i32 %127 to i64
  %31 = icmp slt i32 %127, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.34) #26
          to label %33 unwind label %193

33:                                               ; preds = %32
  unreachable

34:                                               ; preds = %29
  %35 = icmp eq i32 %127, 0
  br i1 %35, label %137, label %36

36:                                               ; preds = %34
  %37 = shl nuw nsw i64 %30, 2
  %38 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %37) #27
          to label %39 unwind label %193

39:                                               ; preds = %36
  store i32 0, ptr %38, align 4, !tbaa !5
  %40 = getelementptr i32, ptr %38, i64 1
  %41 = icmp eq i32 %127, 1
  br i1 %41, label %129, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds i32, ptr %38, i64 %30
  %44 = add nsw i64 %37, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %40, i8 0, i64 %44, i1 false), !tbaa !5
  br label %129

45:                                               ; preds = %14
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %540

47:                                               ; preds = %20, %116
  %48 = phi i32 [ 0, %20 ], [ %127, %116 ]
  %49 = phi i64 [ 0, %20 ], [ %54, %116 ]
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !5
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, ptr %25, i64 %52
  %54 = add nuw i64 %49, 1
  %55 = getelementptr inbounds i32, ptr %24, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !5
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i32, ptr %25, i64 %57
  %59 = getelementptr inbounds double, ptr %27, i64 %52
  %60 = shl i64 %49, 1
  %61 = getelementptr inbounds i32, ptr %16, i64 %60
  store i32 %51, ptr %61, align 4, !tbaa !5
  %62 = load i32, ptr %55, align 4, !tbaa !5
  %63 = or i64 %60, 1
  %64 = getelementptr inbounds i32, ptr %16, i64 %63
  store i32 %62, ptr %64, align 4, !tbaa !5
  %65 = load i32, ptr %55, align 4, !tbaa !5
  %66 = getelementptr inbounds i32, ptr %19, i64 %60
  store i32 %65, ptr %66, align 4, !tbaa !5
  %67 = load i32, ptr %55, align 4, !tbaa !5
  %68 = getelementptr inbounds i32, ptr %19, i64 %63
  store i32 %67, ptr %68, align 4, !tbaa !5
  %69 = ptrtoint ptr %58 to i64
  %70 = ptrtoint ptr %53 to i64
  %71 = sub i64 %69, %70
  %72 = ashr exact i64 %71, 2
  %73 = icmp sgt i64 %71, 4
  br i1 %73, label %74, label %98

74:                                               ; preds = %47, %92
  %75 = phi i64 [ %96, %92 ], [ 1, %47 ]
  %76 = getelementptr inbounds i32, ptr %53, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !5
  %78 = getelementptr inbounds double, ptr %59, i64 %75
  %79 = load double, ptr %78, align 8, !tbaa !93
  br label %80

80:                                               ; preds = %86, %74
  %81 = phi i64 [ %75, %74 ], [ %82, %86 ]
  %82 = add nsw i64 %81, -1
  %83 = getelementptr inbounds i32, ptr %53, i64 %82
  %84 = load i32, ptr %83, align 4, !tbaa !5
  %85 = icmp sgt i32 %84, %77
  br i1 %85, label %86, label %92

86:                                               ; preds = %80
  %87 = getelementptr inbounds i32, ptr %53, i64 %81
  store i32 %84, ptr %87, align 4, !tbaa !5
  %88 = getelementptr inbounds double, ptr %59, i64 %82
  %89 = load double, ptr %88, align 8, !tbaa !93
  %90 = getelementptr inbounds double, ptr %59, i64 %81
  store double %89, ptr %90, align 8, !tbaa !93
  %91 = icmp sgt i64 %81, 1
  br i1 %91, label %80, label %92, !llvm.loop !141

92:                                               ; preds = %86, %80
  %93 = phi i64 [ 0, %86 ], [ %81, %80 ]
  %94 = getelementptr inbounds i32, ptr %53, i64 %93
  store i32 %77, ptr %94, align 4, !tbaa !5
  %95 = getelementptr inbounds double, ptr %59, i64 %93
  store double %79, ptr %95, align 8, !tbaa !93
  %96 = add nuw nsw i64 %75, 1
  %97 = icmp eq i64 %96, %72
  br i1 %97, label %98, label %74, !llvm.loop !142

98:                                               ; preds = %92, %47
  %99 = icmp sgt i64 %71, 0
  br i1 %99, label %100, label %116

100:                                              ; preds = %98
  %101 = lshr exact i64 %71, 2
  br label %102

102:                                              ; preds = %102, %100
  %103 = phi ptr [ %53, %100 ], [ %114, %102 ]
  %104 = phi i64 [ %101, %100 ], [ %113, %102 ]
  %105 = lshr i64 %104, 1
  %106 = getelementptr inbounds i32, ptr %103, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !5
  %108 = sext i32 %107 to i64
  %109 = icmp ugt i64 %9, %108
  %110 = getelementptr inbounds i32, ptr %106, i64 1
  %111 = xor i64 %105, -1
  %112 = add nsw i64 %104, %111
  %113 = select i1 %109, i64 %112, i64 %105
  %114 = select i1 %109, ptr %110, ptr %103
  %115 = icmp sgt i64 %113, 0
  br i1 %115, label %102, label %116, !llvm.loop !143

116:                                              ; preds = %102, %98
  %117 = phi ptr [ %53, %98 ], [ %114, %102 ]
  %118 = load i32, ptr %50, align 4, !tbaa !5
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i32, ptr %117, i64 %119
  %121 = ptrtoint ptr %120 to i64
  %122 = sub i64 %121, %70
  %123 = lshr exact i64 %122, 2
  %124 = trunc i64 %123 to i32
  store i32 %124, ptr %64, align 4, !tbaa !5
  store i32 %124, ptr %66, align 4, !tbaa !5
  %125 = load i32, ptr %68, align 4, !tbaa !5
  %126 = add i32 %125, %48
  %127 = sub i32 %126, %124
  %128 = icmp eq i64 %54, %28
  br i1 %128, label %29, label %47, !llvm.loop !144

129:                                              ; preds = %39, %42
  %130 = phi ptr [ %43, %42 ], [ %40, %39 ]
  %131 = shl nuw nsw i64 %30, 3
  %132 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %131) #27
          to label %133 unwind label %195

133:                                              ; preds = %129
  store double 0.000000e+00, ptr %132, align 8, !tbaa !93
  br i1 %41, label %137, label %134

134:                                              ; preds = %133
  %135 = getelementptr double, ptr %132, i64 1
  %136 = add nsw i64 %131, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %135, i8 0, i64 %136, i1 false), !tbaa !93
  br label %137

137:                                              ; preds = %12, %34, %134, %133
  %138 = phi ptr [ %19, %133 ], [ %19, %134 ], [ %19, %34 ], [ null, %12 ]
  %139 = phi ptr [ %16, %133 ], [ %16, %134 ], [ %16, %34 ], [ null, %12 ]
  %140 = phi ptr [ %130, %133 ], [ %130, %134 ], [ null, %34 ], [ null, %12 ]
  %141 = phi ptr [ %38, %133 ], [ %38, %134 ], [ null, %34 ], [ null, %12 ]
  %142 = phi ptr [ %132, %133 ], [ %132, %134 ], [ null, %34 ], [ null, %12 ]
  %143 = ptrtoint ptr %142 to i64
  %144 = ptrtoint ptr %141 to i64
  %145 = ptrtoint ptr %142 to i64
  %146 = add nsw i64 %9, 1
  %147 = icmp ugt i64 %146, 2305843009213693951
  br i1 %147, label %148, label %150

148:                                              ; preds = %137
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.34) #26
          to label %149 unwind label %197

149:                                              ; preds = %148
  unreachable

150:                                              ; preds = %137
  %151 = icmp eq i64 %146, 0
  br i1 %151, label %159, label %152

152:                                              ; preds = %150
  %153 = shl nuw nsw i64 %146, 2
  %154 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %153) #27
          to label %155 unwind label %197

155:                                              ; preds = %152
  store i32 0, ptr %154, align 4, !tbaa !5
  br i1 %13, label %169, label %156

156:                                              ; preds = %155
  %157 = getelementptr i32, ptr %154, i64 1
  %158 = add nsw i64 %153, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %157, i8 0, i64 %158, i1 false), !tbaa !5
  br label %160

159:                                              ; preds = %150
  br i1 %13, label %169, label %160

160:                                              ; preds = %156, %159
  %161 = phi ptr [ %154, %156 ], [ null, %159 ]
  %162 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 5
  %163 = load ptr, ptr %162, align 8
  %164 = ptrtoint ptr %163 to i64
  %165 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 6
  %166 = load ptr, ptr %165, align 8
  %167 = ptrtoint ptr %166 to i64
  %168 = tail call i64 @llvm.umax.i64(i64 %9, i64 1)
  br label %199

169:                                              ; preds = %279, %155, %159
  %170 = phi ptr [ null, %159 ], [ %154, %155 ], [ %161, %279 ]
  %171 = phi i32 [ 0, %159 ], [ 0, %155 ], [ %280, %279 ]
  %172 = ptrtoint ptr %170 to i64
  %173 = getelementptr inbounds i32, ptr %170, i64 %9
  store i32 %171, ptr %173, align 4, !tbaa !5
  %174 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 3
  %175 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %176 = load ptr, ptr %175, align 8, !tbaa !86
  %177 = load ptr, ptr %174, align 8, !tbaa !87
  %178 = ptrtoint ptr %176 to i64
  %179 = ptrtoint ptr %177 to i64
  %180 = sub i64 %178, %179
  %181 = ashr exact i64 %180, 2
  %182 = icmp ugt i64 %146, %181
  br i1 %182, label %183, label %187

183:                                              ; preds = %169
  %184 = sub nsw i64 %146, %181
  invoke void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %174, i64 noundef %184)
          to label %303 unwind label %185

185:                                              ; preds = %183
  %186 = landingpad { ptr, i32 }
          cleanup
  br label %366

187:                                              ; preds = %169
  %188 = icmp ult i64 %146, %181
  br i1 %188, label %189, label %303

189:                                              ; preds = %187
  %190 = getelementptr inbounds i32, ptr %177, i64 %146
  %191 = icmp eq ptr %176, %190
  br i1 %191, label %303, label %192

192:                                              ; preds = %189
  store ptr %190, ptr %175, align 8, !tbaa !86
  br label %303

193:                                              ; preds = %32, %36
  %194 = landingpad { ptr, i32 }
          cleanup
  br label %532

195:                                              ; preds = %129
  %196 = landingpad { ptr, i32 }
          cleanup
  br label %522

197:                                              ; preds = %152, %148
  %198 = landingpad { ptr, i32 }
          cleanup
  br label %516

199:                                              ; preds = %160, %279
  %200 = phi i64 [ 0, %160 ], [ %281, %279 ]
  %201 = phi i32 [ 0, %160 ], [ %280, %279 ]
  %202 = getelementptr inbounds i32, ptr %161, i64 %200
  store i32 %201, ptr %202, align 4, !tbaa !5
  %203 = shl i64 %200, 1
  %204 = getelementptr inbounds i32, ptr %138, i64 %203
  %205 = load i32, ptr %204, align 4, !tbaa !5
  %206 = or i64 %203, 1
  %207 = getelementptr inbounds i32, ptr %138, i64 %206
  %208 = load i32, ptr %207, align 4, !tbaa !5
  %209 = icmp slt i32 %205, %208
  br i1 %209, label %210, label %279

210:                                              ; preds = %199
  %211 = sext i32 %205 to i64
  %212 = sext i32 %201 to i64
  %213 = sext i32 %208 to i64
  %214 = sub nsw i64 %213, %211
  %215 = icmp ult i64 %214, 20
  br i1 %215, label %254, label %216

216:                                              ; preds = %210
  %217 = shl nsw i64 %212, 2
  %218 = add i64 %217, %144
  %219 = shl nsw i64 %211, 2
  %220 = add i64 %219, %164
  %221 = sub i64 %218, %220
  %222 = icmp ult i64 %221, 16
  %223 = shl nsw i64 %212, 3
  %224 = add i64 %223, %145
  %225 = shl nsw i64 %211, 3
  %226 = add i64 %225, %167
  %227 = sub i64 %224, %226
  %228 = icmp ult i64 %227, 32
  %229 = or i1 %222, %228
  br i1 %229, label %254, label %230

230:                                              ; preds = %216
  %231 = and i64 %214, -4
  %232 = add nsw i64 %231, %212
  %233 = add nsw i64 %231, %211
  br label %234

234:                                              ; preds = %234, %230
  %235 = phi i64 [ 0, %230 ], [ %250, %234 ]
  %236 = add i64 %235, %211
  %237 = add i64 %235, %212
  %238 = getelementptr inbounds i32, ptr %163, i64 %236
  %239 = load <2 x i32>, ptr %238, align 4, !tbaa !5
  %240 = getelementptr inbounds i32, ptr %238, i64 2
  %241 = load <2 x i32>, ptr %240, align 4, !tbaa !5
  %242 = getelementptr inbounds i32, ptr %141, i64 %237
  store <2 x i32> %239, ptr %242, align 4, !tbaa !5
  %243 = getelementptr inbounds i32, ptr %242, i64 2
  store <2 x i32> %241, ptr %243, align 4, !tbaa !5
  %244 = getelementptr inbounds double, ptr %166, i64 %236
  %245 = load <2 x double>, ptr %244, align 8, !tbaa !93
  %246 = getelementptr inbounds double, ptr %244, i64 2
  %247 = load <2 x double>, ptr %246, align 8, !tbaa !93
  %248 = getelementptr inbounds double, ptr %142, i64 %237
  store <2 x double> %245, ptr %248, align 8, !tbaa !93
  %249 = getelementptr inbounds double, ptr %248, i64 2
  store <2 x double> %247, ptr %249, align 8, !tbaa !93
  %250 = add nuw i64 %235, 4
  %251 = icmp eq i64 %250, %231
  br i1 %251, label %252, label %234, !llvm.loop !145

252:                                              ; preds = %234
  %253 = icmp eq i64 %214, %231
  br i1 %253, label %276, label %254

254:                                              ; preds = %216, %210, %252
  %255 = phi i64 [ %212, %216 ], [ %212, %210 ], [ %232, %252 ]
  %256 = phi i64 [ %211, %216 ], [ %211, %210 ], [ %233, %252 ]
  %257 = sub nsw i64 %213, %256
  %258 = xor i64 %256, -1
  %259 = and i64 %257, 1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %270, label %261

261:                                              ; preds = %254
  %262 = getelementptr inbounds i32, ptr %163, i64 %256
  %263 = load i32, ptr %262, align 4, !tbaa !5
  %264 = getelementptr inbounds i32, ptr %141, i64 %255
  store i32 %263, ptr %264, align 4, !tbaa !5
  %265 = getelementptr inbounds double, ptr %166, i64 %256
  %266 = load double, ptr %265, align 8, !tbaa !93
  %267 = add nsw i64 %255, 1
  %268 = getelementptr inbounds double, ptr %142, i64 %255
  store double %266, ptr %268, align 8, !tbaa !93
  %269 = add nsw i64 %256, 1
  br label %270

270:                                              ; preds = %261, %254
  %271 = phi i64 [ undef, %254 ], [ %267, %261 ]
  %272 = phi i64 [ %255, %254 ], [ %267, %261 ]
  %273 = phi i64 [ %256, %254 ], [ %269, %261 ]
  %274 = sub nsw i64 0, %213
  %275 = icmp eq i64 %258, %274
  br i1 %275, label %276, label %283

276:                                              ; preds = %270, %283, %252
  %277 = phi i64 [ %232, %252 ], [ %271, %270 ], [ %299, %283 ]
  %278 = trunc i64 %277 to i32
  br label %279

279:                                              ; preds = %276, %199
  %280 = phi i32 [ %201, %199 ], [ %278, %276 ]
  %281 = add nuw i64 %200, 1
  %282 = icmp eq i64 %281, %168
  br i1 %282, label %169, label %199, !llvm.loop !146

283:                                              ; preds = %270, %283
  %284 = phi i64 [ %299, %283 ], [ %272, %270 ]
  %285 = phi i64 [ %301, %283 ], [ %273, %270 ]
  %286 = getelementptr inbounds i32, ptr %163, i64 %285
  %287 = load i32, ptr %286, align 4, !tbaa !5
  %288 = getelementptr inbounds i32, ptr %141, i64 %284
  store i32 %287, ptr %288, align 4, !tbaa !5
  %289 = getelementptr inbounds double, ptr %166, i64 %285
  %290 = load double, ptr %289, align 8, !tbaa !93
  %291 = add nsw i64 %284, 1
  %292 = getelementptr inbounds double, ptr %142, i64 %284
  store double %290, ptr %292, align 8, !tbaa !93
  %293 = add nsw i64 %285, 1
  %294 = getelementptr inbounds i32, ptr %163, i64 %293
  %295 = load i32, ptr %294, align 4, !tbaa !5
  %296 = getelementptr inbounds i32, ptr %141, i64 %291
  store i32 %295, ptr %296, align 4, !tbaa !5
  %297 = getelementptr inbounds double, ptr %166, i64 %293
  %298 = load double, ptr %297, align 8, !tbaa !93
  %299 = add nsw i64 %284, 2
  %300 = getelementptr inbounds double, ptr %142, i64 %291
  store double %298, ptr %300, align 8, !tbaa !93
  %301 = add nsw i64 %285, 2
  %302 = icmp eq i64 %301, %213
  br i1 %302, label %276, label %283, !llvm.loop !147

303:                                              ; preds = %192, %189, %187, %183
  %304 = load ptr, ptr %174, align 8, !tbaa !87
  br i1 %13, label %311, label %305

305:                                              ; preds = %303
  %306 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 5
  %307 = load ptr, ptr %306, align 8
  %308 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 6
  %309 = load ptr, ptr %308, align 8
  %310 = tail call i64 @llvm.umax.i64(i64 %9, i64 1)
  br label %368

311:                                              ; preds = %384, %303
  %312 = phi i32 [ 0, %303 ], [ %385, %384 ]
  %313 = getelementptr inbounds i32, ptr %304, i64 %9
  store i32 %312, ptr %313, align 4, !tbaa !5
  %314 = sext i32 %312 to i64
  %315 = ptrtoint ptr %140 to i64
  %316 = ptrtoint ptr %141 to i64
  %317 = sub i64 %315, %316
  %318 = ashr exact i64 %317, 2
  %319 = add nsw i64 %318, %314
  %320 = icmp ugt i64 %319, %314
  br i1 %320, label %321, label %402

321:                                              ; preds = %311
  %322 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 5
  %323 = load ptr, ptr %322, align 8, !tbaa !87
  %324 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 6
  %325 = load ptr, ptr %324, align 8, !tbaa !91
  %326 = icmp ult i64 %317, 56
  br i1 %326, label %361, label %327

327:                                              ; preds = %321
  %328 = ptrtoint ptr %325 to i64
  %329 = ptrtoint ptr %323 to i64
  %330 = shl nsw i64 %314, 2
  %331 = add i64 %330, %329
  %332 = sub i64 %331, %316
  %333 = icmp ult i64 %332, 16
  %334 = shl nsw i64 %314, 3
  %335 = add i64 %334, %328
  %336 = sub i64 %335, %143
  %337 = icmp ult i64 %336, 32
  %338 = or i1 %333, %337
  br i1 %338, label %361, label %339

339:                                              ; preds = %327
  %340 = and i64 %318, -4
  %341 = add nsw i64 %340, %314
  br label %342

342:                                              ; preds = %342, %339
  %343 = phi i64 [ 0, %339 ], [ %357, %342 ]
  %344 = add i64 %343, %314
  %345 = getelementptr inbounds i32, ptr %141, i64 %343
  %346 = load <2 x i32>, ptr %345, align 4, !tbaa !5
  %347 = getelementptr inbounds i32, ptr %345, i64 2
  %348 = load <2 x i32>, ptr %347, align 4, !tbaa !5
  %349 = getelementptr inbounds i32, ptr %323, i64 %344
  store <2 x i32> %346, ptr %349, align 4, !tbaa !5
  %350 = getelementptr inbounds i32, ptr %349, i64 2
  store <2 x i32> %348, ptr %350, align 4, !tbaa !5
  %351 = getelementptr inbounds double, ptr %142, i64 %343
  %352 = load <2 x double>, ptr %351, align 8, !tbaa !93
  %353 = getelementptr inbounds double, ptr %351, i64 2
  %354 = load <2 x double>, ptr %353, align 8, !tbaa !93
  %355 = getelementptr inbounds double, ptr %325, i64 %344
  store <2 x double> %352, ptr %355, align 8, !tbaa !93
  %356 = getelementptr inbounds double, ptr %355, i64 2
  store <2 x double> %354, ptr %356, align 8, !tbaa !93
  %357 = add nuw i64 %343, 4
  %358 = icmp eq i64 %357, %340
  br i1 %358, label %359, label %342, !llvm.loop !148

359:                                              ; preds = %342
  %360 = icmp eq i64 %318, %340
  br i1 %360, label %402, label %361

361:                                              ; preds = %327, %321, %359
  %362 = phi i64 [ %314, %327 ], [ %314, %321 ], [ %341, %359 ]
  br label %422

363:                                              ; preds = %412
  %364 = landingpad { ptr, i32 }
          cleanup
  %365 = icmp eq ptr %170, null
  br i1 %365, label %516, label %366

366:                                              ; preds = %185, %363
  %367 = phi { ptr, i32 } [ %186, %185 ], [ %364, %363 ]
  tail call void @_ZdlPv(ptr noundef nonnull %170) #28
  br label %516

368:                                              ; preds = %305, %384
  %369 = phi i64 [ 0, %305 ], [ %386, %384 ]
  %370 = phi i32 [ 0, %305 ], [ %385, %384 ]
  %371 = getelementptr inbounds i32, ptr %304, i64 %369
  store i32 %370, ptr %371, align 4, !tbaa !5
  %372 = shl i64 %369, 1
  %373 = getelementptr inbounds i32, ptr %139, i64 %372
  %374 = load i32, ptr %373, align 4, !tbaa !5
  %375 = or i64 %372, 1
  %376 = getelementptr inbounds i32, ptr %139, i64 %375
  %377 = load i32, ptr %376, align 4, !tbaa !5
  %378 = icmp slt i32 %374, %377
  br i1 %378, label %379, label %384

379:                                              ; preds = %368
  %380 = sext i32 %374 to i64
  %381 = sext i32 %370 to i64
  br label %388

382:                                              ; preds = %388
  %383 = trunc i64 %396 to i32
  br label %384

384:                                              ; preds = %382, %368
  %385 = phi i32 [ %370, %368 ], [ %383, %382 ]
  %386 = add nuw i64 %369, 1
  %387 = icmp eq i64 %386, %310
  br i1 %387, label %311, label %368, !llvm.loop !149

388:                                              ; preds = %379, %388
  %389 = phi i64 [ %381, %379 ], [ %396, %388 ]
  %390 = phi i64 [ %380, %379 ], [ %398, %388 ]
  %391 = getelementptr inbounds i32, ptr %307, i64 %390
  %392 = load i32, ptr %391, align 4, !tbaa !5
  %393 = getelementptr inbounds i32, ptr %307, i64 %389
  store i32 %392, ptr %393, align 4, !tbaa !5
  %394 = getelementptr inbounds double, ptr %309, i64 %390
  %395 = load double, ptr %394, align 8, !tbaa !93
  %396 = add nsw i64 %389, 1
  %397 = getelementptr inbounds double, ptr %309, i64 %389
  store double %395, ptr %397, align 8, !tbaa !93
  %398 = add nsw i64 %390, 1
  %399 = load i32, ptr %376, align 4, !tbaa !5
  %400 = sext i32 %399 to i64
  %401 = icmp slt i64 %398, %400
  br i1 %401, label %388, label %382, !llvm.loop !150

402:                                              ; preds = %422, %359, %311
  %403 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 4
  %404 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %405 = load ptr, ptr %404, align 8, !tbaa !86
  %406 = load ptr, ptr %403, align 8, !tbaa !87
  %407 = ptrtoint ptr %405 to i64
  %408 = ptrtoint ptr %406 to i64
  %409 = sub i64 %407, %408
  %410 = ashr exact i64 %409, 2
  %411 = icmp ugt i64 %146, %410
  br i1 %411, label %412, label %416

412:                                              ; preds = %402
  %413 = sub nsw i64 %146, %410
  invoke void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %403, i64 noundef %413)
          to label %414 unwind label %363

414:                                              ; preds = %412
  %415 = load ptr, ptr %403, align 8, !tbaa !87
  br label %433

416:                                              ; preds = %402
  %417 = icmp ult i64 %146, %410
  br i1 %417, label %418, label %433

418:                                              ; preds = %416
  %419 = getelementptr inbounds i32, ptr %406, i64 %146
  %420 = icmp eq ptr %405, %419
  br i1 %420, label %433, label %421

421:                                              ; preds = %418
  store ptr %419, ptr %404, align 8, !tbaa !86
  br label %433

422:                                              ; preds = %361, %422
  %423 = phi i64 [ %431, %422 ], [ %362, %361 ]
  %424 = sub nsw i64 %423, %314
  %425 = getelementptr inbounds i32, ptr %141, i64 %424
  %426 = load i32, ptr %425, align 4, !tbaa !5
  %427 = getelementptr inbounds i32, ptr %323, i64 %423
  store i32 %426, ptr %427, align 4, !tbaa !5
  %428 = getelementptr inbounds double, ptr %142, i64 %424
  %429 = load double, ptr %428, align 8, !tbaa !93
  %430 = getelementptr inbounds double, ptr %325, i64 %423
  store double %429, ptr %430, align 8, !tbaa !93
  %431 = add nuw i64 %423, 1
  %432 = icmp ugt i64 %319, %431
  br i1 %432, label %422, label %402, !llvm.loop !151

433:                                              ; preds = %414, %421, %418, %416
  %434 = phi ptr [ %415, %414 ], [ %406, %421 ], [ %406, %418 ], [ %406, %416 ]
  %435 = tail call i64 @llvm.umax.i64(i64 %146, i64 1)
  %436 = icmp ult i64 %435, 8
  %437 = ptrtoint ptr %434 to i64
  %438 = sub i64 %437, %172
  %439 = icmp ult i64 %438, 32
  %440 = select i1 %436, i1 true, i1 %439
  br i1 %440, label %461, label %441

441:                                              ; preds = %433
  %442 = and i64 %435, -8
  %443 = insertelement <4 x i32> poison, i32 %312, i64 0
  %444 = shufflevector <4 x i32> %443, <4 x i32> poison, <4 x i32> zeroinitializer
  %445 = insertelement <4 x i32> poison, i32 %312, i64 0
  %446 = shufflevector <4 x i32> %445, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %447

447:                                              ; preds = %447, %441
  %448 = phi i64 [ 0, %441 ], [ %457, %447 ]
  %449 = getelementptr inbounds i32, ptr %170, i64 %448
  %450 = load <4 x i32>, ptr %449, align 4, !tbaa !5
  %451 = getelementptr inbounds i32, ptr %449, i64 4
  %452 = load <4 x i32>, ptr %451, align 4, !tbaa !5
  %453 = add nsw <4 x i32> %450, %444
  %454 = add nsw <4 x i32> %452, %446
  %455 = getelementptr inbounds i32, ptr %434, i64 %448
  store <4 x i32> %453, ptr %455, align 4, !tbaa !5
  %456 = getelementptr inbounds i32, ptr %455, i64 4
  store <4 x i32> %454, ptr %456, align 4, !tbaa !5
  %457 = add nuw i64 %448, 8
  %458 = icmp eq i64 %457, %442
  br i1 %458, label %459, label %447, !llvm.loop !152

459:                                              ; preds = %447
  %460 = icmp eq i64 %435, %442
  br i1 %460, label %480, label %461

461:                                              ; preds = %433, %459
  %462 = phi i64 [ 0, %433 ], [ %442, %459 ]
  %463 = xor i64 %462, -1
  %464 = add i64 %435, %463
  %465 = and i64 %435, 3
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %477, label %467

467:                                              ; preds = %461, %467
  %468 = phi i64 [ %474, %467 ], [ %462, %461 ]
  %469 = phi i64 [ %475, %467 ], [ 0, %461 ]
  %470 = getelementptr inbounds i32, ptr %170, i64 %468
  %471 = load i32, ptr %470, align 4, !tbaa !5
  %472 = add nsw i32 %471, %312
  %473 = getelementptr inbounds i32, ptr %434, i64 %468
  store i32 %472, ptr %473, align 4, !tbaa !5
  %474 = add nuw i64 %468, 1
  %475 = add i64 %469, 1
  %476 = icmp eq i64 %475, %465
  br i1 %476, label %477, label %467, !llvm.loop !153

477:                                              ; preds = %467, %461
  %478 = phi i64 [ %462, %461 ], [ %474, %467 ]
  %479 = icmp ult i64 %464, 3
  br i1 %479, label %480, label %493

480:                                              ; preds = %477, %493, %459
  tail call void @_ZdlPv(ptr noundef nonnull %170) #28
  %481 = icmp eq ptr %142, null
  br i1 %481, label %483, label %482

482:                                              ; preds = %480
  tail call void @_ZdlPv(ptr noundef nonnull %142) #28
  br label %483

483:                                              ; preds = %480, %482
  %484 = icmp eq ptr %141, null
  br i1 %484, label %486, label %485

485:                                              ; preds = %483
  tail call void @_ZdlPv(ptr noundef nonnull %141) #28
  br label %486

486:                                              ; preds = %483, %485
  %487 = icmp eq ptr %138, null
  br i1 %487, label %489, label %488

488:                                              ; preds = %486
  tail call void @_ZdlPv(ptr noundef nonnull %138) #28
  br label %489

489:                                              ; preds = %486, %488
  %490 = icmp eq ptr %139, null
  br i1 %490, label %492, label %491

491:                                              ; preds = %489
  tail call void @_ZdlPv(ptr noundef nonnull %139) #28
  br label %492

492:                                              ; preds = %489, %491
  ret void

493:                                              ; preds = %477, %493
  %494 = phi i64 [ %514, %493 ], [ %478, %477 ]
  %495 = getelementptr inbounds i32, ptr %170, i64 %494
  %496 = load i32, ptr %495, align 4, !tbaa !5
  %497 = add nsw i32 %496, %312
  %498 = getelementptr inbounds i32, ptr %434, i64 %494
  store i32 %497, ptr %498, align 4, !tbaa !5
  %499 = add nuw i64 %494, 1
  %500 = getelementptr inbounds i32, ptr %170, i64 %499
  %501 = load i32, ptr %500, align 4, !tbaa !5
  %502 = add nsw i32 %501, %312
  %503 = getelementptr inbounds i32, ptr %434, i64 %499
  store i32 %502, ptr %503, align 4, !tbaa !5
  %504 = add nuw i64 %494, 2
  %505 = getelementptr inbounds i32, ptr %170, i64 %504
  %506 = load i32, ptr %505, align 4, !tbaa !5
  %507 = add nsw i32 %506, %312
  %508 = getelementptr inbounds i32, ptr %434, i64 %504
  store i32 %507, ptr %508, align 4, !tbaa !5
  %509 = add nuw i64 %494, 3
  %510 = getelementptr inbounds i32, ptr %170, i64 %509
  %511 = load i32, ptr %510, align 4, !tbaa !5
  %512 = add nsw i32 %511, %312
  %513 = getelementptr inbounds i32, ptr %434, i64 %509
  store i32 %512, ptr %513, align 4, !tbaa !5
  %514 = add nuw i64 %494, 4
  %515 = icmp eq i64 %514, %435
  br i1 %515, label %480, label %493, !llvm.loop !155

516:                                              ; preds = %366, %363, %197
  %517 = phi { ptr, i32 } [ %198, %197 ], [ %364, %363 ], [ %367, %366 ]
  %518 = icmp eq ptr %142, null
  br i1 %518, label %520, label %519

519:                                              ; preds = %516
  tail call void @_ZdlPv(ptr noundef nonnull %142) #28
  br label %520

520:                                              ; preds = %519, %516
  %521 = icmp eq ptr %141, null
  br i1 %521, label %527, label %522

522:                                              ; preds = %195, %520
  %523 = phi ptr [ %19, %195 ], [ %138, %520 ]
  %524 = phi ptr [ %16, %195 ], [ %139, %520 ]
  %525 = phi { ptr, i32 } [ %196, %195 ], [ %517, %520 ]
  %526 = phi ptr [ %38, %195 ], [ %141, %520 ]
  tail call void @_ZdlPv(ptr noundef nonnull %526) #28
  br label %527

527:                                              ; preds = %520, %522
  %528 = phi ptr [ %138, %520 ], [ %523, %522 ]
  %529 = phi ptr [ %139, %520 ], [ %524, %522 ]
  %530 = phi { ptr, i32 } [ %517, %520 ], [ %525, %522 ]
  %531 = icmp eq ptr %528, null
  br i1 %531, label %536, label %532

532:                                              ; preds = %193, %527
  %533 = phi { ptr, i32 } [ %194, %193 ], [ %530, %527 ]
  %534 = phi ptr [ %16, %193 ], [ %529, %527 ]
  %535 = phi ptr [ %19, %193 ], [ %528, %527 ]
  tail call void @_ZdlPv(ptr noundef nonnull %535) #28
  br label %536

536:                                              ; preds = %532, %527
  %537 = phi { ptr, i32 } [ %533, %532 ], [ %530, %527 ]
  %538 = phi ptr [ %534, %532 ], [ %529, %527 ]
  %539 = icmp eq ptr %538, null
  br i1 %539, label %543, label %540

540:                                              ; preds = %45, %536
  %541 = phi { ptr, i32 } [ %46, %45 ], [ %537, %536 ]
  %542 = phi ptr [ %16, %45 ], [ %538, %536 ]
  tail call void @_ZdlPv(ptr noundef nonnull %542) #28
  br label %543

543:                                              ; preds = %540, %536
  %544 = phi { ptr, i32 } [ %541, %540 ], [ %537, %536 ]
  resume { ptr, i32 } %544
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE8cg_solveINS_9CSRMatrixIdiiEENS_6VectorIdiiEENS_14matvec_overlapIS2_S4_EEEEvRT_RKT0_RS9_T1_NS7_16LocalOrdinalTypeERNS_10TypeTraitsINS7_10ScalarTypeEE14magnitude_typeERSE_SJ_Pd(ptr noundef nonnull align 8 dereferenceable(132) %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(32) %2, i32 noundef %3, ptr noundef nonnull align 8 dereferenceable(8) %4, ptr noundef nonnull align 4 dereferenceable(4) %5, ptr noundef nonnull align 8 dereferenceable(8) %6, ptr noundef %7) local_unnamed_addr #7 comdat personality ptr @__gxx_personality_v0 {
  %9 = tail call noundef double @_ZN6miniFE7mytimerEv()
  %10 = load i8, ptr %0, align 8, !tbaa !76, !range !57, !noundef !58
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %39

12:                                               ; preds = %8
  %13 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.106, i64 noundef 92)
  %14 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.107, i64 noundef 78)
  %15 = load ptr, ptr @_ZSt4cerr, align 8, !tbaa !30
  %16 = getelementptr i8, ptr %15, i64 -24
  %17 = load i64, ptr %16, align 8
  %18 = getelementptr inbounds i8, ptr @_ZSt4cerr, i64 %17
  %19 = getelementptr inbounds %"class.std::basic_ios", ptr %18, i64 0, i32 5
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %12
  tail call void @_ZSt16__throw_bad_castv() #26
  unreachable

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.std::ctype", ptr %20, i64 0, i32 8
  %25 = load i8, ptr %24, align 8, !tbaa !40
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::ctype", ptr %20, i64 0, i32 9, i64 10
  %29 = load i8, ptr %28, align 1, !tbaa !20
  br label %35

30:                                               ; preds = %23
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %20)
  %31 = load ptr, ptr %20, align 8, !tbaa !30
  %32 = getelementptr inbounds ptr, ptr %31, i64 6
  %33 = load ptr, ptr %32, align 8
  %34 = tail call noundef signext i8 %33(ptr noundef nonnull align 8 dereferenceable(570) %20, i8 noundef signext 10)
  br label %35

35:                                               ; preds = %27, %30
  %36 = phi i8 [ %29, %27 ], [ %34, %30 ]
  %37 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef signext %36)
  %38 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %37)
  br label %1205

39:                                               ; preds = %8
  %40 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 2
  %41 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !86
  %43 = load ptr, ptr %40, align 8, !tbaa !87
  %44 = ptrtoint ptr %42 to i64
  %45 = ptrtoint ptr %43 to i64
  %46 = sub i64 %44, %45
  %47 = lshr exact i64 %46, 2
  %48 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 7
  %49 = load i32, ptr %48, align 8, !tbaa !96
  %50 = trunc i64 %47 to i32
  %51 = shl i64 %46, 30
  %52 = ashr i64 %51, 32
  %53 = icmp slt i32 %50, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %39
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.34) #26
  unreachable

55:                                               ; preds = %39
  %56 = icmp eq i32 %50, 0
  br i1 %56, label %67, label %57

57:                                               ; preds = %55
  %58 = shl nuw nsw i64 %52, 3
  %59 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %58) #27
  store double 0.000000e+00, ptr %59, align 8, !tbaa !93
  %60 = getelementptr double, ptr %59, i64 1
  %61 = icmp eq i32 %50, 1
  br i1 %61, label %65, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds double, ptr %59, i64 %52
  %64 = add nsw i64 %58, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %60, i8 0, i64 %64, i1 false), !tbaa !93
  br label %65

65:                                               ; preds = %62, %57
  %66 = phi ptr [ %63, %62 ], [ %60, %57 ]
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %59, i8 0, i64 %58, i1 false), !tbaa !93
  br label %67

67:                                               ; preds = %55, %65
  %68 = phi ptr [ %66, %65 ], [ null, %55 ]
  %69 = phi ptr [ %59, %65 ], [ null, %55 ]
  %70 = ptrtoint ptr %69 to i64
  %71 = sext i32 %49 to i64
  %72 = icmp slt i32 %49, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %67
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.34) #26
          to label %74 unwind label %111

74:                                               ; preds = %73
  unreachable

75:                                               ; preds = %67
  %76 = icmp eq i32 %49, 0
  br i1 %76, label %88, label %77

77:                                               ; preds = %75
  %78 = shl nuw nsw i64 %71, 3
  %79 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %78) #27
          to label %80 unwind label %111

80:                                               ; preds = %77
  store double 0.000000e+00, ptr %79, align 8, !tbaa !93
  %81 = getelementptr double, ptr %79, i64 1
  %82 = icmp eq i32 %49, 1
  br i1 %82, label %86, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds double, ptr %79, i64 %71
  %85 = add nsw i64 %78, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %81, i8 0, i64 %85, i1 false), !tbaa !93
  br label %86

86:                                               ; preds = %83, %80
  %87 = phi ptr [ %84, %83 ], [ %81, %80 ]
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %79, i8 0, i64 %78, i1 false), !tbaa !93
  br label %88

88:                                               ; preds = %75, %86
  %89 = phi ptr [ %87, %86 ], [ null, %75 ]
  %90 = phi ptr [ %79, %86 ], [ null, %75 ]
  %91 = ptrtoint ptr %90 to i64
  br i1 %56, label %103, label %92

92:                                               ; preds = %88
  %93 = shl nuw nsw i64 %52, 3
  %94 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %93) #27
          to label %95 unwind label %113

95:                                               ; preds = %92
  store double 0.000000e+00, ptr %94, align 8, !tbaa !93
  %96 = getelementptr double, ptr %94, i64 1
  %97 = icmp eq i32 %50, 1
  br i1 %97, label %101, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds double, ptr %94, i64 %52
  %100 = add nsw i64 %93, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %96, i8 0, i64 %100, i1 false), !tbaa !93
  br label %101

101:                                              ; preds = %98, %95
  %102 = phi ptr [ %99, %98 ], [ %96, %95 ]
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %94, i8 0, i64 %93, i1 false), !tbaa !93
  br label %103

103:                                              ; preds = %101, %88
  %104 = phi ptr [ %94, %101 ], [ null, %88 ]
  %105 = phi ptr [ %102, %101 ], [ null, %88 ]
  %106 = ptrtoint ptr %104 to i64
  store double 0.000000e+00, ptr %6, align 8, !tbaa !93
  %107 = sdiv i32 %3, 10
  %108 = tail call i32 @llvm.smin.i32(i32 %107, i32 50)
  %109 = tail call i32 @llvm.smax.i32(i32 %108, i32 1)
  %110 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %115 unwind label %559

111:                                              ; preds = %77, %73
  %112 = landingpad { ptr, i32 }
          cleanup
  br label %1216

113:                                              ; preds = %92
  %114 = landingpad { ptr, i32 }
          cleanup
  br label %1212

115:                                              ; preds = %103
  %116 = getelementptr inbounds %"struct.miniFE::Vector", ptr %2, i64 0, i32 2
  %117 = getelementptr inbounds %"struct.miniFE::Vector", ptr %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %118 = load ptr, ptr %117, align 8, !tbaa !95
  %119 = load ptr, ptr %116, align 8, !tbaa !91
  %120 = ptrtoint ptr %118 to i64
  %121 = ptrtoint ptr %119 to i64
  %122 = sub i64 %120, %121
  %123 = lshr exact i64 %122, 3
  %124 = trunc i64 %123 to i32
  %125 = icmp sgt i32 %124, 0
  br i1 %125, label %126, label %199

126:                                              ; preds = %115
  %127 = and i64 %123, 4294967295
  %128 = icmp ult i64 %127, 4
  %129 = sub i64 %91, %121
  %130 = icmp ult i64 %129, 32
  %131 = select i1 %128, i1 true, i1 %130
  br i1 %131, label %151, label %132

132:                                              ; preds = %126
  %133 = and i64 %123, 3
  %134 = sub nsw i64 %127, %133
  br label %135

135:                                              ; preds = %135, %132
  %136 = phi i64 [ 0, %132 ], [ %147, %135 ]
  %137 = getelementptr inbounds double, ptr %119, i64 %136
  %138 = load <2 x double>, ptr %137, align 8, !tbaa !93
  %139 = getelementptr inbounds double, ptr %137, i64 2
  %140 = load <2 x double>, ptr %139, align 8, !tbaa !93
  %141 = fmul <2 x double> %138, zeroinitializer
  %142 = fmul <2 x double> %140, zeroinitializer
  %143 = fadd <2 x double> %138, %141
  %144 = fadd <2 x double> %140, %142
  %145 = getelementptr inbounds double, ptr %90, i64 %136
  store <2 x double> %143, ptr %145, align 8, !tbaa !93
  %146 = getelementptr inbounds double, ptr %145, i64 2
  store <2 x double> %144, ptr %146, align 8, !tbaa !93
  %147 = add nuw i64 %136, 4
  %148 = icmp eq i64 %147, %134
  br i1 %148, label %149, label %135, !llvm.loop !156

149:                                              ; preds = %135
  %150 = icmp eq i64 %133, 0
  br i1 %150, label %199, label %151

151:                                              ; preds = %126, %149
  %152 = phi i64 [ 0, %126 ], [ %134, %149 ]
  %153 = sub nsw i64 %123, %152
  %154 = xor i64 %152, -1
  %155 = add nsw i64 %127, %154
  %156 = and i64 %153, 3
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %169, label %158

158:                                              ; preds = %151, %158
  %159 = phi i64 [ %166, %158 ], [ %152, %151 ]
  %160 = phi i64 [ %167, %158 ], [ 0, %151 ]
  %161 = getelementptr inbounds double, ptr %119, i64 %159
  %162 = load double, ptr %161, align 8, !tbaa !93
  %163 = fmul double %162, 0.000000e+00
  %164 = fadd double %162, %163
  %165 = getelementptr inbounds double, ptr %90, i64 %159
  store double %164, ptr %165, align 8, !tbaa !93
  %166 = add nuw nsw i64 %159, 1
  %167 = add i64 %160, 1
  %168 = icmp eq i64 %167, %156
  br i1 %168, label %169, label %158, !llvm.loop !157

169:                                              ; preds = %158, %151
  %170 = phi i64 [ %152, %151 ], [ %166, %158 ]
  %171 = icmp ult i64 %155, 3
  br i1 %171, label %199, label %172

172:                                              ; preds = %169, %172
  %173 = phi i64 [ %197, %172 ], [ %170, %169 ]
  %174 = getelementptr inbounds double, ptr %119, i64 %173
  %175 = load double, ptr %174, align 8, !tbaa !93
  %176 = fmul double %175, 0.000000e+00
  %177 = fadd double %175, %176
  %178 = getelementptr inbounds double, ptr %90, i64 %173
  store double %177, ptr %178, align 8, !tbaa !93
  %179 = add nuw nsw i64 %173, 1
  %180 = getelementptr inbounds double, ptr %119, i64 %179
  %181 = load double, ptr %180, align 8, !tbaa !93
  %182 = fmul double %181, 0.000000e+00
  %183 = fadd double %181, %182
  %184 = getelementptr inbounds double, ptr %90, i64 %179
  store double %183, ptr %184, align 8, !tbaa !93
  %185 = add nuw nsw i64 %173, 2
  %186 = getelementptr inbounds double, ptr %119, i64 %185
  %187 = load double, ptr %186, align 8, !tbaa !93
  %188 = fmul double %187, 0.000000e+00
  %189 = fadd double %187, %188
  %190 = getelementptr inbounds double, ptr %90, i64 %185
  store double %189, ptr %190, align 8, !tbaa !93
  %191 = add nuw nsw i64 %173, 3
  %192 = getelementptr inbounds double, ptr %119, i64 %191
  %193 = load double, ptr %192, align 8, !tbaa !93
  %194 = fmul double %193, 0.000000e+00
  %195 = fadd double %193, %194
  %196 = getelementptr inbounds double, ptr %90, i64 %191
  store double %195, ptr %196, align 8, !tbaa !93
  %197 = add nuw nsw i64 %173, 4
  %198 = icmp eq i64 %197, %127
  br i1 %198, label %199, label %172, !llvm.loop !158

199:                                              ; preds = %169, %172, %149, %115
  %200 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %201 unwind label %559

201:                                              ; preds = %199
  %202 = fsub double %200, %110
  %203 = fadd double %202, 0.000000e+00
  %204 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %205 unwind label %559

205:                                              ; preds = %201
  %206 = load ptr, ptr %41, align 8, !tbaa !86
  %207 = load ptr, ptr %40, align 8, !tbaa !87
  %208 = ptrtoint ptr %206 to i64
  %209 = ptrtoint ptr %207 to i64
  %210 = sub i64 %208, %209
  %211 = lshr exact i64 %210, 2
  %212 = trunc i64 %211 to i32
  %213 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 3
  %214 = load ptr, ptr %213, align 8, !tbaa !87
  %215 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 5
  %216 = load ptr, ptr %215, align 8, !tbaa !87
  %217 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 6
  %218 = load ptr, ptr %217, align 8, !tbaa !91
  %219 = icmp sgt i32 %212, 0
  br i1 %219, label %220, label %309

220:                                              ; preds = %205
  %221 = and i64 %211, 4294967295
  %222 = load i32, ptr %214, align 4, !tbaa !5
  br label %223

223:                                              ; preds = %262, %220
  %224 = phi i32 [ %222, %220 ], [ %231, %262 ]
  %225 = phi i64 [ 0, %220 ], [ %229, %262 ]
  %226 = getelementptr inbounds double, ptr %104, i64 %225
  %227 = load double, ptr %226, align 8, !tbaa !93
  %228 = fmul double %227, 0.000000e+00
  %229 = add nuw nsw i64 %225, 1
  %230 = getelementptr inbounds i32, ptr %214, i64 %229
  %231 = load i32, ptr %230, align 4, !tbaa !5
  %232 = icmp slt i32 %224, %231
  br i1 %232, label %233, label %262

233:                                              ; preds = %223
  %234 = sext i32 %224 to i64
  %235 = sext i32 %231 to i64
  %236 = sub nsw i64 %235, %234
  %237 = xor i64 %234, -1
  %238 = add nsw i64 %237, %235
  %239 = and i64 %236, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %257, label %241

241:                                              ; preds = %233, %241
  %242 = phi i64 [ %254, %241 ], [ %234, %233 ]
  %243 = phi double [ %253, %241 ], [ %228, %233 ]
  %244 = phi i64 [ %255, %241 ], [ 0, %233 ]
  %245 = getelementptr inbounds double, ptr %218, i64 %242
  %246 = load double, ptr %245, align 8, !tbaa !93
  %247 = getelementptr inbounds i32, ptr %216, i64 %242
  %248 = load i32, ptr %247, align 4, !tbaa !5
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds double, ptr %90, i64 %249
  %251 = load double, ptr %250, align 8, !tbaa !93
  %252 = fmul double %246, %251
  %253 = fadd double %243, %252
  %254 = add nsw i64 %242, 1
  %255 = add i64 %244, 1
  %256 = icmp eq i64 %255, %239
  br i1 %256, label %257, label %241, !llvm.loop !159

257:                                              ; preds = %241, %233
  %258 = phi double [ undef, %233 ], [ %253, %241 ]
  %259 = phi i64 [ %234, %233 ], [ %254, %241 ]
  %260 = phi double [ %228, %233 ], [ %253, %241 ]
  %261 = icmp ult i64 %238, 3
  br i1 %261, label %262, label %265

262:                                              ; preds = %257, %265, %223
  %263 = phi double [ %228, %223 ], [ %258, %257 ], [ %306, %265 ]
  store double %263, ptr %226, align 8, !tbaa !93
  %264 = icmp eq i64 %229, %221
  br i1 %264, label %309, label %223, !llvm.loop !160

265:                                              ; preds = %257, %265
  %266 = phi i64 [ %307, %265 ], [ %259, %257 ]
  %267 = phi double [ %306, %265 ], [ %260, %257 ]
  %268 = getelementptr inbounds double, ptr %218, i64 %266
  %269 = load double, ptr %268, align 8, !tbaa !93
  %270 = getelementptr inbounds i32, ptr %216, i64 %266
  %271 = load i32, ptr %270, align 4, !tbaa !5
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds double, ptr %90, i64 %272
  %274 = load double, ptr %273, align 8, !tbaa !93
  %275 = fmul double %269, %274
  %276 = fadd double %267, %275
  %277 = add nsw i64 %266, 1
  %278 = getelementptr inbounds double, ptr %218, i64 %277
  %279 = load double, ptr %278, align 8, !tbaa !93
  %280 = getelementptr inbounds i32, ptr %216, i64 %277
  %281 = load i32, ptr %280, align 4, !tbaa !5
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds double, ptr %90, i64 %282
  %284 = load double, ptr %283, align 8, !tbaa !93
  %285 = fmul double %279, %284
  %286 = fadd double %276, %285
  %287 = add nsw i64 %266, 2
  %288 = getelementptr inbounds double, ptr %218, i64 %287
  %289 = load double, ptr %288, align 8, !tbaa !93
  %290 = getelementptr inbounds i32, ptr %216, i64 %287
  %291 = load i32, ptr %290, align 4, !tbaa !5
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds double, ptr %90, i64 %292
  %294 = load double, ptr %293, align 8, !tbaa !93
  %295 = fmul double %289, %294
  %296 = fadd double %286, %295
  %297 = add nsw i64 %266, 3
  %298 = getelementptr inbounds double, ptr %218, i64 %297
  %299 = load double, ptr %298, align 8, !tbaa !93
  %300 = getelementptr inbounds i32, ptr %216, i64 %297
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds double, ptr %90, i64 %302
  %304 = load double, ptr %303, align 8, !tbaa !93
  %305 = fmul double %299, %304
  %306 = fadd double %296, %305
  %307 = add nsw i64 %266, 4
  %308 = icmp eq i64 %307, %235
  br i1 %308, label %262, label %265, !llvm.loop !161

309:                                              ; preds = %262, %205
  %310 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %311 unwind label %559

311:                                              ; preds = %309
  %312 = fsub double %310, %204
  %313 = fadd double %312, 0.000000e+00
  %314 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %315 unwind label %559

315:                                              ; preds = %311
  %316 = getelementptr inbounds %"struct.miniFE::Vector", ptr %1, i64 0, i32 2
  %317 = getelementptr inbounds %"struct.miniFE::Vector", ptr %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %318 = load ptr, ptr %317, align 8, !tbaa !95
  %319 = load ptr, ptr %316, align 8, !tbaa !91
  %320 = ptrtoint ptr %318 to i64
  %321 = ptrtoint ptr %319 to i64
  %322 = sub i64 %320, %321
  %323 = lshr exact i64 %322, 3
  %324 = trunc i64 %323 to i32
  %325 = icmp sgt i32 %324, 0
  br i1 %325, label %326, label %409

326:                                              ; preds = %315
  %327 = and i64 %323, 4294967295
  %328 = icmp ult i64 %327, 8
  br i1 %328, label %356, label %329

329:                                              ; preds = %326
  %330 = sub i64 %70, %321
  %331 = icmp ult i64 %330, 32
  %332 = sub i64 %70, %106
  %333 = icmp ult i64 %332, 32
  %334 = or i1 %331, %333
  br i1 %334, label %356, label %335

335:                                              ; preds = %329
  %336 = and i64 %323, 3
  %337 = sub nsw i64 %327, %336
  br label %338

338:                                              ; preds = %338, %335
  %339 = phi i64 [ 0, %335 ], [ %352, %338 ]
  %340 = getelementptr inbounds double, ptr %319, i64 %339
  %341 = load <2 x double>, ptr %340, align 8, !tbaa !93
  %342 = getelementptr inbounds double, ptr %340, i64 2
  %343 = load <2 x double>, ptr %342, align 8, !tbaa !93
  %344 = getelementptr inbounds double, ptr %104, i64 %339
  %345 = load <2 x double>, ptr %344, align 8, !tbaa !93
  %346 = getelementptr inbounds double, ptr %344, i64 2
  %347 = load <2 x double>, ptr %346, align 8, !tbaa !93
  %348 = fsub <2 x double> %341, %345
  %349 = fsub <2 x double> %343, %347
  %350 = getelementptr inbounds double, ptr %69, i64 %339
  store <2 x double> %348, ptr %350, align 8, !tbaa !93
  %351 = getelementptr inbounds double, ptr %350, i64 2
  store <2 x double> %349, ptr %351, align 8, !tbaa !93
  %352 = add nuw i64 %339, 4
  %353 = icmp eq i64 %352, %337
  br i1 %353, label %354, label %338, !llvm.loop !162

354:                                              ; preds = %338
  %355 = icmp eq i64 %336, 0
  br i1 %355, label %409, label %356

356:                                              ; preds = %329, %326, %354
  %357 = phi i64 [ 0, %329 ], [ 0, %326 ], [ %337, %354 ]
  %358 = sub nsw i64 %323, %357
  %359 = xor i64 %357, -1
  %360 = add nsw i64 %327, %359
  %361 = and i64 %358, 3
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %375, label %363

363:                                              ; preds = %356, %363
  %364 = phi i64 [ %372, %363 ], [ %357, %356 ]
  %365 = phi i64 [ %373, %363 ], [ 0, %356 ]
  %366 = getelementptr inbounds double, ptr %319, i64 %364
  %367 = load double, ptr %366, align 8, !tbaa !93
  %368 = getelementptr inbounds double, ptr %104, i64 %364
  %369 = load double, ptr %368, align 8, !tbaa !93
  %370 = fsub double %367, %369
  %371 = getelementptr inbounds double, ptr %69, i64 %364
  store double %370, ptr %371, align 8, !tbaa !93
  %372 = add nuw nsw i64 %364, 1
  %373 = add i64 %365, 1
  %374 = icmp eq i64 %373, %361
  br i1 %374, label %375, label %363, !llvm.loop !163

375:                                              ; preds = %363, %356
  %376 = phi i64 [ %357, %356 ], [ %372, %363 ]
  %377 = icmp ult i64 %360, 3
  br i1 %377, label %409, label %378

378:                                              ; preds = %375, %378
  %379 = phi i64 [ %407, %378 ], [ %376, %375 ]
  %380 = getelementptr inbounds double, ptr %319, i64 %379
  %381 = load double, ptr %380, align 8, !tbaa !93
  %382 = getelementptr inbounds double, ptr %104, i64 %379
  %383 = load double, ptr %382, align 8, !tbaa !93
  %384 = fsub double %381, %383
  %385 = getelementptr inbounds double, ptr %69, i64 %379
  store double %384, ptr %385, align 8, !tbaa !93
  %386 = add nuw nsw i64 %379, 1
  %387 = getelementptr inbounds double, ptr %319, i64 %386
  %388 = load double, ptr %387, align 8, !tbaa !93
  %389 = getelementptr inbounds double, ptr %104, i64 %386
  %390 = load double, ptr %389, align 8, !tbaa !93
  %391 = fsub double %388, %390
  %392 = getelementptr inbounds double, ptr %69, i64 %386
  store double %391, ptr %392, align 8, !tbaa !93
  %393 = add nuw nsw i64 %379, 2
  %394 = getelementptr inbounds double, ptr %319, i64 %393
  %395 = load double, ptr %394, align 8, !tbaa !93
  %396 = getelementptr inbounds double, ptr %104, i64 %393
  %397 = load double, ptr %396, align 8, !tbaa !93
  %398 = fsub double %395, %397
  %399 = getelementptr inbounds double, ptr %69, i64 %393
  store double %398, ptr %399, align 8, !tbaa !93
  %400 = add nuw nsw i64 %379, 3
  %401 = getelementptr inbounds double, ptr %319, i64 %400
  %402 = load double, ptr %401, align 8, !tbaa !93
  %403 = getelementptr inbounds double, ptr %104, i64 %400
  %404 = load double, ptr %403, align 8, !tbaa !93
  %405 = fsub double %402, %404
  %406 = getelementptr inbounds double, ptr %69, i64 %400
  store double %405, ptr %406, align 8, !tbaa !93
  %407 = add nuw nsw i64 %379, 4
  %408 = icmp eq i64 %407, %327
  br i1 %408, label %409, label %378, !llvm.loop !164

409:                                              ; preds = %375, %378, %354, %315
  %410 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %411 unwind label %559

411:                                              ; preds = %409
  %412 = fsub double %410, %314
  %413 = fadd double %203, %412
  %414 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %415 unwind label %559

415:                                              ; preds = %411
  %416 = ptrtoint ptr %68 to i64
  %417 = ptrtoint ptr %69 to i64
  %418 = sub i64 %416, %417
  %419 = lshr exact i64 %418, 3
  %420 = trunc i64 %419 to i32
  %421 = icmp sgt i32 %420, 0
  br i1 %421, label %422, label %471

422:                                              ; preds = %415
  %423 = and i64 %419, 4294967295
  %424 = add nsw i64 %423, -1
  %425 = and i64 %419, 3
  %426 = icmp ult i64 %424, 3
  br i1 %426, label %455, label %427

427:                                              ; preds = %422
  %428 = sub nsw i64 %423, %425
  br label %429

429:                                              ; preds = %429, %427
  %430 = phi i64 [ 0, %427 ], [ %452, %429 ]
  %431 = phi double [ 0.000000e+00, %427 ], [ %451, %429 ]
  %432 = phi i64 [ 0, %427 ], [ %453, %429 ]
  %433 = getelementptr inbounds double, ptr %69, i64 %430
  %434 = load double, ptr %433, align 8, !tbaa !93
  %435 = fmul double %434, %434
  %436 = fadd double %431, %435
  %437 = or i64 %430, 1
  %438 = getelementptr inbounds double, ptr %69, i64 %437
  %439 = load double, ptr %438, align 8, !tbaa !93
  %440 = fmul double %439, %439
  %441 = fadd double %436, %440
  %442 = or i64 %430, 2
  %443 = getelementptr inbounds double, ptr %69, i64 %442
  %444 = load double, ptr %443, align 8, !tbaa !93
  %445 = fmul double %444, %444
  %446 = fadd double %441, %445
  %447 = or i64 %430, 3
  %448 = getelementptr inbounds double, ptr %69, i64 %447
  %449 = load double, ptr %448, align 8, !tbaa !93
  %450 = fmul double %449, %449
  %451 = fadd double %446, %450
  %452 = add nuw nsw i64 %430, 4
  %453 = add i64 %432, 4
  %454 = icmp eq i64 %453, %428
  br i1 %454, label %455, label %429, !llvm.loop !165

455:                                              ; preds = %429, %422
  %456 = phi double [ undef, %422 ], [ %451, %429 ]
  %457 = phi i64 [ 0, %422 ], [ %452, %429 ]
  %458 = phi double [ 0.000000e+00, %422 ], [ %451, %429 ]
  %459 = icmp eq i64 %425, 0
  br i1 %459, label %471, label %460

460:                                              ; preds = %455, %460
  %461 = phi i64 [ %468, %460 ], [ %457, %455 ]
  %462 = phi double [ %467, %460 ], [ %458, %455 ]
  %463 = phi i64 [ %469, %460 ], [ 0, %455 ]
  %464 = getelementptr inbounds double, ptr %69, i64 %461
  %465 = load double, ptr %464, align 8, !tbaa !93
  %466 = fmul double %465, %465
  %467 = fadd double %462, %466
  %468 = add nuw nsw i64 %461, 1
  %469 = add i64 %463, 1
  %470 = icmp eq i64 %469, %425
  br i1 %470, label %471, label %460, !llvm.loop !166

471:                                              ; preds = %455, %460, %415
  %472 = phi double [ 0.000000e+00, %415 ], [ %456, %455 ], [ %467, %460 ]
  %473 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %474 unwind label %559

474:                                              ; preds = %471
  %475 = fsub double %473, %414
  %476 = fadd double %475, 0.000000e+00
  %477 = tail call double @sqrt(double noundef %472) #25
  store double %477, ptr %6, align 8, !tbaa !93
  %478 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.108, i64 noundef 19)
          to label %479 unwind label %559

479:                                              ; preds = %474
  %480 = load double, ptr %6, align 8, !tbaa !93
  %481 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %480)
          to label %482 unwind label %559

482:                                              ; preds = %479
  %483 = load ptr, ptr %481, align 8, !tbaa !30
  %484 = getelementptr i8, ptr %483, i64 -24
  %485 = load i64, ptr %484, align 8
  %486 = getelementptr inbounds i8, ptr %481, i64 %485
  %487 = getelementptr inbounds %"class.std::basic_ios", ptr %486, i64 0, i32 5
  %488 = load ptr, ptr %487, align 8, !tbaa !32
  %489 = icmp eq ptr %488, null
  br i1 %489, label %490, label %492

490:                                              ; preds = %482
  invoke void @_ZSt16__throw_bad_castv() #26
          to label %491 unwind label %559

491:                                              ; preds = %490
  unreachable

492:                                              ; preds = %482
  %493 = getelementptr inbounds %"class.std::ctype", ptr %488, i64 0, i32 8
  %494 = load i8, ptr %493, align 8, !tbaa !40
  %495 = icmp eq i8 %494, 0
  br i1 %495, label %499, label %496

496:                                              ; preds = %492
  %497 = getelementptr inbounds %"class.std::ctype", ptr %488, i64 0, i32 9, i64 10
  %498 = load i8, ptr %497, align 1, !tbaa !20
  br label %505

499:                                              ; preds = %492
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %488)
          to label %500 unwind label %559

500:                                              ; preds = %499
  %501 = load ptr, ptr %488, align 8, !tbaa !30
  %502 = getelementptr inbounds ptr, ptr %501, i64 6
  %503 = load ptr, ptr %502, align 8
  %504 = invoke noundef signext i8 %503(ptr noundef nonnull align 8 dereferenceable(570) %488, i8 noundef signext 10)
          to label %505 unwind label %559

505:                                              ; preds = %500, %496
  %506 = phi i8 [ %498, %496 ], [ %504, %500 ]
  %507 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %481, i8 noundef signext %506)
          to label %508 unwind label %559

508:                                              ; preds = %505
  %509 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %507)
          to label %510 unwind label %559

510:                                              ; preds = %508
  %511 = icmp slt i32 %3, 1
  br i1 %511, label %1185, label %512

512:                                              ; preds = %510
  %513 = and i64 %419, 4294967295
  %514 = ptrtoint ptr %105 to i64
  %515 = ptrtoint ptr %104 to i64
  %516 = sub i64 %514, %515
  %517 = lshr exact i64 %516, 3
  %518 = trunc i64 %517 to i32
  %519 = icmp sgt i32 %518, 0
  %520 = and i64 %517, 4294967295
  %521 = ptrtoint ptr %89 to i64
  %522 = ptrtoint ptr %90 to i64
  %523 = sub i64 %521, %522
  %524 = lshr exact i64 %523, 3
  %525 = trunc i64 %524 to i32
  %526 = icmp sgt i32 %525, 0
  %527 = and i64 %524, 4294967295
  %528 = add nsw i64 %513, -1
  %529 = add nsw i64 %520, -1
  %530 = add nsw i64 %527, -1
  %531 = and i64 %419, 3
  %532 = icmp ult i64 %528, 3
  %533 = sub nsw i64 %513, %531
  %534 = icmp eq i64 %531, 0
  %535 = icmp ult i64 %513, 4
  %536 = and i64 %419, 3
  %537 = sub nsw i64 %513, %536
  %538 = icmp eq i64 %536, 0
  %539 = icmp ult i64 %513, 4
  %540 = and i64 %419, 3
  %541 = sub nsw i64 %513, %540
  %542 = icmp eq i64 %540, 0
  %543 = and i64 %517, 3
  %544 = icmp ult i64 %529, 3
  %545 = sub nsw i64 %520, %543
  %546 = icmp eq i64 %543, 0
  %547 = and i64 %517, 3
  %548 = icmp ult i64 %529, 3
  %549 = sub nsw i64 %520, %547
  %550 = icmp eq i64 %547, 0
  %551 = and i64 %524, 3
  %552 = icmp ult i64 %530, 3
  %553 = sub nsw i64 %527, %551
  %554 = icmp eq i64 %551, 0
  %555 = icmp ult i64 %513, 4
  %556 = and i64 %419, 3
  %557 = sub nsw i64 %513, %556
  %558 = icmp eq i64 %556, 0
  br label %561

559:                                              ; preds = %508, %505, %500, %499, %490, %479, %474, %471, %411, %409, %311, %309, %201, %199, %103
  %560 = landingpad { ptr, i32 }
          cleanup
  br label %1208

561:                                              ; preds = %512, %1180
  %562 = phi i32 [ 1, %512 ], [ %1183, %1180 ]
  %563 = phi double [ 0x3CB0000000000000, %512 ], [ %1061, %1180 ]
  %564 = phi double [ %413, %512 ], [ %1182, %1180 ]
  %565 = phi double [ %476, %512 ], [ %920, %1180 ]
  %566 = phi double [ %472, %512 ], [ %707, %1180 ]
  %567 = phi double [ %313, %512 ], [ %860, %1180 ]
  %568 = load double, ptr %6, align 8, !tbaa !93
  %569 = load double, ptr %4, align 8, !tbaa !93
  %570 = fcmp ogt double %568, %569
  br i1 %570, label %571, label %1185

571:                                              ; preds = %561
  %572 = icmp eq i32 %562, 1
  br i1 %572, label %573, label %611

573:                                              ; preds = %571
  %574 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %575 unwind label %607

575:                                              ; preds = %573
  br i1 %421, label %576, label %603

576:                                              ; preds = %575
  br i1 %539, label %592, label %577

577:                                              ; preds = %576, %577
  %578 = phi i64 [ %589, %577 ], [ 0, %576 ]
  %579 = getelementptr inbounds double, ptr %69, i64 %578
  %580 = load <2 x double>, ptr %579, align 8, !tbaa !93
  %581 = getelementptr inbounds double, ptr %579, i64 2
  %582 = load <2 x double>, ptr %581, align 8, !tbaa !93
  %583 = fmul <2 x double> %580, zeroinitializer
  %584 = fmul <2 x double> %582, zeroinitializer
  %585 = fadd <2 x double> %580, %583
  %586 = fadd <2 x double> %582, %584
  %587 = getelementptr inbounds double, ptr %90, i64 %578
  store <2 x double> %585, ptr %587, align 8, !tbaa !93
  %588 = getelementptr inbounds double, ptr %587, i64 2
  store <2 x double> %586, ptr %588, align 8, !tbaa !93
  %589 = add nuw i64 %578, 4
  %590 = icmp eq i64 %589, %541
  br i1 %590, label %591, label %577, !llvm.loop !167

591:                                              ; preds = %577
  br i1 %542, label %603, label %592

592:                                              ; preds = %576, %591
  %593 = phi i64 [ 0, %576 ], [ %541, %591 ]
  br label %594

594:                                              ; preds = %592, %594
  %595 = phi i64 [ %601, %594 ], [ %593, %592 ]
  %596 = getelementptr inbounds double, ptr %69, i64 %595
  %597 = load double, ptr %596, align 8, !tbaa !93
  %598 = fmul double %597, 0.000000e+00
  %599 = fadd double %597, %598
  %600 = getelementptr inbounds double, ptr %90, i64 %595
  store double %599, ptr %600, align 8, !tbaa !93
  %601 = add nuw nsw i64 %595, 1
  %602 = icmp eq i64 %601, %513
  br i1 %602, label %603, label %594, !llvm.loop !168

603:                                              ; preds = %594, %591, %575
  %604 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %605 unwind label %607

605:                                              ; preds = %603
  %606 = fsub double %604, %574
  br label %706

607:                                              ; preds = %573, %603, %611, %656, %718, %716, %720, %722, %742, %743, %748, %751
  %608 = landingpad { ptr, i32 }
          cleanup
  br label %1208

609:                                              ; preds = %733
  %610 = landingpad { ptr, i32 }
          cleanup
  br label %1208

611:                                              ; preds = %571
  %612 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %613 unwind label %607

613:                                              ; preds = %611
  br i1 %421, label %614, label %656

614:                                              ; preds = %613
  br i1 %532, label %641, label %615

615:                                              ; preds = %614, %615
  %616 = phi i64 [ %638, %615 ], [ 0, %614 ]
  %617 = phi double [ %637, %615 ], [ 0.000000e+00, %614 ]
  %618 = phi i64 [ %639, %615 ], [ 0, %614 ]
  %619 = getelementptr inbounds double, ptr %69, i64 %616
  %620 = load double, ptr %619, align 8, !tbaa !93
  %621 = fmul double %620, %620
  %622 = fadd double %617, %621
  %623 = or i64 %616, 1
  %624 = getelementptr inbounds double, ptr %69, i64 %623
  %625 = load double, ptr %624, align 8, !tbaa !93
  %626 = fmul double %625, %625
  %627 = fadd double %622, %626
  %628 = or i64 %616, 2
  %629 = getelementptr inbounds double, ptr %69, i64 %628
  %630 = load double, ptr %629, align 8, !tbaa !93
  %631 = fmul double %630, %630
  %632 = fadd double %627, %631
  %633 = or i64 %616, 3
  %634 = getelementptr inbounds double, ptr %69, i64 %633
  %635 = load double, ptr %634, align 8, !tbaa !93
  %636 = fmul double %635, %635
  %637 = fadd double %632, %636
  %638 = add nuw nsw i64 %616, 4
  %639 = add i64 %618, 4
  %640 = icmp eq i64 %639, %533
  br i1 %640, label %641, label %615, !llvm.loop !165

641:                                              ; preds = %615, %614
  %642 = phi double [ undef, %614 ], [ %637, %615 ]
  %643 = phi i64 [ 0, %614 ], [ %638, %615 ]
  %644 = phi double [ 0.000000e+00, %614 ], [ %637, %615 ]
  br i1 %534, label %656, label %645

645:                                              ; preds = %641, %645
  %646 = phi i64 [ %653, %645 ], [ %643, %641 ]
  %647 = phi double [ %652, %645 ], [ %644, %641 ]
  %648 = phi i64 [ %654, %645 ], [ 0, %641 ]
  %649 = getelementptr inbounds double, ptr %69, i64 %646
  %650 = load double, ptr %649, align 8, !tbaa !93
  %651 = fmul double %650, %650
  %652 = fadd double %647, %651
  %653 = add nuw nsw i64 %646, 1
  %654 = add i64 %648, 1
  %655 = icmp eq i64 %654, %531
  br i1 %655, label %656, label %645, !llvm.loop !169

656:                                              ; preds = %641, %645, %613
  %657 = phi double [ 0.000000e+00, %613 ], [ %642, %641 ], [ %652, %645 ]
  %658 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %659 unwind label %607

659:                                              ; preds = %656
  %660 = fsub double %658, %612
  %661 = fadd double %565, %660
  %662 = fdiv double %657, %566
  %663 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %664 unwind label %704

664:                                              ; preds = %659
  br i1 %421, label %665, label %700

665:                                              ; preds = %664
  br i1 %535, label %688, label %666

666:                                              ; preds = %665
  %667 = insertelement <2 x double> poison, double %662, i64 0
  %668 = shufflevector <2 x double> %667, <2 x double> poison, <2 x i32> zeroinitializer
  %669 = insertelement <2 x double> poison, double %662, i64 0
  %670 = shufflevector <2 x double> %669, <2 x double> poison, <2 x i32> zeroinitializer
  br label %671

671:                                              ; preds = %671, %666
  %672 = phi i64 [ 0, %666 ], [ %685, %671 ]
  %673 = getelementptr inbounds double, ptr %69, i64 %672
  %674 = load <2 x double>, ptr %673, align 8, !tbaa !93
  %675 = getelementptr inbounds double, ptr %673, i64 2
  %676 = load <2 x double>, ptr %675, align 8, !tbaa !93
  %677 = getelementptr inbounds double, ptr %90, i64 %672
  %678 = load <2 x double>, ptr %677, align 8, !tbaa !93
  %679 = getelementptr inbounds double, ptr %677, i64 2
  %680 = load <2 x double>, ptr %679, align 8, !tbaa !93
  %681 = fmul <2 x double> %668, %678
  %682 = fmul <2 x double> %670, %680
  %683 = fadd <2 x double> %674, %681
  %684 = fadd <2 x double> %676, %682
  store <2 x double> %683, ptr %677, align 8, !tbaa !93
  store <2 x double> %684, ptr %679, align 8, !tbaa !93
  %685 = add nuw i64 %672, 4
  %686 = icmp eq i64 %685, %537
  br i1 %686, label %687, label %671, !llvm.loop !170

687:                                              ; preds = %671
  br i1 %538, label %700, label %688

688:                                              ; preds = %665, %687
  %689 = phi i64 [ 0, %665 ], [ %537, %687 ]
  br label %690

690:                                              ; preds = %688, %690
  %691 = phi i64 [ %698, %690 ], [ %689, %688 ]
  %692 = getelementptr inbounds double, ptr %69, i64 %691
  %693 = load double, ptr %692, align 8, !tbaa !93
  %694 = getelementptr inbounds double, ptr %90, i64 %691
  %695 = load double, ptr %694, align 8, !tbaa !93
  %696 = fmul double %662, %695
  %697 = fadd double %693, %696
  store double %697, ptr %694, align 8, !tbaa !93
  %698 = add nuw nsw i64 %691, 1
  %699 = icmp eq i64 %698, %513
  br i1 %699, label %700, label %690, !llvm.loop !171

700:                                              ; preds = %690, %687, %664
  %701 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %702 unwind label %704

702:                                              ; preds = %700
  %703 = fsub double %701, %663
  br label %706

704:                                              ; preds = %700, %659
  %705 = landingpad { ptr, i32 }
          cleanup
  br label %1208

706:                                              ; preds = %702, %605
  %707 = phi double [ %566, %605 ], [ %657, %702 ]
  %708 = phi double [ %565, %605 ], [ %661, %702 ]
  %709 = phi double [ %606, %605 ], [ %703, %702 ]
  %710 = fadd double %564, %709
  %711 = tail call double @sqrt(double noundef %707) #25
  store double %711, ptr %6, align 8, !tbaa !93
  %712 = urem i32 %562, %109
  %713 = icmp eq i32 %712, 0
  %714 = icmp eq i32 %562, %3
  %715 = or i1 %714, %713
  br i1 %715, label %716, label %753

716:                                              ; preds = %706
  %717 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.109, i64 noundef 12)
          to label %718 unwind label %607

718:                                              ; preds = %716
  %719 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 noundef %562)
          to label %720 unwind label %607

720:                                              ; preds = %718
  %721 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %719, ptr noundef nonnull @.str.110, i64 noundef 14)
          to label %722 unwind label %607

722:                                              ; preds = %720
  %723 = load double, ptr %6, align 8, !tbaa !93
  %724 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %719, double noundef %723)
          to label %725 unwind label %607

725:                                              ; preds = %722
  %726 = load ptr, ptr %724, align 8, !tbaa !30
  %727 = getelementptr i8, ptr %726, i64 -24
  %728 = load i64, ptr %727, align 8
  %729 = getelementptr inbounds i8, ptr %724, i64 %728
  %730 = getelementptr inbounds %"class.std::basic_ios", ptr %729, i64 0, i32 5
  %731 = load ptr, ptr %730, align 8, !tbaa !32
  %732 = icmp eq ptr %731, null
  br i1 %732, label %733, label %735

733:                                              ; preds = %725
  invoke void @_ZSt16__throw_bad_castv() #26
          to label %734 unwind label %609

734:                                              ; preds = %733
  unreachable

735:                                              ; preds = %725
  %736 = getelementptr inbounds %"class.std::ctype", ptr %731, i64 0, i32 8
  %737 = load i8, ptr %736, align 8, !tbaa !40
  %738 = icmp eq i8 %737, 0
  br i1 %738, label %742, label %739

739:                                              ; preds = %735
  %740 = getelementptr inbounds %"class.std::ctype", ptr %731, i64 0, i32 9, i64 10
  %741 = load i8, ptr %740, align 1, !tbaa !20
  br label %748

742:                                              ; preds = %735
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %731)
          to label %743 unwind label %607

743:                                              ; preds = %742
  %744 = load ptr, ptr %731, align 8, !tbaa !30
  %745 = getelementptr inbounds ptr, ptr %744, i64 6
  %746 = load ptr, ptr %745, align 8
  %747 = invoke noundef signext i8 %746(ptr noundef nonnull align 8 dereferenceable(570) %731, i8 noundef signext 10)
          to label %748 unwind label %607

748:                                              ; preds = %743, %739
  %749 = phi i8 [ %741, %739 ], [ %747, %743 ]
  %750 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %724, i8 noundef signext %749)
          to label %751 unwind label %607

751:                                              ; preds = %748
  %752 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %750)
          to label %753 unwind label %607

753:                                              ; preds = %751, %706
  %754 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %755 unwind label %1054

755:                                              ; preds = %753
  %756 = load ptr, ptr %41, align 8, !tbaa !86
  %757 = load ptr, ptr %40, align 8, !tbaa !87
  %758 = ptrtoint ptr %756 to i64
  %759 = ptrtoint ptr %757 to i64
  %760 = sub i64 %758, %759
  %761 = lshr exact i64 %760, 2
  %762 = trunc i64 %761 to i32
  %763 = load ptr, ptr %213, align 8, !tbaa !87
  %764 = load ptr, ptr %215, align 8, !tbaa !87
  %765 = load ptr, ptr %217, align 8, !tbaa !91
  %766 = icmp sgt i32 %762, 0
  br i1 %766, label %767, label %856

767:                                              ; preds = %755
  %768 = and i64 %761, 4294967295
  %769 = load i32, ptr %763, align 4, !tbaa !5
  br label %770

770:                                              ; preds = %809, %767
  %771 = phi i32 [ %769, %767 ], [ %778, %809 ]
  %772 = phi i64 [ 0, %767 ], [ %776, %809 ]
  %773 = getelementptr inbounds double, ptr %104, i64 %772
  %774 = load double, ptr %773, align 8, !tbaa !93
  %775 = fmul double %774, 0.000000e+00
  %776 = add nuw nsw i64 %772, 1
  %777 = getelementptr inbounds i32, ptr %763, i64 %776
  %778 = load i32, ptr %777, align 4, !tbaa !5
  %779 = icmp slt i32 %771, %778
  br i1 %779, label %780, label %809

780:                                              ; preds = %770
  %781 = sext i32 %771 to i64
  %782 = sext i32 %778 to i64
  %783 = sub nsw i64 %782, %781
  %784 = xor i64 %781, -1
  %785 = add nsw i64 %784, %782
  %786 = and i64 %783, 3
  %787 = icmp eq i64 %786, 0
  br i1 %787, label %804, label %788

788:                                              ; preds = %780, %788
  %789 = phi i64 [ %801, %788 ], [ %781, %780 ]
  %790 = phi double [ %800, %788 ], [ %775, %780 ]
  %791 = phi i64 [ %802, %788 ], [ 0, %780 ]
  %792 = getelementptr inbounds double, ptr %765, i64 %789
  %793 = load double, ptr %792, align 8, !tbaa !93
  %794 = getelementptr inbounds i32, ptr %764, i64 %789
  %795 = load i32, ptr %794, align 4, !tbaa !5
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds double, ptr %90, i64 %796
  %798 = load double, ptr %797, align 8, !tbaa !93
  %799 = fmul double %793, %798
  %800 = fadd double %790, %799
  %801 = add nsw i64 %789, 1
  %802 = add i64 %791, 1
  %803 = icmp eq i64 %802, %786
  br i1 %803, label %804, label %788, !llvm.loop !172

804:                                              ; preds = %788, %780
  %805 = phi double [ undef, %780 ], [ %800, %788 ]
  %806 = phi i64 [ %781, %780 ], [ %801, %788 ]
  %807 = phi double [ %775, %780 ], [ %800, %788 ]
  %808 = icmp ult i64 %785, 3
  br i1 %808, label %809, label %812

809:                                              ; preds = %804, %812, %770
  %810 = phi double [ %775, %770 ], [ %805, %804 ], [ %853, %812 ]
  store double %810, ptr %773, align 8, !tbaa !93
  %811 = icmp eq i64 %776, %768
  br i1 %811, label %856, label %770, !llvm.loop !160

812:                                              ; preds = %804, %812
  %813 = phi i64 [ %854, %812 ], [ %806, %804 ]
  %814 = phi double [ %853, %812 ], [ %807, %804 ]
  %815 = getelementptr inbounds double, ptr %765, i64 %813
  %816 = load double, ptr %815, align 8, !tbaa !93
  %817 = getelementptr inbounds i32, ptr %764, i64 %813
  %818 = load i32, ptr %817, align 4, !tbaa !5
  %819 = sext i32 %818 to i64
  %820 = getelementptr inbounds double, ptr %90, i64 %819
  %821 = load double, ptr %820, align 8, !tbaa !93
  %822 = fmul double %816, %821
  %823 = fadd double %814, %822
  %824 = add nsw i64 %813, 1
  %825 = getelementptr inbounds double, ptr %765, i64 %824
  %826 = load double, ptr %825, align 8, !tbaa !93
  %827 = getelementptr inbounds i32, ptr %764, i64 %824
  %828 = load i32, ptr %827, align 4, !tbaa !5
  %829 = sext i32 %828 to i64
  %830 = getelementptr inbounds double, ptr %90, i64 %829
  %831 = load double, ptr %830, align 8, !tbaa !93
  %832 = fmul double %826, %831
  %833 = fadd double %823, %832
  %834 = add nsw i64 %813, 2
  %835 = getelementptr inbounds double, ptr %765, i64 %834
  %836 = load double, ptr %835, align 8, !tbaa !93
  %837 = getelementptr inbounds i32, ptr %764, i64 %834
  %838 = load i32, ptr %837, align 4, !tbaa !5
  %839 = sext i32 %838 to i64
  %840 = getelementptr inbounds double, ptr %90, i64 %839
  %841 = load double, ptr %840, align 8, !tbaa !93
  %842 = fmul double %836, %841
  %843 = fadd double %833, %842
  %844 = add nsw i64 %813, 3
  %845 = getelementptr inbounds double, ptr %765, i64 %844
  %846 = load double, ptr %845, align 8, !tbaa !93
  %847 = getelementptr inbounds i32, ptr %764, i64 %844
  %848 = load i32, ptr %847, align 4, !tbaa !5
  %849 = sext i32 %848 to i64
  %850 = getelementptr inbounds double, ptr %90, i64 %849
  %851 = load double, ptr %850, align 8, !tbaa !93
  %852 = fmul double %846, %851
  %853 = fadd double %843, %852
  %854 = add nsw i64 %813, 4
  %855 = icmp eq i64 %854, %782
  br i1 %855, label %809, label %812, !llvm.loop !161

856:                                              ; preds = %809, %755
  %857 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %858 unwind label %1054

858:                                              ; preds = %856
  %859 = fsub double %857, %754
  %860 = fadd double %567, %859
  %861 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %862 unwind label %1054

862:                                              ; preds = %858
  br i1 %519, label %863, label %915

863:                                              ; preds = %862
  br i1 %544, label %898, label %864

864:                                              ; preds = %863, %864
  %865 = phi i64 [ %895, %864 ], [ 0, %863 ]
  %866 = phi double [ %894, %864 ], [ 0.000000e+00, %863 ]
  %867 = phi i64 [ %896, %864 ], [ 0, %863 ]
  %868 = getelementptr inbounds double, ptr %104, i64 %865
  %869 = load double, ptr %868, align 8, !tbaa !93
  %870 = getelementptr inbounds double, ptr %90, i64 %865
  %871 = load double, ptr %870, align 8, !tbaa !93
  %872 = fmul double %869, %871
  %873 = fadd double %866, %872
  %874 = or i64 %865, 1
  %875 = getelementptr inbounds double, ptr %104, i64 %874
  %876 = load double, ptr %875, align 8, !tbaa !93
  %877 = getelementptr inbounds double, ptr %90, i64 %874
  %878 = load double, ptr %877, align 8, !tbaa !93
  %879 = fmul double %876, %878
  %880 = fadd double %873, %879
  %881 = or i64 %865, 2
  %882 = getelementptr inbounds double, ptr %104, i64 %881
  %883 = load double, ptr %882, align 8, !tbaa !93
  %884 = getelementptr inbounds double, ptr %90, i64 %881
  %885 = load double, ptr %884, align 8, !tbaa !93
  %886 = fmul double %883, %885
  %887 = fadd double %880, %886
  %888 = or i64 %865, 3
  %889 = getelementptr inbounds double, ptr %104, i64 %888
  %890 = load double, ptr %889, align 8, !tbaa !93
  %891 = getelementptr inbounds double, ptr %90, i64 %888
  %892 = load double, ptr %891, align 8, !tbaa !93
  %893 = fmul double %890, %892
  %894 = fadd double %887, %893
  %895 = add nuw nsw i64 %865, 4
  %896 = add i64 %867, 4
  %897 = icmp eq i64 %896, %545
  br i1 %897, label %898, label %864, !llvm.loop !165

898:                                              ; preds = %864, %863
  %899 = phi double [ undef, %863 ], [ %894, %864 ]
  %900 = phi i64 [ 0, %863 ], [ %895, %864 ]
  %901 = phi double [ 0.000000e+00, %863 ], [ %894, %864 ]
  br i1 %546, label %915, label %902

902:                                              ; preds = %898, %902
  %903 = phi i64 [ %912, %902 ], [ %900, %898 ]
  %904 = phi double [ %911, %902 ], [ %901, %898 ]
  %905 = phi i64 [ %913, %902 ], [ 0, %898 ]
  %906 = getelementptr inbounds double, ptr %104, i64 %903
  %907 = load double, ptr %906, align 8, !tbaa !93
  %908 = getelementptr inbounds double, ptr %90, i64 %903
  %909 = load double, ptr %908, align 8, !tbaa !93
  %910 = fmul double %907, %909
  %911 = fadd double %904, %910
  %912 = add nuw nsw i64 %903, 1
  %913 = add i64 %905, 1
  %914 = icmp eq i64 %913, %543
  br i1 %914, label %915, label %902, !llvm.loop !173

915:                                              ; preds = %898, %902, %862
  %916 = phi double [ 0.000000e+00, %862 ], [ %899, %898 ], [ %911, %902 ]
  %917 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %918 unwind label %1054

918:                                              ; preds = %915
  %919 = fsub double %917, %861
  %920 = fadd double %708, %919
  %921 = fcmp olt double %916, %563
  br i1 %921, label %922, label %1060

922:                                              ; preds = %918
  %923 = fcmp olt double %916, 0.000000e+00
  br i1 %923, label %1020, label %924

924:                                              ; preds = %922
  br i1 %519, label %925, label %967

925:                                              ; preds = %924
  br i1 %548, label %952, label %926

926:                                              ; preds = %925, %926
  %927 = phi i64 [ %949, %926 ], [ 0, %925 ]
  %928 = phi double [ %948, %926 ], [ 0.000000e+00, %925 ]
  %929 = phi i64 [ %950, %926 ], [ 0, %925 ]
  %930 = getelementptr inbounds double, ptr %104, i64 %927
  %931 = load double, ptr %930, align 8, !tbaa !93
  %932 = fmul double %931, %931
  %933 = fadd double %928, %932
  %934 = or i64 %927, 1
  %935 = getelementptr inbounds double, ptr %104, i64 %934
  %936 = load double, ptr %935, align 8, !tbaa !93
  %937 = fmul double %936, %936
  %938 = fadd double %933, %937
  %939 = or i64 %927, 2
  %940 = getelementptr inbounds double, ptr %104, i64 %939
  %941 = load double, ptr %940, align 8, !tbaa !93
  %942 = fmul double %941, %941
  %943 = fadd double %938, %942
  %944 = or i64 %927, 3
  %945 = getelementptr inbounds double, ptr %104, i64 %944
  %946 = load double, ptr %945, align 8, !tbaa !93
  %947 = fmul double %946, %946
  %948 = fadd double %943, %947
  %949 = add nuw nsw i64 %927, 4
  %950 = add i64 %929, 4
  %951 = icmp eq i64 %950, %549
  br i1 %951, label %952, label %926, !llvm.loop !165

952:                                              ; preds = %926, %925
  %953 = phi double [ undef, %925 ], [ %948, %926 ]
  %954 = phi i64 [ 0, %925 ], [ %949, %926 ]
  %955 = phi double [ 0.000000e+00, %925 ], [ %948, %926 ]
  br i1 %550, label %967, label %956

956:                                              ; preds = %952, %956
  %957 = phi i64 [ %964, %956 ], [ %954, %952 ]
  %958 = phi double [ %963, %956 ], [ %955, %952 ]
  %959 = phi i64 [ %965, %956 ], [ 0, %952 ]
  %960 = getelementptr inbounds double, ptr %104, i64 %957
  %961 = load double, ptr %960, align 8, !tbaa !93
  %962 = fmul double %961, %961
  %963 = fadd double %958, %962
  %964 = add nuw nsw i64 %957, 1
  %965 = add i64 %959, 1
  %966 = icmp eq i64 %965, %547
  br i1 %966, label %967, label %956, !llvm.loop !174

967:                                              ; preds = %952, %956, %924
  %968 = phi double [ 0.000000e+00, %924 ], [ %953, %952 ], [ %963, %956 ]
  %969 = tail call double @sqrt(double noundef %968) #25
  br i1 %526, label %970, label %1012

970:                                              ; preds = %967
  br i1 %552, label %997, label %971

971:                                              ; preds = %970, %971
  %972 = phi i64 [ %994, %971 ], [ 0, %970 ]
  %973 = phi double [ %993, %971 ], [ 0.000000e+00, %970 ]
  %974 = phi i64 [ %995, %971 ], [ 0, %970 ]
  %975 = getelementptr inbounds double, ptr %90, i64 %972
  %976 = load double, ptr %975, align 8, !tbaa !93
  %977 = fmul double %976, %976
  %978 = fadd double %973, %977
  %979 = or i64 %972, 1
  %980 = getelementptr inbounds double, ptr %90, i64 %979
  %981 = load double, ptr %980, align 8, !tbaa !93
  %982 = fmul double %981, %981
  %983 = fadd double %978, %982
  %984 = or i64 %972, 2
  %985 = getelementptr inbounds double, ptr %90, i64 %984
  %986 = load double, ptr %985, align 8, !tbaa !93
  %987 = fmul double %986, %986
  %988 = fadd double %983, %987
  %989 = or i64 %972, 3
  %990 = getelementptr inbounds double, ptr %90, i64 %989
  %991 = load double, ptr %990, align 8, !tbaa !93
  %992 = fmul double %991, %991
  %993 = fadd double %988, %992
  %994 = add nuw nsw i64 %972, 4
  %995 = add i64 %974, 4
  %996 = icmp eq i64 %995, %553
  br i1 %996, label %997, label %971, !llvm.loop !165

997:                                              ; preds = %971, %970
  %998 = phi double [ undef, %970 ], [ %993, %971 ]
  %999 = phi i64 [ 0, %970 ], [ %994, %971 ]
  %1000 = phi double [ 0.000000e+00, %970 ], [ %993, %971 ]
  br i1 %554, label %1012, label %1001

1001:                                             ; preds = %997, %1001
  %1002 = phi i64 [ %1009, %1001 ], [ %999, %997 ]
  %1003 = phi double [ %1008, %1001 ], [ %1000, %997 ]
  %1004 = phi i64 [ %1010, %1001 ], [ 0, %997 ]
  %1005 = getelementptr inbounds double, ptr %90, i64 %1002
  %1006 = load double, ptr %1005, align 8, !tbaa !93
  %1007 = fmul double %1006, %1006
  %1008 = fadd double %1003, %1007
  %1009 = add nuw nsw i64 %1002, 1
  %1010 = add i64 %1004, 1
  %1011 = icmp eq i64 %1010, %551
  br i1 %1011, label %1012, label %1001, !llvm.loop !175

1012:                                             ; preds = %997, %1001, %967
  %1013 = phi double [ 0.000000e+00, %967 ], [ %998, %997 ], [ %1008, %1001 ]
  %1014 = tail call double @sqrt(double noundef %1013) #25
  %1015 = tail call double @llvm.fabs.f64(double %916)
  %1016 = fmul double %969, 1.000000e+02
  %1017 = fmul double %1016, %1014
  %1018 = fmul double %1017, 0x3CB0000000000000
  %1019 = fcmp ugt double %1015, %1018
  br i1 %1019, label %1058, label %1020

1020:                                             ; preds = %1012, %922
  %1021 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.111, i64 noundef 44)
          to label %1022 unwind label %1056

1022:                                             ; preds = %1020
  %1023 = load ptr, ptr @_ZSt4cerr, align 8, !tbaa !30
  %1024 = getelementptr i8, ptr %1023, i64 -24
  %1025 = load i64, ptr %1024, align 8
  %1026 = getelementptr inbounds i8, ptr @_ZSt4cerr, i64 %1025
  %1027 = getelementptr inbounds %"class.std::basic_ios", ptr %1026, i64 0, i32 5
  %1028 = load ptr, ptr %1027, align 8, !tbaa !32
  %1029 = icmp eq ptr %1028, null
  br i1 %1029, label %1030, label %1032

1030:                                             ; preds = %1022
  invoke void @_ZSt16__throw_bad_castv() #26
          to label %1031 unwind label %1056

1031:                                             ; preds = %1030
  unreachable

1032:                                             ; preds = %1022
  %1033 = getelementptr inbounds %"class.std::ctype", ptr %1028, i64 0, i32 8
  %1034 = load i8, ptr %1033, align 8, !tbaa !40
  %1035 = icmp eq i8 %1034, 0
  br i1 %1035, label %1039, label %1036

1036:                                             ; preds = %1032
  %1037 = getelementptr inbounds %"class.std::ctype", ptr %1028, i64 0, i32 9, i64 10
  %1038 = load i8, ptr %1037, align 1, !tbaa !20
  br label %1045

1039:                                             ; preds = %1032
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %1028)
          to label %1040 unwind label %1056

1040:                                             ; preds = %1039
  %1041 = load ptr, ptr %1028, align 8, !tbaa !30
  %1042 = getelementptr inbounds ptr, ptr %1041, i64 6
  %1043 = load ptr, ptr %1042, align 8
  %1044 = invoke noundef signext i8 %1043(ptr noundef nonnull align 8 dereferenceable(570) %1028, i8 noundef signext 10)
          to label %1045 unwind label %1056

1045:                                             ; preds = %1040, %1036
  %1046 = phi i8 [ %1038, %1036 ], [ %1044, %1040 ]
  %1047 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef signext %1046)
          to label %1048 unwind label %1056

1048:                                             ; preds = %1045
  %1049 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %1047)
          to label %1050 unwind label %1056

1050:                                             ; preds = %1048
  store double %710, ptr %7, align 8, !tbaa !93
  %1051 = getelementptr inbounds double, ptr %7, i64 1
  store double %920, ptr %1051, align 8, !tbaa !93
  %1052 = getelementptr inbounds double, ptr %7, i64 2
  store double %860, ptr %1052, align 8, !tbaa !93
  %1053 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %1193 unwind label %1056

1054:                                             ; preds = %753, %856, %858, %915, %1060, %1178
  %1055 = landingpad { ptr, i32 }
          cleanup
  br label %1208

1056:                                             ; preds = %1050, %1020, %1030, %1039, %1040, %1045, %1048
  %1057 = landingpad { ptr, i32 }
          cleanup
  br label %1208

1058:                                             ; preds = %1012
  %1059 = fmul double %916, 1.000000e-01
  br label %1060

1060:                                             ; preds = %1058, %918
  %1061 = phi double [ %1059, %1058 ], [ %563, %918 ]
  %1062 = fdiv double %707, %916
  %1063 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %1064 unwind label %1054

1064:                                             ; preds = %1060
  %1065 = load ptr, ptr %117, align 8, !tbaa !95
  %1066 = load ptr, ptr %116, align 8, !tbaa !91
  %1067 = ptrtoint ptr %1065 to i64
  %1068 = ptrtoint ptr %1066 to i64
  %1069 = sub i64 %1067, %1068
  %1070 = lshr exact i64 %1069, 3
  %1071 = trunc i64 %1070 to i32
  %1072 = icmp sgt i32 %1071, 0
  br i1 %1072, label %1073, label %1142

1073:                                             ; preds = %1064
  %1074 = and i64 %1070, 4294967295
  %1075 = icmp ult i64 %1074, 6
  br i1 %1075, label %1108, label %1076

1076:                                             ; preds = %1073
  %1077 = shl nuw nsw i64 %1074, 3
  %1078 = getelementptr i8, ptr %1066, i64 %1077
  %1079 = getelementptr i8, ptr %90, i64 %1077
  %1080 = icmp ult ptr %1066, %1079
  %1081 = icmp ult ptr %90, %1078
  %1082 = and i1 %1080, %1081
  br i1 %1082, label %1108, label %1083

1083:                                             ; preds = %1076
  %1084 = and i64 %1070, 3
  %1085 = sub nsw i64 %1074, %1084
  %1086 = insertelement <2 x double> poison, double %1062, i64 0
  %1087 = shufflevector <2 x double> %1086, <2 x double> poison, <2 x i32> zeroinitializer
  %1088 = insertelement <2 x double> poison, double %1062, i64 0
  %1089 = shufflevector <2 x double> %1088, <2 x double> poison, <2 x i32> zeroinitializer
  br label %1090

1090:                                             ; preds = %1090, %1083
  %1091 = phi i64 [ 0, %1083 ], [ %1104, %1090 ]
  %1092 = getelementptr inbounds double, ptr %1066, i64 %1091
  %1093 = load <2 x double>, ptr %1092, align 8, !tbaa !93, !alias.scope !176, !noalias !179
  %1094 = getelementptr inbounds double, ptr %1092, i64 2
  %1095 = load <2 x double>, ptr %1094, align 8, !tbaa !93, !alias.scope !176, !noalias !179
  %1096 = getelementptr inbounds double, ptr %90, i64 %1091
  %1097 = load <2 x double>, ptr %1096, align 8, !tbaa !93, !alias.scope !179
  %1098 = getelementptr inbounds double, ptr %1096, i64 2
  %1099 = load <2 x double>, ptr %1098, align 8, !tbaa !93, !alias.scope !179
  %1100 = fmul <2 x double> %1087, %1097
  %1101 = fmul <2 x double> %1089, %1099
  %1102 = fadd <2 x double> %1093, %1100
  %1103 = fadd <2 x double> %1095, %1101
  store <2 x double> %1102, ptr %1092, align 8, !tbaa !93, !alias.scope !176, !noalias !179
  store <2 x double> %1103, ptr %1094, align 8, !tbaa !93, !alias.scope !176, !noalias !179
  %1104 = add nuw i64 %1091, 4
  %1105 = icmp eq i64 %1104, %1085
  br i1 %1105, label %1106, label %1090, !llvm.loop !181

1106:                                             ; preds = %1090
  %1107 = icmp eq i64 %1084, 0
  br i1 %1107, label %1142, label %1108

1108:                                             ; preds = %1076, %1073, %1106
  %1109 = phi i64 [ 0, %1076 ], [ 0, %1073 ], [ %1085, %1106 ]
  %1110 = sub nsw i64 %1070, %1109
  %1111 = add nsw i64 %1109, 1
  %1112 = and i64 %1110, 1
  %1113 = icmp eq i64 %1112, 0
  br i1 %1113, label %1122, label %1114

1114:                                             ; preds = %1108
  %1115 = getelementptr inbounds double, ptr %1066, i64 %1109
  %1116 = load double, ptr %1115, align 8, !tbaa !93
  %1117 = getelementptr inbounds double, ptr %90, i64 %1109
  %1118 = load double, ptr %1117, align 8, !tbaa !93
  %1119 = fmul double %1062, %1118
  %1120 = fadd double %1116, %1119
  store double %1120, ptr %1115, align 8, !tbaa !93
  %1121 = add nuw nsw i64 %1109, 1
  br label %1122

1122:                                             ; preds = %1114, %1108
  %1123 = phi i64 [ %1109, %1108 ], [ %1121, %1114 ]
  %1124 = icmp eq i64 %1074, %1111
  br i1 %1124, label %1142, label %1125

1125:                                             ; preds = %1122, %1125
  %1126 = phi i64 [ %1140, %1125 ], [ %1123, %1122 ]
  %1127 = getelementptr inbounds double, ptr %1066, i64 %1126
  %1128 = load double, ptr %1127, align 8, !tbaa !93
  %1129 = getelementptr inbounds double, ptr %90, i64 %1126
  %1130 = load double, ptr %1129, align 8, !tbaa !93
  %1131 = fmul double %1062, %1130
  %1132 = fadd double %1128, %1131
  store double %1132, ptr %1127, align 8, !tbaa !93
  %1133 = add nuw nsw i64 %1126, 1
  %1134 = getelementptr inbounds double, ptr %1066, i64 %1133
  %1135 = load double, ptr %1134, align 8, !tbaa !93
  %1136 = getelementptr inbounds double, ptr %90, i64 %1133
  %1137 = load double, ptr %1136, align 8, !tbaa !93
  %1138 = fmul double %1062, %1137
  %1139 = fadd double %1135, %1138
  store double %1139, ptr %1134, align 8, !tbaa !93
  %1140 = add nuw nsw i64 %1126, 2
  %1141 = icmp eq i64 %1140, %1074
  br i1 %1141, label %1142, label %1125, !llvm.loop !182

1142:                                             ; preds = %1122, %1125, %1106, %1064
  br i1 %421, label %1143, label %1178

1143:                                             ; preds = %1142
  br i1 %555, label %1166, label %1144

1144:                                             ; preds = %1143
  %1145 = insertelement <2 x double> poison, double %1062, i64 0
  %1146 = shufflevector <2 x double> %1145, <2 x double> poison, <2 x i32> zeroinitializer
  %1147 = insertelement <2 x double> poison, double %1062, i64 0
  %1148 = shufflevector <2 x double> %1147, <2 x double> poison, <2 x i32> zeroinitializer
  br label %1149

1149:                                             ; preds = %1149, %1144
  %1150 = phi i64 [ 0, %1144 ], [ %1163, %1149 ]
  %1151 = getelementptr inbounds double, ptr %69, i64 %1150
  %1152 = load <2 x double>, ptr %1151, align 8, !tbaa !93
  %1153 = getelementptr inbounds double, ptr %1151, i64 2
  %1154 = load <2 x double>, ptr %1153, align 8, !tbaa !93
  %1155 = getelementptr inbounds double, ptr %104, i64 %1150
  %1156 = load <2 x double>, ptr %1155, align 8, !tbaa !93
  %1157 = getelementptr inbounds double, ptr %1155, i64 2
  %1158 = load <2 x double>, ptr %1157, align 8, !tbaa !93
  %1159 = fmul <2 x double> %1146, %1156
  %1160 = fmul <2 x double> %1148, %1158
  %1161 = fsub <2 x double> %1152, %1159
  %1162 = fsub <2 x double> %1154, %1160
  store <2 x double> %1161, ptr %1151, align 8, !tbaa !93
  store <2 x double> %1162, ptr %1153, align 8, !tbaa !93
  %1163 = add nuw i64 %1150, 4
  %1164 = icmp eq i64 %1163, %557
  br i1 %1164, label %1165, label %1149, !llvm.loop !183

1165:                                             ; preds = %1149
  br i1 %558, label %1178, label %1166

1166:                                             ; preds = %1143, %1165
  %1167 = phi i64 [ 0, %1143 ], [ %557, %1165 ]
  br label %1168

1168:                                             ; preds = %1166, %1168
  %1169 = phi i64 [ %1176, %1168 ], [ %1167, %1166 ]
  %1170 = getelementptr inbounds double, ptr %69, i64 %1169
  %1171 = load double, ptr %1170, align 8, !tbaa !93
  %1172 = getelementptr inbounds double, ptr %104, i64 %1169
  %1173 = load double, ptr %1172, align 8, !tbaa !93
  %1174 = fmul double %1062, %1173
  %1175 = fsub double %1171, %1174
  store double %1175, ptr %1170, align 8, !tbaa !93
  %1176 = add nuw nsw i64 %1169, 1
  %1177 = icmp eq i64 %1176, %513
  br i1 %1177, label %1178, label %1168, !llvm.loop !184

1178:                                             ; preds = %1168, %1165, %1142
  %1179 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %1180 unwind label %1054

1180:                                             ; preds = %1178
  %1181 = fsub double %1179, %1063
  %1182 = fadd double %710, %1181
  store i32 %562, ptr %5, align 4, !tbaa !5
  %1183 = add nuw i32 %562, 1
  %1184 = icmp eq i32 %562, %3
  br i1 %1184, label %1185, label %561, !llvm.loop !185

1185:                                             ; preds = %561, %1180, %510
  %1186 = phi double [ %313, %510 ], [ %860, %1180 ], [ %567, %561 ]
  %1187 = phi double [ %476, %510 ], [ %920, %1180 ], [ %565, %561 ]
  %1188 = phi double [ %413, %510 ], [ %1182, %1180 ], [ %564, %561 ]
  store double %1188, ptr %7, align 8, !tbaa !93
  %1189 = getelementptr inbounds double, ptr %7, i64 1
  store double %1187, ptr %1189, align 8, !tbaa !93
  %1190 = getelementptr inbounds double, ptr %7, i64 2
  store double %1186, ptr %1190, align 8, !tbaa !93
  %1191 = getelementptr inbounds double, ptr %7, i64 3
  store double 0.000000e+00, ptr %1191, align 8, !tbaa !93
  %1192 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %1193 unwind label %1206

1193:                                             ; preds = %1185, %1050
  %1194 = phi double [ %1053, %1050 ], [ %1192, %1185 ]
  %1195 = fsub double %1194, %9
  %1196 = getelementptr inbounds double, ptr %7, i64 4
  store double %1195, ptr %1196, align 8, !tbaa !93
  %1197 = icmp eq ptr %104, null
  br i1 %1197, label %1199, label %1198

1198:                                             ; preds = %1193
  tail call void @_ZdlPv(ptr noundef nonnull %104) #28
  br label %1199

1199:                                             ; preds = %1193, %1198
  %1200 = icmp eq ptr %90, null
  br i1 %1200, label %1202, label %1201

1201:                                             ; preds = %1199
  tail call void @_ZdlPv(ptr noundef nonnull %90) #28
  br label %1202

1202:                                             ; preds = %1199, %1201
  %1203 = icmp eq ptr %69, null
  br i1 %1203, label %1205, label %1204

1204:                                             ; preds = %1202
  tail call void @_ZdlPv(ptr noundef nonnull %69) #28
  br label %1205

1205:                                             ; preds = %1204, %1202, %35
  ret void

1206:                                             ; preds = %1185
  %1207 = landingpad { ptr, i32 }
          cleanup
  br label %1208

1208:                                             ; preds = %1054, %1056, %607, %609, %1206, %704, %559
  %1209 = phi { ptr, i32 } [ %560, %559 ], [ %1207, %1206 ], [ %705, %704 ], [ %608, %607 ], [ %610, %609 ], [ %1055, %1054 ], [ %1057, %1056 ]
  %1210 = icmp eq ptr %104, null
  br i1 %1210, label %1212, label %1211

1211:                                             ; preds = %1208
  tail call void @_ZdlPv(ptr noundef nonnull %104) #28
  br label %1212

1212:                                             ; preds = %1211, %1208, %113
  %1213 = phi { ptr, i32 } [ %114, %113 ], [ %1209, %1208 ], [ %1209, %1211 ]
  %1214 = icmp eq ptr %90, null
  br i1 %1214, label %1216, label %1215

1215:                                             ; preds = %1212
  tail call void @_ZdlPv(ptr noundef nonnull %90) #28
  br label %1216

1216:                                             ; preds = %1215, %1212, %111
  %1217 = phi { ptr, i32 } [ %112, %111 ], [ %1213, %1212 ], [ %1213, %1215 ]
  %1218 = icmp eq ptr %69, null
  br i1 %1218, label %1220, label %1219

1219:                                             ; preds = %1216
  tail call void @_ZdlPv(ptr noundef nonnull %69) #28
  br label %1220

1220:                                             ; preds = %1216, %1219
  resume { ptr, i32 } %1217
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE8cg_solveINS_9CSRMatrixIdiiEENS_6VectorIdiiEENS_10matvec_stdIS2_S4_EEEEvRT_RKT0_RS9_T1_NS7_16LocalOrdinalTypeERNS_10TypeTraitsINS7_10ScalarTypeEE14magnitude_typeERSE_SJ_Pd(ptr noundef nonnull align 8 dereferenceable(132) %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(32) %2, i32 noundef %3, ptr noundef nonnull align 8 dereferenceable(8) %4, ptr noundef nonnull align 4 dereferenceable(4) %5, ptr noundef nonnull align 8 dereferenceable(8) %6, ptr noundef %7) local_unnamed_addr #7 comdat personality ptr @__gxx_personality_v0 {
  %9 = tail call noundef double @_ZN6miniFE7mytimerEv()
  %10 = load i8, ptr %0, align 8, !tbaa !76, !range !57, !noundef !58
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %39

12:                                               ; preds = %8
  %13 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.106, i64 noundef 92)
  %14 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.107, i64 noundef 78)
  %15 = load ptr, ptr @_ZSt4cerr, align 8, !tbaa !30
  %16 = getelementptr i8, ptr %15, i64 -24
  %17 = load i64, ptr %16, align 8
  %18 = getelementptr inbounds i8, ptr @_ZSt4cerr, i64 %17
  %19 = getelementptr inbounds %"class.std::basic_ios", ptr %18, i64 0, i32 5
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %12
  tail call void @_ZSt16__throw_bad_castv() #26
  unreachable

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.std::ctype", ptr %20, i64 0, i32 8
  %25 = load i8, ptr %24, align 8, !tbaa !40
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::ctype", ptr %20, i64 0, i32 9, i64 10
  %29 = load i8, ptr %28, align 1, !tbaa !20
  br label %35

30:                                               ; preds = %23
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %20)
  %31 = load ptr, ptr %20, align 8, !tbaa !30
  %32 = getelementptr inbounds ptr, ptr %31, i64 6
  %33 = load ptr, ptr %32, align 8
  %34 = tail call noundef signext i8 %33(ptr noundef nonnull align 8 dereferenceable(570) %20, i8 noundef signext 10)
  br label %35

35:                                               ; preds = %27, %30
  %36 = phi i8 [ %29, %27 ], [ %34, %30 ]
  %37 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef signext %36)
  %38 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %37)
  br label %1205

39:                                               ; preds = %8
  %40 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 2
  %41 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !86
  %43 = load ptr, ptr %40, align 8, !tbaa !87
  %44 = ptrtoint ptr %42 to i64
  %45 = ptrtoint ptr %43 to i64
  %46 = sub i64 %44, %45
  %47 = lshr exact i64 %46, 2
  %48 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 7
  %49 = load i32, ptr %48, align 8, !tbaa !96
  %50 = trunc i64 %47 to i32
  %51 = shl i64 %46, 30
  %52 = ashr i64 %51, 32
  %53 = icmp slt i32 %50, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %39
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.34) #26
  unreachable

55:                                               ; preds = %39
  %56 = icmp eq i32 %50, 0
  br i1 %56, label %67, label %57

57:                                               ; preds = %55
  %58 = shl nuw nsw i64 %52, 3
  %59 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %58) #27
  store double 0.000000e+00, ptr %59, align 8, !tbaa !93
  %60 = getelementptr double, ptr %59, i64 1
  %61 = icmp eq i32 %50, 1
  br i1 %61, label %65, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds double, ptr %59, i64 %52
  %64 = add nsw i64 %58, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %60, i8 0, i64 %64, i1 false), !tbaa !93
  br label %65

65:                                               ; preds = %62, %57
  %66 = phi ptr [ %63, %62 ], [ %60, %57 ]
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %59, i8 0, i64 %58, i1 false), !tbaa !93
  br label %67

67:                                               ; preds = %55, %65
  %68 = phi ptr [ %66, %65 ], [ null, %55 ]
  %69 = phi ptr [ %59, %65 ], [ null, %55 ]
  %70 = ptrtoint ptr %69 to i64
  %71 = sext i32 %49 to i64
  %72 = icmp slt i32 %49, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %67
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.34) #26
          to label %74 unwind label %111

74:                                               ; preds = %73
  unreachable

75:                                               ; preds = %67
  %76 = icmp eq i32 %49, 0
  br i1 %76, label %88, label %77

77:                                               ; preds = %75
  %78 = shl nuw nsw i64 %71, 3
  %79 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %78) #27
          to label %80 unwind label %111

80:                                               ; preds = %77
  store double 0.000000e+00, ptr %79, align 8, !tbaa !93
  %81 = getelementptr double, ptr %79, i64 1
  %82 = icmp eq i32 %49, 1
  br i1 %82, label %86, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds double, ptr %79, i64 %71
  %85 = add nsw i64 %78, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %81, i8 0, i64 %85, i1 false), !tbaa !93
  br label %86

86:                                               ; preds = %83, %80
  %87 = phi ptr [ %84, %83 ], [ %81, %80 ]
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %79, i8 0, i64 %78, i1 false), !tbaa !93
  br label %88

88:                                               ; preds = %75, %86
  %89 = phi ptr [ %87, %86 ], [ null, %75 ]
  %90 = phi ptr [ %79, %86 ], [ null, %75 ]
  %91 = ptrtoint ptr %90 to i64
  br i1 %56, label %103, label %92

92:                                               ; preds = %88
  %93 = shl nuw nsw i64 %52, 3
  %94 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %93) #27
          to label %95 unwind label %113

95:                                               ; preds = %92
  store double 0.000000e+00, ptr %94, align 8, !tbaa !93
  %96 = getelementptr double, ptr %94, i64 1
  %97 = icmp eq i32 %50, 1
  br i1 %97, label %101, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds double, ptr %94, i64 %52
  %100 = add nsw i64 %93, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %96, i8 0, i64 %100, i1 false), !tbaa !93
  br label %101

101:                                              ; preds = %98, %95
  %102 = phi ptr [ %99, %98 ], [ %96, %95 ]
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %94, i8 0, i64 %93, i1 false), !tbaa !93
  br label %103

103:                                              ; preds = %101, %88
  %104 = phi ptr [ %94, %101 ], [ null, %88 ]
  %105 = phi ptr [ %102, %101 ], [ null, %88 ]
  %106 = ptrtoint ptr %104 to i64
  store double 0.000000e+00, ptr %6, align 8, !tbaa !93
  %107 = sdiv i32 %3, 10
  %108 = tail call i32 @llvm.smin.i32(i32 %107, i32 50)
  %109 = tail call i32 @llvm.smax.i32(i32 %108, i32 1)
  %110 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %115 unwind label %559

111:                                              ; preds = %77, %73
  %112 = landingpad { ptr, i32 }
          cleanup
  br label %1216

113:                                              ; preds = %92
  %114 = landingpad { ptr, i32 }
          cleanup
  br label %1212

115:                                              ; preds = %103
  %116 = getelementptr inbounds %"struct.miniFE::Vector", ptr %2, i64 0, i32 2
  %117 = getelementptr inbounds %"struct.miniFE::Vector", ptr %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %118 = load ptr, ptr %117, align 8, !tbaa !95
  %119 = load ptr, ptr %116, align 8, !tbaa !91
  %120 = ptrtoint ptr %118 to i64
  %121 = ptrtoint ptr %119 to i64
  %122 = sub i64 %120, %121
  %123 = lshr exact i64 %122, 3
  %124 = trunc i64 %123 to i32
  %125 = icmp sgt i32 %124, 0
  br i1 %125, label %126, label %199

126:                                              ; preds = %115
  %127 = and i64 %123, 4294967295
  %128 = icmp ult i64 %127, 4
  %129 = sub i64 %91, %121
  %130 = icmp ult i64 %129, 32
  %131 = select i1 %128, i1 true, i1 %130
  br i1 %131, label %151, label %132

132:                                              ; preds = %126
  %133 = and i64 %123, 3
  %134 = sub nsw i64 %127, %133
  br label %135

135:                                              ; preds = %135, %132
  %136 = phi i64 [ 0, %132 ], [ %147, %135 ]
  %137 = getelementptr inbounds double, ptr %119, i64 %136
  %138 = load <2 x double>, ptr %137, align 8, !tbaa !93
  %139 = getelementptr inbounds double, ptr %137, i64 2
  %140 = load <2 x double>, ptr %139, align 8, !tbaa !93
  %141 = fmul <2 x double> %138, zeroinitializer
  %142 = fmul <2 x double> %140, zeroinitializer
  %143 = fadd <2 x double> %138, %141
  %144 = fadd <2 x double> %140, %142
  %145 = getelementptr inbounds double, ptr %90, i64 %136
  store <2 x double> %143, ptr %145, align 8, !tbaa !93
  %146 = getelementptr inbounds double, ptr %145, i64 2
  store <2 x double> %144, ptr %146, align 8, !tbaa !93
  %147 = add nuw i64 %136, 4
  %148 = icmp eq i64 %147, %134
  br i1 %148, label %149, label %135, !llvm.loop !186

149:                                              ; preds = %135
  %150 = icmp eq i64 %133, 0
  br i1 %150, label %199, label %151

151:                                              ; preds = %126, %149
  %152 = phi i64 [ 0, %126 ], [ %134, %149 ]
  %153 = sub nsw i64 %123, %152
  %154 = xor i64 %152, -1
  %155 = add nsw i64 %127, %154
  %156 = and i64 %153, 3
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %169, label %158

158:                                              ; preds = %151, %158
  %159 = phi i64 [ %166, %158 ], [ %152, %151 ]
  %160 = phi i64 [ %167, %158 ], [ 0, %151 ]
  %161 = getelementptr inbounds double, ptr %119, i64 %159
  %162 = load double, ptr %161, align 8, !tbaa !93
  %163 = fmul double %162, 0.000000e+00
  %164 = fadd double %162, %163
  %165 = getelementptr inbounds double, ptr %90, i64 %159
  store double %164, ptr %165, align 8, !tbaa !93
  %166 = add nuw nsw i64 %159, 1
  %167 = add i64 %160, 1
  %168 = icmp eq i64 %167, %156
  br i1 %168, label %169, label %158, !llvm.loop !187

169:                                              ; preds = %158, %151
  %170 = phi i64 [ %152, %151 ], [ %166, %158 ]
  %171 = icmp ult i64 %155, 3
  br i1 %171, label %199, label %172

172:                                              ; preds = %169, %172
  %173 = phi i64 [ %197, %172 ], [ %170, %169 ]
  %174 = getelementptr inbounds double, ptr %119, i64 %173
  %175 = load double, ptr %174, align 8, !tbaa !93
  %176 = fmul double %175, 0.000000e+00
  %177 = fadd double %175, %176
  %178 = getelementptr inbounds double, ptr %90, i64 %173
  store double %177, ptr %178, align 8, !tbaa !93
  %179 = add nuw nsw i64 %173, 1
  %180 = getelementptr inbounds double, ptr %119, i64 %179
  %181 = load double, ptr %180, align 8, !tbaa !93
  %182 = fmul double %181, 0.000000e+00
  %183 = fadd double %181, %182
  %184 = getelementptr inbounds double, ptr %90, i64 %179
  store double %183, ptr %184, align 8, !tbaa !93
  %185 = add nuw nsw i64 %173, 2
  %186 = getelementptr inbounds double, ptr %119, i64 %185
  %187 = load double, ptr %186, align 8, !tbaa !93
  %188 = fmul double %187, 0.000000e+00
  %189 = fadd double %187, %188
  %190 = getelementptr inbounds double, ptr %90, i64 %185
  store double %189, ptr %190, align 8, !tbaa !93
  %191 = add nuw nsw i64 %173, 3
  %192 = getelementptr inbounds double, ptr %119, i64 %191
  %193 = load double, ptr %192, align 8, !tbaa !93
  %194 = fmul double %193, 0.000000e+00
  %195 = fadd double %193, %194
  %196 = getelementptr inbounds double, ptr %90, i64 %191
  store double %195, ptr %196, align 8, !tbaa !93
  %197 = add nuw nsw i64 %173, 4
  %198 = icmp eq i64 %197, %127
  br i1 %198, label %199, label %172, !llvm.loop !188

199:                                              ; preds = %169, %172, %149, %115
  %200 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %201 unwind label %559

201:                                              ; preds = %199
  %202 = fsub double %200, %110
  %203 = fadd double %202, 0.000000e+00
  %204 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %205 unwind label %559

205:                                              ; preds = %201
  %206 = load ptr, ptr %41, align 8, !tbaa !86
  %207 = load ptr, ptr %40, align 8, !tbaa !87
  %208 = ptrtoint ptr %206 to i64
  %209 = ptrtoint ptr %207 to i64
  %210 = sub i64 %208, %209
  %211 = lshr exact i64 %210, 2
  %212 = trunc i64 %211 to i32
  %213 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 3
  %214 = load ptr, ptr %213, align 8, !tbaa !87
  %215 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 5
  %216 = load ptr, ptr %215, align 8, !tbaa !87
  %217 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 6
  %218 = load ptr, ptr %217, align 8, !tbaa !91
  %219 = icmp sgt i32 %212, 0
  br i1 %219, label %220, label %309

220:                                              ; preds = %205
  %221 = and i64 %211, 4294967295
  %222 = load i32, ptr %214, align 4, !tbaa !5
  br label %223

223:                                              ; preds = %262, %220
  %224 = phi i32 [ %222, %220 ], [ %231, %262 ]
  %225 = phi i64 [ 0, %220 ], [ %229, %262 ]
  %226 = getelementptr inbounds double, ptr %104, i64 %225
  %227 = load double, ptr %226, align 8, !tbaa !93
  %228 = fmul double %227, 0.000000e+00
  %229 = add nuw nsw i64 %225, 1
  %230 = getelementptr inbounds i32, ptr %214, i64 %229
  %231 = load i32, ptr %230, align 4, !tbaa !5
  %232 = icmp slt i32 %224, %231
  br i1 %232, label %233, label %262

233:                                              ; preds = %223
  %234 = sext i32 %224 to i64
  %235 = sext i32 %231 to i64
  %236 = sub nsw i64 %235, %234
  %237 = xor i64 %234, -1
  %238 = add nsw i64 %237, %235
  %239 = and i64 %236, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %257, label %241

241:                                              ; preds = %233, %241
  %242 = phi i64 [ %254, %241 ], [ %234, %233 ]
  %243 = phi double [ %253, %241 ], [ %228, %233 ]
  %244 = phi i64 [ %255, %241 ], [ 0, %233 ]
  %245 = getelementptr inbounds double, ptr %218, i64 %242
  %246 = load double, ptr %245, align 8, !tbaa !93
  %247 = getelementptr inbounds i32, ptr %216, i64 %242
  %248 = load i32, ptr %247, align 4, !tbaa !5
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds double, ptr %90, i64 %249
  %251 = load double, ptr %250, align 8, !tbaa !93
  %252 = fmul double %246, %251
  %253 = fadd double %243, %252
  %254 = add nsw i64 %242, 1
  %255 = add i64 %244, 1
  %256 = icmp eq i64 %255, %239
  br i1 %256, label %257, label %241, !llvm.loop !189

257:                                              ; preds = %241, %233
  %258 = phi double [ undef, %233 ], [ %253, %241 ]
  %259 = phi i64 [ %234, %233 ], [ %254, %241 ]
  %260 = phi double [ %228, %233 ], [ %253, %241 ]
  %261 = icmp ult i64 %238, 3
  br i1 %261, label %262, label %265

262:                                              ; preds = %257, %265, %223
  %263 = phi double [ %228, %223 ], [ %258, %257 ], [ %306, %265 ]
  store double %263, ptr %226, align 8, !tbaa !93
  %264 = icmp eq i64 %229, %221
  br i1 %264, label %309, label %223, !llvm.loop !190

265:                                              ; preds = %257, %265
  %266 = phi i64 [ %307, %265 ], [ %259, %257 ]
  %267 = phi double [ %306, %265 ], [ %260, %257 ]
  %268 = getelementptr inbounds double, ptr %218, i64 %266
  %269 = load double, ptr %268, align 8, !tbaa !93
  %270 = getelementptr inbounds i32, ptr %216, i64 %266
  %271 = load i32, ptr %270, align 4, !tbaa !5
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds double, ptr %90, i64 %272
  %274 = load double, ptr %273, align 8, !tbaa !93
  %275 = fmul double %269, %274
  %276 = fadd double %267, %275
  %277 = add nsw i64 %266, 1
  %278 = getelementptr inbounds double, ptr %218, i64 %277
  %279 = load double, ptr %278, align 8, !tbaa !93
  %280 = getelementptr inbounds i32, ptr %216, i64 %277
  %281 = load i32, ptr %280, align 4, !tbaa !5
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds double, ptr %90, i64 %282
  %284 = load double, ptr %283, align 8, !tbaa !93
  %285 = fmul double %279, %284
  %286 = fadd double %276, %285
  %287 = add nsw i64 %266, 2
  %288 = getelementptr inbounds double, ptr %218, i64 %287
  %289 = load double, ptr %288, align 8, !tbaa !93
  %290 = getelementptr inbounds i32, ptr %216, i64 %287
  %291 = load i32, ptr %290, align 4, !tbaa !5
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds double, ptr %90, i64 %292
  %294 = load double, ptr %293, align 8, !tbaa !93
  %295 = fmul double %289, %294
  %296 = fadd double %286, %295
  %297 = add nsw i64 %266, 3
  %298 = getelementptr inbounds double, ptr %218, i64 %297
  %299 = load double, ptr %298, align 8, !tbaa !93
  %300 = getelementptr inbounds i32, ptr %216, i64 %297
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds double, ptr %90, i64 %302
  %304 = load double, ptr %303, align 8, !tbaa !93
  %305 = fmul double %299, %304
  %306 = fadd double %296, %305
  %307 = add nsw i64 %266, 4
  %308 = icmp eq i64 %307, %235
  br i1 %308, label %262, label %265, !llvm.loop !191

309:                                              ; preds = %262, %205
  %310 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %311 unwind label %559

311:                                              ; preds = %309
  %312 = fsub double %310, %204
  %313 = fadd double %312, 0.000000e+00
  %314 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %315 unwind label %559

315:                                              ; preds = %311
  %316 = getelementptr inbounds %"struct.miniFE::Vector", ptr %1, i64 0, i32 2
  %317 = getelementptr inbounds %"struct.miniFE::Vector", ptr %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %318 = load ptr, ptr %317, align 8, !tbaa !95
  %319 = load ptr, ptr %316, align 8, !tbaa !91
  %320 = ptrtoint ptr %318 to i64
  %321 = ptrtoint ptr %319 to i64
  %322 = sub i64 %320, %321
  %323 = lshr exact i64 %322, 3
  %324 = trunc i64 %323 to i32
  %325 = icmp sgt i32 %324, 0
  br i1 %325, label %326, label %409

326:                                              ; preds = %315
  %327 = and i64 %323, 4294967295
  %328 = icmp ult i64 %327, 8
  br i1 %328, label %356, label %329

329:                                              ; preds = %326
  %330 = sub i64 %70, %321
  %331 = icmp ult i64 %330, 32
  %332 = sub i64 %70, %106
  %333 = icmp ult i64 %332, 32
  %334 = or i1 %331, %333
  br i1 %334, label %356, label %335

335:                                              ; preds = %329
  %336 = and i64 %323, 3
  %337 = sub nsw i64 %327, %336
  br label %338

338:                                              ; preds = %338, %335
  %339 = phi i64 [ 0, %335 ], [ %352, %338 ]
  %340 = getelementptr inbounds double, ptr %319, i64 %339
  %341 = load <2 x double>, ptr %340, align 8, !tbaa !93
  %342 = getelementptr inbounds double, ptr %340, i64 2
  %343 = load <2 x double>, ptr %342, align 8, !tbaa !93
  %344 = getelementptr inbounds double, ptr %104, i64 %339
  %345 = load <2 x double>, ptr %344, align 8, !tbaa !93
  %346 = getelementptr inbounds double, ptr %344, i64 2
  %347 = load <2 x double>, ptr %346, align 8, !tbaa !93
  %348 = fsub <2 x double> %341, %345
  %349 = fsub <2 x double> %343, %347
  %350 = getelementptr inbounds double, ptr %69, i64 %339
  store <2 x double> %348, ptr %350, align 8, !tbaa !93
  %351 = getelementptr inbounds double, ptr %350, i64 2
  store <2 x double> %349, ptr %351, align 8, !tbaa !93
  %352 = add nuw i64 %339, 4
  %353 = icmp eq i64 %352, %337
  br i1 %353, label %354, label %338, !llvm.loop !192

354:                                              ; preds = %338
  %355 = icmp eq i64 %336, 0
  br i1 %355, label %409, label %356

356:                                              ; preds = %329, %326, %354
  %357 = phi i64 [ 0, %329 ], [ 0, %326 ], [ %337, %354 ]
  %358 = sub nsw i64 %323, %357
  %359 = xor i64 %357, -1
  %360 = add nsw i64 %327, %359
  %361 = and i64 %358, 3
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %375, label %363

363:                                              ; preds = %356, %363
  %364 = phi i64 [ %372, %363 ], [ %357, %356 ]
  %365 = phi i64 [ %373, %363 ], [ 0, %356 ]
  %366 = getelementptr inbounds double, ptr %319, i64 %364
  %367 = load double, ptr %366, align 8, !tbaa !93
  %368 = getelementptr inbounds double, ptr %104, i64 %364
  %369 = load double, ptr %368, align 8, !tbaa !93
  %370 = fsub double %367, %369
  %371 = getelementptr inbounds double, ptr %69, i64 %364
  store double %370, ptr %371, align 8, !tbaa !93
  %372 = add nuw nsw i64 %364, 1
  %373 = add i64 %365, 1
  %374 = icmp eq i64 %373, %361
  br i1 %374, label %375, label %363, !llvm.loop !193

375:                                              ; preds = %363, %356
  %376 = phi i64 [ %357, %356 ], [ %372, %363 ]
  %377 = icmp ult i64 %360, 3
  br i1 %377, label %409, label %378

378:                                              ; preds = %375, %378
  %379 = phi i64 [ %407, %378 ], [ %376, %375 ]
  %380 = getelementptr inbounds double, ptr %319, i64 %379
  %381 = load double, ptr %380, align 8, !tbaa !93
  %382 = getelementptr inbounds double, ptr %104, i64 %379
  %383 = load double, ptr %382, align 8, !tbaa !93
  %384 = fsub double %381, %383
  %385 = getelementptr inbounds double, ptr %69, i64 %379
  store double %384, ptr %385, align 8, !tbaa !93
  %386 = add nuw nsw i64 %379, 1
  %387 = getelementptr inbounds double, ptr %319, i64 %386
  %388 = load double, ptr %387, align 8, !tbaa !93
  %389 = getelementptr inbounds double, ptr %104, i64 %386
  %390 = load double, ptr %389, align 8, !tbaa !93
  %391 = fsub double %388, %390
  %392 = getelementptr inbounds double, ptr %69, i64 %386
  store double %391, ptr %392, align 8, !tbaa !93
  %393 = add nuw nsw i64 %379, 2
  %394 = getelementptr inbounds double, ptr %319, i64 %393
  %395 = load double, ptr %394, align 8, !tbaa !93
  %396 = getelementptr inbounds double, ptr %104, i64 %393
  %397 = load double, ptr %396, align 8, !tbaa !93
  %398 = fsub double %395, %397
  %399 = getelementptr inbounds double, ptr %69, i64 %393
  store double %398, ptr %399, align 8, !tbaa !93
  %400 = add nuw nsw i64 %379, 3
  %401 = getelementptr inbounds double, ptr %319, i64 %400
  %402 = load double, ptr %401, align 8, !tbaa !93
  %403 = getelementptr inbounds double, ptr %104, i64 %400
  %404 = load double, ptr %403, align 8, !tbaa !93
  %405 = fsub double %402, %404
  %406 = getelementptr inbounds double, ptr %69, i64 %400
  store double %405, ptr %406, align 8, !tbaa !93
  %407 = add nuw nsw i64 %379, 4
  %408 = icmp eq i64 %407, %327
  br i1 %408, label %409, label %378, !llvm.loop !194

409:                                              ; preds = %375, %378, %354, %315
  %410 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %411 unwind label %559

411:                                              ; preds = %409
  %412 = fsub double %410, %314
  %413 = fadd double %203, %412
  %414 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %415 unwind label %559

415:                                              ; preds = %411
  %416 = ptrtoint ptr %68 to i64
  %417 = ptrtoint ptr %69 to i64
  %418 = sub i64 %416, %417
  %419 = lshr exact i64 %418, 3
  %420 = trunc i64 %419 to i32
  %421 = icmp sgt i32 %420, 0
  br i1 %421, label %422, label %471

422:                                              ; preds = %415
  %423 = and i64 %419, 4294967295
  %424 = add nsw i64 %423, -1
  %425 = and i64 %419, 3
  %426 = icmp ult i64 %424, 3
  br i1 %426, label %455, label %427

427:                                              ; preds = %422
  %428 = sub nsw i64 %423, %425
  br label %429

429:                                              ; preds = %429, %427
  %430 = phi i64 [ 0, %427 ], [ %452, %429 ]
  %431 = phi double [ 0.000000e+00, %427 ], [ %451, %429 ]
  %432 = phi i64 [ 0, %427 ], [ %453, %429 ]
  %433 = getelementptr inbounds double, ptr %69, i64 %430
  %434 = load double, ptr %433, align 8, !tbaa !93
  %435 = fmul double %434, %434
  %436 = fadd double %431, %435
  %437 = or i64 %430, 1
  %438 = getelementptr inbounds double, ptr %69, i64 %437
  %439 = load double, ptr %438, align 8, !tbaa !93
  %440 = fmul double %439, %439
  %441 = fadd double %436, %440
  %442 = or i64 %430, 2
  %443 = getelementptr inbounds double, ptr %69, i64 %442
  %444 = load double, ptr %443, align 8, !tbaa !93
  %445 = fmul double %444, %444
  %446 = fadd double %441, %445
  %447 = or i64 %430, 3
  %448 = getelementptr inbounds double, ptr %69, i64 %447
  %449 = load double, ptr %448, align 8, !tbaa !93
  %450 = fmul double %449, %449
  %451 = fadd double %446, %450
  %452 = add nuw nsw i64 %430, 4
  %453 = add i64 %432, 4
  %454 = icmp eq i64 %453, %428
  br i1 %454, label %455, label %429, !llvm.loop !165

455:                                              ; preds = %429, %422
  %456 = phi double [ undef, %422 ], [ %451, %429 ]
  %457 = phi i64 [ 0, %422 ], [ %452, %429 ]
  %458 = phi double [ 0.000000e+00, %422 ], [ %451, %429 ]
  %459 = icmp eq i64 %425, 0
  br i1 %459, label %471, label %460

460:                                              ; preds = %455, %460
  %461 = phi i64 [ %468, %460 ], [ %457, %455 ]
  %462 = phi double [ %467, %460 ], [ %458, %455 ]
  %463 = phi i64 [ %469, %460 ], [ 0, %455 ]
  %464 = getelementptr inbounds double, ptr %69, i64 %461
  %465 = load double, ptr %464, align 8, !tbaa !93
  %466 = fmul double %465, %465
  %467 = fadd double %462, %466
  %468 = add nuw nsw i64 %461, 1
  %469 = add i64 %463, 1
  %470 = icmp eq i64 %469, %425
  br i1 %470, label %471, label %460, !llvm.loop !195

471:                                              ; preds = %455, %460, %415
  %472 = phi double [ 0.000000e+00, %415 ], [ %456, %455 ], [ %467, %460 ]
  %473 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %474 unwind label %559

474:                                              ; preds = %471
  %475 = fsub double %473, %414
  %476 = fadd double %475, 0.000000e+00
  %477 = tail call double @sqrt(double noundef %472) #25
  store double %477, ptr %6, align 8, !tbaa !93
  %478 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.108, i64 noundef 19)
          to label %479 unwind label %559

479:                                              ; preds = %474
  %480 = load double, ptr %6, align 8, !tbaa !93
  %481 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %480)
          to label %482 unwind label %559

482:                                              ; preds = %479
  %483 = load ptr, ptr %481, align 8, !tbaa !30
  %484 = getelementptr i8, ptr %483, i64 -24
  %485 = load i64, ptr %484, align 8
  %486 = getelementptr inbounds i8, ptr %481, i64 %485
  %487 = getelementptr inbounds %"class.std::basic_ios", ptr %486, i64 0, i32 5
  %488 = load ptr, ptr %487, align 8, !tbaa !32
  %489 = icmp eq ptr %488, null
  br i1 %489, label %490, label %492

490:                                              ; preds = %482
  invoke void @_ZSt16__throw_bad_castv() #26
          to label %491 unwind label %559

491:                                              ; preds = %490
  unreachable

492:                                              ; preds = %482
  %493 = getelementptr inbounds %"class.std::ctype", ptr %488, i64 0, i32 8
  %494 = load i8, ptr %493, align 8, !tbaa !40
  %495 = icmp eq i8 %494, 0
  br i1 %495, label %499, label %496

496:                                              ; preds = %492
  %497 = getelementptr inbounds %"class.std::ctype", ptr %488, i64 0, i32 9, i64 10
  %498 = load i8, ptr %497, align 1, !tbaa !20
  br label %505

499:                                              ; preds = %492
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %488)
          to label %500 unwind label %559

500:                                              ; preds = %499
  %501 = load ptr, ptr %488, align 8, !tbaa !30
  %502 = getelementptr inbounds ptr, ptr %501, i64 6
  %503 = load ptr, ptr %502, align 8
  %504 = invoke noundef signext i8 %503(ptr noundef nonnull align 8 dereferenceable(570) %488, i8 noundef signext 10)
          to label %505 unwind label %559

505:                                              ; preds = %500, %496
  %506 = phi i8 [ %498, %496 ], [ %504, %500 ]
  %507 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %481, i8 noundef signext %506)
          to label %508 unwind label %559

508:                                              ; preds = %505
  %509 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %507)
          to label %510 unwind label %559

510:                                              ; preds = %508
  %511 = icmp slt i32 %3, 1
  br i1 %511, label %1185, label %512

512:                                              ; preds = %510
  %513 = and i64 %419, 4294967295
  %514 = ptrtoint ptr %105 to i64
  %515 = ptrtoint ptr %104 to i64
  %516 = sub i64 %514, %515
  %517 = lshr exact i64 %516, 3
  %518 = trunc i64 %517 to i32
  %519 = icmp sgt i32 %518, 0
  %520 = and i64 %517, 4294967295
  %521 = ptrtoint ptr %89 to i64
  %522 = ptrtoint ptr %90 to i64
  %523 = sub i64 %521, %522
  %524 = lshr exact i64 %523, 3
  %525 = trunc i64 %524 to i32
  %526 = icmp sgt i32 %525, 0
  %527 = and i64 %524, 4294967295
  %528 = add nsw i64 %513, -1
  %529 = add nsw i64 %520, -1
  %530 = add nsw i64 %527, -1
  %531 = and i64 %419, 3
  %532 = icmp ult i64 %528, 3
  %533 = sub nsw i64 %513, %531
  %534 = icmp eq i64 %531, 0
  %535 = icmp ult i64 %513, 4
  %536 = and i64 %419, 3
  %537 = sub nsw i64 %513, %536
  %538 = icmp eq i64 %536, 0
  %539 = icmp ult i64 %513, 4
  %540 = and i64 %419, 3
  %541 = sub nsw i64 %513, %540
  %542 = icmp eq i64 %540, 0
  %543 = and i64 %517, 3
  %544 = icmp ult i64 %529, 3
  %545 = sub nsw i64 %520, %543
  %546 = icmp eq i64 %543, 0
  %547 = and i64 %517, 3
  %548 = icmp ult i64 %529, 3
  %549 = sub nsw i64 %520, %547
  %550 = icmp eq i64 %547, 0
  %551 = and i64 %524, 3
  %552 = icmp ult i64 %530, 3
  %553 = sub nsw i64 %527, %551
  %554 = icmp eq i64 %551, 0
  %555 = icmp ult i64 %513, 4
  %556 = and i64 %419, 3
  %557 = sub nsw i64 %513, %556
  %558 = icmp eq i64 %556, 0
  br label %561

559:                                              ; preds = %508, %505, %500, %499, %490, %479, %474, %471, %411, %409, %311, %309, %201, %199, %103
  %560 = landingpad { ptr, i32 }
          cleanup
  br label %1208

561:                                              ; preds = %512, %1180
  %562 = phi i32 [ 1, %512 ], [ %1183, %1180 ]
  %563 = phi double [ 0x3CB0000000000000, %512 ], [ %1061, %1180 ]
  %564 = phi double [ %413, %512 ], [ %1182, %1180 ]
  %565 = phi double [ %476, %512 ], [ %920, %1180 ]
  %566 = phi double [ %472, %512 ], [ %707, %1180 ]
  %567 = phi double [ %313, %512 ], [ %860, %1180 ]
  %568 = load double, ptr %6, align 8, !tbaa !93
  %569 = load double, ptr %4, align 8, !tbaa !93
  %570 = fcmp ogt double %568, %569
  br i1 %570, label %571, label %1185

571:                                              ; preds = %561
  %572 = icmp eq i32 %562, 1
  br i1 %572, label %573, label %611

573:                                              ; preds = %571
  %574 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %575 unwind label %607

575:                                              ; preds = %573
  br i1 %421, label %576, label %603

576:                                              ; preds = %575
  br i1 %539, label %592, label %577

577:                                              ; preds = %576, %577
  %578 = phi i64 [ %589, %577 ], [ 0, %576 ]
  %579 = getelementptr inbounds double, ptr %69, i64 %578
  %580 = load <2 x double>, ptr %579, align 8, !tbaa !93
  %581 = getelementptr inbounds double, ptr %579, i64 2
  %582 = load <2 x double>, ptr %581, align 8, !tbaa !93
  %583 = fmul <2 x double> %580, zeroinitializer
  %584 = fmul <2 x double> %582, zeroinitializer
  %585 = fadd <2 x double> %580, %583
  %586 = fadd <2 x double> %582, %584
  %587 = getelementptr inbounds double, ptr %90, i64 %578
  store <2 x double> %585, ptr %587, align 8, !tbaa !93
  %588 = getelementptr inbounds double, ptr %587, i64 2
  store <2 x double> %586, ptr %588, align 8, !tbaa !93
  %589 = add nuw i64 %578, 4
  %590 = icmp eq i64 %589, %541
  br i1 %590, label %591, label %577, !llvm.loop !196

591:                                              ; preds = %577
  br i1 %542, label %603, label %592

592:                                              ; preds = %576, %591
  %593 = phi i64 [ 0, %576 ], [ %541, %591 ]
  br label %594

594:                                              ; preds = %592, %594
  %595 = phi i64 [ %601, %594 ], [ %593, %592 ]
  %596 = getelementptr inbounds double, ptr %69, i64 %595
  %597 = load double, ptr %596, align 8, !tbaa !93
  %598 = fmul double %597, 0.000000e+00
  %599 = fadd double %597, %598
  %600 = getelementptr inbounds double, ptr %90, i64 %595
  store double %599, ptr %600, align 8, !tbaa !93
  %601 = add nuw nsw i64 %595, 1
  %602 = icmp eq i64 %601, %513
  br i1 %602, label %603, label %594, !llvm.loop !197

603:                                              ; preds = %594, %591, %575
  %604 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %605 unwind label %607

605:                                              ; preds = %603
  %606 = fsub double %604, %574
  br label %706

607:                                              ; preds = %573, %603, %611, %656, %718, %716, %720, %722, %742, %743, %748, %751
  %608 = landingpad { ptr, i32 }
          cleanup
  br label %1208

609:                                              ; preds = %733
  %610 = landingpad { ptr, i32 }
          cleanup
  br label %1208

611:                                              ; preds = %571
  %612 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %613 unwind label %607

613:                                              ; preds = %611
  br i1 %421, label %614, label %656

614:                                              ; preds = %613
  br i1 %532, label %641, label %615

615:                                              ; preds = %614, %615
  %616 = phi i64 [ %638, %615 ], [ 0, %614 ]
  %617 = phi double [ %637, %615 ], [ 0.000000e+00, %614 ]
  %618 = phi i64 [ %639, %615 ], [ 0, %614 ]
  %619 = getelementptr inbounds double, ptr %69, i64 %616
  %620 = load double, ptr %619, align 8, !tbaa !93
  %621 = fmul double %620, %620
  %622 = fadd double %617, %621
  %623 = or i64 %616, 1
  %624 = getelementptr inbounds double, ptr %69, i64 %623
  %625 = load double, ptr %624, align 8, !tbaa !93
  %626 = fmul double %625, %625
  %627 = fadd double %622, %626
  %628 = or i64 %616, 2
  %629 = getelementptr inbounds double, ptr %69, i64 %628
  %630 = load double, ptr %629, align 8, !tbaa !93
  %631 = fmul double %630, %630
  %632 = fadd double %627, %631
  %633 = or i64 %616, 3
  %634 = getelementptr inbounds double, ptr %69, i64 %633
  %635 = load double, ptr %634, align 8, !tbaa !93
  %636 = fmul double %635, %635
  %637 = fadd double %632, %636
  %638 = add nuw nsw i64 %616, 4
  %639 = add i64 %618, 4
  %640 = icmp eq i64 %639, %533
  br i1 %640, label %641, label %615, !llvm.loop !165

641:                                              ; preds = %615, %614
  %642 = phi double [ undef, %614 ], [ %637, %615 ]
  %643 = phi i64 [ 0, %614 ], [ %638, %615 ]
  %644 = phi double [ 0.000000e+00, %614 ], [ %637, %615 ]
  br i1 %534, label %656, label %645

645:                                              ; preds = %641, %645
  %646 = phi i64 [ %653, %645 ], [ %643, %641 ]
  %647 = phi double [ %652, %645 ], [ %644, %641 ]
  %648 = phi i64 [ %654, %645 ], [ 0, %641 ]
  %649 = getelementptr inbounds double, ptr %69, i64 %646
  %650 = load double, ptr %649, align 8, !tbaa !93
  %651 = fmul double %650, %650
  %652 = fadd double %647, %651
  %653 = add nuw nsw i64 %646, 1
  %654 = add i64 %648, 1
  %655 = icmp eq i64 %654, %531
  br i1 %655, label %656, label %645, !llvm.loop !198

656:                                              ; preds = %641, %645, %613
  %657 = phi double [ 0.000000e+00, %613 ], [ %642, %641 ], [ %652, %645 ]
  %658 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %659 unwind label %607

659:                                              ; preds = %656
  %660 = fsub double %658, %612
  %661 = fadd double %565, %660
  %662 = fdiv double %657, %566
  %663 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %664 unwind label %704

664:                                              ; preds = %659
  br i1 %421, label %665, label %700

665:                                              ; preds = %664
  br i1 %535, label %688, label %666

666:                                              ; preds = %665
  %667 = insertelement <2 x double> poison, double %662, i64 0
  %668 = shufflevector <2 x double> %667, <2 x double> poison, <2 x i32> zeroinitializer
  %669 = insertelement <2 x double> poison, double %662, i64 0
  %670 = shufflevector <2 x double> %669, <2 x double> poison, <2 x i32> zeroinitializer
  br label %671

671:                                              ; preds = %671, %666
  %672 = phi i64 [ 0, %666 ], [ %685, %671 ]
  %673 = getelementptr inbounds double, ptr %69, i64 %672
  %674 = load <2 x double>, ptr %673, align 8, !tbaa !93
  %675 = getelementptr inbounds double, ptr %673, i64 2
  %676 = load <2 x double>, ptr %675, align 8, !tbaa !93
  %677 = getelementptr inbounds double, ptr %90, i64 %672
  %678 = load <2 x double>, ptr %677, align 8, !tbaa !93
  %679 = getelementptr inbounds double, ptr %677, i64 2
  %680 = load <2 x double>, ptr %679, align 8, !tbaa !93
  %681 = fmul <2 x double> %668, %678
  %682 = fmul <2 x double> %670, %680
  %683 = fadd <2 x double> %674, %681
  %684 = fadd <2 x double> %676, %682
  store <2 x double> %683, ptr %677, align 8, !tbaa !93
  store <2 x double> %684, ptr %679, align 8, !tbaa !93
  %685 = add nuw i64 %672, 4
  %686 = icmp eq i64 %685, %537
  br i1 %686, label %687, label %671, !llvm.loop !199

687:                                              ; preds = %671
  br i1 %538, label %700, label %688

688:                                              ; preds = %665, %687
  %689 = phi i64 [ 0, %665 ], [ %537, %687 ]
  br label %690

690:                                              ; preds = %688, %690
  %691 = phi i64 [ %698, %690 ], [ %689, %688 ]
  %692 = getelementptr inbounds double, ptr %69, i64 %691
  %693 = load double, ptr %692, align 8, !tbaa !93
  %694 = getelementptr inbounds double, ptr %90, i64 %691
  %695 = load double, ptr %694, align 8, !tbaa !93
  %696 = fmul double %662, %695
  %697 = fadd double %693, %696
  store double %697, ptr %694, align 8, !tbaa !93
  %698 = add nuw nsw i64 %691, 1
  %699 = icmp eq i64 %698, %513
  br i1 %699, label %700, label %690, !llvm.loop !200

700:                                              ; preds = %690, %687, %664
  %701 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %702 unwind label %704

702:                                              ; preds = %700
  %703 = fsub double %701, %663
  br label %706

704:                                              ; preds = %700, %659
  %705 = landingpad { ptr, i32 }
          cleanup
  br label %1208

706:                                              ; preds = %702, %605
  %707 = phi double [ %566, %605 ], [ %657, %702 ]
  %708 = phi double [ %565, %605 ], [ %661, %702 ]
  %709 = phi double [ %606, %605 ], [ %703, %702 ]
  %710 = fadd double %564, %709
  %711 = tail call double @sqrt(double noundef %707) #25
  store double %711, ptr %6, align 8, !tbaa !93
  %712 = urem i32 %562, %109
  %713 = icmp eq i32 %712, 0
  %714 = icmp eq i32 %562, %3
  %715 = or i1 %714, %713
  br i1 %715, label %716, label %753

716:                                              ; preds = %706
  %717 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.109, i64 noundef 12)
          to label %718 unwind label %607

718:                                              ; preds = %716
  %719 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 noundef %562)
          to label %720 unwind label %607

720:                                              ; preds = %718
  %721 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %719, ptr noundef nonnull @.str.110, i64 noundef 14)
          to label %722 unwind label %607

722:                                              ; preds = %720
  %723 = load double, ptr %6, align 8, !tbaa !93
  %724 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %719, double noundef %723)
          to label %725 unwind label %607

725:                                              ; preds = %722
  %726 = load ptr, ptr %724, align 8, !tbaa !30
  %727 = getelementptr i8, ptr %726, i64 -24
  %728 = load i64, ptr %727, align 8
  %729 = getelementptr inbounds i8, ptr %724, i64 %728
  %730 = getelementptr inbounds %"class.std::basic_ios", ptr %729, i64 0, i32 5
  %731 = load ptr, ptr %730, align 8, !tbaa !32
  %732 = icmp eq ptr %731, null
  br i1 %732, label %733, label %735

733:                                              ; preds = %725
  invoke void @_ZSt16__throw_bad_castv() #26
          to label %734 unwind label %609

734:                                              ; preds = %733
  unreachable

735:                                              ; preds = %725
  %736 = getelementptr inbounds %"class.std::ctype", ptr %731, i64 0, i32 8
  %737 = load i8, ptr %736, align 8, !tbaa !40
  %738 = icmp eq i8 %737, 0
  br i1 %738, label %742, label %739

739:                                              ; preds = %735
  %740 = getelementptr inbounds %"class.std::ctype", ptr %731, i64 0, i32 9, i64 10
  %741 = load i8, ptr %740, align 1, !tbaa !20
  br label %748

742:                                              ; preds = %735
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %731)
          to label %743 unwind label %607

743:                                              ; preds = %742
  %744 = load ptr, ptr %731, align 8, !tbaa !30
  %745 = getelementptr inbounds ptr, ptr %744, i64 6
  %746 = load ptr, ptr %745, align 8
  %747 = invoke noundef signext i8 %746(ptr noundef nonnull align 8 dereferenceable(570) %731, i8 noundef signext 10)
          to label %748 unwind label %607

748:                                              ; preds = %743, %739
  %749 = phi i8 [ %741, %739 ], [ %747, %743 ]
  %750 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %724, i8 noundef signext %749)
          to label %751 unwind label %607

751:                                              ; preds = %748
  %752 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %750)
          to label %753 unwind label %607

753:                                              ; preds = %751, %706
  %754 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %755 unwind label %1054

755:                                              ; preds = %753
  %756 = load ptr, ptr %41, align 8, !tbaa !86
  %757 = load ptr, ptr %40, align 8, !tbaa !87
  %758 = ptrtoint ptr %756 to i64
  %759 = ptrtoint ptr %757 to i64
  %760 = sub i64 %758, %759
  %761 = lshr exact i64 %760, 2
  %762 = trunc i64 %761 to i32
  %763 = load ptr, ptr %213, align 8, !tbaa !87
  %764 = load ptr, ptr %215, align 8, !tbaa !87
  %765 = load ptr, ptr %217, align 8, !tbaa !91
  %766 = icmp sgt i32 %762, 0
  br i1 %766, label %767, label %856

767:                                              ; preds = %755
  %768 = and i64 %761, 4294967295
  %769 = load i32, ptr %763, align 4, !tbaa !5
  br label %770

770:                                              ; preds = %809, %767
  %771 = phi i32 [ %769, %767 ], [ %778, %809 ]
  %772 = phi i64 [ 0, %767 ], [ %776, %809 ]
  %773 = getelementptr inbounds double, ptr %104, i64 %772
  %774 = load double, ptr %773, align 8, !tbaa !93
  %775 = fmul double %774, 0.000000e+00
  %776 = add nuw nsw i64 %772, 1
  %777 = getelementptr inbounds i32, ptr %763, i64 %776
  %778 = load i32, ptr %777, align 4, !tbaa !5
  %779 = icmp slt i32 %771, %778
  br i1 %779, label %780, label %809

780:                                              ; preds = %770
  %781 = sext i32 %771 to i64
  %782 = sext i32 %778 to i64
  %783 = sub nsw i64 %782, %781
  %784 = xor i64 %781, -1
  %785 = add nsw i64 %784, %782
  %786 = and i64 %783, 3
  %787 = icmp eq i64 %786, 0
  br i1 %787, label %804, label %788

788:                                              ; preds = %780, %788
  %789 = phi i64 [ %801, %788 ], [ %781, %780 ]
  %790 = phi double [ %800, %788 ], [ %775, %780 ]
  %791 = phi i64 [ %802, %788 ], [ 0, %780 ]
  %792 = getelementptr inbounds double, ptr %765, i64 %789
  %793 = load double, ptr %792, align 8, !tbaa !93
  %794 = getelementptr inbounds i32, ptr %764, i64 %789
  %795 = load i32, ptr %794, align 4, !tbaa !5
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds double, ptr %90, i64 %796
  %798 = load double, ptr %797, align 8, !tbaa !93
  %799 = fmul double %793, %798
  %800 = fadd double %790, %799
  %801 = add nsw i64 %789, 1
  %802 = add i64 %791, 1
  %803 = icmp eq i64 %802, %786
  br i1 %803, label %804, label %788, !llvm.loop !201

804:                                              ; preds = %788, %780
  %805 = phi double [ undef, %780 ], [ %800, %788 ]
  %806 = phi i64 [ %781, %780 ], [ %801, %788 ]
  %807 = phi double [ %775, %780 ], [ %800, %788 ]
  %808 = icmp ult i64 %785, 3
  br i1 %808, label %809, label %812

809:                                              ; preds = %804, %812, %770
  %810 = phi double [ %775, %770 ], [ %805, %804 ], [ %853, %812 ]
  store double %810, ptr %773, align 8, !tbaa !93
  %811 = icmp eq i64 %776, %768
  br i1 %811, label %856, label %770, !llvm.loop !190

812:                                              ; preds = %804, %812
  %813 = phi i64 [ %854, %812 ], [ %806, %804 ]
  %814 = phi double [ %853, %812 ], [ %807, %804 ]
  %815 = getelementptr inbounds double, ptr %765, i64 %813
  %816 = load double, ptr %815, align 8, !tbaa !93
  %817 = getelementptr inbounds i32, ptr %764, i64 %813
  %818 = load i32, ptr %817, align 4, !tbaa !5
  %819 = sext i32 %818 to i64
  %820 = getelementptr inbounds double, ptr %90, i64 %819
  %821 = load double, ptr %820, align 8, !tbaa !93
  %822 = fmul double %816, %821
  %823 = fadd double %814, %822
  %824 = add nsw i64 %813, 1
  %825 = getelementptr inbounds double, ptr %765, i64 %824
  %826 = load double, ptr %825, align 8, !tbaa !93
  %827 = getelementptr inbounds i32, ptr %764, i64 %824
  %828 = load i32, ptr %827, align 4, !tbaa !5
  %829 = sext i32 %828 to i64
  %830 = getelementptr inbounds double, ptr %90, i64 %829
  %831 = load double, ptr %830, align 8, !tbaa !93
  %832 = fmul double %826, %831
  %833 = fadd double %823, %832
  %834 = add nsw i64 %813, 2
  %835 = getelementptr inbounds double, ptr %765, i64 %834
  %836 = load double, ptr %835, align 8, !tbaa !93
  %837 = getelementptr inbounds i32, ptr %764, i64 %834
  %838 = load i32, ptr %837, align 4, !tbaa !5
  %839 = sext i32 %838 to i64
  %840 = getelementptr inbounds double, ptr %90, i64 %839
  %841 = load double, ptr %840, align 8, !tbaa !93
  %842 = fmul double %836, %841
  %843 = fadd double %833, %842
  %844 = add nsw i64 %813, 3
  %845 = getelementptr inbounds double, ptr %765, i64 %844
  %846 = load double, ptr %845, align 8, !tbaa !93
  %847 = getelementptr inbounds i32, ptr %764, i64 %844
  %848 = load i32, ptr %847, align 4, !tbaa !5
  %849 = sext i32 %848 to i64
  %850 = getelementptr inbounds double, ptr %90, i64 %849
  %851 = load double, ptr %850, align 8, !tbaa !93
  %852 = fmul double %846, %851
  %853 = fadd double %843, %852
  %854 = add nsw i64 %813, 4
  %855 = icmp eq i64 %854, %782
  br i1 %855, label %809, label %812, !llvm.loop !191

856:                                              ; preds = %809, %755
  %857 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %858 unwind label %1054

858:                                              ; preds = %856
  %859 = fsub double %857, %754
  %860 = fadd double %567, %859
  %861 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %862 unwind label %1054

862:                                              ; preds = %858
  br i1 %519, label %863, label %915

863:                                              ; preds = %862
  br i1 %544, label %898, label %864

864:                                              ; preds = %863, %864
  %865 = phi i64 [ %895, %864 ], [ 0, %863 ]
  %866 = phi double [ %894, %864 ], [ 0.000000e+00, %863 ]
  %867 = phi i64 [ %896, %864 ], [ 0, %863 ]
  %868 = getelementptr inbounds double, ptr %104, i64 %865
  %869 = load double, ptr %868, align 8, !tbaa !93
  %870 = getelementptr inbounds double, ptr %90, i64 %865
  %871 = load double, ptr %870, align 8, !tbaa !93
  %872 = fmul double %869, %871
  %873 = fadd double %866, %872
  %874 = or i64 %865, 1
  %875 = getelementptr inbounds double, ptr %104, i64 %874
  %876 = load double, ptr %875, align 8, !tbaa !93
  %877 = getelementptr inbounds double, ptr %90, i64 %874
  %878 = load double, ptr %877, align 8, !tbaa !93
  %879 = fmul double %876, %878
  %880 = fadd double %873, %879
  %881 = or i64 %865, 2
  %882 = getelementptr inbounds double, ptr %104, i64 %881
  %883 = load double, ptr %882, align 8, !tbaa !93
  %884 = getelementptr inbounds double, ptr %90, i64 %881
  %885 = load double, ptr %884, align 8, !tbaa !93
  %886 = fmul double %883, %885
  %887 = fadd double %880, %886
  %888 = or i64 %865, 3
  %889 = getelementptr inbounds double, ptr %104, i64 %888
  %890 = load double, ptr %889, align 8, !tbaa !93
  %891 = getelementptr inbounds double, ptr %90, i64 %888
  %892 = load double, ptr %891, align 8, !tbaa !93
  %893 = fmul double %890, %892
  %894 = fadd double %887, %893
  %895 = add nuw nsw i64 %865, 4
  %896 = add i64 %867, 4
  %897 = icmp eq i64 %896, %545
  br i1 %897, label %898, label %864, !llvm.loop !165

898:                                              ; preds = %864, %863
  %899 = phi double [ undef, %863 ], [ %894, %864 ]
  %900 = phi i64 [ 0, %863 ], [ %895, %864 ]
  %901 = phi double [ 0.000000e+00, %863 ], [ %894, %864 ]
  br i1 %546, label %915, label %902

902:                                              ; preds = %898, %902
  %903 = phi i64 [ %912, %902 ], [ %900, %898 ]
  %904 = phi double [ %911, %902 ], [ %901, %898 ]
  %905 = phi i64 [ %913, %902 ], [ 0, %898 ]
  %906 = getelementptr inbounds double, ptr %104, i64 %903
  %907 = load double, ptr %906, align 8, !tbaa !93
  %908 = getelementptr inbounds double, ptr %90, i64 %903
  %909 = load double, ptr %908, align 8, !tbaa !93
  %910 = fmul double %907, %909
  %911 = fadd double %904, %910
  %912 = add nuw nsw i64 %903, 1
  %913 = add i64 %905, 1
  %914 = icmp eq i64 %913, %543
  br i1 %914, label %915, label %902, !llvm.loop !202

915:                                              ; preds = %898, %902, %862
  %916 = phi double [ 0.000000e+00, %862 ], [ %899, %898 ], [ %911, %902 ]
  %917 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %918 unwind label %1054

918:                                              ; preds = %915
  %919 = fsub double %917, %861
  %920 = fadd double %708, %919
  %921 = fcmp olt double %916, %563
  br i1 %921, label %922, label %1060

922:                                              ; preds = %918
  %923 = fcmp olt double %916, 0.000000e+00
  br i1 %923, label %1020, label %924

924:                                              ; preds = %922
  br i1 %519, label %925, label %967

925:                                              ; preds = %924
  br i1 %548, label %952, label %926

926:                                              ; preds = %925, %926
  %927 = phi i64 [ %949, %926 ], [ 0, %925 ]
  %928 = phi double [ %948, %926 ], [ 0.000000e+00, %925 ]
  %929 = phi i64 [ %950, %926 ], [ 0, %925 ]
  %930 = getelementptr inbounds double, ptr %104, i64 %927
  %931 = load double, ptr %930, align 8, !tbaa !93
  %932 = fmul double %931, %931
  %933 = fadd double %928, %932
  %934 = or i64 %927, 1
  %935 = getelementptr inbounds double, ptr %104, i64 %934
  %936 = load double, ptr %935, align 8, !tbaa !93
  %937 = fmul double %936, %936
  %938 = fadd double %933, %937
  %939 = or i64 %927, 2
  %940 = getelementptr inbounds double, ptr %104, i64 %939
  %941 = load double, ptr %940, align 8, !tbaa !93
  %942 = fmul double %941, %941
  %943 = fadd double %938, %942
  %944 = or i64 %927, 3
  %945 = getelementptr inbounds double, ptr %104, i64 %944
  %946 = load double, ptr %945, align 8, !tbaa !93
  %947 = fmul double %946, %946
  %948 = fadd double %943, %947
  %949 = add nuw nsw i64 %927, 4
  %950 = add i64 %929, 4
  %951 = icmp eq i64 %950, %549
  br i1 %951, label %952, label %926, !llvm.loop !165

952:                                              ; preds = %926, %925
  %953 = phi double [ undef, %925 ], [ %948, %926 ]
  %954 = phi i64 [ 0, %925 ], [ %949, %926 ]
  %955 = phi double [ 0.000000e+00, %925 ], [ %948, %926 ]
  br i1 %550, label %967, label %956

956:                                              ; preds = %952, %956
  %957 = phi i64 [ %964, %956 ], [ %954, %952 ]
  %958 = phi double [ %963, %956 ], [ %955, %952 ]
  %959 = phi i64 [ %965, %956 ], [ 0, %952 ]
  %960 = getelementptr inbounds double, ptr %104, i64 %957
  %961 = load double, ptr %960, align 8, !tbaa !93
  %962 = fmul double %961, %961
  %963 = fadd double %958, %962
  %964 = add nuw nsw i64 %957, 1
  %965 = add i64 %959, 1
  %966 = icmp eq i64 %965, %547
  br i1 %966, label %967, label %956, !llvm.loop !203

967:                                              ; preds = %952, %956, %924
  %968 = phi double [ 0.000000e+00, %924 ], [ %953, %952 ], [ %963, %956 ]
  %969 = tail call double @sqrt(double noundef %968) #25
  br i1 %526, label %970, label %1012

970:                                              ; preds = %967
  br i1 %552, label %997, label %971

971:                                              ; preds = %970, %971
  %972 = phi i64 [ %994, %971 ], [ 0, %970 ]
  %973 = phi double [ %993, %971 ], [ 0.000000e+00, %970 ]
  %974 = phi i64 [ %995, %971 ], [ 0, %970 ]
  %975 = getelementptr inbounds double, ptr %90, i64 %972
  %976 = load double, ptr %975, align 8, !tbaa !93
  %977 = fmul double %976, %976
  %978 = fadd double %973, %977
  %979 = or i64 %972, 1
  %980 = getelementptr inbounds double, ptr %90, i64 %979
  %981 = load double, ptr %980, align 8, !tbaa !93
  %982 = fmul double %981, %981
  %983 = fadd double %978, %982
  %984 = or i64 %972, 2
  %985 = getelementptr inbounds double, ptr %90, i64 %984
  %986 = load double, ptr %985, align 8, !tbaa !93
  %987 = fmul double %986, %986
  %988 = fadd double %983, %987
  %989 = or i64 %972, 3
  %990 = getelementptr inbounds double, ptr %90, i64 %989
  %991 = load double, ptr %990, align 8, !tbaa !93
  %992 = fmul double %991, %991
  %993 = fadd double %988, %992
  %994 = add nuw nsw i64 %972, 4
  %995 = add i64 %974, 4
  %996 = icmp eq i64 %995, %553
  br i1 %996, label %997, label %971, !llvm.loop !165

997:                                              ; preds = %971, %970
  %998 = phi double [ undef, %970 ], [ %993, %971 ]
  %999 = phi i64 [ 0, %970 ], [ %994, %971 ]
  %1000 = phi double [ 0.000000e+00, %970 ], [ %993, %971 ]
  br i1 %554, label %1012, label %1001

1001:                                             ; preds = %997, %1001
  %1002 = phi i64 [ %1009, %1001 ], [ %999, %997 ]
  %1003 = phi double [ %1008, %1001 ], [ %1000, %997 ]
  %1004 = phi i64 [ %1010, %1001 ], [ 0, %997 ]
  %1005 = getelementptr inbounds double, ptr %90, i64 %1002
  %1006 = load double, ptr %1005, align 8, !tbaa !93
  %1007 = fmul double %1006, %1006
  %1008 = fadd double %1003, %1007
  %1009 = add nuw nsw i64 %1002, 1
  %1010 = add i64 %1004, 1
  %1011 = icmp eq i64 %1010, %551
  br i1 %1011, label %1012, label %1001, !llvm.loop !204

1012:                                             ; preds = %997, %1001, %967
  %1013 = phi double [ 0.000000e+00, %967 ], [ %998, %997 ], [ %1008, %1001 ]
  %1014 = tail call double @sqrt(double noundef %1013) #25
  %1015 = tail call double @llvm.fabs.f64(double %916)
  %1016 = fmul double %969, 1.000000e+02
  %1017 = fmul double %1016, %1014
  %1018 = fmul double %1017, 0x3CB0000000000000
  %1019 = fcmp ugt double %1015, %1018
  br i1 %1019, label %1058, label %1020

1020:                                             ; preds = %1012, %922
  %1021 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.111, i64 noundef 44)
          to label %1022 unwind label %1056

1022:                                             ; preds = %1020
  %1023 = load ptr, ptr @_ZSt4cerr, align 8, !tbaa !30
  %1024 = getelementptr i8, ptr %1023, i64 -24
  %1025 = load i64, ptr %1024, align 8
  %1026 = getelementptr inbounds i8, ptr @_ZSt4cerr, i64 %1025
  %1027 = getelementptr inbounds %"class.std::basic_ios", ptr %1026, i64 0, i32 5
  %1028 = load ptr, ptr %1027, align 8, !tbaa !32
  %1029 = icmp eq ptr %1028, null
  br i1 %1029, label %1030, label %1032

1030:                                             ; preds = %1022
  invoke void @_ZSt16__throw_bad_castv() #26
          to label %1031 unwind label %1056

1031:                                             ; preds = %1030
  unreachable

1032:                                             ; preds = %1022
  %1033 = getelementptr inbounds %"class.std::ctype", ptr %1028, i64 0, i32 8
  %1034 = load i8, ptr %1033, align 8, !tbaa !40
  %1035 = icmp eq i8 %1034, 0
  br i1 %1035, label %1039, label %1036

1036:                                             ; preds = %1032
  %1037 = getelementptr inbounds %"class.std::ctype", ptr %1028, i64 0, i32 9, i64 10
  %1038 = load i8, ptr %1037, align 1, !tbaa !20
  br label %1045

1039:                                             ; preds = %1032
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %1028)
          to label %1040 unwind label %1056

1040:                                             ; preds = %1039
  %1041 = load ptr, ptr %1028, align 8, !tbaa !30
  %1042 = getelementptr inbounds ptr, ptr %1041, i64 6
  %1043 = load ptr, ptr %1042, align 8
  %1044 = invoke noundef signext i8 %1043(ptr noundef nonnull align 8 dereferenceable(570) %1028, i8 noundef signext 10)
          to label %1045 unwind label %1056

1045:                                             ; preds = %1040, %1036
  %1046 = phi i8 [ %1038, %1036 ], [ %1044, %1040 ]
  %1047 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef signext %1046)
          to label %1048 unwind label %1056

1048:                                             ; preds = %1045
  %1049 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %1047)
          to label %1050 unwind label %1056

1050:                                             ; preds = %1048
  store double %710, ptr %7, align 8, !tbaa !93
  %1051 = getelementptr inbounds double, ptr %7, i64 1
  store double %920, ptr %1051, align 8, !tbaa !93
  %1052 = getelementptr inbounds double, ptr %7, i64 2
  store double %860, ptr %1052, align 8, !tbaa !93
  %1053 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %1193 unwind label %1056

1054:                                             ; preds = %753, %856, %858, %915, %1060, %1178
  %1055 = landingpad { ptr, i32 }
          cleanup
  br label %1208

1056:                                             ; preds = %1050, %1020, %1030, %1039, %1040, %1045, %1048
  %1057 = landingpad { ptr, i32 }
          cleanup
  br label %1208

1058:                                             ; preds = %1012
  %1059 = fmul double %916, 1.000000e-01
  br label %1060

1060:                                             ; preds = %1058, %918
  %1061 = phi double [ %1059, %1058 ], [ %563, %918 ]
  %1062 = fdiv double %707, %916
  %1063 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %1064 unwind label %1054

1064:                                             ; preds = %1060
  %1065 = load ptr, ptr %117, align 8, !tbaa !95
  %1066 = load ptr, ptr %116, align 8, !tbaa !91
  %1067 = ptrtoint ptr %1065 to i64
  %1068 = ptrtoint ptr %1066 to i64
  %1069 = sub i64 %1067, %1068
  %1070 = lshr exact i64 %1069, 3
  %1071 = trunc i64 %1070 to i32
  %1072 = icmp sgt i32 %1071, 0
  br i1 %1072, label %1073, label %1142

1073:                                             ; preds = %1064
  %1074 = and i64 %1070, 4294967295
  %1075 = icmp ult i64 %1074, 6
  br i1 %1075, label %1108, label %1076

1076:                                             ; preds = %1073
  %1077 = shl nuw nsw i64 %1074, 3
  %1078 = getelementptr i8, ptr %1066, i64 %1077
  %1079 = getelementptr i8, ptr %90, i64 %1077
  %1080 = icmp ult ptr %1066, %1079
  %1081 = icmp ult ptr %90, %1078
  %1082 = and i1 %1080, %1081
  br i1 %1082, label %1108, label %1083

1083:                                             ; preds = %1076
  %1084 = and i64 %1070, 3
  %1085 = sub nsw i64 %1074, %1084
  %1086 = insertelement <2 x double> poison, double %1062, i64 0
  %1087 = shufflevector <2 x double> %1086, <2 x double> poison, <2 x i32> zeroinitializer
  %1088 = insertelement <2 x double> poison, double %1062, i64 0
  %1089 = shufflevector <2 x double> %1088, <2 x double> poison, <2 x i32> zeroinitializer
  br label %1090

1090:                                             ; preds = %1090, %1083
  %1091 = phi i64 [ 0, %1083 ], [ %1104, %1090 ]
  %1092 = getelementptr inbounds double, ptr %1066, i64 %1091
  %1093 = load <2 x double>, ptr %1092, align 8, !tbaa !93, !alias.scope !205, !noalias !208
  %1094 = getelementptr inbounds double, ptr %1092, i64 2
  %1095 = load <2 x double>, ptr %1094, align 8, !tbaa !93, !alias.scope !205, !noalias !208
  %1096 = getelementptr inbounds double, ptr %90, i64 %1091
  %1097 = load <2 x double>, ptr %1096, align 8, !tbaa !93, !alias.scope !208
  %1098 = getelementptr inbounds double, ptr %1096, i64 2
  %1099 = load <2 x double>, ptr %1098, align 8, !tbaa !93, !alias.scope !208
  %1100 = fmul <2 x double> %1087, %1097
  %1101 = fmul <2 x double> %1089, %1099
  %1102 = fadd <2 x double> %1093, %1100
  %1103 = fadd <2 x double> %1095, %1101
  store <2 x double> %1102, ptr %1092, align 8, !tbaa !93, !alias.scope !205, !noalias !208
  store <2 x double> %1103, ptr %1094, align 8, !tbaa !93, !alias.scope !205, !noalias !208
  %1104 = add nuw i64 %1091, 4
  %1105 = icmp eq i64 %1104, %1085
  br i1 %1105, label %1106, label %1090, !llvm.loop !210

1106:                                             ; preds = %1090
  %1107 = icmp eq i64 %1084, 0
  br i1 %1107, label %1142, label %1108

1108:                                             ; preds = %1076, %1073, %1106
  %1109 = phi i64 [ 0, %1076 ], [ 0, %1073 ], [ %1085, %1106 ]
  %1110 = sub nsw i64 %1070, %1109
  %1111 = add nsw i64 %1109, 1
  %1112 = and i64 %1110, 1
  %1113 = icmp eq i64 %1112, 0
  br i1 %1113, label %1122, label %1114

1114:                                             ; preds = %1108
  %1115 = getelementptr inbounds double, ptr %1066, i64 %1109
  %1116 = load double, ptr %1115, align 8, !tbaa !93
  %1117 = getelementptr inbounds double, ptr %90, i64 %1109
  %1118 = load double, ptr %1117, align 8, !tbaa !93
  %1119 = fmul double %1062, %1118
  %1120 = fadd double %1116, %1119
  store double %1120, ptr %1115, align 8, !tbaa !93
  %1121 = add nuw nsw i64 %1109, 1
  br label %1122

1122:                                             ; preds = %1114, %1108
  %1123 = phi i64 [ %1109, %1108 ], [ %1121, %1114 ]
  %1124 = icmp eq i64 %1074, %1111
  br i1 %1124, label %1142, label %1125

1125:                                             ; preds = %1122, %1125
  %1126 = phi i64 [ %1140, %1125 ], [ %1123, %1122 ]
  %1127 = getelementptr inbounds double, ptr %1066, i64 %1126
  %1128 = load double, ptr %1127, align 8, !tbaa !93
  %1129 = getelementptr inbounds double, ptr %90, i64 %1126
  %1130 = load double, ptr %1129, align 8, !tbaa !93
  %1131 = fmul double %1062, %1130
  %1132 = fadd double %1128, %1131
  store double %1132, ptr %1127, align 8, !tbaa !93
  %1133 = add nuw nsw i64 %1126, 1
  %1134 = getelementptr inbounds double, ptr %1066, i64 %1133
  %1135 = load double, ptr %1134, align 8, !tbaa !93
  %1136 = getelementptr inbounds double, ptr %90, i64 %1133
  %1137 = load double, ptr %1136, align 8, !tbaa !93
  %1138 = fmul double %1062, %1137
  %1139 = fadd double %1135, %1138
  store double %1139, ptr %1134, align 8, !tbaa !93
  %1140 = add nuw nsw i64 %1126, 2
  %1141 = icmp eq i64 %1140, %1074
  br i1 %1141, label %1142, label %1125, !llvm.loop !211

1142:                                             ; preds = %1122, %1125, %1106, %1064
  br i1 %421, label %1143, label %1178

1143:                                             ; preds = %1142
  br i1 %555, label %1166, label %1144

1144:                                             ; preds = %1143
  %1145 = insertelement <2 x double> poison, double %1062, i64 0
  %1146 = shufflevector <2 x double> %1145, <2 x double> poison, <2 x i32> zeroinitializer
  %1147 = insertelement <2 x double> poison, double %1062, i64 0
  %1148 = shufflevector <2 x double> %1147, <2 x double> poison, <2 x i32> zeroinitializer
  br label %1149

1149:                                             ; preds = %1149, %1144
  %1150 = phi i64 [ 0, %1144 ], [ %1163, %1149 ]
  %1151 = getelementptr inbounds double, ptr %69, i64 %1150
  %1152 = load <2 x double>, ptr %1151, align 8, !tbaa !93
  %1153 = getelementptr inbounds double, ptr %1151, i64 2
  %1154 = load <2 x double>, ptr %1153, align 8, !tbaa !93
  %1155 = getelementptr inbounds double, ptr %104, i64 %1150
  %1156 = load <2 x double>, ptr %1155, align 8, !tbaa !93
  %1157 = getelementptr inbounds double, ptr %1155, i64 2
  %1158 = load <2 x double>, ptr %1157, align 8, !tbaa !93
  %1159 = fmul <2 x double> %1146, %1156
  %1160 = fmul <2 x double> %1148, %1158
  %1161 = fsub <2 x double> %1152, %1159
  %1162 = fsub <2 x double> %1154, %1160
  store <2 x double> %1161, ptr %1151, align 8, !tbaa !93
  store <2 x double> %1162, ptr %1153, align 8, !tbaa !93
  %1163 = add nuw i64 %1150, 4
  %1164 = icmp eq i64 %1163, %557
  br i1 %1164, label %1165, label %1149, !llvm.loop !212

1165:                                             ; preds = %1149
  br i1 %558, label %1178, label %1166

1166:                                             ; preds = %1143, %1165
  %1167 = phi i64 [ 0, %1143 ], [ %557, %1165 ]
  br label %1168

1168:                                             ; preds = %1166, %1168
  %1169 = phi i64 [ %1176, %1168 ], [ %1167, %1166 ]
  %1170 = getelementptr inbounds double, ptr %69, i64 %1169
  %1171 = load double, ptr %1170, align 8, !tbaa !93
  %1172 = getelementptr inbounds double, ptr %104, i64 %1169
  %1173 = load double, ptr %1172, align 8, !tbaa !93
  %1174 = fmul double %1062, %1173
  %1175 = fsub double %1171, %1174
  store double %1175, ptr %1170, align 8, !tbaa !93
  %1176 = add nuw nsw i64 %1169, 1
  %1177 = icmp eq i64 %1176, %513
  br i1 %1177, label %1178, label %1168, !llvm.loop !213

1178:                                             ; preds = %1168, %1165, %1142
  %1179 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %1180 unwind label %1054

1180:                                             ; preds = %1178
  %1181 = fsub double %1179, %1063
  %1182 = fadd double %710, %1181
  store i32 %562, ptr %5, align 4, !tbaa !5
  %1183 = add nuw i32 %562, 1
  %1184 = icmp eq i32 %562, %3
  br i1 %1184, label %1185, label %561, !llvm.loop !214

1185:                                             ; preds = %561, %1180, %510
  %1186 = phi double [ %313, %510 ], [ %860, %1180 ], [ %567, %561 ]
  %1187 = phi double [ %476, %510 ], [ %920, %1180 ], [ %565, %561 ]
  %1188 = phi double [ %413, %510 ], [ %1182, %1180 ], [ %564, %561 ]
  store double %1188, ptr %7, align 8, !tbaa !93
  %1189 = getelementptr inbounds double, ptr %7, i64 1
  store double %1187, ptr %1189, align 8, !tbaa !93
  %1190 = getelementptr inbounds double, ptr %7, i64 2
  store double %1186, ptr %1190, align 8, !tbaa !93
  %1191 = getelementptr inbounds double, ptr %7, i64 3
  store double 0.000000e+00, ptr %1191, align 8, !tbaa !93
  %1192 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %1193 unwind label %1206

1193:                                             ; preds = %1185, %1050
  %1194 = phi double [ %1053, %1050 ], [ %1192, %1185 ]
  %1195 = fsub double %1194, %9
  %1196 = getelementptr inbounds double, ptr %7, i64 4
  store double %1195, ptr %1196, align 8, !tbaa !93
  %1197 = icmp eq ptr %104, null
  br i1 %1197, label %1199, label %1198

1198:                                             ; preds = %1193
  tail call void @_ZdlPv(ptr noundef nonnull %104) #28
  br label %1199

1199:                                             ; preds = %1193, %1198
  %1200 = icmp eq ptr %90, null
  br i1 %1200, label %1202, label %1201

1201:                                             ; preds = %1199
  tail call void @_ZdlPv(ptr noundef nonnull %90) #28
  br label %1202

1202:                                             ; preds = %1199, %1201
  %1203 = icmp eq ptr %69, null
  br i1 %1203, label %1205, label %1204

1204:                                             ; preds = %1202
  tail call void @_ZdlPv(ptr noundef nonnull %69) #28
  br label %1205

1205:                                             ; preds = %1204, %1202, %35
  ret void

1206:                                             ; preds = %1185
  %1207 = landingpad { ptr, i32 }
          cleanup
  br label %1208

1208:                                             ; preds = %1054, %1056, %607, %609, %1206, %704, %559
  %1209 = phi { ptr, i32 } [ %560, %559 ], [ %1207, %1206 ], [ %705, %704 ], [ %608, %607 ], [ %610, %609 ], [ %1055, %1054 ], [ %1057, %1056 ]
  %1210 = icmp eq ptr %104, null
  br i1 %1210, label %1212, label %1211

1211:                                             ; preds = %1208
  tail call void @_ZdlPv(ptr noundef nonnull %104) #28
  br label %1212

1212:                                             ; preds = %1211, %1208, %113
  %1213 = phi { ptr, i32 } [ %114, %113 ], [ %1209, %1208 ], [ %1209, %1211 ]
  %1214 = icmp eq ptr %90, null
  br i1 %1214, label %1216, label %1215

1215:                                             ; preds = %1212
  tail call void @_ZdlPv(ptr noundef nonnull %90) #28
  br label %1216

1216:                                             ; preds = %1215, %1212, %111
  %1217 = phi { ptr, i32 } [ %112, %111 ], [ %1213, %1212 ], [ %1213, %1215 ]
  %1218 = icmp eq ptr %69, null
  br i1 %1218, label %1220, label %1219

1219:                                             ; preds = %1216
  tail call void @_ZdlPv(ptr noundef nonnull %69) #28
  br label %1220

1220:                                             ; preds = %1216, %1219
  resume { ptr, i32 } %1217
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef i32 @_ZN6miniFE15verify_solutionINS_6VectorIdiiEEEEiRKNS_23simple_mesh_descriptionINT_17GlobalOrdinalTypeEEERKS4_db(ptr noundef nonnull align 8 dereferenceable(192) %0, ptr noundef nonnull align 8 dereferenceable(32) %1, double noundef %2, i1 noundef zeroext %3) local_unnamed_addr #7 comdat personality ptr @__gxx_personality_v0 {
  %5 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 1
  %6 = load i32, ptr %5, align 4, !tbaa !5
  %7 = add nsw i32 %6, 1
  %8 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 3
  %9 = load i32, ptr %8, align 4, !tbaa !5
  %10 = add nsw i32 %9, 1
  %11 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 5
  %12 = load i32, ptr %11, align 4, !tbaa !5
  %13 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4
  %14 = load i32, ptr %13, align 8, !tbaa !5
  %15 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 1
  %16 = load i32, ptr %15, align 4, !tbaa !5
  %17 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 2
  %18 = load i32, ptr %17, align 8, !tbaa !5
  %19 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 3
  %20 = load i32, ptr %19, align 4, !tbaa !5
  %21 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 4
  %22 = load i32, ptr %21, align 8, !tbaa !5
  %23 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 4, i32 0, i64 5
  %24 = load i32, ptr %23, align 4, !tbaa !5
  %25 = icmp sgt i32 %16, %14
  %26 = icmp eq i32 %16, %6
  %27 = select i1 %25, i1 %26, i1 false
  %28 = zext i1 %27 to i32
  %29 = add i32 %16, %28
  %30 = icmp sgt i32 %20, %18
  %31 = icmp eq i32 %20, %9
  %32 = select i1 %30, i1 %31, i1 false
  %33 = zext i1 %32 to i32
  %34 = add i32 %20, %33
  %35 = icmp sgt i32 %24, %22
  %36 = icmp eq i32 %24, %12
  %37 = select i1 %35, i1 %36, i1 false
  %38 = zext i1 %37 to i32
  %39 = add nsw i32 %24, %38
  %40 = icmp slt i32 %22, %39
  br i1 %40, label %41, label %392

41:                                               ; preds = %4
  %42 = icmp slt i32 %18, %34
  %43 = tail call i32 @llvm.smax.i32(i32 %6, i32 1)
  %44 = tail call i32 @llvm.smax.i32(i32 %9, i32 1)
  %45 = tail call i32 @llvm.smax.i32(i32 %12, i32 1)
  %46 = mul nsw i32 %10, %7
  %47 = sitofp i32 %45 to double
  %48 = sitofp i32 %44 to double
  %49 = sitofp i32 %43 to double
  %50 = icmp slt i32 %14, %29
  %51 = select i1 %42, i1 %50, i1 false
  br i1 %51, label %52, label %392

52:                                               ; preds = %41, %268
  %53 = phi i32 [ %269, %268 ], [ %22, %41 ]
  %54 = phi i32 [ %262, %268 ], [ 0, %41 ]
  %55 = phi ptr [ %261, %268 ], [ null, %41 ]
  %56 = phi ptr [ %260, %268 ], [ null, %41 ]
  %57 = phi ptr [ %259, %268 ], [ null, %41 ]
  %58 = phi ptr [ %258, %268 ], [ null, %41 ]
  %59 = phi ptr [ %257, %268 ], [ null, %41 ]
  %60 = phi ptr [ %256, %268 ], [ null, %41 ]
  %61 = icmp sle i32 %53, %12
  %62 = mul i32 %53, %10
  br label %63

63:                                               ; preds = %265, %52
  %64 = phi i32 [ %18, %52 ], [ %266, %265 ]
  %65 = phi i32 [ %54, %52 ], [ %262, %265 ]
  %66 = phi ptr [ %55, %52 ], [ %261, %265 ]
  %67 = phi ptr [ %56, %52 ], [ %260, %265 ]
  %68 = phi ptr [ %57, %52 ], [ %259, %265 ]
  %69 = phi ptr [ %58, %52 ], [ %258, %265 ]
  %70 = phi ptr [ %59, %52 ], [ %257, %265 ]
  %71 = phi ptr [ %60, %52 ], [ %256, %265 ]
  %72 = or i32 %64, %53
  %73 = icmp sle i32 %64, %9
  %74 = add i32 %64, %62
  %75 = mul i32 %74, %7
  br label %76

76:                                               ; preds = %255, %63
  %77 = phi i32 [ %14, %63 ], [ %263, %255 ]
  %78 = phi i32 [ %65, %63 ], [ %262, %255 ]
  %79 = phi ptr [ %66, %63 ], [ %261, %255 ]
  %80 = phi ptr [ %67, %63 ], [ %260, %255 ]
  %81 = phi ptr [ %68, %63 ], [ %259, %255 ]
  %82 = phi ptr [ %69, %63 ], [ %258, %255 ]
  %83 = phi ptr [ %70, %63 ], [ %257, %255 ]
  %84 = phi ptr [ %71, %63 ], [ %256, %255 ]
  %85 = or i32 %72, %77
  %86 = icmp sgt i32 %85, -1
  br i1 %86, label %87, label %93

87:                                               ; preds = %76
  %88 = icmp sle i32 %77, %6
  %89 = and i1 %73, %88
  %90 = and i1 %61, %89
  %91 = add i32 %77, %75
  %92 = select i1 %90, i32 %91, i32 -1
  br label %93

93:                                               ; preds = %87, %76
  %94 = phi i32 [ -1, %76 ], [ %92, %87 ]
  %95 = sdiv i32 %94, %46
  %96 = sitofp i32 %95 to double
  %97 = fdiv double %96, %47
  %98 = srem i32 %94, %46
  %99 = sdiv i32 %98, %7
  %100 = sitofp i32 %99 to double
  %101 = fdiv double %100, %48
  %102 = srem i32 %94, %7
  %103 = sitofp i32 %102 to double
  %104 = fdiv double %103, %49
  br i1 %3, label %117, label %105

105:                                              ; preds = %93
  %106 = fadd double %104, -5.000000e-01
  %107 = tail call double @llvm.fabs.f64(double %106)
  %108 = fcmp olt double %107, 5.000000e-02
  br i1 %108, label %109, label %255

109:                                              ; preds = %105
  %110 = fadd double %101, -5.000000e-01
  %111 = tail call double @llvm.fabs.f64(double %110)
  %112 = fcmp olt double %111, 5.000000e-02
  br i1 %112, label %113, label %255

113:                                              ; preds = %109
  %114 = fadd double %97, -5.000000e-01
  %115 = tail call double @llvm.fabs.f64(double %114)
  %116 = fcmp olt double %115, 5.000000e-02
  br i1 %116, label %117, label %255

117:                                              ; preds = %113, %93
  %118 = icmp eq ptr %83, %82
  br i1 %118, label %120, label %119

119:                                              ; preds = %117
  store i32 %78, ptr %83, align 4, !tbaa !5
  br label %147

120:                                              ; preds = %117
  %121 = ptrtoint ptr %82 to i64
  %122 = ptrtoint ptr %84 to i64
  %123 = sub i64 %121, %122
  %124 = icmp eq i64 %123, 9223372036854775804
  br i1 %124, label %284, label %125

125:                                              ; preds = %120
  %126 = ashr exact i64 %123, 2
  %127 = tail call i64 @llvm.umax.i64(i64 %126, i64 1)
  %128 = add i64 %127, %126
  %129 = icmp ult i64 %128, %126
  %130 = icmp ugt i64 %128, 2305843009213693951
  %131 = or i1 %129, %130
  %132 = select i1 %131, i64 2305843009213693951, i64 %128
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %137, label %134

134:                                              ; preds = %125
  %135 = shl nuw nsw i64 %132, 2
  %136 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %135) #27
          to label %137 unwind label %271

137:                                              ; preds = %134, %125
  %138 = phi ptr [ null, %125 ], [ %136, %134 ]
  %139 = getelementptr inbounds i32, ptr %138, i64 %126
  store i32 %78, ptr %139, align 4, !tbaa !5
  %140 = icmp sgt i64 %123, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %137
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %138, ptr align 4 %84, i64 %123, i1 false)
  br label %142

142:                                              ; preds = %141, %137
  %143 = icmp eq ptr %84, null
  br i1 %143, label %145, label %144

144:                                              ; preds = %142
  tail call void @_ZdlPv(ptr noundef nonnull %84) #28
  br label %145

145:                                              ; preds = %144, %142
  %146 = getelementptr inbounds i32, ptr %138, i64 %132
  br label %147

147:                                              ; preds = %145, %119
  %148 = phi ptr [ %138, %145 ], [ %84, %119 ]
  %149 = phi ptr [ %139, %145 ], [ %83, %119 ]
  %150 = phi ptr [ %146, %145 ], [ %82, %119 ]
  %151 = getelementptr inbounds i32, ptr %149, i64 1
  %152 = icmp eq ptr %80, %79
  br i1 %152, label %154, label %153

153:                                              ; preds = %147
  store double %104, ptr %80, align 8, !tbaa !93
  br label %181

154:                                              ; preds = %147
  %155 = ptrtoint ptr %79 to i64
  %156 = ptrtoint ptr %81 to i64
  %157 = sub i64 %155, %156
  %158 = icmp eq i64 %157, 9223372036854775800
  br i1 %158, label %286, label %159

159:                                              ; preds = %154
  %160 = ashr exact i64 %157, 3
  %161 = tail call i64 @llvm.umax.i64(i64 %160, i64 1)
  %162 = add i64 %161, %160
  %163 = icmp ult i64 %162, %160
  %164 = icmp ugt i64 %162, 1152921504606846975
  %165 = or i1 %163, %164
  %166 = select i1 %165, i64 1152921504606846975, i64 %162
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %171, label %168

168:                                              ; preds = %159
  %169 = shl nuw nsw i64 %166, 3
  %170 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %169) #27
          to label %171 unwind label %271

171:                                              ; preds = %168, %159
  %172 = phi ptr [ null, %159 ], [ %170, %168 ]
  %173 = getelementptr inbounds double, ptr %172, i64 %160
  store double %104, ptr %173, align 8, !tbaa !93
  %174 = icmp sgt i64 %157, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %171
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %172, ptr align 8 %81, i64 %157, i1 false)
  br label %176

176:                                              ; preds = %175, %171
  %177 = icmp eq ptr %81, null
  br i1 %177, label %179, label %178

178:                                              ; preds = %176
  tail call void @_ZdlPv(ptr noundef nonnull %81) #28
  br label %179

179:                                              ; preds = %178, %176
  %180 = getelementptr inbounds double, ptr %172, i64 %166
  br label %181

181:                                              ; preds = %179, %153
  %182 = phi ptr [ %172, %179 ], [ %81, %153 ]
  %183 = phi ptr [ %173, %179 ], [ %80, %153 ]
  %184 = phi ptr [ %180, %179 ], [ %79, %153 ]
  %185 = getelementptr inbounds double, ptr %183, i64 1
  %186 = icmp eq ptr %185, %184
  br i1 %186, label %189, label %187

187:                                              ; preds = %181
  store double %101, ptr %185, align 8, !tbaa !93
  %188 = getelementptr inbounds double, ptr %183, i64 2
  br label %217

189:                                              ; preds = %181
  %190 = ptrtoint ptr %184 to i64
  %191 = ptrtoint ptr %182 to i64
  %192 = sub i64 %190, %191
  %193 = icmp eq i64 %192, 9223372036854775800
  br i1 %193, label %288, label %194

194:                                              ; preds = %189
  %195 = ashr exact i64 %192, 3
  %196 = tail call i64 @llvm.umax.i64(i64 %195, i64 1)
  %197 = add i64 %196, %195
  %198 = icmp ult i64 %197, %195
  %199 = icmp ugt i64 %197, 1152921504606846975
  %200 = or i1 %198, %199
  %201 = select i1 %200, i64 1152921504606846975, i64 %197
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %206, label %203

203:                                              ; preds = %194
  %204 = shl nuw nsw i64 %201, 3
  %205 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %204) #27
          to label %206 unwind label %271

206:                                              ; preds = %203, %194
  %207 = phi ptr [ null, %194 ], [ %205, %203 ]
  %208 = getelementptr inbounds double, ptr %207, i64 %195
  store double %101, ptr %208, align 8, !tbaa !93
  %209 = icmp sgt i64 %192, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %206
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %207, ptr align 8 %182, i64 %192, i1 false)
  br label %211

211:                                              ; preds = %210, %206
  %212 = getelementptr inbounds double, ptr %208, i64 1
  %213 = icmp eq ptr %182, null
  br i1 %213, label %215, label %214

214:                                              ; preds = %211
  tail call void @_ZdlPv(ptr noundef nonnull %182) #28
  br label %215

215:                                              ; preds = %214, %211
  %216 = getelementptr inbounds double, ptr %207, i64 %201
  br label %217

217:                                              ; preds = %215, %187
  %218 = phi ptr [ %207, %215 ], [ %182, %187 ]
  %219 = phi ptr [ %212, %215 ], [ %188, %187 ]
  %220 = phi ptr [ %216, %215 ], [ %184, %187 ]
  %221 = icmp eq ptr %219, %220
  br i1 %221, label %223, label %222

222:                                              ; preds = %217
  store double %97, ptr %219, align 8, !tbaa !93
  br label %250

223:                                              ; preds = %217
  %224 = ptrtoint ptr %219 to i64
  %225 = ptrtoint ptr %218 to i64
  %226 = sub i64 %224, %225
  %227 = icmp eq i64 %226, 9223372036854775800
  br i1 %227, label %290, label %228

228:                                              ; preds = %223
  %229 = ashr exact i64 %226, 3
  %230 = tail call i64 @llvm.umax.i64(i64 %229, i64 1)
  %231 = add i64 %230, %229
  %232 = icmp ult i64 %231, %229
  %233 = icmp ugt i64 %231, 1152921504606846975
  %234 = or i1 %232, %233
  %235 = select i1 %234, i64 1152921504606846975, i64 %231
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %240, label %237

237:                                              ; preds = %228
  %238 = shl nuw nsw i64 %235, 3
  %239 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %238) #27
          to label %240 unwind label %271

240:                                              ; preds = %237, %228
  %241 = phi ptr [ null, %228 ], [ %239, %237 ]
  %242 = getelementptr inbounds double, ptr %241, i64 %229
  store double %97, ptr %242, align 8, !tbaa !93
  %243 = icmp sgt i64 %226, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %240
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %241, ptr align 8 %218, i64 %226, i1 false)
  br label %245

245:                                              ; preds = %244, %240
  %246 = icmp eq ptr %218, null
  br i1 %246, label %248, label %247

247:                                              ; preds = %245
  tail call void @_ZdlPv(ptr noundef nonnull %218) #28
  br label %248

248:                                              ; preds = %247, %245
  %249 = getelementptr inbounds double, ptr %241, i64 %235
  br label %250

250:                                              ; preds = %248, %222
  %251 = phi ptr [ %241, %248 ], [ %218, %222 ]
  %252 = phi ptr [ %242, %248 ], [ %219, %222 ]
  %253 = phi ptr [ %249, %248 ], [ %220, %222 ]
  %254 = getelementptr inbounds double, ptr %252, i64 1
  br label %255

255:                                              ; preds = %250, %113, %109, %105
  %256 = phi ptr [ %148, %250 ], [ %84, %105 ], [ %84, %109 ], [ %84, %113 ]
  %257 = phi ptr [ %151, %250 ], [ %83, %105 ], [ %83, %109 ], [ %83, %113 ]
  %258 = phi ptr [ %150, %250 ], [ %82, %105 ], [ %82, %109 ], [ %82, %113 ]
  %259 = phi ptr [ %251, %250 ], [ %81, %105 ], [ %81, %109 ], [ %81, %113 ]
  %260 = phi ptr [ %254, %250 ], [ %80, %105 ], [ %80, %109 ], [ %80, %113 ]
  %261 = phi ptr [ %253, %250 ], [ %79, %105 ], [ %79, %109 ], [ %79, %113 ]
  %262 = add nsw i32 %78, 1
  %263 = add i32 %77, 1
  %264 = icmp eq i32 %263, %29
  br i1 %264, label %265, label %76, !llvm.loop !215

265:                                              ; preds = %255
  %266 = add i32 %64, 1
  %267 = icmp eq i32 %266, %34
  br i1 %267, label %268, label %63, !llvm.loop !216

268:                                              ; preds = %265
  %269 = add i32 %53, 1
  %270 = icmp eq i32 %269, %39
  br i1 %270, label %275, label %52, !llvm.loop !217

271:                                              ; preds = %237, %203, %168, %134
  %272 = phi ptr [ %84, %134 ], [ %148, %168 ], [ %148, %203 ], [ %148, %237 ]
  %273 = phi ptr [ %81, %134 ], [ %81, %168 ], [ %182, %203 ], [ %218, %237 ]
  %274 = landingpad { ptr, i32 }
          cleanup
  br label %551

275:                                              ; preds = %268
  %276 = icmp eq ptr %257, %256
  br i1 %276, label %392, label %277

277:                                              ; preds = %275
  %278 = ptrtoint ptr %257 to i64
  %279 = ptrtoint ptr %256 to i64
  %280 = sub i64 %278, %279
  %281 = ashr i64 %280, 2
  %282 = getelementptr inbounds %"struct.miniFE::Vector", ptr %1, i64 0, i32 2
  %283 = tail call i64 @llvm.umax.i64(i64 %281, i64 1)
  br label %298

284:                                              ; preds = %120
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.73) #26
          to label %285 unwind label %292

285:                                              ; preds = %284
  unreachable

286:                                              ; preds = %154
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.73) #26
          to label %287 unwind label %292

287:                                              ; preds = %286
  unreachable

288:                                              ; preds = %189
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.73) #26
          to label %289 unwind label %292

289:                                              ; preds = %288
  unreachable

290:                                              ; preds = %223
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.73) #26
          to label %291 unwind label %292

291:                                              ; preds = %290
  unreachable

292:                                              ; preds = %284, %286, %288, %290
  %293 = phi ptr [ %148, %290 ], [ %148, %288 ], [ %148, %286 ], [ %84, %284 ]
  %294 = phi ptr [ %218, %290 ], [ %182, %288 ], [ %81, %286 ], [ %81, %284 ]
  %295 = landingpad { ptr, i32 }
          cleanup
  br label %551

296:                                              ; preds = %383
  %297 = fcmp ord double %389, 0.000000e+00
  br i1 %297, label %392, label %539

298:                                              ; preds = %277, %383
  %299 = phi i64 [ 0, %277 ], [ %390, %383 ]
  %300 = phi double [ 0.000000e+00, %277 ], [ %389, %383 ]
  %301 = phi double [ undef, %277 ], [ %388, %383 ]
  %302 = phi double [ undef, %277 ], [ %387, %383 ]
  %303 = phi double [ undef, %277 ], [ %386, %383 ]
  %304 = phi double [ undef, %277 ], [ %385, %383 ]
  %305 = phi double [ undef, %277 ], [ %384, %383 ]
  %306 = getelementptr inbounds i32, ptr %256, i64 %299
  %307 = load i32, ptr %306, align 4, !tbaa !5
  %308 = sext i32 %307 to i64
  %309 = load ptr, ptr %282, align 8, !tbaa !91
  %310 = getelementptr inbounds double, ptr %309, i64 %308
  %311 = load double, ptr %310, align 8, !tbaa !93
  %312 = mul i64 %299, 3
  %313 = getelementptr inbounds double, ptr %259, i64 %312
  %314 = load double, ptr %313, align 8, !tbaa !93
  %315 = add i64 %312, 1
  %316 = getelementptr inbounds double, ptr %259, i64 %315
  %317 = load double, ptr %316, align 8, !tbaa !93
  %318 = add i64 %312, 2
  %319 = getelementptr inbounds double, ptr %259, i64 %318
  %320 = load double, ptr %319, align 8, !tbaa !93
  %321 = fcmp oeq double %314, 1.000000e+00
  br i1 %321, label %377, label %322

322:                                              ; preds = %298
  %323 = fcmp oeq double %314, 0.000000e+00
  %324 = fcmp oeq double %317, 0.000000e+00
  %325 = select i1 %323, i1 true, i1 %324
  %326 = fcmp oeq double %320, 0.000000e+00
  %327 = select i1 %325, i1 true, i1 %326
  br i1 %327, label %377, label %328

328:                                              ; preds = %322
  %329 = fcmp oeq double %317, 1.000000e+00
  %330 = fcmp oeq double %320, 1.000000e+00
  %331 = select i1 %329, i1 true, i1 %330
  br i1 %331, label %377, label %332

332:                                              ; preds = %328, %371
  %333 = phi double [ %372, %371 ], [ 0.000000e+00, %328 ]
  %334 = phi i32 [ %373, %371 ], [ 0, %328 ]
  %335 = shl nuw nsw i32 %334, 1
  %336 = or i32 %335, 1
  %337 = sitofp i32 %336 to double
  %338 = fmul double %337, 0x400921FB54442D18
  %339 = fmul double %317, %338
  %340 = tail call double @sin(double noundef %339) #25
  %341 = fdiv double %340, %337
  %342 = mul nsw i32 %336, %336
  %343 = sitofp i32 %342 to double
  %344 = fmul double %343, 0x4023BD3CC9BE45DE
  br label %349

345:                                              ; preds = %349
  %346 = add nuw nsw i32 %351, 1
  %347 = fadd double %350, %369
  %348 = icmp eq i32 %351, 300
  br i1 %348, label %371, label %349, !llvm.loop !218

349:                                              ; preds = %345, %332
  %350 = phi double [ %333, %332 ], [ %347, %345 ]
  %351 = phi i32 [ 0, %332 ], [ %346, %345 ]
  %352 = shl nuw nsw i32 %351, 1
  %353 = or i32 %352, 1
  %354 = sitofp i32 %353 to double
  %355 = fmul double %354, 0x400921FB54442D18
  %356 = fmul double %320, %355
  %357 = tail call double @sin(double noundef %356) #25
  %358 = fdiv double %357, %354
  %359 = mul nsw i32 %353, %353
  %360 = sitofp i32 %359 to double
  %361 = fmul double %360, 0x4023BD3CC9BE45DE
  %362 = fadd double %344, %361
  %363 = tail call double @sqrt(double noundef %362) #25
  %364 = fmul double %314, %363
  %365 = tail call double @sinh(double noundef %364) #25
  %366 = tail call double @sinh(double noundef %363) #25
  %367 = fmul double %341, %365
  %368 = fdiv double %358, %366
  %369 = fmul double %367, %368
  %370 = fcmp ord double %369, 0.000000e+00
  br i1 %370, label %345, label %371

371:                                              ; preds = %349, %345
  %372 = phi double [ %347, %345 ], [ %350, %349 ]
  %373 = add nuw nsw i32 %334, 1
  %374 = icmp eq i32 %334, 300
  br i1 %374, label %375, label %332, !llvm.loop !219

375:                                              ; preds = %371
  %376 = fmul double %372, 0x3FF9F02F6222C720
  br label %377

377:                                              ; preds = %328, %322, %298, %375
  %378 = phi double [ %376, %375 ], [ 1.000000e+00, %298 ], [ 0.000000e+00, %322 ], [ 0.000000e+00, %328 ]
  %379 = fsub double %378, %311
  %380 = tail call double @llvm.fabs.f64(double %379)
  %381 = fcmp ogt double %380, %300
  br i1 %381, label %382, label %383

382:                                              ; preds = %377
  br label %383

383:                                              ; preds = %382, %377
  %384 = phi double [ %320, %382 ], [ %305, %377 ]
  %385 = phi double [ %317, %382 ], [ %304, %377 ]
  %386 = phi double [ %314, %382 ], [ %303, %377 ]
  %387 = phi double [ %378, %382 ], [ %302, %377 ]
  %388 = phi double [ %311, %382 ], [ %301, %377 ]
  %389 = phi double [ %380, %382 ], [ %300, %377 ]
  %390 = add nuw i64 %299, 1
  %391 = icmp eq i64 %390, %283
  br i1 %391, label %296, label %298, !llvm.loop !220

392:                                              ; preds = %41, %4, %275, %296
  %393 = phi double [ %389, %296 ], [ 0.000000e+00, %275 ], [ 0.000000e+00, %4 ], [ 0.000000e+00, %41 ]
  %394 = phi double [ %388, %296 ], [ undef, %275 ], [ undef, %4 ], [ undef, %41 ]
  %395 = phi double [ %387, %296 ], [ undef, %275 ], [ undef, %4 ], [ undef, %41 ]
  %396 = phi double [ %386, %296 ], [ undef, %275 ], [ undef, %4 ], [ undef, %41 ]
  %397 = phi double [ %385, %296 ], [ undef, %275 ], [ undef, %4 ], [ undef, %41 ]
  %398 = phi double [ %384, %296 ], [ undef, %275 ], [ undef, %4 ], [ undef, %41 ]
  %399 = phi ptr [ %256, %296 ], [ %256, %275 ], [ null, %4 ], [ null, %41 ]
  %400 = phi ptr [ %259, %296 ], [ %259, %275 ], [ null, %4 ], [ null, %41 ]
  %401 = fcmp ogt double %393, %2
  br i1 %401, label %402, label %502

402:                                              ; preds = %392
  %403 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.112, i64 noundef 22)
          to label %404 unwind label %500

404:                                              ; preds = %402
  %405 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %393)
          to label %406 unwind label %500

406:                                              ; preds = %404
  %407 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %405, ptr noundef nonnull @.str.113, i64 noundef 1)
          to label %408 unwind label %500

408:                                              ; preds = %406
  %409 = load ptr, ptr %405, align 8, !tbaa !30
  %410 = getelementptr i8, ptr %409, i64 -24
  %411 = load i64, ptr %410, align 8
  %412 = getelementptr inbounds i8, ptr %405, i64 %411
  %413 = getelementptr inbounds %"class.std::basic_ios", ptr %412, i64 0, i32 5
  %414 = load ptr, ptr %413, align 8, !tbaa !32
  %415 = icmp eq ptr %414, null
  br i1 %415, label %516, label %416

416:                                              ; preds = %408
  %417 = getelementptr inbounds %"class.std::ctype", ptr %414, i64 0, i32 8
  %418 = load i8, ptr %417, align 8, !tbaa !40
  %419 = icmp eq i8 %418, 0
  br i1 %419, label %423, label %420

420:                                              ; preds = %416
  %421 = getelementptr inbounds %"class.std::ctype", ptr %414, i64 0, i32 9, i64 10
  %422 = load i8, ptr %421, align 1, !tbaa !20
  br label %429

423:                                              ; preds = %416
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %414)
          to label %424 unwind label %500

424:                                              ; preds = %423
  %425 = load ptr, ptr %414, align 8, !tbaa !30
  %426 = getelementptr inbounds ptr, ptr %425, i64 6
  %427 = load ptr, ptr %426, align 8
  %428 = invoke noundef signext i8 %427(ptr noundef nonnull align 8 dereferenceable(570) %414, i8 noundef signext 10)
          to label %429 unwind label %500

429:                                              ; preds = %424, %420
  %430 = phi i8 [ %422, %420 ], [ %428, %424 ]
  %431 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %405, i8 noundef signext %430)
          to label %432 unwind label %500

432:                                              ; preds = %429
  %433 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %431)
          to label %434 unwind label %500

434:                                              ; preds = %432
  %435 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.114, i64 noundef 16)
          to label %436 unwind label %500

436:                                              ; preds = %434
  %437 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %396)
          to label %438 unwind label %500

438:                                              ; preds = %436
  %439 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %437, ptr noundef nonnull @.str.115, i64 noundef 1)
          to label %440 unwind label %500

440:                                              ; preds = %438
  %441 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %437, double noundef %397)
          to label %442 unwind label %500

442:                                              ; preds = %440
  %443 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %441, ptr noundef nonnull @.str.115, i64 noundef 1)
          to label %444 unwind label %500

444:                                              ; preds = %442
  %445 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %441, double noundef %398)
          to label %446 unwind label %500

446:                                              ; preds = %444
  %447 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %445, ptr noundef nonnull @.str.116, i64 noundef 3)
          to label %448 unwind label %500

448:                                              ; preds = %446
  %449 = load ptr, ptr %445, align 8, !tbaa !30
  %450 = getelementptr i8, ptr %449, i64 -24
  %451 = load i64, ptr %450, align 8
  %452 = getelementptr inbounds i8, ptr %445, i64 %451
  %453 = getelementptr inbounds %"class.std::basic_ios", ptr %452, i64 0, i32 5
  %454 = load ptr, ptr %453, align 8, !tbaa !32
  %455 = icmp eq ptr %454, null
  br i1 %455, label %516, label %456

456:                                              ; preds = %448
  %457 = getelementptr inbounds %"class.std::ctype", ptr %454, i64 0, i32 8
  %458 = load i8, ptr %457, align 8, !tbaa !40
  %459 = icmp eq i8 %458, 0
  br i1 %459, label %463, label %460

460:                                              ; preds = %456
  %461 = getelementptr inbounds %"class.std::ctype", ptr %454, i64 0, i32 9, i64 10
  %462 = load i8, ptr %461, align 1, !tbaa !20
  br label %469

463:                                              ; preds = %456
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %454)
          to label %464 unwind label %500

464:                                              ; preds = %463
  %465 = load ptr, ptr %454, align 8, !tbaa !30
  %466 = getelementptr inbounds ptr, ptr %465, i64 6
  %467 = load ptr, ptr %466, align 8
  %468 = invoke noundef signext i8 %467(ptr noundef nonnull align 8 dereferenceable(570) %454, i8 noundef signext 10)
          to label %469 unwind label %500

469:                                              ; preds = %464, %460
  %470 = phi i8 [ %462, %460 ], [ %468, %464 ]
  %471 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %445, i8 noundef signext %470)
          to label %472 unwind label %500

472:                                              ; preds = %469
  %473 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %471)
          to label %474 unwind label %500

474:                                              ; preds = %472
  %475 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.117, i64 noundef 22)
          to label %476 unwind label %500

476:                                              ; preds = %474
  %477 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %394)
          to label %478 unwind label %500

478:                                              ; preds = %476
  %479 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %477, ptr noundef nonnull @.str.118, i64 noundef 22)
          to label %480 unwind label %500

480:                                              ; preds = %478
  %481 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %477, double noundef %395)
          to label %482 unwind label %500

482:                                              ; preds = %480
  %483 = load ptr, ptr %481, align 8, !tbaa !30
  %484 = getelementptr i8, ptr %483, i64 -24
  %485 = load i64, ptr %484, align 8
  %486 = getelementptr inbounds i8, ptr %481, i64 %485
  %487 = getelementptr inbounds %"class.std::basic_ios", ptr %486, i64 0, i32 5
  %488 = load ptr, ptr %487, align 8, !tbaa !32
  %489 = icmp eq ptr %488, null
  br i1 %489, label %516, label %490

490:                                              ; preds = %482
  %491 = getelementptr inbounds %"class.std::ctype", ptr %488, i64 0, i32 8
  %492 = load i8, ptr %491, align 8, !tbaa !40
  %493 = icmp eq i8 %492, 0
  br i1 %493, label %494, label %528

494:                                              ; preds = %490
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %488)
          to label %495 unwind label %500

495:                                              ; preds = %494
  %496 = load ptr, ptr %488, align 8, !tbaa !30
  %497 = getelementptr inbounds ptr, ptr %496, i64 6
  %498 = load ptr, ptr %497, align 8
  %499 = invoke noundef signext i8 %498(ptr noundef nonnull align 8 dereferenceable(570) %488, i8 noundef signext 10)
          to label %533 unwind label %500

500:                                              ; preds = %533, %516, %537, %523, %522, %495, %494, %472, %469, %464, %463, %432, %429, %424, %423, %506, %504, %502, %480, %478, %476, %474, %446, %444, %442, %440, %438, %436, %434, %406, %404, %402
  %501 = landingpad { ptr, i32 }
          cleanup
  br label %551

502:                                              ; preds = %392
  %503 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.119, i64 noundef 45)
          to label %504 unwind label %500

504:                                              ; preds = %502
  %505 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %2)
          to label %506 unwind label %500

506:                                              ; preds = %504
  %507 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %505, ptr noundef nonnull @.str.120, i64 noundef 11)
          to label %508 unwind label %500

508:                                              ; preds = %506
  %509 = load ptr, ptr %505, align 8, !tbaa !30
  %510 = getelementptr i8, ptr %509, i64 -24
  %511 = load i64, ptr %510, align 8
  %512 = getelementptr inbounds i8, ptr %505, i64 %511
  %513 = getelementptr inbounds %"class.std::basic_ios", ptr %512, i64 0, i32 5
  %514 = load ptr, ptr %513, align 8, !tbaa !32
  %515 = icmp eq ptr %514, null
  br i1 %515, label %516, label %518

516:                                              ; preds = %482, %448, %408, %508
  invoke void @_ZSt16__throw_bad_castv() #26
          to label %517 unwind label %500

517:                                              ; preds = %516
  unreachable

518:                                              ; preds = %508
  %519 = getelementptr inbounds %"class.std::ctype", ptr %514, i64 0, i32 8
  %520 = load i8, ptr %519, align 8, !tbaa !40
  %521 = icmp eq i8 %520, 0
  br i1 %521, label %522, label %528

522:                                              ; preds = %518
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %514)
          to label %523 unwind label %500

523:                                              ; preds = %522
  %524 = load ptr, ptr %514, align 8, !tbaa !30
  %525 = getelementptr inbounds ptr, ptr %524, i64 6
  %526 = load ptr, ptr %525, align 8
  %527 = invoke noundef signext i8 %526(ptr noundef nonnull align 8 dereferenceable(570) %514, i8 noundef signext 10)
          to label %533 unwind label %500

528:                                              ; preds = %518, %490
  %529 = phi ptr [ %488, %490 ], [ %514, %518 ]
  %530 = phi ptr [ %481, %490 ], [ %505, %518 ]
  %531 = getelementptr inbounds %"class.std::ctype", ptr %529, i64 0, i32 9, i64 10
  %532 = load i8, ptr %531, align 1, !tbaa !20
  br label %533

533:                                              ; preds = %528, %495, %523
  %534 = phi ptr [ %505, %523 ], [ %481, %495 ], [ %530, %528 ]
  %535 = phi i8 [ %527, %523 ], [ %499, %495 ], [ %532, %528 ]
  %536 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %534, i8 noundef signext %535)
          to label %537 unwind label %500

537:                                              ; preds = %533
  %538 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %536)
          to label %539 unwind label %500

539:                                              ; preds = %537, %296
  %540 = phi double [ %389, %296 ], [ %393, %537 ]
  %541 = phi ptr [ %256, %296 ], [ %399, %537 ]
  %542 = phi ptr [ %259, %296 ], [ %400, %537 ]
  %543 = icmp eq ptr %542, null
  br i1 %543, label %545, label %544

544:                                              ; preds = %539
  tail call void @_ZdlPv(ptr noundef nonnull %542) #28
  br label %545

545:                                              ; preds = %539, %544
  %546 = icmp eq ptr %541, null
  br i1 %546, label %548, label %547

547:                                              ; preds = %545
  tail call void @_ZdlPv(ptr noundef nonnull %541) #28
  br label %548

548:                                              ; preds = %545, %547
  %549 = fcmp ogt double %540, %2
  %550 = zext i1 %549 to i32
  ret i32 %550

551:                                              ; preds = %271, %292, %500
  %552 = phi ptr [ %399, %500 ], [ %272, %271 ], [ %293, %292 ]
  %553 = phi ptr [ %400, %500 ], [ %273, %271 ], [ %294, %292 ]
  %554 = phi { ptr, i32 } [ %501, %500 ], [ %274, %271 ], [ %295, %292 ]
  %555 = icmp eq ptr %553, null
  br i1 %555, label %557, label %556

556:                                              ; preds = %551
  tail call void @_ZdlPv(ptr noundef nonnull %553) #28
  br label %557

557:                                              ; preds = %551, %556
  %558 = icmp eq ptr %552, null
  br i1 %558, label %560, label %559

559:                                              ; preds = %557
  tail call void @_ZdlPv(ptr noundef nonnull %552) #28
  br label %560

560:                                              ; preds = %557, %559
  resume { ptr, i32 } %554
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN6miniFE9CSRMatrixIdiiED2Ev(ptr noundef nonnull align 8 dereferenceable(132) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 6
  %3 = load ptr, ptr %2, align 8, !tbaa !91
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #28
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 5
  %8 = load ptr, ptr %7, align 8, !tbaa !87
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #28
  br label %11

11:                                               ; preds = %6, %10
  %12 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 4
  %13 = load ptr, ptr %12, align 8, !tbaa !87
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %13) #28
  br label %16

16:                                               ; preds = %11, %15
  %17 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !87
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdlPv(ptr noundef nonnull %18) #28
  br label %21

21:                                               ; preds = %16, %20
  %22 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !87
  %24 = icmp eq ptr %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @_ZdlPv(ptr noundef nonnull %23) #28
  br label %26

26:                                               ; preds = %21, %25
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN6miniFE23simple_mesh_descriptionIiED2Ev(ptr noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #15 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !98
  invoke void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(ptr noundef nonnull align 8 dereferenceable(48) %2, ptr noundef %4)
          to label %8 unwind label %5

5:                                                ; preds = %1
  %6 = landingpad { ptr, i32 }
          catch ptr null
  %7 = extractvalue { ptr, i32 } %6, 0
  tail call void @__clang_call_terminate(ptr %7) #29
  unreachable

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !98
  invoke void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(ptr noundef nonnull align 8 dereferenceable(48) %9, ptr noundef %11)
          to label %15 unwind label %12

12:                                               ; preds = %8
  %13 = landingpad { ptr, i32 }
          catch ptr null
  %14 = extractvalue { ptr, i32 } %13, 0
  tail call void @__clang_call_terminate(ptr %14) #29
  unreachable

15:                                               ; preds = %8
  %16 = getelementptr inbounds i8, ptr %0, i64 16
  %17 = load ptr, ptr %16, align 8, !tbaa !98
  invoke void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %17)
          to label %21 unwind label %18

18:                                               ; preds = %15
  %19 = landingpad { ptr, i32 }
          catch ptr null
  %20 = extractvalue { ptr, i32 } %19, 0
  tail call void @__clang_call_terminate(ptr %20) #29
  unreachable

21:                                               ; preds = %15
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #16

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE20create_map_id_to_rowIiEEviiiRK3BoxRSt3mapIT_S5_St4lessIS5_ESaISt4pairIKS5_S5_EEE(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef nonnull align 4 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(48) %4) local_unnamed_addr #7 comdat personality ptr @__gxx_personality_v0 {
  %6 = alloca %"class.std::vector.16", align 8
  %7 = alloca %"struct.std::pair", align 8
  %8 = alloca %"struct.std::pair.31", align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  invoke void @_ZN6miniFE7get_idsIiEEviiiRK3BoxRSt6vectorIT_SaIS5_EEb(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef nonnull align 4 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %6, i1 noundef zeroext false)
          to label %9 unwind label %21

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %6, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !86
  %12 = load ptr, ptr %6, align 8, !tbaa !87
  %13 = icmp eq ptr %11, %12
  br i1 %13, label %25, label %14

14:                                               ; preds = %9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #25
  %15 = load i32, ptr %12, align 4, !tbaa !5
  %16 = zext i32 %15 to i64
  store i64 %16, ptr %7, align 8
  %17 = invoke { ptr, i8 } @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEE6insertIS2_IiiEEENSt9enable_ifIXsr16is_constructibleIS4_T_EE5valueES2_ISt17_Rb_tree_iteratorIS4_EbEE4typeEOSA_(ptr noundef nonnull align 8 dereferenceable(48) %4, ptr noundef nonnull align 4 dereferenceable(8) %7)
          to label %18 unwind label %23

18:                                               ; preds = %14
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #25
  %19 = load ptr, ptr %10, align 8, !tbaa !86
  %20 = load ptr, ptr %6, align 8, !tbaa !87
  br label %25

21:                                               ; preds = %5
  %22 = landingpad { ptr, i32 }
          cleanup
  br label %66

23:                                               ; preds = %14
  %24 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #25
  br label %66

25:                                               ; preds = %18, %9
  %26 = phi ptr [ %20, %18 ], [ %11, %9 ]
  %27 = phi ptr [ %19, %18 ], [ %11, %9 ]
  %28 = ptrtoint ptr %27 to i64
  %29 = ptrtoint ptr %26 to i64
  %30 = sub i64 %28, %29
  %31 = icmp ugt i64 %30, 4
  br i1 %31, label %32, label %63

32:                                               ; preds = %25
  %33 = getelementptr inbounds { i32, i64 }, ptr %8, i64 0, i32 1
  br label %34

34:                                               ; preds = %32, %52
  %35 = phi ptr [ %26, %32 ], [ %53, %52 ]
  %36 = phi ptr [ %27, %32 ], [ %54, %52 ]
  %37 = phi i64 [ 1, %32 ], [ %55, %52 ]
  %38 = getelementptr inbounds i32, ptr %35, i64 %37
  %39 = load i32, ptr %38, align 4, !tbaa !5
  %40 = add i64 %37, -1
  %41 = getelementptr inbounds i32, ptr %35, i64 %40
  %42 = load i32, ptr %41, align 4, !tbaa !5
  %43 = add nsw i32 %42, 1
  %44 = icmp eq i32 %39, %43
  br i1 %44, label %52, label %45

45:                                               ; preds = %34
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #25
  store i32 %39, ptr %8, align 8
  store i64 %37, ptr %33, align 8
  %46 = invoke { ptr, i8 } @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEE6insertIS2_IimEEENSt9enable_ifIXsr16is_constructibleIS4_T_EE5valueES2_ISt17_Rb_tree_iteratorIS4_EbEE4typeEOSA_(ptr noundef nonnull align 8 dereferenceable(48) %4, ptr noundef nonnull align 8 dereferenceable(16) %8)
          to label %47 unwind label %50

47:                                               ; preds = %45
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #25
  %48 = load ptr, ptr %10, align 8, !tbaa !86
  %49 = load ptr, ptr %6, align 8, !tbaa !87
  br label %52

50:                                               ; preds = %45
  %51 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #25
  br label %66

52:                                               ; preds = %34, %47
  %53 = phi ptr [ %35, %34 ], [ %49, %47 ]
  %54 = phi ptr [ %36, %34 ], [ %48, %47 ]
  %55 = add nuw i64 %37, 1
  %56 = ptrtoint ptr %54 to i64
  %57 = ptrtoint ptr %53 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 2
  %60 = icmp ult i64 %55, %59
  br i1 %60, label %34, label %63, !llvm.loop !221

61:                                               ; preds = %63
  call void @_ZdlPv(ptr noundef nonnull %64) #28
  br label %62

62:                                               ; preds = %63, %61
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  ret void

63:                                               ; preds = %52, %25
  %64 = phi ptr [ %26, %25 ], [ %53, %52 ]
  %65 = icmp eq ptr %64, null
  br i1 %65, label %62, label %61

66:                                               ; preds = %23, %50, %21
  %67 = phi { ptr, i32 } [ %22, %21 ], [ %51, %50 ], [ %24, %23 ]
  %68 = load ptr, ptr %6, align 8, !tbaa !87
  %69 = icmp eq ptr %68, null
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  call void @_ZdlPv(ptr noundef nonnull %68) #28
  br label %71

71:                                               ; preds = %66, %70
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  resume { ptr, i32 } %67
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !98
  invoke void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %3)
          to label %7 unwind label %4

4:                                                ; preds = %1
  %5 = landingpad { ptr, i32 }
          catch ptr null
  %6 = extractvalue { ptr, i32 } %5, 0
  tail call void @__clang_call_terminate(ptr %6) #29
  unreachable

7:                                                ; preds = %1
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt3setIiSt4lessIiESaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !98
  invoke void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %3)
          to label %7 unwind label %4

4:                                                ; preds = %1
  %5 = landingpad { ptr, i32 }
          catch ptr null
  %6 = extractvalue { ptr, i32 } %5, 0
  tail call void @__clang_call_terminate(ptr %6) #29
  unreachable

7:                                                ; preds = %1
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE7get_idsIiEEviiiRK3BoxRSt6vectorIT_SaIS5_EEb(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef nonnull align 4 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %4, i1 noundef zeroext %5) local_unnamed_addr #7 comdat personality ptr @__gxx_personality_v0 {
  %7 = load ptr, ptr %4, align 8, !tbaa !87
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %4, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !86
  %10 = icmp eq ptr %9, %7
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  store ptr %7, ptr %8, align 8, !tbaa !86
  br label %12

12:                                               ; preds = %6, %11
  %13 = getelementptr inbounds [6 x i32], ptr %3, i64 0, i64 4
  %14 = load i32, ptr %13, align 4, !tbaa !5
  %15 = getelementptr inbounds [6 x i32], ptr %3, i64 0, i64 5
  %16 = load i32, ptr %15, align 4, !tbaa !5
  %17 = getelementptr inbounds [6 x i32], ptr %3, i64 0, i64 2
  %18 = load i32, ptr %17, align 4, !tbaa !5
  %19 = getelementptr inbounds [6 x i32], ptr %3, i64 0, i64 3
  %20 = load i32, ptr %19, align 4, !tbaa !5
  %21 = load i32, ptr %3, align 4, !tbaa !5
  %22 = getelementptr inbounds i32, ptr %3, i64 1
  %23 = load i32, ptr %22, align 4, !tbaa !5
  br i1 %5, label %24, label %43

24:                                               ; preds = %12
  %25 = icmp sgt i32 %14, 0
  %26 = sext i1 %25 to i32
  %27 = add nsw i32 %14, %26
  %28 = icmp sgt i32 %18, 0
  %29 = sext i1 %28 to i32
  %30 = add nsw i32 %18, %29
  %31 = icmp sgt i32 %21, 0
  %32 = sext i1 %31 to i32
  %33 = add nsw i32 %21, %32
  %34 = icmp slt i32 %16, %2
  %35 = zext i1 %34 to i32
  %36 = add nsw i32 %16, %35
  %37 = icmp slt i32 %20, %1
  %38 = zext i1 %37 to i32
  %39 = add nsw i32 %20, %38
  %40 = icmp slt i32 %23, %0
  %41 = zext i1 %40 to i32
  %42 = add nsw i32 %23, %41
  br label %43

43:                                               ; preds = %24, %12
  %44 = phi i32 [ %16, %12 ], [ %36, %24 ]
  %45 = phi i32 [ %18, %12 ], [ %30, %24 ]
  %46 = phi i32 [ %20, %12 ], [ %39, %24 ]
  %47 = phi i32 [ %21, %12 ], [ %33, %24 ]
  %48 = phi i32 [ %23, %12 ], [ %42, %24 ]
  %49 = phi i32 [ %14, %12 ], [ %27, %24 ]
  %50 = sub nsw i32 %44, %49
  %51 = sub nsw i32 %46, %45
  %52 = sub nsw i32 %48, %47
  %53 = mul i32 %52, %51
  %54 = mul i32 %53, %50
  %55 = sext i32 %54 to i64
  %56 = icmp slt i32 %54, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %43
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.72) #26
  unreachable

58:                                               ; preds = %43
  %59 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %4, i64 0, i32 2
  %60 = load ptr, ptr %59, align 8, !tbaa !120
  %61 = ptrtoint ptr %60 to i64
  %62 = ptrtoint ptr %7 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 2
  %65 = icmp ult i64 %64, %55
  br i1 %65, label %66, label %73

66:                                               ; preds = %58
  %67 = shl nuw nsw i64 %55, 2
  %68 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %67) #27
  %69 = icmp eq ptr %7, null
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  tail call void @_ZdlPv(ptr noundef nonnull %7) #28
  br label %71

71:                                               ; preds = %70, %66
  store ptr %68, ptr %4, align 8, !tbaa !87
  store ptr %68, ptr %8, align 8, !tbaa !86
  %72 = getelementptr inbounds i32, ptr %68, i64 %55
  store ptr %72, ptr %59, align 8, !tbaa !120
  br label %73

73:                                               ; preds = %58, %71
  %74 = phi ptr [ %7, %58 ], [ %68, %71 ]
  %75 = phi ptr [ %60, %58 ], [ %72, %71 ]
  %76 = icmp sgt i32 %44, %49
  %77 = icmp sgt i32 %46, %45
  %78 = select i1 %76, i1 %77, i1 false
  %79 = icmp sgt i32 %48, %47
  %80 = select i1 %78, i1 %79, i1 false
  br i1 %80, label %81, label %155

81:                                               ; preds = %73, %152
  %82 = phi ptr [ %144, %152 ], [ %74, %73 ]
  %83 = phi ptr [ %145, %152 ], [ %75, %73 ]
  %84 = phi ptr [ %146, %152 ], [ %74, %73 ]
  %85 = phi i32 [ %153, %152 ], [ %49, %73 ]
  %86 = icmp slt i32 %85, %2
  %87 = mul i32 %85, %1
  br label %88

88:                                               ; preds = %149, %81
  %89 = phi ptr [ %82, %81 ], [ %144, %149 ]
  %90 = phi ptr [ %83, %81 ], [ %145, %149 ]
  %91 = phi ptr [ %84, %81 ], [ %146, %149 ]
  %92 = phi i32 [ %45, %81 ], [ %150, %149 ]
  %93 = or i32 %92, %85
  %94 = icmp slt i32 %92, %1
  %95 = add i32 %92, %87
  %96 = mul i32 %95, %0
  br label %97

97:                                               ; preds = %143, %88
  %98 = phi ptr [ %89, %88 ], [ %144, %143 ]
  %99 = phi ptr [ %90, %88 ], [ %145, %143 ]
  %100 = phi ptr [ %91, %88 ], [ %146, %143 ]
  %101 = phi i32 [ %47, %88 ], [ %147, %143 ]
  %102 = or i32 %93, %101
  %103 = icmp sgt i32 %102, -1
  br i1 %103, label %104, label %110

104:                                              ; preds = %97
  %105 = icmp slt i32 %101, %0
  %106 = and i1 %94, %105
  %107 = and i1 %86, %106
  %108 = add i32 %101, %96
  %109 = select i1 %107, i32 %108, i32 -1
  br label %110

110:                                              ; preds = %104, %97
  %111 = phi i32 [ -1, %97 ], [ %109, %104 ]
  %112 = icmp eq ptr %100, %99
  br i1 %112, label %115, label %113

113:                                              ; preds = %110
  store i32 %111, ptr %100, align 4, !tbaa !5
  %114 = getelementptr inbounds i32, ptr %100, i64 1
  store ptr %114, ptr %8, align 8, !tbaa !86
  br label %143

115:                                              ; preds = %110
  %116 = ptrtoint ptr %99 to i64
  %117 = ptrtoint ptr %98 to i64
  %118 = sub i64 %116, %117
  %119 = icmp eq i64 %118, 9223372036854775804
  br i1 %119, label %156, label %120

120:                                              ; preds = %115
  %121 = ashr exact i64 %118, 2
  %122 = tail call i64 @llvm.umax.i64(i64 %121, i64 1)
  %123 = add i64 %122, %121
  %124 = icmp ult i64 %123, %121
  %125 = icmp ugt i64 %123, 2305843009213693951
  %126 = or i1 %124, %125
  %127 = select i1 %126, i64 2305843009213693951, i64 %123
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %120
  %130 = shl nuw nsw i64 %127, 2
  %131 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %130) #27
  br label %132

132:                                              ; preds = %129, %120
  %133 = phi ptr [ %131, %129 ], [ null, %120 ]
  %134 = getelementptr inbounds i32, ptr %133, i64 %121
  store i32 %111, ptr %134, align 4, !tbaa !5
  %135 = icmp sgt i64 %118, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %132
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %133, ptr align 4 %98, i64 %118, i1 false)
  br label %137

137:                                              ; preds = %136, %132
  %138 = getelementptr inbounds i32, ptr %134, i64 1
  %139 = icmp eq ptr %98, null
  br i1 %139, label %141, label %140

140:                                              ; preds = %137
  tail call void @_ZdlPv(ptr noundef nonnull %98) #28
  br label %141

141:                                              ; preds = %140, %137
  store ptr %133, ptr %4, align 8, !tbaa !87
  store ptr %138, ptr %8, align 8, !tbaa !86
  %142 = getelementptr inbounds i32, ptr %133, i64 %127
  store ptr %142, ptr %59, align 8, !tbaa !120
  br label %143

143:                                              ; preds = %141, %113
  %144 = phi ptr [ %133, %141 ], [ %98, %113 ]
  %145 = phi ptr [ %142, %141 ], [ %99, %113 ]
  %146 = phi ptr [ %138, %141 ], [ %114, %113 ]
  %147 = add i32 %101, 1
  %148 = icmp eq i32 %147, %48
  br i1 %148, label %149, label %97, !llvm.loop !222

149:                                              ; preds = %143
  %150 = add i32 %92, 1
  %151 = icmp eq i32 %150, %46
  br i1 %151, label %152, label %88, !llvm.loop !223

152:                                              ; preds = %149
  %153 = add i32 %85, 1
  %154 = icmp eq i32 %153, %44
  br i1 %154, label %155, label %81, !llvm.loop !224

155:                                              ; preds = %152, %73
  ret void

156:                                              ; preds = %115
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.73) #26
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local { ptr, i8 } @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEE6insertIS2_IiiEEENSt9enable_ifIXsr16is_constructibleIS4_T_EE5valueES2_ISt17_Rb_tree_iteratorIS4_EbEE4typeEOSA_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 4 dereferenceable(8) %1) local_unnamed_addr #7 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = load ptr, ptr %3, align 8, !tbaa !98
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  %6 = icmp eq ptr %4, null
  %7 = load i32, ptr %1, align 4, !tbaa !5
  br i1 %6, label %26, label %8

8:                                                ; preds = %2, %8
  %9 = phi ptr [ %18, %8 ], [ %4, %2 ]
  %10 = phi ptr [ %16, %8 ], [ %5, %2 ]
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %9, i64 0, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !5
  %13 = icmp slt i32 %12, %7
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %9, i64 0, i32 3
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %9, i64 0, i32 2
  %16 = select i1 %13, ptr %10, ptr %9
  %17 = select i1 %13, ptr %14, ptr %15
  %18 = load ptr, ptr %17, align 8, !tbaa !106
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %8, !llvm.loop !225

20:                                               ; preds = %8
  %21 = icmp eq ptr %16, %5
  br i1 %21, label %26, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %16, i64 0, i32 1
  %24 = load i32, ptr %23, align 4, !tbaa !5
  %25 = icmp slt i32 %7, %24
  br i1 %25, label %26, label %55

26:                                               ; preds = %2, %20, %22
  %27 = phi ptr [ %5, %20 ], [ %16, %22 ], [ %5, %2 ]
  %28 = tail call noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #27
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %28, i64 0, i32 1
  store i32 %7, ptr %29, align 4, !tbaa !226
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %28, i64 0, i32 1, i32 0, i64 4
  %31 = getelementptr inbounds %"struct.std::pair", ptr %1, i64 0, i32 1
  %32 = load i32, ptr %31, align 4, !tbaa !5
  store i32 %32, ptr %30, align 4, !tbaa !228
  %33 = invoke { ptr, ptr } @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %27, ptr noundef nonnull align 4 dereferenceable(4) %29)
          to label %34 unwind label %52

34:                                               ; preds = %26
  %35 = extractvalue { ptr, ptr } %33, 0
  %36 = extractvalue { ptr, ptr } %33, 1
  %37 = icmp eq ptr %36, null
  br i1 %37, label %54, label %38

38:                                               ; preds = %34
  %39 = icmp ne ptr %35, null
  %40 = icmp eq ptr %5, %36
  %41 = select i1 %39, i1 true, i1 %40
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %36, i64 0, i32 1
  %44 = load i32, ptr %29, align 4, !tbaa !5
  %45 = load i32, ptr %43, align 4, !tbaa !5
  %46 = icmp slt i32 %44, %45
  br label %47

47:                                               ; preds = %42, %38
  %48 = phi i1 [ true, %38 ], [ %46, %42 ]
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %48, ptr noundef nonnull %28, ptr noundef nonnull %36, ptr noundef nonnull align 8 dereferenceable(32) %5) #25
  %49 = getelementptr inbounds i8, ptr %0, i64 40
  %50 = load i64, ptr %49, align 8, !tbaa !105
  %51 = add i64 %50, 1
  store i64 %51, ptr %49, align 8, !tbaa !105
  br label %55

52:                                               ; preds = %26
  %53 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %28) #28
  resume { ptr, i32 } %53

54:                                               ; preds = %34
  tail call void @_ZdlPv(ptr noundef nonnull %28) #28
  br label %55

55:                                               ; preds = %22, %54, %47
  %56 = phi ptr [ %28, %47 ], [ %35, %54 ], [ %16, %22 ]
  %57 = phi i8 [ 1, %47 ], [ 1, %54 ], [ 0, %22 ]
  %58 = insertvalue { ptr, i8 } poison, ptr %56, 0
  %59 = insertvalue { ptr, i8 } %58, i8 %57, 1
  ret { ptr, i8 } %59
}

; Function Attrs: uwtable
define linkonce_odr dso_local { ptr, i8 } @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEE6insertIS2_IimEEENSt9enable_ifIXsr16is_constructibleIS4_T_EE5valueES2_ISt17_Rb_tree_iteratorIS4_EbEE4typeEOSA_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(16) %1) local_unnamed_addr #7 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = load ptr, ptr %3, align 8, !tbaa !98
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  %6 = icmp eq ptr %4, null
  %7 = load i32, ptr %1, align 8, !tbaa !5
  br i1 %6, label %26, label %8

8:                                                ; preds = %2, %8
  %9 = phi ptr [ %18, %8 ], [ %4, %2 ]
  %10 = phi ptr [ %16, %8 ], [ %5, %2 ]
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %9, i64 0, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !5
  %13 = icmp slt i32 %12, %7
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %9, i64 0, i32 3
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %9, i64 0, i32 2
  %16 = select i1 %13, ptr %10, ptr %9
  %17 = select i1 %13, ptr %14, ptr %15
  %18 = load ptr, ptr %17, align 8, !tbaa !106
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %8, !llvm.loop !225

20:                                               ; preds = %8
  %21 = icmp eq ptr %16, %5
  br i1 %21, label %26, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %16, i64 0, i32 1
  %24 = load i32, ptr %23, align 4, !tbaa !5
  %25 = icmp slt i32 %7, %24
  br i1 %25, label %26, label %56

26:                                               ; preds = %2, %20, %22
  %27 = phi ptr [ %5, %20 ], [ %16, %22 ], [ %5, %2 ]
  %28 = tail call noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #27
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %28, i64 0, i32 1
  store i32 %7, ptr %29, align 4, !tbaa !226
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %28, i64 0, i32 1, i32 0, i64 4
  %31 = getelementptr inbounds %"struct.std::pair.31", ptr %1, i64 0, i32 1
  %32 = load i64, ptr %31, align 8, !tbaa !55
  %33 = trunc i64 %32 to i32
  store i32 %33, ptr %30, align 4, !tbaa !228
  %34 = invoke { ptr, ptr } @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %27, ptr noundef nonnull align 4 dereferenceable(4) %29)
          to label %35 unwind label %53

35:                                               ; preds = %26
  %36 = extractvalue { ptr, ptr } %34, 0
  %37 = extractvalue { ptr, ptr } %34, 1
  %38 = icmp eq ptr %37, null
  br i1 %38, label %55, label %39

39:                                               ; preds = %35
  %40 = icmp ne ptr %36, null
  %41 = icmp eq ptr %5, %37
  %42 = select i1 %40, i1 true, i1 %41
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %37, i64 0, i32 1
  %45 = load i32, ptr %29, align 4, !tbaa !5
  %46 = load i32, ptr %44, align 4, !tbaa !5
  %47 = icmp slt i32 %45, %46
  br label %48

48:                                               ; preds = %43, %39
  %49 = phi i1 [ true, %39 ], [ %47, %43 ]
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %49, ptr noundef nonnull %28, ptr noundef nonnull %37, ptr noundef nonnull align 8 dereferenceable(32) %5) #25
  %50 = getelementptr inbounds i8, ptr %0, i64 40
  %51 = load i64, ptr %50, align 8, !tbaa !105
  %52 = add i64 %51, 1
  store i64 %52, ptr %50, align 8, !tbaa !105
  br label %56

53:                                               ; preds = %26
  %54 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %28) #28
  resume { ptr, i32 } %54

55:                                               ; preds = %35
  tail call void @_ZdlPv(ptr noundef nonnull %28) #28
  br label %56

56:                                               ; preds = %22, %55, %48
  %57 = phi ptr [ %28, %48 ], [ %36, %55 ], [ %16, %22 ]
  %58 = phi i8 [ 1, %48 ], [ 1, %55 ], [ 0, %22 ]
  %59 = insertvalue { ptr, i8 } poison, ptr %57, 0
  %60 = insertvalue { ptr, i8 } %59, i8 %58, 1
  ret { ptr, i8 } %60
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #14

; Function Attrs: uwtable
define linkonce_odr dso_local { ptr, ptr } @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 4 dereferenceable(4) %2) local_unnamed_addr #7 comdat align 2 {
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = icmp eq ptr %4, %1
  br i1 %5, label %6, label %52

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, ptr %0, i64 40
  %8 = load i64, ptr %7, align 8, !tbaa !105
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds i8, ptr %0, i64 32
  %12 = load ptr, ptr %11, align 8, !tbaa !106
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %12, i64 0, i32 1
  %14 = load i32, ptr %13, align 4, !tbaa !5
  %15 = load i32, ptr %2, align 4, !tbaa !5
  %16 = icmp slt i32 %14, %15
  br i1 %16, label %149, label %17

17:                                               ; preds = %10, %6
  %18 = getelementptr inbounds i8, ptr %0, i64 16
  %19 = load ptr, ptr %18, align 8, !tbaa !106
  %20 = icmp eq ptr %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %17
  %22 = load i32, ptr %2, align 4, !tbaa !5
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi ptr [ %19, %21 ], [ %31, %23 ]
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %24, i64 0, i32 1
  %26 = load i32, ptr %25, align 4, !tbaa !5
  %27 = icmp slt i32 %22, %26
  %28 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %24, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %24, i64 0, i32 3
  %30 = select i1 %27, ptr %28, ptr %29
  %31 = load ptr, ptr %30, align 8, !tbaa !106
  %32 = icmp eq ptr %31, null
  br i1 %32, label %33, label %23, !llvm.loop !229

33:                                               ; preds = %23
  br i1 %27, label %34, label %44

34:                                               ; preds = %33, %17
  %35 = phi ptr [ %24, %33 ], [ %1, %17 ]
  %36 = getelementptr inbounds i8, ptr %0, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !103
  %38 = icmp eq ptr %35, %37
  br i1 %38, label %149, label %39

39:                                               ; preds = %34
  %40 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %35) #30
  %41 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %40, i64 0, i32 1
  %42 = load i32, ptr %41, align 4, !tbaa !5
  %43 = load i32, ptr %2, align 4, !tbaa !5
  br label %44

44:                                               ; preds = %39, %33
  %45 = phi i32 [ %43, %39 ], [ %22, %33 ]
  %46 = phi i32 [ %42, %39 ], [ %26, %33 ]
  %47 = phi ptr [ %35, %39 ], [ %24, %33 ]
  %48 = phi ptr [ %40, %39 ], [ %24, %33 ]
  %49 = icmp slt i32 %46, %45
  %50 = select i1 %49, ptr null, ptr %48
  %51 = select i1 %49, ptr %47, ptr null
  br label %149

52:                                               ; preds = %3
  %53 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1, i64 0, i32 1
  %54 = load i32, ptr %2, align 4, !tbaa !5
  %55 = load i32, ptr %53, align 4, !tbaa !5
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %57, label %101

57:                                               ; preds = %52
  %58 = getelementptr inbounds i8, ptr %0, i64 24
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = icmp eq ptr %59, %1
  br i1 %60, label %149, label %61

61:                                               ; preds = %57
  %62 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1) #30
  %63 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %62, i64 0, i32 1
  %64 = load i32, ptr %63, align 4, !tbaa !5
  %65 = icmp slt i32 %64, %54
  br i1 %65, label %66, label %72

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %62, i64 0, i32 3
  %68 = load ptr, ptr %67, align 8, !tbaa !230
  %69 = icmp eq ptr %68, null
  %70 = select i1 %69, ptr null, ptr %1
  %71 = select i1 %69, ptr %62, ptr %1
  br label %149

72:                                               ; preds = %61
  %73 = getelementptr inbounds i8, ptr %0, i64 16
  %74 = load ptr, ptr %73, align 8, !tbaa !106
  %75 = icmp eq ptr %74, null
  br i1 %75, label %87, label %76

76:                                               ; preds = %72, %76
  %77 = phi ptr [ %84, %76 ], [ %74, %72 ]
  %78 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %77, i64 0, i32 1
  %79 = load i32, ptr %78, align 4, !tbaa !5
  %80 = icmp slt i32 %54, %79
  %81 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %77, i64 0, i32 2
  %82 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %77, i64 0, i32 3
  %83 = select i1 %80, ptr %81, ptr %82
  %84 = load ptr, ptr %83, align 8, !tbaa !106
  %85 = icmp eq ptr %84, null
  br i1 %85, label %86, label %76, !llvm.loop !229

86:                                               ; preds = %76
  br i1 %80, label %87, label %94

87:                                               ; preds = %86, %72
  %88 = phi ptr [ %77, %86 ], [ %4, %72 ]
  %89 = icmp eq ptr %88, %59
  br i1 %89, label %149, label %90

90:                                               ; preds = %87
  %91 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %88) #30
  %92 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %91, i64 0, i32 1
  %93 = load i32, ptr %92, align 4, !tbaa !5
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i32 [ %93, %90 ], [ %79, %86 ]
  %96 = phi ptr [ %88, %90 ], [ %77, %86 ]
  %97 = phi ptr [ %91, %90 ], [ %77, %86 ]
  %98 = icmp slt i32 %95, %54
  %99 = select i1 %98, ptr null, ptr %97
  %100 = select i1 %98, ptr %96, ptr null
  br label %149

101:                                              ; preds = %52
  %102 = icmp slt i32 %55, %54
  br i1 %102, label %103, label %149

103:                                              ; preds = %101
  %104 = getelementptr inbounds i8, ptr %0, i64 32
  %105 = load ptr, ptr %104, align 8, !tbaa !106
  %106 = icmp eq ptr %105, %1
  br i1 %106, label %149, label %107

107:                                              ; preds = %103
  %108 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1) #30
  %109 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %108, i64 0, i32 1
  %110 = load i32, ptr %109, align 4, !tbaa !5
  %111 = icmp slt i32 %54, %110
  br i1 %111, label %112, label %118

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 3
  %114 = load ptr, ptr %113, align 8, !tbaa !230
  %115 = icmp eq ptr %114, null
  %116 = select i1 %115, ptr null, ptr %108
  %117 = select i1 %115, ptr %1, ptr %108
  br label %149

118:                                              ; preds = %107
  %119 = getelementptr inbounds i8, ptr %0, i64 16
  %120 = load ptr, ptr %119, align 8, !tbaa !106
  %121 = icmp eq ptr %120, null
  br i1 %121, label %133, label %122

122:                                              ; preds = %118, %122
  %123 = phi ptr [ %130, %122 ], [ %120, %118 ]
  %124 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %123, i64 0, i32 1
  %125 = load i32, ptr %124, align 4, !tbaa !5
  %126 = icmp slt i32 %54, %125
  %127 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %123, i64 0, i32 2
  %128 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %123, i64 0, i32 3
  %129 = select i1 %126, ptr %127, ptr %128
  %130 = load ptr, ptr %129, align 8, !tbaa !106
  %131 = icmp eq ptr %130, null
  br i1 %131, label %132, label %122, !llvm.loop !229

132:                                              ; preds = %122
  br i1 %126, label %133, label %142

133:                                              ; preds = %132, %118
  %134 = phi ptr [ %123, %132 ], [ %4, %118 ]
  %135 = getelementptr inbounds i8, ptr %0, i64 24
  %136 = load ptr, ptr %135, align 8, !tbaa !103
  %137 = icmp eq ptr %134, %136
  br i1 %137, label %149, label %138

138:                                              ; preds = %133
  %139 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %134) #30
  %140 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %139, i64 0, i32 1
  %141 = load i32, ptr %140, align 4, !tbaa !5
  br label %142

142:                                              ; preds = %138, %132
  %143 = phi i32 [ %141, %138 ], [ %125, %132 ]
  %144 = phi ptr [ %134, %138 ], [ %123, %132 ]
  %145 = phi ptr [ %139, %138 ], [ %123, %132 ]
  %146 = icmp slt i32 %143, %54
  %147 = select i1 %146, ptr null, ptr %145
  %148 = select i1 %146, ptr %144, ptr null
  br label %149

149:                                              ; preds = %103, %57, %10, %101, %112, %133, %142, %66, %87, %94, %44, %34
  %150 = phi ptr [ null, %34 ], [ %50, %44 ], [ %70, %66 ], [ null, %87 ], [ %99, %94 ], [ %116, %112 ], [ null, %133 ], [ %147, %142 ], [ %1, %101 ], [ null, %10 ], [ %1, %57 ], [ null, %103 ]
  %151 = phi ptr [ %35, %34 ], [ %51, %44 ], [ %71, %66 ], [ %59, %87 ], [ %100, %94 ], [ %117, %112 ], [ %134, %133 ], [ %148, %142 ], [ null, %101 ], [ %12, %10 ], [ %1, %57 ], [ %1, %103 ]
  %152 = insertvalue { ptr, ptr } poison, ptr %150, 0
  %153 = insertvalue { ptr, ptr } %152, ptr %151, 1
  ret { ptr, ptr } %153
}

declare void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef) local_unnamed_addr #17

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef) local_unnamed_addr #17

; Function Attrs: nounwind
declare void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext, ptr noundef, ptr noundef, ptr noundef nonnull align 8 dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: uwtable
define linkonce_odr dso_local noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %0, ptr noundef nonnull align 8 dereferenceable(48) %1) local_unnamed_addr #7 comdat {
  %3 = getelementptr inbounds i8, ptr %1, i64 16
  %4 = load ptr, ptr %3, align 8, !tbaa !98
  %5 = getelementptr inbounds i8, ptr %1, i64 8
  %6 = icmp eq ptr %4, null
  br i1 %6, label %25, label %7

7:                                                ; preds = %2, %7
  %8 = phi ptr [ %17, %7 ], [ %4, %2 ]
  %9 = phi ptr [ %15, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %8, i64 0, i32 1
  %11 = load i32, ptr %10, align 4, !tbaa !5
  %12 = icmp slt i32 %11, %0
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 2
  %15 = select i1 %12, ptr %9, ptr %8
  %16 = select i1 %12, ptr %13, ptr %14
  %17 = load ptr, ptr %16, align 8, !tbaa !106
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %7, !llvm.loop !231

19:                                               ; preds = %7
  %20 = icmp eq ptr %15, %5
  br i1 %20, label %25, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %15, i64 0, i32 1
  %23 = load i32, ptr %22, align 4, !tbaa !226
  %24 = icmp eq i32 %23, %0
  br i1 %24, label %62, label %25

25:                                               ; preds = %2, %19, %21
  %26 = phi ptr [ %5, %19 ], [ %15, %21 ], [ %5, %2 ]
  %27 = getelementptr inbounds i8, ptr %1, i64 40
  %28 = load i64, ptr %27, align 8, !tbaa !105
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %56

30:                                               ; preds = %25
  %31 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.74, i64 noundef 31)
  %32 = load ptr, ptr @_ZSt4cout, align 8, !tbaa !30
  %33 = getelementptr i8, ptr %32, i64 -24
  %34 = load i64, ptr %33, align 8
  %35 = getelementptr inbounds i8, ptr @_ZSt4cout, i64 %34
  %36 = getelementptr inbounds %"class.std::basic_ios", ptr %35, i64 0, i32 5
  %37 = load ptr, ptr %36, align 8, !tbaa !32
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %30
  tail call void @_ZSt16__throw_bad_castv() #26
  unreachable

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.std::ctype", ptr %37, i64 0, i32 8
  %42 = load i8, ptr %41, align 8, !tbaa !40
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::ctype", ptr %37, i64 0, i32 9, i64 10
  %46 = load i8, ptr %45, align 1, !tbaa !20
  br label %52

47:                                               ; preds = %40
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %37)
  %48 = load ptr, ptr %37, align 8, !tbaa !30
  %49 = getelementptr inbounds ptr, ptr %48, i64 6
  %50 = load ptr, ptr %49, align 8
  %51 = tail call noundef signext i8 %50(ptr noundef nonnull align 8 dereferenceable(570) %37, i8 noundef signext 10)
  br label %52

52:                                               ; preds = %44, %47
  %53 = phi i8 [ %46, %44 ], [ %51, %47 ]
  %54 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 noundef signext %53)
  %55 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %54)
  br label %136

56:                                               ; preds = %25
  %57 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base(ptr noundef %26) #30
  %58 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %57, i64 0, i32 1
  %59 = load i32, ptr %58, align 4, !tbaa !226
  %60 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %57, i64 0, i32 1
  %61 = icmp eq i32 %59, %0
  br i1 %61, label %62, label %66

62:                                               ; preds = %21, %56
  %63 = phi ptr [ %57, %56 ], [ %15, %21 ]
  %64 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %63, i64 0, i32 1, i32 0, i64 4
  %65 = load i32, ptr %64, align 4, !tbaa !228
  br label %136

66:                                               ; preds = %56
  %67 = getelementptr inbounds i8, ptr %1, i64 24
  %68 = load ptr, ptr %67, align 8, !tbaa !103
  %69 = icmp eq ptr %57, %68
  %70 = icmp sgt i32 %59, %0
  %71 = select i1 %69, i1 %70, i1 false
  br i1 %71, label %72, label %102

72:                                               ; preds = %66
  %73 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.75, i64 noundef 10)
  %74 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 noundef %0)
  %75 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %74, ptr noundef nonnull @.str.76, i64 noundef 23)
  %76 = load i32, ptr %60, align 4, !tbaa !226
  %77 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %74, i32 noundef %76)
  %78 = load ptr, ptr %77, align 8, !tbaa !30
  %79 = getelementptr i8, ptr %78, i64 -24
  %80 = load i64, ptr %79, align 8
  %81 = getelementptr inbounds i8, ptr %77, i64 %80
  %82 = getelementptr inbounds %"class.std::basic_ios", ptr %81, i64 0, i32 5
  %83 = load ptr, ptr %82, align 8, !tbaa !32
  %84 = icmp eq ptr %83, null
  br i1 %84, label %85, label %86

85:                                               ; preds = %72
  tail call void @_ZSt16__throw_bad_castv() #26
  unreachable

86:                                               ; preds = %72
  %87 = getelementptr inbounds %"class.std::ctype", ptr %83, i64 0, i32 8
  %88 = load i8, ptr %87, align 8, !tbaa !40
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::ctype", ptr %83, i64 0, i32 9, i64 10
  %92 = load i8, ptr %91, align 1, !tbaa !20
  br label %98

93:                                               ; preds = %86
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %83)
  %94 = load ptr, ptr %83, align 8, !tbaa !30
  %95 = getelementptr inbounds ptr, ptr %94, i64 6
  %96 = load ptr, ptr %95, align 8
  %97 = tail call noundef signext i8 %96(ptr noundef nonnull align 8 dereferenceable(570) %83, i8 noundef signext 10)
  br label %98

98:                                               ; preds = %90, %93
  %99 = phi i8 [ %92, %90 ], [ %97, %93 ]
  %100 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %77, i8 noundef signext %99)
  %101 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %100)
  br label %136

102:                                              ; preds = %66
  %103 = sub nsw i32 %0, %59
  %104 = icmp slt i32 %103, 0
  br i1 %104, label %105, label %132

105:                                              ; preds = %102
  %106 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.77, i64 noundef 49)
  %107 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 noundef %0)
  %108 = load ptr, ptr %107, align 8, !tbaa !30
  %109 = getelementptr i8, ptr %108, i64 -24
  %110 = load i64, ptr %109, align 8
  %111 = getelementptr inbounds i8, ptr %107, i64 %110
  %112 = getelementptr inbounds %"class.std::basic_ios", ptr %111, i64 0, i32 5
  %113 = load ptr, ptr %112, align 8, !tbaa !32
  %114 = icmp eq ptr %113, null
  br i1 %114, label %115, label %116

115:                                              ; preds = %105
  tail call void @_ZSt16__throw_bad_castv() #26
  unreachable

116:                                              ; preds = %105
  %117 = getelementptr inbounds %"class.std::ctype", ptr %113, i64 0, i32 8
  %118 = load i8, ptr %117, align 8, !tbaa !40
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.std::ctype", ptr %113, i64 0, i32 9, i64 10
  %122 = load i8, ptr %121, align 1, !tbaa !20
  br label %128

123:                                              ; preds = %116
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %113)
  %124 = load ptr, ptr %113, align 8, !tbaa !30
  %125 = getelementptr inbounds ptr, ptr %124, i64 6
  %126 = load ptr, ptr %125, align 8
  %127 = tail call noundef signext i8 %126(ptr noundef nonnull align 8 dereferenceable(570) %113, i8 noundef signext 10)
  br label %128

128:                                              ; preds = %120, %123
  %129 = phi i8 [ %122, %120 ], [ %127, %123 ]
  %130 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %107, i8 noundef signext %129)
  %131 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %130)
  br label %136

132:                                              ; preds = %102
  %133 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %57, i64 0, i32 1, i32 0, i64 4
  %134 = load i32, ptr %133, align 4, !tbaa !228
  %135 = add nsw i32 %134, %103
  br label %136

136:                                              ; preds = %128, %132, %98, %62, %52
  %137 = phi i32 [ %65, %62 ], [ -99, %98 ], [ -99, %52 ], [ -99, %128 ], [ %135, %132 ]
  ret i32 %137
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare noundef ptr @_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base(ptr noundef) local_unnamed_addr #17

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1) local_unnamed_addr #18 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2, %4
  %5 = phi ptr [ %9, %4 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !230
  tail call void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %7)
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !232
  tail call void @_ZdlPv(ptr noundef nonnull %5) #28
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %4, !llvm.loop !233

11:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1) local_unnamed_addr #18 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2, %4
  %5 = phi ptr [ %9, %4 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !230
  tail call void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %7)
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !232
  tail call void @_ZdlPv(ptr noundef nonnull %5) #28
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %4, !llvm.loop !234

11:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN6miniFE9CSRMatrixIdiiE13reserve_spaceEjj(ptr noundef nonnull align 8 dereferenceable(132) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 2
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !86
  %8 = load ptr, ptr %4, align 8, !tbaa !87
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 2
  %13 = icmp ult i64 %12, %5
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = sub nsw i64 %5, %12
  tail call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %4, i64 noundef %15)
  br label %22

16:                                               ; preds = %3
  %17 = icmp ugt i64 %12, %5
  br i1 %17, label %18, label %22

18:                                               ; preds = %16
  %19 = getelementptr inbounds i32, ptr %8, i64 %5
  %20 = icmp eq ptr %7, %19
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  store ptr %19, ptr %6, align 8, !tbaa !86
  br label %22

22:                                               ; preds = %14, %16, %18, %21
  %23 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 3
  %24 = add i32 %1, 1
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !86
  %28 = load ptr, ptr %23, align 8, !tbaa !87
  %29 = ptrtoint ptr %27 to i64
  %30 = ptrtoint ptr %28 to i64
  %31 = sub i64 %29, %30
  %32 = ashr exact i64 %31, 2
  %33 = icmp ult i64 %32, %25
  br i1 %33, label %34, label %36

34:                                               ; preds = %22
  %35 = sub nsw i64 %25, %32
  tail call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %23, i64 noundef %35)
  br label %42

36:                                               ; preds = %22
  %37 = icmp ugt i64 %32, %25
  br i1 %37, label %38, label %42

38:                                               ; preds = %36
  %39 = getelementptr inbounds i32, ptr %28, i64 %25
  %40 = icmp eq ptr %27, %39
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  store ptr %39, ptr %26, align 8, !tbaa !86
  br label %42

42:                                               ; preds = %34, %36, %38, %41
  %43 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 5
  %44 = mul i32 %2, %1
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %47 = load ptr, ptr %46, align 8, !tbaa !120
  %48 = load ptr, ptr %43, align 8, !tbaa !87
  %49 = ptrtoint ptr %47 to i64
  %50 = ptrtoint ptr %48 to i64
  %51 = sub i64 %49, %50
  %52 = ashr exact i64 %51, 2
  %53 = icmp ult i64 %52, %45
  br i1 %53, label %54, label %70

54:                                               ; preds = %42
  %55 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !86
  %57 = ptrtoint ptr %56 to i64
  %58 = sub i64 %57, %50
  %59 = ashr exact i64 %58, 2
  %60 = shl nuw nsw i64 %45, 2
  %61 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %60) #27
  %62 = icmp sgt i64 %58, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %54
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %61, ptr align 4 %48, i64 %58, i1 false)
  br label %64

64:                                               ; preds = %63, %54
  %65 = icmp eq ptr %48, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %64
  tail call void @_ZdlPv(ptr noundef nonnull %48) #28
  br label %67

67:                                               ; preds = %66, %64
  store ptr %61, ptr %43, align 8, !tbaa !87
  %68 = getelementptr inbounds i32, ptr %61, i64 %59
  store ptr %68, ptr %55, align 8, !tbaa !86
  %69 = getelementptr inbounds i32, ptr %61, i64 %45
  store ptr %69, ptr %46, align 8, !tbaa !120
  br label %70

70:                                               ; preds = %42, %67
  %71 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 6
  %72 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %73 = load ptr, ptr %72, align 8, !tbaa !92
  %74 = load ptr, ptr %71, align 8, !tbaa !91
  %75 = ptrtoint ptr %73 to i64
  %76 = ptrtoint ptr %74 to i64
  %77 = sub i64 %75, %76
  %78 = ashr exact i64 %77, 3
  %79 = icmp ult i64 %78, %45
  br i1 %79, label %80, label %96

80:                                               ; preds = %70
  %81 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %82 = load ptr, ptr %81, align 8, !tbaa !95
  %83 = ptrtoint ptr %82 to i64
  %84 = sub i64 %83, %76
  %85 = ashr exact i64 %84, 3
  %86 = shl nuw nsw i64 %45, 3
  %87 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %86) #27
  %88 = icmp sgt i64 %84, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %80
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %87, ptr align 8 %74, i64 %84, i1 false)
  br label %90

90:                                               ; preds = %89, %80
  %91 = icmp eq ptr %74, null
  br i1 %91, label %93, label %92

92:                                               ; preds = %90
  tail call void @_ZdlPv(ptr noundef nonnull %74) #28
  br label %93

93:                                               ; preds = %92, %90
  store ptr %87, ptr %71, align 8, !tbaa !91
  %94 = getelementptr inbounds double, ptr %87, i64 %85
  store ptr %94, ptr %81, align 8, !tbaa !95
  %95 = getelementptr inbounds double, ptr %87, i64 %45
  store ptr %95, ptr %72, align 8, !tbaa !92
  br label %96

96:                                               ; preds = %70, %93
  ret void
}

; Function Attrs: nofree nosync nounwind memory(none)
declare i32 @llvm.eh.typeid.for(ptr) #19

declare ptr @__cxa_allocate_exception(i64) local_unnamed_addr

declare void @_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef nonnull align 8 dereferenceable(32)) unnamed_addr #0

declare void @__cxa_free_exception(ptr) local_unnamed_addr

; Function Attrs: nounwind
declare void @_ZNSt13runtime_errorD1Ev(ptr noundef nonnull align 8 dereferenceable(16)) unnamed_addr #1

declare void @__cxa_throw(ptr, ptr, ptr) local_unnamed_addr

declare void @_ZNSt13runtime_errorC1EPKc(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef) unnamed_addr #0

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1) local_unnamed_addr #18 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %61, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !86
  %7 = load ptr, ptr %0, align 8, !tbaa !87
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = lshr exact i64 %10, 2
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !120
  %14 = ptrtoint ptr %13 to i64
  %15 = sub i64 %14, %8
  %16 = ashr exact i64 %15, 2
  %17 = icmp ult i64 %10, 9223372036854775805
  tail call void @llvm.assume(i1 %17)
  %18 = xor i64 %11, 2305843009213693951
  %19 = icmp ule i64 %16, %18
  tail call void @llvm.assume(i1 %19)
  %20 = icmp ult i64 %16, %1
  br i1 %20, label %30, label %21

21:                                               ; preds = %4
  store i32 0, ptr %6, align 4, !tbaa !5
  %22 = getelementptr i32, ptr %6, i64 1
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = shl i64 %1, 2
  %26 = add i64 %25, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %22, i8 0, i64 %26, i1 false), !tbaa !5
  %27 = getelementptr inbounds i32, ptr %6, i64 %1
  br label %28

28:                                               ; preds = %21, %24
  %29 = phi ptr [ %22, %21 ], [ %27, %24 ]
  store ptr %29, ptr %5, align 8, !tbaa !86
  br label %61

30:                                               ; preds = %4
  %31 = icmp ult i64 %18, %1
  br i1 %31, label %32, label %33

32:                                               ; preds = %30
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.83) #26
  unreachable

33:                                               ; preds = %30
  %34 = tail call i64 @llvm.umax.i64(i64 %11, i64 %1)
  %35 = add i64 %34, %11
  %36 = icmp ult i64 %35, %11
  %37 = icmp ugt i64 %35, 2305843009213693951
  %38 = or i1 %36, %37
  %39 = select i1 %38, i64 2305843009213693951, i64 %35
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %33
  %42 = shl nuw nsw i64 %39, 2
  %43 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %42) #27
  br label %44

44:                                               ; preds = %33, %41
  %45 = phi ptr [ %43, %41 ], [ null, %33 ]
  %46 = getelementptr inbounds i32, ptr %45, i64 %11
  store i32 0, ptr %46, align 4, !tbaa !5
  %47 = icmp eq i64 %1, 1
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = getelementptr i32, ptr %46, i64 1
  %50 = shl i64 %1, 2
  %51 = add i64 %50, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !5
  br label %52

52:                                               ; preds = %48, %44
  %53 = icmp eq ptr %6, %7
  br i1 %53, label %55, label %54

54:                                               ; preds = %52
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %45, ptr align 4 %7, i64 %10, i1 false)
  br label %55

55:                                               ; preds = %52, %54
  %56 = icmp eq ptr %7, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %55
  tail call void @_ZdlPv(ptr noundef nonnull %7) #28
  br label %58

58:                                               ; preds = %55, %57
  store ptr %45, ptr %0, align 8, !tbaa !87
  %59 = getelementptr inbounds i32, ptr %46, i64 %1
  store ptr %59, ptr %5, align 8, !tbaa !86
  %60 = getelementptr inbounds i32, ptr %45, i64 %39
  store ptr %60, ptr %12, align 8, !tbaa !120
  br label %61

61:                                               ; preds = %28, %58, %2
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN12MatrixInitOpIN6miniFE9CSRMatrixIdiiEEEC2ERKSt6vectorIiSaIiEES8_S8_iiiiRKNS0_23simple_mesh_descriptionIiEERS2_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7, ptr noundef nonnull align 8 dereferenceable(192) %8, ptr noundef nonnull align 8 dereferenceable(132) %9) unnamed_addr #7 comdat align 2 personality ptr @__gxx_personality_v0 {
  %11 = load ptr, ptr %1, align 8, !tbaa !87
  store ptr %11, ptr %0, align 8, !tbaa !235
  %12 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 1
  %13 = load ptr, ptr %2, align 8, !tbaa !87
  store ptr %13, ptr %12, align 8, !tbaa !236
  %14 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %3, align 8, !tbaa !87
  store ptr %15, ptr %14, align 8, !tbaa !237
  %16 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 3
  store i32 %4, ptr %16, align 8, !tbaa !238
  %17 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 4
  store i32 %5, ptr %17, align 4, !tbaa !239
  %18 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 5
  store i32 %6, ptr %18, align 8, !tbaa !240
  %19 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 6
  store i32 %7, ptr %19, align 4, !tbaa !241
  %20 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 7
  %21 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %9, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !87
  store ptr %22, ptr %20, align 8, !tbaa !242
  %23 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 8
  %24 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %9, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8, !tbaa !87
  store ptr %25, ptr %23, align 8, !tbaa !243
  %26 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 9
  %27 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %9, i64 0, i32 5
  %28 = load ptr, ptr %27, align 8, !tbaa !87
  store ptr %28, ptr %26, align 8, !tbaa !244
  %29 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 10
  %30 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %9, i64 0, i32 6
  %31 = load ptr, ptr %30, align 8, !tbaa !91
  store ptr %31, ptr %29, align 8, !tbaa !245
  %32 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 11
  %33 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !86
  %35 = ptrtoint ptr %34 to i64
  %36 = ptrtoint ptr %22 to i64
  %37 = sub i64 %35, %36
  %38 = lshr exact i64 %37, 2
  %39 = trunc i64 %38 to i32
  store i32 %39, ptr %32, align 8, !tbaa !124
  %40 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 13
  store ptr %8, ptr %40, align 8, !tbaa !246
  %41 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %9, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !120
  %43 = ptrtoint ptr %42 to i64
  %44 = ptrtoint ptr %28 to i64
  %45 = sub i64 %43, %44
  %46 = ashr exact i64 %45, 2
  %47 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %9, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %48 = load ptr, ptr %47, align 8, !tbaa !92
  %49 = ptrtoint ptr %48 to i64
  %50 = ptrtoint ptr %31 to i64
  %51 = sub i64 %49, %50
  %52 = ashr exact i64 %51, 3
  %53 = icmp eq i64 %46, %52
  br i1 %53, label %105, label %54

54:                                               ; preds = %10
  %55 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.84, i64 noundef 31)
  %56 = load ptr, ptr %41, align 8, !tbaa !120
  %57 = load ptr, ptr %27, align 8, !tbaa !87
  %58 = ptrtoint ptr %56 to i64
  %59 = ptrtoint ptr %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 2
  %62 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i64 noundef %61)
  %63 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %62, ptr noundef nonnull @.str.85, i64 noundef 5)
  %64 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %62, ptr noundef nonnull @.str.86, i64 noundef 23)
  %65 = load ptr, ptr %47, align 8, !tbaa !92
  %66 = load ptr, ptr %30, align 8, !tbaa !91
  %67 = ptrtoint ptr %65 to i64
  %68 = ptrtoint ptr %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %62, i64 noundef %70)
  %72 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %71, ptr noundef nonnull @.str.87, i64 noundef 1)
  %73 = load ptr, ptr %71, align 8, !tbaa !30
  %74 = getelementptr i8, ptr %73, i64 -24
  %75 = load i64, ptr %74, align 8
  %76 = getelementptr inbounds i8, ptr %71, i64 %75
  %77 = getelementptr inbounds %"class.std::basic_ios", ptr %76, i64 0, i32 5
  %78 = load ptr, ptr %77, align 8, !tbaa !32
  %79 = icmp eq ptr %78, null
  br i1 %79, label %80, label %81

80:                                               ; preds = %54
  tail call void @_ZSt16__throw_bad_castv() #26
  unreachable

81:                                               ; preds = %54
  %82 = getelementptr inbounds %"class.std::ctype", ptr %78, i64 0, i32 8
  %83 = load i8, ptr %82, align 8, !tbaa !40
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.std::ctype", ptr %78, i64 0, i32 9, i64 10
  %87 = load i8, ptr %86, align 1, !tbaa !20
  br label %93

88:                                               ; preds = %81
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %78)
  %89 = load ptr, ptr %78, align 8, !tbaa !30
  %90 = getelementptr inbounds ptr, ptr %89, i64 6
  %91 = load ptr, ptr %90, align 8
  %92 = tail call noundef signext i8 %91(ptr noundef nonnull align 8 dereferenceable(570) %78, i8 noundef signext 10)
  br label %93

93:                                               ; preds = %85, %88
  %94 = phi i8 [ %87, %85 ], [ %92, %88 ]
  %95 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %71, i8 noundef signext %94)
  %96 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %95)
  %97 = load i32, ptr %32, align 8, !tbaa !124
  %98 = load ptr, ptr %2, align 8, !tbaa !87
  %99 = load ptr, ptr %41, align 8, !tbaa !120
  %100 = load ptr, ptr %27, align 8, !tbaa !87
  %101 = ptrtoint ptr %99 to i64
  %102 = ptrtoint ptr %100 to i64
  %103 = sub i64 %101, %102
  %104 = ashr exact i64 %103, 2
  br label %105

105:                                              ; preds = %93, %10
  %106 = phi i64 [ %104, %93 ], [ %46, %10 ]
  %107 = phi i64 [ %102, %93 ], [ %44, %10 ]
  %108 = phi ptr [ %100, %93 ], [ %28, %10 ]
  %109 = phi ptr [ %98, %93 ], [ %13, %10 ]
  %110 = phi i32 [ %97, %93 ], [ %39, %10 ]
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i32, ptr %109, i64 %111
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = sext i32 %113 to i64
  %115 = icmp ult i64 %106, %114
  br i1 %115, label %116, label %154

116:                                              ; preds = %105
  %117 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.84, i64 noundef 31)
  %118 = load ptr, ptr %41, align 8, !tbaa !120
  %119 = load ptr, ptr %27, align 8, !tbaa !87
  %120 = ptrtoint ptr %118 to i64
  %121 = ptrtoint ptr %119 to i64
  %122 = sub i64 %120, %121
  %123 = ashr exact i64 %122, 2
  %124 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i64 noundef %123)
  %125 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %124, ptr noundef nonnull @.str.88, i64 noundef 10)
  %126 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %124, i64 noundef %114)
  %127 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %126, ptr noundef nonnull @.str.87, i64 noundef 1)
  %128 = load ptr, ptr %126, align 8, !tbaa !30
  %129 = getelementptr i8, ptr %128, i64 -24
  %130 = load i64, ptr %129, align 8
  %131 = getelementptr inbounds i8, ptr %126, i64 %130
  %132 = getelementptr inbounds %"class.std::basic_ios", ptr %131, i64 0, i32 5
  %133 = load ptr, ptr %132, align 8, !tbaa !32
  %134 = icmp eq ptr %133, null
  br i1 %134, label %135, label %136

135:                                              ; preds = %116
  tail call void @_ZSt16__throw_bad_castv() #26
  unreachable

136:                                              ; preds = %116
  %137 = getelementptr inbounds %"class.std::ctype", ptr %133, i64 0, i32 8
  %138 = load i8, ptr %137, align 8, !tbaa !40
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %143, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.std::ctype", ptr %133, i64 0, i32 9, i64 10
  %142 = load i8, ptr %141, align 1, !tbaa !20
  br label %148

143:                                              ; preds = %136
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %133)
  %144 = load ptr, ptr %133, align 8, !tbaa !30
  %145 = getelementptr inbounds ptr, ptr %144, i64 6
  %146 = load ptr, ptr %145, align 8
  %147 = tail call noundef signext i8 %146(ptr noundef nonnull align 8 dereferenceable(570) %133, i8 noundef signext 10)
  br label %148

148:                                              ; preds = %140, %143
  %149 = phi i8 [ %142, %140 ], [ %147, %143 ]
  %150 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %126, i8 noundef signext %149)
  %151 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %150)
  %152 = load ptr, ptr %27, align 8, !tbaa !87
  %153 = ptrtoint ptr %152 to i64
  br label %154

154:                                              ; preds = %148, %105
  %155 = phi i64 [ %153, %148 ], [ %107, %105 ]
  %156 = phi ptr [ %152, %148 ], [ %108, %105 ]
  %157 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %9, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %158 = load ptr, ptr %157, align 8, !tbaa !86
  %159 = ptrtoint ptr %158 to i64
  %160 = sub i64 %159, %155
  %161 = ashr exact i64 %160, 2
  %162 = icmp ult i64 %161, %114
  br i1 %162, label %163, label %165

163:                                              ; preds = %154
  %164 = sub nsw i64 %114, %161
  tail call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %27, i64 noundef %164)
  br label %171

165:                                              ; preds = %154
  %166 = icmp ugt i64 %161, %114
  br i1 %166, label %167, label %171

167:                                              ; preds = %165
  %168 = getelementptr inbounds i32, ptr %156, i64 %114
  %169 = icmp eq ptr %158, %168
  br i1 %169, label %171, label %170

170:                                              ; preds = %167
  store ptr %168, ptr %157, align 8, !tbaa !86
  br label %171

171:                                              ; preds = %163, %165, %167, %170
  %172 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %9, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %173 = load ptr, ptr %172, align 8, !tbaa !95
  %174 = load ptr, ptr %30, align 8, !tbaa !91
  %175 = ptrtoint ptr %173 to i64
  %176 = ptrtoint ptr %174 to i64
  %177 = sub i64 %175, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %178, %114
  br i1 %179, label %180, label %182

180:                                              ; preds = %171
  %181 = sub nsw i64 %114, %178
  tail call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %30, i64 noundef %181)
  br label %188

182:                                              ; preds = %171
  %183 = icmp ugt i64 %178, %114
  br i1 %183, label %184, label %188

184:                                              ; preds = %182
  %185 = getelementptr inbounds double, ptr %174, i64 %114
  %186 = icmp eq ptr %173, %185
  br i1 %186, label %188, label %187

187:                                              ; preds = %184
  store ptr %185, ptr %172, align 8, !tbaa !95
  br label %188

188:                                              ; preds = %180, %182, %184, %187
  %189 = load ptr, ptr %23, align 8, !tbaa !243
  %190 = load i32, ptr %32, align 8, !tbaa !124
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i32, ptr %189, i64 %191
  store i32 %113, ptr %192, align 4, !tbaa !5
  %193 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 12
  store i32 0, ptr %193, align 4, !tbaa !247
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN12MatrixInitOpIN6miniFE9CSRMatrixIdiiEEEclEi(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) local_unnamed_addr #20 comdat align 2 {
  %3 = load ptr, ptr %0, align 8, !tbaa !235
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds i32, ptr %3, i64 %4
  %6 = load i32, ptr %5, align 4, !tbaa !5
  %7 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 7
  %8 = load ptr, ptr %7, align 8, !tbaa !242
  %9 = getelementptr inbounds i32, ptr %8, i64 %4
  store i32 %6, ptr %9, align 4, !tbaa !5
  %10 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !236
  %12 = getelementptr inbounds i32, ptr %11, i64 %4
  %13 = load i32, ptr %12, align 4, !tbaa !5
  %14 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !243
  %16 = getelementptr inbounds i32, ptr %15, i64 %4
  store i32 %13, ptr %16, align 4, !tbaa !5
  %17 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !237
  %19 = mul nsw i32 %1, 3
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, ptr %18, i64 %20
  %22 = load i32, ptr %21, align 4, !tbaa !5
  %23 = add nsw i32 %19, 1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, ptr %18, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !5
  %27 = add nsw i32 %19, 2
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %18, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !5
  %31 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 3
  %32 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 4
  %33 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 5
  %34 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 6
  %35 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 13
  %36 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 12
  %37 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 9
  %38 = getelementptr inbounds %struct.MatrixInitOp, ptr %0, i64 0, i32 10
  br label %39

39:                                               ; preds = %2, %75
  %40 = phi i32 [ 0, %2 ], [ %168, %75 ]
  %41 = phi i32 [ -1, %2 ], [ %76, %75 ]
  %42 = add nsw i32 %41, %30
  br label %70

43:                                               ; preds = %75
  %44 = load ptr, ptr %37, align 8, !tbaa !244
  %45 = sext i32 %13 to i64
  %46 = getelementptr inbounds i32, ptr %44, i64 %45
  %47 = zext i32 %168 to i64
  br label %48

48:                                               ; preds = %52, %43
  %49 = phi i64 [ %53, %52 ], [ %47, %43 ]
  %50 = trunc i64 %49 to i32
  %51 = icmp sgt i32 %50, 1
  br i1 %51, label %52, label %69

52:                                               ; preds = %48
  %53 = add nsw i64 %49, -1
  %54 = getelementptr inbounds i32, ptr %46, i64 %53
  %55 = load i32, ptr %54, align 4, !tbaa !5
  %56 = add nsw i64 %49, 4294967294
  %57 = and i64 %56, 4294967295
  %58 = getelementptr inbounds i32, ptr %46, i64 %57
  %59 = load i32, ptr %58, align 4, !tbaa !5
  %60 = icmp slt i32 %55, %59
  br i1 %60, label %61, label %48, !llvm.loop !248

61:                                               ; preds = %52
  %62 = icmp eq i32 %168, 0
  br i1 %62, label %69, label %63

63:                                               ; preds = %61
  %64 = sext i32 %168 to i64
  %65 = getelementptr inbounds i32, ptr %46, i64 %64
  %66 = tail call i64 @llvm.ctlz.i64(i64 %64, i1 true), !range !249
  %67 = shl nuw nsw i64 %66, 1
  %68 = xor i64 %67, 126
  tail call void @_ZSt16__introsort_loopIPilN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_(ptr noundef nonnull %46, ptr noundef nonnull %65, i64 noundef %68)
  tail call void @_ZSt22__final_insertion_sortIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_(ptr noundef nonnull %46, ptr noundef nonnull %65)
  br label %69

69:                                               ; preds = %48, %61, %63
  ret void

70:                                               ; preds = %39, %78
  %71 = phi i32 [ %40, %39 ], [ %168, %78 ]
  %72 = phi i32 [ -1, %39 ], [ %79, %78 ]
  %73 = add nsw i32 %72, %26
  %74 = or i32 %73, %42
  br label %81

75:                                               ; preds = %78
  %76 = add nsw i32 %41, 1
  %77 = icmp eq i32 %76, 2
  br i1 %77, label %43, label %39, !llvm.loop !250

78:                                               ; preds = %167
  %79 = add nsw i32 %72, 1
  %80 = icmp eq i32 %79, 2
  br i1 %80, label %75, label %70, !llvm.loop !251

81:                                               ; preds = %70, %167
  %82 = phi i32 [ %71, %70 ], [ %168, %167 ]
  %83 = phi i32 [ -1, %70 ], [ %169, %167 ]
  %84 = load i32, ptr %31, align 8, !tbaa !238
  %85 = load i32, ptr %32, align 4, !tbaa !239
  %86 = add nsw i32 %83, %22
  %87 = or i32 %74, %86
  %88 = icmp sgt i32 %87, -1
  br i1 %88, label %89, label %167

89:                                               ; preds = %81
  %90 = load i32, ptr %33, align 8, !tbaa !240
  %91 = icmp slt i32 %86, %84
  %92 = icmp slt i32 %73, %85
  %93 = and i1 %91, %92
  %94 = icmp slt i32 %42, %90
  %95 = and i1 %93, %94
  br i1 %95, label %96, label %167

96:                                               ; preds = %89
  %97 = mul i32 %85, %42
  %98 = add i32 %97, %73
  %99 = mul i32 %98, %84
  %100 = add i32 %99, %86
  %101 = icmp sgt i32 %100, -1
  %102 = load i32, ptr %34, align 4
  %103 = icmp slt i32 %100, %102
  %104 = select i1 %101, i1 %103, i1 false
  br i1 %104, label %105, label %167

105:                                              ; preds = %96
  %106 = load ptr, ptr %35, align 8, !tbaa !246
  %107 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %106, i64 0, i32 2
  %108 = tail call noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %100, ptr noundef nonnull align 8 dereferenceable(48) %107)
  %109 = load i32, ptr %34, align 4, !tbaa !241
  %110 = icmp slt i32 %108, %109
  br i1 %110, label %159, label %111

111:                                              ; preds = %105
  %112 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.89, i64 noundef 33)
  %113 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 noundef %108)
  %114 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %113, ptr noundef nonnull @.str.90, i64 noundef 13)
  %115 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %113, i32 noundef %100)
  %116 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %115, ptr noundef nonnull @.str.91, i64 noundef 19)
  %117 = load i32, ptr %34, align 4, !tbaa !241
  %118 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %115, i32 noundef %117)
  %119 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %118, ptr noundef nonnull @.str.92, i64 noundef 17)
  %120 = load ptr, ptr %35, align 8, !tbaa !246
  %121 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %120, i64 0, i32 2, i32 0, i32 0, i32 1, i32 1
  %122 = load i64, ptr %121, align 8, !tbaa !105
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %129, label %124

124:                                              ; preds = %111
  %125 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %120, i64 0, i32 2, i32 0, i32 0, i32 1
  %126 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base(ptr noundef nonnull %125) #30
  %127 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %126, i64 0, i32 1, i32 0, i64 4
  %128 = load i32, ptr %127, align 4, !tbaa !228
  br label %129

129:                                              ; preds = %111, %124
  %130 = phi i32 [ %128, %124 ], [ 0, %111 ]
  %131 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %118, i32 noundef %130)
  %132 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %131, ptr noundef nonnull @.str.93, i64 noundef 7)
  %133 = load i32, ptr %36, align 4, !tbaa !247
  %134 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %131, i32 noundef %133)
  %135 = load ptr, ptr %134, align 8, !tbaa !30
  %136 = getelementptr i8, ptr %135, i64 -24
  %137 = load i64, ptr %136, align 8
  %138 = getelementptr inbounds i8, ptr %134, i64 %137
  %139 = getelementptr inbounds %"class.std::basic_ios", ptr %138, i64 0, i32 5
  %140 = load ptr, ptr %139, align 8, !tbaa !32
  %141 = icmp eq ptr %140, null
  br i1 %141, label %142, label %143

142:                                              ; preds = %129
  tail call void @_ZSt16__throw_bad_castv() #26
  unreachable

143:                                              ; preds = %129
  %144 = getelementptr inbounds %"class.std::ctype", ptr %140, i64 0, i32 8
  %145 = load i8, ptr %144, align 8, !tbaa !40
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %150, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.std::ctype", ptr %140, i64 0, i32 9, i64 10
  %149 = load i8, ptr %148, align 1, !tbaa !20
  br label %155

150:                                              ; preds = %143
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %140)
  %151 = load ptr, ptr %140, align 8, !tbaa !30
  %152 = getelementptr inbounds ptr, ptr %151, i64 6
  %153 = load ptr, ptr %152, align 8
  %154 = tail call noundef signext i8 %153(ptr noundef nonnull align 8 dereferenceable(570) %140, i8 noundef signext 10)
  br label %155

155:                                              ; preds = %147, %150
  %156 = phi i8 [ %149, %147 ], [ %154, %150 ]
  %157 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %134, i8 noundef signext %156)
  %158 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %157)
  br label %159

159:                                              ; preds = %155, %105
  %160 = load ptr, ptr %37, align 8, !tbaa !244
  %161 = add nsw i32 %82, %13
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i32, ptr %160, i64 %162
  store i32 %108, ptr %163, align 4, !tbaa !5
  %164 = load ptr, ptr %38, align 8, !tbaa !245
  %165 = getelementptr inbounds double, ptr %164, i64 %162
  store double 0.000000e+00, ptr %165, align 8, !tbaa !93
  %166 = add nsw i32 %82, 1
  br label %167

167:                                              ; preds = %89, %81, %159, %96
  %168 = phi i32 [ %166, %159 ], [ %82, %96 ], [ %82, %81 ], [ %82, %89 ]
  %169 = add nsw i32 %83, 1
  %170 = icmp eq i32 %169, 2
  br i1 %170, label %78, label %81, !llvm.loop !252
}

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8), i64 noundef) local_unnamed_addr #0

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1) local_unnamed_addr #18 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %61, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !95
  %7 = load ptr, ptr %0, align 8, !tbaa !91
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = lshr exact i64 %10, 3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !92
  %14 = ptrtoint ptr %13 to i64
  %15 = sub i64 %14, %8
  %16 = ashr exact i64 %15, 3
  %17 = icmp ult i64 %10, 9223372036854775801
  tail call void @llvm.assume(i1 %17)
  %18 = xor i64 %11, 1152921504606846975
  %19 = icmp ule i64 %16, %18
  tail call void @llvm.assume(i1 %19)
  %20 = icmp ult i64 %16, %1
  br i1 %20, label %30, label %21

21:                                               ; preds = %4
  store double 0.000000e+00, ptr %6, align 8, !tbaa !93
  %22 = getelementptr double, ptr %6, i64 1
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = shl i64 %1, 3
  %26 = add i64 %25, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %22, i8 0, i64 %26, i1 false), !tbaa !93
  %27 = getelementptr inbounds double, ptr %6, i64 %1
  br label %28

28:                                               ; preds = %21, %24
  %29 = phi ptr [ %22, %21 ], [ %27, %24 ]
  store ptr %29, ptr %5, align 8, !tbaa !95
  br label %61

30:                                               ; preds = %4
  %31 = icmp ult i64 %18, %1
  br i1 %31, label %32, label %33

32:                                               ; preds = %30
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.83) #26
  unreachable

33:                                               ; preds = %30
  %34 = tail call i64 @llvm.umax.i64(i64 %11, i64 %1)
  %35 = add i64 %34, %11
  %36 = icmp ult i64 %35, %11
  %37 = icmp ugt i64 %35, 1152921504606846975
  %38 = or i1 %36, %37
  %39 = select i1 %38, i64 1152921504606846975, i64 %35
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %33
  %42 = shl nuw nsw i64 %39, 3
  %43 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %42) #27
  br label %44

44:                                               ; preds = %33, %41
  %45 = phi ptr [ %43, %41 ], [ null, %33 ]
  %46 = getelementptr inbounds double, ptr %45, i64 %11
  store double 0.000000e+00, ptr %46, align 8, !tbaa !93
  %47 = icmp eq i64 %1, 1
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = getelementptr double, ptr %46, i64 1
  %50 = shl i64 %1, 3
  %51 = add i64 %50, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !93
  br label %52

52:                                               ; preds = %48, %44
  %53 = icmp eq ptr %6, %7
  br i1 %53, label %55, label %54

54:                                               ; preds = %52
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %45, ptr align 8 %7, i64 %10, i1 false)
  br label %55

55:                                               ; preds = %52, %54
  %56 = icmp eq ptr %7, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %55
  tail call void @_ZdlPv(ptr noundef nonnull %7) #28
  br label %58

58:                                               ; preds = %55, %57
  store ptr %45, ptr %0, align 8, !tbaa !91
  %59 = getelementptr inbounds double, ptr %46, i64 %1
  store ptr %59, ptr %5, align 8, !tbaa !95
  %60 = getelementptr inbounds double, ptr %45, i64 %39
  store ptr %60, ptr %12, align 8, !tbaa !92
  br label %61

61:                                               ; preds = %28, %58, %2
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt16__introsort_loopIPilN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_(ptr noundef %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #7 comdat {
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %5 = ptrtoint ptr %0 to i64
  %6 = ptrtoint ptr %1 to i64
  %7 = sub i64 %6, %5
  %8 = icmp sgt i64 %7, 64
  br i1 %8, label %9, label %123

9:                                                ; preds = %3
  %10 = getelementptr inbounds i32, ptr %0, i64 1
  br label %11

11:                                               ; preds = %9, %119
  %12 = phi i64 [ %7, %9 ], [ %121, %119 ]
  %13 = phi ptr [ %1, %9 ], [ %107, %119 ]
  %14 = phi i64 [ %2, %9 ], [ %75, %119 ]
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %74

16:                                               ; preds = %11
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4)
  call void @_ZSt11__make_heapIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_(ptr noundef %0, ptr noundef %13, ptr noundef nonnull align 1 dereferenceable(1) %4)
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  br label %17

17:                                               ; preds = %16, %70
  %18 = phi ptr [ %19, %70 ], [ %13, %16 ]
  %19 = getelementptr inbounds i32, ptr %18, i64 -1
  %20 = load i32, ptr %19, align 4, !tbaa !5
  %21 = load i32, ptr %0, align 4, !tbaa !5
  store i32 %21, ptr %19, align 4, !tbaa !5
  %22 = ptrtoint ptr %19 to i64
  %23 = sub i64 %22, %5
  %24 = ashr exact i64 %23, 2
  %25 = add nsw i64 %24, -1
  %26 = sdiv i64 %25, 2
  %27 = icmp sgt i64 %23, 8
  br i1 %27, label %28, label %43

28:                                               ; preds = %17, %28
  %29 = phi i64 [ %38, %28 ], [ 0, %17 ]
  %30 = shl i64 %29, 1
  %31 = add i64 %30, 2
  %32 = getelementptr inbounds i32, ptr %0, i64 %31
  %33 = or i64 %30, 1
  %34 = getelementptr inbounds i32, ptr %0, i64 %33
  %35 = load i32, ptr %32, align 4, !tbaa !5
  %36 = load i32, ptr %34, align 4, !tbaa !5
  %37 = icmp slt i32 %35, %36
  %38 = select i1 %37, i64 %33, i64 %31
  %39 = getelementptr inbounds i32, ptr %0, i64 %38
  %40 = load i32, ptr %39, align 4, !tbaa !5
  %41 = getelementptr inbounds i32, ptr %0, i64 %29
  store i32 %40, ptr %41, align 4, !tbaa !5
  %42 = icmp slt i64 %38, %26
  br i1 %42, label %28, label %43, !llvm.loop !253

43:                                               ; preds = %28, %17
  %44 = phi i64 [ 0, %17 ], [ %38, %28 ]
  %45 = and i64 %23, 4
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %43
  %48 = add nsw i64 %24, -2
  %49 = sdiv i64 %48, 2
  %50 = icmp eq i64 %44, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = shl i64 %44, 1
  %53 = or i64 %52, 1
  %54 = getelementptr inbounds i32, ptr %0, i64 %53
  %55 = load i32, ptr %54, align 4, !tbaa !5
  %56 = getelementptr inbounds i32, ptr %0, i64 %44
  store i32 %55, ptr %56, align 4, !tbaa !5
  br label %57

57:                                               ; preds = %51, %47, %43
  %58 = phi i64 [ %53, %51 ], [ %44, %47 ], [ %44, %43 ]
  %59 = icmp sgt i64 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %57, %67
  %61 = phi i64 [ %63, %67 ], [ %58, %57 ]
  %62 = add nsw i64 %61, -1
  %63 = sdiv i64 %62, 2
  %64 = getelementptr inbounds i32, ptr %0, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !5
  %66 = icmp slt i32 %65, %20
  br i1 %66, label %67, label %70

67:                                               ; preds = %60
  %68 = getelementptr inbounds i32, ptr %0, i64 %61
  store i32 %65, ptr %68, align 4, !tbaa !5
  %69 = icmp sgt i64 %61, 2
  br i1 %69, label %60, label %70, !llvm.loop !254

70:                                               ; preds = %67, %60, %57
  %71 = phi i64 [ %58, %57 ], [ %61, %60 ], [ %63, %67 ]
  %72 = getelementptr inbounds i32, ptr %0, i64 %71
  store i32 %20, ptr %72, align 4, !tbaa !5
  %73 = icmp sgt i64 %23, 4
  br i1 %73, label %17, label %123, !llvm.loop !255

74:                                               ; preds = %11
  %75 = add nsw i64 %14, -1
  %76 = lshr i64 %12, 3
  %77 = getelementptr inbounds i32, ptr %0, i64 %76
  %78 = getelementptr inbounds i32, ptr %13, i64 -1
  %79 = load i32, ptr %10, align 4, !tbaa !5
  %80 = load i32, ptr %77, align 4, !tbaa !5
  %81 = icmp slt i32 %79, %80
  %82 = load i32, ptr %78, align 4, !tbaa !5
  br i1 %81, label %83, label %92

83:                                               ; preds = %74
  %84 = icmp slt i32 %80, %82
  br i1 %84, label %85, label %87

85:                                               ; preds = %83
  %86 = load i32, ptr %0, align 4, !tbaa !5
  store i32 %80, ptr %0, align 4, !tbaa !5
  store i32 %86, ptr %77, align 4, !tbaa !5
  br label %101

87:                                               ; preds = %83
  %88 = icmp slt i32 %79, %82
  %89 = load i32, ptr %0, align 4, !tbaa !5
  br i1 %88, label %90, label %91

90:                                               ; preds = %87
  store i32 %82, ptr %0, align 4, !tbaa !5
  store i32 %89, ptr %78, align 4, !tbaa !5
  br label %101

91:                                               ; preds = %87
  store i32 %79, ptr %0, align 4, !tbaa !5
  store i32 %89, ptr %10, align 4, !tbaa !5
  br label %101

92:                                               ; preds = %74
  %93 = icmp slt i32 %79, %82
  br i1 %93, label %94, label %96

94:                                               ; preds = %92
  %95 = load i32, ptr %0, align 4, !tbaa !5
  store i32 %79, ptr %0, align 4, !tbaa !5
  store i32 %95, ptr %10, align 4, !tbaa !5
  br label %101

96:                                               ; preds = %92
  %97 = icmp slt i32 %80, %82
  %98 = load i32, ptr %0, align 4, !tbaa !5
  br i1 %97, label %99, label %100

99:                                               ; preds = %96
  store i32 %82, ptr %0, align 4, !tbaa !5
  store i32 %98, ptr %78, align 4, !tbaa !5
  br label %101

100:                                              ; preds = %96
  store i32 %80, ptr %0, align 4, !tbaa !5
  store i32 %98, ptr %77, align 4, !tbaa !5
  br label %101

101:                                              ; preds = %100, %99, %94, %91, %90, %85
  br label %102

102:                                              ; preds = %101, %118
  %103 = phi ptr [ %113, %118 ], [ %13, %101 ]
  %104 = phi ptr [ %110, %118 ], [ %10, %101 ]
  %105 = load i32, ptr %0, align 4, !tbaa !5
  br label %106

106:                                              ; preds = %106, %102
  %107 = phi ptr [ %104, %102 ], [ %110, %106 ]
  %108 = load i32, ptr %107, align 4, !tbaa !5
  %109 = icmp slt i32 %108, %105
  %110 = getelementptr inbounds i32, ptr %107, i64 1
  br i1 %109, label %106, label %111, !llvm.loop !256

111:                                              ; preds = %106, %111
  %112 = phi ptr [ %113, %111 ], [ %103, %106 ]
  %113 = getelementptr inbounds i32, ptr %112, i64 -1
  %114 = load i32, ptr %113, align 4, !tbaa !5
  %115 = icmp slt i32 %105, %114
  br i1 %115, label %111, label %116, !llvm.loop !257

116:                                              ; preds = %111
  %117 = icmp ult ptr %107, %113
  br i1 %117, label %118, label %119

118:                                              ; preds = %116
  store i32 %114, ptr %107, align 4, !tbaa !5
  store i32 %108, ptr %113, align 4, !tbaa !5
  br label %102, !llvm.loop !258

119:                                              ; preds = %116
  tail call void @_ZSt16__introsort_loopIPilN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_(ptr noundef nonnull %107, ptr noundef %13, i64 noundef %75)
  %120 = ptrtoint ptr %107 to i64
  %121 = sub i64 %120, %5
  %122 = icmp sgt i64 %121, 64
  br i1 %122, label %11, label %123, !llvm.loop !259

123:                                              ; preds = %119, %70, %3
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZSt22__final_insertion_sortIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_(ptr noundef %0, ptr noundef %1) local_unnamed_addr #18 comdat {
  %3 = ptrtoint ptr %1 to i64
  %4 = ptrtoint ptr %0 to i64
  %5 = sub i64 %3, %4
  %6 = icmp sgt i64 %5, 64
  br i1 %6, label %7, label %274

7:                                                ; preds = %2
  %8 = getelementptr i8, ptr %0, i64 4
  %9 = load i32, ptr %8, align 4, !tbaa !5
  %10 = load i32, ptr %0, align 4, !tbaa !5
  %11 = icmp slt i32 %9, %10
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = load i32, ptr %0, align 4
  store i32 %13, ptr %8, align 4
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi ptr [ %0, %12 ], [ %8, %7 ]
  store i32 %9, ptr %15, align 4, !tbaa !5
  %16 = getelementptr inbounds i32, ptr %0, i64 2
  %17 = load i32, ptr %16, align 4, !tbaa !5
  %18 = load i32, ptr %0, align 4, !tbaa !5
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %30, label %20

20:                                               ; preds = %14
  %21 = load i32, ptr %8, align 4, !tbaa !5
  %22 = icmp slt i32 %17, %21
  br i1 %22, label %23, label %32

23:                                               ; preds = %20, %23
  %24 = phi i32 [ %28, %23 ], [ %21, %20 ]
  %25 = phi ptr [ %27, %23 ], [ %8, %20 ]
  %26 = phi ptr [ %25, %23 ], [ %16, %20 ]
  store i32 %24, ptr %26, align 4, !tbaa !5
  %27 = getelementptr inbounds i32, ptr %25, i64 -1
  %28 = load i32, ptr %27, align 4, !tbaa !5
  %29 = icmp slt i32 %17, %28
  br i1 %29, label %23, label %32, !llvm.loop !260

30:                                               ; preds = %14
  %31 = load i64, ptr %0, align 4
  store i64 %31, ptr %8, align 4
  br label %32

32:                                               ; preds = %23, %30, %20
  %33 = phi ptr [ %0, %30 ], [ %16, %20 ], [ %25, %23 ]
  store i32 %17, ptr %33, align 4, !tbaa !5
  %34 = getelementptr inbounds i32, ptr %0, i64 3
  %35 = load i32, ptr %34, align 4, !tbaa !5
  %36 = load i32, ptr %0, align 4, !tbaa !5
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  %39 = load i32, ptr %16, align 4, !tbaa !5
  %40 = icmp slt i32 %35, %39
  br i1 %40, label %41, label %49

41:                                               ; preds = %38, %41
  %42 = phi i32 [ %46, %41 ], [ %39, %38 ]
  %43 = phi ptr [ %45, %41 ], [ %16, %38 ]
  %44 = phi ptr [ %43, %41 ], [ %34, %38 ]
  store i32 %42, ptr %44, align 4, !tbaa !5
  %45 = getelementptr inbounds i32, ptr %43, i64 -1
  %46 = load i32, ptr %45, align 4, !tbaa !5
  %47 = icmp slt i32 %35, %46
  br i1 %47, label %41, label %49, !llvm.loop !260

48:                                               ; preds = %32
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(12) %8, ptr noundef nonnull align 4 dereferenceable(12) %0, i64 12, i1 false)
  br label %49

49:                                               ; preds = %41, %48, %38
  %50 = phi ptr [ %0, %48 ], [ %34, %38 ], [ %43, %41 ]
  store i32 %35, ptr %50, align 4, !tbaa !5
  %51 = getelementptr inbounds i32, ptr %0, i64 4
  %52 = load i32, ptr %51, align 4, !tbaa !5
  %53 = load i32, ptr %0, align 4, !tbaa !5
  %54 = icmp slt i32 %52, %53
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  %56 = load i32, ptr %34, align 4, !tbaa !5
  %57 = icmp slt i32 %52, %56
  br i1 %57, label %58, label %66

58:                                               ; preds = %55, %58
  %59 = phi i32 [ %63, %58 ], [ %56, %55 ]
  %60 = phi ptr [ %62, %58 ], [ %34, %55 ]
  %61 = phi ptr [ %60, %58 ], [ %51, %55 ]
  store i32 %59, ptr %61, align 4, !tbaa !5
  %62 = getelementptr inbounds i32, ptr %60, i64 -1
  %63 = load i32, ptr %62, align 4, !tbaa !5
  %64 = icmp slt i32 %52, %63
  br i1 %64, label %58, label %66, !llvm.loop !260

65:                                               ; preds = %49
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %8, ptr noundef nonnull align 4 dereferenceable(16) %0, i64 16, i1 false)
  br label %66

66:                                               ; preds = %58, %65, %55
  %67 = phi ptr [ %0, %65 ], [ %51, %55 ], [ %60, %58 ]
  store i32 %52, ptr %67, align 4, !tbaa !5
  %68 = getelementptr inbounds i32, ptr %0, i64 5
  %69 = load i32, ptr %68, align 4, !tbaa !5
  %70 = load i32, ptr %0, align 4, !tbaa !5
  %71 = icmp slt i32 %69, %70
  br i1 %71, label %82, label %72

72:                                               ; preds = %66
  %73 = load i32, ptr %51, align 4, !tbaa !5
  %74 = icmp slt i32 %69, %73
  br i1 %74, label %75, label %83

75:                                               ; preds = %72, %75
  %76 = phi i32 [ %80, %75 ], [ %73, %72 ]
  %77 = phi ptr [ %79, %75 ], [ %51, %72 ]
  %78 = phi ptr [ %77, %75 ], [ %68, %72 ]
  store i32 %76, ptr %78, align 4, !tbaa !5
  %79 = getelementptr inbounds i32, ptr %77, i64 -1
  %80 = load i32, ptr %79, align 4, !tbaa !5
  %81 = icmp slt i32 %69, %80
  br i1 %81, label %75, label %83, !llvm.loop !260

82:                                               ; preds = %66
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %8, ptr noundef nonnull align 4 dereferenceable(20) %0, i64 20, i1 false)
  br label %83

83:                                               ; preds = %75, %82, %72
  %84 = phi ptr [ %0, %82 ], [ %68, %72 ], [ %77, %75 ]
  store i32 %69, ptr %84, align 4, !tbaa !5
  %85 = getelementptr inbounds i32, ptr %0, i64 6
  %86 = load i32, ptr %85, align 4, !tbaa !5
  %87 = load i32, ptr %0, align 4, !tbaa !5
  %88 = icmp slt i32 %86, %87
  br i1 %88, label %99, label %89

89:                                               ; preds = %83
  %90 = load i32, ptr %68, align 4, !tbaa !5
  %91 = icmp slt i32 %86, %90
  br i1 %91, label %92, label %100

92:                                               ; preds = %89, %92
  %93 = phi i32 [ %97, %92 ], [ %90, %89 ]
  %94 = phi ptr [ %96, %92 ], [ %68, %89 ]
  %95 = phi ptr [ %94, %92 ], [ %85, %89 ]
  store i32 %93, ptr %95, align 4, !tbaa !5
  %96 = getelementptr inbounds i32, ptr %94, i64 -1
  %97 = load i32, ptr %96, align 4, !tbaa !5
  %98 = icmp slt i32 %86, %97
  br i1 %98, label %92, label %100, !llvm.loop !260

99:                                               ; preds = %83
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(24) %8, ptr noundef nonnull align 4 dereferenceable(24) %0, i64 24, i1 false)
  br label %100

100:                                              ; preds = %92, %99, %89
  %101 = phi ptr [ %0, %99 ], [ %85, %89 ], [ %94, %92 ]
  store i32 %86, ptr %101, align 4, !tbaa !5
  %102 = getelementptr inbounds i32, ptr %0, i64 7
  %103 = load i32, ptr %102, align 4, !tbaa !5
  %104 = load i32, ptr %0, align 4, !tbaa !5
  %105 = icmp slt i32 %103, %104
  br i1 %105, label %116, label %106

106:                                              ; preds = %100
  %107 = load i32, ptr %85, align 4, !tbaa !5
  %108 = icmp slt i32 %103, %107
  br i1 %108, label %109, label %117

109:                                              ; preds = %106, %109
  %110 = phi i32 [ %114, %109 ], [ %107, %106 ]
  %111 = phi ptr [ %113, %109 ], [ %85, %106 ]
  %112 = phi ptr [ %111, %109 ], [ %102, %106 ]
  store i32 %110, ptr %112, align 4, !tbaa !5
  %113 = getelementptr inbounds i32, ptr %111, i64 -1
  %114 = load i32, ptr %113, align 4, !tbaa !5
  %115 = icmp slt i32 %103, %114
  br i1 %115, label %109, label %117, !llvm.loop !260

116:                                              ; preds = %100
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(28) %8, ptr noundef nonnull align 4 dereferenceable(28) %0, i64 28, i1 false)
  br label %117

117:                                              ; preds = %109, %116, %106
  %118 = phi ptr [ %0, %116 ], [ %102, %106 ], [ %111, %109 ]
  store i32 %103, ptr %118, align 4, !tbaa !5
  %119 = getelementptr inbounds i32, ptr %0, i64 8
  %120 = load i32, ptr %119, align 4, !tbaa !5
  %121 = load i32, ptr %0, align 4, !tbaa !5
  %122 = icmp slt i32 %120, %121
  br i1 %122, label %133, label %123

123:                                              ; preds = %117
  %124 = load i32, ptr %102, align 4, !tbaa !5
  %125 = icmp slt i32 %120, %124
  br i1 %125, label %126, label %134

126:                                              ; preds = %123, %126
  %127 = phi i32 [ %131, %126 ], [ %124, %123 ]
  %128 = phi ptr [ %130, %126 ], [ %102, %123 ]
  %129 = phi ptr [ %128, %126 ], [ %119, %123 ]
  store i32 %127, ptr %129, align 4, !tbaa !5
  %130 = getelementptr inbounds i32, ptr %128, i64 -1
  %131 = load i32, ptr %130, align 4, !tbaa !5
  %132 = icmp slt i32 %120, %131
  br i1 %132, label %126, label %134, !llvm.loop !260

133:                                              ; preds = %117
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %8, ptr noundef nonnull align 4 dereferenceable(32) %0, i64 32, i1 false)
  br label %134

134:                                              ; preds = %126, %133, %123
  %135 = phi ptr [ %0, %133 ], [ %119, %123 ], [ %128, %126 ]
  store i32 %120, ptr %135, align 4, !tbaa !5
  %136 = getelementptr inbounds i32, ptr %0, i64 9
  %137 = load i32, ptr %136, align 4, !tbaa !5
  %138 = load i32, ptr %0, align 4, !tbaa !5
  %139 = icmp slt i32 %137, %138
  br i1 %139, label %150, label %140

140:                                              ; preds = %134
  %141 = load i32, ptr %119, align 4, !tbaa !5
  %142 = icmp slt i32 %137, %141
  br i1 %142, label %143, label %151

143:                                              ; preds = %140, %143
  %144 = phi i32 [ %148, %143 ], [ %141, %140 ]
  %145 = phi ptr [ %147, %143 ], [ %119, %140 ]
  %146 = phi ptr [ %145, %143 ], [ %136, %140 ]
  store i32 %144, ptr %146, align 4, !tbaa !5
  %147 = getelementptr inbounds i32, ptr %145, i64 -1
  %148 = load i32, ptr %147, align 4, !tbaa !5
  %149 = icmp slt i32 %137, %148
  br i1 %149, label %143, label %151, !llvm.loop !260

150:                                              ; preds = %134
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(36) %8, ptr noundef nonnull align 4 dereferenceable(36) %0, i64 36, i1 false)
  br label %151

151:                                              ; preds = %143, %150, %140
  %152 = phi ptr [ %0, %150 ], [ %136, %140 ], [ %145, %143 ]
  store i32 %137, ptr %152, align 4, !tbaa !5
  %153 = getelementptr inbounds i32, ptr %0, i64 10
  %154 = load i32, ptr %153, align 4, !tbaa !5
  %155 = load i32, ptr %0, align 4, !tbaa !5
  %156 = icmp slt i32 %154, %155
  br i1 %156, label %167, label %157

157:                                              ; preds = %151
  %158 = load i32, ptr %136, align 4, !tbaa !5
  %159 = icmp slt i32 %154, %158
  br i1 %159, label %160, label %168

160:                                              ; preds = %157, %160
  %161 = phi i32 [ %165, %160 ], [ %158, %157 ]
  %162 = phi ptr [ %164, %160 ], [ %136, %157 ]
  %163 = phi ptr [ %162, %160 ], [ %153, %157 ]
  store i32 %161, ptr %163, align 4, !tbaa !5
  %164 = getelementptr inbounds i32, ptr %162, i64 -1
  %165 = load i32, ptr %164, align 4, !tbaa !5
  %166 = icmp slt i32 %154, %165
  br i1 %166, label %160, label %168, !llvm.loop !260

167:                                              ; preds = %151
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(40) %8, ptr noundef nonnull align 4 dereferenceable(40) %0, i64 40, i1 false)
  br label %168

168:                                              ; preds = %160, %167, %157
  %169 = phi ptr [ %0, %167 ], [ %153, %157 ], [ %162, %160 ]
  store i32 %154, ptr %169, align 4, !tbaa !5
  %170 = getelementptr inbounds i32, ptr %0, i64 11
  %171 = load i32, ptr %170, align 4, !tbaa !5
  %172 = load i32, ptr %0, align 4, !tbaa !5
  %173 = icmp slt i32 %171, %172
  br i1 %173, label %184, label %174

174:                                              ; preds = %168
  %175 = load i32, ptr %153, align 4, !tbaa !5
  %176 = icmp slt i32 %171, %175
  br i1 %176, label %177, label %185

177:                                              ; preds = %174, %177
  %178 = phi i32 [ %182, %177 ], [ %175, %174 ]
  %179 = phi ptr [ %181, %177 ], [ %153, %174 ]
  %180 = phi ptr [ %179, %177 ], [ %170, %174 ]
  store i32 %178, ptr %180, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %179, i64 -1
  %182 = load i32, ptr %181, align 4, !tbaa !5
  %183 = icmp slt i32 %171, %182
  br i1 %183, label %177, label %185, !llvm.loop !260

184:                                              ; preds = %168
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(44) %8, ptr noundef nonnull align 4 dereferenceable(44) %0, i64 44, i1 false)
  br label %185

185:                                              ; preds = %177, %184, %174
  %186 = phi ptr [ %0, %184 ], [ %170, %174 ], [ %179, %177 ]
  store i32 %171, ptr %186, align 4, !tbaa !5
  %187 = getelementptr inbounds i32, ptr %0, i64 12
  %188 = load i32, ptr %187, align 4, !tbaa !5
  %189 = load i32, ptr %0, align 4, !tbaa !5
  %190 = icmp slt i32 %188, %189
  br i1 %190, label %201, label %191

191:                                              ; preds = %185
  %192 = load i32, ptr %170, align 4, !tbaa !5
  %193 = icmp slt i32 %188, %192
  br i1 %193, label %194, label %202

194:                                              ; preds = %191, %194
  %195 = phi i32 [ %199, %194 ], [ %192, %191 ]
  %196 = phi ptr [ %198, %194 ], [ %170, %191 ]
  %197 = phi ptr [ %196, %194 ], [ %187, %191 ]
  store i32 %195, ptr %197, align 4, !tbaa !5
  %198 = getelementptr inbounds i32, ptr %196, i64 -1
  %199 = load i32, ptr %198, align 4, !tbaa !5
  %200 = icmp slt i32 %188, %199
  br i1 %200, label %194, label %202, !llvm.loop !260

201:                                              ; preds = %185
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) %8, ptr noundef nonnull align 4 dereferenceable(48) %0, i64 48, i1 false)
  br label %202

202:                                              ; preds = %194, %201, %191
  %203 = phi ptr [ %0, %201 ], [ %187, %191 ], [ %196, %194 ]
  store i32 %188, ptr %203, align 4, !tbaa !5
  %204 = getelementptr inbounds i32, ptr %0, i64 13
  %205 = load i32, ptr %204, align 4, !tbaa !5
  %206 = load i32, ptr %0, align 4, !tbaa !5
  %207 = icmp slt i32 %205, %206
  br i1 %207, label %218, label %208

208:                                              ; preds = %202
  %209 = load i32, ptr %187, align 4, !tbaa !5
  %210 = icmp slt i32 %205, %209
  br i1 %210, label %211, label %219

211:                                              ; preds = %208, %211
  %212 = phi i32 [ %216, %211 ], [ %209, %208 ]
  %213 = phi ptr [ %215, %211 ], [ %187, %208 ]
  %214 = phi ptr [ %213, %211 ], [ %204, %208 ]
  store i32 %212, ptr %214, align 4, !tbaa !5
  %215 = getelementptr inbounds i32, ptr %213, i64 -1
  %216 = load i32, ptr %215, align 4, !tbaa !5
  %217 = icmp slt i32 %205, %216
  br i1 %217, label %211, label %219, !llvm.loop !260

218:                                              ; preds = %202
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(52) %8, ptr noundef nonnull align 4 dereferenceable(52) %0, i64 52, i1 false)
  br label %219

219:                                              ; preds = %211, %218, %208
  %220 = phi ptr [ %0, %218 ], [ %204, %208 ], [ %213, %211 ]
  store i32 %205, ptr %220, align 4, !tbaa !5
  %221 = getelementptr inbounds i32, ptr %0, i64 14
  %222 = load i32, ptr %221, align 4, !tbaa !5
  %223 = load i32, ptr %0, align 4, !tbaa !5
  %224 = icmp slt i32 %222, %223
  br i1 %224, label %235, label %225

225:                                              ; preds = %219
  %226 = load i32, ptr %204, align 4, !tbaa !5
  %227 = icmp slt i32 %222, %226
  br i1 %227, label %228, label %236

228:                                              ; preds = %225, %228
  %229 = phi i32 [ %233, %228 ], [ %226, %225 ]
  %230 = phi ptr [ %232, %228 ], [ %204, %225 ]
  %231 = phi ptr [ %230, %228 ], [ %221, %225 ]
  store i32 %229, ptr %231, align 4, !tbaa !5
  %232 = getelementptr inbounds i32, ptr %230, i64 -1
  %233 = load i32, ptr %232, align 4, !tbaa !5
  %234 = icmp slt i32 %222, %233
  br i1 %234, label %228, label %236, !llvm.loop !260

235:                                              ; preds = %219
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(56) %8, ptr noundef nonnull align 4 dereferenceable(56) %0, i64 56, i1 false)
  br label %236

236:                                              ; preds = %228, %235, %225
  %237 = phi ptr [ %0, %235 ], [ %221, %225 ], [ %230, %228 ]
  store i32 %222, ptr %237, align 4, !tbaa !5
  %238 = getelementptr inbounds i32, ptr %0, i64 15
  %239 = load i32, ptr %238, align 4, !tbaa !5
  %240 = load i32, ptr %0, align 4, !tbaa !5
  %241 = icmp slt i32 %239, %240
  br i1 %241, label %252, label %242

242:                                              ; preds = %236
  %243 = load i32, ptr %221, align 4, !tbaa !5
  %244 = icmp slt i32 %239, %243
  br i1 %244, label %245, label %253

245:                                              ; preds = %242, %245
  %246 = phi i32 [ %250, %245 ], [ %243, %242 ]
  %247 = phi ptr [ %249, %245 ], [ %221, %242 ]
  %248 = phi ptr [ %247, %245 ], [ %238, %242 ]
  store i32 %246, ptr %248, align 4, !tbaa !5
  %249 = getelementptr inbounds i32, ptr %247, i64 -1
  %250 = load i32, ptr %249, align 4, !tbaa !5
  %251 = icmp slt i32 %239, %250
  br i1 %251, label %245, label %253, !llvm.loop !260

252:                                              ; preds = %236
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(60) %8, ptr noundef nonnull align 4 dereferenceable(60) %0, i64 60, i1 false)
  br label %253

253:                                              ; preds = %245, %252, %242
  %254 = phi ptr [ %0, %252 ], [ %238, %242 ], [ %247, %245 ]
  store i32 %239, ptr %254, align 4, !tbaa !5
  %255 = getelementptr inbounds i32, ptr %0, i64 16
  %256 = icmp eq ptr %255, %1
  br i1 %256, label %308, label %257

257:                                              ; preds = %253, %270
  %258 = phi ptr [ %272, %270 ], [ %255, %253 ]
  %259 = load i32, ptr %258, align 4, !tbaa !5
  %260 = getelementptr inbounds i32, ptr %258, i64 -1
  %261 = load i32, ptr %260, align 4, !tbaa !5
  %262 = icmp slt i32 %259, %261
  br i1 %262, label %263, label %270

263:                                              ; preds = %257, %263
  %264 = phi i32 [ %268, %263 ], [ %261, %257 ]
  %265 = phi ptr [ %267, %263 ], [ %260, %257 ]
  %266 = phi ptr [ %265, %263 ], [ %258, %257 ]
  store i32 %264, ptr %266, align 4, !tbaa !5
  %267 = getelementptr inbounds i32, ptr %265, i64 -1
  %268 = load i32, ptr %267, align 4, !tbaa !5
  %269 = icmp slt i32 %259, %268
  br i1 %269, label %263, label %270, !llvm.loop !260

270:                                              ; preds = %263, %257
  %271 = phi ptr [ %258, %257 ], [ %265, %263 ]
  store i32 %259, ptr %271, align 4, !tbaa !5
  %272 = getelementptr inbounds i32, ptr %258, i64 1
  %273 = icmp eq ptr %272, %1
  br i1 %273, label %308, label %257, !llvm.loop !261

274:                                              ; preds = %2
  %275 = icmp eq ptr %0, %1
  %276 = getelementptr inbounds i32, ptr %0, i64 1
  %277 = icmp eq ptr %276, %1
  %278 = select i1 %275, i1 true, i1 %277
  br i1 %278, label %308, label %279

279:                                              ; preds = %274, %304
  %280 = phi ptr [ %306, %304 ], [ %276, %274 ]
  %281 = phi ptr [ %280, %304 ], [ %0, %274 ]
  %282 = load i32, ptr %280, align 4, !tbaa !5
  %283 = load i32, ptr %0, align 4, !tbaa !5
  %284 = icmp slt i32 %282, %283
  br i1 %284, label %285, label %294

285:                                              ; preds = %279
  %286 = icmp eq ptr %280, %0
  br i1 %286, label %304, label %287

287:                                              ; preds = %285
  %288 = ptrtoint ptr %280 to i64
  %289 = sub i64 %288, %4
  %290 = ashr exact i64 %289, 2
  %291 = sub nsw i64 0, %290
  %292 = getelementptr inbounds i32, ptr %281, i64 2
  %293 = getelementptr inbounds i32, ptr %292, i64 %291
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %293, ptr nonnull align 4 %0, i64 %289, i1 false)
  br label %304

294:                                              ; preds = %279
  %295 = load i32, ptr %281, align 4, !tbaa !5
  %296 = icmp slt i32 %282, %295
  br i1 %296, label %297, label %304

297:                                              ; preds = %294, %297
  %298 = phi i32 [ %302, %297 ], [ %295, %294 ]
  %299 = phi ptr [ %301, %297 ], [ %281, %294 ]
  %300 = phi ptr [ %299, %297 ], [ %280, %294 ]
  store i32 %298, ptr %300, align 4, !tbaa !5
  %301 = getelementptr inbounds i32, ptr %299, i64 -1
  %302 = load i32, ptr %301, align 4, !tbaa !5
  %303 = icmp slt i32 %282, %302
  br i1 %303, label %297, label %304, !llvm.loop !260

304:                                              ; preds = %297, %294, %287, %285
  %305 = phi ptr [ %0, %285 ], [ %0, %287 ], [ %280, %294 ], [ %299, %297 ]
  store i32 %282, ptr %305, align 4, !tbaa !5
  %306 = getelementptr inbounds i32, ptr %280, i64 1
  %307 = icmp eq ptr %306, %1
  br i1 %307, label %308, label %279, !llvm.loop !262

308:                                              ; preds = %304, %270, %274, %253
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt11__make_heapIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 1 dereferenceable(1) %2) local_unnamed_addr #7 comdat {
  %4 = ptrtoint ptr %1 to i64
  %5 = ptrtoint ptr %0 to i64
  %6 = sub i64 %4, %5
  %7 = icmp slt i64 %6, 8
  br i1 %7, label %101, label %8

8:                                                ; preds = %3
  %9 = lshr exact i64 %6, 2
  %10 = add nsw i64 %9, -2
  %11 = lshr i64 %10, 1
  %12 = add nsw i64 %9, -1
  %13 = lshr i64 %12, 1
  %14 = and i64 %6, 4
  %15 = icmp eq i64 %14, 0
  %16 = lshr i64 %10, 1
  br i1 %15, label %17, label %21

17:                                               ; preds = %8
  %18 = or i64 %10, 1
  %19 = getelementptr inbounds i32, ptr %0, i64 %18
  %20 = getelementptr inbounds i32, ptr %0, i64 %16
  br label %58

21:                                               ; preds = %8, %53
  %22 = phi i64 [ %57, %53 ], [ %11, %8 ]
  %23 = getelementptr inbounds i32, ptr %0, i64 %22
  %24 = load i32, ptr %23, align 4, !tbaa !5
  %25 = icmp sgt i64 %13, %22
  br i1 %25, label %26, label %53

26:                                               ; preds = %21, %26
  %27 = phi i64 [ %36, %26 ], [ %22, %21 ]
  %28 = shl i64 %27, 1
  %29 = add i64 %28, 2
  %30 = getelementptr inbounds i32, ptr %0, i64 %29
  %31 = or i64 %28, 1
  %32 = getelementptr inbounds i32, ptr %0, i64 %31
  %33 = load i32, ptr %30, align 4, !tbaa !5
  %34 = load i32, ptr %32, align 4, !tbaa !5
  %35 = icmp slt i32 %33, %34
  %36 = select i1 %35, i64 %31, i64 %29
  %37 = getelementptr inbounds i32, ptr %0, i64 %36
  %38 = load i32, ptr %37, align 4, !tbaa !5
  %39 = getelementptr inbounds i32, ptr %0, i64 %27
  store i32 %38, ptr %39, align 4, !tbaa !5
  %40 = icmp slt i64 %36, %13
  br i1 %40, label %26, label %41, !llvm.loop !253

41:                                               ; preds = %26
  %42 = icmp sgt i64 %36, %22
  br i1 %42, label %43, label %53

43:                                               ; preds = %41, %50
  %44 = phi i64 [ %46, %50 ], [ %36, %41 ]
  %45 = add nsw i64 %44, -1
  %46 = sdiv i64 %45, 2
  %47 = getelementptr inbounds i32, ptr %0, i64 %46
  %48 = load i32, ptr %47, align 4, !tbaa !5
  %49 = icmp slt i32 %48, %24
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = getelementptr inbounds i32, ptr %0, i64 %44
  store i32 %48, ptr %51, align 4, !tbaa !5
  %52 = icmp sgt i64 %46, %22
  br i1 %52, label %43, label %53, !llvm.loop !254

53:                                               ; preds = %43, %50, %21, %41
  %54 = phi i64 [ %36, %41 ], [ %22, %21 ], [ %46, %50 ], [ %44, %43 ]
  %55 = getelementptr inbounds i32, ptr %0, i64 %54
  store i32 %24, ptr %55, align 4, !tbaa !5
  %56 = icmp eq i64 %22, 0
  %57 = add nsw i64 %22, -1
  br i1 %56, label %101, label %21, !llvm.loop !263

58:                                               ; preds = %17, %96
  %59 = phi i64 [ %100, %96 ], [ %11, %17 ]
  %60 = getelementptr inbounds i32, ptr %0, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !5
  %62 = icmp sgt i64 %13, %59
  br i1 %62, label %63, label %78

63:                                               ; preds = %58, %63
  %64 = phi i64 [ %73, %63 ], [ %59, %58 ]
  %65 = shl i64 %64, 1
  %66 = add i64 %65, 2
  %67 = getelementptr inbounds i32, ptr %0, i64 %66
  %68 = or i64 %65, 1
  %69 = getelementptr inbounds i32, ptr %0, i64 %68
  %70 = load i32, ptr %67, align 4, !tbaa !5
  %71 = load i32, ptr %69, align 4, !tbaa !5
  %72 = icmp slt i32 %70, %71
  %73 = select i1 %72, i64 %68, i64 %66
  %74 = getelementptr inbounds i32, ptr %0, i64 %73
  %75 = load i32, ptr %74, align 4, !tbaa !5
  %76 = getelementptr inbounds i32, ptr %0, i64 %64
  store i32 %75, ptr %76, align 4, !tbaa !5
  %77 = icmp slt i64 %73, %13
  br i1 %77, label %63, label %78, !llvm.loop !253

78:                                               ; preds = %63, %58
  %79 = phi i64 [ %59, %58 ], [ %73, %63 ]
  %80 = icmp eq i64 %79, %16
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  %82 = load i32, ptr %19, align 4, !tbaa !5
  store i32 %82, ptr %20, align 4, !tbaa !5
  br label %83

83:                                               ; preds = %81, %78
  %84 = phi i64 [ %18, %81 ], [ %79, %78 ]
  %85 = icmp sgt i64 %84, %59
  br i1 %85, label %86, label %96

86:                                               ; preds = %83, %93
  %87 = phi i64 [ %89, %93 ], [ %84, %83 ]
  %88 = add nsw i64 %87, -1
  %89 = sdiv i64 %88, 2
  %90 = getelementptr inbounds i32, ptr %0, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !5
  %92 = icmp slt i32 %91, %61
  br i1 %92, label %93, label %96

93:                                               ; preds = %86
  %94 = getelementptr inbounds i32, ptr %0, i64 %87
  store i32 %91, ptr %94, align 4, !tbaa !5
  %95 = icmp sgt i64 %89, %59
  br i1 %95, label %86, label %96, !llvm.loop !254

96:                                               ; preds = %86, %93, %83
  %97 = phi i64 [ %84, %83 ], [ %89, %93 ], [ %87, %86 ]
  %98 = getelementptr inbounds i32, ptr %0, i64 %97
  store i32 %61, ptr %98, align 4, !tbaa !5
  %99 = icmp eq i64 %59, 0
  %100 = add nsw i64 %59, -1
  br i1 %99, label %101, label %58, !llvm.loop !263

101:                                              ; preds = %53, %96, %3
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #16

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE20perform_element_loopIiNS_9CSRMatrixIdiiEENS_6VectorIdiiEEEEvRKNS_23simple_mesh_descriptionIT_EERK3BoxRT0_RT1_RNS_10ParametersE(ptr noundef nonnull align 8 dereferenceable(192) %0, ptr noundef nonnull align 4 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(132) %2, ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #7 comdat personality ptr @__gxx_personality_v0 {
  %6 = alloca %"struct.miniFE::ElemData", align 8
  %7 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 1
  %8 = load i32, ptr %7, align 4, !tbaa !5
  %9 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 3
  %10 = load i32, ptr %9, align 4, !tbaa !5
  %11 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 5
  %12 = load i32, ptr %11, align 4, !tbaa !5
  %13 = getelementptr inbounds i32, ptr %1, i64 1
  %14 = load i32, ptr %13, align 4, !tbaa !5
  %15 = load i32, ptr %1, align 4, !tbaa !5
  %16 = sub nsw i32 %14, %15
  %17 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 3
  %18 = load i32, ptr %17, align 4, !tbaa !5
  %19 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 2
  %20 = load i32, ptr %19, align 4, !tbaa !5
  %21 = sub nsw i32 %18, %20
  %22 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 5
  %23 = load i32, ptr %22, align 4, !tbaa !5
  %24 = getelementptr inbounds [6 x i32], ptr %1, i64 0, i64 4
  %25 = load i32, ptr %24, align 4, !tbaa !5
  %26 = sub nsw i32 %23, %25
  %27 = mul nsw i32 %21, %16
  %28 = mul nsw i32 %27, %26
  %29 = sext i32 %28 to i64
  %30 = icmp slt i32 %28, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %5
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.34) #26
  unreachable

32:                                               ; preds = %5
  %33 = icmp eq i32 %28, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %32
  %35 = shl nuw nsw i64 %29, 2
  %36 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %35) #27
  store i32 0, ptr %36, align 4, !tbaa !5
  %37 = getelementptr i32, ptr %36, i64 1
  %38 = icmp eq i32 %28, 1
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds i32, ptr %36, i64 %29
  %41 = add nsw i64 %35, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %37, i8 0, i64 %41, i1 false), !tbaa !5
  br label %42

42:                                               ; preds = %39, %34, %32
  %43 = phi ptr [ %36, %34 ], [ %36, %39 ], [ null, %32 ]
  %44 = phi ptr [ %37, %34 ], [ %40, %39 ], [ null, %32 ]
  %45 = icmp ne i32 %14, %15
  %46 = icmp ne i32 %18, %20
  %47 = select i1 %45, i1 true, i1 %46
  %48 = icmp ne i32 %23, %25
  %49 = select i1 %47, i1 true, i1 %48
  br i1 %49, label %66, label %50

50:                                               ; preds = %97, %42
  call void @llvm.lifetime.start.p0(i64 2120, ptr nonnull %6) #25
  store i64 8, ptr %6, align 8, !tbaa !264
  %51 = getelementptr inbounds %"struct.miniFE::ElemData", ptr %6, i64 0, i32 2
  invoke void @_ZN6miniFE23compute_gradient_valuesIdEEvPT_(ptr noundef nonnull %51)
          to label %52 unwind label %111

52:                                               ; preds = %50
  %53 = icmp eq ptr %44, %43
  br i1 %53, label %107, label %54

54:                                               ; preds = %52
  %55 = ptrtoint ptr %44 to i64
  %56 = ptrtoint ptr %43 to i64
  %57 = sub i64 %55, %56
  %58 = ashr i64 %57, 2
  %59 = getelementptr inbounds %"struct.miniFE::ElemData", ptr %6, i64 0, i32 1
  %60 = getelementptr inbounds %"struct.miniFE::ElemData", ptr %6, i64 0, i32 3
  %61 = getelementptr inbounds %"struct.miniFE::ElemData", ptr %6, i64 0, i32 4
  %62 = getelementptr inbounds %"struct.miniFE::ElemData", ptr %6, i64 0, i32 5
  %63 = getelementptr inbounds %"struct.miniFE::Vector", ptr %3, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.miniFE::Vector", ptr %3, i64 0, i32 2
  %65 = call i64 @llvm.umax.i64(i64 %58, i64 1)
  br label %113

66:                                               ; preds = %42, %97
  %67 = phi i64 [ %101, %97 ], [ 0, %42 ]
  %68 = phi i32 [ %100, %97 ], [ %25, %42 ]
  %69 = phi i32 [ %99, %97 ], [ %20, %42 ]
  %70 = phi i32 [ %98, %97 ], [ %15, %42 ]
  %71 = or i32 %69, %70
  %72 = or i32 %71, %68
  %73 = icmp sgt i32 %72, -1
  br i1 %73, label %74, label %85

74:                                               ; preds = %66
  %75 = icmp slt i32 %70, %8
  %76 = icmp slt i32 %69, %10
  %77 = and i1 %75, %76
  %78 = icmp slt i32 %68, %12
  %79 = and i1 %77, %78
  br i1 %79, label %80, label %85

80:                                               ; preds = %74
  %81 = mul i32 %68, %10
  %82 = add i32 %81, %69
  %83 = mul i32 %82, %8
  %84 = add i32 %83, %70
  br label %85

85:                                               ; preds = %66, %74, %80
  %86 = phi i32 [ %84, %80 ], [ -1, %66 ], [ -1, %74 ]
  %87 = getelementptr inbounds i32, ptr %43, i64 %67
  store i32 %86, ptr %87, align 4, !tbaa !5
  %88 = add nsw i32 %70, 1
  %89 = icmp slt i32 %88, %14
  br i1 %89, label %97, label %90

90:                                               ; preds = %85
  %91 = add nsw i32 %69, 1
  %92 = icmp slt i32 %91, %18
  br i1 %92, label %97, label %93

93:                                               ; preds = %90
  %94 = add nsw i32 %68, 1
  %95 = icmp slt i32 %94, %23
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  br label %97

97:                                               ; preds = %85, %90, %93, %96
  %98 = phi i32 [ %88, %85 ], [ %15, %90 ], [ %15, %93 ], [ %14, %96 ]
  %99 = phi i32 [ %69, %85 ], [ %91, %90 ], [ %20, %93 ], [ %18, %96 ]
  %100 = phi i32 [ %68, %85 ], [ %68, %90 ], [ %94, %93 ], [ %23, %96 ]
  %101 = add i64 %67, 1
  %102 = icmp ne i32 %98, %14
  %103 = icmp ne i32 %99, %18
  %104 = select i1 %102, i1 true, i1 %103
  %105 = icmp ne i32 %100, %23
  %106 = select i1 %104, i1 true, i1 %105
  br i1 %106, label %66, label %50, !llvm.loop !266

107:                                              ; preds = %159, %52
  call void @llvm.lifetime.end.p0(i64 2120, ptr nonnull %6) #25
  %108 = icmp eq ptr %43, null
  br i1 %108, label %110, label %109

109:                                              ; preds = %107
  call void @_ZdlPv(ptr noundef nonnull %43) #28
  br label %110

110:                                              ; preds = %107, %109
  ret void

111:                                              ; preds = %50
  %112 = landingpad { ptr, i32 }
          cleanup
  br label %164

113:                                              ; preds = %54, %159
  %114 = phi i64 [ 0, %54 ], [ %160, %159 ]
  %115 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %116 unwind label %162

116:                                              ; preds = %113
  %117 = getelementptr inbounds i32, ptr %43, i64 %114
  %118 = load i32, ptr %117, align 4, !tbaa !5
  invoke void @_ZN6miniFE25get_elem_nodes_and_coordsIidEEvRKNS_23simple_mesh_descriptionIT_EES2_PS2_PT0_(ptr noundef nonnull align 8 dereferenceable(192) %0, i32 noundef %118, ptr noundef nonnull %59, ptr noundef nonnull %60)
          to label %119 unwind label %162

119:                                              ; preds = %116
  %120 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %121 unwind label %162

121:                                              ; preds = %119
  %122 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %123 unwind label %162

123:                                              ; preds = %121
  invoke void @_ZN6miniFE4Hex820diffusionMatrix_symmIdEEvPKT_S4_PS2_(ptr noundef nonnull %60, ptr noundef nonnull %51, ptr noundef nonnull %61)
          to label %124 unwind label %162

124:                                              ; preds = %123
  invoke void @_ZN6miniFE4Hex812sourceVectorIdEEvPKT_S4_PS2_(ptr noundef nonnull %60, ptr noundef nonnull %51, ptr noundef nonnull %62)
          to label %125 unwind label %162

125:                                              ; preds = %124
  %126 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %127 unwind label %162

127:                                              ; preds = %125
  %128 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %129 unwind label %162

129:                                              ; preds = %127
  %130 = load i64, ptr %6, align 8, !tbaa !264
  invoke void @_ZN6miniFE23sum_in_symm_elem_matrixINS_9CSRMatrixIdiiEEEEvmPKNT_17GlobalOrdinalTypeEPKNS3_10ScalarTypeERS3_(i64 noundef %130, ptr noundef nonnull %59, ptr noundef nonnull %61, ptr noundef nonnull align 8 dereferenceable(132) %2)
          to label %131 unwind label %162

131:                                              ; preds = %129
  %132 = load i64, ptr %6, align 8, !tbaa !264
  %133 = load i32, ptr %3, align 8, !tbaa !88
  %134 = load i32, ptr %63, align 4, !tbaa !90
  %135 = add nsw i32 %134, %133
  %136 = icmp eq i64 %132, 0
  br i1 %136, label %157, label %137

137:                                              ; preds = %131
  %138 = load ptr, ptr %64, align 8
  br label %139

139:                                              ; preds = %154, %137
  %140 = phi i64 [ 0, %137 ], [ %155, %154 ]
  %141 = getelementptr inbounds i32, ptr %59, i64 %140
  %142 = load i32, ptr %141, align 4, !tbaa !5
  %143 = icmp sge i32 %142, %133
  %144 = icmp slt i32 %142, %135
  %145 = select i1 %143, i1 %144, i1 false
  br i1 %145, label %146, label %154

146:                                              ; preds = %139
  %147 = sub nsw i32 %142, %133
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds double, ptr %62, i64 %140
  %150 = load double, ptr %149, align 8, !tbaa !93
  %151 = getelementptr inbounds double, ptr %138, i64 %148
  %152 = load double, ptr %151, align 8, !tbaa !93
  %153 = fadd double %150, %152
  store double %153, ptr %151, align 8, !tbaa !93
  br label %154

154:                                              ; preds = %146, %139
  %155 = add nuw i64 %140, 1
  %156 = icmp eq i64 %155, %132
  br i1 %156, label %157, label %139, !llvm.loop !267

157:                                              ; preds = %154, %131
  %158 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %159 unwind label %162

159:                                              ; preds = %157
  %160 = add nuw i64 %114, 1
  %161 = icmp eq i64 %160, %65
  br i1 %161, label %107, label %113, !llvm.loop !268

162:                                              ; preds = %129, %124, %123, %116, %157, %127, %125, %121, %119, %113
  %163 = landingpad { ptr, i32 }
          cleanup
  br label %164

164:                                              ; preds = %162, %111
  %165 = phi { ptr, i32 } [ %163, %162 ], [ %112, %111 ]
  call void @llvm.lifetime.end.p0(i64 2120, ptr nonnull %6) #25
  %166 = icmp eq ptr %43, null
  br i1 %166, label %168, label %167

167:                                              ; preds = %164
  call void @_ZdlPv(ptr noundef nonnull %43) #28
  br label %168

168:                                              ; preds = %167, %164
  resume { ptr, i32 } %165
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN6miniFE23compute_gradient_valuesIdEEvPT_(ptr noundef %0) local_unnamed_addr #18 comdat {
  %2 = alloca [2 x double], align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #25
  %3 = getelementptr inbounds double, ptr %2, i64 1
  store <2 x double> <double 0xBFE279A74576233F, double 0x3FE279A74576233F>, ptr %2, align 16, !tbaa !93
  br label %5

4:                                                ; preds = %5
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #25
  ret void

5:                                                ; preds = %1, %5
  %6 = phi double [ 0x3FE279A74576233F, %1 ], [ %100, %5 ]
  %7 = phi i1 [ true, %1 ], [ false, %5 ]
  %8 = phi i64 [ 0, %1 ], [ 1, %5 ]
  %9 = phi ptr [ %0, %1 ], [ %191, %5 ]
  %10 = getelementptr inbounds [2 x double], ptr %2, i64 0, i64 %8
  %11 = load double, ptr %10, align 8, !tbaa !93
  %12 = fsub double 1.000000e+00, %11
  %13 = fadd double %11, 1.000000e+00
  store double 0xBFD3E77E4D5E364B, ptr %9, align 8, !tbaa !93
  %14 = getelementptr inbounds double, ptr %9, i64 1
  %15 = getelementptr inbounds double, ptr %9, i64 2
  %16 = getelementptr inbounds double, ptr %9, i64 3
  store double 0x3FD3E77E4D5E364B, ptr %16, align 8, !tbaa !93
  %17 = getelementptr inbounds double, ptr %9, i64 4
  %18 = getelementptr inbounds double, ptr %9, i64 5
  %19 = getelementptr inbounds double, ptr %9, i64 6
  store double 0x3FB5555555736D57, ptr %19, align 8, !tbaa !93
  %20 = getelementptr inbounds double, ptr %9, i64 7
  %21 = insertelement <2 x double> poison, double %13, i64 0
  %22 = shufflevector <2 x double> %21, <2 x double> poison, <2 x i32> zeroinitializer
  %23 = fmul <2 x double> %22, <double 1.250000e-01, double -1.250000e-01>
  %24 = fmul <2 x double> %23, <double 0x3FF93CD3A2BB11A0, double 0x3FDB0CB17513B982>
  store <2 x double> %24, ptr %20, align 8, !tbaa !93
  %25 = getelementptr inbounds double, ptr %9, i64 9
  store double 0xBFB5555555736D57, ptr %25, align 8, !tbaa !93
  %26 = getelementptr inbounds double, ptr %9, i64 10
  %27 = insertelement <2 x double> poison, double %12, i64 0
  %28 = shufflevector <2 x double> %27, <2 x double> poison, <2 x i32> zeroinitializer
  %29 = fmul <2 x double> %28, <double 1.250000e-01, double -1.250000e-01>
  %30 = fmul <2 x double> %29, <double 0x3FF93CD3A2BB11A0, double 0x3FDB0CB17513B982>
  store <2 x double> %30, ptr %26, align 8, !tbaa !93
  %31 = getelementptr inbounds double, ptr %9, i64 12
  store double 0xBFB5555555736D57, ptr %31, align 8, !tbaa !93
  %32 = getelementptr inbounds double, ptr %9, i64 13
  %33 = extractelement <2 x double> %30, i64 1
  store double %33, ptr %32, align 8, !tbaa !93
  %34 = getelementptr inbounds double, ptr %9, i64 14
  %35 = extractelement <2 x double> %30, i64 0
  store double %35, ptr %34, align 8, !tbaa !93
  %36 = getelementptr inbounds double, ptr %9, i64 15
  store double 0x3FB5555555736D57, ptr %36, align 8, !tbaa !93
  %37 = getelementptr inbounds double, ptr %9, i64 16
  %38 = extractelement <2 x double> %24, i64 1
  store double %38, ptr %37, align 8, !tbaa !93
  %39 = getelementptr inbounds double, ptr %9, i64 17
  %40 = extractelement <2 x double> %24, i64 0
  store double %40, ptr %39, align 8, !tbaa !93
  %41 = getelementptr inbounds double, ptr %9, i64 18
  store double 0x3F96DD707E8130AD, ptr %41, align 8, !tbaa !93
  %42 = getelementptr inbounds double, ptr %9, i64 19
  %43 = getelementptr inbounds double, ptr %9, i64 20
  %44 = getelementptr inbounds double, ptr %9, i64 21
  store double 0xBF96DD707E8130AD, ptr %44, align 8, !tbaa !93
  %45 = getelementptr inbounds double, ptr %9, i64 22
  %46 = getelementptr inbounds double, ptr %9, i64 23
  %47 = fsub double 1.000000e+00, %6
  %48 = fadd double %6, 1.000000e+00
  %49 = insertelement <2 x double> %29, double %47, i64 1
  %50 = fmul <2 x double> %49, <double 0x3FDB0CB17513B982, double 0xBFC93CD3A2BB11A0>
  %51 = extractelement <2 x double> %50, i64 0
  store double %51, ptr %45, align 8, !tbaa !93
  store <2 x double> %50, ptr %46, align 8, !tbaa !93
  %52 = extractelement <2 x double> %29, i64 1
  %53 = fmul double %52, %47
  %54 = getelementptr inbounds double, ptr %9, i64 25
  store double %53, ptr %54, align 8, !tbaa !93
  %55 = getelementptr inbounds double, ptr %9, i64 26
  %56 = shufflevector <2 x double> %29, <2 x double> poison, <2 x i32> <i32 1, i32 undef>
  %57 = insertelement <2 x double> %56, double %47, i64 1
  %58 = fmul <2 x double> %57, <double 0x3FF93CD3A2BB11A0, double 0x3FC93CD3A2BB11A0>
  %59 = extractelement <2 x double> %58, i64 0
  store double %59, ptr %14, align 8, !tbaa !93
  store double %59, ptr %15, align 8, !tbaa !93
  store <2 x double> %58, ptr %55, align 8, !tbaa !93
  %60 = extractelement <2 x double> %23, i64 1
  %61 = fmul double %60, %47
  %62 = getelementptr inbounds double, ptr %9, i64 28
  store double %61, ptr %62, align 8, !tbaa !93
  %63 = getelementptr inbounds double, ptr %9, i64 29
  %64 = shufflevector <2 x double> %23, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %65 = insertelement <2 x double> %64, double %47, i64 1
  %66 = fmul <2 x double> %65, <double 0x3FF93CD3A2BB11A0, double 0x3FAB0CB17513B982>
  %67 = extractelement <2 x double> %66, i64 0
  store double %67, ptr %17, align 8, !tbaa !93
  store double %67, ptr %18, align 8, !tbaa !93
  store <2 x double> %66, ptr %63, align 8, !tbaa !93
  %68 = extractelement <2 x double> %23, i64 0
  %69 = fmul double %68, %47
  %70 = getelementptr inbounds double, ptr %9, i64 31
  store double %69, ptr %70, align 8, !tbaa !93
  %71 = getelementptr inbounds double, ptr %9, i64 32
  store double %38, ptr %71, align 8, !tbaa !93
  %72 = getelementptr inbounds double, ptr %9, i64 33
  %73 = shufflevector <2 x double> %29, <2 x double> <double 0xBFAB0CB17513B982, double poison>, <2 x i32> <i32 2, i32 0>
  %74 = insertelement <2 x double> poison, double %47, i64 0
  %75 = shufflevector <2 x double> %74, <2 x double> poison, <2 x i32> zeroinitializer
  %76 = fmul <2 x double> %73, %75
  store <2 x double> %76, ptr %72, align 8, !tbaa !93
  %77 = getelementptr inbounds double, ptr %9, i64 35
  store double %33, ptr %77, align 8, !tbaa !93
  %78 = getelementptr inbounds double, ptr %9, i64 36
  %79 = insertelement <2 x double> %29, double 0xBFC93CD3A2BB11A0, i64 0
  %80 = insertelement <2 x double> poison, double %48, i64 0
  %81 = shufflevector <2 x double> %80, <2 x double> poison, <2 x i32> zeroinitializer
  %82 = fmul <2 x double> %79, %81
  store <2 x double> %82, ptr %78, align 8, !tbaa !93
  %83 = getelementptr inbounds double, ptr %9, i64 38
  store double %35, ptr %83, align 8, !tbaa !93
  %84 = getelementptr inbounds double, ptr %9, i64 39
  %85 = insertelement <2 x double> %23, double 0x3FC93CD3A2BB11A0, i64 0
  %86 = fmul <2 x double> %85, %81
  store <2 x double> %86, ptr %84, align 8, !tbaa !93
  %87 = getelementptr inbounds double, ptr %9, i64 41
  store double %40, ptr %87, align 8, !tbaa !93
  %88 = getelementptr inbounds double, ptr %9, i64 42
  %89 = shufflevector <2 x double> %23, <2 x double> <double 0x3FAB0CB17513B982, double poison>, <2 x i32> <i32 2, i32 0>
  %90 = fmul <2 x double> %89, %81
  store <2 x double> %90, ptr %88, align 8, !tbaa !93
  %91 = getelementptr inbounds double, ptr %9, i64 44
  %92 = insertelement <2 x double> %23, double %48, i64 1
  %93 = fmul <2 x double> %92, <double 0x3FDB0CB17513B982, double 0xBFAB0CB17513B982>
  %94 = extractelement <2 x double> %93, i64 0
  store double %94, ptr %42, align 8, !tbaa !93
  store double %94, ptr %43, align 8, !tbaa !93
  store <2 x double> %93, ptr %91, align 8, !tbaa !93
  %95 = extractelement <2 x double> %29, i64 0
  %96 = fmul double %95, %48
  %97 = getelementptr inbounds double, ptr %9, i64 46
  store double %96, ptr %97, align 8, !tbaa !93
  %98 = getelementptr inbounds double, ptr %9, i64 47
  store double %51, ptr %98, align 8, !tbaa !93
  %99 = getelementptr inbounds double, ptr %9, i64 48
  %100 = load double, ptr %3, align 8, !tbaa !93
  %101 = getelementptr inbounds double, ptr %9, i64 50
  %102 = shufflevector <2 x double> %29, <2 x double> <double poison, double 0x3FF93CD3A2BB11A0>, <2 x i32> <i32 1, i32 3>
  %103 = fmul double %60, 0x3FF93CD3A2BB11A0
  %104 = getelementptr inbounds double, ptr %9, i64 52
  store double %103, ptr %104, align 8, !tbaa !93
  %105 = getelementptr inbounds double, ptr %9, i64 53
  %106 = getelementptr inbounds double, ptr %9, i64 54
  %107 = getelementptr inbounds double, ptr %9, i64 56
  %108 = shufflevector <2 x double> %23, <2 x double> <double poison, double 0x3FF93CD3A2BB11A0>, <2 x i32> <i32 1, i32 3>
  %109 = getelementptr inbounds double, ptr %9, i64 58
  %110 = getelementptr inbounds double, ptr %9, i64 60
  %111 = getelementptr inbounds double, ptr %9, i64 62
  %112 = fsub double 1.000000e+00, %100
  %113 = fmul double %112, 1.250000e-01
  %114 = insertelement <2 x double> poison, double %112, i64 0
  %115 = insertelement <2 x double> %114, double %113, i64 1
  %116 = fmul <2 x double> %102, %115
  store <2 x double> %116, ptr %101, align 8, !tbaa !93
  %117 = insertelement <2 x double> %29, double 0x3FDB0CB17513B982, i64 1
  %118 = fmul <2 x double> %117, %115
  store <2 x double> %118, ptr %111, align 8, !tbaa !93
  %119 = getelementptr inbounds double, ptr %9, i64 64
  %120 = insertelement <2 x double> <double poison, double 0x3FDB0CB17513B982>, double %112, i64 0
  %121 = fmul <2 x double> %23, %120
  %122 = shufflevector <2 x double> %121, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  store <2 x double> %122, ptr %119, align 8, !tbaa !93
  %123 = getelementptr inbounds double, ptr %9, i64 66
  %124 = getelementptr inbounds double, ptr %9, i64 68
  %125 = insertelement <2 x double> %23, double 0x3FDB0CB17513B982, i64 1
  %126 = fmul double %95, 0x3FDB0CB17513B982
  %127 = getelementptr inbounds double, ptr %9, i64 70
  store double %126, ptr %127, align 8, !tbaa !93
  %128 = getelementptr inbounds double, ptr %9, i64 71
  %129 = insertelement <2 x double> poison, double %100, i64 0
  %130 = insertelement <2 x double> %129, double %112, i64 1
  %131 = fadd <2 x double> %130, <double 1.000000e+00, double poison>
  %132 = fmul <2 x double> %130, <double poison, double -1.250000e-01>
  %133 = shufflevector <2 x double> %131, <2 x double> %132, <2 x i32> <i32 0, i32 3>
  %134 = shufflevector <2 x double> %29, <2 x double> %133, <2 x i32> <i32 3, i32 1>
  %135 = fmul <2 x double> %134, <double 0x3FF93CD3A2BB11A0, double 0x3FF93CD3A2BB11A0>
  store <2 x double> %135, ptr %99, align 8, !tbaa !93
  %136 = fmul <2 x double> %134, <double 0x3FDB0CB17513B982, double 0x3FDB0CB17513B982>
  store <2 x double> %136, ptr %110, align 8, !tbaa !93
  %137 = extractelement <2 x double> %131, i64 0
  %138 = fmul double %137, 1.250000e-01
  %139 = fmul double %137, -1.250000e-01
  %140 = insertelement <2 x double> %64, double %138, i64 0
  %141 = fmul <2 x double> %140, <double 0x3FF93CD3A2BB11A0, double 0x3FF93CD3A2BB11A0>
  store <2 x double> %141, ptr %106, align 8, !tbaa !93
  %142 = insertelement <2 x double> %133, double %139, i64 1
  %143 = fmul <2 x double> %108, %142
  store <2 x double> %143, ptr %107, align 8, !tbaa !93
  %144 = shufflevector <2 x double> <double 0x3FF93CD3A2BB11A0, double poison>, <2 x double> %133, <2 x i32> <i32 0, i32 2>
  %145 = fmul <2 x double> %29, %144
  store <2 x double> %145, ptr %109, align 8, !tbaa !93
  %146 = fmul <2 x double> %140, <double 0x3FDB0CB17513B982, double 0x3FDB0CB17513B982>
  store <2 x double> %146, ptr %123, align 8, !tbaa !93
  %147 = fmul <2 x double> %125, %142
  store <2 x double> %147, ptr %124, align 8, !tbaa !93
  %148 = insertelement <2 x double> %29, double %112, i64 1
  %149 = fmul <2 x double> %148, %133
  store <2 x double> %149, ptr %128, align 8, !tbaa !93
  %150 = getelementptr inbounds double, ptr %9, i64 73
  %151 = extractelement <2 x double> %116, i64 0
  store double %151, ptr %150, align 8, !tbaa !93
  %152 = getelementptr inbounds double, ptr %9, i64 74
  store double %151, ptr %152, align 8, !tbaa !93
  %153 = fmul double %113, %112
  %154 = getelementptr inbounds double, ptr %9, i64 75
  store double %153, ptr %154, align 8, !tbaa !93
  %155 = getelementptr inbounds double, ptr %9, i64 76
  %156 = getelementptr inbounds double, ptr %9, i64 77
  %157 = insertelement <2 x double> %64, double %138, i64 1
  %158 = shufflevector <2 x double> %114, <2 x double> poison, <2 x i32> zeroinitializer
  %159 = fmul <2 x double> %157, %158
  %160 = extractelement <2 x double> %159, i64 0
  store double %160, ptr %105, align 8, !tbaa !93
  store double %160, ptr %155, align 8, !tbaa !93
  store <2 x double> %159, ptr %156, align 8, !tbaa !93
  %161 = getelementptr inbounds double, ptr %9, i64 79
  %162 = extractelement <2 x double> %121, i64 0
  store double %162, ptr %161, align 8, !tbaa !93
  %163 = getelementptr inbounds double, ptr %9, i64 80
  %164 = extractelement <2 x double> %143, i64 0
  store double %164, ptr %163, align 8, !tbaa !93
  %165 = fmul double %139, %112
  %166 = getelementptr inbounds double, ptr %9, i64 81
  store double %165, ptr %166, align 8, !tbaa !93
  %167 = getelementptr inbounds double, ptr %9, i64 82
  %168 = extractelement <2 x double> %118, i64 0
  store double %168, ptr %167, align 8, !tbaa !93
  %169 = getelementptr inbounds double, ptr %9, i64 83
  %170 = extractelement <2 x double> %145, i64 1
  store double %170, ptr %169, align 8, !tbaa !93
  %171 = shufflevector <2 x double> %132, <2 x double> poison, <2 x i32> <i32 1, i32 undef>
  %172 = fmul <2 x double> %171, %133
  %173 = extractelement <2 x double> %172, i64 0
  %174 = getelementptr inbounds double, ptr %9, i64 84
  store double %173, ptr %174, align 8, !tbaa !93
  %175 = getelementptr inbounds double, ptr %9, i64 85
  store double %170, ptr %175, align 8, !tbaa !93
  %176 = getelementptr inbounds double, ptr %9, i64 86
  store double %168, ptr %176, align 8, !tbaa !93
  %177 = fmul double %113, %137
  %178 = getelementptr inbounds double, ptr %9, i64 87
  store double %177, ptr %178, align 8, !tbaa !93
  %179 = getelementptr inbounds double, ptr %9, i64 88
  store double %164, ptr %179, align 8, !tbaa !93
  %180 = getelementptr inbounds double, ptr %9, i64 89
  store double %162, ptr %180, align 8, !tbaa !93
  %181 = fmul double %138, %137
  %182 = getelementptr inbounds double, ptr %9, i64 90
  store double %181, ptr %182, align 8, !tbaa !93
  %183 = getelementptr inbounds double, ptr %9, i64 91
  %184 = extractelement <2 x double> %147, i64 0
  store double %184, ptr %183, align 8, !tbaa !93
  %185 = getelementptr inbounds double, ptr %9, i64 92
  store double %184, ptr %185, align 8, !tbaa !93
  %186 = fmul double %139, %137
  %187 = getelementptr inbounds double, ptr %9, i64 93
  store double %186, ptr %187, align 8, !tbaa !93
  %188 = getelementptr inbounds double, ptr %9, i64 94
  %189 = extractelement <2 x double> %149, i64 0
  store double %189, ptr %188, align 8, !tbaa !93
  %190 = getelementptr inbounds double, ptr %9, i64 95
  store double %189, ptr %190, align 8, !tbaa !93
  %191 = getelementptr inbounds double, ptr %9, i64 96
  br i1 %7, label %5, label %4, !llvm.loop !269
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN6miniFE25get_elem_nodes_and_coordsIidEEvRKNS_23simple_mesh_descriptionIT_EES2_PS2_PT0_(ptr noundef nonnull align 8 dereferenceable(192) %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #18 comdat personality ptr @__gxx_personality_v0 {
  %5 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 1
  %6 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 3
  %7 = load i32, ptr %5, align 4, !tbaa !5
  %8 = add nsw i32 %7, 1
  %9 = load i32, ptr %6, align 4, !tbaa !5
  %10 = add nsw i32 %9, 1
  %11 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 3, i32 0, i64 5
  %12 = load i32, ptr %11, align 4, !tbaa !5
  %13 = icmp slt i32 %1, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %4
  %15 = tail call ptr @__cxa_allocate_exception(i64 16) #25
  invoke void @_ZNSt13runtime_errorC1EPKc(ptr noundef nonnull align 8 dereferenceable(16) %15, ptr noundef nonnull @.str.94)
          to label %16 unwind label %17

16:                                               ; preds = %14
  tail call void @__cxa_throw(ptr nonnull %15, ptr nonnull @_ZTISt13runtime_error, ptr nonnull @_ZNSt13runtime_errorD1Ev) #26
  unreachable

17:                                               ; preds = %14
  %18 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_free_exception(ptr %15) #25
  resume { ptr, i32 } %18

19:                                               ; preds = %4
  %20 = mul nsw i32 %9, %7
  %21 = sdiv i32 %1, %20
  %22 = srem i32 %1, %20
  %23 = sdiv i32 %22, %7
  %24 = srem i32 %1, %7
  %25 = or i32 %23, %21
  %26 = or i32 %25, %24
  %27 = icmp sgt i32 %26, -1
  br i1 %27, label %28, label %39

28:                                               ; preds = %19
  %29 = icmp sgt i32 %7, -1
  %30 = icmp sle i32 %23, %9
  %31 = and i1 %29, %30
  %32 = icmp sle i32 %21, %12
  %33 = and i1 %32, %31
  br i1 %33, label %34, label %39

34:                                               ; preds = %28
  %35 = mul i32 %21, %10
  %36 = add i32 %23, %35
  %37 = mul i32 %36, %8
  %38 = add i32 %37, %24
  br label %39

39:                                               ; preds = %19, %28, %34
  %40 = phi i32 [ %38, %34 ], [ -1, %19 ], [ -1, %28 ]
  store i32 %40, ptr %2, align 4, !tbaa !5
  %41 = add nsw i32 %40, 1
  %42 = getelementptr inbounds i32, ptr %2, i64 1
  store i32 %41, ptr %42, align 4, !tbaa !5
  %43 = add nsw i32 %40, %8
  %44 = add nsw i32 %43, 1
  %45 = getelementptr inbounds i32, ptr %2, i64 2
  store i32 %44, ptr %45, align 4, !tbaa !5
  %46 = getelementptr inbounds i32, ptr %2, i64 3
  store i32 %43, ptr %46, align 4, !tbaa !5
  %47 = mul nsw i32 %10, %8
  %48 = add nsw i32 %40, %47
  %49 = getelementptr inbounds i32, ptr %2, i64 4
  store i32 %48, ptr %49, align 4, !tbaa !5
  %50 = add nsw i32 %41, %47
  %51 = getelementptr inbounds i32, ptr %2, i64 5
  store i32 %50, ptr %51, align 4, !tbaa !5
  %52 = add nsw i32 %43, %47
  %53 = add nsw i32 %52, 1
  %54 = getelementptr inbounds i32, ptr %2, i64 6
  store i32 %53, ptr %54, align 4, !tbaa !5
  %55 = getelementptr inbounds i32, ptr %2, i64 7
  store i32 %52, ptr %55, align 4, !tbaa !5
  %56 = getelementptr inbounds %"class.miniFE::simple_mesh_description", ptr %0, i64 0, i32 2
  %57 = tail call noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %40, ptr noundef nonnull align 8 dereferenceable(48) %56)
  store i32 %57, ptr %2, align 4, !tbaa !5
  %58 = load i32, ptr %42, align 4, !tbaa !5
  %59 = tail call noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %58, ptr noundef nonnull align 8 dereferenceable(48) %56)
  store i32 %59, ptr %42, align 4, !tbaa !5
  %60 = load i32, ptr %45, align 4, !tbaa !5
  %61 = tail call noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %60, ptr noundef nonnull align 8 dereferenceable(48) %56)
  store i32 %61, ptr %45, align 4, !tbaa !5
  %62 = load i32, ptr %46, align 4, !tbaa !5
  %63 = tail call noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %62, ptr noundef nonnull align 8 dereferenceable(48) %56)
  store i32 %63, ptr %46, align 4, !tbaa !5
  %64 = load i32, ptr %49, align 4, !tbaa !5
  %65 = tail call noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %64, ptr noundef nonnull align 8 dereferenceable(48) %56)
  store i32 %65, ptr %49, align 4, !tbaa !5
  %66 = load i32, ptr %51, align 4, !tbaa !5
  %67 = tail call noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %66, ptr noundef nonnull align 8 dereferenceable(48) %56)
  store i32 %67, ptr %51, align 4, !tbaa !5
  %68 = load i32, ptr %54, align 4, !tbaa !5
  %69 = tail call noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %68, ptr noundef nonnull align 8 dereferenceable(48) %56)
  store i32 %69, ptr %54, align 4, !tbaa !5
  %70 = load i32, ptr %55, align 4, !tbaa !5
  %71 = tail call noundef i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef %70, ptr noundef nonnull align 8 dereferenceable(48) %56)
  store i32 %71, ptr %55, align 4, !tbaa !5
  %72 = load i32, ptr %11, align 4, !tbaa !5
  %73 = insertelement <2 x i32> poison, i32 %7, i64 0
  %74 = insertelement <2 x i32> %73, i32 %9, i64 1
  %75 = tail call <2 x i32> @llvm.smax.v2i32(<2 x i32> %74, <2 x i32> <i32 1, i32 1>)
  %76 = tail call i32 @llvm.smax.i32(i32 %12, i32 1)
  %77 = sdiv i32 %40, %47
  %78 = sitofp i32 %77 to double
  %79 = sitofp i32 %76 to double
  %80 = fdiv double %78, %79
  %81 = srem i32 %40, %47
  %82 = sdiv i32 %81, %8
  %83 = srem i32 %40, %8
  %84 = sitofp i32 %72 to double
  %85 = fdiv double 1.000000e+00, %84
  %86 = insertelement <2 x i32> poison, i32 %83, i64 0
  %87 = insertelement <2 x i32> %86, i32 %82, i64 1
  %88 = sitofp <2 x i32> %87 to <2 x double>
  %89 = sitofp <2 x i32> %75 to <2 x double>
  %90 = fdiv <2 x double> %88, %89
  store <2 x double> %90, ptr %3, align 8, !tbaa !93
  %91 = getelementptr inbounds double, ptr %3, i64 2
  store double %80, ptr %91, align 8, !tbaa !93
  %92 = getelementptr inbounds double, ptr %3, i64 3
  %93 = getelementptr inbounds double, ptr %3, i64 4
  %94 = extractelement <2 x double> %90, i64 1
  store double %94, ptr %93, align 8, !tbaa !93
  %95 = getelementptr inbounds double, ptr %3, i64 5
  store double %80, ptr %95, align 8, !tbaa !93
  %96 = getelementptr inbounds double, ptr %3, i64 6
  %97 = load <4 x i32>, ptr %5, align 4
  %98 = shufflevector <4 x i32> %97, <4 x i32> poison, <2 x i32> <i32 0, i32 undef>
  %99 = load i32, ptr %6, align 4, !tbaa !5
  %100 = insertelement <2 x i32> %98, i32 %99, i64 1
  %101 = sitofp <2 x i32> %100 to <2 x double>
  %102 = fdiv <2 x double> <double 1.000000e+00, double 1.000000e+00>, %101
  %103 = fadd <2 x double> %102, %90
  %104 = extractelement <2 x double> %103, i64 0
  store double %104, ptr %92, align 8, !tbaa !93
  store <2 x double> %103, ptr %96, align 8, !tbaa !93
  %105 = getelementptr inbounds double, ptr %3, i64 8
  store double %80, ptr %105, align 8, !tbaa !93
  %106 = getelementptr inbounds double, ptr %3, i64 9
  %107 = extractelement <2 x double> %90, i64 0
  store double %107, ptr %106, align 8, !tbaa !93
  %108 = getelementptr inbounds double, ptr %3, i64 10
  %109 = extractelement <2 x double> %103, i64 1
  store double %109, ptr %108, align 8, !tbaa !93
  %110 = getelementptr inbounds double, ptr %3, i64 11
  store double %80, ptr %110, align 8, !tbaa !93
  %111 = getelementptr inbounds double, ptr %3, i64 12
  store <2 x double> %90, ptr %111, align 8, !tbaa !93
  %112 = fadd double %85, %80
  %113 = getelementptr inbounds double, ptr %3, i64 14
  store double %112, ptr %113, align 8, !tbaa !93
  %114 = getelementptr inbounds double, ptr %3, i64 15
  store double %104, ptr %114, align 8, !tbaa !93
  %115 = getelementptr inbounds double, ptr %3, i64 16
  store double %94, ptr %115, align 8, !tbaa !93
  %116 = getelementptr inbounds double, ptr %3, i64 17
  store double %112, ptr %116, align 8, !tbaa !93
  %117 = getelementptr inbounds double, ptr %3, i64 18
  store <2 x double> %103, ptr %117, align 8, !tbaa !93
  %118 = getelementptr inbounds double, ptr %3, i64 20
  store double %112, ptr %118, align 8, !tbaa !93
  %119 = getelementptr inbounds double, ptr %3, i64 21
  store double %107, ptr %119, align 8, !tbaa !93
  %120 = getelementptr inbounds double, ptr %3, i64 22
  store double %109, ptr %120, align 8, !tbaa !93
  %121 = getelementptr inbounds double, ptr %3, i64 23
  store double %112, ptr %121, align 8, !tbaa !93
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN6miniFE4Hex820diffusionMatrix_symmIdEEvPKT_S4_PS2_(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #18 comdat {
  %4 = alloca [2 x double], align 16
  %5 = alloca double, align 8
  %6 = alloca [8 x double], align 16
  %7 = alloca [8 x double], align 16
  %8 = alloca [8 x double], align 16
  %9 = alloca [9 x double], align 16
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(288) %2, i8 0, i64 288, i1 false), !tbaa !93
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #25
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, ptr %4, align 16, !tbaa !93
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #25
  store double 0.000000e+00, ptr %5, align 8, !tbaa !93
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %6) #25
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %7) #25
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %8) #25
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %9) #25
  %10 = getelementptr inbounds [9 x double], ptr %9, i64 0, i64 2
  %11 = getelementptr inbounds [9 x double], ptr %9, i64 0, i64 3
  %12 = getelementptr inbounds [9 x double], ptr %9, i64 0, i64 5
  %13 = getelementptr inbounds [9 x double], ptr %9, i64 0, i64 6
  %14 = getelementptr inbounds [9 x double], ptr %9, i64 0, i64 8
  %15 = getelementptr inbounds [8 x double], ptr %6, i64 0, i64 2
  %16 = getelementptr inbounds [8 x double], ptr %7, i64 0, i64 2
  %17 = getelementptr inbounds [8 x double], ptr %8, i64 0, i64 2
  %18 = getelementptr inbounds [8 x double], ptr %6, i64 0, i64 4
  %19 = getelementptr inbounds [8 x double], ptr %7, i64 0, i64 4
  %20 = getelementptr inbounds [8 x double], ptr %8, i64 0, i64 4
  %21 = getelementptr inbounds [8 x double], ptr %6, i64 0, i64 6
  %22 = getelementptr inbounds [8 x double], ptr %7, i64 0, i64 6
  %23 = getelementptr inbounds [8 x double], ptr %8, i64 0, i64 6
  br label %25

24:                                               ; preds = %31
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %9) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %8) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %7) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %6) #25
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #25
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #25
  ret void

25:                                               ; preds = %3, %31
  %26 = phi i64 [ 0, %3 ], [ %213, %31 ]
  %27 = phi i1 [ true, %3 ], [ false, %31 ]
  %28 = phi i64 [ 0, %3 ], [ 1, %31 ]
  %29 = getelementptr inbounds [2 x double], ptr %4, i64 0, i64 %28
  %30 = load double, ptr %29, align 8, !tbaa !93
  br label %32

31:                                               ; preds = %39
  br i1 %27, label %25, label %24, !llvm.loop !270

32:                                               ; preds = %25, %39
  %33 = phi i64 [ %26, %25 ], [ %213, %39 ]
  %34 = phi i1 [ true, %25 ], [ false, %39 ]
  %35 = phi i64 [ 0, %25 ], [ 1, %39 ]
  %36 = getelementptr inbounds [2 x double], ptr %4, i64 0, i64 %35
  %37 = load double, ptr %36, align 8, !tbaa !93
  %38 = fmul double %30, %37
  br label %40

39:                                               ; preds = %212
  br i1 %34, label %32, label %31, !llvm.loop !271

40:                                               ; preds = %32, %212
  %41 = phi i64 [ %33, %32 ], [ %213, %212 ]
  %42 = phi i1 [ true, %32 ], [ false, %212 ]
  %43 = phi i64 [ 0, %32 ], [ 1, %212 ]
  %44 = getelementptr inbounds [2 x double], ptr %4, i64 0, i64 %43
  %45 = load double, ptr %44, align 8, !tbaa !93
  %46 = getelementptr inbounds double, ptr %1, i64 %41
  call void @_ZN6miniFE4Hex827gradients_and_invJ_and_detJIdEEvPKT_S4_PS2_RS2_(ptr noundef %0, ptr noundef %46, ptr noundef nonnull %9, ptr noundef nonnull align 8 dereferenceable(8) %5)
  %47 = load double, ptr %5, align 8, !tbaa !93
  %48 = load <2 x double>, ptr %10, align 16
  %49 = load <2 x double>, ptr %12, align 8
  %50 = load double, ptr %14, align 16, !tbaa !93
  %51 = getelementptr inbounds double, ptr %46, i64 1
  %52 = getelementptr inbounds double, ptr %46, i64 2
  %53 = getelementptr inbounds double, ptr %46, i64 3
  %54 = getelementptr inbounds double, ptr %53, i64 1
  %55 = getelementptr inbounds double, ptr %53, i64 2
  %56 = load <2 x double>, ptr %9, align 16, !tbaa !93
  %57 = shufflevector <2 x double> %48, <2 x double> poison, <2 x i32> zeroinitializer
  %58 = load <2 x double>, ptr %11, align 8, !tbaa !93
  %59 = shufflevector <2 x double> %49, <2 x double> poison, <2 x i32> zeroinitializer
  %60 = load <2 x double>, ptr %13, align 16, !tbaa !93
  %61 = load double, ptr %46, align 8, !tbaa !93
  %62 = load double, ptr %51, align 8, !tbaa !93
  %63 = load double, ptr %52, align 8, !tbaa !93
  %64 = load double, ptr %53, align 8, !tbaa !93
  %65 = load double, ptr %54, align 8, !tbaa !93
  %66 = load double, ptr %55, align 8, !tbaa !93
  %67 = insertelement <2 x double> poison, double %64, i64 0
  %68 = insertelement <2 x double> %67, double %62, i64 1
  %69 = fmul <2 x double> %68, %56
  %70 = shufflevector <2 x double> %69, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %71 = insertelement <2 x double> poison, double %61, i64 0
  %72 = insertelement <2 x double> %71, double %65, i64 1
  %73 = fmul <2 x double> %72, %56
  %74 = fadd <2 x double> %70, %73
  %75 = insertelement <2 x double> poison, double %63, i64 0
  %76 = insertelement <2 x double> %75, double %66, i64 1
  %77 = fmul <2 x double> %76, %57
  %78 = fadd <2 x double> %74, %77
  store <2 x double> %78, ptr %6, align 16, !tbaa !93
  %79 = fmul <2 x double> %68, %58
  %80 = shufflevector <2 x double> %79, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %81 = fmul <2 x double> %72, %58
  %82 = fadd <2 x double> %80, %81
  %83 = fmul <2 x double> %76, %59
  %84 = fadd <2 x double> %82, %83
  store <2 x double> %84, ptr %7, align 16, !tbaa !93
  %85 = fmul <2 x double> %68, %60
  %86 = shufflevector <2 x double> %85, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %87 = fmul <2 x double> %72, %60
  %88 = fadd <2 x double> %86, %87
  %89 = insertelement <2 x double> poison, double %50, i64 0
  %90 = shufflevector <2 x double> %89, <2 x double> poison, <2 x i32> zeroinitializer
  %91 = fmul <2 x double> %76, %90
  %92 = fadd <2 x double> %88, %91
  store <2 x double> %92, ptr %8, align 16, !tbaa !93
  %93 = getelementptr inbounds double, ptr %53, i64 3
  %94 = getelementptr inbounds double, ptr %93, i64 1
  %95 = getelementptr inbounds double, ptr %93, i64 2
  %96 = getelementptr inbounds double, ptr %93, i64 3
  %97 = getelementptr inbounds double, ptr %96, i64 1
  %98 = getelementptr inbounds double, ptr %96, i64 2
  %99 = load double, ptr %93, align 8, !tbaa !93
  %100 = load double, ptr %94, align 8, !tbaa !93
  %101 = load double, ptr %95, align 8, !tbaa !93
  %102 = load double, ptr %96, align 8, !tbaa !93
  %103 = load double, ptr %97, align 8, !tbaa !93
  %104 = load double, ptr %98, align 8, !tbaa !93
  %105 = insertelement <2 x double> poison, double %102, i64 0
  %106 = insertelement <2 x double> %105, double %100, i64 1
  %107 = fmul <2 x double> %106, %56
  %108 = shufflevector <2 x double> %107, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %109 = insertelement <2 x double> poison, double %99, i64 0
  %110 = insertelement <2 x double> %109, double %103, i64 1
  %111 = fmul <2 x double> %110, %56
  %112 = fadd <2 x double> %108, %111
  %113 = insertelement <2 x double> poison, double %101, i64 0
  %114 = insertelement <2 x double> %113, double %104, i64 1
  %115 = fmul <2 x double> %114, %57
  %116 = fadd <2 x double> %112, %115
  store <2 x double> %116, ptr %15, align 16, !tbaa !93
  %117 = fmul <2 x double> %106, %58
  %118 = shufflevector <2 x double> %117, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %119 = fmul <2 x double> %110, %58
  %120 = fadd <2 x double> %118, %119
  %121 = fmul <2 x double> %114, %59
  %122 = fadd <2 x double> %120, %121
  store <2 x double> %122, ptr %16, align 16, !tbaa !93
  %123 = fmul <2 x double> %106, %60
  %124 = shufflevector <2 x double> %123, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %125 = fmul <2 x double> %110, %60
  %126 = fadd <2 x double> %124, %125
  %127 = fmul <2 x double> %114, %90
  %128 = fadd <2 x double> %126, %127
  store <2 x double> %128, ptr %17, align 16, !tbaa !93
  %129 = getelementptr inbounds double, ptr %96, i64 3
  %130 = getelementptr inbounds double, ptr %129, i64 1
  %131 = getelementptr inbounds double, ptr %129, i64 2
  %132 = getelementptr inbounds double, ptr %129, i64 3
  %133 = getelementptr inbounds double, ptr %132, i64 1
  %134 = getelementptr inbounds double, ptr %132, i64 2
  %135 = load double, ptr %129, align 8, !tbaa !93
  %136 = load double, ptr %130, align 8, !tbaa !93
  %137 = load double, ptr %131, align 8, !tbaa !93
  %138 = load double, ptr %132, align 8, !tbaa !93
  %139 = load double, ptr %133, align 8, !tbaa !93
  %140 = load double, ptr %134, align 8, !tbaa !93
  %141 = insertelement <2 x double> poison, double %138, i64 0
  %142 = insertelement <2 x double> %141, double %136, i64 1
  %143 = fmul <2 x double> %142, %56
  %144 = shufflevector <2 x double> %143, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %145 = insertelement <2 x double> poison, double %135, i64 0
  %146 = insertelement <2 x double> %145, double %139, i64 1
  %147 = fmul <2 x double> %146, %56
  %148 = fadd <2 x double> %144, %147
  %149 = insertelement <2 x double> poison, double %137, i64 0
  %150 = insertelement <2 x double> %149, double %140, i64 1
  %151 = fmul <2 x double> %150, %57
  %152 = fadd <2 x double> %148, %151
  store <2 x double> %152, ptr %18, align 16, !tbaa !93
  %153 = fmul <2 x double> %142, %58
  %154 = shufflevector <2 x double> %153, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %155 = fmul <2 x double> %146, %58
  %156 = fadd <2 x double> %154, %155
  %157 = fmul <2 x double> %150, %59
  %158 = fadd <2 x double> %156, %157
  store <2 x double> %158, ptr %19, align 16, !tbaa !93
  %159 = fmul <2 x double> %142, %60
  %160 = shufflevector <2 x double> %159, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %161 = fmul <2 x double> %146, %60
  %162 = fadd <2 x double> %160, %161
  %163 = fmul <2 x double> %150, %90
  %164 = fadd <2 x double> %162, %163
  store <2 x double> %164, ptr %20, align 16, !tbaa !93
  %165 = getelementptr inbounds double, ptr %132, i64 3
  %166 = getelementptr inbounds double, ptr %165, i64 1
  %167 = getelementptr inbounds double, ptr %165, i64 2
  %168 = getelementptr inbounds double, ptr %165, i64 3
  %169 = getelementptr inbounds double, ptr %168, i64 1
  %170 = getelementptr inbounds double, ptr %168, i64 2
  %171 = load double, ptr %165, align 8, !tbaa !93
  %172 = load double, ptr %166, align 8, !tbaa !93
  %173 = load double, ptr %167, align 8, !tbaa !93
  %174 = load double, ptr %168, align 8, !tbaa !93
  %175 = load double, ptr %169, align 8, !tbaa !93
  %176 = load double, ptr %170, align 8, !tbaa !93
  %177 = insertelement <2 x double> poison, double %174, i64 0
  %178 = insertelement <2 x double> %177, double %172, i64 1
  %179 = fmul <2 x double> %178, %56
  %180 = shufflevector <2 x double> %179, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %181 = insertelement <2 x double> poison, double %171, i64 0
  %182 = insertelement <2 x double> %181, double %175, i64 1
  %183 = fmul <2 x double> %182, %56
  %184 = fadd <2 x double> %180, %183
  %185 = insertelement <2 x double> poison, double %173, i64 0
  %186 = insertelement <2 x double> %185, double %176, i64 1
  %187 = fmul <2 x double> %186, %57
  %188 = fadd <2 x double> %184, %187
  store <2 x double> %188, ptr %21, align 16, !tbaa !93
  %189 = fmul <2 x double> %178, %58
  %190 = shufflevector <2 x double> %189, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %191 = fmul <2 x double> %182, %58
  %192 = fadd <2 x double> %190, %191
  %193 = fmul <2 x double> %186, %59
  %194 = fadd <2 x double> %192, %193
  store <2 x double> %194, ptr %22, align 16, !tbaa !93
  %195 = fmul <2 x double> %178, %60
  %196 = shufflevector <2 x double> %195, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %197 = fmul <2 x double> %182, %60
  %198 = fadd <2 x double> %196, %197
  %199 = fmul <2 x double> %186, %90
  %200 = fadd <2 x double> %198, %199
  store <2 x double> %200, ptr %23, align 16, !tbaa !93
  %201 = fmul double %38, %45
  %202 = fmul double %201, %47
  %203 = insertelement <2 x double> poison, double %202, i64 0
  %204 = shufflevector <2 x double> %203, <2 x double> poison, <2 x i32> zeroinitializer
  br label %214

205:                                              ; preds = %277, %272
  %206 = phi i64 [ %244, %272 ], [ %296, %277 ]
  %207 = trunc i64 %206 to i32
  br label %208

208:                                              ; preds = %205, %214
  %209 = phi i32 [ %236, %214 ], [ %207, %205 ]
  %210 = add nuw nsw i64 %216, 1
  %211 = icmp eq i64 %235, 8
  br i1 %211, label %212, label %214, !llvm.loop !272

212:                                              ; preds = %208
  %213 = add i64 %41, 24
  br i1 %42, label %40, label %39, !llvm.loop !273

214:                                              ; preds = %40, %208
  %215 = phi i64 [ 0, %40 ], [ %235, %208 ]
  %216 = phi i64 [ 1, %40 ], [ %210, %208 ]
  %217 = phi i32 [ 0, %40 ], [ %209, %208 ]
  %218 = sub nsw i64 7, %215
  %219 = getelementptr inbounds [8 x double], ptr %6, i64 0, i64 %215
  %220 = load double, ptr %219, align 8, !tbaa !93
  %221 = getelementptr inbounds [8 x double], ptr %7, i64 0, i64 %215
  %222 = load double, ptr %221, align 8, !tbaa !93
  %223 = getelementptr inbounds [8 x double], ptr %8, i64 0, i64 %215
  %224 = load double, ptr %223, align 8, !tbaa !93
  %225 = fmul double %220, %220
  %226 = fmul double %222, %222
  %227 = fadd double %225, %226
  %228 = fmul double %224, %224
  %229 = fadd double %227, %228
  %230 = fmul double %202, %229
  %231 = sext i32 %217 to i64
  %232 = getelementptr inbounds double, ptr %2, i64 %231
  %233 = load double, ptr %232, align 8, !tbaa !93
  %234 = fadd double %233, %230
  store double %234, ptr %232, align 8, !tbaa !93
  %235 = add nuw nsw i64 %215, 1
  %236 = add i32 %217, 1
  %237 = icmp ult i64 %215, 7
  br i1 %237, label %238, label %208

238:                                              ; preds = %214
  %239 = sext i32 %236 to i64
  %240 = icmp ult i64 %218, 2
  br i1 %240, label %274, label %241

241:                                              ; preds = %238
  %242 = and i64 %218, -2
  %243 = add i64 %216, %242
  %244 = add i64 %242, %239
  %245 = insertelement <2 x double> poison, double %220, i64 0
  %246 = shufflevector <2 x double> %245, <2 x double> poison, <2 x i32> zeroinitializer
  %247 = insertelement <2 x double> poison, double %222, i64 0
  %248 = shufflevector <2 x double> %247, <2 x double> poison, <2 x i32> zeroinitializer
  %249 = insertelement <2 x double> poison, double %224, i64 0
  %250 = shufflevector <2 x double> %249, <2 x double> poison, <2 x i32> zeroinitializer
  br label %251

251:                                              ; preds = %251, %241
  %252 = phi i64 [ 0, %241 ], [ %270, %251 ]
  %253 = add i64 %252, %239
  %254 = add i64 %216, %252
  %255 = getelementptr inbounds [8 x double], ptr %6, i64 0, i64 %254
  %256 = load <2 x double>, ptr %255, align 8, !tbaa !93
  %257 = fmul <2 x double> %246, %256
  %258 = getelementptr inbounds [8 x double], ptr %7, i64 0, i64 %254
  %259 = load <2 x double>, ptr %258, align 8, !tbaa !93
  %260 = fmul <2 x double> %248, %259
  %261 = fadd <2 x double> %257, %260
  %262 = getelementptr inbounds [8 x double], ptr %8, i64 0, i64 %254
  %263 = load <2 x double>, ptr %262, align 8, !tbaa !93
  %264 = fmul <2 x double> %250, %263
  %265 = fadd <2 x double> %261, %264
  %266 = fmul <2 x double> %204, %265
  %267 = getelementptr inbounds double, ptr %2, i64 %253
  %268 = load <2 x double>, ptr %267, align 8, !tbaa !93
  %269 = fadd <2 x double> %268, %266
  store <2 x double> %269, ptr %267, align 8, !tbaa !93
  %270 = add nuw i64 %252, 2
  %271 = icmp eq i64 %270, %242
  br i1 %271, label %272, label %251, !llvm.loop !274

272:                                              ; preds = %251
  %273 = icmp eq i64 %218, %242
  br i1 %273, label %205, label %274

274:                                              ; preds = %238, %272
  %275 = phi i64 [ %216, %238 ], [ %243, %272 ]
  %276 = phi i64 [ %239, %238 ], [ %244, %272 ]
  br label %277

277:                                              ; preds = %274, %277
  %278 = phi i64 [ %295, %277 ], [ %275, %274 ]
  %279 = phi i64 [ %296, %277 ], [ %276, %274 ]
  %280 = getelementptr inbounds [8 x double], ptr %6, i64 0, i64 %278
  %281 = load double, ptr %280, align 8, !tbaa !93
  %282 = fmul double %220, %281
  %283 = getelementptr inbounds [8 x double], ptr %7, i64 0, i64 %278
  %284 = load double, ptr %283, align 8, !tbaa !93
  %285 = fmul double %222, %284
  %286 = fadd double %282, %285
  %287 = getelementptr inbounds [8 x double], ptr %8, i64 0, i64 %278
  %288 = load double, ptr %287, align 8, !tbaa !93
  %289 = fmul double %224, %288
  %290 = fadd double %286, %289
  %291 = fmul double %202, %290
  %292 = getelementptr inbounds double, ptr %2, i64 %279
  %293 = load double, ptr %292, align 8, !tbaa !93
  %294 = fadd double %293, %291
  store double %294, ptr %292, align 8, !tbaa !93
  %295 = add nuw nsw i64 %278, 1
  %296 = add nsw i64 %279, 1
  %297 = icmp eq i64 %295, 8
  br i1 %297, label %205, label %277, !llvm.loop !275
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN6miniFE4Hex812sourceVectorIdEEvPKT_S4_PS2_(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #18 comdat {
  %4 = alloca double, align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %2, i8 0, i64 64, i1 false), !tbaa !93
  %5 = getelementptr inbounds double, ptr %2, i64 2
  %6 = getelementptr inbounds double, ptr %2, i64 4
  %7 = getelementptr inbounds double, ptr %2, i64 6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #25
  call void @_ZN6miniFE4Hex818gradients_and_detJIdEEvPKT_S4_RS2_(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(8) %4)
  %8 = load double, ptr %4, align 8, !tbaa !93
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #25
  %9 = getelementptr inbounds double, ptr %1, i64 24
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #25
  %10 = load <2 x double>, ptr %2, align 8, !tbaa !93
  %11 = insertelement <2 x double> poison, double %8, i64 0
  %12 = shufflevector <2 x double> %11, <2 x double> poison, <2 x i32> zeroinitializer
  %13 = fmul <2 x double> %12, <double 0x3FDF6560B9C788BC, double 0x3FC0D337C1E9C7B5>
  %14 = fadd <2 x double> %10, %13
  store <2 x double> %14, ptr %2, align 8, !tbaa !93
  %15 = load <2 x double>, ptr %6, align 8, !tbaa !93
  %16 = fmul <2 x double> %12, <double 0x3FC0D337C1E9C7B6, double 0x3FA208764E269688>
  %17 = fadd <2 x double> %15, %16
  store <2 x double> %17, ptr %6, align 8, !tbaa !93
  %18 = load <2 x double>, ptr %5, align 8, !tbaa !93
  %19 = fmul <2 x double> %12, <double 0x3FC0D337C1E9C7B5, double 0x3FA208764E269688>
  %20 = shufflevector <2 x double> %19, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %21 = fadd <2 x double> %18, %20
  store <2 x double> %21, ptr %5, align 8, !tbaa !93
  %22 = load <2 x double>, ptr %7, align 8, !tbaa !93
  %23 = fmul <2 x double> %12, <double 0x3FA208764E269688, double 0x3F8353E8C16A6895>
  %24 = shufflevector <2 x double> %23, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %25 = fadd <2 x double> %22, %24
  store <2 x double> %25, ptr %7, align 8, !tbaa !93
  call void @_ZN6miniFE4Hex818gradients_and_detJIdEEvPKT_S4_RS2_(ptr noundef %0, ptr noundef nonnull %9, ptr noundef nonnull align 8 dereferenceable(8) %4)
  %26 = load double, ptr %4, align 8, !tbaa !93
  %27 = insertelement <2 x double> poison, double %26, i64 0
  %28 = shufflevector <2 x double> %27, <2 x double> poison, <2 x i32> zeroinitializer
  %29 = fmul <2 x double> %28, <double 0x3FC0D337C1E9C7B6, double 0x3FA208764E269688>
  %30 = load <2 x double>, ptr %2, align 8, !tbaa !93
  %31 = fadd <2 x double> %30, %29
  store <2 x double> %31, ptr %2, align 8, !tbaa !93
  %32 = fmul <2 x double> %28, <double 0x3FA208764E269688, double 0x3F8353E8C16A6895>
  %33 = shufflevector <2 x double> %32, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %34 = load <2 x double>, ptr %5, align 8, !tbaa !93
  %35 = fadd <2 x double> %34, %33
  store <2 x double> %35, ptr %5, align 8, !tbaa !93
  %36 = fmul <2 x double> %28, <double 0x3FDF6560B9C788BC, double 0x3FC0D337C1E9C7B5>
  %37 = load <2 x double>, ptr %6, align 8, !tbaa !93
  %38 = fadd <2 x double> %37, %36
  store <2 x double> %38, ptr %6, align 8, !tbaa !93
  %39 = fmul <2 x double> %28, <double 0x3FC0D337C1E9C7B5, double 0x3FA208764E269688>
  %40 = shufflevector <2 x double> %39, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %41 = load <2 x double>, ptr %7, align 8, !tbaa !93
  %42 = fadd <2 x double> %41, %40
  store <2 x double> %42, ptr %7, align 8, !tbaa !93
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #25
  %43 = getelementptr inbounds double, ptr %1, i64 48
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #25
  call void @_ZN6miniFE4Hex818gradients_and_detJIdEEvPKT_S4_RS2_(ptr noundef %0, ptr noundef nonnull %43, ptr noundef nonnull align 8 dereferenceable(8) %4)
  %44 = load double, ptr %4, align 8, !tbaa !93
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #25
  %45 = getelementptr inbounds double, ptr %1, i64 72
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #25
  %46 = load <2 x double>, ptr %2, align 8, !tbaa !93
  %47 = insertelement <2 x double> poison, double %44, i64 0
  %48 = shufflevector <2 x double> %47, <2 x double> poison, <2 x i32> zeroinitializer
  %49 = fmul <2 x double> %48, <double 0x3FC0D337C1E9C7B5, double 0x3FA208764E269688>
  %50 = fadd <2 x double> %46, %49
  store <2 x double> %50, ptr %2, align 8, !tbaa !93
  %51 = load <2 x double>, ptr %6, align 8, !tbaa !93
  %52 = fmul <2 x double> %48, <double 0x3FA208764E269688, double 0x3F8353E8C16A6895>
  %53 = fadd <2 x double> %51, %52
  store <2 x double> %53, ptr %6, align 8, !tbaa !93
  %54 = load <2 x double>, ptr %5, align 8, !tbaa !93
  %55 = fmul <2 x double> %48, <double 0x3FDF6560B9C788BC, double 0x3FC0D337C1E9C7B5>
  %56 = shufflevector <2 x double> %55, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %57 = fadd <2 x double> %54, %56
  store <2 x double> %57, ptr %5, align 8, !tbaa !93
  %58 = load <2 x double>, ptr %7, align 8, !tbaa !93
  %59 = fmul <2 x double> %48, <double 0x3FC0D337C1E9C7B6, double 0x3FA208764E269688>
  %60 = shufflevector <2 x double> %59, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %61 = fadd <2 x double> %58, %60
  store <2 x double> %61, ptr %7, align 8, !tbaa !93
  call void @_ZN6miniFE4Hex818gradients_and_detJIdEEvPKT_S4_RS2_(ptr noundef %0, ptr noundef nonnull %45, ptr noundef nonnull align 8 dereferenceable(8) %4)
  %62 = load double, ptr %4, align 8, !tbaa !93
  %63 = insertelement <2 x double> poison, double %62, i64 0
  %64 = shufflevector <2 x double> %63, <2 x double> poison, <2 x i32> zeroinitializer
  %65 = fmul <2 x double> %64, <double 0x3FA208764E269688, double 0x3F8353E8C16A6895>
  %66 = load <2 x double>, ptr %2, align 8, !tbaa !93
  %67 = fadd <2 x double> %66, %65
  store <2 x double> %67, ptr %2, align 8, !tbaa !93
  %68 = fmul <2 x double> %64, <double 0x3FC0D337C1E9C7B6, double 0x3FA208764E269688>
  %69 = shufflevector <2 x double> %68, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %70 = load <2 x double>, ptr %5, align 8, !tbaa !93
  %71 = fadd <2 x double> %70, %69
  store <2 x double> %71, ptr %5, align 8, !tbaa !93
  %72 = fmul <2 x double> %64, <double 0x3FC0D337C1E9C7B5, double 0x3FA208764E269688>
  %73 = load <2 x double>, ptr %6, align 8, !tbaa !93
  %74 = fadd <2 x double> %73, %72
  store <2 x double> %74, ptr %6, align 8, !tbaa !93
  %75 = fmul <2 x double> %64, <double 0x3FDF6560B9C788BC, double 0x3FC0D337C1E9C7B5>
  %76 = shufflevector <2 x double> %75, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %77 = load <2 x double>, ptr %7, align 8, !tbaa !93
  %78 = fadd <2 x double> %77, %76
  store <2 x double> %78, ptr %7, align 8, !tbaa !93
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #25
  %79 = getelementptr inbounds double, ptr %1, i64 96
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #25
  call void @_ZN6miniFE4Hex818gradients_and_detJIdEEvPKT_S4_RS2_(ptr noundef %0, ptr noundef nonnull %79, ptr noundef nonnull align 8 dereferenceable(8) %4)
  %80 = load double, ptr %4, align 8, !tbaa !93
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #25
  %81 = getelementptr inbounds double, ptr %1, i64 120
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #25
  %82 = load <2 x double>, ptr %2, align 8, !tbaa !93
  %83 = insertelement <2 x double> poison, double %80, i64 0
  %84 = shufflevector <2 x double> %83, <2 x double> poison, <2 x i32> zeroinitializer
  %85 = fmul <2 x double> %84, <double 0x3FC0D337C1E9C7B5, double 0x3FDF6560B9C788BC>
  %86 = fadd <2 x double> %82, %85
  store <2 x double> %86, ptr %2, align 8, !tbaa !93
  %87 = load <2 x double>, ptr %6, align 8, !tbaa !93
  %88 = fmul <2 x double> %84, <double 0x3FA208764E269688, double 0x3FC0D337C1E9C7B6>
  %89 = fadd <2 x double> %87, %88
  store <2 x double> %89, ptr %6, align 8, !tbaa !93
  %90 = load <2 x double>, ptr %5, align 8, !tbaa !93
  %91 = fmul <2 x double> %84, <double 0x3FA208764E269688, double 0x3FC0D337C1E9C7B5>
  %92 = shufflevector <2 x double> %91, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %93 = fadd <2 x double> %90, %92
  store <2 x double> %93, ptr %5, align 8, !tbaa !93
  %94 = load <2 x double>, ptr %7, align 8, !tbaa !93
  %95 = fmul <2 x double> %84, <double 0x3F8353E8C16A6895, double 0x3FA208764E269688>
  %96 = shufflevector <2 x double> %95, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %97 = fadd <2 x double> %94, %96
  store <2 x double> %97, ptr %7, align 8, !tbaa !93
  call void @_ZN6miniFE4Hex818gradients_and_detJIdEEvPKT_S4_RS2_(ptr noundef %0, ptr noundef nonnull %81, ptr noundef nonnull align 8 dereferenceable(8) %4)
  %98 = load double, ptr %4, align 8, !tbaa !93
  %99 = insertelement <2 x double> poison, double %98, i64 0
  %100 = shufflevector <2 x double> %99, <2 x double> poison, <2 x i32> zeroinitializer
  %101 = fmul <2 x double> %100, <double 0x3FA208764E269688, double 0x3FC0D337C1E9C7B6>
  %102 = load <2 x double>, ptr %2, align 8, !tbaa !93
  %103 = fadd <2 x double> %102, %101
  store <2 x double> %103, ptr %2, align 8, !tbaa !93
  %104 = fmul <2 x double> %100, <double 0x3F8353E8C16A6895, double 0x3FA208764E269688>
  %105 = shufflevector <2 x double> %104, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %106 = load <2 x double>, ptr %5, align 8, !tbaa !93
  %107 = fadd <2 x double> %106, %105
  store <2 x double> %107, ptr %5, align 8, !tbaa !93
  %108 = fmul <2 x double> %100, <double 0x3FC0D337C1E9C7B5, double 0x3FDF6560B9C788BC>
  %109 = load <2 x double>, ptr %6, align 8, !tbaa !93
  %110 = fadd <2 x double> %109, %108
  store <2 x double> %110, ptr %6, align 8, !tbaa !93
  %111 = fmul <2 x double> %100, <double 0x3FA208764E269688, double 0x3FC0D337C1E9C7B5>
  %112 = shufflevector <2 x double> %111, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %113 = load <2 x double>, ptr %7, align 8, !tbaa !93
  %114 = fadd <2 x double> %113, %112
  store <2 x double> %114, ptr %7, align 8, !tbaa !93
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #25
  %115 = getelementptr inbounds double, ptr %1, i64 144
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #25
  call void @_ZN6miniFE4Hex818gradients_and_detJIdEEvPKT_S4_RS2_(ptr noundef %0, ptr noundef nonnull %115, ptr noundef nonnull align 8 dereferenceable(8) %4)
  %116 = load double, ptr %4, align 8, !tbaa !93
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #25
  %117 = getelementptr inbounds double, ptr %1, i64 168
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #25
  %118 = load <2 x double>, ptr %2, align 8, !tbaa !93
  %119 = insertelement <2 x double> poison, double %116, i64 0
  %120 = shufflevector <2 x double> %119, <2 x double> poison, <2 x i32> zeroinitializer
  %121 = fmul <2 x double> %120, <double 0x3FA208764E269688, double 0x3FC0D337C1E9C7B5>
  %122 = fadd <2 x double> %118, %121
  store <2 x double> %122, ptr %2, align 8, !tbaa !93
  %123 = load <2 x double>, ptr %6, align 8, !tbaa !93
  %124 = fmul <2 x double> %120, <double 0x3F8353E8C16A6895, double 0x3FA208764E269688>
  %125 = fadd <2 x double> %123, %124
  store <2 x double> %125, ptr %6, align 8, !tbaa !93
  %126 = load <2 x double>, ptr %5, align 8, !tbaa !93
  %127 = fmul <2 x double> %120, <double 0x3FC0D337C1E9C7B5, double 0x3FDF6560B9C788BC>
  %128 = shufflevector <2 x double> %127, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %129 = fadd <2 x double> %126, %128
  store <2 x double> %129, ptr %5, align 8, !tbaa !93
  %130 = load <2 x double>, ptr %7, align 8, !tbaa !93
  %131 = fmul <2 x double> %120, <double 0x3FA208764E269688, double 0x3FC0D337C1E9C7B6>
  %132 = shufflevector <2 x double> %131, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %133 = fadd <2 x double> %130, %132
  store <2 x double> %133, ptr %7, align 8, !tbaa !93
  call void @_ZN6miniFE4Hex818gradients_and_detJIdEEvPKT_S4_RS2_(ptr noundef %0, ptr noundef nonnull %117, ptr noundef nonnull align 8 dereferenceable(8) %4)
  %134 = load double, ptr %4, align 8, !tbaa !93
  %135 = insertelement <2 x double> poison, double %134, i64 0
  %136 = shufflevector <2 x double> %135, <2 x double> poison, <2 x i32> zeroinitializer
  %137 = fmul <2 x double> %136, <double 0x3F8353E8C16A6895, double 0x3FA208764E269688>
  %138 = load <2 x double>, ptr %2, align 8, !tbaa !93
  %139 = fadd <2 x double> %138, %137
  store <2 x double> %139, ptr %2, align 8, !tbaa !93
  %140 = fmul <2 x double> %136, <double 0x3FA208764E269688, double 0x3FC0D337C1E9C7B6>
  %141 = shufflevector <2 x double> %140, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %142 = load <2 x double>, ptr %5, align 8, !tbaa !93
  %143 = fadd <2 x double> %142, %141
  store <2 x double> %143, ptr %5, align 8, !tbaa !93
  %144 = fmul <2 x double> %136, <double 0x3FA208764E269688, double 0x3FC0D337C1E9C7B5>
  %145 = load <2 x double>, ptr %6, align 8, !tbaa !93
  %146 = fadd <2 x double> %145, %144
  store <2 x double> %146, ptr %6, align 8, !tbaa !93
  %147 = fmul <2 x double> %136, <double 0x3FC0D337C1E9C7B5, double 0x3FDF6560B9C788BC>
  %148 = shufflevector <2 x double> %147, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %149 = load <2 x double>, ptr %7, align 8, !tbaa !93
  %150 = fadd <2 x double> %149, %148
  store <2 x double> %150, ptr %7, align 8, !tbaa !93
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #25
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr dso_local void @_ZN6miniFE4Hex827gradients_and_invJ_and_detJIdEEvPKT_S4_PS2_RS2_(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(8) %3) local_unnamed_addr #21 comdat {
  %5 = load double, ptr %0, align 8, !tbaa !93
  %6 = getelementptr inbounds double, ptr %0, i64 1
  %7 = getelementptr inbounds double, ptr %1, i64 1
  %8 = load double, ptr %7, align 8, !tbaa !93
  %9 = fmul double %5, %8
  %10 = fadd double %9, 0.000000e+00
  %11 = getelementptr inbounds double, ptr %1, i64 2
  %12 = getelementptr inbounds double, ptr %1, i64 3
  %13 = getelementptr inbounds double, ptr %0, i64 3
  %14 = load double, ptr %13, align 8, !tbaa !93
  %15 = getelementptr inbounds double, ptr %0, i64 4
  %16 = getelementptr inbounds double, ptr %1, i64 4
  %17 = load double, ptr %16, align 8, !tbaa !93
  %18 = fmul double %14, %17
  %19 = fadd double %10, %18
  %20 = getelementptr inbounds double, ptr %1, i64 5
  %21 = getelementptr inbounds double, ptr %1, i64 6
  %22 = getelementptr inbounds double, ptr %0, i64 6
  %23 = load double, ptr %22, align 8, !tbaa !93
  %24 = getelementptr inbounds double, ptr %0, i64 7
  %25 = getelementptr inbounds double, ptr %1, i64 7
  %26 = load double, ptr %25, align 8, !tbaa !93
  %27 = fmul double %23, %26
  %28 = fadd double %19, %27
  %29 = getelementptr inbounds double, ptr %1, i64 8
  %30 = getelementptr inbounds double, ptr %1, i64 9
  %31 = getelementptr inbounds double, ptr %0, i64 9
  %32 = load double, ptr %31, align 8, !tbaa !93
  %33 = getelementptr inbounds double, ptr %0, i64 10
  %34 = getelementptr inbounds double, ptr %1, i64 10
  %35 = load double, ptr %34, align 8, !tbaa !93
  %36 = fmul double %32, %35
  %37 = fadd double %28, %36
  %38 = getelementptr inbounds double, ptr %1, i64 11
  %39 = getelementptr inbounds double, ptr %1, i64 12
  %40 = getelementptr inbounds double, ptr %0, i64 12
  %41 = load double, ptr %40, align 8, !tbaa !93
  %42 = getelementptr inbounds double, ptr %0, i64 13
  %43 = getelementptr inbounds double, ptr %1, i64 13
  %44 = load double, ptr %43, align 8, !tbaa !93
  %45 = fmul double %41, %44
  %46 = fadd double %37, %45
  %47 = getelementptr inbounds double, ptr %1, i64 14
  %48 = getelementptr inbounds double, ptr %1, i64 15
  %49 = getelementptr inbounds double, ptr %0, i64 15
  %50 = load double, ptr %49, align 8, !tbaa !93
  %51 = getelementptr inbounds double, ptr %0, i64 16
  %52 = getelementptr inbounds double, ptr %1, i64 16
  %53 = load double, ptr %52, align 8, !tbaa !93
  %54 = fmul double %50, %53
  %55 = fadd double %46, %54
  %56 = getelementptr inbounds double, ptr %1, i64 17
  %57 = getelementptr inbounds double, ptr %1, i64 18
  %58 = getelementptr inbounds double, ptr %0, i64 18
  %59 = load double, ptr %58, align 8, !tbaa !93
  %60 = getelementptr inbounds double, ptr %0, i64 19
  %61 = getelementptr inbounds double, ptr %1, i64 19
  %62 = load double, ptr %61, align 8, !tbaa !93
  %63 = fmul double %59, %62
  %64 = fadd double %55, %63
  %65 = getelementptr inbounds double, ptr %1, i64 20
  %66 = getelementptr inbounds double, ptr %1, i64 21
  %67 = getelementptr inbounds double, ptr %0, i64 21
  %68 = load double, ptr %67, align 8, !tbaa !93
  %69 = getelementptr inbounds double, ptr %0, i64 22
  %70 = getelementptr inbounds double, ptr %1, i64 22
  %71 = load double, ptr %70, align 8, !tbaa !93
  %72 = fmul double %68, %71
  %73 = fadd double %64, %72
  %74 = getelementptr inbounds double, ptr %1, i64 23
  %75 = load <2 x double>, ptr %6, align 8, !tbaa !93
  %76 = load <2 x double>, ptr %15, align 8, !tbaa !93
  %77 = load <2 x double>, ptr %24, align 8, !tbaa !93
  %78 = load <2 x double>, ptr %33, align 8, !tbaa !93
  %79 = load <2 x double>, ptr %42, align 8, !tbaa !93
  %80 = load <2 x double>, ptr %51, align 8, !tbaa !93
  %81 = load <2 x double>, ptr %60, align 8, !tbaa !93
  %82 = load <2 x double>, ptr %69, align 8, !tbaa !93
  %83 = insertelement <2 x double> poison, double %8, i64 0
  %84 = shufflevector <2 x double> %83, <2 x double> poison, <2 x i32> zeroinitializer
  %85 = fmul <2 x double> %75, %84
  %86 = fadd <2 x double> %85, zeroinitializer
  %87 = insertelement <2 x double> poison, double %17, i64 0
  %88 = shufflevector <2 x double> %87, <2 x double> poison, <2 x i32> zeroinitializer
  %89 = fmul <2 x double> %76, %88
  %90 = fadd <2 x double> %86, %89
  %91 = insertelement <2 x double> poison, double %26, i64 0
  %92 = shufflevector <2 x double> %91, <2 x double> poison, <2 x i32> zeroinitializer
  %93 = fmul <2 x double> %77, %92
  %94 = fadd <2 x double> %90, %93
  %95 = insertelement <2 x double> poison, double %35, i64 0
  %96 = shufflevector <2 x double> %95, <2 x double> poison, <2 x i32> zeroinitializer
  %97 = fmul <2 x double> %78, %96
  %98 = fadd <2 x double> %94, %97
  %99 = insertelement <2 x double> poison, double %44, i64 0
  %100 = shufflevector <2 x double> %99, <2 x double> poison, <2 x i32> zeroinitializer
  %101 = fmul <2 x double> %79, %100
  %102 = fadd <2 x double> %98, %101
  %103 = insertelement <2 x double> poison, double %53, i64 0
  %104 = shufflevector <2 x double> %103, <2 x double> poison, <2 x i32> zeroinitializer
  %105 = fmul <2 x double> %80, %104
  %106 = fadd <2 x double> %102, %105
  %107 = insertelement <2 x double> poison, double %62, i64 0
  %108 = shufflevector <2 x double> %107, <2 x double> poison, <2 x i32> zeroinitializer
  %109 = fmul <2 x double> %81, %108
  %110 = fadd <2 x double> %106, %109
  %111 = insertelement <2 x double> poison, double %71, i64 0
  %112 = shufflevector <2 x double> %111, <2 x double> poison, <2 x i32> zeroinitializer
  %113 = fmul <2 x double> %82, %112
  %114 = fadd <2 x double> %110, %113
  %115 = extractelement <2 x double> %114, i64 1
  %116 = extractelement <2 x double> %114, i64 0
  %117 = load double, ptr %1, align 8, !tbaa !93
  %118 = load double, ptr %11, align 8, !tbaa !93
  %119 = insertelement <2 x double> poison, double %118, i64 0
  %120 = insertelement <2 x double> %119, double %117, i64 1
  %121 = insertelement <2 x double> poison, double %5, i64 0
  %122 = shufflevector <2 x double> %121, <2 x double> poison, <2 x i32> zeroinitializer
  %123 = fmul <2 x double> %120, %122
  %124 = fadd <2 x double> %123, zeroinitializer
  %125 = load double, ptr %12, align 8, !tbaa !93
  %126 = load double, ptr %20, align 8, !tbaa !93
  %127 = insertelement <2 x double> poison, double %126, i64 0
  %128 = insertelement <2 x double> %127, double %125, i64 1
  %129 = insertelement <2 x double> poison, double %14, i64 0
  %130 = shufflevector <2 x double> %129, <2 x double> poison, <2 x i32> zeroinitializer
  %131 = fmul <2 x double> %128, %130
  %132 = fadd <2 x double> %124, %131
  %133 = load double, ptr %21, align 8, !tbaa !93
  %134 = load double, ptr %29, align 8, !tbaa !93
  %135 = insertelement <2 x double> poison, double %134, i64 0
  %136 = insertelement <2 x double> %135, double %133, i64 1
  %137 = insertelement <2 x double> poison, double %23, i64 0
  %138 = shufflevector <2 x double> %137, <2 x double> poison, <2 x i32> zeroinitializer
  %139 = fmul <2 x double> %136, %138
  %140 = fadd <2 x double> %132, %139
  %141 = load double, ptr %30, align 8, !tbaa !93
  %142 = load double, ptr %38, align 8, !tbaa !93
  %143 = insertelement <2 x double> poison, double %142, i64 0
  %144 = insertelement <2 x double> %143, double %141, i64 1
  %145 = insertelement <2 x double> poison, double %32, i64 0
  %146 = shufflevector <2 x double> %145, <2 x double> poison, <2 x i32> zeroinitializer
  %147 = fmul <2 x double> %144, %146
  %148 = fadd <2 x double> %140, %147
  %149 = load double, ptr %39, align 8, !tbaa !93
  %150 = load double, ptr %47, align 8, !tbaa !93
  %151 = insertelement <2 x double> poison, double %150, i64 0
  %152 = insertelement <2 x double> %151, double %149, i64 1
  %153 = insertelement <2 x double> poison, double %41, i64 0
  %154 = shufflevector <2 x double> %153, <2 x double> poison, <2 x i32> zeroinitializer
  %155 = fmul <2 x double> %152, %154
  %156 = fadd <2 x double> %148, %155
  %157 = load double, ptr %48, align 8, !tbaa !93
  %158 = load double, ptr %56, align 8, !tbaa !93
  %159 = insertelement <2 x double> poison, double %158, i64 0
  %160 = insertelement <2 x double> %159, double %157, i64 1
  %161 = insertelement <2 x double> poison, double %50, i64 0
  %162 = shufflevector <2 x double> %161, <2 x double> poison, <2 x i32> zeroinitializer
  %163 = fmul <2 x double> %160, %162
  %164 = fadd <2 x double> %156, %163
  %165 = load double, ptr %57, align 8, !tbaa !93
  %166 = load double, ptr %65, align 8, !tbaa !93
  %167 = insertelement <2 x double> poison, double %166, i64 0
  %168 = insertelement <2 x double> %167, double %165, i64 1
  %169 = insertelement <2 x double> poison, double %59, i64 0
  %170 = shufflevector <2 x double> %169, <2 x double> poison, <2 x i32> zeroinitializer
  %171 = fmul <2 x double> %168, %170
  %172 = fadd <2 x double> %164, %171
  %173 = load double, ptr %66, align 8, !tbaa !93
  %174 = load double, ptr %74, align 8, !tbaa !93
  %175 = insertelement <2 x double> poison, double %174, i64 0
  %176 = insertelement <2 x double> %175, double %173, i64 1
  %177 = insertelement <2 x double> poison, double %68, i64 0
  %178 = shufflevector <2 x double> %177, <2 x double> poison, <2 x i32> zeroinitializer
  %179 = fmul <2 x double> %176, %178
  %180 = fadd <2 x double> %172, %179
  %181 = insertelement <2 x double> poison, double %117, i64 0
  %182 = shufflevector <2 x double> %181, <2 x double> poison, <2 x i32> zeroinitializer
  %183 = fmul <2 x double> %182, %75
  %184 = fadd <2 x double> %183, zeroinitializer
  %185 = shufflevector <2 x double> %119, <2 x double> poison, <2 x i32> zeroinitializer
  %186 = fmul <2 x double> %75, %185
  %187 = fadd <2 x double> %186, zeroinitializer
  %188 = insertelement <2 x double> poison, double %125, i64 0
  %189 = shufflevector <2 x double> %188, <2 x double> poison, <2 x i32> zeroinitializer
  %190 = fmul <2 x double> %189, %76
  %191 = fadd <2 x double> %184, %190
  %192 = shufflevector <2 x double> %127, <2 x double> poison, <2 x i32> zeroinitializer
  %193 = fmul <2 x double> %76, %192
  %194 = fadd <2 x double> %187, %193
  %195 = insertelement <2 x double> poison, double %133, i64 0
  %196 = shufflevector <2 x double> %195, <2 x double> poison, <2 x i32> zeroinitializer
  %197 = fmul <2 x double> %196, %77
  %198 = fadd <2 x double> %191, %197
  %199 = shufflevector <2 x double> %135, <2 x double> poison, <2 x i32> zeroinitializer
  %200 = fmul <2 x double> %77, %199
  %201 = fadd <2 x double> %194, %200
  %202 = insertelement <2 x double> poison, double %141, i64 0
  %203 = shufflevector <2 x double> %202, <2 x double> poison, <2 x i32> zeroinitializer
  %204 = fmul <2 x double> %203, %78
  %205 = fadd <2 x double> %198, %204
  %206 = shufflevector <2 x double> %143, <2 x double> poison, <2 x i32> zeroinitializer
  %207 = fmul <2 x double> %78, %206
  %208 = fadd <2 x double> %201, %207
  %209 = insertelement <2 x double> poison, double %149, i64 0
  %210 = shufflevector <2 x double> %209, <2 x double> poison, <2 x i32> zeroinitializer
  %211 = fmul <2 x double> %210, %79
  %212 = fadd <2 x double> %205, %211
  %213 = shufflevector <2 x double> %151, <2 x double> poison, <2 x i32> zeroinitializer
  %214 = fmul <2 x double> %79, %213
  %215 = fadd <2 x double> %208, %214
  %216 = insertelement <2 x double> poison, double %157, i64 0
  %217 = shufflevector <2 x double> %216, <2 x double> poison, <2 x i32> zeroinitializer
  %218 = fmul <2 x double> %217, %80
  %219 = fadd <2 x double> %212, %218
  %220 = shufflevector <2 x double> %159, <2 x double> poison, <2 x i32> zeroinitializer
  %221 = fmul <2 x double> %80, %220
  %222 = fadd <2 x double> %215, %221
  %223 = insertelement <2 x double> poison, double %165, i64 0
  %224 = shufflevector <2 x double> %223, <2 x double> poison, <2 x i32> zeroinitializer
  %225 = fmul <2 x double> %224, %81
  %226 = fadd <2 x double> %219, %225
  %227 = shufflevector <2 x double> %167, <2 x double> poison, <2 x i32> zeroinitializer
  %228 = fmul <2 x double> %81, %227
  %229 = fadd <2 x double> %222, %228
  %230 = insertelement <2 x double> poison, double %173, i64 0
  %231 = shufflevector <2 x double> %230, <2 x double> poison, <2 x i32> zeroinitializer
  %232 = fmul <2 x double> %231, %82
  %233 = fadd <2 x double> %226, %232
  %234 = shufflevector <2 x double> %175, <2 x double> poison, <2 x i32> zeroinitializer
  %235 = fmul <2 x double> %82, %234
  %236 = fadd <2 x double> %229, %235
  %237 = shufflevector <2 x double> %236, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %238 = fmul <2 x double> %114, %237
  %239 = fmul <2 x double> %237, %233
  %240 = shufflevector <2 x double> %239, <2 x double> poison, <2 x i32> <i32 1, i32 undef>
  %241 = fsub <2 x double> %239, %240
  %242 = extractelement <2 x double> %241, i64 0
  %243 = extractelement <2 x double> %233, i64 0
  %244 = fmul double %115, %243
  %245 = extractelement <2 x double> %233, i64 1
  %246 = fmul double %116, %245
  %247 = shufflevector <2 x double> %238, <2 x double> poison, <2 x i32> <i32 undef, i32 0>
  %248 = insertelement <2 x double> %247, double %244, i64 0
  %249 = insertelement <2 x double> %238, double %246, i64 0
  %250 = fsub <2 x double> %248, %249
  %251 = fmul double %73, %242
  %252 = fmul <2 x double> %180, %250
  %253 = extractelement <2 x double> %252, i64 1
  %254 = fsub double %253, %251
  %255 = extractelement <2 x double> %252, i64 0
  %256 = fadd double %255, %254
  store double %256, ptr %3, align 8, !tbaa !93
  %257 = fdiv double 1.000000e+00, %256
  %258 = fneg double %242
  %259 = insertelement <2 x double> poison, double %257, i64 0
  %260 = shufflevector <2 x double> %259, <2 x double> poison, <2 x i32> zeroinitializer
  %261 = shufflevector <2 x double> %250, <2 x double> poison, <2 x i32> <i32 1, i32 undef>
  %262 = insertelement <2 x double> %261, double %258, i64 1
  %263 = fmul <2 x double> %260, %262
  store <2 x double> %263, ptr %2, align 8, !tbaa !93
  %264 = getelementptr inbounds double, ptr %2, i64 2
  %265 = extractelement <2 x double> %236, i64 1
  %266 = fmul double %265, %73
  %267 = extractelement <2 x double> %180, i64 0
  %268 = fmul double %115, %267
  %269 = fsub double %266, %268
  %270 = fneg double %269
  %271 = insertelement <2 x double> %250, double %270, i64 1
  %272 = fmul <2 x double> %260, %271
  store <2 x double> %272, ptr %264, align 8, !tbaa !93
  %273 = extractelement <2 x double> %180, i64 1
  %274 = fmul double %265, %273
  %275 = fmul double %267, %245
  %276 = fsub double %274, %275
  %277 = getelementptr inbounds double, ptr %2, i64 4
  %278 = fmul double %115, %273
  %279 = fmul double %73, %245
  %280 = fsub double %278, %279
  %281 = fneg double %280
  %282 = insertelement <2 x double> poison, double %276, i64 0
  %283 = insertelement <2 x double> %282, double %281, i64 1
  %284 = fmul <2 x double> %260, %283
  store <2 x double> %284, ptr %277, align 8, !tbaa !93
  %285 = extractelement <2 x double> %236, i64 0
  %286 = fmul double %285, %73
  %287 = fmul <2 x double> %114, %180
  %288 = extractelement <2 x double> %287, i64 0
  %289 = fsub double %286, %288
  %290 = getelementptr inbounds double, ptr %2, i64 6
  %291 = fmul double %285, %273
  %292 = fmul <2 x double> %180, %233
  %293 = extractelement <2 x double> %292, i64 0
  %294 = fsub double %291, %293
  %295 = fneg double %294
  %296 = insertelement <2 x double> poison, double %289, i64 0
  %297 = insertelement <2 x double> %296, double %295, i64 1
  %298 = fmul <2 x double> %260, %297
  store <2 x double> %298, ptr %290, align 8, !tbaa !93
  %299 = fmul double %116, %273
  %300 = fmul double %73, %243
  %301 = fsub double %299, %300
  %302 = fmul double %301, %257
  %303 = getelementptr inbounds double, ptr %2, i64 8
  store double %302, ptr %303, align 8, !tbaa !93
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr dso_local void @_ZN6miniFE4Hex818gradients_and_detJIdEEvPKT_S4_RS2_(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(8) %2) local_unnamed_addr #21 comdat {
  %4 = load double, ptr %0, align 8, !tbaa !93
  %5 = getelementptr inbounds double, ptr %0, i64 1
  %6 = load <2 x double>, ptr %5, align 8, !tbaa !93
  %7 = getelementptr inbounds double, ptr %1, i64 1
  %8 = load double, ptr %7, align 8, !tbaa !93
  %9 = fmul double %4, %8
  %10 = fadd double %9, 0.000000e+00
  %11 = getelementptr inbounds double, ptr %1, i64 2
  %12 = getelementptr inbounds double, ptr %1, i64 3
  %13 = getelementptr inbounds double, ptr %0, i64 3
  %14 = load double, ptr %13, align 8, !tbaa !93
  %15 = getelementptr inbounds double, ptr %0, i64 4
  %16 = getelementptr inbounds double, ptr %1, i64 4
  %17 = load double, ptr %16, align 8, !tbaa !93
  %18 = fmul double %14, %17
  %19 = fadd double %10, %18
  %20 = getelementptr inbounds double, ptr %1, i64 5
  %21 = getelementptr inbounds double, ptr %1, i64 6
  %22 = getelementptr inbounds double, ptr %0, i64 6
  %23 = load double, ptr %22, align 8, !tbaa !93
  %24 = getelementptr inbounds double, ptr %0, i64 7
  %25 = getelementptr inbounds double, ptr %1, i64 7
  %26 = load double, ptr %25, align 8, !tbaa !93
  %27 = fmul double %23, %26
  %28 = fadd double %19, %27
  %29 = getelementptr inbounds double, ptr %1, i64 8
  %30 = getelementptr inbounds double, ptr %1, i64 9
  %31 = getelementptr inbounds double, ptr %0, i64 9
  %32 = load double, ptr %31, align 8, !tbaa !93
  %33 = getelementptr inbounds double, ptr %0, i64 10
  %34 = getelementptr inbounds double, ptr %1, i64 10
  %35 = load double, ptr %34, align 8, !tbaa !93
  %36 = fmul double %32, %35
  %37 = fadd double %28, %36
  %38 = getelementptr inbounds double, ptr %1, i64 11
  %39 = getelementptr inbounds double, ptr %1, i64 12
  %40 = getelementptr inbounds double, ptr %0, i64 12
  %41 = load double, ptr %40, align 8, !tbaa !93
  %42 = getelementptr inbounds double, ptr %0, i64 13
  %43 = getelementptr inbounds double, ptr %1, i64 13
  %44 = load double, ptr %43, align 8, !tbaa !93
  %45 = fmul double %41, %44
  %46 = fadd double %37, %45
  %47 = getelementptr inbounds double, ptr %1, i64 14
  %48 = getelementptr inbounds double, ptr %1, i64 15
  %49 = getelementptr inbounds double, ptr %0, i64 15
  %50 = load double, ptr %49, align 8, !tbaa !93
  %51 = getelementptr inbounds double, ptr %0, i64 16
  %52 = getelementptr inbounds double, ptr %1, i64 16
  %53 = load double, ptr %52, align 8, !tbaa !93
  %54 = fmul double %50, %53
  %55 = fadd double %46, %54
  %56 = getelementptr inbounds double, ptr %1, i64 17
  %57 = getelementptr inbounds double, ptr %1, i64 18
  %58 = getelementptr inbounds double, ptr %0, i64 18
  %59 = load double, ptr %58, align 8, !tbaa !93
  %60 = getelementptr inbounds double, ptr %0, i64 19
  %61 = getelementptr inbounds double, ptr %1, i64 19
  %62 = load double, ptr %61, align 8, !tbaa !93
  %63 = fmul double %59, %62
  %64 = fadd double %55, %63
  %65 = getelementptr inbounds double, ptr %1, i64 20
  %66 = getelementptr inbounds double, ptr %1, i64 21
  %67 = getelementptr inbounds double, ptr %0, i64 21
  %68 = load double, ptr %67, align 8, !tbaa !93
  %69 = getelementptr inbounds double, ptr %0, i64 22
  %70 = getelementptr inbounds double, ptr %1, i64 22
  %71 = load double, ptr %70, align 8, !tbaa !93
  %72 = fmul double %68, %71
  %73 = fadd double %64, %72
  %74 = getelementptr inbounds double, ptr %1, i64 23
  %75 = load double, ptr %1, align 8, !tbaa !93
  %76 = shufflevector <2 x double> %6, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %77 = insertelement <2 x double> poison, double %8, i64 0
  %78 = shufflevector <2 x double> %77, <2 x double> poison, <2 x i32> zeroinitializer
  %79 = fmul <2 x double> %76, %78
  %80 = fadd <2 x double> %79, zeroinitializer
  %81 = load double, ptr %11, align 8, !tbaa !93
  %82 = insertelement <2 x double> poison, double %81, i64 0
  %83 = insertelement <2 x double> %82, double %75, i64 1
  %84 = insertelement <2 x double> poison, double %4, i64 0
  %85 = shufflevector <2 x double> %84, <2 x double> poison, <2 x i32> zeroinitializer
  %86 = fmul <2 x double> %83, %85
  %87 = fadd <2 x double> %86, zeroinitializer
  %88 = insertelement <2 x double> poison, double %75, i64 0
  %89 = insertelement <2 x double> %88, double %81, i64 1
  %90 = fmul <2 x double> %76, %89
  %91 = fadd <2 x double> %90, zeroinitializer
  %92 = fmul <2 x double> %6, %89
  %93 = fadd <2 x double> %92, zeroinitializer
  %94 = load double, ptr %12, align 8, !tbaa !93
  %95 = load <2 x double>, ptr %15, align 8, !tbaa !93
  %96 = shufflevector <2 x double> %95, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %97 = insertelement <2 x double> poison, double %17, i64 0
  %98 = shufflevector <2 x double> %97, <2 x double> poison, <2 x i32> zeroinitializer
  %99 = fmul <2 x double> %96, %98
  %100 = fadd <2 x double> %80, %99
  %101 = load double, ptr %20, align 8, !tbaa !93
  %102 = insertelement <2 x double> poison, double %101, i64 0
  %103 = insertelement <2 x double> %102, double %94, i64 1
  %104 = insertelement <2 x double> poison, double %14, i64 0
  %105 = shufflevector <2 x double> %104, <2 x double> poison, <2 x i32> zeroinitializer
  %106 = fmul <2 x double> %103, %105
  %107 = fadd <2 x double> %87, %106
  %108 = insertelement <2 x double> poison, double %94, i64 0
  %109 = insertelement <2 x double> %108, double %101, i64 1
  %110 = fmul <2 x double> %96, %109
  %111 = fadd <2 x double> %91, %110
  %112 = fmul <2 x double> %95, %109
  %113 = fadd <2 x double> %93, %112
  %114 = load double, ptr %21, align 8, !tbaa !93
  %115 = load <2 x double>, ptr %24, align 8, !tbaa !93
  %116 = shufflevector <2 x double> %115, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %117 = insertelement <2 x double> poison, double %26, i64 0
  %118 = shufflevector <2 x double> %117, <2 x double> poison, <2 x i32> zeroinitializer
  %119 = fmul <2 x double> %116, %118
  %120 = fadd <2 x double> %100, %119
  %121 = load double, ptr %29, align 8, !tbaa !93
  %122 = insertelement <2 x double> poison, double %121, i64 0
  %123 = insertelement <2 x double> %122, double %114, i64 1
  %124 = insertelement <2 x double> poison, double %23, i64 0
  %125 = shufflevector <2 x double> %124, <2 x double> poison, <2 x i32> zeroinitializer
  %126 = fmul <2 x double> %123, %125
  %127 = fadd <2 x double> %107, %126
  %128 = insertelement <2 x double> poison, double %114, i64 0
  %129 = insertelement <2 x double> %128, double %121, i64 1
  %130 = fmul <2 x double> %116, %129
  %131 = fadd <2 x double> %111, %130
  %132 = fmul <2 x double> %115, %129
  %133 = fadd <2 x double> %113, %132
  %134 = load double, ptr %30, align 8, !tbaa !93
  %135 = load <2 x double>, ptr %33, align 8, !tbaa !93
  %136 = shufflevector <2 x double> %135, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %137 = insertelement <2 x double> poison, double %35, i64 0
  %138 = shufflevector <2 x double> %137, <2 x double> poison, <2 x i32> zeroinitializer
  %139 = fmul <2 x double> %136, %138
  %140 = fadd <2 x double> %120, %139
  %141 = load double, ptr %38, align 8, !tbaa !93
  %142 = insertelement <2 x double> poison, double %141, i64 0
  %143 = insertelement <2 x double> %142, double %134, i64 1
  %144 = insertelement <2 x double> poison, double %32, i64 0
  %145 = shufflevector <2 x double> %144, <2 x double> poison, <2 x i32> zeroinitializer
  %146 = fmul <2 x double> %143, %145
  %147 = fadd <2 x double> %127, %146
  %148 = insertelement <2 x double> poison, double %134, i64 0
  %149 = insertelement <2 x double> %148, double %141, i64 1
  %150 = fmul <2 x double> %136, %149
  %151 = fadd <2 x double> %131, %150
  %152 = fmul <2 x double> %135, %149
  %153 = fadd <2 x double> %133, %152
  %154 = load double, ptr %39, align 8, !tbaa !93
  %155 = load <2 x double>, ptr %42, align 8, !tbaa !93
  %156 = shufflevector <2 x double> %155, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %157 = insertelement <2 x double> poison, double %44, i64 0
  %158 = shufflevector <2 x double> %157, <2 x double> poison, <2 x i32> zeroinitializer
  %159 = fmul <2 x double> %156, %158
  %160 = fadd <2 x double> %140, %159
  %161 = load double, ptr %47, align 8, !tbaa !93
  %162 = insertelement <2 x double> poison, double %161, i64 0
  %163 = insertelement <2 x double> %162, double %154, i64 1
  %164 = insertelement <2 x double> poison, double %41, i64 0
  %165 = shufflevector <2 x double> %164, <2 x double> poison, <2 x i32> zeroinitializer
  %166 = fmul <2 x double> %163, %165
  %167 = fadd <2 x double> %147, %166
  %168 = insertelement <2 x double> poison, double %154, i64 0
  %169 = insertelement <2 x double> %168, double %161, i64 1
  %170 = fmul <2 x double> %156, %169
  %171 = fadd <2 x double> %151, %170
  %172 = fmul <2 x double> %155, %169
  %173 = fadd <2 x double> %153, %172
  %174 = load double, ptr %48, align 8, !tbaa !93
  %175 = load <2 x double>, ptr %51, align 8, !tbaa !93
  %176 = shufflevector <2 x double> %175, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %177 = insertelement <2 x double> poison, double %53, i64 0
  %178 = shufflevector <2 x double> %177, <2 x double> poison, <2 x i32> zeroinitializer
  %179 = fmul <2 x double> %176, %178
  %180 = fadd <2 x double> %160, %179
  %181 = load double, ptr %56, align 8, !tbaa !93
  %182 = insertelement <2 x double> poison, double %181, i64 0
  %183 = insertelement <2 x double> %182, double %174, i64 1
  %184 = insertelement <2 x double> poison, double %50, i64 0
  %185 = shufflevector <2 x double> %184, <2 x double> poison, <2 x i32> zeroinitializer
  %186 = fmul <2 x double> %183, %185
  %187 = fadd <2 x double> %167, %186
  %188 = insertelement <2 x double> poison, double %174, i64 0
  %189 = insertelement <2 x double> %188, double %181, i64 1
  %190 = fmul <2 x double> %176, %189
  %191 = fadd <2 x double> %171, %190
  %192 = fmul <2 x double> %175, %189
  %193 = fadd <2 x double> %173, %192
  %194 = load double, ptr %57, align 8, !tbaa !93
  %195 = load <2 x double>, ptr %60, align 8, !tbaa !93
  %196 = shufflevector <2 x double> %195, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %197 = insertelement <2 x double> poison, double %62, i64 0
  %198 = shufflevector <2 x double> %197, <2 x double> poison, <2 x i32> zeroinitializer
  %199 = fmul <2 x double> %196, %198
  %200 = fadd <2 x double> %180, %199
  %201 = load double, ptr %65, align 8, !tbaa !93
  %202 = insertelement <2 x double> poison, double %201, i64 0
  %203 = insertelement <2 x double> %202, double %194, i64 1
  %204 = insertelement <2 x double> poison, double %59, i64 0
  %205 = shufflevector <2 x double> %204, <2 x double> poison, <2 x i32> zeroinitializer
  %206 = fmul <2 x double> %203, %205
  %207 = fadd <2 x double> %187, %206
  %208 = insertelement <2 x double> poison, double %194, i64 0
  %209 = insertelement <2 x double> %208, double %201, i64 1
  %210 = fmul <2 x double> %196, %209
  %211 = fadd <2 x double> %191, %210
  %212 = fmul <2 x double> %195, %209
  %213 = fadd <2 x double> %193, %212
  %214 = load double, ptr %66, align 8, !tbaa !93
  %215 = load <2 x double>, ptr %69, align 8, !tbaa !93
  %216 = shufflevector <2 x double> %215, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %217 = insertelement <2 x double> poison, double %71, i64 0
  %218 = shufflevector <2 x double> %217, <2 x double> poison, <2 x i32> zeroinitializer
  %219 = fmul <2 x double> %216, %218
  %220 = fadd <2 x double> %200, %219
  %221 = load double, ptr %74, align 8, !tbaa !93
  %222 = insertelement <2 x double> poison, double %221, i64 0
  %223 = insertelement <2 x double> %222, double %214, i64 1
  %224 = insertelement <2 x double> poison, double %68, i64 0
  %225 = shufflevector <2 x double> %224, <2 x double> poison, <2 x i32> zeroinitializer
  %226 = fmul <2 x double> %223, %225
  %227 = fadd <2 x double> %207, %226
  %228 = insertelement <2 x double> poison, double %214, i64 0
  %229 = insertelement <2 x double> %228, double %221, i64 1
  %230 = fmul <2 x double> %216, %229
  %231 = fadd <2 x double> %211, %230
  %232 = fmul <2 x double> %215, %229
  %233 = fadd <2 x double> %213, %232
  %234 = shufflevector <2 x double> %233, <2 x double> %231, <2 x i32> <i32 1, i32 3>
  %235 = shufflevector <2 x double> %233, <2 x double> %231, <2 x i32> <i32 0, i32 2>
  %236 = fmul <2 x double> %234, %235
  %237 = shufflevector <2 x double> %236, <2 x double> poison, <2 x i32> <i32 1, i32 undef>
  %238 = fsub <2 x double> %236, %237
  %239 = extractelement <2 x double> %238, i64 0
  %240 = fmul <2 x double> %220, %233
  %241 = shufflevector <2 x double> %220, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %242 = fmul <2 x double> %241, %231
  %243 = fsub <2 x double> %240, %242
  %244 = fmul double %73, %239
  %245 = fmul <2 x double> %227, %243
  %246 = extractelement <2 x double> %245, i64 1
  %247 = fsub double %246, %244
  %248 = extractelement <2 x double> %245, i64 0
  %249 = fadd double %248, %247
  store double %249, ptr %2, align 8, !tbaa !93
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE23sum_in_symm_elem_matrixINS_9CSRMatrixIdiiEEEEvmPKNT_17GlobalOrdinalTypeEPKNS3_10ScalarTypeERS3_(i64 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(132) %3) local_unnamed_addr #7 comdat {
  %5 = icmp eq i64 %0, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %3, i64 0, i32 2
  %8 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !86
  %10 = load ptr, ptr %7, align 8, !tbaa !87
  %11 = icmp eq ptr %9, %10
  %12 = ptrtoint ptr %9 to i64
  %13 = ptrtoint ptr %10 to i64
  %14 = sub i64 %12, %13
  %15 = ashr exact i64 %14, 2
  %16 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %3, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %3, i64 0, i32 5
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %"struct.miniFE::CSRMatrix", ptr %3, i64 0, i32 6
  %21 = load ptr, ptr %20, align 8
  %22 = icmp sgt i64 %14, 0
  %23 = lshr exact i64 %14, 2
  br label %25

24:                                               ; preds = %182, %4
  ret void

25:                                               ; preds = %6, %182
  %26 = phi i64 [ 0, %6 ], [ %34, %182 ]
  %27 = phi i64 [ 0, %6 ], [ %183, %182 ]
  %28 = getelementptr inbounds i32, ptr %1, i64 %27
  %29 = load i32, ptr %28, align 4, !tbaa !5
  %30 = shl i64 %26, 32
  %31 = ashr exact i64 %30, 32
  %32 = getelementptr inbounds double, ptr %2, i64 %31
  %33 = sub i64 %0, %27
  %34 = add i64 %31, %33
  br i1 %11, label %46, label %35

35:                                               ; preds = %25
  %36 = load i32, ptr %10, align 4, !tbaa !5
  %37 = sub nsw i32 %29, %36
  %38 = sext i32 %37 to i64
  %39 = icmp ugt i64 %15, %38
  br i1 %39, label %40, label %46

40:                                               ; preds = %35
  %41 = getelementptr inbounds i32, ptr %10, i64 %38
  %42 = load i32, ptr %41, align 4, !tbaa !5
  %43 = icmp ne i32 %42, %29
  %44 = icmp eq i32 %37, -1
  %45 = select i1 %43, i1 true, i1 %44
  br i1 %45, label %46, label %70

46:                                               ; preds = %25, %40, %35
  br i1 %22, label %47, label %60

47:                                               ; preds = %46, %47
  %48 = phi i64 [ %58, %47 ], [ %23, %46 ]
  %49 = phi ptr [ %57, %47 ], [ %10, %46 ]
  %50 = lshr i64 %48, 1
  %51 = getelementptr inbounds i32, ptr %49, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !5
  %53 = icmp slt i32 %52, %29
  %54 = getelementptr inbounds i32, ptr %51, i64 1
  %55 = xor i64 %50, -1
  %56 = add nsw i64 %48, %55
  %57 = select i1 %53, ptr %54, ptr %49
  %58 = select i1 %53, i64 %56, i64 %50
  %59 = icmp sgt i64 %58, 0
  br i1 %59, label %47, label %60, !llvm.loop !127

60:                                               ; preds = %47, %46
  %61 = phi ptr [ %10, %46 ], [ %57, %47 ]
  %62 = icmp eq ptr %61, %9
  br i1 %62, label %182, label %63

63:                                               ; preds = %60
  %64 = load i32, ptr %61, align 4, !tbaa !5
  %65 = icmp eq i32 %64, %29
  br i1 %65, label %66, label %182

66:                                               ; preds = %63
  %67 = ptrtoint ptr %61 to i64
  %68 = sub i64 %67, %13
  %69 = ashr exact i64 %68, 2
  br label %70

70:                                               ; preds = %40, %66
  %71 = phi i64 [ %69, %66 ], [ %38, %40 ]
  %72 = getelementptr inbounds i32, ptr %17, i64 %71
  %73 = load i32, ptr %72, align 4, !tbaa !5
  %74 = add nsw i64 %71, 1
  %75 = getelementptr inbounds i32, ptr %17, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !5
  %77 = sub nsw i32 %76, %73
  %78 = sext i32 %77 to i64
  %79 = sext i32 %73 to i64
  %80 = getelementptr inbounds i32, ptr %19, i64 %79
  %81 = getelementptr inbounds double, ptr %21, i64 %79
  %82 = icmp eq i32 %76, %73
  br i1 %82, label %182, label %83

83:                                               ; preds = %70
  %84 = shl i64 %33, 32
  %85 = ashr exact i64 %84, 32
  %86 = and i64 %33, 4294967295
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %131, label %88

88:                                               ; preds = %83
  %89 = icmp sgt i32 %77, 0
  %90 = and i64 %78, 4611686018427387903
  %91 = ptrtoint ptr %80 to i64
  br label %92

92:                                               ; preds = %128, %88
  %93 = phi i64 [ 0, %88 ], [ %129, %128 ]
  %94 = getelementptr inbounds i32, ptr %28, i64 %93
  br i1 %89, label %95, label %112

95:                                               ; preds = %92
  %96 = load i32, ptr %94, align 4, !tbaa !5
  br label %97

97:                                               ; preds = %97, %95
  %98 = phi ptr [ %80, %95 ], [ %108, %97 ]
  %99 = phi i64 [ %90, %95 ], [ %107, %97 ]
  %100 = lshr i64 %99, 1
  %101 = getelementptr inbounds i32, ptr %98, i64 %100
  %102 = load i32, ptr %101, align 4, !tbaa !5
  %103 = icmp slt i32 %102, %96
  %104 = getelementptr inbounds i32, ptr %101, i64 1
  %105 = xor i64 %100, -1
  %106 = add nsw i64 %99, %105
  %107 = select i1 %103, i64 %106, i64 %100
  %108 = select i1 %103, ptr %104, ptr %98
  %109 = icmp sgt i64 %107, 0
  br i1 %109, label %97, label %110, !llvm.loop !276

110:                                              ; preds = %97
  %111 = ptrtoint ptr %108 to i64
  br label %112

112:                                              ; preds = %110, %92
  %113 = phi i64 [ %111, %110 ], [ %91, %92 ]
  %114 = phi ptr [ %108, %110 ], [ %80, %92 ]
  %115 = sub i64 %113, %91
  %116 = ashr exact i64 %115, 2
  %117 = icmp slt i64 %116, %78
  br i1 %117, label %118, label %128

118:                                              ; preds = %112
  %119 = load i32, ptr %114, align 4, !tbaa !5
  %120 = load i32, ptr %94, align 4, !tbaa !5
  %121 = icmp eq i32 %119, %120
  br i1 %121, label %122, label %128

122:                                              ; preds = %118
  %123 = getelementptr inbounds double, ptr %32, i64 %93
  %124 = load double, ptr %123, align 8, !tbaa !93
  %125 = getelementptr inbounds double, ptr %81, i64 %116
  %126 = load double, ptr %125, align 8, !tbaa !93
  %127 = fadd double %124, %126
  store double %127, ptr %125, align 8, !tbaa !93
  br label %128

128:                                              ; preds = %122, %118, %112
  %129 = add nuw i64 %93, 1
  %130 = icmp eq i64 %129, %85
  br i1 %130, label %131, label %92, !llvm.loop !277

131:                                              ; preds = %128, %83
  %132 = icmp eq i64 %27, 0
  br i1 %132, label %182, label %133

133:                                              ; preds = %131
  %134 = icmp sgt i32 %77, 0
  %135 = and i64 %78, 4611686018427387903
  %136 = ptrtoint ptr %80 to i64
  br label %137

137:                                              ; preds = %133, %176
  %138 = phi i64 [ 0, %133 ], [ %177, %176 ]
  %139 = phi i64 [ %27, %133 ], [ %180, %176 ]
  %140 = shl i64 %139, 32
  %141 = ashr exact i64 %140, 32
  %142 = getelementptr inbounds double, ptr %2, i64 %141
  %143 = load double, ptr %142, align 8, !tbaa !93
  %144 = getelementptr inbounds i32, ptr %1, i64 %138
  br i1 %134, label %145, label %162

145:                                              ; preds = %137
  %146 = load i32, ptr %144, align 4, !tbaa !5
  br label %147

147:                                              ; preds = %147, %145
  %148 = phi ptr [ %80, %145 ], [ %158, %147 ]
  %149 = phi i64 [ %135, %145 ], [ %157, %147 ]
  %150 = lshr i64 %149, 1
  %151 = getelementptr inbounds i32, ptr %148, i64 %150
  %152 = load i32, ptr %151, align 4, !tbaa !5
  %153 = icmp slt i32 %152, %146
  %154 = getelementptr inbounds i32, ptr %151, i64 1
  %155 = xor i64 %150, -1
  %156 = add nsw i64 %149, %155
  %157 = select i1 %153, i64 %156, i64 %150
  %158 = select i1 %153, ptr %154, ptr %148
  %159 = icmp sgt i64 %157, 0
  br i1 %159, label %147, label %160, !llvm.loop !276

160:                                              ; preds = %147
  %161 = ptrtoint ptr %158 to i64
  br label %162

162:                                              ; preds = %160, %137
  %163 = phi i64 [ %161, %160 ], [ %136, %137 ]
  %164 = phi ptr [ %158, %160 ], [ %80, %137 ]
  %165 = sub i64 %163, %136
  %166 = ashr exact i64 %165, 2
  %167 = icmp slt i64 %166, %78
  br i1 %167, label %168, label %176

168:                                              ; preds = %162
  %169 = load i32, ptr %164, align 4, !tbaa !5
  %170 = load i32, ptr %144, align 4, !tbaa !5
  %171 = icmp eq i32 %169, %170
  br i1 %171, label %172, label %176

172:                                              ; preds = %168
  %173 = getelementptr inbounds double, ptr %81, i64 %166
  %174 = load double, ptr %173, align 8, !tbaa !93
  %175 = fadd double %143, %174
  store double %175, ptr %173, align 8, !tbaa !93
  br label %176

176:                                              ; preds = %172, %168, %162
  %177 = add nuw i64 %138, 1
  %178 = xor i64 %138, -1
  %179 = add i64 %178, %0
  %180 = add i64 %179, %141
  %181 = icmp eq i64 %177, %27
  br i1 %181, label %182, label %137, !llvm.loop !278

182:                                              ; preds = %176, %131, %60, %63, %70
  %183 = add nuw i64 %27, 1
  %184 = icmp eq i64 %183, %0
  br i1 %184, label %24, label %25, !llvm.loop !279
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare noundef ptr @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(ptr noundef) local_unnamed_addr #17

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.ceil.f64(double) #16

declare noundef ptr @_ZN12YAML_Element3addERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm(ptr noundef nonnull align 8 dereferenceable(88), ptr noundef nonnull align 8 dereferenceable(32), i64 noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare double @sqrt(double noundef) local_unnamed_addr #22

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fabs.f64(double) #16

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8), double noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare double @sin(double noundef) local_unnamed_addr #22

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare double @sinh(double noundef) local_unnamed_addr #22

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_main.cpp() #7 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt8ios_base4InitD1Ev, ptr nonnull @_ZStL8__ioinit, ptr nonnull @__dso_handle) #25
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #23

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.experimental.noalias.scope.decl(metadata) #23

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #24

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #24

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #24

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #24

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #24

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x i32> @llvm.smax.v2i32(<2 x i32>, <2 x i32>) #24

attributes #0 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { norecurse uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { inlinehint mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { noinline noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { noreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #14 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #15 = { inlinehint nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #17 = { mustprogress nofree nounwind willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { nofree nosync nounwind memory(none) }
attributes #20 = { inlinehint uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { mustprogress nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { mustprogress nofree nounwind willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #24 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #25 = { nounwind }
attributes #26 = { noreturn }
attributes #27 = { builtin allocsize(0) }
attributes #28 = { builtin nounwind }
attributes #29 = { noreturn nounwind }
attributes #30 = { nounwind willreturn memory(read) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!10, !6, i64 16}
!10 = !{!"_ZTSN6miniFE10ParametersE", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !6, i64 20, !11, i64 24, !12, i64 32, !6, i64 64, !6, i64 68, !6, i64 72, !6, i64 76, !6, i64 80, !6, i64 84, !6, i64 88}
!11 = !{!"float", !7, i64 0}
!12 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !13, i64 0, !15, i64 8, !7, i64 16}
!13 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !14, i64 0}
!14 = !{!"any pointer", !7, i64 0}
!15 = !{!"long", !7, i64 0}
!16 = !{!10, !6, i64 20}
!17 = !{!10, !11, i64 24}
!18 = !{!13, !14, i64 0}
!19 = !{!12, !15, i64 8}
!20 = !{!7, !7, i64 0}
!21 = !{!10, !6, i64 80}
!22 = !{!10, !6, i64 84}
!23 = !{!10, !6, i64 88}
!24 = !{!10, !6, i64 0}
!25 = !{!10, !6, i64 4}
!26 = !{!10, !6, i64 8}
!27 = !{i64 0, i64 24, !20}
!28 = distinct !{!28, !29}
!29 = !{!"llvm.loop.mustprogress"}
!30 = !{!31, !31, i64 0}
!31 = !{!"vtable pointer", !8, i64 0}
!32 = !{!33, !14, i64 240}
!33 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !34, i64 0, !14, i64 216, !7, i64 224, !39, i64 225, !14, i64 232, !14, i64 240, !14, i64 248, !14, i64 256}
!34 = !{!"_ZTSSt8ios_base", !15, i64 8, !15, i64 16, !35, i64 24, !36, i64 28, !36, i64 32, !14, i64 40, !37, i64 48, !7, i64 64, !6, i64 192, !14, i64 200, !38, i64 208}
!35 = !{!"_ZTSSt13_Ios_Fmtflags", !7, i64 0}
!36 = !{!"_ZTSSt12_Ios_Iostate", !7, i64 0}
!37 = !{!"_ZTSNSt8ios_base6_WordsE", !14, i64 0, !15, i64 8}
!38 = !{!"_ZTSSt6locale", !14, i64 0}
!39 = !{!"bool", !7, i64 0}
!40 = !{!41, !7, i64 56}
!41 = !{!"_ZTSSt5ctypeIcE", !42, i64 0, !14, i64 16, !39, i64 24, !14, i64 32, !14, i64 40, !14, i64 48, !7, i64 56, !7, i64 57, !7, i64 313, !7, i64 569}
!42 = !{!"_ZTSNSt6locale5facetE", !6, i64 8}
!43 = !{!12, !14, i64 0}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv: argument 0"}
!46 = distinct !{!46, !"_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv: argument 0"}
!49 = distinct !{!49, !"_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv"}
!50 = !{!48, !45}
!51 = !{!52, !14, i64 40}
!52 = !{!"_ZTSSt15basic_streambufIcSt11char_traitsIcEE", !14, i64 8, !14, i64 16, !14, i64 24, !14, i64 32, !14, i64 40, !14, i64 48, !38, i64 56}
!53 = !{!52, !14, i64 24}
!54 = !{!52, !14, i64 32}
!55 = !{!15, !15, i64 0}
!56 = !{!33, !39, i64 225}
!57 = !{i8 0, i8 2}
!58 = !{}
!59 = !{!33, !7, i64 224}
!60 = !{!61, !6, i64 20}
!61 = !{!"_ZTS2tm", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !6, i64 20, !6, i64 24, !6, i64 28, !6, i64 32, !15, i64 40, !14, i64 48}
!62 = !{!34, !15, i64 16}
!63 = !{!61, !6, i64 16}
!64 = !{!61, !6, i64 12}
!65 = !{!61, !6, i64 8}
!66 = !{!61, !6, i64 4}
!67 = !{!61, !6, i64 0}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv: argument 0"}
!70 = distinct !{!70, !"_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv: argument 0"}
!73 = distinct !{!73, !"_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv"}
!74 = !{!72, !69}
!75 = !{!11, !11, i64 0}
!76 = !{!77, !39, i64 0}
!77 = !{!"_ZTSN6miniFE9CSRMatrixIdiiEE", !39, i64 0, !78, i64 8, !78, i64 32, !78, i64 56, !78, i64 80, !82, i64 104, !6, i64 128}
!78 = !{!"_ZTSSt6vectorIiSaIiEE", !79, i64 0}
!79 = !{!"_ZTSSt12_Vector_baseIiSaIiEE", !80, i64 0}
!80 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE12_Vector_implE", !81, i64 0}
!81 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !14, i64 0, !14, i64 8, !14, i64 16}
!82 = !{!"_ZTSSt6vectorIdSaIdEE", !83, i64 0}
!83 = !{!"_ZTSSt12_Vector_baseIdSaIdEE", !84, i64 0}
!84 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE12_Vector_implE", !85, i64 0}
!85 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataE", !14, i64 0, !14, i64 8, !14, i64 16}
!86 = !{!81, !14, i64 8}
!87 = !{!81, !14, i64 0}
!88 = !{!89, !6, i64 0}
!89 = !{!"_ZTSN6miniFE6VectorIdiiEE", !6, i64 0, !6, i64 4, !82, i64 8}
!90 = !{!89, !6, i64 4}
!91 = !{!85, !14, i64 0}
!92 = !{!85, !14, i64 16}
!93 = !{!94, !94, i64 0}
!94 = !{!"double", !7, i64 0}
!95 = !{!85, !14, i64 8}
!96 = !{!77, !6, i64 128}
!97 = !{!10, !6, i64 72}
!98 = !{!99, !14, i64 8}
!99 = !{!"_ZTSSt15_Rb_tree_header", !100, i64 0, !15, i64 32}
!100 = !{!"_ZTSSt18_Rb_tree_node_base", !101, i64 0, !14, i64 8, !14, i64 16, !14, i64 24}
!101 = !{!"_ZTSSt14_Rb_tree_color", !7, i64 0}
!102 = !{!99, !101, i64 0}
!103 = !{!99, !14, i64 16}
!104 = !{!99, !14, i64 24}
!105 = !{!99, !15, i64 32}
!106 = !{!14, !14, i64 0}
!107 = distinct !{!107, !29}
!108 = distinct !{!108, !29}
!109 = distinct !{!109, !29}
!110 = distinct !{!110, !29}
!111 = distinct !{!111, !29}
!112 = distinct !{!112, !29}
!113 = distinct !{!113, !29}
!114 = distinct !{!114, !29}
!115 = distinct !{!115, !29}
!116 = distinct !{!116, !29}
!117 = distinct !{!117, !29}
!118 = distinct !{!118, !29}
!119 = distinct !{!119, !29}
!120 = !{!81, !14, i64 16}
!121 = distinct !{!121, !29}
!122 = distinct !{!122, !29}
!123 = distinct !{!123, !29}
!124 = !{!125, !6, i64 72}
!125 = !{!"_ZTS12MatrixInitOpIN6miniFE9CSRMatrixIdiiEEE", !14, i64 0, !14, i64 8, !14, i64 16, !6, i64 24, !6, i64 28, !6, i64 32, !6, i64 36, !14, i64 40, !14, i64 48, !14, i64 56, !14, i64 64, !6, i64 72, !6, i64 76, !14, i64 80}
!126 = distinct !{!126, !29}
!127 = distinct !{!127, !29}
!128 = !{!129}
!129 = distinct !{!129, !130}
!130 = distinct !{!130, !"LVerDomain"}
!131 = !{!132}
!132 = distinct !{!132, !130}
!133 = distinct !{!133, !29, !134, !135}
!134 = !{!"llvm.loop.isvectorized", i32 1}
!135 = !{!"llvm.loop.unroll.runtime.disable"}
!136 = distinct !{!136, !29, !134}
!137 = distinct !{!137, !29}
!138 = distinct !{!138, !29}
!139 = distinct !{!139, !29}
!140 = distinct !{!140, !29}
!141 = distinct !{!141, !29}
!142 = distinct !{!142, !29}
!143 = distinct !{!143, !29}
!144 = distinct !{!144, !29}
!145 = distinct !{!145, !29, !134, !135}
!146 = distinct !{!146, !29}
!147 = distinct !{!147, !29, !134}
!148 = distinct !{!148, !29, !134, !135}
!149 = distinct !{!149, !29}
!150 = distinct !{!150, !29}
!151 = distinct !{!151, !29, !134}
!152 = distinct !{!152, !29, !134, !135}
!153 = distinct !{!153, !154}
!154 = !{!"llvm.loop.unroll.disable"}
!155 = distinct !{!155, !29, !134}
!156 = distinct !{!156, !29, !134, !135}
!157 = distinct !{!157, !154}
!158 = distinct !{!158, !29, !134}
!159 = distinct !{!159, !154}
!160 = distinct !{!160, !29}
!161 = distinct !{!161, !29}
!162 = distinct !{!162, !29, !134, !135}
!163 = distinct !{!163, !154}
!164 = distinct !{!164, !29, !134}
!165 = distinct !{!165, !29}
!166 = distinct !{!166, !154}
!167 = distinct !{!167, !29, !134, !135}
!168 = distinct !{!168, !29, !135, !134}
!169 = distinct !{!169, !154}
!170 = distinct !{!170, !29, !134, !135}
!171 = distinct !{!171, !29, !135, !134}
!172 = distinct !{!172, !154}
!173 = distinct !{!173, !154}
!174 = distinct !{!174, !154}
!175 = distinct !{!175, !154}
!176 = !{!177}
!177 = distinct !{!177, !178}
!178 = distinct !{!178, !"LVerDomain"}
!179 = !{!180}
!180 = distinct !{!180, !178}
!181 = distinct !{!181, !29, !134, !135}
!182 = distinct !{!182, !29, !134}
!183 = distinct !{!183, !29, !134, !135}
!184 = distinct !{!184, !29, !135, !134}
!185 = distinct !{!185, !29}
!186 = distinct !{!186, !29, !134, !135}
!187 = distinct !{!187, !154}
!188 = distinct !{!188, !29, !134}
!189 = distinct !{!189, !154}
!190 = distinct !{!190, !29}
!191 = distinct !{!191, !29}
!192 = distinct !{!192, !29, !134, !135}
!193 = distinct !{!193, !154}
!194 = distinct !{!194, !29, !134}
!195 = distinct !{!195, !154}
!196 = distinct !{!196, !29, !134, !135}
!197 = distinct !{!197, !29, !135, !134}
!198 = distinct !{!198, !154}
!199 = distinct !{!199, !29, !134, !135}
!200 = distinct !{!200, !29, !135, !134}
!201 = distinct !{!201, !154}
!202 = distinct !{!202, !154}
!203 = distinct !{!203, !154}
!204 = distinct !{!204, !154}
!205 = !{!206}
!206 = distinct !{!206, !207}
!207 = distinct !{!207, !"LVerDomain"}
!208 = !{!209}
!209 = distinct !{!209, !207}
!210 = distinct !{!210, !29, !134, !135}
!211 = distinct !{!211, !29, !134}
!212 = distinct !{!212, !29, !134, !135}
!213 = distinct !{!213, !29, !135, !134}
!214 = distinct !{!214, !29}
!215 = distinct !{!215, !29}
!216 = distinct !{!216, !29}
!217 = distinct !{!217, !29}
!218 = distinct !{!218, !29}
!219 = distinct !{!219, !29}
!220 = distinct !{!220, !29}
!221 = distinct !{!221, !29}
!222 = distinct !{!222, !29}
!223 = distinct !{!223, !29}
!224 = distinct !{!224, !29}
!225 = distinct !{!225, !29}
!226 = !{!227, !6, i64 0}
!227 = !{!"_ZTSSt4pairIKiiE", !6, i64 0, !6, i64 4}
!228 = !{!227, !6, i64 4}
!229 = distinct !{!229, !29}
!230 = !{!100, !14, i64 24}
!231 = distinct !{!231, !29}
!232 = !{!100, !14, i64 16}
!233 = distinct !{!233, !29}
!234 = distinct !{!234, !29}
!235 = !{!125, !14, i64 0}
!236 = !{!125, !14, i64 8}
!237 = !{!125, !14, i64 16}
!238 = !{!125, !6, i64 24}
!239 = !{!125, !6, i64 28}
!240 = !{!125, !6, i64 32}
!241 = !{!125, !6, i64 36}
!242 = !{!125, !14, i64 40}
!243 = !{!125, !14, i64 48}
!244 = !{!125, !14, i64 56}
!245 = !{!125, !14, i64 64}
!246 = !{!125, !14, i64 80}
!247 = !{!125, !6, i64 76}
!248 = distinct !{!248, !29}
!249 = !{i64 0, i64 65}
!250 = distinct !{!250, !29}
!251 = distinct !{!251, !29}
!252 = distinct !{!252, !29}
!253 = distinct !{!253, !29}
!254 = distinct !{!254, !29}
!255 = distinct !{!255, !29}
!256 = distinct !{!256, !29}
!257 = distinct !{!257, !29}
!258 = distinct !{!258, !29}
!259 = distinct !{!259, !29}
!260 = distinct !{!260, !29}
!261 = distinct !{!261, !29}
!262 = distinct !{!262, !29}
!263 = distinct !{!263, !29}
!264 = !{!265, !15, i64 0}
!265 = !{!"_ZTSN6miniFE8ElemDataIidEE", !15, i64 0, !7, i64 8, !7, i64 40, !7, i64 1576, !7, i64 1768, !7, i64 2056}
!266 = distinct !{!266, !29}
!267 = distinct !{!267, !29}
!268 = distinct !{!268, !29}
!269 = distinct !{!269, !29}
!270 = distinct !{!270, !29}
!271 = distinct !{!271, !29}
!272 = distinct !{!272, !29}
!273 = distinct !{!273, !29}
!274 = distinct !{!274, !29, !134, !135}
!275 = distinct !{!275, !29, !135, !134}
!276 = distinct !{!276, !29}
!277 = distinct !{!277, !29}
!278 = distinct !{!278, !29}
!279 = distinct !{!279, !29}
