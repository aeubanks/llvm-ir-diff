; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MicroBenchmarks/LoopVectorization/VectorOperations.cpp'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MicroBenchmarks/LoopVectorization/VectorOperations.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::mersenne_twister_engine" = type { [624 x i64], i64 }
%"class.std::basic_ostream" = type { ptr, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", ptr, i8, i8, ptr, ptr, ptr, ptr }
%"class.std::ios_base" = type { ptr, i64, i64, i32, i32, i32, ptr, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, ptr, %"class.std::locale" }
%"struct.std::ios_base::_Words" = type { ptr, i64 }
%"class.std::locale" = type { ptr }
%"class.std::uniform_int_distribution" = type { %"struct.std::uniform_int_distribution<unsigned short>::param_type" }
%"struct.std::uniform_int_distribution<unsigned short>::param_type" = type { i16, i16 }
%"class.std::unique_ptr.33" = type { %"struct.std::__uniq_ptr_data.34" }
%"struct.std::__uniq_ptr_data.34" = type { %"class.std::__uniq_ptr_impl.35" }
%"class.std::__uniq_ptr_impl.35" = type { %"class.std::tuple.36" }
%"class.std::tuple.36" = type { %"struct.std::_Tuple_impl.37" }
%"struct.std::_Tuple_impl.37" = type { %"struct.std::_Head_base.40" }
%"struct.std::_Head_base.40" = type { ptr }
%"class.benchmark::State" = type { i64, i64, i64, i8, i8, i8, %"class.std::vector", i64, %"class.std::map", i32, i32, ptr, ptr, ptr }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<long, std::allocator<long>>::_Vector_impl" }
%"struct.std::_Vector_base<long, std::allocator<long>>::_Vector_impl" = type { %"struct.std::_Vector_base<long, std::allocator<long>>::_Vector_impl_data" }
%"struct.std::_Vector_base<long, std::allocator<long>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>>, std::less<std::__cxx11::basic_string<char>>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>>, std::less<std::__cxx11::basic_string<char>>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, ptr, ptr, ptr }
%"class.std::uniform_int_distribution.43" = type { %"struct.std::uniform_int_distribution<unsigned char>::param_type" }
%"struct.std::uniform_int_distribution<unsigned char>::param_type" = type { i8, i8 }
%"class.std::uniform_int_distribution.54" = type { %"struct.std::uniform_int_distribution<unsigned int>::param_type" }
%"struct.std::uniform_int_distribution<unsigned int>::param_type" = type { i32, i32 }
%"class.std::uniform_int_distribution.65" = type { %"struct.std::uniform_int_distribution<unsigned long>::param_type" }
%"struct.std::uniform_int_distribution<unsigned long>::param_type" = type { i64, i64 }
%"class.std::unique_ptr" = type { %"struct.std::__uniq_ptr_data" }
%"struct.std::__uniq_ptr_data" = type { %"class.std::__uniq_ptr_impl" }
%"class.std::__uniq_ptr_impl" = type { %"class.std::tuple" }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base.32" }
%"struct.std::_Head_base.32" = type { ptr }
%"class.std::unique_ptr.44" = type { %"struct.std::__uniq_ptr_data.45" }
%"struct.std::__uniq_ptr_data.45" = type { %"class.std::__uniq_ptr_impl.46" }
%"class.std::__uniq_ptr_impl.46" = type { %"class.std::tuple.47" }
%"class.std::tuple.47" = type { %"struct.std::_Tuple_impl.48" }
%"struct.std::_Tuple_impl.48" = type { %"struct.std::_Head_base.51" }
%"struct.std::_Head_base.51" = type { ptr }
%"class.std::unique_ptr.55" = type { %"struct.std::__uniq_ptr_data.56" }
%"struct.std::__uniq_ptr_data.56" = type { %"class.std::__uniq_ptr_impl.57" }
%"class.std::__uniq_ptr_impl.57" = type { %"class.std::tuple.58" }
%"class.std::tuple.58" = type { %"struct.std::_Tuple_impl.59" }
%"struct.std::_Tuple_impl.59" = type { %"struct.std::_Head_base.62" }
%"struct.std::_Head_base.62" = type { ptr }
%"class.benchmark::internal::FunctionBenchmark" = type { %"class.benchmark::internal::Benchmark", ptr }
%"class.benchmark::internal::Benchmark" = type { ptr, %"class.std::__cxx11::basic_string", i32, %"class.std::vector.6", %"class.std::vector.11", i32, i8, i32, double, i64, i32, i8, i8, i8, i32, ptr, %"class.std::vector.16", %"class.std::vector.26", ptr, ptr }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { ptr }
%union.anon = type { i64, [8 x i8] }
%"class.std::vector.6" = type { %"struct.std::_Vector_base.7" }
%"struct.std::_Vector_base.7" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.11" = type { %"struct.std::_Vector_base.12" }
%"struct.std::_Vector_base.12" = type { %"struct.std::_Vector_base<std::vector<long>, std::allocator<std::vector<long>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<long>, std::allocator<std::vector<long>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<long>, std::allocator<std::vector<long>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<long>, std::allocator<std::vector<long>>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.16" = type { %"struct.std::_Vector_base.17" }
%"struct.std::_Vector_base.17" = type { %"struct.std::_Vector_base<benchmark::internal::Statistics, std::allocator<benchmark::internal::Statistics>>::_Vector_impl" }
%"struct.std::_Vector_base<benchmark::internal::Statistics, std::allocator<benchmark::internal::Statistics>>::_Vector_impl" = type { %"struct.std::_Vector_base<benchmark::internal::Statistics, std::allocator<benchmark::internal::Statistics>>::_Vector_impl_data" }
%"struct.std::_Vector_base<benchmark::internal::Statistics, std::allocator<benchmark::internal::Statistics>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.26" = type { %"struct.std::_Vector_base.27" }
%"struct.std::_Vector_base.27" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { ptr, ptr, ptr }

$_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE = comdat any

$_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv = comdat any

$_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE = comdat any

$_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE = comdat any

$_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZL3rng = internal global %"class.std::mersenne_twister_engine" zeroinitializer, align 8
@_ZL27benchmark_uniq_2_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint8_t_\00", align 1
@_ZL27benchmark_uniq_3_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.5 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint8_t_\00", align 1
@_ZL27benchmark_uniq_4_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.7 = private unnamed_addr constant [54 x i8] c"benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint8_t_\00", align 1
@_ZL27benchmark_uniq_5_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.9 = private unnamed_addr constant [68 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint8_t_\00", align 1
@_ZL27benchmark_uniq_6_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.11 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint8_t_\00", align 1
@_ZL27benchmark_uniq_7_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.13 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint8_t_\00", align 1
@_ZL27benchmark_uniq_8_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.15 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint8_t_\00", align 1
@_ZL27benchmark_uniq_9_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.17 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_10_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.19 = private unnamed_addr constant [54 x i8] c"benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_11_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.21 = private unnamed_addr constant [68 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_12_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.23 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_13_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.25 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_14_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.27 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_15_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.29 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_16_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.31 = private unnamed_addr constant [54 x i8] c"benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_17_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.33 = private unnamed_addr constant [68 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_18_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.35 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_19_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.37 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_20_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.39 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_21_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.41 = private unnamed_addr constant [63 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_22_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.43 = private unnamed_addr constant [55 x i8] c"benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_23_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.45 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_24_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.47 = private unnamed_addr constant [70 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_25_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.49 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_26_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.51 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_27_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.53 = private unnamed_addr constant [63 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_28_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.55 = private unnamed_addr constant [55 x i8] c"benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_29_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.57 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_30_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.59 = private unnamed_addr constant [70 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_31_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.61 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_32_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.63 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_33_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.65 = private unnamed_addr constant [63 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_34_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.67 = private unnamed_addr constant [55 x i8] c"benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_35_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.69 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_36_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.71 = private unnamed_addr constant [70 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_37_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.73 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_38_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.75 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_39_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.77 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_40_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.79 = private unnamed_addr constant [54 x i8] c"benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_41_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.81 = private unnamed_addr constant [68 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_42_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.83 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_43_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.85 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_44_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.87 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_45_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.89 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_46_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.91 = private unnamed_addr constant [54 x i8] c"benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_47_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.93 = private unnamed_addr constant [68 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_48_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.95 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_49_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.97 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_50_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.99 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_51_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.101 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_52_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.103 = private unnamed_addr constant [54 x i8] c"benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_53_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.105 = private unnamed_addr constant [68 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_54_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.107 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_55_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.109 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_56_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.111 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_57_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.113 = private unnamed_addr constant [63 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_58_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.115 = private unnamed_addr constant [55 x i8] c"benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_59_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.117 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_60_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.119 = private unnamed_addr constant [70 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_61_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.121 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_62_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.123 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_63_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.125 = private unnamed_addr constant [63 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_64_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.127 = private unnamed_addr constant [55 x i8] c"benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_65_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.129 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_66_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.131 = private unnamed_addr constant [70 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_67_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.133 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_68_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.135 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_69_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.137 = private unnamed_addr constant [63 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_70_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.139 = private unnamed_addr constant [55 x i8] c"benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_71_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.141 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_72_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.143 = private unnamed_addr constant [70 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_73_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.145 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint64_t_\00", align 1
@_ZTVN9benchmark8internal17FunctionBenchmarkE = external unnamed_addr constant { [5 x ptr] }, align 8
@_ZSt4cerr = external global %"class.std::basic_ostream", align 8
@.str.146 = private unnamed_addr constant [35 x i8] c"ERROR: Trunc or ZExt operation on \00", align 1
@.str.147 = private unnamed_addr constant [20 x i8] c" is showing result \00", align 1
@.str.148 = private unnamed_addr constant [13 x i8] c" instead of \00", align 1
@.str.149 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_VectorOperations.cpp, ptr null }]

declare void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(ptr noundef nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(ptr, ptr, ptr) local_unnamed_addr #2

declare noundef i32 @_ZN9benchmark8internal17InitializeStreamsEv() local_unnamed_addr #0

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::unique_ptr.33", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %9, align 2, !tbaa !12
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i16, ptr %4, i64 %11
  store i16 %12, ptr %14, align 2, !tbaa !13
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !14

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i16, ptr %4, i64 %19
  %21 = load i16, ptr %20, align 2, !tbaa !13
  %22 = trunc i16 %21 to i8
  %23 = getelementptr inbounds i8, ptr %7, i64 %19
  store i8 %22, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i16, ptr %4, i64 %24
  %26 = load i16, ptr %25, align 2, !tbaa !13
  %27 = trunc i16 %26 to i8
  %28 = getelementptr inbounds i8, ptr %7, i64 %24
  store i8 %27, ptr %28, align 1, !tbaa !16
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i16, ptr %4, i64 %29
  %31 = load i16, ptr %30, align 2, !tbaa !13
  %32 = trunc i16 %31 to i8
  %33 = getelementptr inbounds i8, ptr %7, i64 %29
  store i8 %32, ptr %33, align 1, !tbaa !16
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i16, ptr %4, i64 %34
  %36 = load i16, ptr %35, align 2, !tbaa !13
  %37 = trunc i16 %36 to i8
  %38 = getelementptr inbounds i8, ptr %7, i64 %34
  store i8 %37, ptr %38, align 1, !tbaa !16
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i16, ptr %4, i64 %39
  %41 = load i16, ptr %40, align 2, !tbaa !13
  %42 = trunc i16 %41 to i8
  %43 = getelementptr inbounds i8, ptr %7, i64 %39
  store i8 %42, ptr %43, align 1, !tbaa !16
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !17

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i16, ptr %4, i64 %47
  %49 = load <8 x i16>, ptr %48, align 2, !tbaa !13
  %50 = getelementptr inbounds i16, ptr %48, i64 8
  %51 = load <8 x i16>, ptr %50, align 2, !tbaa !13
  %52 = getelementptr inbounds i16, ptr %48, i64 16
  %53 = load <8 x i16>, ptr %52, align 2, !tbaa !13
  %54 = getelementptr inbounds i16, ptr %48, i64 24
  %55 = load <8 x i16>, ptr %54, align 2, !tbaa !13
  %56 = trunc <8 x i16> %49 to <8 x i8>
  %57 = trunc <8 x i16> %51 to <8 x i8>
  %58 = trunc <8 x i16> %53 to <8 x i8>
  %59 = trunc <8 x i16> %55 to <8 x i8>
  %60 = getelementptr inbounds i8, ptr %5, i64 %47
  store <8 x i8> %56, ptr %60, align 1, !tbaa !16
  %61 = getelementptr inbounds i8, ptr %60, i64 8
  store <8 x i8> %57, ptr %61, align 1, !tbaa !16
  %62 = getelementptr inbounds i8, ptr %60, i64 16
  store <8 x i8> %58, ptr %62, align 1, !tbaa !16
  %63 = getelementptr inbounds i8, ptr %60, i64 24
  store <8 x i8> %59, ptr %63, align 1, !tbaa !16
  %64 = add nuw i64 %47, 32
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !19

66:                                               ; preds = %46
  %67 = getelementptr inbounds i16, ptr %4, i64 9984
  %68 = load i16, ptr %67, align 2, !tbaa !13
  %69 = trunc i16 %68 to i8
  %70 = getelementptr inbounds i8, ptr %5, i64 9984
  store i8 %69, ptr %70, align 1, !tbaa !16
  %71 = getelementptr inbounds i16, ptr %4, i64 9985
  %72 = load i16, ptr %71, align 2, !tbaa !13
  %73 = trunc i16 %72 to i8
  %74 = getelementptr inbounds i8, ptr %5, i64 9985
  store i8 %73, ptr %74, align 1, !tbaa !16
  %75 = getelementptr inbounds i16, ptr %4, i64 9986
  %76 = load i16, ptr %75, align 2, !tbaa !13
  %77 = trunc i16 %76 to i8
  %78 = getelementptr inbounds i8, ptr %5, i64 9986
  store i8 %77, ptr %78, align 1, !tbaa !16
  %79 = getelementptr inbounds i16, ptr %4, i64 9987
  %80 = load i16, ptr %79, align 2, !tbaa !13
  %81 = trunc i16 %80 to i8
  %82 = getelementptr inbounds i8, ptr %5, i64 9987
  store i8 %81, ptr %82, align 1, !tbaa !16
  %83 = getelementptr inbounds i16, ptr %4, i64 9988
  %84 = load i16, ptr %83, align 2, !tbaa !13
  %85 = trunc i16 %84 to i8
  %86 = getelementptr inbounds i8, ptr %5, i64 9988
  store i8 %85, ptr %86, align 1, !tbaa !16
  %87 = getelementptr inbounds i16, ptr %4, i64 9989
  %88 = load i16, ptr %87, align 2, !tbaa !13
  %89 = trunc i16 %88 to i8
  %90 = getelementptr inbounds i8, ptr %5, i64 9989
  store i8 %89, ptr %90, align 1, !tbaa !16
  %91 = getelementptr inbounds i16, ptr %4, i64 9990
  %92 = load i16, ptr %91, align 2, !tbaa !13
  %93 = trunc i16 %92 to i8
  %94 = getelementptr inbounds i8, ptr %5, i64 9990
  store i8 %93, ptr %94, align 1, !tbaa !16
  %95 = getelementptr inbounds i16, ptr %4, i64 9991
  %96 = load i16, ptr %95, align 2, !tbaa !13
  %97 = trunc i16 %96 to i8
  %98 = getelementptr inbounds i8, ptr %5, i64 9991
  store i8 %97, ptr %98, align 1, !tbaa !16
  %99 = getelementptr inbounds i16, ptr %4, i64 9992
  %100 = load i16, ptr %99, align 2, !tbaa !13
  %101 = trunc i16 %100 to i8
  %102 = getelementptr inbounds i8, ptr %5, i64 9992
  store i8 %101, ptr %102, align 1, !tbaa !16
  %103 = getelementptr inbounds i16, ptr %4, i64 9993
  %104 = load i16, ptr %103, align 2, !tbaa !13
  %105 = trunc i16 %104 to i8
  %106 = getelementptr inbounds i8, ptr %5, i64 9993
  store i8 %105, ptr %106, align 1, !tbaa !16
  %107 = getelementptr inbounds i16, ptr %4, i64 9994
  %108 = load i16, ptr %107, align 2, !tbaa !13
  %109 = trunc i16 %108 to i8
  %110 = getelementptr inbounds i8, ptr %5, i64 9994
  store i8 %109, ptr %110, align 1, !tbaa !16
  %111 = getelementptr inbounds i16, ptr %4, i64 9995
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = trunc i16 %112 to i8
  %114 = getelementptr inbounds i8, ptr %5, i64 9995
  store i8 %113, ptr %114, align 1, !tbaa !16
  %115 = getelementptr inbounds i16, ptr %4, i64 9996
  %116 = load i16, ptr %115, align 2, !tbaa !13
  %117 = trunc i16 %116 to i8
  %118 = getelementptr inbounds i8, ptr %5, i64 9996
  store i8 %117, ptr %118, align 1, !tbaa !16
  %119 = getelementptr inbounds i16, ptr %4, i64 9997
  %120 = load i16, ptr %119, align 2, !tbaa !13
  %121 = trunc i16 %120 to i8
  %122 = getelementptr inbounds i8, ptr %5, i64 9997
  store i8 %121, ptr %122, align 1, !tbaa !16
  %123 = getelementptr inbounds i16, ptr %4, i64 9998
  %124 = load i16, ptr %123, align 2, !tbaa !13
  %125 = trunc i16 %124 to i8
  %126 = getelementptr inbounds i8, ptr %5, i64 9998
  store i8 %125, ptr %126, align 1, !tbaa !16
  %127 = getelementptr inbounds i16, ptr %4, i64 9999
  %128 = load i16, ptr %127, align 2, !tbaa !13
  %129 = trunc i16 %128 to i8
  %130 = getelementptr inbounds i8, ptr %5, i64 9999
  store i8 %129, ptr %130, align 1, !tbaa !16
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %282

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %279

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %275

137:                                              ; preds = %198, %66
  %138 = phi i64 [ 0, %66 ], [ %199, %198 ]
  %139 = getelementptr inbounds i8, ptr %5, i64 %138
  %140 = load i8, ptr %139, align 1, !tbaa !16
  %141 = getelementptr inbounds i8, ptr %7, i64 %138
  %142 = load i8, ptr %141, align 1, !tbaa !16
  %143 = icmp eq i8 %140, %142
  br i1 %143, label %170, label %144

144:                                              ; preds = %191, %184, %177, %170, %137
  %145 = phi i64 [ %138, %137 ], [ %171, %170 ], [ %178, %177 ], [ %185, %184 ], [ %192, %191 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i8, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %168

149:                                              ; preds = %144
  %150 = getelementptr inbounds i16, ptr %4, i64 %146
  %151 = load i16, ptr %150, align 2, !tbaa !13
  %152 = zext i16 %151 to i64
  %153 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %152)
          to label %154 unwind label %168

154:                                              ; preds = %149
  %155 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %153, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %156 unwind label %168

156:                                              ; preds = %154
  %157 = getelementptr inbounds i8, ptr %5, i64 %146
  %158 = load i8, ptr %157, align 1, !tbaa !16
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %153, i8 noundef zeroext %158)
          to label %160 unwind label %168

160:                                              ; preds = %156
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %162 unwind label %168

162:                                              ; preds = %160
  %163 = load i8, ptr %147, align 1, !tbaa !16
  %164 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %159, i8 noundef zeroext %163)
          to label %165 unwind label %168

165:                                              ; preds = %162
  %166 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %164, ptr noundef nonnull @.str.149)
          to label %167 unwind label %168

167:                                              ; preds = %165
  call void @exit(i32 noundef 1) #12
  unreachable

168:                                              ; preds = %165, %162, %160, %156, %154, %149, %144
  %169 = landingpad { ptr, i32 }
          cleanup
  br label %275

170:                                              ; preds = %137
  %171 = add nuw nsw i64 %138, 1
  %172 = getelementptr inbounds i8, ptr %5, i64 %171
  %173 = load i8, ptr %172, align 1, !tbaa !16
  %174 = getelementptr inbounds i8, ptr %7, i64 %171
  %175 = load i8, ptr %174, align 1, !tbaa !16
  %176 = icmp eq i8 %173, %175
  br i1 %176, label %177, label %144

177:                                              ; preds = %170
  %178 = add nuw nsw i64 %138, 2
  %179 = getelementptr inbounds i8, ptr %5, i64 %178
  %180 = load i8, ptr %179, align 1, !tbaa !16
  %181 = getelementptr inbounds i8, ptr %7, i64 %178
  %182 = load i8, ptr %181, align 1, !tbaa !16
  %183 = icmp eq i8 %180, %182
  br i1 %183, label %184, label %144

184:                                              ; preds = %177
  %185 = add nuw nsw i64 %138, 3
  %186 = getelementptr inbounds i8, ptr %5, i64 %185
  %187 = load i8, ptr %186, align 1, !tbaa !16
  %188 = getelementptr inbounds i8, ptr %7, i64 %185
  %189 = load i8, ptr %188, align 1, !tbaa !16
  %190 = icmp eq i8 %187, %189
  br i1 %190, label %191, label %144

191:                                              ; preds = %184
  %192 = add nuw nsw i64 %138, 4
  %193 = getelementptr inbounds i8, ptr %5, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !16
  %195 = getelementptr inbounds i8, ptr %7, i64 %192
  %196 = load i8, ptr %195, align 1, !tbaa !16
  %197 = icmp eq i8 %194, %196
  br i1 %197, label %198, label %144

198:                                              ; preds = %191
  %199 = add nuw nsw i64 %138, 5
  %200 = icmp eq i64 %199, 10000
  br i1 %200, label %201, label %137, !llvm.loop !22

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %203 = load i8, ptr %202, align 2, !tbaa !23, !range !40, !noundef !41
  %204 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %205 = load i64, ptr %204, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %206 unwind label %217

206:                                              ; preds = %201
  %207 = icmp ne i8 %203, 0
  %208 = icmp eq i64 %205, 0
  %209 = select i1 %207, i1 true, i1 %208
  br i1 %209, label %212, label %210, !prof !42

210:                                              ; preds = %206
  %211 = getelementptr i8, ptr %4, i64 20000
  br label %219

212:                                              ; preds = %272, %206
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %213 unwind label %217

213:                                              ; preds = %212
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %214 = load ptr, ptr %3, align 8, !tbaa !5
  %215 = icmp eq ptr %214, null
  br i1 %215, label %284, label %216

216:                                              ; preds = %213
  call void @_ZdaPv(ptr noundef nonnull %214) #13
  br label %284

217:                                              ; preds = %212, %201
  %218 = landingpad { ptr, i32 }
          cleanup
  br label %275

219:                                              ; preds = %210, %272
  %220 = phi i64 [ %273, %272 ], [ %205, %210 ]
  %221 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %3, i64 %221) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %222 = load ptr, ptr %3, align 8, !tbaa !5
  %223 = getelementptr i8, ptr %222, i64 10000
  %224 = icmp ult ptr %222, %211
  %225 = icmp ult ptr %4, %223
  %226 = and i1 %224, %225
  br i1 %226, label %247, label %227

227:                                              ; preds = %219, %227
  %228 = phi i64 [ %245, %227 ], [ 0, %219 ]
  %229 = getelementptr inbounds i16, ptr %4, i64 %228
  %230 = load <8 x i16>, ptr %229, align 2, !tbaa !13, !alias.scope !44
  %231 = getelementptr inbounds i16, ptr %229, i64 8
  %232 = load <8 x i16>, ptr %231, align 2, !tbaa !13, !alias.scope !44
  %233 = getelementptr inbounds i16, ptr %229, i64 16
  %234 = load <8 x i16>, ptr %233, align 2, !tbaa !13, !alias.scope !44
  %235 = getelementptr inbounds i16, ptr %229, i64 24
  %236 = load <8 x i16>, ptr %235, align 2, !tbaa !13, !alias.scope !44
  %237 = trunc <8 x i16> %230 to <8 x i8>
  %238 = trunc <8 x i16> %232 to <8 x i8>
  %239 = trunc <8 x i16> %234 to <8 x i8>
  %240 = trunc <8 x i16> %236 to <8 x i8>
  %241 = getelementptr inbounds i8, ptr %222, i64 %228
  store <8 x i8> %237, ptr %241, align 1, !tbaa !16, !alias.scope !47, !noalias !44
  %242 = getelementptr inbounds i8, ptr %241, i64 8
  store <8 x i8> %238, ptr %242, align 1, !tbaa !16, !alias.scope !47, !noalias !44
  %243 = getelementptr inbounds i8, ptr %241, i64 16
  store <8 x i8> %239, ptr %243, align 1, !tbaa !16, !alias.scope !47, !noalias !44
  %244 = getelementptr inbounds i8, ptr %241, i64 24
  store <8 x i8> %240, ptr %244, align 1, !tbaa !16, !alias.scope !47, !noalias !44
  %245 = add nuw i64 %228, 32
  %246 = icmp eq i64 %245, 9984
  br i1 %246, label %247, label %227, !llvm.loop !49

247:                                              ; preds = %227, %219
  %248 = phi i64 [ 0, %219 ], [ 9984, %227 ]
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ %248, %247 ], [ %270, %249 ]
  %251 = getelementptr inbounds i16, ptr %4, i64 %250
  %252 = load i16, ptr %251, align 2, !tbaa !13
  %253 = trunc i16 %252 to i8
  %254 = getelementptr inbounds i8, ptr %222, i64 %250
  store i8 %253, ptr %254, align 1, !tbaa !16
  %255 = or i64 %250, 1
  %256 = getelementptr inbounds i16, ptr %4, i64 %255
  %257 = load i16, ptr %256, align 2, !tbaa !13
  %258 = trunc i16 %257 to i8
  %259 = getelementptr inbounds i8, ptr %222, i64 %255
  store i8 %258, ptr %259, align 1, !tbaa !16
  %260 = or i64 %250, 2
  %261 = getelementptr inbounds i16, ptr %4, i64 %260
  %262 = load i16, ptr %261, align 2, !tbaa !13
  %263 = trunc i16 %262 to i8
  %264 = getelementptr inbounds i8, ptr %222, i64 %260
  store i8 %263, ptr %264, align 1, !tbaa !16
  %265 = or i64 %250, 3
  %266 = getelementptr inbounds i16, ptr %4, i64 %265
  %267 = load i16, ptr %266, align 2, !tbaa !13
  %268 = trunc i16 %267 to i8
  %269 = getelementptr inbounds i8, ptr %222, i64 %265
  store i8 %268, ptr %269, align 1, !tbaa !16
  %270 = add nuw nsw i64 %250, 4
  %271 = icmp eq i64 %270, 10000
  br i1 %271, label %272, label %249, !llvm.loop !50

272:                                              ; preds = %249
  %273 = add i64 %220, -1
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %212, label %219, !prof !42

275:                                              ; preds = %217, %168, %135
  %276 = phi { ptr, i32 } [ %169, %168 ], [ %218, %217 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %277 = load ptr, ptr %3, align 8, !tbaa !5
  %278 = icmp eq ptr %277, null
  br i1 %278, label %282, label %279

279:                                              ; preds = %275, %133
  %280 = phi { ptr, i32 } [ %134, %133 ], [ %276, %275 ]
  %281 = phi ptr [ %5, %133 ], [ %277, %275 ]
  call void @_ZdaPv(ptr noundef nonnull %281) #13
  br label %282

282:                                              ; preds = %279, %275, %131
  %283 = phi { ptr, i32 } [ %132, %131 ], [ %276, %275 ], [ %280, %279 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %283

284:                                              ; preds = %213, %216
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

declare noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef) local_unnamed_addr #0

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #4

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #5

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::unique_ptr.33", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %9, align 2, !tbaa !12
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i16, ptr %4, i64 %11
  store i16 %12, ptr %14, align 2, !tbaa !13
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !14

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i16, ptr %4, i64 %19
  %21 = load i16, ptr %20, align 2, !tbaa !13
  %22 = trunc i16 %21 to i8
  %23 = getelementptr inbounds i8, ptr %7, i64 %19
  store i8 %22, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i16, ptr %4, i64 %24
  %26 = load i16, ptr %25, align 2, !tbaa !13
  %27 = trunc i16 %26 to i8
  %28 = getelementptr inbounds i8, ptr %7, i64 %24
  store i8 %27, ptr %28, align 1, !tbaa !16
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i16, ptr %4, i64 %29
  %31 = load i16, ptr %30, align 2, !tbaa !13
  %32 = trunc i16 %31 to i8
  %33 = getelementptr inbounds i8, ptr %7, i64 %29
  store i8 %32, ptr %33, align 1, !tbaa !16
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i16, ptr %4, i64 %34
  %36 = load i16, ptr %35, align 2, !tbaa !13
  %37 = trunc i16 %36 to i8
  %38 = getelementptr inbounds i8, ptr %7, i64 %34
  store i8 %37, ptr %38, align 1, !tbaa !16
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i16, ptr %4, i64 %39
  %41 = load i16, ptr %40, align 2, !tbaa !13
  %42 = trunc i16 %41 to i8
  %43 = getelementptr inbounds i8, ptr %7, i64 %39
  store i8 %42, ptr %43, align 1, !tbaa !16
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !17

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i16, ptr %4, i64 %47
  %49 = load <16 x i16>, ptr %48, align 2, !tbaa !13
  %50 = getelementptr inbounds i16, ptr %48, i64 16
  %51 = load <16 x i16>, ptr %50, align 2, !tbaa !13
  %52 = getelementptr inbounds i16, ptr %48, i64 32
  %53 = load <16 x i16>, ptr %52, align 2, !tbaa !13
  %54 = getelementptr inbounds i16, ptr %48, i64 48
  %55 = load <16 x i16>, ptr %54, align 2, !tbaa !13
  %56 = trunc <16 x i16> %49 to <16 x i8>
  %57 = trunc <16 x i16> %51 to <16 x i8>
  %58 = trunc <16 x i16> %53 to <16 x i8>
  %59 = trunc <16 x i16> %55 to <16 x i8>
  %60 = getelementptr inbounds i8, ptr %5, i64 %47
  store <16 x i8> %56, ptr %60, align 1, !tbaa !16
  %61 = getelementptr inbounds i8, ptr %60, i64 16
  store <16 x i8> %57, ptr %61, align 1, !tbaa !16
  %62 = getelementptr inbounds i8, ptr %60, i64 32
  store <16 x i8> %58, ptr %62, align 1, !tbaa !16
  %63 = getelementptr inbounds i8, ptr %60, i64 48
  store <16 x i8> %59, ptr %63, align 1, !tbaa !16
  %64 = add nuw i64 %47, 64
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !51

66:                                               ; preds = %46
  %67 = getelementptr inbounds i16, ptr %4, i64 9984
  %68 = load i16, ptr %67, align 2, !tbaa !13
  %69 = trunc i16 %68 to i8
  %70 = getelementptr inbounds i8, ptr %5, i64 9984
  store i8 %69, ptr %70, align 1, !tbaa !16
  %71 = getelementptr inbounds i16, ptr %4, i64 9985
  %72 = load i16, ptr %71, align 2, !tbaa !13
  %73 = trunc i16 %72 to i8
  %74 = getelementptr inbounds i8, ptr %5, i64 9985
  store i8 %73, ptr %74, align 1, !tbaa !16
  %75 = getelementptr inbounds i16, ptr %4, i64 9986
  %76 = load i16, ptr %75, align 2, !tbaa !13
  %77 = trunc i16 %76 to i8
  %78 = getelementptr inbounds i8, ptr %5, i64 9986
  store i8 %77, ptr %78, align 1, !tbaa !16
  %79 = getelementptr inbounds i16, ptr %4, i64 9987
  %80 = load i16, ptr %79, align 2, !tbaa !13
  %81 = trunc i16 %80 to i8
  %82 = getelementptr inbounds i8, ptr %5, i64 9987
  store i8 %81, ptr %82, align 1, !tbaa !16
  %83 = getelementptr inbounds i16, ptr %4, i64 9988
  %84 = load i16, ptr %83, align 2, !tbaa !13
  %85 = trunc i16 %84 to i8
  %86 = getelementptr inbounds i8, ptr %5, i64 9988
  store i8 %85, ptr %86, align 1, !tbaa !16
  %87 = getelementptr inbounds i16, ptr %4, i64 9989
  %88 = load i16, ptr %87, align 2, !tbaa !13
  %89 = trunc i16 %88 to i8
  %90 = getelementptr inbounds i8, ptr %5, i64 9989
  store i8 %89, ptr %90, align 1, !tbaa !16
  %91 = getelementptr inbounds i16, ptr %4, i64 9990
  %92 = load i16, ptr %91, align 2, !tbaa !13
  %93 = trunc i16 %92 to i8
  %94 = getelementptr inbounds i8, ptr %5, i64 9990
  store i8 %93, ptr %94, align 1, !tbaa !16
  %95 = getelementptr inbounds i16, ptr %4, i64 9991
  %96 = load i16, ptr %95, align 2, !tbaa !13
  %97 = trunc i16 %96 to i8
  %98 = getelementptr inbounds i8, ptr %5, i64 9991
  store i8 %97, ptr %98, align 1, !tbaa !16
  %99 = getelementptr inbounds i16, ptr %4, i64 9992
  %100 = load i16, ptr %99, align 2, !tbaa !13
  %101 = trunc i16 %100 to i8
  %102 = getelementptr inbounds i8, ptr %5, i64 9992
  store i8 %101, ptr %102, align 1, !tbaa !16
  %103 = getelementptr inbounds i16, ptr %4, i64 9993
  %104 = load i16, ptr %103, align 2, !tbaa !13
  %105 = trunc i16 %104 to i8
  %106 = getelementptr inbounds i8, ptr %5, i64 9993
  store i8 %105, ptr %106, align 1, !tbaa !16
  %107 = getelementptr inbounds i16, ptr %4, i64 9994
  %108 = load i16, ptr %107, align 2, !tbaa !13
  %109 = trunc i16 %108 to i8
  %110 = getelementptr inbounds i8, ptr %5, i64 9994
  store i8 %109, ptr %110, align 1, !tbaa !16
  %111 = getelementptr inbounds i16, ptr %4, i64 9995
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = trunc i16 %112 to i8
  %114 = getelementptr inbounds i8, ptr %5, i64 9995
  store i8 %113, ptr %114, align 1, !tbaa !16
  %115 = getelementptr inbounds i16, ptr %4, i64 9996
  %116 = load i16, ptr %115, align 2, !tbaa !13
  %117 = trunc i16 %116 to i8
  %118 = getelementptr inbounds i8, ptr %5, i64 9996
  store i8 %117, ptr %118, align 1, !tbaa !16
  %119 = getelementptr inbounds i16, ptr %4, i64 9997
  %120 = load i16, ptr %119, align 2, !tbaa !13
  %121 = trunc i16 %120 to i8
  %122 = getelementptr inbounds i8, ptr %5, i64 9997
  store i8 %121, ptr %122, align 1, !tbaa !16
  %123 = getelementptr inbounds i16, ptr %4, i64 9998
  %124 = load i16, ptr %123, align 2, !tbaa !13
  %125 = trunc i16 %124 to i8
  %126 = getelementptr inbounds i8, ptr %5, i64 9998
  store i8 %125, ptr %126, align 1, !tbaa !16
  %127 = getelementptr inbounds i16, ptr %4, i64 9999
  %128 = load i16, ptr %127, align 2, !tbaa !13
  %129 = trunc i16 %128 to i8
  %130 = getelementptr inbounds i8, ptr %5, i64 9999
  store i8 %129, ptr %130, align 1, !tbaa !16
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %282

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %279

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %275

137:                                              ; preds = %198, %66
  %138 = phi i64 [ 0, %66 ], [ %199, %198 ]
  %139 = getelementptr inbounds i8, ptr %5, i64 %138
  %140 = load i8, ptr %139, align 1, !tbaa !16
  %141 = getelementptr inbounds i8, ptr %7, i64 %138
  %142 = load i8, ptr %141, align 1, !tbaa !16
  %143 = icmp eq i8 %140, %142
  br i1 %143, label %170, label %144

144:                                              ; preds = %191, %184, %177, %170, %137
  %145 = phi i64 [ %138, %137 ], [ %171, %170 ], [ %178, %177 ], [ %185, %184 ], [ %192, %191 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i8, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %168

149:                                              ; preds = %144
  %150 = getelementptr inbounds i16, ptr %4, i64 %146
  %151 = load i16, ptr %150, align 2, !tbaa !13
  %152 = zext i16 %151 to i64
  %153 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %152)
          to label %154 unwind label %168

154:                                              ; preds = %149
  %155 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %153, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %156 unwind label %168

156:                                              ; preds = %154
  %157 = getelementptr inbounds i8, ptr %5, i64 %146
  %158 = load i8, ptr %157, align 1, !tbaa !16
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %153, i8 noundef zeroext %158)
          to label %160 unwind label %168

160:                                              ; preds = %156
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %162 unwind label %168

162:                                              ; preds = %160
  %163 = load i8, ptr %147, align 1, !tbaa !16
  %164 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %159, i8 noundef zeroext %163)
          to label %165 unwind label %168

165:                                              ; preds = %162
  %166 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %164, ptr noundef nonnull @.str.149)
          to label %167 unwind label %168

167:                                              ; preds = %165
  call void @exit(i32 noundef 1) #12
  unreachable

168:                                              ; preds = %165, %162, %160, %156, %154, %149, %144
  %169 = landingpad { ptr, i32 }
          cleanup
  br label %275

170:                                              ; preds = %137
  %171 = add nuw nsw i64 %138, 1
  %172 = getelementptr inbounds i8, ptr %5, i64 %171
  %173 = load i8, ptr %172, align 1, !tbaa !16
  %174 = getelementptr inbounds i8, ptr %7, i64 %171
  %175 = load i8, ptr %174, align 1, !tbaa !16
  %176 = icmp eq i8 %173, %175
  br i1 %176, label %177, label %144

177:                                              ; preds = %170
  %178 = add nuw nsw i64 %138, 2
  %179 = getelementptr inbounds i8, ptr %5, i64 %178
  %180 = load i8, ptr %179, align 1, !tbaa !16
  %181 = getelementptr inbounds i8, ptr %7, i64 %178
  %182 = load i8, ptr %181, align 1, !tbaa !16
  %183 = icmp eq i8 %180, %182
  br i1 %183, label %184, label %144

184:                                              ; preds = %177
  %185 = add nuw nsw i64 %138, 3
  %186 = getelementptr inbounds i8, ptr %5, i64 %185
  %187 = load i8, ptr %186, align 1, !tbaa !16
  %188 = getelementptr inbounds i8, ptr %7, i64 %185
  %189 = load i8, ptr %188, align 1, !tbaa !16
  %190 = icmp eq i8 %187, %189
  br i1 %190, label %191, label %144

191:                                              ; preds = %184
  %192 = add nuw nsw i64 %138, 4
  %193 = getelementptr inbounds i8, ptr %5, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !16
  %195 = getelementptr inbounds i8, ptr %7, i64 %192
  %196 = load i8, ptr %195, align 1, !tbaa !16
  %197 = icmp eq i8 %194, %196
  br i1 %197, label %198, label %144

198:                                              ; preds = %191
  %199 = add nuw nsw i64 %138, 5
  %200 = icmp eq i64 %199, 10000
  br i1 %200, label %201, label %137, !llvm.loop !22

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %203 = load i8, ptr %202, align 2, !tbaa !23, !range !40, !noundef !41
  %204 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %205 = load i64, ptr %204, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %206 unwind label %217

206:                                              ; preds = %201
  %207 = icmp ne i8 %203, 0
  %208 = icmp eq i64 %205, 0
  %209 = select i1 %207, i1 true, i1 %208
  br i1 %209, label %212, label %210, !prof !42

210:                                              ; preds = %206
  %211 = getelementptr i8, ptr %4, i64 20000
  br label %219

212:                                              ; preds = %272, %206
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %213 unwind label %217

213:                                              ; preds = %212
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %214 = load ptr, ptr %3, align 8, !tbaa !5
  %215 = icmp eq ptr %214, null
  br i1 %215, label %284, label %216

216:                                              ; preds = %213
  call void @_ZdaPv(ptr noundef nonnull %214) #13
  br label %284

217:                                              ; preds = %212, %201
  %218 = landingpad { ptr, i32 }
          cleanup
  br label %275

219:                                              ; preds = %210, %272
  %220 = phi i64 [ %273, %272 ], [ %205, %210 ]
  %221 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %3, i64 %221) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %222 = load ptr, ptr %3, align 8, !tbaa !5
  %223 = getelementptr i8, ptr %222, i64 10000
  %224 = icmp ult ptr %222, %211
  %225 = icmp ult ptr %4, %223
  %226 = and i1 %224, %225
  br i1 %226, label %247, label %227

227:                                              ; preds = %219, %227
  %228 = phi i64 [ %245, %227 ], [ 0, %219 ]
  %229 = getelementptr inbounds i16, ptr %4, i64 %228
  %230 = load <16 x i16>, ptr %229, align 2, !tbaa !13, !alias.scope !52
  %231 = getelementptr inbounds i16, ptr %229, i64 16
  %232 = load <16 x i16>, ptr %231, align 2, !tbaa !13, !alias.scope !52
  %233 = getelementptr inbounds i16, ptr %229, i64 32
  %234 = load <16 x i16>, ptr %233, align 2, !tbaa !13, !alias.scope !52
  %235 = getelementptr inbounds i16, ptr %229, i64 48
  %236 = load <16 x i16>, ptr %235, align 2, !tbaa !13, !alias.scope !52
  %237 = trunc <16 x i16> %230 to <16 x i8>
  %238 = trunc <16 x i16> %232 to <16 x i8>
  %239 = trunc <16 x i16> %234 to <16 x i8>
  %240 = trunc <16 x i16> %236 to <16 x i8>
  %241 = getelementptr inbounds i8, ptr %222, i64 %228
  store <16 x i8> %237, ptr %241, align 1, !tbaa !16, !alias.scope !55, !noalias !52
  %242 = getelementptr inbounds i8, ptr %241, i64 16
  store <16 x i8> %238, ptr %242, align 1, !tbaa !16, !alias.scope !55, !noalias !52
  %243 = getelementptr inbounds i8, ptr %241, i64 32
  store <16 x i8> %239, ptr %243, align 1, !tbaa !16, !alias.scope !55, !noalias !52
  %244 = getelementptr inbounds i8, ptr %241, i64 48
  store <16 x i8> %240, ptr %244, align 1, !tbaa !16, !alias.scope !55, !noalias !52
  %245 = add nuw i64 %228, 64
  %246 = icmp eq i64 %245, 9984
  br i1 %246, label %247, label %227, !llvm.loop !57

247:                                              ; preds = %227, %219
  %248 = phi i64 [ 0, %219 ], [ 9984, %227 ]
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ %248, %247 ], [ %270, %249 ]
  %251 = getelementptr inbounds i16, ptr %4, i64 %250
  %252 = load i16, ptr %251, align 2, !tbaa !13
  %253 = trunc i16 %252 to i8
  %254 = getelementptr inbounds i8, ptr %222, i64 %250
  store i8 %253, ptr %254, align 1, !tbaa !16
  %255 = or i64 %250, 1
  %256 = getelementptr inbounds i16, ptr %4, i64 %255
  %257 = load i16, ptr %256, align 2, !tbaa !13
  %258 = trunc i16 %257 to i8
  %259 = getelementptr inbounds i8, ptr %222, i64 %255
  store i8 %258, ptr %259, align 1, !tbaa !16
  %260 = or i64 %250, 2
  %261 = getelementptr inbounds i16, ptr %4, i64 %260
  %262 = load i16, ptr %261, align 2, !tbaa !13
  %263 = trunc i16 %262 to i8
  %264 = getelementptr inbounds i8, ptr %222, i64 %260
  store i8 %263, ptr %264, align 1, !tbaa !16
  %265 = or i64 %250, 3
  %266 = getelementptr inbounds i16, ptr %4, i64 %265
  %267 = load i16, ptr %266, align 2, !tbaa !13
  %268 = trunc i16 %267 to i8
  %269 = getelementptr inbounds i8, ptr %222, i64 %265
  store i8 %268, ptr %269, align 1, !tbaa !16
  %270 = add nuw nsw i64 %250, 4
  %271 = icmp eq i64 %270, 10000
  br i1 %271, label %272, label %249, !llvm.loop !58

272:                                              ; preds = %249
  %273 = add i64 %220, -1
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %212, label %219, !prof !42

275:                                              ; preds = %217, %168, %135
  %276 = phi { ptr, i32 } [ %169, %168 ], [ %218, %217 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %277 = load ptr, ptr %3, align 8, !tbaa !5
  %278 = icmp eq ptr %277, null
  br i1 %278, label %282, label %279

279:                                              ; preds = %275, %133
  %280 = phi { ptr, i32 } [ %134, %133 ], [ %276, %275 ]
  %281 = phi ptr [ %5, %133 ], [ %277, %275 ]
  call void @_ZdaPv(ptr noundef nonnull %281) #13
  br label %282

282:                                              ; preds = %279, %275, %131
  %283 = phi { ptr, i32 } [ %132, %131 ], [ %276, %275 ], [ %280, %279 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %283

284:                                              ; preds = %213, %216
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z53benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::unique_ptr.33", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %6 unwind label %68

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %8 unwind label %70

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %9, align 2, !tbaa !12
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %13 unwind label %72

13:                                               ; preds = %10
  %14 = getelementptr inbounds i16, ptr %4, i64 %11
  store i16 %12, ptr %14, align 2, !tbaa !13
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !14

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i16, ptr %4, i64 %19
  %21 = load i16, ptr %20, align 2, !tbaa !13
  %22 = trunc i16 %21 to i8
  %23 = getelementptr inbounds i8, ptr %7, i64 %19
  store i8 %22, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i16, ptr %4, i64 %24
  %26 = load i16, ptr %25, align 2, !tbaa !13
  %27 = trunc i16 %26 to i8
  %28 = getelementptr inbounds i8, ptr %7, i64 %24
  store i8 %27, ptr %28, align 1, !tbaa !16
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i16, ptr %4, i64 %29
  %31 = load i16, ptr %30, align 2, !tbaa !13
  %32 = trunc i16 %31 to i8
  %33 = getelementptr inbounds i8, ptr %7, i64 %29
  store i8 %32, ptr %33, align 1, !tbaa !16
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i16, ptr %4, i64 %34
  %36 = load i16, ptr %35, align 2, !tbaa !13
  %37 = trunc i16 %36 to i8
  %38 = getelementptr inbounds i8, ptr %7, i64 %34
  store i8 %37, ptr %38, align 1, !tbaa !16
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i16, ptr %4, i64 %39
  %41 = load i16, ptr %40, align 2, !tbaa !13
  %42 = trunc i16 %41 to i8
  %43 = getelementptr inbounds i8, ptr %7, i64 %39
  store i8 %42, ptr %43, align 1, !tbaa !16
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !17

46:                                               ; preds = %18, %58
  %47 = phi i64 [ %67, %58 ], [ 0, %18 ]
  %48 = getelementptr inbounds i16, ptr %4, i64 %47
  %49 = load <8 x i16>, ptr %48, align 2, !tbaa !13
  %50 = getelementptr inbounds i16, ptr %48, i64 8
  %51 = load <8 x i16>, ptr %50, align 2, !tbaa !13
  %52 = trunc <8 x i16> %49 to <8 x i8>
  %53 = trunc <8 x i16> %51 to <8 x i8>
  %54 = getelementptr inbounds i8, ptr %5, i64 %47
  store <8 x i8> %52, ptr %54, align 1, !tbaa !16
  %55 = getelementptr inbounds i8, ptr %54, i64 8
  store <8 x i8> %53, ptr %55, align 1, !tbaa !16
  %56 = or i64 %47, 16
  %57 = icmp eq i64 %56, 10000
  br i1 %57, label %74, label %58, !llvm.loop !59

58:                                               ; preds = %46
  %59 = getelementptr inbounds i16, ptr %4, i64 %56
  %60 = load <8 x i16>, ptr %59, align 2, !tbaa !13
  %61 = getelementptr inbounds i16, ptr %59, i64 8
  %62 = load <8 x i16>, ptr %61, align 2, !tbaa !13
  %63 = trunc <8 x i16> %60 to <8 x i8>
  %64 = trunc <8 x i16> %62 to <8 x i8>
  %65 = getelementptr inbounds i8, ptr %5, i64 %56
  store <8 x i8> %63, ptr %65, align 1, !tbaa !16
  %66 = getelementptr inbounds i8, ptr %65, i64 8
  store <8 x i8> %64, ptr %66, align 1, !tbaa !16
  %67 = add nuw nsw i64 %47, 32
  br label %46

68:                                               ; preds = %1
  %69 = landingpad { ptr, i32 }
          cleanup
  br label %224

70:                                               ; preds = %6
  %71 = landingpad { ptr, i32 }
          cleanup
  br label %221

72:                                               ; preds = %10
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %217

74:                                               ; preds = %46, %135
  %75 = phi i64 [ %136, %135 ], [ 0, %46 ]
  %76 = getelementptr inbounds i8, ptr %5, i64 %75
  %77 = load i8, ptr %76, align 1, !tbaa !16
  %78 = getelementptr inbounds i8, ptr %7, i64 %75
  %79 = load i8, ptr %78, align 1, !tbaa !16
  %80 = icmp eq i8 %77, %79
  br i1 %80, label %107, label %81

81:                                               ; preds = %128, %121, %114, %107, %74
  %82 = phi i64 [ %75, %74 ], [ %108, %107 ], [ %115, %114 ], [ %122, %121 ], [ %129, %128 ]
  %83 = and i64 %82, 4294967295
  %84 = getelementptr inbounds i8, ptr %7, i64 %83
  %85 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %86 unwind label %105

86:                                               ; preds = %81
  %87 = getelementptr inbounds i16, ptr %4, i64 %83
  %88 = load i16, ptr %87, align 2, !tbaa !13
  %89 = zext i16 %88 to i64
  %90 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %89)
          to label %91 unwind label %105

91:                                               ; preds = %86
  %92 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %90, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %93 unwind label %105

93:                                               ; preds = %91
  %94 = getelementptr inbounds i8, ptr %5, i64 %83
  %95 = load i8, ptr %94, align 1, !tbaa !16
  %96 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %90, i8 noundef zeroext %95)
          to label %97 unwind label %105

97:                                               ; preds = %93
  %98 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %96, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %99 unwind label %105

99:                                               ; preds = %97
  %100 = load i8, ptr %84, align 1, !tbaa !16
  %101 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %96, i8 noundef zeroext %100)
          to label %102 unwind label %105

102:                                              ; preds = %99
  %103 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %101, ptr noundef nonnull @.str.149)
          to label %104 unwind label %105

104:                                              ; preds = %102
  call void @exit(i32 noundef 1) #12
  unreachable

105:                                              ; preds = %102, %99, %97, %93, %91, %86, %81
  %106 = landingpad { ptr, i32 }
          cleanup
  br label %217

107:                                              ; preds = %74
  %108 = add nuw nsw i64 %75, 1
  %109 = getelementptr inbounds i8, ptr %5, i64 %108
  %110 = load i8, ptr %109, align 1, !tbaa !16
  %111 = getelementptr inbounds i8, ptr %7, i64 %108
  %112 = load i8, ptr %111, align 1, !tbaa !16
  %113 = icmp eq i8 %110, %112
  br i1 %113, label %114, label %81

114:                                              ; preds = %107
  %115 = add nuw nsw i64 %75, 2
  %116 = getelementptr inbounds i8, ptr %5, i64 %115
  %117 = load i8, ptr %116, align 1, !tbaa !16
  %118 = getelementptr inbounds i8, ptr %7, i64 %115
  %119 = load i8, ptr %118, align 1, !tbaa !16
  %120 = icmp eq i8 %117, %119
  br i1 %120, label %121, label %81

121:                                              ; preds = %114
  %122 = add nuw nsw i64 %75, 3
  %123 = getelementptr inbounds i8, ptr %5, i64 %122
  %124 = load i8, ptr %123, align 1, !tbaa !16
  %125 = getelementptr inbounds i8, ptr %7, i64 %122
  %126 = load i8, ptr %125, align 1, !tbaa !16
  %127 = icmp eq i8 %124, %126
  br i1 %127, label %128, label %81

128:                                              ; preds = %121
  %129 = add nuw nsw i64 %75, 4
  %130 = getelementptr inbounds i8, ptr %5, i64 %129
  %131 = load i8, ptr %130, align 1, !tbaa !16
  %132 = getelementptr inbounds i8, ptr %7, i64 %129
  %133 = load i8, ptr %132, align 1, !tbaa !16
  %134 = icmp eq i8 %131, %133
  br i1 %134, label %135, label %81

135:                                              ; preds = %128
  %136 = add nuw nsw i64 %75, 5
  %137 = icmp eq i64 %136, 10000
  br i1 %137, label %138, label %74, !llvm.loop !22

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %140 = load i8, ptr %139, align 2, !tbaa !23, !range !40, !noundef !41
  %141 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %142 = load i64, ptr %141, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %143 unwind label %154

143:                                              ; preds = %138
  %144 = icmp ne i8 %140, 0
  %145 = icmp eq i64 %142, 0
  %146 = select i1 %144, i1 true, i1 %145
  br i1 %146, label %149, label %147, !prof !42

147:                                              ; preds = %143
  %148 = getelementptr i8, ptr %4, i64 20000
  br label %156

149:                                              ; preds = %214, %143
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %150 unwind label %154

150:                                              ; preds = %149
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %151 = load ptr, ptr %3, align 8, !tbaa !5
  %152 = icmp eq ptr %151, null
  br i1 %152, label %226, label %153

153:                                              ; preds = %150
  call void @_ZdaPv(ptr noundef nonnull %151) #13
  br label %226

154:                                              ; preds = %149, %138
  %155 = landingpad { ptr, i32 }
          cleanup
  br label %217

156:                                              ; preds = %147, %214
  %157 = phi i64 [ %215, %214 ], [ %142, %147 ]
  %158 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %3, i64 %158) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %159 = load ptr, ptr %3, align 8, !tbaa !5
  %160 = getelementptr i8, ptr %159, i64 10000
  %161 = icmp ult ptr %159, %148
  %162 = icmp ult ptr %4, %160
  %163 = and i1 %161, %162
  br i1 %163, label %186, label %164

164:                                              ; preds = %156, %176
  %165 = phi i64 [ %185, %176 ], [ 0, %156 ]
  %166 = getelementptr inbounds i16, ptr %4, i64 %165
  %167 = load <8 x i16>, ptr %166, align 2, !tbaa !13, !alias.scope !60
  %168 = getelementptr inbounds i16, ptr %166, i64 8
  %169 = load <8 x i16>, ptr %168, align 2, !tbaa !13, !alias.scope !60
  %170 = trunc <8 x i16> %167 to <8 x i8>
  %171 = trunc <8 x i16> %169 to <8 x i8>
  %172 = getelementptr inbounds i8, ptr %159, i64 %165
  store <8 x i8> %170, ptr %172, align 1, !tbaa !16, !alias.scope !63, !noalias !60
  %173 = getelementptr inbounds i8, ptr %172, i64 8
  store <8 x i8> %171, ptr %173, align 1, !tbaa !16, !alias.scope !63, !noalias !60
  %174 = or i64 %165, 16
  %175 = icmp eq i64 %174, 10000
  br i1 %175, label %214, label %176, !llvm.loop !65

176:                                              ; preds = %164
  %177 = getelementptr inbounds i16, ptr %4, i64 %174
  %178 = load <8 x i16>, ptr %177, align 2, !tbaa !13, !alias.scope !60
  %179 = getelementptr inbounds i16, ptr %177, i64 8
  %180 = load <8 x i16>, ptr %179, align 2, !tbaa !13, !alias.scope !60
  %181 = trunc <8 x i16> %178 to <8 x i8>
  %182 = trunc <8 x i16> %180 to <8 x i8>
  %183 = getelementptr inbounds i8, ptr %159, i64 %174
  store <8 x i8> %181, ptr %183, align 1, !tbaa !16, !alias.scope !63, !noalias !60
  %184 = getelementptr inbounds i8, ptr %183, i64 8
  store <8 x i8> %182, ptr %184, align 1, !tbaa !16, !alias.scope !63, !noalias !60
  %185 = add nuw nsw i64 %165, 32
  br label %164

186:                                              ; preds = %156, %186
  %187 = phi i64 [ %212, %186 ], [ 0, %156 ]
  %188 = getelementptr inbounds i16, ptr %4, i64 %187
  %189 = load i16, ptr %188, align 2, !tbaa !13
  %190 = trunc i16 %189 to i8
  %191 = getelementptr inbounds i8, ptr %159, i64 %187
  store i8 %190, ptr %191, align 1, !tbaa !16
  %192 = add nuw nsw i64 %187, 1
  %193 = getelementptr inbounds i16, ptr %4, i64 %192
  %194 = load i16, ptr %193, align 2, !tbaa !13
  %195 = trunc i16 %194 to i8
  %196 = getelementptr inbounds i8, ptr %159, i64 %192
  store i8 %195, ptr %196, align 1, !tbaa !16
  %197 = add nuw nsw i64 %187, 2
  %198 = getelementptr inbounds i16, ptr %4, i64 %197
  %199 = load i16, ptr %198, align 2, !tbaa !13
  %200 = trunc i16 %199 to i8
  %201 = getelementptr inbounds i8, ptr %159, i64 %197
  store i8 %200, ptr %201, align 1, !tbaa !16
  %202 = add nuw nsw i64 %187, 3
  %203 = getelementptr inbounds i16, ptr %4, i64 %202
  %204 = load i16, ptr %203, align 2, !tbaa !13
  %205 = trunc i16 %204 to i8
  %206 = getelementptr inbounds i8, ptr %159, i64 %202
  store i8 %205, ptr %206, align 1, !tbaa !16
  %207 = add nuw nsw i64 %187, 4
  %208 = getelementptr inbounds i16, ptr %4, i64 %207
  %209 = load i16, ptr %208, align 2, !tbaa !13
  %210 = trunc i16 %209 to i8
  %211 = getelementptr inbounds i8, ptr %159, i64 %207
  store i8 %210, ptr %211, align 1, !tbaa !16
  %212 = add nuw nsw i64 %187, 5
  %213 = icmp eq i64 %212, 10000
  br i1 %213, label %214, label %186, !llvm.loop !66

214:                                              ; preds = %164, %186
  %215 = add i64 %157, -1
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %149, label %156, !prof !42

217:                                              ; preds = %154, %105, %72
  %218 = phi { ptr, i32 } [ %106, %105 ], [ %155, %154 ], [ %73, %72 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %219 = load ptr, ptr %3, align 8, !tbaa !5
  %220 = icmp eq ptr %219, null
  br i1 %220, label %224, label %221

221:                                              ; preds = %217, %70
  %222 = phi { ptr, i32 } [ %71, %70 ], [ %218, %217 ]
  %223 = phi ptr [ %5, %70 ], [ %219, %217 ]
  call void @_ZdaPv(ptr noundef nonnull %223) #13
  br label %224

224:                                              ; preds = %221, %217, %68
  %225 = phi { ptr, i32 } [ %69, %68 ], [ %218, %217 ], [ %222, %221 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %225

226:                                              ; preds = %150, %153
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::uniform_int_distribution", align 2
  %4 = alloca %"class.std::unique_ptr.33", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %7 unwind label %42

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #11
  store i16 0, ptr %3, align 2, !tbaa !9
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %3, i64 0, i32 1
  store i16 -1, ptr %8, align 2, !tbaa !12
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %3)
          to label %12 unwind label %46

12:                                               ; preds = %9
  %13 = getelementptr inbounds i16, ptr %5, i64 %10
  store i16 %11, ptr %13, align 2, !tbaa !13
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !14

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %17, align 1, !tbaa !69
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %24, %21 ]
  %20 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %21 unwind label %44

21:                                               ; preds = %18
  %22 = load ptr, ptr %4, align 8, !tbaa !5
  %23 = getelementptr inbounds i8, ptr %22, i64 %19
  store i8 %20, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 10000
  br i1 %25, label %26, label %18, !llvm.loop !70

26:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  %27 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %28 = load i8, ptr %27, align 2, !tbaa !23, !range !40, !noundef !41
  %29 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %30 = load i64, ptr %29, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %31 unwind label %48

31:                                               ; preds = %26
  %32 = icmp ne i8 %28, 0
  %33 = icmp eq i64 %30, 0
  %34 = select i1 %32, i1 true, i1 %33
  br i1 %34, label %37, label %35, !prof !42

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %5, i64 20000
  br label %50

37:                                               ; preds = %119, %31
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %38 unwind label %48

38:                                               ; preds = %37
  %39 = load ptr, ptr %4, align 8, !tbaa !5
  %40 = icmp eq ptr %39, null
  br i1 %40, label %129, label %41

41:                                               ; preds = %38
  call void @_ZdaPv(ptr noundef nonnull %39) #13
  br label %129

42:                                               ; preds = %1
  %43 = landingpad { ptr, i32 }
          cleanup
  br label %127

44:                                               ; preds = %18
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %122

46:                                               ; preds = %9
  %47 = landingpad { ptr, i32 }
          cleanup
  br label %122

48:                                               ; preds = %37, %26
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %122

50:                                               ; preds = %35, %119
  %51 = phi i64 [ %120, %119 ], [ %30, %35 ]
  %52 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %4, i64 %52) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = getelementptr i8, ptr %53, i64 10000
  %55 = icmp ult ptr %53, %36
  %56 = icmp ult ptr %5, %54
  %57 = and i1 %55, %56
  br i1 %57, label %86, label %58

58:                                               ; preds = %50, %58
  %59 = phi i64 [ %84, %58 ], [ 0, %50 ]
  %60 = getelementptr inbounds i16, ptr %5, i64 %59
  %61 = load <8 x i16>, ptr %60, align 2, !tbaa !13, !alias.scope !71
  %62 = getelementptr inbounds i16, ptr %60, i64 8
  %63 = load <8 x i16>, ptr %62, align 2, !tbaa !13, !alias.scope !71
  %64 = getelementptr inbounds i16, ptr %60, i64 16
  %65 = load <8 x i16>, ptr %64, align 2, !tbaa !13, !alias.scope !71
  %66 = getelementptr inbounds i16, ptr %60, i64 24
  %67 = load <8 x i16>, ptr %66, align 2, !tbaa !13, !alias.scope !71
  %68 = trunc <8 x i16> %61 to <8 x i8>
  %69 = trunc <8 x i16> %63 to <8 x i8>
  %70 = trunc <8 x i16> %65 to <8 x i8>
  %71 = trunc <8 x i16> %67 to <8 x i8>
  %72 = getelementptr inbounds i8, ptr %53, i64 %59
  %73 = load <8 x i8>, ptr %72, align 1, !tbaa !16, !alias.scope !74, !noalias !71
  %74 = getelementptr inbounds i8, ptr %72, i64 8
  %75 = load <8 x i8>, ptr %74, align 1, !tbaa !16, !alias.scope !74, !noalias !71
  %76 = getelementptr inbounds i8, ptr %72, i64 16
  %77 = load <8 x i8>, ptr %76, align 1, !tbaa !16, !alias.scope !74, !noalias !71
  %78 = getelementptr inbounds i8, ptr %72, i64 24
  %79 = load <8 x i8>, ptr %78, align 1, !tbaa !16, !alias.scope !74, !noalias !71
  %80 = add <8 x i8> %73, %68
  %81 = add <8 x i8> %75, %69
  %82 = add <8 x i8> %77, %70
  %83 = add <8 x i8> %79, %71
  store <8 x i8> %80, ptr %72, align 1, !tbaa !16, !alias.scope !74, !noalias !71
  store <8 x i8> %81, ptr %74, align 1, !tbaa !16, !alias.scope !74, !noalias !71
  store <8 x i8> %82, ptr %76, align 1, !tbaa !16, !alias.scope !74, !noalias !71
  store <8 x i8> %83, ptr %78, align 1, !tbaa !16, !alias.scope !74, !noalias !71
  %84 = add nuw i64 %59, 32
  %85 = icmp eq i64 %84, 9984
  br i1 %85, label %86, label %58, !llvm.loop !76

86:                                               ; preds = %58, %50
  %87 = phi i64 [ 0, %50 ], [ 9984, %58 ]
  br label %88

88:                                               ; preds = %88, %86
  %89 = phi i64 [ %87, %86 ], [ %117, %88 ]
  %90 = getelementptr inbounds i16, ptr %5, i64 %89
  %91 = load i16, ptr %90, align 2, !tbaa !13
  %92 = trunc i16 %91 to i8
  %93 = getelementptr inbounds i8, ptr %53, i64 %89
  %94 = load i8, ptr %93, align 1, !tbaa !16
  %95 = add i8 %94, %92
  store i8 %95, ptr %93, align 1, !tbaa !16
  %96 = or i64 %89, 1
  %97 = getelementptr inbounds i16, ptr %5, i64 %96
  %98 = load i16, ptr %97, align 2, !tbaa !13
  %99 = trunc i16 %98 to i8
  %100 = getelementptr inbounds i8, ptr %53, i64 %96
  %101 = load i8, ptr %100, align 1, !tbaa !16
  %102 = add i8 %101, %99
  store i8 %102, ptr %100, align 1, !tbaa !16
  %103 = or i64 %89, 2
  %104 = getelementptr inbounds i16, ptr %5, i64 %103
  %105 = load i16, ptr %104, align 2, !tbaa !13
  %106 = trunc i16 %105 to i8
  %107 = getelementptr inbounds i8, ptr %53, i64 %103
  %108 = load i8, ptr %107, align 1, !tbaa !16
  %109 = add i8 %108, %106
  store i8 %109, ptr %107, align 1, !tbaa !16
  %110 = or i64 %89, 3
  %111 = getelementptr inbounds i16, ptr %5, i64 %110
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = trunc i16 %112 to i8
  %114 = getelementptr inbounds i8, ptr %53, i64 %110
  %115 = load i8, ptr %114, align 1, !tbaa !16
  %116 = add i8 %115, %113
  store i8 %116, ptr %114, align 1, !tbaa !16
  %117 = add nuw nsw i64 %89, 4
  %118 = icmp eq i64 %117, 10000
  br i1 %118, label %119, label %88, !llvm.loop !77

119:                                              ; preds = %88
  %120 = add i64 %51, -1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %37, label %50, !prof !42

122:                                              ; preds = %48, %46, %44
  %123 = phi { ptr, i32 } [ %49, %48 ], [ %45, %44 ], [ %47, %46 ]
  %124 = load ptr, ptr %4, align 8, !tbaa !5
  %125 = icmp eq ptr %124, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %122
  call void @_ZdaPv(ptr noundef nonnull %124) #13
  br label %127

127:                                              ; preds = %126, %122, %42
  %128 = phi { ptr, i32 } [ %43, %42 ], [ %123, %122 ], [ %123, %126 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %128

129:                                              ; preds = %38, %41
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::uniform_int_distribution", align 2
  %4 = alloca %"class.std::unique_ptr.33", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %7 unwind label %42

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #11
  store i16 0, ptr %3, align 2, !tbaa !9
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %3, i64 0, i32 1
  store i16 -1, ptr %8, align 2, !tbaa !12
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %3)
          to label %12 unwind label %46

12:                                               ; preds = %9
  %13 = getelementptr inbounds i16, ptr %5, i64 %10
  store i16 %11, ptr %13, align 2, !tbaa !13
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !14

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %17, align 1, !tbaa !69
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %24, %21 ]
  %20 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %21 unwind label %44

21:                                               ; preds = %18
  %22 = load ptr, ptr %4, align 8, !tbaa !5
  %23 = getelementptr inbounds i8, ptr %22, i64 %19
  store i8 %20, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 10000
  br i1 %25, label %26, label %18, !llvm.loop !70

26:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  %27 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %28 = load i8, ptr %27, align 2, !tbaa !23, !range !40, !noundef !41
  %29 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %30 = load i64, ptr %29, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %31 unwind label %48

31:                                               ; preds = %26
  %32 = icmp ne i8 %28, 0
  %33 = icmp eq i64 %30, 0
  %34 = select i1 %32, i1 true, i1 %33
  br i1 %34, label %37, label %35, !prof !42

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %5, i64 20000
  br label %50

37:                                               ; preds = %119, %31
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %38 unwind label %48

38:                                               ; preds = %37
  %39 = load ptr, ptr %4, align 8, !tbaa !5
  %40 = icmp eq ptr %39, null
  br i1 %40, label %129, label %41

41:                                               ; preds = %38
  call void @_ZdaPv(ptr noundef nonnull %39) #13
  br label %129

42:                                               ; preds = %1
  %43 = landingpad { ptr, i32 }
          cleanup
  br label %127

44:                                               ; preds = %18
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %122

46:                                               ; preds = %9
  %47 = landingpad { ptr, i32 }
          cleanup
  br label %122

48:                                               ; preds = %37, %26
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %122

50:                                               ; preds = %35, %119
  %51 = phi i64 [ %120, %119 ], [ %30, %35 ]
  %52 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %4, i64 %52) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = getelementptr i8, ptr %53, i64 10000
  %55 = icmp ult ptr %53, %36
  %56 = icmp ult ptr %5, %54
  %57 = and i1 %55, %56
  br i1 %57, label %86, label %58

58:                                               ; preds = %50, %58
  %59 = phi i64 [ %84, %58 ], [ 0, %50 ]
  %60 = getelementptr inbounds i16, ptr %5, i64 %59
  %61 = load <16 x i16>, ptr %60, align 2, !tbaa !13, !alias.scope !78
  %62 = getelementptr inbounds i16, ptr %60, i64 16
  %63 = load <16 x i16>, ptr %62, align 2, !tbaa !13, !alias.scope !78
  %64 = getelementptr inbounds i16, ptr %60, i64 32
  %65 = load <16 x i16>, ptr %64, align 2, !tbaa !13, !alias.scope !78
  %66 = getelementptr inbounds i16, ptr %60, i64 48
  %67 = load <16 x i16>, ptr %66, align 2, !tbaa !13, !alias.scope !78
  %68 = trunc <16 x i16> %61 to <16 x i8>
  %69 = trunc <16 x i16> %63 to <16 x i8>
  %70 = trunc <16 x i16> %65 to <16 x i8>
  %71 = trunc <16 x i16> %67 to <16 x i8>
  %72 = getelementptr inbounds i8, ptr %53, i64 %59
  %73 = load <16 x i8>, ptr %72, align 1, !tbaa !16, !alias.scope !81, !noalias !78
  %74 = getelementptr inbounds i8, ptr %72, i64 16
  %75 = load <16 x i8>, ptr %74, align 1, !tbaa !16, !alias.scope !81, !noalias !78
  %76 = getelementptr inbounds i8, ptr %72, i64 32
  %77 = load <16 x i8>, ptr %76, align 1, !tbaa !16, !alias.scope !81, !noalias !78
  %78 = getelementptr inbounds i8, ptr %72, i64 48
  %79 = load <16 x i8>, ptr %78, align 1, !tbaa !16, !alias.scope !81, !noalias !78
  %80 = add <16 x i8> %73, %68
  %81 = add <16 x i8> %75, %69
  %82 = add <16 x i8> %77, %70
  %83 = add <16 x i8> %79, %71
  store <16 x i8> %80, ptr %72, align 1, !tbaa !16, !alias.scope !81, !noalias !78
  store <16 x i8> %81, ptr %74, align 1, !tbaa !16, !alias.scope !81, !noalias !78
  store <16 x i8> %82, ptr %76, align 1, !tbaa !16, !alias.scope !81, !noalias !78
  store <16 x i8> %83, ptr %78, align 1, !tbaa !16, !alias.scope !81, !noalias !78
  %84 = add nuw i64 %59, 64
  %85 = icmp eq i64 %84, 9984
  br i1 %85, label %86, label %58, !llvm.loop !83

86:                                               ; preds = %58, %50
  %87 = phi i64 [ 0, %50 ], [ 9984, %58 ]
  br label %88

88:                                               ; preds = %88, %86
  %89 = phi i64 [ %87, %86 ], [ %117, %88 ]
  %90 = getelementptr inbounds i16, ptr %5, i64 %89
  %91 = load i16, ptr %90, align 2, !tbaa !13
  %92 = trunc i16 %91 to i8
  %93 = getelementptr inbounds i8, ptr %53, i64 %89
  %94 = load i8, ptr %93, align 1, !tbaa !16
  %95 = add i8 %94, %92
  store i8 %95, ptr %93, align 1, !tbaa !16
  %96 = or i64 %89, 1
  %97 = getelementptr inbounds i16, ptr %5, i64 %96
  %98 = load i16, ptr %97, align 2, !tbaa !13
  %99 = trunc i16 %98 to i8
  %100 = getelementptr inbounds i8, ptr %53, i64 %96
  %101 = load i8, ptr %100, align 1, !tbaa !16
  %102 = add i8 %101, %99
  store i8 %102, ptr %100, align 1, !tbaa !16
  %103 = or i64 %89, 2
  %104 = getelementptr inbounds i16, ptr %5, i64 %103
  %105 = load i16, ptr %104, align 2, !tbaa !13
  %106 = trunc i16 %105 to i8
  %107 = getelementptr inbounds i8, ptr %53, i64 %103
  %108 = load i8, ptr %107, align 1, !tbaa !16
  %109 = add i8 %108, %106
  store i8 %109, ptr %107, align 1, !tbaa !16
  %110 = or i64 %89, 3
  %111 = getelementptr inbounds i16, ptr %5, i64 %110
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = trunc i16 %112 to i8
  %114 = getelementptr inbounds i8, ptr %53, i64 %110
  %115 = load i8, ptr %114, align 1, !tbaa !16
  %116 = add i8 %115, %113
  store i8 %116, ptr %114, align 1, !tbaa !16
  %117 = add nuw nsw i64 %89, 4
  %118 = icmp eq i64 %117, 10000
  br i1 %118, label %119, label %88, !llvm.loop !84

119:                                              ; preds = %88
  %120 = add i64 %51, -1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %37, label %50, !prof !42

122:                                              ; preds = %48, %46, %44
  %123 = phi { ptr, i32 } [ %49, %48 ], [ %45, %44 ], [ %47, %46 ]
  %124 = load ptr, ptr %4, align 8, !tbaa !5
  %125 = icmp eq ptr %124, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %122
  call void @_ZdaPv(ptr noundef nonnull %124) #13
  br label %127

127:                                              ; preds = %126, %122, %42
  %128 = phi { ptr, i32 } [ %43, %42 ], [ %123, %122 ], [ %123, %126 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %128

129:                                              ; preds = %38, %41
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::uniform_int_distribution", align 2
  %4 = alloca %"class.std::unique_ptr.33", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %7 unwind label %42

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #11
  store i16 0, ptr %3, align 2, !tbaa !9
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %3, i64 0, i32 1
  store i16 -1, ptr %8, align 2, !tbaa !12
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %3)
          to label %12 unwind label %46

12:                                               ; preds = %9
  %13 = getelementptr inbounds i16, ptr %5, i64 %10
  store i16 %11, ptr %13, align 2, !tbaa !13
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !14

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %17, align 1, !tbaa !69
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %24, %21 ]
  %20 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %21 unwind label %44

21:                                               ; preds = %18
  %22 = load ptr, ptr %4, align 8, !tbaa !5
  %23 = getelementptr inbounds i8, ptr %22, i64 %19
  store i8 %20, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 10000
  br i1 %25, label %26, label %18, !llvm.loop !70

26:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  %27 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %28 = load i8, ptr %27, align 2, !tbaa !23, !range !40, !noundef !41
  %29 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %30 = load i64, ptr %29, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %31 unwind label %48

31:                                               ; preds = %26
  %32 = icmp ne i8 %28, 0
  %33 = icmp eq i64 %30, 0
  %34 = select i1 %32, i1 true, i1 %33
  br i1 %34, label %37, label %35, !prof !42

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %5, i64 20000
  br label %50

37:                                               ; preds = %119, %31
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %38 unwind label %48

38:                                               ; preds = %37
  %39 = load ptr, ptr %4, align 8, !tbaa !5
  %40 = icmp eq ptr %39, null
  br i1 %40, label %129, label %41

41:                                               ; preds = %38
  call void @_ZdaPv(ptr noundef nonnull %39) #13
  br label %129

42:                                               ; preds = %1
  %43 = landingpad { ptr, i32 }
          cleanup
  br label %127

44:                                               ; preds = %18
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %122

46:                                               ; preds = %9
  %47 = landingpad { ptr, i32 }
          cleanup
  br label %122

48:                                               ; preds = %37, %26
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %122

50:                                               ; preds = %35, %119
  %51 = phi i64 [ %120, %119 ], [ %30, %35 ]
  %52 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %4, i64 %52) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = getelementptr i8, ptr %53, i64 10000
  %55 = icmp ult ptr %53, %36
  %56 = icmp ult ptr %5, %54
  %57 = and i1 %55, %56
  br i1 %57, label %88, label %58

58:                                               ; preds = %50, %74
  %59 = phi i64 [ %87, %74 ], [ 0, %50 ]
  %60 = getelementptr inbounds i16, ptr %5, i64 %59
  %61 = load <8 x i16>, ptr %60, align 2, !tbaa !13, !alias.scope !85
  %62 = getelementptr inbounds i16, ptr %60, i64 8
  %63 = load <8 x i16>, ptr %62, align 2, !tbaa !13, !alias.scope !85
  %64 = trunc <8 x i16> %61 to <8 x i8>
  %65 = trunc <8 x i16> %63 to <8 x i8>
  %66 = getelementptr inbounds i8, ptr %53, i64 %59
  %67 = load <8 x i8>, ptr %66, align 1, !tbaa !16, !alias.scope !88, !noalias !85
  %68 = getelementptr inbounds i8, ptr %66, i64 8
  %69 = load <8 x i8>, ptr %68, align 1, !tbaa !16, !alias.scope !88, !noalias !85
  %70 = add <8 x i8> %67, %64
  %71 = add <8 x i8> %69, %65
  store <8 x i8> %70, ptr %66, align 1, !tbaa !16, !alias.scope !88, !noalias !85
  store <8 x i8> %71, ptr %68, align 1, !tbaa !16, !alias.scope !88, !noalias !85
  %72 = or i64 %59, 16
  %73 = icmp eq i64 %72, 10000
  br i1 %73, label %119, label %74, !llvm.loop !90

74:                                               ; preds = %58
  %75 = getelementptr inbounds i16, ptr %5, i64 %72
  %76 = load <8 x i16>, ptr %75, align 2, !tbaa !13, !alias.scope !85
  %77 = getelementptr inbounds i16, ptr %75, i64 8
  %78 = load <8 x i16>, ptr %77, align 2, !tbaa !13, !alias.scope !85
  %79 = trunc <8 x i16> %76 to <8 x i8>
  %80 = trunc <8 x i16> %78 to <8 x i8>
  %81 = getelementptr inbounds i8, ptr %53, i64 %72
  %82 = load <8 x i8>, ptr %81, align 1, !tbaa !16, !alias.scope !88, !noalias !85
  %83 = getelementptr inbounds i8, ptr %81, i64 8
  %84 = load <8 x i8>, ptr %83, align 1, !tbaa !16, !alias.scope !88, !noalias !85
  %85 = add <8 x i8> %82, %79
  %86 = add <8 x i8> %84, %80
  store <8 x i8> %85, ptr %81, align 1, !tbaa !16, !alias.scope !88, !noalias !85
  store <8 x i8> %86, ptr %83, align 1, !tbaa !16, !alias.scope !88, !noalias !85
  %87 = add nuw nsw i64 %59, 32
  br label %58

88:                                               ; preds = %50, %88
  %89 = phi i64 [ %117, %88 ], [ 0, %50 ]
  %90 = getelementptr inbounds i16, ptr %5, i64 %89
  %91 = load i16, ptr %90, align 2, !tbaa !13
  %92 = trunc i16 %91 to i8
  %93 = getelementptr inbounds i8, ptr %53, i64 %89
  %94 = load i8, ptr %93, align 1, !tbaa !16
  %95 = add i8 %94, %92
  store i8 %95, ptr %93, align 1, !tbaa !16
  %96 = or i64 %89, 1
  %97 = getelementptr inbounds i16, ptr %5, i64 %96
  %98 = load i16, ptr %97, align 2, !tbaa !13
  %99 = trunc i16 %98 to i8
  %100 = getelementptr inbounds i8, ptr %53, i64 %96
  %101 = load i8, ptr %100, align 1, !tbaa !16
  %102 = add i8 %101, %99
  store i8 %102, ptr %100, align 1, !tbaa !16
  %103 = or i64 %89, 2
  %104 = getelementptr inbounds i16, ptr %5, i64 %103
  %105 = load i16, ptr %104, align 2, !tbaa !13
  %106 = trunc i16 %105 to i8
  %107 = getelementptr inbounds i8, ptr %53, i64 %103
  %108 = load i8, ptr %107, align 1, !tbaa !16
  %109 = add i8 %108, %106
  store i8 %109, ptr %107, align 1, !tbaa !16
  %110 = or i64 %89, 3
  %111 = getelementptr inbounds i16, ptr %5, i64 %110
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = trunc i16 %112 to i8
  %114 = getelementptr inbounds i8, ptr %53, i64 %110
  %115 = load i8, ptr %114, align 1, !tbaa !16
  %116 = add i8 %115, %113
  store i8 %116, ptr %114, align 1, !tbaa !16
  %117 = add nuw nsw i64 %89, 4
  %118 = icmp eq i64 %117, 10000
  br i1 %118, label %119, label %88, !llvm.loop !91

119:                                              ; preds = %58, %88
  %120 = add i64 %51, -1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %37, label %50, !prof !42

122:                                              ; preds = %48, %46, %44
  %123 = phi { ptr, i32 } [ %49, %48 ], [ %45, %44 ], [ %47, %46 ]
  %124 = load ptr, ptr %4, align 8, !tbaa !5
  %125 = icmp eq ptr %124, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %122
  call void @_ZdaPv(ptr noundef nonnull %124) #13
  br label %127

127:                                              ; preds = %126, %122, %42
  %128 = phi { ptr, i32 } [ %43, %42 ], [ %123, %122 ], [ %123, %126 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %128

129:                                              ; preds = %38, %41
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::unique_ptr.33", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %9, align 4, !tbaa !94
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i32, ptr %4, i64 %11
  store i32 %12, ptr %14, align 4, !tbaa !95
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !96

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i32, ptr %4, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !95
  %22 = trunc i32 %21 to i8
  %23 = getelementptr inbounds i8, ptr %7, i64 %19
  store i8 %22, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i32, ptr %4, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !95
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds i8, ptr %7, i64 %24
  store i8 %27, ptr %28, align 1, !tbaa !16
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i32, ptr %4, i64 %29
  %31 = load i32, ptr %30, align 4, !tbaa !95
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds i8, ptr %7, i64 %29
  store i8 %32, ptr %33, align 1, !tbaa !16
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i32, ptr %4, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !95
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds i8, ptr %7, i64 %34
  store i8 %37, ptr %38, align 1, !tbaa !16
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i32, ptr %4, i64 %39
  %41 = load i32, ptr %40, align 4, !tbaa !95
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds i8, ptr %7, i64 %39
  store i8 %42, ptr %43, align 1, !tbaa !16
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !97

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i32, ptr %4, i64 %47
  %49 = load <8 x i32>, ptr %48, align 4, !tbaa !95
  %50 = getelementptr inbounds i32, ptr %48, i64 8
  %51 = load <8 x i32>, ptr %50, align 4, !tbaa !95
  %52 = getelementptr inbounds i32, ptr %48, i64 16
  %53 = load <8 x i32>, ptr %52, align 4, !tbaa !95
  %54 = getelementptr inbounds i32, ptr %48, i64 24
  %55 = load <8 x i32>, ptr %54, align 4, !tbaa !95
  %56 = trunc <8 x i32> %49 to <8 x i8>
  %57 = trunc <8 x i32> %51 to <8 x i8>
  %58 = trunc <8 x i32> %53 to <8 x i8>
  %59 = trunc <8 x i32> %55 to <8 x i8>
  %60 = getelementptr inbounds i8, ptr %5, i64 %47
  store <8 x i8> %56, ptr %60, align 1, !tbaa !16
  %61 = getelementptr inbounds i8, ptr %60, i64 8
  store <8 x i8> %57, ptr %61, align 1, !tbaa !16
  %62 = getelementptr inbounds i8, ptr %60, i64 16
  store <8 x i8> %58, ptr %62, align 1, !tbaa !16
  %63 = getelementptr inbounds i8, ptr %60, i64 24
  store <8 x i8> %59, ptr %63, align 1, !tbaa !16
  %64 = add nuw i64 %47, 32
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !98

66:                                               ; preds = %46
  %67 = getelementptr inbounds i32, ptr %4, i64 9984
  %68 = load i32, ptr %67, align 4, !tbaa !95
  %69 = trunc i32 %68 to i8
  %70 = getelementptr inbounds i8, ptr %5, i64 9984
  store i8 %69, ptr %70, align 1, !tbaa !16
  %71 = getelementptr inbounds i32, ptr %4, i64 9985
  %72 = load i32, ptr %71, align 4, !tbaa !95
  %73 = trunc i32 %72 to i8
  %74 = getelementptr inbounds i8, ptr %5, i64 9985
  store i8 %73, ptr %74, align 1, !tbaa !16
  %75 = getelementptr inbounds i32, ptr %4, i64 9986
  %76 = load i32, ptr %75, align 4, !tbaa !95
  %77 = trunc i32 %76 to i8
  %78 = getelementptr inbounds i8, ptr %5, i64 9986
  store i8 %77, ptr %78, align 1, !tbaa !16
  %79 = getelementptr inbounds i32, ptr %4, i64 9987
  %80 = load i32, ptr %79, align 4, !tbaa !95
  %81 = trunc i32 %80 to i8
  %82 = getelementptr inbounds i8, ptr %5, i64 9987
  store i8 %81, ptr %82, align 1, !tbaa !16
  %83 = getelementptr inbounds i32, ptr %4, i64 9988
  %84 = load i32, ptr %83, align 4, !tbaa !95
  %85 = trunc i32 %84 to i8
  %86 = getelementptr inbounds i8, ptr %5, i64 9988
  store i8 %85, ptr %86, align 1, !tbaa !16
  %87 = getelementptr inbounds i32, ptr %4, i64 9989
  %88 = load i32, ptr %87, align 4, !tbaa !95
  %89 = trunc i32 %88 to i8
  %90 = getelementptr inbounds i8, ptr %5, i64 9989
  store i8 %89, ptr %90, align 1, !tbaa !16
  %91 = getelementptr inbounds i32, ptr %4, i64 9990
  %92 = load i32, ptr %91, align 4, !tbaa !95
  %93 = trunc i32 %92 to i8
  %94 = getelementptr inbounds i8, ptr %5, i64 9990
  store i8 %93, ptr %94, align 1, !tbaa !16
  %95 = getelementptr inbounds i32, ptr %4, i64 9991
  %96 = load i32, ptr %95, align 4, !tbaa !95
  %97 = trunc i32 %96 to i8
  %98 = getelementptr inbounds i8, ptr %5, i64 9991
  store i8 %97, ptr %98, align 1, !tbaa !16
  %99 = getelementptr inbounds i32, ptr %4, i64 9992
  %100 = load i32, ptr %99, align 4, !tbaa !95
  %101 = trunc i32 %100 to i8
  %102 = getelementptr inbounds i8, ptr %5, i64 9992
  store i8 %101, ptr %102, align 1, !tbaa !16
  %103 = getelementptr inbounds i32, ptr %4, i64 9993
  %104 = load i32, ptr %103, align 4, !tbaa !95
  %105 = trunc i32 %104 to i8
  %106 = getelementptr inbounds i8, ptr %5, i64 9993
  store i8 %105, ptr %106, align 1, !tbaa !16
  %107 = getelementptr inbounds i32, ptr %4, i64 9994
  %108 = load i32, ptr %107, align 4, !tbaa !95
  %109 = trunc i32 %108 to i8
  %110 = getelementptr inbounds i8, ptr %5, i64 9994
  store i8 %109, ptr %110, align 1, !tbaa !16
  %111 = getelementptr inbounds i32, ptr %4, i64 9995
  %112 = load i32, ptr %111, align 4, !tbaa !95
  %113 = trunc i32 %112 to i8
  %114 = getelementptr inbounds i8, ptr %5, i64 9995
  store i8 %113, ptr %114, align 1, !tbaa !16
  %115 = getelementptr inbounds i32, ptr %4, i64 9996
  %116 = load i32, ptr %115, align 4, !tbaa !95
  %117 = trunc i32 %116 to i8
  %118 = getelementptr inbounds i8, ptr %5, i64 9996
  store i8 %117, ptr %118, align 1, !tbaa !16
  %119 = getelementptr inbounds i32, ptr %4, i64 9997
  %120 = load i32, ptr %119, align 4, !tbaa !95
  %121 = trunc i32 %120 to i8
  %122 = getelementptr inbounds i8, ptr %5, i64 9997
  store i8 %121, ptr %122, align 1, !tbaa !16
  %123 = getelementptr inbounds i32, ptr %4, i64 9998
  %124 = load i32, ptr %123, align 4, !tbaa !95
  %125 = trunc i32 %124 to i8
  %126 = getelementptr inbounds i8, ptr %5, i64 9998
  store i8 %125, ptr %126, align 1, !tbaa !16
  %127 = getelementptr inbounds i32, ptr %4, i64 9999
  %128 = load i32, ptr %127, align 4, !tbaa !95
  %129 = trunc i32 %128 to i8
  %130 = getelementptr inbounds i8, ptr %5, i64 9999
  store i8 %129, ptr %130, align 1, !tbaa !16
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %282

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %279

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %275

137:                                              ; preds = %198, %66
  %138 = phi i64 [ 0, %66 ], [ %199, %198 ]
  %139 = getelementptr inbounds i8, ptr %5, i64 %138
  %140 = load i8, ptr %139, align 1, !tbaa !16
  %141 = getelementptr inbounds i8, ptr %7, i64 %138
  %142 = load i8, ptr %141, align 1, !tbaa !16
  %143 = icmp eq i8 %140, %142
  br i1 %143, label %170, label %144

144:                                              ; preds = %191, %184, %177, %170, %137
  %145 = phi i64 [ %138, %137 ], [ %171, %170 ], [ %178, %177 ], [ %185, %184 ], [ %192, %191 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i8, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %168

149:                                              ; preds = %144
  %150 = getelementptr inbounds i32, ptr %4, i64 %146
  %151 = load i32, ptr %150, align 4, !tbaa !95
  %152 = zext i32 %151 to i64
  %153 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %152)
          to label %154 unwind label %168

154:                                              ; preds = %149
  %155 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %153, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %156 unwind label %168

156:                                              ; preds = %154
  %157 = getelementptr inbounds i8, ptr %5, i64 %146
  %158 = load i8, ptr %157, align 1, !tbaa !16
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %153, i8 noundef zeroext %158)
          to label %160 unwind label %168

160:                                              ; preds = %156
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %162 unwind label %168

162:                                              ; preds = %160
  %163 = load i8, ptr %147, align 1, !tbaa !16
  %164 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %159, i8 noundef zeroext %163)
          to label %165 unwind label %168

165:                                              ; preds = %162
  %166 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %164, ptr noundef nonnull @.str.149)
          to label %167 unwind label %168

167:                                              ; preds = %165
  call void @exit(i32 noundef 1) #12
  unreachable

168:                                              ; preds = %165, %162, %160, %156, %154, %149, %144
  %169 = landingpad { ptr, i32 }
          cleanup
  br label %275

170:                                              ; preds = %137
  %171 = add nuw nsw i64 %138, 1
  %172 = getelementptr inbounds i8, ptr %5, i64 %171
  %173 = load i8, ptr %172, align 1, !tbaa !16
  %174 = getelementptr inbounds i8, ptr %7, i64 %171
  %175 = load i8, ptr %174, align 1, !tbaa !16
  %176 = icmp eq i8 %173, %175
  br i1 %176, label %177, label %144

177:                                              ; preds = %170
  %178 = add nuw nsw i64 %138, 2
  %179 = getelementptr inbounds i8, ptr %5, i64 %178
  %180 = load i8, ptr %179, align 1, !tbaa !16
  %181 = getelementptr inbounds i8, ptr %7, i64 %178
  %182 = load i8, ptr %181, align 1, !tbaa !16
  %183 = icmp eq i8 %180, %182
  br i1 %183, label %184, label %144

184:                                              ; preds = %177
  %185 = add nuw nsw i64 %138, 3
  %186 = getelementptr inbounds i8, ptr %5, i64 %185
  %187 = load i8, ptr %186, align 1, !tbaa !16
  %188 = getelementptr inbounds i8, ptr %7, i64 %185
  %189 = load i8, ptr %188, align 1, !tbaa !16
  %190 = icmp eq i8 %187, %189
  br i1 %190, label %191, label %144

191:                                              ; preds = %184
  %192 = add nuw nsw i64 %138, 4
  %193 = getelementptr inbounds i8, ptr %5, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !16
  %195 = getelementptr inbounds i8, ptr %7, i64 %192
  %196 = load i8, ptr %195, align 1, !tbaa !16
  %197 = icmp eq i8 %194, %196
  br i1 %197, label %198, label %144

198:                                              ; preds = %191
  %199 = add nuw nsw i64 %138, 5
  %200 = icmp eq i64 %199, 10000
  br i1 %200, label %201, label %137, !llvm.loop !99

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %203 = load i8, ptr %202, align 2, !tbaa !23, !range !40, !noundef !41
  %204 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %205 = load i64, ptr %204, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %206 unwind label %217

206:                                              ; preds = %201
  %207 = icmp ne i8 %203, 0
  %208 = icmp eq i64 %205, 0
  %209 = select i1 %207, i1 true, i1 %208
  br i1 %209, label %212, label %210, !prof !42

210:                                              ; preds = %206
  %211 = getelementptr i8, ptr %4, i64 40000
  br label %219

212:                                              ; preds = %272, %206
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %213 unwind label %217

213:                                              ; preds = %212
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %214 = load ptr, ptr %3, align 8, !tbaa !5
  %215 = icmp eq ptr %214, null
  br i1 %215, label %284, label %216

216:                                              ; preds = %213
  call void @_ZdaPv(ptr noundef nonnull %214) #13
  br label %284

217:                                              ; preds = %212, %201
  %218 = landingpad { ptr, i32 }
          cleanup
  br label %275

219:                                              ; preds = %210, %272
  %220 = phi i64 [ %273, %272 ], [ %205, %210 ]
  %221 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %3, i64 %221) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %222 = load ptr, ptr %3, align 8, !tbaa !5
  %223 = getelementptr i8, ptr %222, i64 10000
  %224 = icmp ult ptr %222, %211
  %225 = icmp ult ptr %4, %223
  %226 = and i1 %224, %225
  br i1 %226, label %247, label %227

227:                                              ; preds = %219, %227
  %228 = phi i64 [ %245, %227 ], [ 0, %219 ]
  %229 = getelementptr inbounds i32, ptr %4, i64 %228
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !95, !alias.scope !100
  %231 = getelementptr inbounds i32, ptr %229, i64 8
  %232 = load <8 x i32>, ptr %231, align 4, !tbaa !95, !alias.scope !100
  %233 = getelementptr inbounds i32, ptr %229, i64 16
  %234 = load <8 x i32>, ptr %233, align 4, !tbaa !95, !alias.scope !100
  %235 = getelementptr inbounds i32, ptr %229, i64 24
  %236 = load <8 x i32>, ptr %235, align 4, !tbaa !95, !alias.scope !100
  %237 = trunc <8 x i32> %230 to <8 x i8>
  %238 = trunc <8 x i32> %232 to <8 x i8>
  %239 = trunc <8 x i32> %234 to <8 x i8>
  %240 = trunc <8 x i32> %236 to <8 x i8>
  %241 = getelementptr inbounds i8, ptr %222, i64 %228
  store <8 x i8> %237, ptr %241, align 1, !tbaa !16, !alias.scope !103, !noalias !100
  %242 = getelementptr inbounds i8, ptr %241, i64 8
  store <8 x i8> %238, ptr %242, align 1, !tbaa !16, !alias.scope !103, !noalias !100
  %243 = getelementptr inbounds i8, ptr %241, i64 16
  store <8 x i8> %239, ptr %243, align 1, !tbaa !16, !alias.scope !103, !noalias !100
  %244 = getelementptr inbounds i8, ptr %241, i64 24
  store <8 x i8> %240, ptr %244, align 1, !tbaa !16, !alias.scope !103, !noalias !100
  %245 = add nuw i64 %228, 32
  %246 = icmp eq i64 %245, 9984
  br i1 %246, label %247, label %227, !llvm.loop !105

247:                                              ; preds = %227, %219
  %248 = phi i64 [ 0, %219 ], [ 9984, %227 ]
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ %248, %247 ], [ %270, %249 ]
  %251 = getelementptr inbounds i32, ptr %4, i64 %250
  %252 = load i32, ptr %251, align 4, !tbaa !95
  %253 = trunc i32 %252 to i8
  %254 = getelementptr inbounds i8, ptr %222, i64 %250
  store i8 %253, ptr %254, align 1, !tbaa !16
  %255 = or i64 %250, 1
  %256 = getelementptr inbounds i32, ptr %4, i64 %255
  %257 = load i32, ptr %256, align 4, !tbaa !95
  %258 = trunc i32 %257 to i8
  %259 = getelementptr inbounds i8, ptr %222, i64 %255
  store i8 %258, ptr %259, align 1, !tbaa !16
  %260 = or i64 %250, 2
  %261 = getelementptr inbounds i32, ptr %4, i64 %260
  %262 = load i32, ptr %261, align 4, !tbaa !95
  %263 = trunc i32 %262 to i8
  %264 = getelementptr inbounds i8, ptr %222, i64 %260
  store i8 %263, ptr %264, align 1, !tbaa !16
  %265 = or i64 %250, 3
  %266 = getelementptr inbounds i32, ptr %4, i64 %265
  %267 = load i32, ptr %266, align 4, !tbaa !95
  %268 = trunc i32 %267 to i8
  %269 = getelementptr inbounds i8, ptr %222, i64 %265
  store i8 %268, ptr %269, align 1, !tbaa !16
  %270 = add nuw nsw i64 %250, 4
  %271 = icmp eq i64 %270, 10000
  br i1 %271, label %272, label %249, !llvm.loop !106

272:                                              ; preds = %249
  %273 = add i64 %220, -1
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %212, label %219, !prof !42

275:                                              ; preds = %217, %168, %135
  %276 = phi { ptr, i32 } [ %169, %168 ], [ %218, %217 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %277 = load ptr, ptr %3, align 8, !tbaa !5
  %278 = icmp eq ptr %277, null
  br i1 %278, label %282, label %279

279:                                              ; preds = %275, %133
  %280 = phi { ptr, i32 } [ %134, %133 ], [ %276, %275 ]
  %281 = phi ptr [ %5, %133 ], [ %277, %275 ]
  call void @_ZdaPv(ptr noundef nonnull %281) #13
  br label %282

282:                                              ; preds = %279, %275, %131
  %283 = phi { ptr, i32 } [ %132, %131 ], [ %276, %275 ], [ %280, %279 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %283

284:                                              ; preds = %213, %216
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::unique_ptr.33", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %9, align 4, !tbaa !94
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i32, ptr %4, i64 %11
  store i32 %12, ptr %14, align 4, !tbaa !95
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !96

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i32, ptr %4, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !95
  %22 = trunc i32 %21 to i8
  %23 = getelementptr inbounds i8, ptr %7, i64 %19
  store i8 %22, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i32, ptr %4, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !95
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds i8, ptr %7, i64 %24
  store i8 %27, ptr %28, align 1, !tbaa !16
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i32, ptr %4, i64 %29
  %31 = load i32, ptr %30, align 4, !tbaa !95
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds i8, ptr %7, i64 %29
  store i8 %32, ptr %33, align 1, !tbaa !16
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i32, ptr %4, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !95
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds i8, ptr %7, i64 %34
  store i8 %37, ptr %38, align 1, !tbaa !16
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i32, ptr %4, i64 %39
  %41 = load i32, ptr %40, align 4, !tbaa !95
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds i8, ptr %7, i64 %39
  store i8 %42, ptr %43, align 1, !tbaa !16
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !97

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i32, ptr %4, i64 %47
  %49 = load <16 x i32>, ptr %48, align 4, !tbaa !95
  %50 = getelementptr inbounds i32, ptr %48, i64 16
  %51 = load <16 x i32>, ptr %50, align 4, !tbaa !95
  %52 = getelementptr inbounds i32, ptr %48, i64 32
  %53 = load <16 x i32>, ptr %52, align 4, !tbaa !95
  %54 = getelementptr inbounds i32, ptr %48, i64 48
  %55 = load <16 x i32>, ptr %54, align 4, !tbaa !95
  %56 = trunc <16 x i32> %49 to <16 x i8>
  %57 = trunc <16 x i32> %51 to <16 x i8>
  %58 = trunc <16 x i32> %53 to <16 x i8>
  %59 = trunc <16 x i32> %55 to <16 x i8>
  %60 = getelementptr inbounds i8, ptr %5, i64 %47
  store <16 x i8> %56, ptr %60, align 1, !tbaa !16
  %61 = getelementptr inbounds i8, ptr %60, i64 16
  store <16 x i8> %57, ptr %61, align 1, !tbaa !16
  %62 = getelementptr inbounds i8, ptr %60, i64 32
  store <16 x i8> %58, ptr %62, align 1, !tbaa !16
  %63 = getelementptr inbounds i8, ptr %60, i64 48
  store <16 x i8> %59, ptr %63, align 1, !tbaa !16
  %64 = add nuw i64 %47, 64
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !107

66:                                               ; preds = %46
  %67 = getelementptr inbounds i32, ptr %4, i64 9984
  %68 = load i32, ptr %67, align 4, !tbaa !95
  %69 = trunc i32 %68 to i8
  %70 = getelementptr inbounds i8, ptr %5, i64 9984
  store i8 %69, ptr %70, align 1, !tbaa !16
  %71 = getelementptr inbounds i32, ptr %4, i64 9985
  %72 = load i32, ptr %71, align 4, !tbaa !95
  %73 = trunc i32 %72 to i8
  %74 = getelementptr inbounds i8, ptr %5, i64 9985
  store i8 %73, ptr %74, align 1, !tbaa !16
  %75 = getelementptr inbounds i32, ptr %4, i64 9986
  %76 = load i32, ptr %75, align 4, !tbaa !95
  %77 = trunc i32 %76 to i8
  %78 = getelementptr inbounds i8, ptr %5, i64 9986
  store i8 %77, ptr %78, align 1, !tbaa !16
  %79 = getelementptr inbounds i32, ptr %4, i64 9987
  %80 = load i32, ptr %79, align 4, !tbaa !95
  %81 = trunc i32 %80 to i8
  %82 = getelementptr inbounds i8, ptr %5, i64 9987
  store i8 %81, ptr %82, align 1, !tbaa !16
  %83 = getelementptr inbounds i32, ptr %4, i64 9988
  %84 = load i32, ptr %83, align 4, !tbaa !95
  %85 = trunc i32 %84 to i8
  %86 = getelementptr inbounds i8, ptr %5, i64 9988
  store i8 %85, ptr %86, align 1, !tbaa !16
  %87 = getelementptr inbounds i32, ptr %4, i64 9989
  %88 = load i32, ptr %87, align 4, !tbaa !95
  %89 = trunc i32 %88 to i8
  %90 = getelementptr inbounds i8, ptr %5, i64 9989
  store i8 %89, ptr %90, align 1, !tbaa !16
  %91 = getelementptr inbounds i32, ptr %4, i64 9990
  %92 = load i32, ptr %91, align 4, !tbaa !95
  %93 = trunc i32 %92 to i8
  %94 = getelementptr inbounds i8, ptr %5, i64 9990
  store i8 %93, ptr %94, align 1, !tbaa !16
  %95 = getelementptr inbounds i32, ptr %4, i64 9991
  %96 = load i32, ptr %95, align 4, !tbaa !95
  %97 = trunc i32 %96 to i8
  %98 = getelementptr inbounds i8, ptr %5, i64 9991
  store i8 %97, ptr %98, align 1, !tbaa !16
  %99 = getelementptr inbounds i32, ptr %4, i64 9992
  %100 = load i32, ptr %99, align 4, !tbaa !95
  %101 = trunc i32 %100 to i8
  %102 = getelementptr inbounds i8, ptr %5, i64 9992
  store i8 %101, ptr %102, align 1, !tbaa !16
  %103 = getelementptr inbounds i32, ptr %4, i64 9993
  %104 = load i32, ptr %103, align 4, !tbaa !95
  %105 = trunc i32 %104 to i8
  %106 = getelementptr inbounds i8, ptr %5, i64 9993
  store i8 %105, ptr %106, align 1, !tbaa !16
  %107 = getelementptr inbounds i32, ptr %4, i64 9994
  %108 = load i32, ptr %107, align 4, !tbaa !95
  %109 = trunc i32 %108 to i8
  %110 = getelementptr inbounds i8, ptr %5, i64 9994
  store i8 %109, ptr %110, align 1, !tbaa !16
  %111 = getelementptr inbounds i32, ptr %4, i64 9995
  %112 = load i32, ptr %111, align 4, !tbaa !95
  %113 = trunc i32 %112 to i8
  %114 = getelementptr inbounds i8, ptr %5, i64 9995
  store i8 %113, ptr %114, align 1, !tbaa !16
  %115 = getelementptr inbounds i32, ptr %4, i64 9996
  %116 = load i32, ptr %115, align 4, !tbaa !95
  %117 = trunc i32 %116 to i8
  %118 = getelementptr inbounds i8, ptr %5, i64 9996
  store i8 %117, ptr %118, align 1, !tbaa !16
  %119 = getelementptr inbounds i32, ptr %4, i64 9997
  %120 = load i32, ptr %119, align 4, !tbaa !95
  %121 = trunc i32 %120 to i8
  %122 = getelementptr inbounds i8, ptr %5, i64 9997
  store i8 %121, ptr %122, align 1, !tbaa !16
  %123 = getelementptr inbounds i32, ptr %4, i64 9998
  %124 = load i32, ptr %123, align 4, !tbaa !95
  %125 = trunc i32 %124 to i8
  %126 = getelementptr inbounds i8, ptr %5, i64 9998
  store i8 %125, ptr %126, align 1, !tbaa !16
  %127 = getelementptr inbounds i32, ptr %4, i64 9999
  %128 = load i32, ptr %127, align 4, !tbaa !95
  %129 = trunc i32 %128 to i8
  %130 = getelementptr inbounds i8, ptr %5, i64 9999
  store i8 %129, ptr %130, align 1, !tbaa !16
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %282

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %279

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %275

137:                                              ; preds = %198, %66
  %138 = phi i64 [ 0, %66 ], [ %199, %198 ]
  %139 = getelementptr inbounds i8, ptr %5, i64 %138
  %140 = load i8, ptr %139, align 1, !tbaa !16
  %141 = getelementptr inbounds i8, ptr %7, i64 %138
  %142 = load i8, ptr %141, align 1, !tbaa !16
  %143 = icmp eq i8 %140, %142
  br i1 %143, label %170, label %144

144:                                              ; preds = %191, %184, %177, %170, %137
  %145 = phi i64 [ %138, %137 ], [ %171, %170 ], [ %178, %177 ], [ %185, %184 ], [ %192, %191 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i8, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %168

149:                                              ; preds = %144
  %150 = getelementptr inbounds i32, ptr %4, i64 %146
  %151 = load i32, ptr %150, align 4, !tbaa !95
  %152 = zext i32 %151 to i64
  %153 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %152)
          to label %154 unwind label %168

154:                                              ; preds = %149
  %155 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %153, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %156 unwind label %168

156:                                              ; preds = %154
  %157 = getelementptr inbounds i8, ptr %5, i64 %146
  %158 = load i8, ptr %157, align 1, !tbaa !16
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %153, i8 noundef zeroext %158)
          to label %160 unwind label %168

160:                                              ; preds = %156
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %162 unwind label %168

162:                                              ; preds = %160
  %163 = load i8, ptr %147, align 1, !tbaa !16
  %164 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %159, i8 noundef zeroext %163)
          to label %165 unwind label %168

165:                                              ; preds = %162
  %166 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %164, ptr noundef nonnull @.str.149)
          to label %167 unwind label %168

167:                                              ; preds = %165
  call void @exit(i32 noundef 1) #12
  unreachable

168:                                              ; preds = %165, %162, %160, %156, %154, %149, %144
  %169 = landingpad { ptr, i32 }
          cleanup
  br label %275

170:                                              ; preds = %137
  %171 = add nuw nsw i64 %138, 1
  %172 = getelementptr inbounds i8, ptr %5, i64 %171
  %173 = load i8, ptr %172, align 1, !tbaa !16
  %174 = getelementptr inbounds i8, ptr %7, i64 %171
  %175 = load i8, ptr %174, align 1, !tbaa !16
  %176 = icmp eq i8 %173, %175
  br i1 %176, label %177, label %144

177:                                              ; preds = %170
  %178 = add nuw nsw i64 %138, 2
  %179 = getelementptr inbounds i8, ptr %5, i64 %178
  %180 = load i8, ptr %179, align 1, !tbaa !16
  %181 = getelementptr inbounds i8, ptr %7, i64 %178
  %182 = load i8, ptr %181, align 1, !tbaa !16
  %183 = icmp eq i8 %180, %182
  br i1 %183, label %184, label %144

184:                                              ; preds = %177
  %185 = add nuw nsw i64 %138, 3
  %186 = getelementptr inbounds i8, ptr %5, i64 %185
  %187 = load i8, ptr %186, align 1, !tbaa !16
  %188 = getelementptr inbounds i8, ptr %7, i64 %185
  %189 = load i8, ptr %188, align 1, !tbaa !16
  %190 = icmp eq i8 %187, %189
  br i1 %190, label %191, label %144

191:                                              ; preds = %184
  %192 = add nuw nsw i64 %138, 4
  %193 = getelementptr inbounds i8, ptr %5, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !16
  %195 = getelementptr inbounds i8, ptr %7, i64 %192
  %196 = load i8, ptr %195, align 1, !tbaa !16
  %197 = icmp eq i8 %194, %196
  br i1 %197, label %198, label %144

198:                                              ; preds = %191
  %199 = add nuw nsw i64 %138, 5
  %200 = icmp eq i64 %199, 10000
  br i1 %200, label %201, label %137, !llvm.loop !99

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %203 = load i8, ptr %202, align 2, !tbaa !23, !range !40, !noundef !41
  %204 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %205 = load i64, ptr %204, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %206 unwind label %217

206:                                              ; preds = %201
  %207 = icmp ne i8 %203, 0
  %208 = icmp eq i64 %205, 0
  %209 = select i1 %207, i1 true, i1 %208
  br i1 %209, label %212, label %210, !prof !42

210:                                              ; preds = %206
  %211 = getelementptr i8, ptr %4, i64 40000
  br label %219

212:                                              ; preds = %272, %206
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %213 unwind label %217

213:                                              ; preds = %212
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %214 = load ptr, ptr %3, align 8, !tbaa !5
  %215 = icmp eq ptr %214, null
  br i1 %215, label %284, label %216

216:                                              ; preds = %213
  call void @_ZdaPv(ptr noundef nonnull %214) #13
  br label %284

217:                                              ; preds = %212, %201
  %218 = landingpad { ptr, i32 }
          cleanup
  br label %275

219:                                              ; preds = %210, %272
  %220 = phi i64 [ %273, %272 ], [ %205, %210 ]
  %221 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %3, i64 %221) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %222 = load ptr, ptr %3, align 8, !tbaa !5
  %223 = getelementptr i8, ptr %222, i64 10000
  %224 = icmp ult ptr %222, %211
  %225 = icmp ult ptr %4, %223
  %226 = and i1 %224, %225
  br i1 %226, label %247, label %227

227:                                              ; preds = %219, %227
  %228 = phi i64 [ %245, %227 ], [ 0, %219 ]
  %229 = getelementptr inbounds i32, ptr %4, i64 %228
  %230 = load <16 x i32>, ptr %229, align 4, !tbaa !95, !alias.scope !108
  %231 = getelementptr inbounds i32, ptr %229, i64 16
  %232 = load <16 x i32>, ptr %231, align 4, !tbaa !95, !alias.scope !108
  %233 = getelementptr inbounds i32, ptr %229, i64 32
  %234 = load <16 x i32>, ptr %233, align 4, !tbaa !95, !alias.scope !108
  %235 = getelementptr inbounds i32, ptr %229, i64 48
  %236 = load <16 x i32>, ptr %235, align 4, !tbaa !95, !alias.scope !108
  %237 = trunc <16 x i32> %230 to <16 x i8>
  %238 = trunc <16 x i32> %232 to <16 x i8>
  %239 = trunc <16 x i32> %234 to <16 x i8>
  %240 = trunc <16 x i32> %236 to <16 x i8>
  %241 = getelementptr inbounds i8, ptr %222, i64 %228
  store <16 x i8> %237, ptr %241, align 1, !tbaa !16, !alias.scope !111, !noalias !108
  %242 = getelementptr inbounds i8, ptr %241, i64 16
  store <16 x i8> %238, ptr %242, align 1, !tbaa !16, !alias.scope !111, !noalias !108
  %243 = getelementptr inbounds i8, ptr %241, i64 32
  store <16 x i8> %239, ptr %243, align 1, !tbaa !16, !alias.scope !111, !noalias !108
  %244 = getelementptr inbounds i8, ptr %241, i64 48
  store <16 x i8> %240, ptr %244, align 1, !tbaa !16, !alias.scope !111, !noalias !108
  %245 = add nuw i64 %228, 64
  %246 = icmp eq i64 %245, 9984
  br i1 %246, label %247, label %227, !llvm.loop !113

247:                                              ; preds = %227, %219
  %248 = phi i64 [ 0, %219 ], [ 9984, %227 ]
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ %248, %247 ], [ %270, %249 ]
  %251 = getelementptr inbounds i32, ptr %4, i64 %250
  %252 = load i32, ptr %251, align 4, !tbaa !95
  %253 = trunc i32 %252 to i8
  %254 = getelementptr inbounds i8, ptr %222, i64 %250
  store i8 %253, ptr %254, align 1, !tbaa !16
  %255 = or i64 %250, 1
  %256 = getelementptr inbounds i32, ptr %4, i64 %255
  %257 = load i32, ptr %256, align 4, !tbaa !95
  %258 = trunc i32 %257 to i8
  %259 = getelementptr inbounds i8, ptr %222, i64 %255
  store i8 %258, ptr %259, align 1, !tbaa !16
  %260 = or i64 %250, 2
  %261 = getelementptr inbounds i32, ptr %4, i64 %260
  %262 = load i32, ptr %261, align 4, !tbaa !95
  %263 = trunc i32 %262 to i8
  %264 = getelementptr inbounds i8, ptr %222, i64 %260
  store i8 %263, ptr %264, align 1, !tbaa !16
  %265 = or i64 %250, 3
  %266 = getelementptr inbounds i32, ptr %4, i64 %265
  %267 = load i32, ptr %266, align 4, !tbaa !95
  %268 = trunc i32 %267 to i8
  %269 = getelementptr inbounds i8, ptr %222, i64 %265
  store i8 %268, ptr %269, align 1, !tbaa !16
  %270 = add nuw nsw i64 %250, 4
  %271 = icmp eq i64 %270, 10000
  br i1 %271, label %272, label %249, !llvm.loop !114

272:                                              ; preds = %249
  %273 = add i64 %220, -1
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %212, label %219, !prof !42

275:                                              ; preds = %217, %168, %135
  %276 = phi { ptr, i32 } [ %169, %168 ], [ %218, %217 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %277 = load ptr, ptr %3, align 8, !tbaa !5
  %278 = icmp eq ptr %277, null
  br i1 %278, label %282, label %279

279:                                              ; preds = %275, %133
  %280 = phi { ptr, i32 } [ %134, %133 ], [ %276, %275 ]
  %281 = phi ptr [ %5, %133 ], [ %277, %275 ]
  call void @_ZdaPv(ptr noundef nonnull %281) #13
  br label %282

282:                                              ; preds = %279, %275, %131
  %283 = phi { ptr, i32 } [ %132, %131 ], [ %276, %275 ], [ %280, %279 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %283

284:                                              ; preds = %213, %216
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z53benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::unique_ptr.33", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %6 unwind label %67

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %8 unwind label %69

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %9, align 4, !tbaa !94
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %13 unwind label %71

13:                                               ; preds = %10
  %14 = getelementptr inbounds i32, ptr %4, i64 %11
  store i32 %12, ptr %14, align 4, !tbaa !95
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !96

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i32, ptr %4, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !95
  %22 = trunc i32 %21 to i8
  %23 = getelementptr inbounds i8, ptr %7, i64 %19
  store i8 %22, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i32, ptr %4, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !95
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds i8, ptr %7, i64 %24
  store i8 %27, ptr %28, align 1, !tbaa !16
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i32, ptr %4, i64 %29
  %31 = load i32, ptr %30, align 4, !tbaa !95
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds i8, ptr %7, i64 %29
  store i8 %32, ptr %33, align 1, !tbaa !16
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i32, ptr %4, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !95
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds i8, ptr %7, i64 %34
  store i8 %37, ptr %38, align 1, !tbaa !16
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i32, ptr %4, i64 %39
  %41 = load i32, ptr %40, align 4, !tbaa !95
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds i8, ptr %7, i64 %39
  store i8 %42, ptr %43, align 1, !tbaa !16
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !97

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %65, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i32, ptr %4, i64 %47
  %49 = load <4 x i32>, ptr %48, align 4, !tbaa !95
  %50 = getelementptr inbounds i32, ptr %48, i64 4
  %51 = load <4 x i32>, ptr %50, align 4, !tbaa !95
  %52 = trunc <4 x i32> %49 to <4 x i8>
  %53 = trunc <4 x i32> %51 to <4 x i8>
  %54 = getelementptr inbounds i8, ptr %5, i64 %47
  store <4 x i8> %52, ptr %54, align 1, !tbaa !16
  %55 = getelementptr inbounds i8, ptr %54, i64 4
  store <4 x i8> %53, ptr %55, align 1, !tbaa !16
  %56 = or i64 %47, 8
  %57 = getelementptr inbounds i32, ptr %4, i64 %56
  %58 = load <4 x i32>, ptr %57, align 4, !tbaa !95
  %59 = getelementptr inbounds i32, ptr %57, i64 4
  %60 = load <4 x i32>, ptr %59, align 4, !tbaa !95
  %61 = trunc <4 x i32> %58 to <4 x i8>
  %62 = trunc <4 x i32> %60 to <4 x i8>
  %63 = getelementptr inbounds i8, ptr %5, i64 %56
  store <4 x i8> %61, ptr %63, align 1, !tbaa !16
  %64 = getelementptr inbounds i8, ptr %63, i64 4
  store <4 x i8> %62, ptr %64, align 1, !tbaa !16
  %65 = add nuw nsw i64 %47, 16
  %66 = icmp eq i64 %65, 10000
  br i1 %66, label %73, label %46, !llvm.loop !115

67:                                               ; preds = %1
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %222

69:                                               ; preds = %6
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %219

71:                                               ; preds = %10
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %215

73:                                               ; preds = %46, %134
  %74 = phi i64 [ %135, %134 ], [ 0, %46 ]
  %75 = getelementptr inbounds i8, ptr %5, i64 %74
  %76 = load i8, ptr %75, align 1, !tbaa !16
  %77 = getelementptr inbounds i8, ptr %7, i64 %74
  %78 = load i8, ptr %77, align 1, !tbaa !16
  %79 = icmp eq i8 %76, %78
  br i1 %79, label %106, label %80

80:                                               ; preds = %127, %120, %113, %106, %73
  %81 = phi i64 [ %74, %73 ], [ %107, %106 ], [ %114, %113 ], [ %121, %120 ], [ %128, %127 ]
  %82 = and i64 %81, 4294967295
  %83 = getelementptr inbounds i8, ptr %7, i64 %82
  %84 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %85 unwind label %104

85:                                               ; preds = %80
  %86 = getelementptr inbounds i32, ptr %4, i64 %82
  %87 = load i32, ptr %86, align 4, !tbaa !95
  %88 = zext i32 %87 to i64
  %89 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %88)
          to label %90 unwind label %104

90:                                               ; preds = %85
  %91 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %89, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %92 unwind label %104

92:                                               ; preds = %90
  %93 = getelementptr inbounds i8, ptr %5, i64 %82
  %94 = load i8, ptr %93, align 1, !tbaa !16
  %95 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %89, i8 noundef zeroext %94)
          to label %96 unwind label %104

96:                                               ; preds = %92
  %97 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %95, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %98 unwind label %104

98:                                               ; preds = %96
  %99 = load i8, ptr %83, align 1, !tbaa !16
  %100 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %95, i8 noundef zeroext %99)
          to label %101 unwind label %104

101:                                              ; preds = %98
  %102 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %100, ptr noundef nonnull @.str.149)
          to label %103 unwind label %104

103:                                              ; preds = %101
  call void @exit(i32 noundef 1) #12
  unreachable

104:                                              ; preds = %101, %98, %96, %92, %90, %85, %80
  %105 = landingpad { ptr, i32 }
          cleanup
  br label %215

106:                                              ; preds = %73
  %107 = add nuw nsw i64 %74, 1
  %108 = getelementptr inbounds i8, ptr %5, i64 %107
  %109 = load i8, ptr %108, align 1, !tbaa !16
  %110 = getelementptr inbounds i8, ptr %7, i64 %107
  %111 = load i8, ptr %110, align 1, !tbaa !16
  %112 = icmp eq i8 %109, %111
  br i1 %112, label %113, label %80

113:                                              ; preds = %106
  %114 = add nuw nsw i64 %74, 2
  %115 = getelementptr inbounds i8, ptr %5, i64 %114
  %116 = load i8, ptr %115, align 1, !tbaa !16
  %117 = getelementptr inbounds i8, ptr %7, i64 %114
  %118 = load i8, ptr %117, align 1, !tbaa !16
  %119 = icmp eq i8 %116, %118
  br i1 %119, label %120, label %80

120:                                              ; preds = %113
  %121 = add nuw nsw i64 %74, 3
  %122 = getelementptr inbounds i8, ptr %5, i64 %121
  %123 = load i8, ptr %122, align 1, !tbaa !16
  %124 = getelementptr inbounds i8, ptr %7, i64 %121
  %125 = load i8, ptr %124, align 1, !tbaa !16
  %126 = icmp eq i8 %123, %125
  br i1 %126, label %127, label %80

127:                                              ; preds = %120
  %128 = add nuw nsw i64 %74, 4
  %129 = getelementptr inbounds i8, ptr %5, i64 %128
  %130 = load i8, ptr %129, align 1, !tbaa !16
  %131 = getelementptr inbounds i8, ptr %7, i64 %128
  %132 = load i8, ptr %131, align 1, !tbaa !16
  %133 = icmp eq i8 %130, %132
  br i1 %133, label %134, label %80

134:                                              ; preds = %127
  %135 = add nuw nsw i64 %74, 5
  %136 = icmp eq i64 %135, 10000
  br i1 %136, label %137, label %73, !llvm.loop !99

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %139 = load i8, ptr %138, align 2, !tbaa !23, !range !40, !noundef !41
  %140 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %141 = load i64, ptr %140, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %142 unwind label %153

142:                                              ; preds = %137
  %143 = icmp ne i8 %139, 0
  %144 = icmp eq i64 %141, 0
  %145 = select i1 %143, i1 true, i1 %144
  br i1 %145, label %148, label %146, !prof !42

146:                                              ; preds = %142
  %147 = getelementptr i8, ptr %4, i64 40000
  br label %155

148:                                              ; preds = %212, %142
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %149 unwind label %153

149:                                              ; preds = %148
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %150 = load ptr, ptr %3, align 8, !tbaa !5
  %151 = icmp eq ptr %150, null
  br i1 %151, label %224, label %152

152:                                              ; preds = %149
  call void @_ZdaPv(ptr noundef nonnull %150) #13
  br label %224

153:                                              ; preds = %148, %137
  %154 = landingpad { ptr, i32 }
          cleanup
  br label %215

155:                                              ; preds = %146, %212
  %156 = phi i64 [ %213, %212 ], [ %141, %146 ]
  %157 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %3, i64 %157) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %158 = load ptr, ptr %3, align 8, !tbaa !5
  %159 = getelementptr i8, ptr %158, i64 10000
  %160 = icmp ult ptr %158, %147
  %161 = icmp ult ptr %4, %159
  %162 = and i1 %160, %161
  br i1 %162, label %184, label %163

163:                                              ; preds = %155, %163
  %164 = phi i64 [ %182, %163 ], [ 0, %155 ]
  %165 = getelementptr inbounds i32, ptr %4, i64 %164
  %166 = load <4 x i32>, ptr %165, align 4, !tbaa !95, !alias.scope !116
  %167 = getelementptr inbounds i32, ptr %165, i64 4
  %168 = load <4 x i32>, ptr %167, align 4, !tbaa !95, !alias.scope !116
  %169 = trunc <4 x i32> %166 to <4 x i8>
  %170 = trunc <4 x i32> %168 to <4 x i8>
  %171 = getelementptr inbounds i8, ptr %158, i64 %164
  store <4 x i8> %169, ptr %171, align 1, !tbaa !16, !alias.scope !119, !noalias !116
  %172 = getelementptr inbounds i8, ptr %171, i64 4
  store <4 x i8> %170, ptr %172, align 1, !tbaa !16, !alias.scope !119, !noalias !116
  %173 = or i64 %164, 8
  %174 = getelementptr inbounds i32, ptr %4, i64 %173
  %175 = load <4 x i32>, ptr %174, align 4, !tbaa !95, !alias.scope !116
  %176 = getelementptr inbounds i32, ptr %174, i64 4
  %177 = load <4 x i32>, ptr %176, align 4, !tbaa !95, !alias.scope !116
  %178 = trunc <4 x i32> %175 to <4 x i8>
  %179 = trunc <4 x i32> %177 to <4 x i8>
  %180 = getelementptr inbounds i8, ptr %158, i64 %173
  store <4 x i8> %178, ptr %180, align 1, !tbaa !16, !alias.scope !119, !noalias !116
  %181 = getelementptr inbounds i8, ptr %180, i64 4
  store <4 x i8> %179, ptr %181, align 1, !tbaa !16, !alias.scope !119, !noalias !116
  %182 = add nuw nsw i64 %164, 16
  %183 = icmp eq i64 %182, 10000
  br i1 %183, label %212, label %163, !llvm.loop !121

184:                                              ; preds = %155, %184
  %185 = phi i64 [ %210, %184 ], [ 0, %155 ]
  %186 = getelementptr inbounds i32, ptr %4, i64 %185
  %187 = load i32, ptr %186, align 4, !tbaa !95
  %188 = trunc i32 %187 to i8
  %189 = getelementptr inbounds i8, ptr %158, i64 %185
  store i8 %188, ptr %189, align 1, !tbaa !16
  %190 = add nuw nsw i64 %185, 1
  %191 = getelementptr inbounds i32, ptr %4, i64 %190
  %192 = load i32, ptr %191, align 4, !tbaa !95
  %193 = trunc i32 %192 to i8
  %194 = getelementptr inbounds i8, ptr %158, i64 %190
  store i8 %193, ptr %194, align 1, !tbaa !16
  %195 = add nuw nsw i64 %185, 2
  %196 = getelementptr inbounds i32, ptr %4, i64 %195
  %197 = load i32, ptr %196, align 4, !tbaa !95
  %198 = trunc i32 %197 to i8
  %199 = getelementptr inbounds i8, ptr %158, i64 %195
  store i8 %198, ptr %199, align 1, !tbaa !16
  %200 = add nuw nsw i64 %185, 3
  %201 = getelementptr inbounds i32, ptr %4, i64 %200
  %202 = load i32, ptr %201, align 4, !tbaa !95
  %203 = trunc i32 %202 to i8
  %204 = getelementptr inbounds i8, ptr %158, i64 %200
  store i8 %203, ptr %204, align 1, !tbaa !16
  %205 = add nuw nsw i64 %185, 4
  %206 = getelementptr inbounds i32, ptr %4, i64 %205
  %207 = load i32, ptr %206, align 4, !tbaa !95
  %208 = trunc i32 %207 to i8
  %209 = getelementptr inbounds i8, ptr %158, i64 %205
  store i8 %208, ptr %209, align 1, !tbaa !16
  %210 = add nuw nsw i64 %185, 5
  %211 = icmp eq i64 %210, 10000
  br i1 %211, label %212, label %184, !llvm.loop !122

212:                                              ; preds = %163, %184
  %213 = add i64 %156, -1
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %148, label %155, !prof !42

215:                                              ; preds = %153, %104, %71
  %216 = phi { ptr, i32 } [ %105, %104 ], [ %154, %153 ], [ %72, %71 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %217 = load ptr, ptr %3, align 8, !tbaa !5
  %218 = icmp eq ptr %217, null
  br i1 %218, label %222, label %219

219:                                              ; preds = %215, %69
  %220 = phi { ptr, i32 } [ %70, %69 ], [ %216, %215 ]
  %221 = phi ptr [ %5, %69 ], [ %217, %215 ]
  call void @_ZdaPv(ptr noundef nonnull %221) #13
  br label %222

222:                                              ; preds = %219, %215, %67
  %223 = phi { ptr, i32 } [ %68, %67 ], [ %216, %215 ], [ %220, %219 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %223

224:                                              ; preds = %149, %152
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::uniform_int_distribution.54", align 4
  %4 = alloca %"class.std::unique_ptr.33", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %7 unwind label %42

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  store i32 0, ptr %3, align 4, !tbaa !92
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %3, i64 0, i32 1
  store i32 -1, ptr %8, align 4, !tbaa !94
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %3)
          to label %12 unwind label %46

12:                                               ; preds = %9
  %13 = getelementptr inbounds i32, ptr %5, i64 %10
  store i32 %11, ptr %13, align 4, !tbaa !95
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !96

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %17, align 1, !tbaa !69
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %24, %21 ]
  %20 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %21 unwind label %44

21:                                               ; preds = %18
  %22 = load ptr, ptr %4, align 8, !tbaa !5
  %23 = getelementptr inbounds i8, ptr %22, i64 %19
  store i8 %20, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 10000
  br i1 %25, label %26, label %18, !llvm.loop !70

26:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  %27 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %28 = load i8, ptr %27, align 2, !tbaa !23, !range !40, !noundef !41
  %29 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %30 = load i64, ptr %29, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %31 unwind label %48

31:                                               ; preds = %26
  %32 = icmp ne i8 %28, 0
  %33 = icmp eq i64 %30, 0
  %34 = select i1 %32, i1 true, i1 %33
  br i1 %34, label %37, label %35, !prof !42

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %5, i64 40000
  br label %50

37:                                               ; preds = %119, %31
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %38 unwind label %48

38:                                               ; preds = %37
  %39 = load ptr, ptr %4, align 8, !tbaa !5
  %40 = icmp eq ptr %39, null
  br i1 %40, label %129, label %41

41:                                               ; preds = %38
  call void @_ZdaPv(ptr noundef nonnull %39) #13
  br label %129

42:                                               ; preds = %1
  %43 = landingpad { ptr, i32 }
          cleanup
  br label %127

44:                                               ; preds = %18
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %122

46:                                               ; preds = %9
  %47 = landingpad { ptr, i32 }
          cleanup
  br label %122

48:                                               ; preds = %37, %26
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %122

50:                                               ; preds = %35, %119
  %51 = phi i64 [ %120, %119 ], [ %30, %35 ]
  %52 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %4, i64 %52) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = getelementptr i8, ptr %53, i64 10000
  %55 = icmp ult ptr %53, %36
  %56 = icmp ult ptr %5, %54
  %57 = and i1 %55, %56
  br i1 %57, label %86, label %58

58:                                               ; preds = %50, %58
  %59 = phi i64 [ %84, %58 ], [ 0, %50 ]
  %60 = getelementptr inbounds i32, ptr %5, i64 %59
  %61 = load <8 x i32>, ptr %60, align 4, !tbaa !95, !alias.scope !123
  %62 = getelementptr inbounds i32, ptr %60, i64 8
  %63 = load <8 x i32>, ptr %62, align 4, !tbaa !95, !alias.scope !123
  %64 = getelementptr inbounds i32, ptr %60, i64 16
  %65 = load <8 x i32>, ptr %64, align 4, !tbaa !95, !alias.scope !123
  %66 = getelementptr inbounds i32, ptr %60, i64 24
  %67 = load <8 x i32>, ptr %66, align 4, !tbaa !95, !alias.scope !123
  %68 = getelementptr inbounds i8, ptr %53, i64 %59
  %69 = load <8 x i8>, ptr %68, align 1, !tbaa !16, !alias.scope !126, !noalias !123
  %70 = getelementptr inbounds i8, ptr %68, i64 8
  %71 = load <8 x i8>, ptr %70, align 1, !tbaa !16, !alias.scope !126, !noalias !123
  %72 = getelementptr inbounds i8, ptr %68, i64 16
  %73 = load <8 x i8>, ptr %72, align 1, !tbaa !16, !alias.scope !126, !noalias !123
  %74 = getelementptr inbounds i8, ptr %68, i64 24
  %75 = load <8 x i8>, ptr %74, align 1, !tbaa !16, !alias.scope !126, !noalias !123
  %76 = trunc <8 x i32> %61 to <8 x i8>
  %77 = trunc <8 x i32> %63 to <8 x i8>
  %78 = trunc <8 x i32> %65 to <8 x i8>
  %79 = trunc <8 x i32> %67 to <8 x i8>
  %80 = add <8 x i8> %69, %76
  %81 = add <8 x i8> %71, %77
  %82 = add <8 x i8> %73, %78
  %83 = add <8 x i8> %75, %79
  store <8 x i8> %80, ptr %68, align 1, !tbaa !16, !alias.scope !126, !noalias !123
  store <8 x i8> %81, ptr %70, align 1, !tbaa !16, !alias.scope !126, !noalias !123
  store <8 x i8> %82, ptr %72, align 1, !tbaa !16, !alias.scope !126, !noalias !123
  store <8 x i8> %83, ptr %74, align 1, !tbaa !16, !alias.scope !126, !noalias !123
  %84 = add nuw i64 %59, 32
  %85 = icmp eq i64 %84, 9984
  br i1 %85, label %86, label %58, !llvm.loop !128

86:                                               ; preds = %58, %50
  %87 = phi i64 [ 0, %50 ], [ 9984, %58 ]
  br label %88

88:                                               ; preds = %88, %86
  %89 = phi i64 [ %87, %86 ], [ %117, %88 ]
  %90 = getelementptr inbounds i32, ptr %5, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !95
  %92 = getelementptr inbounds i8, ptr %53, i64 %89
  %93 = load i8, ptr %92, align 1, !tbaa !16
  %94 = trunc i32 %91 to i8
  %95 = add i8 %93, %94
  store i8 %95, ptr %92, align 1, !tbaa !16
  %96 = or i64 %89, 1
  %97 = getelementptr inbounds i32, ptr %5, i64 %96
  %98 = load i32, ptr %97, align 4, !tbaa !95
  %99 = getelementptr inbounds i8, ptr %53, i64 %96
  %100 = load i8, ptr %99, align 1, !tbaa !16
  %101 = trunc i32 %98 to i8
  %102 = add i8 %100, %101
  store i8 %102, ptr %99, align 1, !tbaa !16
  %103 = or i64 %89, 2
  %104 = getelementptr inbounds i32, ptr %5, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !95
  %106 = getelementptr inbounds i8, ptr %53, i64 %103
  %107 = load i8, ptr %106, align 1, !tbaa !16
  %108 = trunc i32 %105 to i8
  %109 = add i8 %107, %108
  store i8 %109, ptr %106, align 1, !tbaa !16
  %110 = or i64 %89, 3
  %111 = getelementptr inbounds i32, ptr %5, i64 %110
  %112 = load i32, ptr %111, align 4, !tbaa !95
  %113 = getelementptr inbounds i8, ptr %53, i64 %110
  %114 = load i8, ptr %113, align 1, !tbaa !16
  %115 = trunc i32 %112 to i8
  %116 = add i8 %114, %115
  store i8 %116, ptr %113, align 1, !tbaa !16
  %117 = add nuw nsw i64 %89, 4
  %118 = icmp eq i64 %117, 10000
  br i1 %118, label %119, label %88, !llvm.loop !129

119:                                              ; preds = %88
  %120 = add i64 %51, -1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %37, label %50, !prof !42

122:                                              ; preds = %48, %46, %44
  %123 = phi { ptr, i32 } [ %49, %48 ], [ %45, %44 ], [ %47, %46 ]
  %124 = load ptr, ptr %4, align 8, !tbaa !5
  %125 = icmp eq ptr %124, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %122
  call void @_ZdaPv(ptr noundef nonnull %124) #13
  br label %127

127:                                              ; preds = %126, %122, %42
  %128 = phi { ptr, i32 } [ %43, %42 ], [ %123, %122 ], [ %123, %126 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %128

129:                                              ; preds = %38, %41
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::uniform_int_distribution.54", align 4
  %4 = alloca %"class.std::unique_ptr.33", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %7 unwind label %42

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  store i32 0, ptr %3, align 4, !tbaa !92
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %3, i64 0, i32 1
  store i32 -1, ptr %8, align 4, !tbaa !94
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %3)
          to label %12 unwind label %46

12:                                               ; preds = %9
  %13 = getelementptr inbounds i32, ptr %5, i64 %10
  store i32 %11, ptr %13, align 4, !tbaa !95
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !96

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %17, align 1, !tbaa !69
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %24, %21 ]
  %20 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %21 unwind label %44

21:                                               ; preds = %18
  %22 = load ptr, ptr %4, align 8, !tbaa !5
  %23 = getelementptr inbounds i8, ptr %22, i64 %19
  store i8 %20, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 10000
  br i1 %25, label %26, label %18, !llvm.loop !70

26:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  %27 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %28 = load i8, ptr %27, align 2, !tbaa !23, !range !40, !noundef !41
  %29 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %30 = load i64, ptr %29, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %31 unwind label %48

31:                                               ; preds = %26
  %32 = icmp ne i8 %28, 0
  %33 = icmp eq i64 %30, 0
  %34 = select i1 %32, i1 true, i1 %33
  br i1 %34, label %37, label %35, !prof !42

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %5, i64 40000
  br label %50

37:                                               ; preds = %119, %31
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %38 unwind label %48

38:                                               ; preds = %37
  %39 = load ptr, ptr %4, align 8, !tbaa !5
  %40 = icmp eq ptr %39, null
  br i1 %40, label %129, label %41

41:                                               ; preds = %38
  call void @_ZdaPv(ptr noundef nonnull %39) #13
  br label %129

42:                                               ; preds = %1
  %43 = landingpad { ptr, i32 }
          cleanup
  br label %127

44:                                               ; preds = %18
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %122

46:                                               ; preds = %9
  %47 = landingpad { ptr, i32 }
          cleanup
  br label %122

48:                                               ; preds = %37, %26
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %122

50:                                               ; preds = %35, %119
  %51 = phi i64 [ %120, %119 ], [ %30, %35 ]
  %52 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %4, i64 %52) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = getelementptr i8, ptr %53, i64 10000
  %55 = icmp ult ptr %53, %36
  %56 = icmp ult ptr %5, %54
  %57 = and i1 %55, %56
  br i1 %57, label %86, label %58

58:                                               ; preds = %50, %58
  %59 = phi i64 [ %84, %58 ], [ 0, %50 ]
  %60 = getelementptr inbounds i32, ptr %5, i64 %59
  %61 = load <16 x i32>, ptr %60, align 4, !tbaa !95, !alias.scope !130
  %62 = getelementptr inbounds i32, ptr %60, i64 16
  %63 = load <16 x i32>, ptr %62, align 4, !tbaa !95, !alias.scope !130
  %64 = getelementptr inbounds i32, ptr %60, i64 32
  %65 = load <16 x i32>, ptr %64, align 4, !tbaa !95, !alias.scope !130
  %66 = getelementptr inbounds i32, ptr %60, i64 48
  %67 = load <16 x i32>, ptr %66, align 4, !tbaa !95, !alias.scope !130
  %68 = getelementptr inbounds i8, ptr %53, i64 %59
  %69 = load <16 x i8>, ptr %68, align 1, !tbaa !16, !alias.scope !133, !noalias !130
  %70 = getelementptr inbounds i8, ptr %68, i64 16
  %71 = load <16 x i8>, ptr %70, align 1, !tbaa !16, !alias.scope !133, !noalias !130
  %72 = getelementptr inbounds i8, ptr %68, i64 32
  %73 = load <16 x i8>, ptr %72, align 1, !tbaa !16, !alias.scope !133, !noalias !130
  %74 = getelementptr inbounds i8, ptr %68, i64 48
  %75 = load <16 x i8>, ptr %74, align 1, !tbaa !16, !alias.scope !133, !noalias !130
  %76 = trunc <16 x i32> %61 to <16 x i8>
  %77 = trunc <16 x i32> %63 to <16 x i8>
  %78 = trunc <16 x i32> %65 to <16 x i8>
  %79 = trunc <16 x i32> %67 to <16 x i8>
  %80 = add <16 x i8> %69, %76
  %81 = add <16 x i8> %71, %77
  %82 = add <16 x i8> %73, %78
  %83 = add <16 x i8> %75, %79
  store <16 x i8> %80, ptr %68, align 1, !tbaa !16, !alias.scope !133, !noalias !130
  store <16 x i8> %81, ptr %70, align 1, !tbaa !16, !alias.scope !133, !noalias !130
  store <16 x i8> %82, ptr %72, align 1, !tbaa !16, !alias.scope !133, !noalias !130
  store <16 x i8> %83, ptr %74, align 1, !tbaa !16, !alias.scope !133, !noalias !130
  %84 = add nuw i64 %59, 64
  %85 = icmp eq i64 %84, 9984
  br i1 %85, label %86, label %58, !llvm.loop !135

86:                                               ; preds = %58, %50
  %87 = phi i64 [ 0, %50 ], [ 9984, %58 ]
  br label %88

88:                                               ; preds = %88, %86
  %89 = phi i64 [ %87, %86 ], [ %117, %88 ]
  %90 = getelementptr inbounds i32, ptr %5, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !95
  %92 = getelementptr inbounds i8, ptr %53, i64 %89
  %93 = load i8, ptr %92, align 1, !tbaa !16
  %94 = trunc i32 %91 to i8
  %95 = add i8 %93, %94
  store i8 %95, ptr %92, align 1, !tbaa !16
  %96 = or i64 %89, 1
  %97 = getelementptr inbounds i32, ptr %5, i64 %96
  %98 = load i32, ptr %97, align 4, !tbaa !95
  %99 = getelementptr inbounds i8, ptr %53, i64 %96
  %100 = load i8, ptr %99, align 1, !tbaa !16
  %101 = trunc i32 %98 to i8
  %102 = add i8 %100, %101
  store i8 %102, ptr %99, align 1, !tbaa !16
  %103 = or i64 %89, 2
  %104 = getelementptr inbounds i32, ptr %5, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !95
  %106 = getelementptr inbounds i8, ptr %53, i64 %103
  %107 = load i8, ptr %106, align 1, !tbaa !16
  %108 = trunc i32 %105 to i8
  %109 = add i8 %107, %108
  store i8 %109, ptr %106, align 1, !tbaa !16
  %110 = or i64 %89, 3
  %111 = getelementptr inbounds i32, ptr %5, i64 %110
  %112 = load i32, ptr %111, align 4, !tbaa !95
  %113 = getelementptr inbounds i8, ptr %53, i64 %110
  %114 = load i8, ptr %113, align 1, !tbaa !16
  %115 = trunc i32 %112 to i8
  %116 = add i8 %114, %115
  store i8 %116, ptr %113, align 1, !tbaa !16
  %117 = add nuw nsw i64 %89, 4
  %118 = icmp eq i64 %117, 10000
  br i1 %118, label %119, label %88, !llvm.loop !136

119:                                              ; preds = %88
  %120 = add i64 %51, -1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %37, label %50, !prof !42

122:                                              ; preds = %48, %46, %44
  %123 = phi { ptr, i32 } [ %49, %48 ], [ %45, %44 ], [ %47, %46 ]
  %124 = load ptr, ptr %4, align 8, !tbaa !5
  %125 = icmp eq ptr %124, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %122
  call void @_ZdaPv(ptr noundef nonnull %124) #13
  br label %127

127:                                              ; preds = %126, %122, %42
  %128 = phi { ptr, i32 } [ %43, %42 ], [ %123, %122 ], [ %123, %126 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %128

129:                                              ; preds = %38, %41
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::uniform_int_distribution.54", align 4
  %4 = alloca %"class.std::unique_ptr.33", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %7 unwind label %42

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  store i32 0, ptr %3, align 4, !tbaa !92
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %3, i64 0, i32 1
  store i32 -1, ptr %8, align 4, !tbaa !94
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %3)
          to label %12 unwind label %46

12:                                               ; preds = %9
  %13 = getelementptr inbounds i32, ptr %5, i64 %10
  store i32 %11, ptr %13, align 4, !tbaa !95
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !96

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %17, align 1, !tbaa !69
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %24, %21 ]
  %20 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %21 unwind label %44

21:                                               ; preds = %18
  %22 = load ptr, ptr %4, align 8, !tbaa !5
  %23 = getelementptr inbounds i8, ptr %22, i64 %19
  store i8 %20, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 10000
  br i1 %25, label %26, label %18, !llvm.loop !70

26:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  %27 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %28 = load i8, ptr %27, align 2, !tbaa !23, !range !40, !noundef !41
  %29 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %30 = load i64, ptr %29, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %31 unwind label %48

31:                                               ; preds = %26
  %32 = icmp ne i8 %28, 0
  %33 = icmp eq i64 %30, 0
  %34 = select i1 %32, i1 true, i1 %33
  br i1 %34, label %37, label %35, !prof !42

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %5, i64 40000
  br label %50

37:                                               ; preds = %118, %31
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %38 unwind label %48

38:                                               ; preds = %37
  %39 = load ptr, ptr %4, align 8, !tbaa !5
  %40 = icmp eq ptr %39, null
  br i1 %40, label %128, label %41

41:                                               ; preds = %38
  call void @_ZdaPv(ptr noundef nonnull %39) #13
  br label %128

42:                                               ; preds = %1
  %43 = landingpad { ptr, i32 }
          cleanup
  br label %126

44:                                               ; preds = %18
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %121

46:                                               ; preds = %9
  %47 = landingpad { ptr, i32 }
          cleanup
  br label %121

48:                                               ; preds = %37, %26
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %121

50:                                               ; preds = %35, %118
  %51 = phi i64 [ %119, %118 ], [ %30, %35 ]
  %52 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %4, i64 %52) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = getelementptr i8, ptr %53, i64 10000
  %55 = icmp ult ptr %53, %36
  %56 = icmp ult ptr %5, %54
  %57 = and i1 %55, %56
  br i1 %57, label %87, label %58

58:                                               ; preds = %50, %58
  %59 = phi i64 [ %85, %58 ], [ 0, %50 ]
  %60 = getelementptr inbounds i32, ptr %5, i64 %59
  %61 = load <4 x i32>, ptr %60, align 4, !tbaa !95, !alias.scope !137
  %62 = getelementptr inbounds i32, ptr %60, i64 4
  %63 = load <4 x i32>, ptr %62, align 4, !tbaa !95, !alias.scope !137
  %64 = getelementptr inbounds i8, ptr %53, i64 %59
  %65 = load <4 x i8>, ptr %64, align 1, !tbaa !16, !alias.scope !140, !noalias !137
  %66 = getelementptr inbounds i8, ptr %64, i64 4
  %67 = load <4 x i8>, ptr %66, align 1, !tbaa !16, !alias.scope !140, !noalias !137
  %68 = trunc <4 x i32> %61 to <4 x i8>
  %69 = trunc <4 x i32> %63 to <4 x i8>
  %70 = add <4 x i8> %65, %68
  %71 = add <4 x i8> %67, %69
  store <4 x i8> %70, ptr %64, align 1, !tbaa !16, !alias.scope !140, !noalias !137
  store <4 x i8> %71, ptr %66, align 1, !tbaa !16, !alias.scope !140, !noalias !137
  %72 = or i64 %59, 8
  %73 = getelementptr inbounds i32, ptr %5, i64 %72
  %74 = load <4 x i32>, ptr %73, align 4, !tbaa !95, !alias.scope !137
  %75 = getelementptr inbounds i32, ptr %73, i64 4
  %76 = load <4 x i32>, ptr %75, align 4, !tbaa !95, !alias.scope !137
  %77 = getelementptr inbounds i8, ptr %53, i64 %72
  %78 = load <4 x i8>, ptr %77, align 1, !tbaa !16, !alias.scope !140, !noalias !137
  %79 = getelementptr inbounds i8, ptr %77, i64 4
  %80 = load <4 x i8>, ptr %79, align 1, !tbaa !16, !alias.scope !140, !noalias !137
  %81 = trunc <4 x i32> %74 to <4 x i8>
  %82 = trunc <4 x i32> %76 to <4 x i8>
  %83 = add <4 x i8> %78, %81
  %84 = add <4 x i8> %80, %82
  store <4 x i8> %83, ptr %77, align 1, !tbaa !16, !alias.scope !140, !noalias !137
  store <4 x i8> %84, ptr %79, align 1, !tbaa !16, !alias.scope !140, !noalias !137
  %85 = add nuw nsw i64 %59, 16
  %86 = icmp eq i64 %85, 10000
  br i1 %86, label %118, label %58, !llvm.loop !142

87:                                               ; preds = %50, %87
  %88 = phi i64 [ %116, %87 ], [ 0, %50 ]
  %89 = getelementptr inbounds i32, ptr %5, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !95
  %91 = getelementptr inbounds i8, ptr %53, i64 %88
  %92 = load i8, ptr %91, align 1, !tbaa !16
  %93 = trunc i32 %90 to i8
  %94 = add i8 %92, %93
  store i8 %94, ptr %91, align 1, !tbaa !16
  %95 = or i64 %88, 1
  %96 = getelementptr inbounds i32, ptr %5, i64 %95
  %97 = load i32, ptr %96, align 4, !tbaa !95
  %98 = getelementptr inbounds i8, ptr %53, i64 %95
  %99 = load i8, ptr %98, align 1, !tbaa !16
  %100 = trunc i32 %97 to i8
  %101 = add i8 %99, %100
  store i8 %101, ptr %98, align 1, !tbaa !16
  %102 = or i64 %88, 2
  %103 = getelementptr inbounds i32, ptr %5, i64 %102
  %104 = load i32, ptr %103, align 4, !tbaa !95
  %105 = getelementptr inbounds i8, ptr %53, i64 %102
  %106 = load i8, ptr %105, align 1, !tbaa !16
  %107 = trunc i32 %104 to i8
  %108 = add i8 %106, %107
  store i8 %108, ptr %105, align 1, !tbaa !16
  %109 = or i64 %88, 3
  %110 = getelementptr inbounds i32, ptr %5, i64 %109
  %111 = load i32, ptr %110, align 4, !tbaa !95
  %112 = getelementptr inbounds i8, ptr %53, i64 %109
  %113 = load i8, ptr %112, align 1, !tbaa !16
  %114 = trunc i32 %111 to i8
  %115 = add i8 %113, %114
  store i8 %115, ptr %112, align 1, !tbaa !16
  %116 = add nuw nsw i64 %88, 4
  %117 = icmp eq i64 %116, 10000
  br i1 %117, label %118, label %87, !llvm.loop !143

118:                                              ; preds = %58, %87
  %119 = add i64 %51, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %37, label %50, !prof !42

121:                                              ; preds = %48, %46, %44
  %122 = phi { ptr, i32 } [ %49, %48 ], [ %45, %44 ], [ %47, %46 ]
  %123 = load ptr, ptr %4, align 8, !tbaa !5
  %124 = icmp eq ptr %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  call void @_ZdaPv(ptr noundef nonnull %123) #13
  br label %126

126:                                              ; preds = %125, %121, %42
  %127 = phi { ptr, i32 } [ %43, %42 ], [ %122, %121 ], [ %122, %125 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %127

128:                                              ; preds = %38, %41
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::unique_ptr.33", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %9, align 8, !tbaa !146
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i64, ptr %4, i64 %11
  store i64 %12, ptr %14, align 8, !tbaa !147
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !148

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i64, ptr %4, i64 %19
  %21 = load i64, ptr %20, align 8, !tbaa !147
  %22 = trunc i64 %21 to i8
  %23 = getelementptr inbounds i8, ptr %7, i64 %19
  store i8 %22, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i64, ptr %4, i64 %24
  %26 = load i64, ptr %25, align 8, !tbaa !147
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds i8, ptr %7, i64 %24
  store i8 %27, ptr %28, align 1, !tbaa !16
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i64, ptr %4, i64 %29
  %31 = load i64, ptr %30, align 8, !tbaa !147
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds i8, ptr %7, i64 %29
  store i8 %32, ptr %33, align 1, !tbaa !16
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i64, ptr %4, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !147
  %37 = trunc i64 %36 to i8
  %38 = getelementptr inbounds i8, ptr %7, i64 %34
  store i8 %37, ptr %38, align 1, !tbaa !16
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i64, ptr %4, i64 %39
  %41 = load i64, ptr %40, align 8, !tbaa !147
  %42 = trunc i64 %41 to i8
  %43 = getelementptr inbounds i8, ptr %7, i64 %39
  store i8 %42, ptr %43, align 1, !tbaa !16
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !149

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i64, ptr %4, i64 %47
  %49 = load <8 x i64>, ptr %48, align 8, !tbaa !147
  %50 = getelementptr inbounds i64, ptr %48, i64 8
  %51 = load <8 x i64>, ptr %50, align 8, !tbaa !147
  %52 = getelementptr inbounds i64, ptr %48, i64 16
  %53 = load <8 x i64>, ptr %52, align 8, !tbaa !147
  %54 = getelementptr inbounds i64, ptr %48, i64 24
  %55 = load <8 x i64>, ptr %54, align 8, !tbaa !147
  %56 = trunc <8 x i64> %49 to <8 x i8>
  %57 = trunc <8 x i64> %51 to <8 x i8>
  %58 = trunc <8 x i64> %53 to <8 x i8>
  %59 = trunc <8 x i64> %55 to <8 x i8>
  %60 = getelementptr inbounds i8, ptr %5, i64 %47
  store <8 x i8> %56, ptr %60, align 1, !tbaa !16
  %61 = getelementptr inbounds i8, ptr %60, i64 8
  store <8 x i8> %57, ptr %61, align 1, !tbaa !16
  %62 = getelementptr inbounds i8, ptr %60, i64 16
  store <8 x i8> %58, ptr %62, align 1, !tbaa !16
  %63 = getelementptr inbounds i8, ptr %60, i64 24
  store <8 x i8> %59, ptr %63, align 1, !tbaa !16
  %64 = add nuw i64 %47, 32
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !150

66:                                               ; preds = %46
  %67 = getelementptr inbounds i64, ptr %4, i64 9984
  %68 = load i64, ptr %67, align 8, !tbaa !147
  %69 = trunc i64 %68 to i8
  %70 = getelementptr inbounds i8, ptr %5, i64 9984
  store i8 %69, ptr %70, align 1, !tbaa !16
  %71 = getelementptr inbounds i64, ptr %4, i64 9985
  %72 = load i64, ptr %71, align 8, !tbaa !147
  %73 = trunc i64 %72 to i8
  %74 = getelementptr inbounds i8, ptr %5, i64 9985
  store i8 %73, ptr %74, align 1, !tbaa !16
  %75 = getelementptr inbounds i64, ptr %4, i64 9986
  %76 = load i64, ptr %75, align 8, !tbaa !147
  %77 = trunc i64 %76 to i8
  %78 = getelementptr inbounds i8, ptr %5, i64 9986
  store i8 %77, ptr %78, align 1, !tbaa !16
  %79 = getelementptr inbounds i64, ptr %4, i64 9987
  %80 = load i64, ptr %79, align 8, !tbaa !147
  %81 = trunc i64 %80 to i8
  %82 = getelementptr inbounds i8, ptr %5, i64 9987
  store i8 %81, ptr %82, align 1, !tbaa !16
  %83 = getelementptr inbounds i64, ptr %4, i64 9988
  %84 = load i64, ptr %83, align 8, !tbaa !147
  %85 = trunc i64 %84 to i8
  %86 = getelementptr inbounds i8, ptr %5, i64 9988
  store i8 %85, ptr %86, align 1, !tbaa !16
  %87 = getelementptr inbounds i64, ptr %4, i64 9989
  %88 = load i64, ptr %87, align 8, !tbaa !147
  %89 = trunc i64 %88 to i8
  %90 = getelementptr inbounds i8, ptr %5, i64 9989
  store i8 %89, ptr %90, align 1, !tbaa !16
  %91 = getelementptr inbounds i64, ptr %4, i64 9990
  %92 = load i64, ptr %91, align 8, !tbaa !147
  %93 = trunc i64 %92 to i8
  %94 = getelementptr inbounds i8, ptr %5, i64 9990
  store i8 %93, ptr %94, align 1, !tbaa !16
  %95 = getelementptr inbounds i64, ptr %4, i64 9991
  %96 = load i64, ptr %95, align 8, !tbaa !147
  %97 = trunc i64 %96 to i8
  %98 = getelementptr inbounds i8, ptr %5, i64 9991
  store i8 %97, ptr %98, align 1, !tbaa !16
  %99 = getelementptr inbounds i64, ptr %4, i64 9992
  %100 = load i64, ptr %99, align 8, !tbaa !147
  %101 = trunc i64 %100 to i8
  %102 = getelementptr inbounds i8, ptr %5, i64 9992
  store i8 %101, ptr %102, align 1, !tbaa !16
  %103 = getelementptr inbounds i64, ptr %4, i64 9993
  %104 = load i64, ptr %103, align 8, !tbaa !147
  %105 = trunc i64 %104 to i8
  %106 = getelementptr inbounds i8, ptr %5, i64 9993
  store i8 %105, ptr %106, align 1, !tbaa !16
  %107 = getelementptr inbounds i64, ptr %4, i64 9994
  %108 = load i64, ptr %107, align 8, !tbaa !147
  %109 = trunc i64 %108 to i8
  %110 = getelementptr inbounds i8, ptr %5, i64 9994
  store i8 %109, ptr %110, align 1, !tbaa !16
  %111 = getelementptr inbounds i64, ptr %4, i64 9995
  %112 = load i64, ptr %111, align 8, !tbaa !147
  %113 = trunc i64 %112 to i8
  %114 = getelementptr inbounds i8, ptr %5, i64 9995
  store i8 %113, ptr %114, align 1, !tbaa !16
  %115 = getelementptr inbounds i64, ptr %4, i64 9996
  %116 = load i64, ptr %115, align 8, !tbaa !147
  %117 = trunc i64 %116 to i8
  %118 = getelementptr inbounds i8, ptr %5, i64 9996
  store i8 %117, ptr %118, align 1, !tbaa !16
  %119 = getelementptr inbounds i64, ptr %4, i64 9997
  %120 = load i64, ptr %119, align 8, !tbaa !147
  %121 = trunc i64 %120 to i8
  %122 = getelementptr inbounds i8, ptr %5, i64 9997
  store i8 %121, ptr %122, align 1, !tbaa !16
  %123 = getelementptr inbounds i64, ptr %4, i64 9998
  %124 = load i64, ptr %123, align 8, !tbaa !147
  %125 = trunc i64 %124 to i8
  %126 = getelementptr inbounds i8, ptr %5, i64 9998
  store i8 %125, ptr %126, align 1, !tbaa !16
  %127 = getelementptr inbounds i64, ptr %4, i64 9999
  %128 = load i64, ptr %127, align 8, !tbaa !147
  %129 = trunc i64 %128 to i8
  %130 = getelementptr inbounds i8, ptr %5, i64 9999
  store i8 %129, ptr %130, align 1, !tbaa !16
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %281

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %278

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %274

137:                                              ; preds = %197, %66
  %138 = phi i64 [ 0, %66 ], [ %198, %197 ]
  %139 = getelementptr inbounds i8, ptr %5, i64 %138
  %140 = load i8, ptr %139, align 1, !tbaa !16
  %141 = getelementptr inbounds i8, ptr %7, i64 %138
  %142 = load i8, ptr %141, align 1, !tbaa !16
  %143 = icmp eq i8 %140, %142
  br i1 %143, label %169, label %144

144:                                              ; preds = %190, %183, %176, %169, %137
  %145 = phi i64 [ %138, %137 ], [ %170, %169 ], [ %177, %176 ], [ %184, %183 ], [ %191, %190 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i8, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %167

149:                                              ; preds = %144
  %150 = getelementptr inbounds i64, ptr %4, i64 %146
  %151 = load i64, ptr %150, align 8, !tbaa !147
  %152 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %151)
          to label %153 unwind label %167

153:                                              ; preds = %149
  %154 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %152, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %155 unwind label %167

155:                                              ; preds = %153
  %156 = getelementptr inbounds i8, ptr %5, i64 %146
  %157 = load i8, ptr %156, align 1, !tbaa !16
  %158 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %152, i8 noundef zeroext %157)
          to label %159 unwind label %167

159:                                              ; preds = %155
  %160 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %158, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %161 unwind label %167

161:                                              ; preds = %159
  %162 = load i8, ptr %147, align 1, !tbaa !16
  %163 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %158, i8 noundef zeroext %162)
          to label %164 unwind label %167

164:                                              ; preds = %161
  %165 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %163, ptr noundef nonnull @.str.149)
          to label %166 unwind label %167

166:                                              ; preds = %164
  call void @exit(i32 noundef 1) #12
  unreachable

167:                                              ; preds = %164, %161, %159, %155, %153, %149, %144
  %168 = landingpad { ptr, i32 }
          cleanup
  br label %274

169:                                              ; preds = %137
  %170 = add nuw nsw i64 %138, 1
  %171 = getelementptr inbounds i8, ptr %5, i64 %170
  %172 = load i8, ptr %171, align 1, !tbaa !16
  %173 = getelementptr inbounds i8, ptr %7, i64 %170
  %174 = load i8, ptr %173, align 1, !tbaa !16
  %175 = icmp eq i8 %172, %174
  br i1 %175, label %176, label %144

176:                                              ; preds = %169
  %177 = add nuw nsw i64 %138, 2
  %178 = getelementptr inbounds i8, ptr %5, i64 %177
  %179 = load i8, ptr %178, align 1, !tbaa !16
  %180 = getelementptr inbounds i8, ptr %7, i64 %177
  %181 = load i8, ptr %180, align 1, !tbaa !16
  %182 = icmp eq i8 %179, %181
  br i1 %182, label %183, label %144

183:                                              ; preds = %176
  %184 = add nuw nsw i64 %138, 3
  %185 = getelementptr inbounds i8, ptr %5, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !16
  %187 = getelementptr inbounds i8, ptr %7, i64 %184
  %188 = load i8, ptr %187, align 1, !tbaa !16
  %189 = icmp eq i8 %186, %188
  br i1 %189, label %190, label %144

190:                                              ; preds = %183
  %191 = add nuw nsw i64 %138, 4
  %192 = getelementptr inbounds i8, ptr %5, i64 %191
  %193 = load i8, ptr %192, align 1, !tbaa !16
  %194 = getelementptr inbounds i8, ptr %7, i64 %191
  %195 = load i8, ptr %194, align 1, !tbaa !16
  %196 = icmp eq i8 %193, %195
  br i1 %196, label %197, label %144

197:                                              ; preds = %190
  %198 = add nuw nsw i64 %138, 5
  %199 = icmp eq i64 %198, 10000
  br i1 %199, label %200, label %137, !llvm.loop !151

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %202 = load i8, ptr %201, align 2, !tbaa !23, !range !40, !noundef !41
  %203 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %204 = load i64, ptr %203, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %205 unwind label %216

205:                                              ; preds = %200
  %206 = icmp ne i8 %202, 0
  %207 = icmp eq i64 %204, 0
  %208 = select i1 %206, i1 true, i1 %207
  br i1 %208, label %211, label %209, !prof !42

209:                                              ; preds = %205
  %210 = getelementptr i8, ptr %4, i64 80000
  br label %218

211:                                              ; preds = %271, %205
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %212 unwind label %216

212:                                              ; preds = %211
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %213 = load ptr, ptr %3, align 8, !tbaa !5
  %214 = icmp eq ptr %213, null
  br i1 %214, label %283, label %215

215:                                              ; preds = %212
  call void @_ZdaPv(ptr noundef nonnull %213) #13
  br label %283

216:                                              ; preds = %211, %200
  %217 = landingpad { ptr, i32 }
          cleanup
  br label %274

218:                                              ; preds = %209, %271
  %219 = phi i64 [ %272, %271 ], [ %204, %209 ]
  %220 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %3, i64 %220) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %221 = load ptr, ptr %3, align 8, !tbaa !5
  %222 = getelementptr i8, ptr %221, i64 10000
  %223 = icmp ult ptr %221, %210
  %224 = icmp ult ptr %4, %222
  %225 = and i1 %223, %224
  br i1 %225, label %246, label %226

226:                                              ; preds = %218, %226
  %227 = phi i64 [ %244, %226 ], [ 0, %218 ]
  %228 = getelementptr inbounds i64, ptr %4, i64 %227
  %229 = load <8 x i64>, ptr %228, align 8, !tbaa !147, !alias.scope !152
  %230 = getelementptr inbounds i64, ptr %228, i64 8
  %231 = load <8 x i64>, ptr %230, align 8, !tbaa !147, !alias.scope !152
  %232 = getelementptr inbounds i64, ptr %228, i64 16
  %233 = load <8 x i64>, ptr %232, align 8, !tbaa !147, !alias.scope !152
  %234 = getelementptr inbounds i64, ptr %228, i64 24
  %235 = load <8 x i64>, ptr %234, align 8, !tbaa !147, !alias.scope !152
  %236 = trunc <8 x i64> %229 to <8 x i8>
  %237 = trunc <8 x i64> %231 to <8 x i8>
  %238 = trunc <8 x i64> %233 to <8 x i8>
  %239 = trunc <8 x i64> %235 to <8 x i8>
  %240 = getelementptr inbounds i8, ptr %221, i64 %227
  store <8 x i8> %236, ptr %240, align 1, !tbaa !16, !alias.scope !155, !noalias !152
  %241 = getelementptr inbounds i8, ptr %240, i64 8
  store <8 x i8> %237, ptr %241, align 1, !tbaa !16, !alias.scope !155, !noalias !152
  %242 = getelementptr inbounds i8, ptr %240, i64 16
  store <8 x i8> %238, ptr %242, align 1, !tbaa !16, !alias.scope !155, !noalias !152
  %243 = getelementptr inbounds i8, ptr %240, i64 24
  store <8 x i8> %239, ptr %243, align 1, !tbaa !16, !alias.scope !155, !noalias !152
  %244 = add nuw i64 %227, 32
  %245 = icmp eq i64 %244, 9984
  br i1 %245, label %246, label %226, !llvm.loop !157

246:                                              ; preds = %226, %218
  %247 = phi i64 [ 0, %218 ], [ 9984, %226 ]
  br label %248

248:                                              ; preds = %248, %246
  %249 = phi i64 [ %247, %246 ], [ %269, %248 ]
  %250 = getelementptr inbounds i64, ptr %4, i64 %249
  %251 = load i64, ptr %250, align 8, !tbaa !147
  %252 = trunc i64 %251 to i8
  %253 = getelementptr inbounds i8, ptr %221, i64 %249
  store i8 %252, ptr %253, align 1, !tbaa !16
  %254 = or i64 %249, 1
  %255 = getelementptr inbounds i64, ptr %4, i64 %254
  %256 = load i64, ptr %255, align 8, !tbaa !147
  %257 = trunc i64 %256 to i8
  %258 = getelementptr inbounds i8, ptr %221, i64 %254
  store i8 %257, ptr %258, align 1, !tbaa !16
  %259 = or i64 %249, 2
  %260 = getelementptr inbounds i64, ptr %4, i64 %259
  %261 = load i64, ptr %260, align 8, !tbaa !147
  %262 = trunc i64 %261 to i8
  %263 = getelementptr inbounds i8, ptr %221, i64 %259
  store i8 %262, ptr %263, align 1, !tbaa !16
  %264 = or i64 %249, 3
  %265 = getelementptr inbounds i64, ptr %4, i64 %264
  %266 = load i64, ptr %265, align 8, !tbaa !147
  %267 = trunc i64 %266 to i8
  %268 = getelementptr inbounds i8, ptr %221, i64 %264
  store i8 %267, ptr %268, align 1, !tbaa !16
  %269 = add nuw nsw i64 %249, 4
  %270 = icmp eq i64 %269, 10000
  br i1 %270, label %271, label %248, !llvm.loop !158

271:                                              ; preds = %248
  %272 = add i64 %219, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %211, label %218, !prof !42

274:                                              ; preds = %216, %167, %135
  %275 = phi { ptr, i32 } [ %168, %167 ], [ %217, %216 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %276 = load ptr, ptr %3, align 8, !tbaa !5
  %277 = icmp eq ptr %276, null
  br i1 %277, label %281, label %278

278:                                              ; preds = %274, %133
  %279 = phi { ptr, i32 } [ %134, %133 ], [ %275, %274 ]
  %280 = phi ptr [ %5, %133 ], [ %276, %274 ]
  call void @_ZdaPv(ptr noundef nonnull %280) #13
  br label %281

281:                                              ; preds = %278, %274, %131
  %282 = phi { ptr, i32 } [ %132, %131 ], [ %275, %274 ], [ %279, %278 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %282

283:                                              ; preds = %212, %215
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::unique_ptr.33", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %9, align 8, !tbaa !146
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i64, ptr %4, i64 %11
  store i64 %12, ptr %14, align 8, !tbaa !147
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !148

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i64, ptr %4, i64 %19
  %21 = load i64, ptr %20, align 8, !tbaa !147
  %22 = trunc i64 %21 to i8
  %23 = getelementptr inbounds i8, ptr %7, i64 %19
  store i8 %22, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i64, ptr %4, i64 %24
  %26 = load i64, ptr %25, align 8, !tbaa !147
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds i8, ptr %7, i64 %24
  store i8 %27, ptr %28, align 1, !tbaa !16
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i64, ptr %4, i64 %29
  %31 = load i64, ptr %30, align 8, !tbaa !147
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds i8, ptr %7, i64 %29
  store i8 %32, ptr %33, align 1, !tbaa !16
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i64, ptr %4, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !147
  %37 = trunc i64 %36 to i8
  %38 = getelementptr inbounds i8, ptr %7, i64 %34
  store i8 %37, ptr %38, align 1, !tbaa !16
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i64, ptr %4, i64 %39
  %41 = load i64, ptr %40, align 8, !tbaa !147
  %42 = trunc i64 %41 to i8
  %43 = getelementptr inbounds i8, ptr %7, i64 %39
  store i8 %42, ptr %43, align 1, !tbaa !16
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !149

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i64, ptr %4, i64 %47
  %49 = load <16 x i64>, ptr %48, align 8, !tbaa !147
  %50 = getelementptr inbounds i64, ptr %48, i64 16
  %51 = load <16 x i64>, ptr %50, align 8, !tbaa !147
  %52 = getelementptr inbounds i64, ptr %48, i64 32
  %53 = load <16 x i64>, ptr %52, align 8, !tbaa !147
  %54 = getelementptr inbounds i64, ptr %48, i64 48
  %55 = load <16 x i64>, ptr %54, align 8, !tbaa !147
  %56 = trunc <16 x i64> %49 to <16 x i8>
  %57 = trunc <16 x i64> %51 to <16 x i8>
  %58 = trunc <16 x i64> %53 to <16 x i8>
  %59 = trunc <16 x i64> %55 to <16 x i8>
  %60 = getelementptr inbounds i8, ptr %5, i64 %47
  store <16 x i8> %56, ptr %60, align 1, !tbaa !16
  %61 = getelementptr inbounds i8, ptr %60, i64 16
  store <16 x i8> %57, ptr %61, align 1, !tbaa !16
  %62 = getelementptr inbounds i8, ptr %60, i64 32
  store <16 x i8> %58, ptr %62, align 1, !tbaa !16
  %63 = getelementptr inbounds i8, ptr %60, i64 48
  store <16 x i8> %59, ptr %63, align 1, !tbaa !16
  %64 = add nuw i64 %47, 64
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !159

66:                                               ; preds = %46
  %67 = getelementptr inbounds i64, ptr %4, i64 9984
  %68 = load i64, ptr %67, align 8, !tbaa !147
  %69 = trunc i64 %68 to i8
  %70 = getelementptr inbounds i8, ptr %5, i64 9984
  store i8 %69, ptr %70, align 1, !tbaa !16
  %71 = getelementptr inbounds i64, ptr %4, i64 9985
  %72 = load i64, ptr %71, align 8, !tbaa !147
  %73 = trunc i64 %72 to i8
  %74 = getelementptr inbounds i8, ptr %5, i64 9985
  store i8 %73, ptr %74, align 1, !tbaa !16
  %75 = getelementptr inbounds i64, ptr %4, i64 9986
  %76 = load i64, ptr %75, align 8, !tbaa !147
  %77 = trunc i64 %76 to i8
  %78 = getelementptr inbounds i8, ptr %5, i64 9986
  store i8 %77, ptr %78, align 1, !tbaa !16
  %79 = getelementptr inbounds i64, ptr %4, i64 9987
  %80 = load i64, ptr %79, align 8, !tbaa !147
  %81 = trunc i64 %80 to i8
  %82 = getelementptr inbounds i8, ptr %5, i64 9987
  store i8 %81, ptr %82, align 1, !tbaa !16
  %83 = getelementptr inbounds i64, ptr %4, i64 9988
  %84 = load i64, ptr %83, align 8, !tbaa !147
  %85 = trunc i64 %84 to i8
  %86 = getelementptr inbounds i8, ptr %5, i64 9988
  store i8 %85, ptr %86, align 1, !tbaa !16
  %87 = getelementptr inbounds i64, ptr %4, i64 9989
  %88 = load i64, ptr %87, align 8, !tbaa !147
  %89 = trunc i64 %88 to i8
  %90 = getelementptr inbounds i8, ptr %5, i64 9989
  store i8 %89, ptr %90, align 1, !tbaa !16
  %91 = getelementptr inbounds i64, ptr %4, i64 9990
  %92 = load i64, ptr %91, align 8, !tbaa !147
  %93 = trunc i64 %92 to i8
  %94 = getelementptr inbounds i8, ptr %5, i64 9990
  store i8 %93, ptr %94, align 1, !tbaa !16
  %95 = getelementptr inbounds i64, ptr %4, i64 9991
  %96 = load i64, ptr %95, align 8, !tbaa !147
  %97 = trunc i64 %96 to i8
  %98 = getelementptr inbounds i8, ptr %5, i64 9991
  store i8 %97, ptr %98, align 1, !tbaa !16
  %99 = getelementptr inbounds i64, ptr %4, i64 9992
  %100 = load i64, ptr %99, align 8, !tbaa !147
  %101 = trunc i64 %100 to i8
  %102 = getelementptr inbounds i8, ptr %5, i64 9992
  store i8 %101, ptr %102, align 1, !tbaa !16
  %103 = getelementptr inbounds i64, ptr %4, i64 9993
  %104 = load i64, ptr %103, align 8, !tbaa !147
  %105 = trunc i64 %104 to i8
  %106 = getelementptr inbounds i8, ptr %5, i64 9993
  store i8 %105, ptr %106, align 1, !tbaa !16
  %107 = getelementptr inbounds i64, ptr %4, i64 9994
  %108 = load i64, ptr %107, align 8, !tbaa !147
  %109 = trunc i64 %108 to i8
  %110 = getelementptr inbounds i8, ptr %5, i64 9994
  store i8 %109, ptr %110, align 1, !tbaa !16
  %111 = getelementptr inbounds i64, ptr %4, i64 9995
  %112 = load i64, ptr %111, align 8, !tbaa !147
  %113 = trunc i64 %112 to i8
  %114 = getelementptr inbounds i8, ptr %5, i64 9995
  store i8 %113, ptr %114, align 1, !tbaa !16
  %115 = getelementptr inbounds i64, ptr %4, i64 9996
  %116 = load i64, ptr %115, align 8, !tbaa !147
  %117 = trunc i64 %116 to i8
  %118 = getelementptr inbounds i8, ptr %5, i64 9996
  store i8 %117, ptr %118, align 1, !tbaa !16
  %119 = getelementptr inbounds i64, ptr %4, i64 9997
  %120 = load i64, ptr %119, align 8, !tbaa !147
  %121 = trunc i64 %120 to i8
  %122 = getelementptr inbounds i8, ptr %5, i64 9997
  store i8 %121, ptr %122, align 1, !tbaa !16
  %123 = getelementptr inbounds i64, ptr %4, i64 9998
  %124 = load i64, ptr %123, align 8, !tbaa !147
  %125 = trunc i64 %124 to i8
  %126 = getelementptr inbounds i8, ptr %5, i64 9998
  store i8 %125, ptr %126, align 1, !tbaa !16
  %127 = getelementptr inbounds i64, ptr %4, i64 9999
  %128 = load i64, ptr %127, align 8, !tbaa !147
  %129 = trunc i64 %128 to i8
  %130 = getelementptr inbounds i8, ptr %5, i64 9999
  store i8 %129, ptr %130, align 1, !tbaa !16
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %281

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %278

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %274

137:                                              ; preds = %197, %66
  %138 = phi i64 [ 0, %66 ], [ %198, %197 ]
  %139 = getelementptr inbounds i8, ptr %5, i64 %138
  %140 = load i8, ptr %139, align 1, !tbaa !16
  %141 = getelementptr inbounds i8, ptr %7, i64 %138
  %142 = load i8, ptr %141, align 1, !tbaa !16
  %143 = icmp eq i8 %140, %142
  br i1 %143, label %169, label %144

144:                                              ; preds = %190, %183, %176, %169, %137
  %145 = phi i64 [ %138, %137 ], [ %170, %169 ], [ %177, %176 ], [ %184, %183 ], [ %191, %190 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i8, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %167

149:                                              ; preds = %144
  %150 = getelementptr inbounds i64, ptr %4, i64 %146
  %151 = load i64, ptr %150, align 8, !tbaa !147
  %152 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %151)
          to label %153 unwind label %167

153:                                              ; preds = %149
  %154 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %152, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %155 unwind label %167

155:                                              ; preds = %153
  %156 = getelementptr inbounds i8, ptr %5, i64 %146
  %157 = load i8, ptr %156, align 1, !tbaa !16
  %158 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %152, i8 noundef zeroext %157)
          to label %159 unwind label %167

159:                                              ; preds = %155
  %160 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %158, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %161 unwind label %167

161:                                              ; preds = %159
  %162 = load i8, ptr %147, align 1, !tbaa !16
  %163 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %158, i8 noundef zeroext %162)
          to label %164 unwind label %167

164:                                              ; preds = %161
  %165 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %163, ptr noundef nonnull @.str.149)
          to label %166 unwind label %167

166:                                              ; preds = %164
  call void @exit(i32 noundef 1) #12
  unreachable

167:                                              ; preds = %164, %161, %159, %155, %153, %149, %144
  %168 = landingpad { ptr, i32 }
          cleanup
  br label %274

169:                                              ; preds = %137
  %170 = add nuw nsw i64 %138, 1
  %171 = getelementptr inbounds i8, ptr %5, i64 %170
  %172 = load i8, ptr %171, align 1, !tbaa !16
  %173 = getelementptr inbounds i8, ptr %7, i64 %170
  %174 = load i8, ptr %173, align 1, !tbaa !16
  %175 = icmp eq i8 %172, %174
  br i1 %175, label %176, label %144

176:                                              ; preds = %169
  %177 = add nuw nsw i64 %138, 2
  %178 = getelementptr inbounds i8, ptr %5, i64 %177
  %179 = load i8, ptr %178, align 1, !tbaa !16
  %180 = getelementptr inbounds i8, ptr %7, i64 %177
  %181 = load i8, ptr %180, align 1, !tbaa !16
  %182 = icmp eq i8 %179, %181
  br i1 %182, label %183, label %144

183:                                              ; preds = %176
  %184 = add nuw nsw i64 %138, 3
  %185 = getelementptr inbounds i8, ptr %5, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !16
  %187 = getelementptr inbounds i8, ptr %7, i64 %184
  %188 = load i8, ptr %187, align 1, !tbaa !16
  %189 = icmp eq i8 %186, %188
  br i1 %189, label %190, label %144

190:                                              ; preds = %183
  %191 = add nuw nsw i64 %138, 4
  %192 = getelementptr inbounds i8, ptr %5, i64 %191
  %193 = load i8, ptr %192, align 1, !tbaa !16
  %194 = getelementptr inbounds i8, ptr %7, i64 %191
  %195 = load i8, ptr %194, align 1, !tbaa !16
  %196 = icmp eq i8 %193, %195
  br i1 %196, label %197, label %144

197:                                              ; preds = %190
  %198 = add nuw nsw i64 %138, 5
  %199 = icmp eq i64 %198, 10000
  br i1 %199, label %200, label %137, !llvm.loop !151

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %202 = load i8, ptr %201, align 2, !tbaa !23, !range !40, !noundef !41
  %203 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %204 = load i64, ptr %203, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %205 unwind label %216

205:                                              ; preds = %200
  %206 = icmp ne i8 %202, 0
  %207 = icmp eq i64 %204, 0
  %208 = select i1 %206, i1 true, i1 %207
  br i1 %208, label %211, label %209, !prof !42

209:                                              ; preds = %205
  %210 = getelementptr i8, ptr %4, i64 80000
  br label %218

211:                                              ; preds = %271, %205
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %212 unwind label %216

212:                                              ; preds = %211
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %213 = load ptr, ptr %3, align 8, !tbaa !5
  %214 = icmp eq ptr %213, null
  br i1 %214, label %283, label %215

215:                                              ; preds = %212
  call void @_ZdaPv(ptr noundef nonnull %213) #13
  br label %283

216:                                              ; preds = %211, %200
  %217 = landingpad { ptr, i32 }
          cleanup
  br label %274

218:                                              ; preds = %209, %271
  %219 = phi i64 [ %272, %271 ], [ %204, %209 ]
  %220 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %3, i64 %220) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %221 = load ptr, ptr %3, align 8, !tbaa !5
  %222 = getelementptr i8, ptr %221, i64 10000
  %223 = icmp ult ptr %221, %210
  %224 = icmp ult ptr %4, %222
  %225 = and i1 %223, %224
  br i1 %225, label %246, label %226

226:                                              ; preds = %218, %226
  %227 = phi i64 [ %244, %226 ], [ 0, %218 ]
  %228 = getelementptr inbounds i64, ptr %4, i64 %227
  %229 = load <16 x i64>, ptr %228, align 8, !tbaa !147, !alias.scope !160
  %230 = getelementptr inbounds i64, ptr %228, i64 16
  %231 = load <16 x i64>, ptr %230, align 8, !tbaa !147, !alias.scope !160
  %232 = getelementptr inbounds i64, ptr %228, i64 32
  %233 = load <16 x i64>, ptr %232, align 8, !tbaa !147, !alias.scope !160
  %234 = getelementptr inbounds i64, ptr %228, i64 48
  %235 = load <16 x i64>, ptr %234, align 8, !tbaa !147, !alias.scope !160
  %236 = trunc <16 x i64> %229 to <16 x i8>
  %237 = trunc <16 x i64> %231 to <16 x i8>
  %238 = trunc <16 x i64> %233 to <16 x i8>
  %239 = trunc <16 x i64> %235 to <16 x i8>
  %240 = getelementptr inbounds i8, ptr %221, i64 %227
  store <16 x i8> %236, ptr %240, align 1, !tbaa !16, !alias.scope !163, !noalias !160
  %241 = getelementptr inbounds i8, ptr %240, i64 16
  store <16 x i8> %237, ptr %241, align 1, !tbaa !16, !alias.scope !163, !noalias !160
  %242 = getelementptr inbounds i8, ptr %240, i64 32
  store <16 x i8> %238, ptr %242, align 1, !tbaa !16, !alias.scope !163, !noalias !160
  %243 = getelementptr inbounds i8, ptr %240, i64 48
  store <16 x i8> %239, ptr %243, align 1, !tbaa !16, !alias.scope !163, !noalias !160
  %244 = add nuw i64 %227, 64
  %245 = icmp eq i64 %244, 9984
  br i1 %245, label %246, label %226, !llvm.loop !165

246:                                              ; preds = %226, %218
  %247 = phi i64 [ 0, %218 ], [ 9984, %226 ]
  br label %248

248:                                              ; preds = %248, %246
  %249 = phi i64 [ %247, %246 ], [ %269, %248 ]
  %250 = getelementptr inbounds i64, ptr %4, i64 %249
  %251 = load i64, ptr %250, align 8, !tbaa !147
  %252 = trunc i64 %251 to i8
  %253 = getelementptr inbounds i8, ptr %221, i64 %249
  store i8 %252, ptr %253, align 1, !tbaa !16
  %254 = or i64 %249, 1
  %255 = getelementptr inbounds i64, ptr %4, i64 %254
  %256 = load i64, ptr %255, align 8, !tbaa !147
  %257 = trunc i64 %256 to i8
  %258 = getelementptr inbounds i8, ptr %221, i64 %254
  store i8 %257, ptr %258, align 1, !tbaa !16
  %259 = or i64 %249, 2
  %260 = getelementptr inbounds i64, ptr %4, i64 %259
  %261 = load i64, ptr %260, align 8, !tbaa !147
  %262 = trunc i64 %261 to i8
  %263 = getelementptr inbounds i8, ptr %221, i64 %259
  store i8 %262, ptr %263, align 1, !tbaa !16
  %264 = or i64 %249, 3
  %265 = getelementptr inbounds i64, ptr %4, i64 %264
  %266 = load i64, ptr %265, align 8, !tbaa !147
  %267 = trunc i64 %266 to i8
  %268 = getelementptr inbounds i8, ptr %221, i64 %264
  store i8 %267, ptr %268, align 1, !tbaa !16
  %269 = add nuw nsw i64 %249, 4
  %270 = icmp eq i64 %269, 10000
  br i1 %270, label %271, label %248, !llvm.loop !166

271:                                              ; preds = %248
  %272 = add i64 %219, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %211, label %218, !prof !42

274:                                              ; preds = %216, %167, %135
  %275 = phi { ptr, i32 } [ %168, %167 ], [ %217, %216 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %276 = load ptr, ptr %3, align 8, !tbaa !5
  %277 = icmp eq ptr %276, null
  br i1 %277, label %281, label %278

278:                                              ; preds = %274, %133
  %279 = phi { ptr, i32 } [ %134, %133 ], [ %275, %274 ]
  %280 = phi ptr [ %5, %133 ], [ %276, %274 ]
  call void @_ZdaPv(ptr noundef nonnull %280) #13
  br label %281

281:                                              ; preds = %278, %274, %131
  %282 = phi { ptr, i32 } [ %132, %131 ], [ %275, %274 ], [ %279, %278 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %282

283:                                              ; preds = %212, %215
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z53benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::unique_ptr.33", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %6 unwind label %67

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %8 unwind label %69

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %9, align 8, !tbaa !146
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %13 unwind label %71

13:                                               ; preds = %10
  %14 = getelementptr inbounds i64, ptr %4, i64 %11
  store i64 %12, ptr %14, align 8, !tbaa !147
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !148

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i64, ptr %4, i64 %19
  %21 = load i64, ptr %20, align 8, !tbaa !147
  %22 = trunc i64 %21 to i8
  %23 = getelementptr inbounds i8, ptr %7, i64 %19
  store i8 %22, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i64, ptr %4, i64 %24
  %26 = load i64, ptr %25, align 8, !tbaa !147
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds i8, ptr %7, i64 %24
  store i8 %27, ptr %28, align 1, !tbaa !16
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i64, ptr %4, i64 %29
  %31 = load i64, ptr %30, align 8, !tbaa !147
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds i8, ptr %7, i64 %29
  store i8 %32, ptr %33, align 1, !tbaa !16
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i64, ptr %4, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !147
  %37 = trunc i64 %36 to i8
  %38 = getelementptr inbounds i8, ptr %7, i64 %34
  store i8 %37, ptr %38, align 1, !tbaa !16
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i64, ptr %4, i64 %39
  %41 = load i64, ptr %40, align 8, !tbaa !147
  %42 = trunc i64 %41 to i8
  %43 = getelementptr inbounds i8, ptr %7, i64 %39
  store i8 %42, ptr %43, align 1, !tbaa !16
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !149

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %65, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i64, ptr %4, i64 %47
  %49 = load <2 x i64>, ptr %48, align 8, !tbaa !147
  %50 = getelementptr inbounds i64, ptr %48, i64 2
  %51 = load <2 x i64>, ptr %50, align 8, !tbaa !147
  %52 = trunc <2 x i64> %49 to <2 x i8>
  %53 = trunc <2 x i64> %51 to <2 x i8>
  %54 = getelementptr inbounds i8, ptr %5, i64 %47
  store <2 x i8> %52, ptr %54, align 1, !tbaa !16
  %55 = getelementptr inbounds i8, ptr %54, i64 2
  store <2 x i8> %53, ptr %55, align 1, !tbaa !16
  %56 = or i64 %47, 4
  %57 = getelementptr inbounds i64, ptr %4, i64 %56
  %58 = load <2 x i64>, ptr %57, align 8, !tbaa !147
  %59 = getelementptr inbounds i64, ptr %57, i64 2
  %60 = load <2 x i64>, ptr %59, align 8, !tbaa !147
  %61 = trunc <2 x i64> %58 to <2 x i8>
  %62 = trunc <2 x i64> %60 to <2 x i8>
  %63 = getelementptr inbounds i8, ptr %5, i64 %56
  store <2 x i8> %61, ptr %63, align 1, !tbaa !16
  %64 = getelementptr inbounds i8, ptr %63, i64 2
  store <2 x i8> %62, ptr %64, align 1, !tbaa !16
  %65 = add nuw nsw i64 %47, 8
  %66 = icmp eq i64 %65, 10000
  br i1 %66, label %73, label %46, !llvm.loop !167

67:                                               ; preds = %1
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %221

69:                                               ; preds = %6
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %218

71:                                               ; preds = %10
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %214

73:                                               ; preds = %46, %133
  %74 = phi i64 [ %134, %133 ], [ 0, %46 ]
  %75 = getelementptr inbounds i8, ptr %5, i64 %74
  %76 = load i8, ptr %75, align 1, !tbaa !16
  %77 = getelementptr inbounds i8, ptr %7, i64 %74
  %78 = load i8, ptr %77, align 1, !tbaa !16
  %79 = icmp eq i8 %76, %78
  br i1 %79, label %105, label %80

80:                                               ; preds = %126, %119, %112, %105, %73
  %81 = phi i64 [ %74, %73 ], [ %106, %105 ], [ %113, %112 ], [ %120, %119 ], [ %127, %126 ]
  %82 = and i64 %81, 4294967295
  %83 = getelementptr inbounds i8, ptr %7, i64 %82
  %84 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %85 unwind label %103

85:                                               ; preds = %80
  %86 = getelementptr inbounds i64, ptr %4, i64 %82
  %87 = load i64, ptr %86, align 8, !tbaa !147
  %88 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %87)
          to label %89 unwind label %103

89:                                               ; preds = %85
  %90 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %88, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %91 unwind label %103

91:                                               ; preds = %89
  %92 = getelementptr inbounds i8, ptr %5, i64 %82
  %93 = load i8, ptr %92, align 1, !tbaa !16
  %94 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %88, i8 noundef zeroext %93)
          to label %95 unwind label %103

95:                                               ; preds = %91
  %96 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %94, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %97 unwind label %103

97:                                               ; preds = %95
  %98 = load i8, ptr %83, align 1, !tbaa !16
  %99 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %94, i8 noundef zeroext %98)
          to label %100 unwind label %103

100:                                              ; preds = %97
  %101 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %99, ptr noundef nonnull @.str.149)
          to label %102 unwind label %103

102:                                              ; preds = %100
  call void @exit(i32 noundef 1) #12
  unreachable

103:                                              ; preds = %100, %97, %95, %91, %89, %85, %80
  %104 = landingpad { ptr, i32 }
          cleanup
  br label %214

105:                                              ; preds = %73
  %106 = add nuw nsw i64 %74, 1
  %107 = getelementptr inbounds i8, ptr %5, i64 %106
  %108 = load i8, ptr %107, align 1, !tbaa !16
  %109 = getelementptr inbounds i8, ptr %7, i64 %106
  %110 = load i8, ptr %109, align 1, !tbaa !16
  %111 = icmp eq i8 %108, %110
  br i1 %111, label %112, label %80

112:                                              ; preds = %105
  %113 = add nuw nsw i64 %74, 2
  %114 = getelementptr inbounds i8, ptr %5, i64 %113
  %115 = load i8, ptr %114, align 1, !tbaa !16
  %116 = getelementptr inbounds i8, ptr %7, i64 %113
  %117 = load i8, ptr %116, align 1, !tbaa !16
  %118 = icmp eq i8 %115, %117
  br i1 %118, label %119, label %80

119:                                              ; preds = %112
  %120 = add nuw nsw i64 %74, 3
  %121 = getelementptr inbounds i8, ptr %5, i64 %120
  %122 = load i8, ptr %121, align 1, !tbaa !16
  %123 = getelementptr inbounds i8, ptr %7, i64 %120
  %124 = load i8, ptr %123, align 1, !tbaa !16
  %125 = icmp eq i8 %122, %124
  br i1 %125, label %126, label %80

126:                                              ; preds = %119
  %127 = add nuw nsw i64 %74, 4
  %128 = getelementptr inbounds i8, ptr %5, i64 %127
  %129 = load i8, ptr %128, align 1, !tbaa !16
  %130 = getelementptr inbounds i8, ptr %7, i64 %127
  %131 = load i8, ptr %130, align 1, !tbaa !16
  %132 = icmp eq i8 %129, %131
  br i1 %132, label %133, label %80

133:                                              ; preds = %126
  %134 = add nuw nsw i64 %74, 5
  %135 = icmp eq i64 %134, 10000
  br i1 %135, label %136, label %73, !llvm.loop !151

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %138 = load i8, ptr %137, align 2, !tbaa !23, !range !40, !noundef !41
  %139 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %140 = load i64, ptr %139, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %141 unwind label %152

141:                                              ; preds = %136
  %142 = icmp ne i8 %138, 0
  %143 = icmp eq i64 %140, 0
  %144 = select i1 %142, i1 true, i1 %143
  br i1 %144, label %147, label %145, !prof !42

145:                                              ; preds = %141
  %146 = getelementptr i8, ptr %4, i64 80000
  br label %154

147:                                              ; preds = %211, %141
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %148 unwind label %152

148:                                              ; preds = %147
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %149 = load ptr, ptr %3, align 8, !tbaa !5
  %150 = icmp eq ptr %149, null
  br i1 %150, label %223, label %151

151:                                              ; preds = %148
  call void @_ZdaPv(ptr noundef nonnull %149) #13
  br label %223

152:                                              ; preds = %147, %136
  %153 = landingpad { ptr, i32 }
          cleanup
  br label %214

154:                                              ; preds = %145, %211
  %155 = phi i64 [ %212, %211 ], [ %140, %145 ]
  %156 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %3, i64 %156) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %157 = load ptr, ptr %3, align 8, !tbaa !5
  %158 = getelementptr i8, ptr %157, i64 10000
  %159 = icmp ult ptr %157, %146
  %160 = icmp ult ptr %4, %158
  %161 = and i1 %159, %160
  br i1 %161, label %183, label %162

162:                                              ; preds = %154, %162
  %163 = phi i64 [ %181, %162 ], [ 0, %154 ]
  %164 = getelementptr inbounds i64, ptr %4, i64 %163
  %165 = load <2 x i64>, ptr %164, align 8, !tbaa !147, !alias.scope !168
  %166 = getelementptr inbounds i64, ptr %164, i64 2
  %167 = load <2 x i64>, ptr %166, align 8, !tbaa !147, !alias.scope !168
  %168 = trunc <2 x i64> %165 to <2 x i8>
  %169 = trunc <2 x i64> %167 to <2 x i8>
  %170 = getelementptr inbounds i8, ptr %157, i64 %163
  store <2 x i8> %168, ptr %170, align 1, !tbaa !16, !alias.scope !171, !noalias !168
  %171 = getelementptr inbounds i8, ptr %170, i64 2
  store <2 x i8> %169, ptr %171, align 1, !tbaa !16, !alias.scope !171, !noalias !168
  %172 = or i64 %163, 4
  %173 = getelementptr inbounds i64, ptr %4, i64 %172
  %174 = load <2 x i64>, ptr %173, align 8, !tbaa !147, !alias.scope !168
  %175 = getelementptr inbounds i64, ptr %173, i64 2
  %176 = load <2 x i64>, ptr %175, align 8, !tbaa !147, !alias.scope !168
  %177 = trunc <2 x i64> %174 to <2 x i8>
  %178 = trunc <2 x i64> %176 to <2 x i8>
  %179 = getelementptr inbounds i8, ptr %157, i64 %172
  store <2 x i8> %177, ptr %179, align 1, !tbaa !16, !alias.scope !171, !noalias !168
  %180 = getelementptr inbounds i8, ptr %179, i64 2
  store <2 x i8> %178, ptr %180, align 1, !tbaa !16, !alias.scope !171, !noalias !168
  %181 = add nuw nsw i64 %163, 8
  %182 = icmp eq i64 %181, 10000
  br i1 %182, label %211, label %162, !llvm.loop !173

183:                                              ; preds = %154, %183
  %184 = phi i64 [ %209, %183 ], [ 0, %154 ]
  %185 = getelementptr inbounds i64, ptr %4, i64 %184
  %186 = load i64, ptr %185, align 8, !tbaa !147
  %187 = trunc i64 %186 to i8
  %188 = getelementptr inbounds i8, ptr %157, i64 %184
  store i8 %187, ptr %188, align 1, !tbaa !16
  %189 = add nuw nsw i64 %184, 1
  %190 = getelementptr inbounds i64, ptr %4, i64 %189
  %191 = load i64, ptr %190, align 8, !tbaa !147
  %192 = trunc i64 %191 to i8
  %193 = getelementptr inbounds i8, ptr %157, i64 %189
  store i8 %192, ptr %193, align 1, !tbaa !16
  %194 = add nuw nsw i64 %184, 2
  %195 = getelementptr inbounds i64, ptr %4, i64 %194
  %196 = load i64, ptr %195, align 8, !tbaa !147
  %197 = trunc i64 %196 to i8
  %198 = getelementptr inbounds i8, ptr %157, i64 %194
  store i8 %197, ptr %198, align 1, !tbaa !16
  %199 = add nuw nsw i64 %184, 3
  %200 = getelementptr inbounds i64, ptr %4, i64 %199
  %201 = load i64, ptr %200, align 8, !tbaa !147
  %202 = trunc i64 %201 to i8
  %203 = getelementptr inbounds i8, ptr %157, i64 %199
  store i8 %202, ptr %203, align 1, !tbaa !16
  %204 = add nuw nsw i64 %184, 4
  %205 = getelementptr inbounds i64, ptr %4, i64 %204
  %206 = load i64, ptr %205, align 8, !tbaa !147
  %207 = trunc i64 %206 to i8
  %208 = getelementptr inbounds i8, ptr %157, i64 %204
  store i8 %207, ptr %208, align 1, !tbaa !16
  %209 = add nuw nsw i64 %184, 5
  %210 = icmp eq i64 %209, 10000
  br i1 %210, label %211, label %183, !llvm.loop !174

211:                                              ; preds = %162, %183
  %212 = add i64 %155, -1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %147, label %154, !prof !42

214:                                              ; preds = %152, %103, %71
  %215 = phi { ptr, i32 } [ %104, %103 ], [ %153, %152 ], [ %72, %71 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %216 = load ptr, ptr %3, align 8, !tbaa !5
  %217 = icmp eq ptr %216, null
  br i1 %217, label %221, label %218

218:                                              ; preds = %214, %69
  %219 = phi { ptr, i32 } [ %70, %69 ], [ %215, %214 ]
  %220 = phi ptr [ %5, %69 ], [ %216, %214 ]
  call void @_ZdaPv(ptr noundef nonnull %220) #13
  br label %221

221:                                              ; preds = %218, %214, %67
  %222 = phi { ptr, i32 } [ %68, %67 ], [ %215, %214 ], [ %219, %218 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %222

223:                                              ; preds = %148, %151
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::uniform_int_distribution.65", align 8
  %4 = alloca %"class.std::unique_ptr.33", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %7 unwind label %42

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #11
  store i64 0, ptr %3, align 8, !tbaa !144
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %3, i64 0, i32 1
  store i64 -1, ptr %8, align 8, !tbaa !146
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %3)
          to label %12 unwind label %46

12:                                               ; preds = %9
  %13 = getelementptr inbounds i64, ptr %5, i64 %10
  store i64 %11, ptr %13, align 8, !tbaa !147
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !148

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %17, align 1, !tbaa !69
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %24, %21 ]
  %20 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %21 unwind label %44

21:                                               ; preds = %18
  %22 = load ptr, ptr %4, align 8, !tbaa !5
  %23 = getelementptr inbounds i8, ptr %22, i64 %19
  store i8 %20, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 10000
  br i1 %25, label %26, label %18, !llvm.loop !70

26:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  %27 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %28 = load i8, ptr %27, align 2, !tbaa !23, !range !40, !noundef !41
  %29 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %30 = load i64, ptr %29, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %31 unwind label %48

31:                                               ; preds = %26
  %32 = icmp ne i8 %28, 0
  %33 = icmp eq i64 %30, 0
  %34 = select i1 %32, i1 true, i1 %33
  br i1 %34, label %37, label %35, !prof !42

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %5, i64 80000
  br label %50

37:                                               ; preds = %119, %31
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %38 unwind label %48

38:                                               ; preds = %37
  %39 = load ptr, ptr %4, align 8, !tbaa !5
  %40 = icmp eq ptr %39, null
  br i1 %40, label %129, label %41

41:                                               ; preds = %38
  call void @_ZdaPv(ptr noundef nonnull %39) #13
  br label %129

42:                                               ; preds = %1
  %43 = landingpad { ptr, i32 }
          cleanup
  br label %127

44:                                               ; preds = %18
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %122

46:                                               ; preds = %9
  %47 = landingpad { ptr, i32 }
          cleanup
  br label %122

48:                                               ; preds = %37, %26
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %122

50:                                               ; preds = %35, %119
  %51 = phi i64 [ %120, %119 ], [ %30, %35 ]
  %52 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %4, i64 %52) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = getelementptr i8, ptr %53, i64 10000
  %55 = icmp ult ptr %53, %36
  %56 = icmp ult ptr %5, %54
  %57 = and i1 %55, %56
  br i1 %57, label %86, label %58

58:                                               ; preds = %50, %58
  %59 = phi i64 [ %84, %58 ], [ 0, %50 ]
  %60 = getelementptr inbounds i64, ptr %5, i64 %59
  %61 = load <8 x i64>, ptr %60, align 8, !tbaa !147, !alias.scope !175
  %62 = getelementptr inbounds i64, ptr %60, i64 8
  %63 = load <8 x i64>, ptr %62, align 8, !tbaa !147, !alias.scope !175
  %64 = getelementptr inbounds i64, ptr %60, i64 16
  %65 = load <8 x i64>, ptr %64, align 8, !tbaa !147, !alias.scope !175
  %66 = getelementptr inbounds i64, ptr %60, i64 24
  %67 = load <8 x i64>, ptr %66, align 8, !tbaa !147, !alias.scope !175
  %68 = getelementptr inbounds i8, ptr %53, i64 %59
  %69 = load <8 x i8>, ptr %68, align 1, !tbaa !16, !alias.scope !178, !noalias !175
  %70 = getelementptr inbounds i8, ptr %68, i64 8
  %71 = load <8 x i8>, ptr %70, align 1, !tbaa !16, !alias.scope !178, !noalias !175
  %72 = getelementptr inbounds i8, ptr %68, i64 16
  %73 = load <8 x i8>, ptr %72, align 1, !tbaa !16, !alias.scope !178, !noalias !175
  %74 = getelementptr inbounds i8, ptr %68, i64 24
  %75 = load <8 x i8>, ptr %74, align 1, !tbaa !16, !alias.scope !178, !noalias !175
  %76 = trunc <8 x i64> %61 to <8 x i8>
  %77 = trunc <8 x i64> %63 to <8 x i8>
  %78 = trunc <8 x i64> %65 to <8 x i8>
  %79 = trunc <8 x i64> %67 to <8 x i8>
  %80 = add <8 x i8> %69, %76
  %81 = add <8 x i8> %71, %77
  %82 = add <8 x i8> %73, %78
  %83 = add <8 x i8> %75, %79
  store <8 x i8> %80, ptr %68, align 1, !tbaa !16, !alias.scope !178, !noalias !175
  store <8 x i8> %81, ptr %70, align 1, !tbaa !16, !alias.scope !178, !noalias !175
  store <8 x i8> %82, ptr %72, align 1, !tbaa !16, !alias.scope !178, !noalias !175
  store <8 x i8> %83, ptr %74, align 1, !tbaa !16, !alias.scope !178, !noalias !175
  %84 = add nuw i64 %59, 32
  %85 = icmp eq i64 %84, 9984
  br i1 %85, label %86, label %58, !llvm.loop !180

86:                                               ; preds = %58, %50
  %87 = phi i64 [ 0, %50 ], [ 9984, %58 ]
  br label %88

88:                                               ; preds = %88, %86
  %89 = phi i64 [ %87, %86 ], [ %117, %88 ]
  %90 = getelementptr inbounds i64, ptr %5, i64 %89
  %91 = load i64, ptr %90, align 8, !tbaa !147
  %92 = getelementptr inbounds i8, ptr %53, i64 %89
  %93 = load i8, ptr %92, align 1, !tbaa !16
  %94 = trunc i64 %91 to i8
  %95 = add i8 %93, %94
  store i8 %95, ptr %92, align 1, !tbaa !16
  %96 = or i64 %89, 1
  %97 = getelementptr inbounds i64, ptr %5, i64 %96
  %98 = load i64, ptr %97, align 8, !tbaa !147
  %99 = getelementptr inbounds i8, ptr %53, i64 %96
  %100 = load i8, ptr %99, align 1, !tbaa !16
  %101 = trunc i64 %98 to i8
  %102 = add i8 %100, %101
  store i8 %102, ptr %99, align 1, !tbaa !16
  %103 = or i64 %89, 2
  %104 = getelementptr inbounds i64, ptr %5, i64 %103
  %105 = load i64, ptr %104, align 8, !tbaa !147
  %106 = getelementptr inbounds i8, ptr %53, i64 %103
  %107 = load i8, ptr %106, align 1, !tbaa !16
  %108 = trunc i64 %105 to i8
  %109 = add i8 %107, %108
  store i8 %109, ptr %106, align 1, !tbaa !16
  %110 = or i64 %89, 3
  %111 = getelementptr inbounds i64, ptr %5, i64 %110
  %112 = load i64, ptr %111, align 8, !tbaa !147
  %113 = getelementptr inbounds i8, ptr %53, i64 %110
  %114 = load i8, ptr %113, align 1, !tbaa !16
  %115 = trunc i64 %112 to i8
  %116 = add i8 %114, %115
  store i8 %116, ptr %113, align 1, !tbaa !16
  %117 = add nuw nsw i64 %89, 4
  %118 = icmp eq i64 %117, 10000
  br i1 %118, label %119, label %88, !llvm.loop !181

119:                                              ; preds = %88
  %120 = add i64 %51, -1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %37, label %50, !prof !42

122:                                              ; preds = %48, %46, %44
  %123 = phi { ptr, i32 } [ %49, %48 ], [ %45, %44 ], [ %47, %46 ]
  %124 = load ptr, ptr %4, align 8, !tbaa !5
  %125 = icmp eq ptr %124, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %122
  call void @_ZdaPv(ptr noundef nonnull %124) #13
  br label %127

127:                                              ; preds = %126, %122, %42
  %128 = phi { ptr, i32 } [ %43, %42 ], [ %123, %122 ], [ %123, %126 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %128

129:                                              ; preds = %38, %41
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::uniform_int_distribution.65", align 8
  %4 = alloca %"class.std::unique_ptr.33", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %7 unwind label %42

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #11
  store i64 0, ptr %3, align 8, !tbaa !144
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %3, i64 0, i32 1
  store i64 -1, ptr %8, align 8, !tbaa !146
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %3)
          to label %12 unwind label %46

12:                                               ; preds = %9
  %13 = getelementptr inbounds i64, ptr %5, i64 %10
  store i64 %11, ptr %13, align 8, !tbaa !147
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !148

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %17, align 1, !tbaa !69
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %24, %21 ]
  %20 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %21 unwind label %44

21:                                               ; preds = %18
  %22 = load ptr, ptr %4, align 8, !tbaa !5
  %23 = getelementptr inbounds i8, ptr %22, i64 %19
  store i8 %20, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 10000
  br i1 %25, label %26, label %18, !llvm.loop !70

26:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  %27 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %28 = load i8, ptr %27, align 2, !tbaa !23, !range !40, !noundef !41
  %29 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %30 = load i64, ptr %29, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %31 unwind label %48

31:                                               ; preds = %26
  %32 = icmp ne i8 %28, 0
  %33 = icmp eq i64 %30, 0
  %34 = select i1 %32, i1 true, i1 %33
  br i1 %34, label %37, label %35, !prof !42

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %5, i64 80000
  br label %50

37:                                               ; preds = %119, %31
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %38 unwind label %48

38:                                               ; preds = %37
  %39 = load ptr, ptr %4, align 8, !tbaa !5
  %40 = icmp eq ptr %39, null
  br i1 %40, label %129, label %41

41:                                               ; preds = %38
  call void @_ZdaPv(ptr noundef nonnull %39) #13
  br label %129

42:                                               ; preds = %1
  %43 = landingpad { ptr, i32 }
          cleanup
  br label %127

44:                                               ; preds = %18
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %122

46:                                               ; preds = %9
  %47 = landingpad { ptr, i32 }
          cleanup
  br label %122

48:                                               ; preds = %37, %26
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %122

50:                                               ; preds = %35, %119
  %51 = phi i64 [ %120, %119 ], [ %30, %35 ]
  %52 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %4, i64 %52) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = getelementptr i8, ptr %53, i64 10000
  %55 = icmp ult ptr %53, %36
  %56 = icmp ult ptr %5, %54
  %57 = and i1 %55, %56
  br i1 %57, label %86, label %58

58:                                               ; preds = %50, %58
  %59 = phi i64 [ %84, %58 ], [ 0, %50 ]
  %60 = getelementptr inbounds i64, ptr %5, i64 %59
  %61 = load <16 x i64>, ptr %60, align 8, !tbaa !147, !alias.scope !182
  %62 = getelementptr inbounds i64, ptr %60, i64 16
  %63 = load <16 x i64>, ptr %62, align 8, !tbaa !147, !alias.scope !182
  %64 = getelementptr inbounds i64, ptr %60, i64 32
  %65 = load <16 x i64>, ptr %64, align 8, !tbaa !147, !alias.scope !182
  %66 = getelementptr inbounds i64, ptr %60, i64 48
  %67 = load <16 x i64>, ptr %66, align 8, !tbaa !147, !alias.scope !182
  %68 = getelementptr inbounds i8, ptr %53, i64 %59
  %69 = load <16 x i8>, ptr %68, align 1, !tbaa !16, !alias.scope !185, !noalias !182
  %70 = getelementptr inbounds i8, ptr %68, i64 16
  %71 = load <16 x i8>, ptr %70, align 1, !tbaa !16, !alias.scope !185, !noalias !182
  %72 = getelementptr inbounds i8, ptr %68, i64 32
  %73 = load <16 x i8>, ptr %72, align 1, !tbaa !16, !alias.scope !185, !noalias !182
  %74 = getelementptr inbounds i8, ptr %68, i64 48
  %75 = load <16 x i8>, ptr %74, align 1, !tbaa !16, !alias.scope !185, !noalias !182
  %76 = trunc <16 x i64> %61 to <16 x i8>
  %77 = trunc <16 x i64> %63 to <16 x i8>
  %78 = trunc <16 x i64> %65 to <16 x i8>
  %79 = trunc <16 x i64> %67 to <16 x i8>
  %80 = add <16 x i8> %69, %76
  %81 = add <16 x i8> %71, %77
  %82 = add <16 x i8> %73, %78
  %83 = add <16 x i8> %75, %79
  store <16 x i8> %80, ptr %68, align 1, !tbaa !16, !alias.scope !185, !noalias !182
  store <16 x i8> %81, ptr %70, align 1, !tbaa !16, !alias.scope !185, !noalias !182
  store <16 x i8> %82, ptr %72, align 1, !tbaa !16, !alias.scope !185, !noalias !182
  store <16 x i8> %83, ptr %74, align 1, !tbaa !16, !alias.scope !185, !noalias !182
  %84 = add nuw i64 %59, 64
  %85 = icmp eq i64 %84, 9984
  br i1 %85, label %86, label %58, !llvm.loop !187

86:                                               ; preds = %58, %50
  %87 = phi i64 [ 0, %50 ], [ 9984, %58 ]
  br label %88

88:                                               ; preds = %88, %86
  %89 = phi i64 [ %87, %86 ], [ %117, %88 ]
  %90 = getelementptr inbounds i64, ptr %5, i64 %89
  %91 = load i64, ptr %90, align 8, !tbaa !147
  %92 = getelementptr inbounds i8, ptr %53, i64 %89
  %93 = load i8, ptr %92, align 1, !tbaa !16
  %94 = trunc i64 %91 to i8
  %95 = add i8 %93, %94
  store i8 %95, ptr %92, align 1, !tbaa !16
  %96 = or i64 %89, 1
  %97 = getelementptr inbounds i64, ptr %5, i64 %96
  %98 = load i64, ptr %97, align 8, !tbaa !147
  %99 = getelementptr inbounds i8, ptr %53, i64 %96
  %100 = load i8, ptr %99, align 1, !tbaa !16
  %101 = trunc i64 %98 to i8
  %102 = add i8 %100, %101
  store i8 %102, ptr %99, align 1, !tbaa !16
  %103 = or i64 %89, 2
  %104 = getelementptr inbounds i64, ptr %5, i64 %103
  %105 = load i64, ptr %104, align 8, !tbaa !147
  %106 = getelementptr inbounds i8, ptr %53, i64 %103
  %107 = load i8, ptr %106, align 1, !tbaa !16
  %108 = trunc i64 %105 to i8
  %109 = add i8 %107, %108
  store i8 %109, ptr %106, align 1, !tbaa !16
  %110 = or i64 %89, 3
  %111 = getelementptr inbounds i64, ptr %5, i64 %110
  %112 = load i64, ptr %111, align 8, !tbaa !147
  %113 = getelementptr inbounds i8, ptr %53, i64 %110
  %114 = load i8, ptr %113, align 1, !tbaa !16
  %115 = trunc i64 %112 to i8
  %116 = add i8 %114, %115
  store i8 %116, ptr %113, align 1, !tbaa !16
  %117 = add nuw nsw i64 %89, 4
  %118 = icmp eq i64 %117, 10000
  br i1 %118, label %119, label %88, !llvm.loop !188

119:                                              ; preds = %88
  %120 = add i64 %51, -1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %37, label %50, !prof !42

122:                                              ; preds = %48, %46, %44
  %123 = phi { ptr, i32 } [ %49, %48 ], [ %45, %44 ], [ %47, %46 ]
  %124 = load ptr, ptr %4, align 8, !tbaa !5
  %125 = icmp eq ptr %124, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %122
  call void @_ZdaPv(ptr noundef nonnull %124) #13
  br label %127

127:                                              ; preds = %126, %122, %42
  %128 = phi { ptr, i32 } [ %43, %42 ], [ %123, %122 ], [ %123, %126 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %128

129:                                              ; preds = %38, %41
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::uniform_int_distribution.65", align 8
  %4 = alloca %"class.std::unique_ptr.33", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %7 unwind label %42

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #11
  store i64 0, ptr %3, align 8, !tbaa !144
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %3, i64 0, i32 1
  store i64 -1, ptr %8, align 8, !tbaa !146
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %3)
          to label %12 unwind label %46

12:                                               ; preds = %9
  %13 = getelementptr inbounds i64, ptr %5, i64 %10
  store i64 %11, ptr %13, align 8, !tbaa !147
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !148

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %17, align 1, !tbaa !69
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %24, %21 ]
  %20 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %21 unwind label %44

21:                                               ; preds = %18
  %22 = load ptr, ptr %4, align 8, !tbaa !5
  %23 = getelementptr inbounds i8, ptr %22, i64 %19
  store i8 %20, ptr %23, align 1, !tbaa !16
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 10000
  br i1 %25, label %26, label %18, !llvm.loop !70

26:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  %27 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %28 = load i8, ptr %27, align 2, !tbaa !23, !range !40, !noundef !41
  %29 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %30 = load i64, ptr %29, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %31 unwind label %48

31:                                               ; preds = %26
  %32 = icmp ne i8 %28, 0
  %33 = icmp eq i64 %30, 0
  %34 = select i1 %32, i1 true, i1 %33
  br i1 %34, label %37, label %35, !prof !42

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %5, i64 80000
  br label %50

37:                                               ; preds = %118, %31
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %38 unwind label %48

38:                                               ; preds = %37
  %39 = load ptr, ptr %4, align 8, !tbaa !5
  %40 = icmp eq ptr %39, null
  br i1 %40, label %128, label %41

41:                                               ; preds = %38
  call void @_ZdaPv(ptr noundef nonnull %39) #13
  br label %128

42:                                               ; preds = %1
  %43 = landingpad { ptr, i32 }
          cleanup
  br label %126

44:                                               ; preds = %18
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %121

46:                                               ; preds = %9
  %47 = landingpad { ptr, i32 }
          cleanup
  br label %121

48:                                               ; preds = %37, %26
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %121

50:                                               ; preds = %35, %118
  %51 = phi i64 [ %119, %118 ], [ %30, %35 ]
  %52 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %4, i64 %52) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = getelementptr i8, ptr %53, i64 10000
  %55 = icmp ult ptr %53, %36
  %56 = icmp ult ptr %5, %54
  %57 = and i1 %55, %56
  br i1 %57, label %87, label %58

58:                                               ; preds = %50, %58
  %59 = phi i64 [ %85, %58 ], [ 0, %50 ]
  %60 = getelementptr inbounds i64, ptr %5, i64 %59
  %61 = load <2 x i64>, ptr %60, align 8, !tbaa !147, !alias.scope !189
  %62 = getelementptr inbounds i64, ptr %60, i64 2
  %63 = load <2 x i64>, ptr %62, align 8, !tbaa !147, !alias.scope !189
  %64 = getelementptr inbounds i8, ptr %53, i64 %59
  %65 = load <2 x i8>, ptr %64, align 1, !tbaa !16, !alias.scope !192, !noalias !189
  %66 = getelementptr inbounds i8, ptr %64, i64 2
  %67 = load <2 x i8>, ptr %66, align 1, !tbaa !16, !alias.scope !192, !noalias !189
  %68 = trunc <2 x i64> %61 to <2 x i8>
  %69 = trunc <2 x i64> %63 to <2 x i8>
  %70 = add <2 x i8> %65, %68
  %71 = add <2 x i8> %67, %69
  store <2 x i8> %70, ptr %64, align 1, !tbaa !16, !alias.scope !192, !noalias !189
  store <2 x i8> %71, ptr %66, align 1, !tbaa !16, !alias.scope !192, !noalias !189
  %72 = or i64 %59, 4
  %73 = getelementptr inbounds i64, ptr %5, i64 %72
  %74 = load <2 x i64>, ptr %73, align 8, !tbaa !147, !alias.scope !189
  %75 = getelementptr inbounds i64, ptr %73, i64 2
  %76 = load <2 x i64>, ptr %75, align 8, !tbaa !147, !alias.scope !189
  %77 = getelementptr inbounds i8, ptr %53, i64 %72
  %78 = load <2 x i8>, ptr %77, align 1, !tbaa !16, !alias.scope !192, !noalias !189
  %79 = getelementptr inbounds i8, ptr %77, i64 2
  %80 = load <2 x i8>, ptr %79, align 1, !tbaa !16, !alias.scope !192, !noalias !189
  %81 = trunc <2 x i64> %74 to <2 x i8>
  %82 = trunc <2 x i64> %76 to <2 x i8>
  %83 = add <2 x i8> %78, %81
  %84 = add <2 x i8> %80, %82
  store <2 x i8> %83, ptr %77, align 1, !tbaa !16, !alias.scope !192, !noalias !189
  store <2 x i8> %84, ptr %79, align 1, !tbaa !16, !alias.scope !192, !noalias !189
  %85 = add nuw nsw i64 %59, 8
  %86 = icmp eq i64 %85, 10000
  br i1 %86, label %118, label %58, !llvm.loop !194

87:                                               ; preds = %50, %87
  %88 = phi i64 [ %116, %87 ], [ 0, %50 ]
  %89 = getelementptr inbounds i64, ptr %5, i64 %88
  %90 = load i64, ptr %89, align 8, !tbaa !147
  %91 = getelementptr inbounds i8, ptr %53, i64 %88
  %92 = load i8, ptr %91, align 1, !tbaa !16
  %93 = trunc i64 %90 to i8
  %94 = add i8 %92, %93
  store i8 %94, ptr %91, align 1, !tbaa !16
  %95 = or i64 %88, 1
  %96 = getelementptr inbounds i64, ptr %5, i64 %95
  %97 = load i64, ptr %96, align 8, !tbaa !147
  %98 = getelementptr inbounds i8, ptr %53, i64 %95
  %99 = load i8, ptr %98, align 1, !tbaa !16
  %100 = trunc i64 %97 to i8
  %101 = add i8 %99, %100
  store i8 %101, ptr %98, align 1, !tbaa !16
  %102 = or i64 %88, 2
  %103 = getelementptr inbounds i64, ptr %5, i64 %102
  %104 = load i64, ptr %103, align 8, !tbaa !147
  %105 = getelementptr inbounds i8, ptr %53, i64 %102
  %106 = load i8, ptr %105, align 1, !tbaa !16
  %107 = trunc i64 %104 to i8
  %108 = add i8 %106, %107
  store i8 %108, ptr %105, align 1, !tbaa !16
  %109 = or i64 %88, 3
  %110 = getelementptr inbounds i64, ptr %5, i64 %109
  %111 = load i64, ptr %110, align 8, !tbaa !147
  %112 = getelementptr inbounds i8, ptr %53, i64 %109
  %113 = load i8, ptr %112, align 1, !tbaa !16
  %114 = trunc i64 %111 to i8
  %115 = add i8 %113, %114
  store i8 %115, ptr %112, align 1, !tbaa !16
  %116 = add nuw nsw i64 %88, 4
  %117 = icmp eq i64 %116, 10000
  br i1 %117, label %118, label %87, !llvm.loop !195

118:                                              ; preds = %58, %87
  %119 = add i64 %51, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %37, label %50, !prof !42

121:                                              ; preds = %48, %46, %44
  %122 = phi { ptr, i32 } [ %49, %48 ], [ %45, %44 ], [ %47, %46 ]
  %123 = load ptr, ptr %4, align 8, !tbaa !5
  %124 = icmp eq ptr %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  call void @_ZdaPv(ptr noundef nonnull %123) #13
  br label %126

126:                                              ; preds = %125, %121, %42
  %127 = phi { ptr, i32 } [ %43, %42 ], [ %122, %121 ], [ %122, %125 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %127

128:                                              ; preds = %38, %41
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::unique_ptr", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %9, align 4, !tbaa !94
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i32, ptr %4, i64 %11
  store i32 %12, ptr %14, align 4, !tbaa !95
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !96

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i32, ptr %4, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !95
  %22 = trunc i32 %21 to i16
  %23 = getelementptr inbounds i16, ptr %7, i64 %19
  store i16 %22, ptr %23, align 2, !tbaa !13
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i32, ptr %4, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !95
  %27 = trunc i32 %26 to i16
  %28 = getelementptr inbounds i16, ptr %7, i64 %24
  store i16 %27, ptr %28, align 2, !tbaa !13
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i32, ptr %4, i64 %29
  %31 = load i32, ptr %30, align 4, !tbaa !95
  %32 = trunc i32 %31 to i16
  %33 = getelementptr inbounds i16, ptr %7, i64 %29
  store i16 %32, ptr %33, align 2, !tbaa !13
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i32, ptr %4, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !95
  %37 = trunc i32 %36 to i16
  %38 = getelementptr inbounds i16, ptr %7, i64 %34
  store i16 %37, ptr %38, align 2, !tbaa !13
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i32, ptr %4, i64 %39
  %41 = load i32, ptr %40, align 4, !tbaa !95
  %42 = trunc i32 %41 to i16
  %43 = getelementptr inbounds i16, ptr %7, i64 %39
  store i16 %42, ptr %43, align 2, !tbaa !13
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !196

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i32, ptr %4, i64 %47
  %49 = load <8 x i32>, ptr %48, align 4, !tbaa !95
  %50 = getelementptr inbounds i32, ptr %48, i64 8
  %51 = load <8 x i32>, ptr %50, align 4, !tbaa !95
  %52 = getelementptr inbounds i32, ptr %48, i64 16
  %53 = load <8 x i32>, ptr %52, align 4, !tbaa !95
  %54 = getelementptr inbounds i32, ptr %48, i64 24
  %55 = load <8 x i32>, ptr %54, align 4, !tbaa !95
  %56 = trunc <8 x i32> %49 to <8 x i16>
  %57 = trunc <8 x i32> %51 to <8 x i16>
  %58 = trunc <8 x i32> %53 to <8 x i16>
  %59 = trunc <8 x i32> %55 to <8 x i16>
  %60 = getelementptr inbounds i16, ptr %5, i64 %47
  store <8 x i16> %56, ptr %60, align 2, !tbaa !13
  %61 = getelementptr inbounds i16, ptr %60, i64 8
  store <8 x i16> %57, ptr %61, align 2, !tbaa !13
  %62 = getelementptr inbounds i16, ptr %60, i64 16
  store <8 x i16> %58, ptr %62, align 2, !tbaa !13
  %63 = getelementptr inbounds i16, ptr %60, i64 24
  store <8 x i16> %59, ptr %63, align 2, !tbaa !13
  %64 = add nuw i64 %47, 32
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !197

66:                                               ; preds = %46
  %67 = getelementptr inbounds i32, ptr %4, i64 9984
  %68 = load i32, ptr %67, align 4, !tbaa !95
  %69 = trunc i32 %68 to i16
  %70 = getelementptr inbounds i16, ptr %5, i64 9984
  store i16 %69, ptr %70, align 2, !tbaa !13
  %71 = getelementptr inbounds i32, ptr %4, i64 9985
  %72 = load i32, ptr %71, align 4, !tbaa !95
  %73 = trunc i32 %72 to i16
  %74 = getelementptr inbounds i16, ptr %5, i64 9985
  store i16 %73, ptr %74, align 2, !tbaa !13
  %75 = getelementptr inbounds i32, ptr %4, i64 9986
  %76 = load i32, ptr %75, align 4, !tbaa !95
  %77 = trunc i32 %76 to i16
  %78 = getelementptr inbounds i16, ptr %5, i64 9986
  store i16 %77, ptr %78, align 2, !tbaa !13
  %79 = getelementptr inbounds i32, ptr %4, i64 9987
  %80 = load i32, ptr %79, align 4, !tbaa !95
  %81 = trunc i32 %80 to i16
  %82 = getelementptr inbounds i16, ptr %5, i64 9987
  store i16 %81, ptr %82, align 2, !tbaa !13
  %83 = getelementptr inbounds i32, ptr %4, i64 9988
  %84 = load i32, ptr %83, align 4, !tbaa !95
  %85 = trunc i32 %84 to i16
  %86 = getelementptr inbounds i16, ptr %5, i64 9988
  store i16 %85, ptr %86, align 2, !tbaa !13
  %87 = getelementptr inbounds i32, ptr %4, i64 9989
  %88 = load i32, ptr %87, align 4, !tbaa !95
  %89 = trunc i32 %88 to i16
  %90 = getelementptr inbounds i16, ptr %5, i64 9989
  store i16 %89, ptr %90, align 2, !tbaa !13
  %91 = getelementptr inbounds i32, ptr %4, i64 9990
  %92 = load i32, ptr %91, align 4, !tbaa !95
  %93 = trunc i32 %92 to i16
  %94 = getelementptr inbounds i16, ptr %5, i64 9990
  store i16 %93, ptr %94, align 2, !tbaa !13
  %95 = getelementptr inbounds i32, ptr %4, i64 9991
  %96 = load i32, ptr %95, align 4, !tbaa !95
  %97 = trunc i32 %96 to i16
  %98 = getelementptr inbounds i16, ptr %5, i64 9991
  store i16 %97, ptr %98, align 2, !tbaa !13
  %99 = getelementptr inbounds i32, ptr %4, i64 9992
  %100 = load i32, ptr %99, align 4, !tbaa !95
  %101 = trunc i32 %100 to i16
  %102 = getelementptr inbounds i16, ptr %5, i64 9992
  store i16 %101, ptr %102, align 2, !tbaa !13
  %103 = getelementptr inbounds i32, ptr %4, i64 9993
  %104 = load i32, ptr %103, align 4, !tbaa !95
  %105 = trunc i32 %104 to i16
  %106 = getelementptr inbounds i16, ptr %5, i64 9993
  store i16 %105, ptr %106, align 2, !tbaa !13
  %107 = getelementptr inbounds i32, ptr %4, i64 9994
  %108 = load i32, ptr %107, align 4, !tbaa !95
  %109 = trunc i32 %108 to i16
  %110 = getelementptr inbounds i16, ptr %5, i64 9994
  store i16 %109, ptr %110, align 2, !tbaa !13
  %111 = getelementptr inbounds i32, ptr %4, i64 9995
  %112 = load i32, ptr %111, align 4, !tbaa !95
  %113 = trunc i32 %112 to i16
  %114 = getelementptr inbounds i16, ptr %5, i64 9995
  store i16 %113, ptr %114, align 2, !tbaa !13
  %115 = getelementptr inbounds i32, ptr %4, i64 9996
  %116 = load i32, ptr %115, align 4, !tbaa !95
  %117 = trunc i32 %116 to i16
  %118 = getelementptr inbounds i16, ptr %5, i64 9996
  store i16 %117, ptr %118, align 2, !tbaa !13
  %119 = getelementptr inbounds i32, ptr %4, i64 9997
  %120 = load i32, ptr %119, align 4, !tbaa !95
  %121 = trunc i32 %120 to i16
  %122 = getelementptr inbounds i16, ptr %5, i64 9997
  store i16 %121, ptr %122, align 2, !tbaa !13
  %123 = getelementptr inbounds i32, ptr %4, i64 9998
  %124 = load i32, ptr %123, align 4, !tbaa !95
  %125 = trunc i32 %124 to i16
  %126 = getelementptr inbounds i16, ptr %5, i64 9998
  store i16 %125, ptr %126, align 2, !tbaa !13
  %127 = getelementptr inbounds i32, ptr %4, i64 9999
  %128 = load i32, ptr %127, align 4, !tbaa !95
  %129 = trunc i32 %128 to i16
  %130 = getelementptr inbounds i16, ptr %5, i64 9999
  store i16 %129, ptr %130, align 2, !tbaa !13
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %318

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %315

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %311

137:                                              ; preds = %200, %66
  %138 = phi i64 [ 0, %66 ], [ %201, %200 ]
  %139 = getelementptr inbounds i16, ptr %5, i64 %138
  %140 = load i16, ptr %139, align 2, !tbaa !13
  %141 = getelementptr inbounds i16, ptr %7, i64 %138
  %142 = load i16, ptr %141, align 2, !tbaa !13
  %143 = icmp eq i16 %140, %142
  br i1 %143, label %172, label %144

144:                                              ; preds = %193, %186, %179, %172, %137
  %145 = phi i64 [ %138, %137 ], [ %173, %172 ], [ %180, %179 ], [ %187, %186 ], [ %194, %193 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i16, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %170

149:                                              ; preds = %144
  %150 = getelementptr inbounds i32, ptr %4, i64 %146
  %151 = load i32, ptr %150, align 4, !tbaa !95
  %152 = zext i32 %151 to i64
  %153 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %152)
          to label %154 unwind label %170

154:                                              ; preds = %149
  %155 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %153, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %156 unwind label %170

156:                                              ; preds = %154
  %157 = getelementptr inbounds i16, ptr %5, i64 %146
  %158 = load i16, ptr %157, align 2, !tbaa !13
  %159 = zext i16 %158 to i64
  %160 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %153, i64 noundef %159)
          to label %161 unwind label %170

161:                                              ; preds = %156
  %162 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %160, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %163 unwind label %170

163:                                              ; preds = %161
  %164 = load i16, ptr %147, align 2, !tbaa !13
  %165 = zext i16 %164 to i64
  %166 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %160, i64 noundef %165)
          to label %167 unwind label %170

167:                                              ; preds = %163
  %168 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %166, ptr noundef nonnull @.str.149)
          to label %169 unwind label %170

169:                                              ; preds = %167
  call void @exit(i32 noundef 1) #12
  unreachable

170:                                              ; preds = %167, %163, %161, %156, %154, %149, %144
  %171 = landingpad { ptr, i32 }
          cleanup
  br label %311

172:                                              ; preds = %137
  %173 = add nuw nsw i64 %138, 1
  %174 = getelementptr inbounds i16, ptr %5, i64 %173
  %175 = load i16, ptr %174, align 2, !tbaa !13
  %176 = getelementptr inbounds i16, ptr %7, i64 %173
  %177 = load i16, ptr %176, align 2, !tbaa !13
  %178 = icmp eq i16 %175, %177
  br i1 %178, label %179, label %144

179:                                              ; preds = %172
  %180 = add nuw nsw i64 %138, 2
  %181 = getelementptr inbounds i16, ptr %5, i64 %180
  %182 = load i16, ptr %181, align 2, !tbaa !13
  %183 = getelementptr inbounds i16, ptr %7, i64 %180
  %184 = load i16, ptr %183, align 2, !tbaa !13
  %185 = icmp eq i16 %182, %184
  br i1 %185, label %186, label %144

186:                                              ; preds = %179
  %187 = add nuw nsw i64 %138, 3
  %188 = getelementptr inbounds i16, ptr %5, i64 %187
  %189 = load i16, ptr %188, align 2, !tbaa !13
  %190 = getelementptr inbounds i16, ptr %7, i64 %187
  %191 = load i16, ptr %190, align 2, !tbaa !13
  %192 = icmp eq i16 %189, %191
  br i1 %192, label %193, label %144

193:                                              ; preds = %186
  %194 = add nuw nsw i64 %138, 4
  %195 = getelementptr inbounds i16, ptr %5, i64 %194
  %196 = load i16, ptr %195, align 2, !tbaa !13
  %197 = getelementptr inbounds i16, ptr %7, i64 %194
  %198 = load i16, ptr %197, align 2, !tbaa !13
  %199 = icmp eq i16 %196, %198
  br i1 %199, label %200, label %144

200:                                              ; preds = %193
  %201 = add nuw nsw i64 %138, 5
  %202 = icmp eq i64 %201, 10000
  br i1 %202, label %203, label %137, !llvm.loop !198

203:                                              ; preds = %200
  %204 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %205 = load i8, ptr %204, align 2, !tbaa !23, !range !40, !noundef !41
  %206 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %207 = load i64, ptr %206, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %208 unwind label %234

208:                                              ; preds = %203
  %209 = icmp ne i8 %205, 0
  %210 = icmp eq i64 %207, 0
  %211 = select i1 %209, i1 true, i1 %210
  br i1 %211, label %229, label %212, !prof !42

212:                                              ; preds = %208
  %213 = getelementptr inbounds i32, ptr %4, i64 9984
  %214 = getelementptr inbounds i32, ptr %4, i64 9985
  %215 = getelementptr inbounds i32, ptr %4, i64 9986
  %216 = getelementptr inbounds i32, ptr %4, i64 9987
  %217 = getelementptr inbounds i32, ptr %4, i64 9988
  %218 = getelementptr inbounds i32, ptr %4, i64 9989
  %219 = getelementptr inbounds i32, ptr %4, i64 9990
  %220 = getelementptr inbounds i32, ptr %4, i64 9991
  %221 = getelementptr inbounds i32, ptr %4, i64 9992
  %222 = getelementptr inbounds i32, ptr %4, i64 9993
  %223 = getelementptr inbounds i32, ptr %4, i64 9994
  %224 = getelementptr inbounds i32, ptr %4, i64 9995
  %225 = getelementptr inbounds i32, ptr %4, i64 9996
  %226 = getelementptr inbounds i32, ptr %4, i64 9997
  %227 = getelementptr inbounds i32, ptr %4, i64 9998
  %228 = getelementptr inbounds i32, ptr %4, i64 9999
  br label %236

229:                                              ; preds = %260, %208
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %230 unwind label %234

230:                                              ; preds = %229
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %231 = load ptr, ptr %3, align 8, !tbaa !5
  %232 = icmp eq ptr %231, null
  br i1 %232, label %320, label %233

233:                                              ; preds = %230
  call void @_ZdaPv(ptr noundef nonnull %231) #13
  br label %320

234:                                              ; preds = %229, %203
  %235 = landingpad { ptr, i32 }
          cleanup
  br label %311

236:                                              ; preds = %212, %260
  %237 = phi i64 [ %309, %260 ], [ %207, %212 ]
  %238 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %3, i64 %238) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %239 = load ptr, ptr %3, align 8, !tbaa !5
  br label %240

240:                                              ; preds = %240, %236
  %241 = phi i64 [ 0, %236 ], [ %258, %240 ]
  %242 = getelementptr inbounds i32, ptr %4, i64 %241
  %243 = load <8 x i32>, ptr %242, align 4, !tbaa !95
  %244 = getelementptr inbounds i32, ptr %242, i64 8
  %245 = load <8 x i32>, ptr %244, align 4, !tbaa !95
  %246 = getelementptr inbounds i32, ptr %242, i64 16
  %247 = load <8 x i32>, ptr %246, align 4, !tbaa !95
  %248 = getelementptr inbounds i32, ptr %242, i64 24
  %249 = load <8 x i32>, ptr %248, align 4, !tbaa !95
  %250 = trunc <8 x i32> %243 to <8 x i16>
  %251 = trunc <8 x i32> %245 to <8 x i16>
  %252 = trunc <8 x i32> %247 to <8 x i16>
  %253 = trunc <8 x i32> %249 to <8 x i16>
  %254 = getelementptr inbounds i16, ptr %239, i64 %241
  store <8 x i16> %250, ptr %254, align 2, !tbaa !13
  %255 = getelementptr inbounds i16, ptr %254, i64 8
  store <8 x i16> %251, ptr %255, align 2, !tbaa !13
  %256 = getelementptr inbounds i16, ptr %254, i64 16
  store <8 x i16> %252, ptr %256, align 2, !tbaa !13
  %257 = getelementptr inbounds i16, ptr %254, i64 24
  store <8 x i16> %253, ptr %257, align 2, !tbaa !13
  %258 = add nuw i64 %241, 32
  %259 = icmp eq i64 %258, 9984
  br i1 %259, label %260, label %240, !llvm.loop !199

260:                                              ; preds = %240
  %261 = load i32, ptr %213, align 4, !tbaa !95
  %262 = trunc i32 %261 to i16
  %263 = getelementptr inbounds i16, ptr %239, i64 9984
  store i16 %262, ptr %263, align 2, !tbaa !13
  %264 = load i32, ptr %214, align 4, !tbaa !95
  %265 = trunc i32 %264 to i16
  %266 = getelementptr inbounds i16, ptr %239, i64 9985
  store i16 %265, ptr %266, align 2, !tbaa !13
  %267 = load i32, ptr %215, align 4, !tbaa !95
  %268 = trunc i32 %267 to i16
  %269 = getelementptr inbounds i16, ptr %239, i64 9986
  store i16 %268, ptr %269, align 2, !tbaa !13
  %270 = load i32, ptr %216, align 4, !tbaa !95
  %271 = trunc i32 %270 to i16
  %272 = getelementptr inbounds i16, ptr %239, i64 9987
  store i16 %271, ptr %272, align 2, !tbaa !13
  %273 = load i32, ptr %217, align 4, !tbaa !95
  %274 = trunc i32 %273 to i16
  %275 = getelementptr inbounds i16, ptr %239, i64 9988
  store i16 %274, ptr %275, align 2, !tbaa !13
  %276 = load i32, ptr %218, align 4, !tbaa !95
  %277 = trunc i32 %276 to i16
  %278 = getelementptr inbounds i16, ptr %239, i64 9989
  store i16 %277, ptr %278, align 2, !tbaa !13
  %279 = load i32, ptr %219, align 4, !tbaa !95
  %280 = trunc i32 %279 to i16
  %281 = getelementptr inbounds i16, ptr %239, i64 9990
  store i16 %280, ptr %281, align 2, !tbaa !13
  %282 = load i32, ptr %220, align 4, !tbaa !95
  %283 = trunc i32 %282 to i16
  %284 = getelementptr inbounds i16, ptr %239, i64 9991
  store i16 %283, ptr %284, align 2, !tbaa !13
  %285 = load i32, ptr %221, align 4, !tbaa !95
  %286 = trunc i32 %285 to i16
  %287 = getelementptr inbounds i16, ptr %239, i64 9992
  store i16 %286, ptr %287, align 2, !tbaa !13
  %288 = load i32, ptr %222, align 4, !tbaa !95
  %289 = trunc i32 %288 to i16
  %290 = getelementptr inbounds i16, ptr %239, i64 9993
  store i16 %289, ptr %290, align 2, !tbaa !13
  %291 = load i32, ptr %223, align 4, !tbaa !95
  %292 = trunc i32 %291 to i16
  %293 = getelementptr inbounds i16, ptr %239, i64 9994
  store i16 %292, ptr %293, align 2, !tbaa !13
  %294 = load i32, ptr %224, align 4, !tbaa !95
  %295 = trunc i32 %294 to i16
  %296 = getelementptr inbounds i16, ptr %239, i64 9995
  store i16 %295, ptr %296, align 2, !tbaa !13
  %297 = load i32, ptr %225, align 4, !tbaa !95
  %298 = trunc i32 %297 to i16
  %299 = getelementptr inbounds i16, ptr %239, i64 9996
  store i16 %298, ptr %299, align 2, !tbaa !13
  %300 = load i32, ptr %226, align 4, !tbaa !95
  %301 = trunc i32 %300 to i16
  %302 = getelementptr inbounds i16, ptr %239, i64 9997
  store i16 %301, ptr %302, align 2, !tbaa !13
  %303 = load i32, ptr %227, align 4, !tbaa !95
  %304 = trunc i32 %303 to i16
  %305 = getelementptr inbounds i16, ptr %239, i64 9998
  store i16 %304, ptr %305, align 2, !tbaa !13
  %306 = load i32, ptr %228, align 4, !tbaa !95
  %307 = trunc i32 %306 to i16
  %308 = getelementptr inbounds i16, ptr %239, i64 9999
  store i16 %307, ptr %308, align 2, !tbaa !13
  %309 = add i64 %237, -1
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %229, label %236, !prof !42

311:                                              ; preds = %234, %170, %135
  %312 = phi { ptr, i32 } [ %171, %170 ], [ %235, %234 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %313 = load ptr, ptr %3, align 8, !tbaa !5
  %314 = icmp eq ptr %313, null
  br i1 %314, label %318, label %315

315:                                              ; preds = %311, %133
  %316 = phi { ptr, i32 } [ %134, %133 ], [ %312, %311 ]
  %317 = phi ptr [ %5, %133 ], [ %313, %311 ]
  call void @_ZdaPv(ptr noundef nonnull %317) #13
  br label %318

318:                                              ; preds = %315, %311, %131
  %319 = phi { ptr, i32 } [ %132, %131 ], [ %312, %311 ], [ %316, %315 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %319

320:                                              ; preds = %230, %233
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::unique_ptr", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %9, align 4, !tbaa !94
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i32, ptr %4, i64 %11
  store i32 %12, ptr %14, align 4, !tbaa !95
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !96

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i32, ptr %4, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !95
  %22 = trunc i32 %21 to i16
  %23 = getelementptr inbounds i16, ptr %7, i64 %19
  store i16 %22, ptr %23, align 2, !tbaa !13
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i32, ptr %4, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !95
  %27 = trunc i32 %26 to i16
  %28 = getelementptr inbounds i16, ptr %7, i64 %24
  store i16 %27, ptr %28, align 2, !tbaa !13
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i32, ptr %4, i64 %29
  %31 = load i32, ptr %30, align 4, !tbaa !95
  %32 = trunc i32 %31 to i16
  %33 = getelementptr inbounds i16, ptr %7, i64 %29
  store i16 %32, ptr %33, align 2, !tbaa !13
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i32, ptr %4, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !95
  %37 = trunc i32 %36 to i16
  %38 = getelementptr inbounds i16, ptr %7, i64 %34
  store i16 %37, ptr %38, align 2, !tbaa !13
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i32, ptr %4, i64 %39
  %41 = load i32, ptr %40, align 4, !tbaa !95
  %42 = trunc i32 %41 to i16
  %43 = getelementptr inbounds i16, ptr %7, i64 %39
  store i16 %42, ptr %43, align 2, !tbaa !13
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !196

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i32, ptr %4, i64 %47
  %49 = load <16 x i32>, ptr %48, align 4, !tbaa !95
  %50 = getelementptr inbounds i32, ptr %48, i64 16
  %51 = load <16 x i32>, ptr %50, align 4, !tbaa !95
  %52 = getelementptr inbounds i32, ptr %48, i64 32
  %53 = load <16 x i32>, ptr %52, align 4, !tbaa !95
  %54 = getelementptr inbounds i32, ptr %48, i64 48
  %55 = load <16 x i32>, ptr %54, align 4, !tbaa !95
  %56 = trunc <16 x i32> %49 to <16 x i16>
  %57 = trunc <16 x i32> %51 to <16 x i16>
  %58 = trunc <16 x i32> %53 to <16 x i16>
  %59 = trunc <16 x i32> %55 to <16 x i16>
  %60 = getelementptr inbounds i16, ptr %5, i64 %47
  store <16 x i16> %56, ptr %60, align 2, !tbaa !13
  %61 = getelementptr inbounds i16, ptr %60, i64 16
  store <16 x i16> %57, ptr %61, align 2, !tbaa !13
  %62 = getelementptr inbounds i16, ptr %60, i64 32
  store <16 x i16> %58, ptr %62, align 2, !tbaa !13
  %63 = getelementptr inbounds i16, ptr %60, i64 48
  store <16 x i16> %59, ptr %63, align 2, !tbaa !13
  %64 = add nuw i64 %47, 64
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !200

66:                                               ; preds = %46
  %67 = getelementptr inbounds i32, ptr %4, i64 9984
  %68 = load i32, ptr %67, align 4, !tbaa !95
  %69 = trunc i32 %68 to i16
  %70 = getelementptr inbounds i16, ptr %5, i64 9984
  store i16 %69, ptr %70, align 2, !tbaa !13
  %71 = getelementptr inbounds i32, ptr %4, i64 9985
  %72 = load i32, ptr %71, align 4, !tbaa !95
  %73 = trunc i32 %72 to i16
  %74 = getelementptr inbounds i16, ptr %5, i64 9985
  store i16 %73, ptr %74, align 2, !tbaa !13
  %75 = getelementptr inbounds i32, ptr %4, i64 9986
  %76 = load i32, ptr %75, align 4, !tbaa !95
  %77 = trunc i32 %76 to i16
  %78 = getelementptr inbounds i16, ptr %5, i64 9986
  store i16 %77, ptr %78, align 2, !tbaa !13
  %79 = getelementptr inbounds i32, ptr %4, i64 9987
  %80 = load i32, ptr %79, align 4, !tbaa !95
  %81 = trunc i32 %80 to i16
  %82 = getelementptr inbounds i16, ptr %5, i64 9987
  store i16 %81, ptr %82, align 2, !tbaa !13
  %83 = getelementptr inbounds i32, ptr %4, i64 9988
  %84 = load i32, ptr %83, align 4, !tbaa !95
  %85 = trunc i32 %84 to i16
  %86 = getelementptr inbounds i16, ptr %5, i64 9988
  store i16 %85, ptr %86, align 2, !tbaa !13
  %87 = getelementptr inbounds i32, ptr %4, i64 9989
  %88 = load i32, ptr %87, align 4, !tbaa !95
  %89 = trunc i32 %88 to i16
  %90 = getelementptr inbounds i16, ptr %5, i64 9989
  store i16 %89, ptr %90, align 2, !tbaa !13
  %91 = getelementptr inbounds i32, ptr %4, i64 9990
  %92 = load i32, ptr %91, align 4, !tbaa !95
  %93 = trunc i32 %92 to i16
  %94 = getelementptr inbounds i16, ptr %5, i64 9990
  store i16 %93, ptr %94, align 2, !tbaa !13
  %95 = getelementptr inbounds i32, ptr %4, i64 9991
  %96 = load i32, ptr %95, align 4, !tbaa !95
  %97 = trunc i32 %96 to i16
  %98 = getelementptr inbounds i16, ptr %5, i64 9991
  store i16 %97, ptr %98, align 2, !tbaa !13
  %99 = getelementptr inbounds i32, ptr %4, i64 9992
  %100 = load i32, ptr %99, align 4, !tbaa !95
  %101 = trunc i32 %100 to i16
  %102 = getelementptr inbounds i16, ptr %5, i64 9992
  store i16 %101, ptr %102, align 2, !tbaa !13
  %103 = getelementptr inbounds i32, ptr %4, i64 9993
  %104 = load i32, ptr %103, align 4, !tbaa !95
  %105 = trunc i32 %104 to i16
  %106 = getelementptr inbounds i16, ptr %5, i64 9993
  store i16 %105, ptr %106, align 2, !tbaa !13
  %107 = getelementptr inbounds i32, ptr %4, i64 9994
  %108 = load i32, ptr %107, align 4, !tbaa !95
  %109 = trunc i32 %108 to i16
  %110 = getelementptr inbounds i16, ptr %5, i64 9994
  store i16 %109, ptr %110, align 2, !tbaa !13
  %111 = getelementptr inbounds i32, ptr %4, i64 9995
  %112 = load i32, ptr %111, align 4, !tbaa !95
  %113 = trunc i32 %112 to i16
  %114 = getelementptr inbounds i16, ptr %5, i64 9995
  store i16 %113, ptr %114, align 2, !tbaa !13
  %115 = getelementptr inbounds i32, ptr %4, i64 9996
  %116 = load i32, ptr %115, align 4, !tbaa !95
  %117 = trunc i32 %116 to i16
  %118 = getelementptr inbounds i16, ptr %5, i64 9996
  store i16 %117, ptr %118, align 2, !tbaa !13
  %119 = getelementptr inbounds i32, ptr %4, i64 9997
  %120 = load i32, ptr %119, align 4, !tbaa !95
  %121 = trunc i32 %120 to i16
  %122 = getelementptr inbounds i16, ptr %5, i64 9997
  store i16 %121, ptr %122, align 2, !tbaa !13
  %123 = getelementptr inbounds i32, ptr %4, i64 9998
  %124 = load i32, ptr %123, align 4, !tbaa !95
  %125 = trunc i32 %124 to i16
  %126 = getelementptr inbounds i16, ptr %5, i64 9998
  store i16 %125, ptr %126, align 2, !tbaa !13
  %127 = getelementptr inbounds i32, ptr %4, i64 9999
  %128 = load i32, ptr %127, align 4, !tbaa !95
  %129 = trunc i32 %128 to i16
  %130 = getelementptr inbounds i16, ptr %5, i64 9999
  store i16 %129, ptr %130, align 2, !tbaa !13
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %318

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %315

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %311

137:                                              ; preds = %200, %66
  %138 = phi i64 [ 0, %66 ], [ %201, %200 ]
  %139 = getelementptr inbounds i16, ptr %5, i64 %138
  %140 = load i16, ptr %139, align 2, !tbaa !13
  %141 = getelementptr inbounds i16, ptr %7, i64 %138
  %142 = load i16, ptr %141, align 2, !tbaa !13
  %143 = icmp eq i16 %140, %142
  br i1 %143, label %172, label %144

144:                                              ; preds = %193, %186, %179, %172, %137
  %145 = phi i64 [ %138, %137 ], [ %173, %172 ], [ %180, %179 ], [ %187, %186 ], [ %194, %193 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i16, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %170

149:                                              ; preds = %144
  %150 = getelementptr inbounds i32, ptr %4, i64 %146
  %151 = load i32, ptr %150, align 4, !tbaa !95
  %152 = zext i32 %151 to i64
  %153 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %152)
          to label %154 unwind label %170

154:                                              ; preds = %149
  %155 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %153, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %156 unwind label %170

156:                                              ; preds = %154
  %157 = getelementptr inbounds i16, ptr %5, i64 %146
  %158 = load i16, ptr %157, align 2, !tbaa !13
  %159 = zext i16 %158 to i64
  %160 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %153, i64 noundef %159)
          to label %161 unwind label %170

161:                                              ; preds = %156
  %162 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %160, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %163 unwind label %170

163:                                              ; preds = %161
  %164 = load i16, ptr %147, align 2, !tbaa !13
  %165 = zext i16 %164 to i64
  %166 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %160, i64 noundef %165)
          to label %167 unwind label %170

167:                                              ; preds = %163
  %168 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %166, ptr noundef nonnull @.str.149)
          to label %169 unwind label %170

169:                                              ; preds = %167
  call void @exit(i32 noundef 1) #12
  unreachable

170:                                              ; preds = %167, %163, %161, %156, %154, %149, %144
  %171 = landingpad { ptr, i32 }
          cleanup
  br label %311

172:                                              ; preds = %137
  %173 = add nuw nsw i64 %138, 1
  %174 = getelementptr inbounds i16, ptr %5, i64 %173
  %175 = load i16, ptr %174, align 2, !tbaa !13
  %176 = getelementptr inbounds i16, ptr %7, i64 %173
  %177 = load i16, ptr %176, align 2, !tbaa !13
  %178 = icmp eq i16 %175, %177
  br i1 %178, label %179, label %144

179:                                              ; preds = %172
  %180 = add nuw nsw i64 %138, 2
  %181 = getelementptr inbounds i16, ptr %5, i64 %180
  %182 = load i16, ptr %181, align 2, !tbaa !13
  %183 = getelementptr inbounds i16, ptr %7, i64 %180
  %184 = load i16, ptr %183, align 2, !tbaa !13
  %185 = icmp eq i16 %182, %184
  br i1 %185, label %186, label %144

186:                                              ; preds = %179
  %187 = add nuw nsw i64 %138, 3
  %188 = getelementptr inbounds i16, ptr %5, i64 %187
  %189 = load i16, ptr %188, align 2, !tbaa !13
  %190 = getelementptr inbounds i16, ptr %7, i64 %187
  %191 = load i16, ptr %190, align 2, !tbaa !13
  %192 = icmp eq i16 %189, %191
  br i1 %192, label %193, label %144

193:                                              ; preds = %186
  %194 = add nuw nsw i64 %138, 4
  %195 = getelementptr inbounds i16, ptr %5, i64 %194
  %196 = load i16, ptr %195, align 2, !tbaa !13
  %197 = getelementptr inbounds i16, ptr %7, i64 %194
  %198 = load i16, ptr %197, align 2, !tbaa !13
  %199 = icmp eq i16 %196, %198
  br i1 %199, label %200, label %144

200:                                              ; preds = %193
  %201 = add nuw nsw i64 %138, 5
  %202 = icmp eq i64 %201, 10000
  br i1 %202, label %203, label %137, !llvm.loop !198

203:                                              ; preds = %200
  %204 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %205 = load i8, ptr %204, align 2, !tbaa !23, !range !40, !noundef !41
  %206 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %207 = load i64, ptr %206, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %208 unwind label %234

208:                                              ; preds = %203
  %209 = icmp ne i8 %205, 0
  %210 = icmp eq i64 %207, 0
  %211 = select i1 %209, i1 true, i1 %210
  br i1 %211, label %229, label %212, !prof !42

212:                                              ; preds = %208
  %213 = getelementptr inbounds i32, ptr %4, i64 9984
  %214 = getelementptr inbounds i32, ptr %4, i64 9985
  %215 = getelementptr inbounds i32, ptr %4, i64 9986
  %216 = getelementptr inbounds i32, ptr %4, i64 9987
  %217 = getelementptr inbounds i32, ptr %4, i64 9988
  %218 = getelementptr inbounds i32, ptr %4, i64 9989
  %219 = getelementptr inbounds i32, ptr %4, i64 9990
  %220 = getelementptr inbounds i32, ptr %4, i64 9991
  %221 = getelementptr inbounds i32, ptr %4, i64 9992
  %222 = getelementptr inbounds i32, ptr %4, i64 9993
  %223 = getelementptr inbounds i32, ptr %4, i64 9994
  %224 = getelementptr inbounds i32, ptr %4, i64 9995
  %225 = getelementptr inbounds i32, ptr %4, i64 9996
  %226 = getelementptr inbounds i32, ptr %4, i64 9997
  %227 = getelementptr inbounds i32, ptr %4, i64 9998
  %228 = getelementptr inbounds i32, ptr %4, i64 9999
  br label %236

229:                                              ; preds = %260, %208
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %230 unwind label %234

230:                                              ; preds = %229
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %231 = load ptr, ptr %3, align 8, !tbaa !5
  %232 = icmp eq ptr %231, null
  br i1 %232, label %320, label %233

233:                                              ; preds = %230
  call void @_ZdaPv(ptr noundef nonnull %231) #13
  br label %320

234:                                              ; preds = %229, %203
  %235 = landingpad { ptr, i32 }
          cleanup
  br label %311

236:                                              ; preds = %212, %260
  %237 = phi i64 [ %309, %260 ], [ %207, %212 ]
  %238 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %3, i64 %238) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %239 = load ptr, ptr %3, align 8, !tbaa !5
  br label %240

240:                                              ; preds = %240, %236
  %241 = phi i64 [ 0, %236 ], [ %258, %240 ]
  %242 = getelementptr inbounds i32, ptr %4, i64 %241
  %243 = load <16 x i32>, ptr %242, align 4, !tbaa !95
  %244 = getelementptr inbounds i32, ptr %242, i64 16
  %245 = load <16 x i32>, ptr %244, align 4, !tbaa !95
  %246 = getelementptr inbounds i32, ptr %242, i64 32
  %247 = load <16 x i32>, ptr %246, align 4, !tbaa !95
  %248 = getelementptr inbounds i32, ptr %242, i64 48
  %249 = load <16 x i32>, ptr %248, align 4, !tbaa !95
  %250 = trunc <16 x i32> %243 to <16 x i16>
  %251 = trunc <16 x i32> %245 to <16 x i16>
  %252 = trunc <16 x i32> %247 to <16 x i16>
  %253 = trunc <16 x i32> %249 to <16 x i16>
  %254 = getelementptr inbounds i16, ptr %239, i64 %241
  store <16 x i16> %250, ptr %254, align 2, !tbaa !13
  %255 = getelementptr inbounds i16, ptr %254, i64 16
  store <16 x i16> %251, ptr %255, align 2, !tbaa !13
  %256 = getelementptr inbounds i16, ptr %254, i64 32
  store <16 x i16> %252, ptr %256, align 2, !tbaa !13
  %257 = getelementptr inbounds i16, ptr %254, i64 48
  store <16 x i16> %253, ptr %257, align 2, !tbaa !13
  %258 = add nuw i64 %241, 64
  %259 = icmp eq i64 %258, 9984
  br i1 %259, label %260, label %240, !llvm.loop !201

260:                                              ; preds = %240
  %261 = load i32, ptr %213, align 4, !tbaa !95
  %262 = trunc i32 %261 to i16
  %263 = getelementptr inbounds i16, ptr %239, i64 9984
  store i16 %262, ptr %263, align 2, !tbaa !13
  %264 = load i32, ptr %214, align 4, !tbaa !95
  %265 = trunc i32 %264 to i16
  %266 = getelementptr inbounds i16, ptr %239, i64 9985
  store i16 %265, ptr %266, align 2, !tbaa !13
  %267 = load i32, ptr %215, align 4, !tbaa !95
  %268 = trunc i32 %267 to i16
  %269 = getelementptr inbounds i16, ptr %239, i64 9986
  store i16 %268, ptr %269, align 2, !tbaa !13
  %270 = load i32, ptr %216, align 4, !tbaa !95
  %271 = trunc i32 %270 to i16
  %272 = getelementptr inbounds i16, ptr %239, i64 9987
  store i16 %271, ptr %272, align 2, !tbaa !13
  %273 = load i32, ptr %217, align 4, !tbaa !95
  %274 = trunc i32 %273 to i16
  %275 = getelementptr inbounds i16, ptr %239, i64 9988
  store i16 %274, ptr %275, align 2, !tbaa !13
  %276 = load i32, ptr %218, align 4, !tbaa !95
  %277 = trunc i32 %276 to i16
  %278 = getelementptr inbounds i16, ptr %239, i64 9989
  store i16 %277, ptr %278, align 2, !tbaa !13
  %279 = load i32, ptr %219, align 4, !tbaa !95
  %280 = trunc i32 %279 to i16
  %281 = getelementptr inbounds i16, ptr %239, i64 9990
  store i16 %280, ptr %281, align 2, !tbaa !13
  %282 = load i32, ptr %220, align 4, !tbaa !95
  %283 = trunc i32 %282 to i16
  %284 = getelementptr inbounds i16, ptr %239, i64 9991
  store i16 %283, ptr %284, align 2, !tbaa !13
  %285 = load i32, ptr %221, align 4, !tbaa !95
  %286 = trunc i32 %285 to i16
  %287 = getelementptr inbounds i16, ptr %239, i64 9992
  store i16 %286, ptr %287, align 2, !tbaa !13
  %288 = load i32, ptr %222, align 4, !tbaa !95
  %289 = trunc i32 %288 to i16
  %290 = getelementptr inbounds i16, ptr %239, i64 9993
  store i16 %289, ptr %290, align 2, !tbaa !13
  %291 = load i32, ptr %223, align 4, !tbaa !95
  %292 = trunc i32 %291 to i16
  %293 = getelementptr inbounds i16, ptr %239, i64 9994
  store i16 %292, ptr %293, align 2, !tbaa !13
  %294 = load i32, ptr %224, align 4, !tbaa !95
  %295 = trunc i32 %294 to i16
  %296 = getelementptr inbounds i16, ptr %239, i64 9995
  store i16 %295, ptr %296, align 2, !tbaa !13
  %297 = load i32, ptr %225, align 4, !tbaa !95
  %298 = trunc i32 %297 to i16
  %299 = getelementptr inbounds i16, ptr %239, i64 9996
  store i16 %298, ptr %299, align 2, !tbaa !13
  %300 = load i32, ptr %226, align 4, !tbaa !95
  %301 = trunc i32 %300 to i16
  %302 = getelementptr inbounds i16, ptr %239, i64 9997
  store i16 %301, ptr %302, align 2, !tbaa !13
  %303 = load i32, ptr %227, align 4, !tbaa !95
  %304 = trunc i32 %303 to i16
  %305 = getelementptr inbounds i16, ptr %239, i64 9998
  store i16 %304, ptr %305, align 2, !tbaa !13
  %306 = load i32, ptr %228, align 4, !tbaa !95
  %307 = trunc i32 %306 to i16
  %308 = getelementptr inbounds i16, ptr %239, i64 9999
  store i16 %307, ptr %308, align 2, !tbaa !13
  %309 = add i64 %237, -1
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %229, label %236, !prof !42

311:                                              ; preds = %234, %170, %135
  %312 = phi { ptr, i32 } [ %171, %170 ], [ %235, %234 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %313 = load ptr, ptr %3, align 8, !tbaa !5
  %314 = icmp eq ptr %313, null
  br i1 %314, label %318, label %315

315:                                              ; preds = %311, %133
  %316 = phi { ptr, i32 } [ %134, %133 ], [ %312, %311 ]
  %317 = phi ptr [ %5, %133 ], [ %313, %311 ]
  call void @_ZdaPv(ptr noundef nonnull %317) #13
  br label %318

318:                                              ; preds = %315, %311, %131
  %319 = phi { ptr, i32 } [ %132, %131 ], [ %312, %311 ], [ %316, %315 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %319

320:                                              ; preds = %230, %233
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z54benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::unique_ptr", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %6 unwind label %67

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %8 unwind label %69

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %9, align 4, !tbaa !94
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %13 unwind label %71

13:                                               ; preds = %10
  %14 = getelementptr inbounds i32, ptr %4, i64 %11
  store i32 %12, ptr %14, align 4, !tbaa !95
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !96

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i32, ptr %4, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !95
  %22 = trunc i32 %21 to i16
  %23 = getelementptr inbounds i16, ptr %7, i64 %19
  store i16 %22, ptr %23, align 2, !tbaa !13
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i32, ptr %4, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !95
  %27 = trunc i32 %26 to i16
  %28 = getelementptr inbounds i16, ptr %7, i64 %24
  store i16 %27, ptr %28, align 2, !tbaa !13
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i32, ptr %4, i64 %29
  %31 = load i32, ptr %30, align 4, !tbaa !95
  %32 = trunc i32 %31 to i16
  %33 = getelementptr inbounds i16, ptr %7, i64 %29
  store i16 %32, ptr %33, align 2, !tbaa !13
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i32, ptr %4, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !95
  %37 = trunc i32 %36 to i16
  %38 = getelementptr inbounds i16, ptr %7, i64 %34
  store i16 %37, ptr %38, align 2, !tbaa !13
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i32, ptr %4, i64 %39
  %41 = load i32, ptr %40, align 4, !tbaa !95
  %42 = trunc i32 %41 to i16
  %43 = getelementptr inbounds i16, ptr %7, i64 %39
  store i16 %42, ptr %43, align 2, !tbaa !13
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !196

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %65, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i32, ptr %4, i64 %47
  %49 = load <4 x i32>, ptr %48, align 4, !tbaa !95
  %50 = getelementptr inbounds i32, ptr %48, i64 4
  %51 = load <4 x i32>, ptr %50, align 4, !tbaa !95
  %52 = trunc <4 x i32> %49 to <4 x i16>
  %53 = trunc <4 x i32> %51 to <4 x i16>
  %54 = getelementptr inbounds i16, ptr %5, i64 %47
  store <4 x i16> %52, ptr %54, align 2, !tbaa !13
  %55 = getelementptr inbounds i16, ptr %54, i64 4
  store <4 x i16> %53, ptr %55, align 2, !tbaa !13
  %56 = or i64 %47, 8
  %57 = getelementptr inbounds i32, ptr %4, i64 %56
  %58 = load <4 x i32>, ptr %57, align 4, !tbaa !95
  %59 = getelementptr inbounds i32, ptr %57, i64 4
  %60 = load <4 x i32>, ptr %59, align 4, !tbaa !95
  %61 = trunc <4 x i32> %58 to <4 x i16>
  %62 = trunc <4 x i32> %60 to <4 x i16>
  %63 = getelementptr inbounds i16, ptr %5, i64 %56
  store <4 x i16> %61, ptr %63, align 2, !tbaa !13
  %64 = getelementptr inbounds i16, ptr %63, i64 4
  store <4 x i16> %62, ptr %64, align 2, !tbaa !13
  %65 = add nuw nsw i64 %47, 16
  %66 = icmp eq i64 %65, 10000
  br i1 %66, label %73, label %46, !llvm.loop !202

67:                                               ; preds = %1
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %190

69:                                               ; preds = %6
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %187

71:                                               ; preds = %10
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %183

73:                                               ; preds = %46, %136
  %74 = phi i64 [ %137, %136 ], [ 0, %46 ]
  %75 = getelementptr inbounds i16, ptr %5, i64 %74
  %76 = load i16, ptr %75, align 2, !tbaa !13
  %77 = getelementptr inbounds i16, ptr %7, i64 %74
  %78 = load i16, ptr %77, align 2, !tbaa !13
  %79 = icmp eq i16 %76, %78
  br i1 %79, label %108, label %80

80:                                               ; preds = %129, %122, %115, %108, %73
  %81 = phi i64 [ %74, %73 ], [ %109, %108 ], [ %116, %115 ], [ %123, %122 ], [ %130, %129 ]
  %82 = and i64 %81, 4294967295
  %83 = getelementptr inbounds i16, ptr %7, i64 %82
  %84 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %85 unwind label %106

85:                                               ; preds = %80
  %86 = getelementptr inbounds i32, ptr %4, i64 %82
  %87 = load i32, ptr %86, align 4, !tbaa !95
  %88 = zext i32 %87 to i64
  %89 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %88)
          to label %90 unwind label %106

90:                                               ; preds = %85
  %91 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %89, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %92 unwind label %106

92:                                               ; preds = %90
  %93 = getelementptr inbounds i16, ptr %5, i64 %82
  %94 = load i16, ptr %93, align 2, !tbaa !13
  %95 = zext i16 %94 to i64
  %96 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %89, i64 noundef %95)
          to label %97 unwind label %106

97:                                               ; preds = %92
  %98 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %96, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %99 unwind label %106

99:                                               ; preds = %97
  %100 = load i16, ptr %83, align 2, !tbaa !13
  %101 = zext i16 %100 to i64
  %102 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %96, i64 noundef %101)
          to label %103 unwind label %106

103:                                              ; preds = %99
  %104 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %102, ptr noundef nonnull @.str.149)
          to label %105 unwind label %106

105:                                              ; preds = %103
  call void @exit(i32 noundef 1) #12
  unreachable

106:                                              ; preds = %103, %99, %97, %92, %90, %85, %80
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %183

108:                                              ; preds = %73
  %109 = add nuw nsw i64 %74, 1
  %110 = getelementptr inbounds i16, ptr %5, i64 %109
  %111 = load i16, ptr %110, align 2, !tbaa !13
  %112 = getelementptr inbounds i16, ptr %7, i64 %109
  %113 = load i16, ptr %112, align 2, !tbaa !13
  %114 = icmp eq i16 %111, %113
  br i1 %114, label %115, label %80

115:                                              ; preds = %108
  %116 = add nuw nsw i64 %74, 2
  %117 = getelementptr inbounds i16, ptr %5, i64 %116
  %118 = load i16, ptr %117, align 2, !tbaa !13
  %119 = getelementptr inbounds i16, ptr %7, i64 %116
  %120 = load i16, ptr %119, align 2, !tbaa !13
  %121 = icmp eq i16 %118, %120
  br i1 %121, label %122, label %80

122:                                              ; preds = %115
  %123 = add nuw nsw i64 %74, 3
  %124 = getelementptr inbounds i16, ptr %5, i64 %123
  %125 = load i16, ptr %124, align 2, !tbaa !13
  %126 = getelementptr inbounds i16, ptr %7, i64 %123
  %127 = load i16, ptr %126, align 2, !tbaa !13
  %128 = icmp eq i16 %125, %127
  br i1 %128, label %129, label %80

129:                                              ; preds = %122
  %130 = add nuw nsw i64 %74, 4
  %131 = getelementptr inbounds i16, ptr %5, i64 %130
  %132 = load i16, ptr %131, align 2, !tbaa !13
  %133 = getelementptr inbounds i16, ptr %7, i64 %130
  %134 = load i16, ptr %133, align 2, !tbaa !13
  %135 = icmp eq i16 %132, %134
  br i1 %135, label %136, label %80

136:                                              ; preds = %129
  %137 = add nuw nsw i64 %74, 5
  %138 = icmp eq i64 %137, 10000
  br i1 %138, label %139, label %73, !llvm.loop !198

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %141 = load i8, ptr %140, align 2, !tbaa !23, !range !40, !noundef !41
  %142 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %143 = load i64, ptr %142, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %144 unwind label %153

144:                                              ; preds = %139
  %145 = icmp ne i8 %141, 0
  %146 = icmp eq i64 %143, 0
  %147 = select i1 %145, i1 true, i1 %146
  br i1 %147, label %148, label %155, !prof !42

148:                                              ; preds = %180, %144
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %149 unwind label %153

149:                                              ; preds = %148
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %150 = load ptr, ptr %3, align 8, !tbaa !5
  %151 = icmp eq ptr %150, null
  br i1 %151, label %192, label %152

152:                                              ; preds = %149
  call void @_ZdaPv(ptr noundef nonnull %150) #13
  br label %192

153:                                              ; preds = %148, %139
  %154 = landingpad { ptr, i32 }
          cleanup
  br label %183

155:                                              ; preds = %144, %180
  %156 = phi i64 [ %181, %180 ], [ %143, %144 ]
  %157 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %3, i64 %157) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %158 = load ptr, ptr %3, align 8, !tbaa !5
  br label %159

159:                                              ; preds = %159, %155
  %160 = phi i64 [ 0, %155 ], [ %178, %159 ]
  %161 = getelementptr inbounds i32, ptr %4, i64 %160
  %162 = load <4 x i32>, ptr %161, align 4, !tbaa !95
  %163 = getelementptr inbounds i32, ptr %161, i64 4
  %164 = load <4 x i32>, ptr %163, align 4, !tbaa !95
  %165 = trunc <4 x i32> %162 to <4 x i16>
  %166 = trunc <4 x i32> %164 to <4 x i16>
  %167 = getelementptr inbounds i16, ptr %158, i64 %160
  store <4 x i16> %165, ptr %167, align 2, !tbaa !13
  %168 = getelementptr inbounds i16, ptr %167, i64 4
  store <4 x i16> %166, ptr %168, align 2, !tbaa !13
  %169 = or i64 %160, 8
  %170 = getelementptr inbounds i32, ptr %4, i64 %169
  %171 = load <4 x i32>, ptr %170, align 4, !tbaa !95
  %172 = getelementptr inbounds i32, ptr %170, i64 4
  %173 = load <4 x i32>, ptr %172, align 4, !tbaa !95
  %174 = trunc <4 x i32> %171 to <4 x i16>
  %175 = trunc <4 x i32> %173 to <4 x i16>
  %176 = getelementptr inbounds i16, ptr %158, i64 %169
  store <4 x i16> %174, ptr %176, align 2, !tbaa !13
  %177 = getelementptr inbounds i16, ptr %176, i64 4
  store <4 x i16> %175, ptr %177, align 2, !tbaa !13
  %178 = add nuw nsw i64 %160, 16
  %179 = icmp eq i64 %178, 10000
  br i1 %179, label %180, label %159, !llvm.loop !203

180:                                              ; preds = %159
  %181 = add i64 %156, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %148, label %155, !prof !42

183:                                              ; preds = %153, %106, %71
  %184 = phi { ptr, i32 } [ %107, %106 ], [ %154, %153 ], [ %72, %71 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %185 = load ptr, ptr %3, align 8, !tbaa !5
  %186 = icmp eq ptr %185, null
  br i1 %186, label %190, label %187

187:                                              ; preds = %183, %69
  %188 = phi { ptr, i32 } [ %70, %69 ], [ %184, %183 ]
  %189 = phi ptr [ %5, %69 ], [ %185, %183 ]
  call void @_ZdaPv(ptr noundef nonnull %189) #13
  br label %190

190:                                              ; preds = %187, %183, %67
  %191 = phi { ptr, i32 } [ %68, %67 ], [ %184, %183 ], [ %188, %187 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %191

192:                                              ; preds = %149, %152
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::uniform_int_distribution.54", align 4
  %4 = alloca %"class.std::unique_ptr", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %7 unwind label %56

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  store i32 0, ptr %3, align 4, !tbaa !92
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %3, i64 0, i32 1
  store i32 -1, ptr %8, align 4, !tbaa !94
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %3)
          to label %12 unwind label %60

12:                                               ; preds = %9
  %13 = getelementptr inbounds i32, ptr %5, i64 %10
  store i32 %11, ptr %13, align 4, !tbaa !95
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !96

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %17, align 2, !tbaa !12
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %21 unwind label %58

21:                                               ; preds = %18
  %22 = getelementptr inbounds i16, ptr %6, i64 %19
  store i16 %20, ptr %22, align 2, !tbaa !13
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !14

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %177

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %51, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr inbounds i32, ptr %5, i64 9984
  %36 = getelementptr inbounds i32, ptr %5, i64 9985
  %37 = getelementptr inbounds i32, ptr %5, i64 9986
  %38 = getelementptr inbounds i32, ptr %5, i64 9987
  %39 = getelementptr inbounds i32, ptr %5, i64 9988
  %40 = getelementptr inbounds i32, ptr %5, i64 9989
  %41 = getelementptr inbounds i32, ptr %5, i64 9990
  %42 = getelementptr inbounds i32, ptr %5, i64 9991
  %43 = getelementptr inbounds i32, ptr %5, i64 9992
  %44 = getelementptr inbounds i32, ptr %5, i64 9993
  %45 = getelementptr inbounds i32, ptr %5, i64 9994
  %46 = getelementptr inbounds i32, ptr %5, i64 9995
  %47 = getelementptr inbounds i32, ptr %5, i64 9996
  %48 = getelementptr inbounds i32, ptr %5, i64 9997
  %49 = getelementptr inbounds i32, ptr %5, i64 9998
  %50 = getelementptr inbounds i32, ptr %5, i64 9999
  br label %62

51:                                               ; preds = %94, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %52 unwind label %177

52:                                               ; preds = %51
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = icmp eq ptr %53, null
  br i1 %54, label %186, label %55

55:                                               ; preds = %52
  call void @_ZdaPv(ptr noundef nonnull %53) #13
  br label %186

56:                                               ; preds = %1
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %184

58:                                               ; preds = %18
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %181

60:                                               ; preds = %9
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %181

62:                                               ; preds = %34, %94
  %63 = phi i64 [ %175, %94 ], [ %29, %34 ]
  %64 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %4, i64 %64) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %65 = load ptr, ptr %4, align 8, !tbaa !5
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i64 [ 0, %62 ], [ %92, %66 ]
  %68 = getelementptr inbounds i32, ptr %5, i64 %67
  %69 = load <8 x i32>, ptr %68, align 4, !tbaa !95
  %70 = getelementptr inbounds i32, ptr %68, i64 8
  %71 = load <8 x i32>, ptr %70, align 4, !tbaa !95
  %72 = getelementptr inbounds i32, ptr %68, i64 16
  %73 = load <8 x i32>, ptr %72, align 4, !tbaa !95
  %74 = getelementptr inbounds i32, ptr %68, i64 24
  %75 = load <8 x i32>, ptr %74, align 4, !tbaa !95
  %76 = getelementptr inbounds i16, ptr %65, i64 %67
  %77 = load <8 x i16>, ptr %76, align 2, !tbaa !13
  %78 = getelementptr inbounds i16, ptr %76, i64 8
  %79 = load <8 x i16>, ptr %78, align 2, !tbaa !13
  %80 = getelementptr inbounds i16, ptr %76, i64 16
  %81 = load <8 x i16>, ptr %80, align 2, !tbaa !13
  %82 = getelementptr inbounds i16, ptr %76, i64 24
  %83 = load <8 x i16>, ptr %82, align 2, !tbaa !13
  %84 = trunc <8 x i32> %69 to <8 x i16>
  %85 = trunc <8 x i32> %71 to <8 x i16>
  %86 = trunc <8 x i32> %73 to <8 x i16>
  %87 = trunc <8 x i32> %75 to <8 x i16>
  %88 = add <8 x i16> %77, %84
  %89 = add <8 x i16> %79, %85
  %90 = add <8 x i16> %81, %86
  %91 = add <8 x i16> %83, %87
  store <8 x i16> %88, ptr %76, align 2, !tbaa !13
  store <8 x i16> %89, ptr %78, align 2, !tbaa !13
  store <8 x i16> %90, ptr %80, align 2, !tbaa !13
  store <8 x i16> %91, ptr %82, align 2, !tbaa !13
  %92 = add nuw i64 %67, 32
  %93 = icmp eq i64 %92, 9984
  br i1 %93, label %94, label %66, !llvm.loop !204

94:                                               ; preds = %66
  %95 = load i32, ptr %35, align 4, !tbaa !95
  %96 = getelementptr inbounds i16, ptr %65, i64 9984
  %97 = load i16, ptr %96, align 2, !tbaa !13
  %98 = trunc i32 %95 to i16
  %99 = add i16 %97, %98
  store i16 %99, ptr %96, align 2, !tbaa !13
  %100 = load i32, ptr %36, align 4, !tbaa !95
  %101 = getelementptr inbounds i16, ptr %65, i64 9985
  %102 = load i16, ptr %101, align 2, !tbaa !13
  %103 = trunc i32 %100 to i16
  %104 = add i16 %102, %103
  store i16 %104, ptr %101, align 2, !tbaa !13
  %105 = load i32, ptr %37, align 4, !tbaa !95
  %106 = getelementptr inbounds i16, ptr %65, i64 9986
  %107 = load i16, ptr %106, align 2, !tbaa !13
  %108 = trunc i32 %105 to i16
  %109 = add i16 %107, %108
  store i16 %109, ptr %106, align 2, !tbaa !13
  %110 = load i32, ptr %38, align 4, !tbaa !95
  %111 = getelementptr inbounds i16, ptr %65, i64 9987
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = trunc i32 %110 to i16
  %114 = add i16 %112, %113
  store i16 %114, ptr %111, align 2, !tbaa !13
  %115 = load i32, ptr %39, align 4, !tbaa !95
  %116 = getelementptr inbounds i16, ptr %65, i64 9988
  %117 = load i16, ptr %116, align 2, !tbaa !13
  %118 = trunc i32 %115 to i16
  %119 = add i16 %117, %118
  store i16 %119, ptr %116, align 2, !tbaa !13
  %120 = load i32, ptr %40, align 4, !tbaa !95
  %121 = getelementptr inbounds i16, ptr %65, i64 9989
  %122 = load i16, ptr %121, align 2, !tbaa !13
  %123 = trunc i32 %120 to i16
  %124 = add i16 %122, %123
  store i16 %124, ptr %121, align 2, !tbaa !13
  %125 = load i32, ptr %41, align 4, !tbaa !95
  %126 = getelementptr inbounds i16, ptr %65, i64 9990
  %127 = load i16, ptr %126, align 2, !tbaa !13
  %128 = trunc i32 %125 to i16
  %129 = add i16 %127, %128
  store i16 %129, ptr %126, align 2, !tbaa !13
  %130 = load i32, ptr %42, align 4, !tbaa !95
  %131 = getelementptr inbounds i16, ptr %65, i64 9991
  %132 = load i16, ptr %131, align 2, !tbaa !13
  %133 = trunc i32 %130 to i16
  %134 = add i16 %132, %133
  store i16 %134, ptr %131, align 2, !tbaa !13
  %135 = load i32, ptr %43, align 4, !tbaa !95
  %136 = getelementptr inbounds i16, ptr %65, i64 9992
  %137 = load i16, ptr %136, align 2, !tbaa !13
  %138 = trunc i32 %135 to i16
  %139 = add i16 %137, %138
  store i16 %139, ptr %136, align 2, !tbaa !13
  %140 = load i32, ptr %44, align 4, !tbaa !95
  %141 = getelementptr inbounds i16, ptr %65, i64 9993
  %142 = load i16, ptr %141, align 2, !tbaa !13
  %143 = trunc i32 %140 to i16
  %144 = add i16 %142, %143
  store i16 %144, ptr %141, align 2, !tbaa !13
  %145 = load i32, ptr %45, align 4, !tbaa !95
  %146 = getelementptr inbounds i16, ptr %65, i64 9994
  %147 = load i16, ptr %146, align 2, !tbaa !13
  %148 = trunc i32 %145 to i16
  %149 = add i16 %147, %148
  store i16 %149, ptr %146, align 2, !tbaa !13
  %150 = load i32, ptr %46, align 4, !tbaa !95
  %151 = getelementptr inbounds i16, ptr %65, i64 9995
  %152 = load i16, ptr %151, align 2, !tbaa !13
  %153 = trunc i32 %150 to i16
  %154 = add i16 %152, %153
  store i16 %154, ptr %151, align 2, !tbaa !13
  %155 = load i32, ptr %47, align 4, !tbaa !95
  %156 = getelementptr inbounds i16, ptr %65, i64 9996
  %157 = load i16, ptr %156, align 2, !tbaa !13
  %158 = trunc i32 %155 to i16
  %159 = add i16 %157, %158
  store i16 %159, ptr %156, align 2, !tbaa !13
  %160 = load i32, ptr %48, align 4, !tbaa !95
  %161 = getelementptr inbounds i16, ptr %65, i64 9997
  %162 = load i16, ptr %161, align 2, !tbaa !13
  %163 = trunc i32 %160 to i16
  %164 = add i16 %162, %163
  store i16 %164, ptr %161, align 2, !tbaa !13
  %165 = load i32, ptr %49, align 4, !tbaa !95
  %166 = getelementptr inbounds i16, ptr %65, i64 9998
  %167 = load i16, ptr %166, align 2, !tbaa !13
  %168 = trunc i32 %165 to i16
  %169 = add i16 %167, %168
  store i16 %169, ptr %166, align 2, !tbaa !13
  %170 = load i32, ptr %50, align 4, !tbaa !95
  %171 = getelementptr inbounds i16, ptr %65, i64 9999
  %172 = load i16, ptr %171, align 2, !tbaa !13
  %173 = trunc i32 %170 to i16
  %174 = add i16 %172, %173
  store i16 %174, ptr %171, align 2, !tbaa !13
  %175 = add i64 %63, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %51, label %62, !prof !42

177:                                              ; preds = %25, %51
  %178 = landingpad { ptr, i32 }
          cleanup
  %179 = load ptr, ptr %4, align 8, !tbaa !5
  %180 = icmp eq ptr %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %60, %58, %177
  %182 = phi { ptr, i32 } [ %178, %177 ], [ %61, %60 ], [ %59, %58 ]
  %183 = phi ptr [ %179, %177 ], [ %6, %60 ], [ %6, %58 ]
  call void @_ZdaPv(ptr noundef nonnull %183) #13
  br label %184

184:                                              ; preds = %181, %177, %56
  %185 = phi { ptr, i32 } [ %57, %56 ], [ %178, %177 ], [ %182, %181 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %185

186:                                              ; preds = %52, %55
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::uniform_int_distribution.54", align 4
  %4 = alloca %"class.std::unique_ptr", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %7 unwind label %56

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  store i32 0, ptr %3, align 4, !tbaa !92
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %3, i64 0, i32 1
  store i32 -1, ptr %8, align 4, !tbaa !94
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %3)
          to label %12 unwind label %60

12:                                               ; preds = %9
  %13 = getelementptr inbounds i32, ptr %5, i64 %10
  store i32 %11, ptr %13, align 4, !tbaa !95
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !96

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %17, align 2, !tbaa !12
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %21 unwind label %58

21:                                               ; preds = %18
  %22 = getelementptr inbounds i16, ptr %6, i64 %19
  store i16 %20, ptr %22, align 2, !tbaa !13
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !14

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %177

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %51, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr inbounds i32, ptr %5, i64 9984
  %36 = getelementptr inbounds i32, ptr %5, i64 9985
  %37 = getelementptr inbounds i32, ptr %5, i64 9986
  %38 = getelementptr inbounds i32, ptr %5, i64 9987
  %39 = getelementptr inbounds i32, ptr %5, i64 9988
  %40 = getelementptr inbounds i32, ptr %5, i64 9989
  %41 = getelementptr inbounds i32, ptr %5, i64 9990
  %42 = getelementptr inbounds i32, ptr %5, i64 9991
  %43 = getelementptr inbounds i32, ptr %5, i64 9992
  %44 = getelementptr inbounds i32, ptr %5, i64 9993
  %45 = getelementptr inbounds i32, ptr %5, i64 9994
  %46 = getelementptr inbounds i32, ptr %5, i64 9995
  %47 = getelementptr inbounds i32, ptr %5, i64 9996
  %48 = getelementptr inbounds i32, ptr %5, i64 9997
  %49 = getelementptr inbounds i32, ptr %5, i64 9998
  %50 = getelementptr inbounds i32, ptr %5, i64 9999
  br label %62

51:                                               ; preds = %94, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %52 unwind label %177

52:                                               ; preds = %51
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = icmp eq ptr %53, null
  br i1 %54, label %186, label %55

55:                                               ; preds = %52
  call void @_ZdaPv(ptr noundef nonnull %53) #13
  br label %186

56:                                               ; preds = %1
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %184

58:                                               ; preds = %18
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %181

60:                                               ; preds = %9
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %181

62:                                               ; preds = %34, %94
  %63 = phi i64 [ %175, %94 ], [ %29, %34 ]
  %64 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %4, i64 %64) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %65 = load ptr, ptr %4, align 8, !tbaa !5
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i64 [ 0, %62 ], [ %92, %66 ]
  %68 = getelementptr inbounds i32, ptr %5, i64 %67
  %69 = load <16 x i32>, ptr %68, align 4, !tbaa !95
  %70 = getelementptr inbounds i32, ptr %68, i64 16
  %71 = load <16 x i32>, ptr %70, align 4, !tbaa !95
  %72 = getelementptr inbounds i32, ptr %68, i64 32
  %73 = load <16 x i32>, ptr %72, align 4, !tbaa !95
  %74 = getelementptr inbounds i32, ptr %68, i64 48
  %75 = load <16 x i32>, ptr %74, align 4, !tbaa !95
  %76 = getelementptr inbounds i16, ptr %65, i64 %67
  %77 = load <16 x i16>, ptr %76, align 2, !tbaa !13
  %78 = getelementptr inbounds i16, ptr %76, i64 16
  %79 = load <16 x i16>, ptr %78, align 2, !tbaa !13
  %80 = getelementptr inbounds i16, ptr %76, i64 32
  %81 = load <16 x i16>, ptr %80, align 2, !tbaa !13
  %82 = getelementptr inbounds i16, ptr %76, i64 48
  %83 = load <16 x i16>, ptr %82, align 2, !tbaa !13
  %84 = trunc <16 x i32> %69 to <16 x i16>
  %85 = trunc <16 x i32> %71 to <16 x i16>
  %86 = trunc <16 x i32> %73 to <16 x i16>
  %87 = trunc <16 x i32> %75 to <16 x i16>
  %88 = add <16 x i16> %77, %84
  %89 = add <16 x i16> %79, %85
  %90 = add <16 x i16> %81, %86
  %91 = add <16 x i16> %83, %87
  store <16 x i16> %88, ptr %76, align 2, !tbaa !13
  store <16 x i16> %89, ptr %78, align 2, !tbaa !13
  store <16 x i16> %90, ptr %80, align 2, !tbaa !13
  store <16 x i16> %91, ptr %82, align 2, !tbaa !13
  %92 = add nuw i64 %67, 64
  %93 = icmp eq i64 %92, 9984
  br i1 %93, label %94, label %66, !llvm.loop !205

94:                                               ; preds = %66
  %95 = load i32, ptr %35, align 4, !tbaa !95
  %96 = getelementptr inbounds i16, ptr %65, i64 9984
  %97 = load i16, ptr %96, align 2, !tbaa !13
  %98 = trunc i32 %95 to i16
  %99 = add i16 %97, %98
  store i16 %99, ptr %96, align 2, !tbaa !13
  %100 = load i32, ptr %36, align 4, !tbaa !95
  %101 = getelementptr inbounds i16, ptr %65, i64 9985
  %102 = load i16, ptr %101, align 2, !tbaa !13
  %103 = trunc i32 %100 to i16
  %104 = add i16 %102, %103
  store i16 %104, ptr %101, align 2, !tbaa !13
  %105 = load i32, ptr %37, align 4, !tbaa !95
  %106 = getelementptr inbounds i16, ptr %65, i64 9986
  %107 = load i16, ptr %106, align 2, !tbaa !13
  %108 = trunc i32 %105 to i16
  %109 = add i16 %107, %108
  store i16 %109, ptr %106, align 2, !tbaa !13
  %110 = load i32, ptr %38, align 4, !tbaa !95
  %111 = getelementptr inbounds i16, ptr %65, i64 9987
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = trunc i32 %110 to i16
  %114 = add i16 %112, %113
  store i16 %114, ptr %111, align 2, !tbaa !13
  %115 = load i32, ptr %39, align 4, !tbaa !95
  %116 = getelementptr inbounds i16, ptr %65, i64 9988
  %117 = load i16, ptr %116, align 2, !tbaa !13
  %118 = trunc i32 %115 to i16
  %119 = add i16 %117, %118
  store i16 %119, ptr %116, align 2, !tbaa !13
  %120 = load i32, ptr %40, align 4, !tbaa !95
  %121 = getelementptr inbounds i16, ptr %65, i64 9989
  %122 = load i16, ptr %121, align 2, !tbaa !13
  %123 = trunc i32 %120 to i16
  %124 = add i16 %122, %123
  store i16 %124, ptr %121, align 2, !tbaa !13
  %125 = load i32, ptr %41, align 4, !tbaa !95
  %126 = getelementptr inbounds i16, ptr %65, i64 9990
  %127 = load i16, ptr %126, align 2, !tbaa !13
  %128 = trunc i32 %125 to i16
  %129 = add i16 %127, %128
  store i16 %129, ptr %126, align 2, !tbaa !13
  %130 = load i32, ptr %42, align 4, !tbaa !95
  %131 = getelementptr inbounds i16, ptr %65, i64 9991
  %132 = load i16, ptr %131, align 2, !tbaa !13
  %133 = trunc i32 %130 to i16
  %134 = add i16 %132, %133
  store i16 %134, ptr %131, align 2, !tbaa !13
  %135 = load i32, ptr %43, align 4, !tbaa !95
  %136 = getelementptr inbounds i16, ptr %65, i64 9992
  %137 = load i16, ptr %136, align 2, !tbaa !13
  %138 = trunc i32 %135 to i16
  %139 = add i16 %137, %138
  store i16 %139, ptr %136, align 2, !tbaa !13
  %140 = load i32, ptr %44, align 4, !tbaa !95
  %141 = getelementptr inbounds i16, ptr %65, i64 9993
  %142 = load i16, ptr %141, align 2, !tbaa !13
  %143 = trunc i32 %140 to i16
  %144 = add i16 %142, %143
  store i16 %144, ptr %141, align 2, !tbaa !13
  %145 = load i32, ptr %45, align 4, !tbaa !95
  %146 = getelementptr inbounds i16, ptr %65, i64 9994
  %147 = load i16, ptr %146, align 2, !tbaa !13
  %148 = trunc i32 %145 to i16
  %149 = add i16 %147, %148
  store i16 %149, ptr %146, align 2, !tbaa !13
  %150 = load i32, ptr %46, align 4, !tbaa !95
  %151 = getelementptr inbounds i16, ptr %65, i64 9995
  %152 = load i16, ptr %151, align 2, !tbaa !13
  %153 = trunc i32 %150 to i16
  %154 = add i16 %152, %153
  store i16 %154, ptr %151, align 2, !tbaa !13
  %155 = load i32, ptr %47, align 4, !tbaa !95
  %156 = getelementptr inbounds i16, ptr %65, i64 9996
  %157 = load i16, ptr %156, align 2, !tbaa !13
  %158 = trunc i32 %155 to i16
  %159 = add i16 %157, %158
  store i16 %159, ptr %156, align 2, !tbaa !13
  %160 = load i32, ptr %48, align 4, !tbaa !95
  %161 = getelementptr inbounds i16, ptr %65, i64 9997
  %162 = load i16, ptr %161, align 2, !tbaa !13
  %163 = trunc i32 %160 to i16
  %164 = add i16 %162, %163
  store i16 %164, ptr %161, align 2, !tbaa !13
  %165 = load i32, ptr %49, align 4, !tbaa !95
  %166 = getelementptr inbounds i16, ptr %65, i64 9998
  %167 = load i16, ptr %166, align 2, !tbaa !13
  %168 = trunc i32 %165 to i16
  %169 = add i16 %167, %168
  store i16 %169, ptr %166, align 2, !tbaa !13
  %170 = load i32, ptr %50, align 4, !tbaa !95
  %171 = getelementptr inbounds i16, ptr %65, i64 9999
  %172 = load i16, ptr %171, align 2, !tbaa !13
  %173 = trunc i32 %170 to i16
  %174 = add i16 %172, %173
  store i16 %174, ptr %171, align 2, !tbaa !13
  %175 = add i64 %63, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %51, label %62, !prof !42

177:                                              ; preds = %25, %51
  %178 = landingpad { ptr, i32 }
          cleanup
  %179 = load ptr, ptr %4, align 8, !tbaa !5
  %180 = icmp eq ptr %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %60, %58, %177
  %182 = phi { ptr, i32 } [ %178, %177 ], [ %61, %60 ], [ %59, %58 ]
  %183 = phi ptr [ %179, %177 ], [ %6, %60 ], [ %6, %58 ]
  call void @_ZdaPv(ptr noundef nonnull %183) #13
  br label %184

184:                                              ; preds = %181, %177, %56
  %185 = phi { ptr, i32 } [ %57, %56 ], [ %178, %177 ], [ %182, %181 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %185

186:                                              ; preds = %52, %55
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::uniform_int_distribution.54", align 4
  %4 = alloca %"class.std::unique_ptr", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %7 unwind label %39

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  store i32 0, ptr %3, align 4, !tbaa !92
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %3, i64 0, i32 1
  store i32 -1, ptr %8, align 4, !tbaa !94
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %3)
          to label %12 unwind label %43

12:                                               ; preds = %9
  %13 = getelementptr inbounds i32, ptr %5, i64 %10
  store i32 %11, ptr %13, align 4, !tbaa !95
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !96

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %17, align 2, !tbaa !12
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %21 unwind label %41

21:                                               ; preds = %18
  %22 = getelementptr inbounds i16, ptr %6, i64 %19
  store i16 %20, ptr %22, align 2, !tbaa !13
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !14

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %81

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %34, label %45, !prof !42

34:                                               ; preds = %78, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %35 unwind label %81

35:                                               ; preds = %34
  %36 = load ptr, ptr %4, align 8, !tbaa !5
  %37 = icmp eq ptr %36, null
  br i1 %37, label %90, label %38

38:                                               ; preds = %35
  call void @_ZdaPv(ptr noundef nonnull %36) #13
  br label %90

39:                                               ; preds = %1
  %40 = landingpad { ptr, i32 }
          cleanup
  br label %88

41:                                               ; preds = %18
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %85

43:                                               ; preds = %9
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %85

45:                                               ; preds = %30, %78
  %46 = phi i64 [ %79, %78 ], [ %29, %30 ]
  %47 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %4, i64 %47) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %48 = load ptr, ptr %4, align 8, !tbaa !5
  br label %49

49:                                               ; preds = %49, %45
  %50 = phi i64 [ 0, %45 ], [ %76, %49 ]
  %51 = getelementptr inbounds i32, ptr %5, i64 %50
  %52 = load <4 x i32>, ptr %51, align 4, !tbaa !95
  %53 = getelementptr inbounds i32, ptr %51, i64 4
  %54 = load <4 x i32>, ptr %53, align 4, !tbaa !95
  %55 = getelementptr inbounds i16, ptr %48, i64 %50
  %56 = load <4 x i16>, ptr %55, align 2, !tbaa !13
  %57 = getelementptr inbounds i16, ptr %55, i64 4
  %58 = load <4 x i16>, ptr %57, align 2, !tbaa !13
  %59 = trunc <4 x i32> %52 to <4 x i16>
  %60 = trunc <4 x i32> %54 to <4 x i16>
  %61 = add <4 x i16> %56, %59
  %62 = add <4 x i16> %58, %60
  store <4 x i16> %61, ptr %55, align 2, !tbaa !13
  store <4 x i16> %62, ptr %57, align 2, !tbaa !13
  %63 = or i64 %50, 8
  %64 = getelementptr inbounds i32, ptr %5, i64 %63
  %65 = load <4 x i32>, ptr %64, align 4, !tbaa !95
  %66 = getelementptr inbounds i32, ptr %64, i64 4
  %67 = load <4 x i32>, ptr %66, align 4, !tbaa !95
  %68 = getelementptr inbounds i16, ptr %48, i64 %63
  %69 = load <4 x i16>, ptr %68, align 2, !tbaa !13
  %70 = getelementptr inbounds i16, ptr %68, i64 4
  %71 = load <4 x i16>, ptr %70, align 2, !tbaa !13
  %72 = trunc <4 x i32> %65 to <4 x i16>
  %73 = trunc <4 x i32> %67 to <4 x i16>
  %74 = add <4 x i16> %69, %72
  %75 = add <4 x i16> %71, %73
  store <4 x i16> %74, ptr %68, align 2, !tbaa !13
  store <4 x i16> %75, ptr %70, align 2, !tbaa !13
  %76 = add nuw nsw i64 %50, 16
  %77 = icmp eq i64 %76, 10000
  br i1 %77, label %78, label %49, !llvm.loop !206

78:                                               ; preds = %49
  %79 = add i64 %46, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %34, label %45, !prof !42

81:                                               ; preds = %25, %34
  %82 = landingpad { ptr, i32 }
          cleanup
  %83 = load ptr, ptr %4, align 8, !tbaa !5
  %84 = icmp eq ptr %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %43, %41, %81
  %86 = phi { ptr, i32 } [ %82, %81 ], [ %44, %43 ], [ %42, %41 ]
  %87 = phi ptr [ %83, %81 ], [ %6, %43 ], [ %6, %41 ]
  call void @_ZdaPv(ptr noundef nonnull %87) #13
  br label %88

88:                                               ; preds = %85, %81, %39
  %89 = phi { ptr, i32 } [ %40, %39 ], [ %82, %81 ], [ %86, %85 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %89

90:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::unique_ptr", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %9, align 8, !tbaa !146
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i64, ptr %4, i64 %11
  store i64 %12, ptr %14, align 8, !tbaa !147
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !148

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i64, ptr %4, i64 %19
  %21 = load i64, ptr %20, align 8, !tbaa !147
  %22 = trunc i64 %21 to i16
  %23 = getelementptr inbounds i16, ptr %7, i64 %19
  store i16 %22, ptr %23, align 2, !tbaa !13
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i64, ptr %4, i64 %24
  %26 = load i64, ptr %25, align 8, !tbaa !147
  %27 = trunc i64 %26 to i16
  %28 = getelementptr inbounds i16, ptr %7, i64 %24
  store i16 %27, ptr %28, align 2, !tbaa !13
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i64, ptr %4, i64 %29
  %31 = load i64, ptr %30, align 8, !tbaa !147
  %32 = trunc i64 %31 to i16
  %33 = getelementptr inbounds i16, ptr %7, i64 %29
  store i16 %32, ptr %33, align 2, !tbaa !13
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i64, ptr %4, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !147
  %37 = trunc i64 %36 to i16
  %38 = getelementptr inbounds i16, ptr %7, i64 %34
  store i16 %37, ptr %38, align 2, !tbaa !13
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i64, ptr %4, i64 %39
  %41 = load i64, ptr %40, align 8, !tbaa !147
  %42 = trunc i64 %41 to i16
  %43 = getelementptr inbounds i16, ptr %7, i64 %39
  store i16 %42, ptr %43, align 2, !tbaa !13
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !207

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i64, ptr %4, i64 %47
  %49 = load <8 x i64>, ptr %48, align 8, !tbaa !147
  %50 = getelementptr inbounds i64, ptr %48, i64 8
  %51 = load <8 x i64>, ptr %50, align 8, !tbaa !147
  %52 = getelementptr inbounds i64, ptr %48, i64 16
  %53 = load <8 x i64>, ptr %52, align 8, !tbaa !147
  %54 = getelementptr inbounds i64, ptr %48, i64 24
  %55 = load <8 x i64>, ptr %54, align 8, !tbaa !147
  %56 = trunc <8 x i64> %49 to <8 x i16>
  %57 = trunc <8 x i64> %51 to <8 x i16>
  %58 = trunc <8 x i64> %53 to <8 x i16>
  %59 = trunc <8 x i64> %55 to <8 x i16>
  %60 = getelementptr inbounds i16, ptr %5, i64 %47
  store <8 x i16> %56, ptr %60, align 2, !tbaa !13
  %61 = getelementptr inbounds i16, ptr %60, i64 8
  store <8 x i16> %57, ptr %61, align 2, !tbaa !13
  %62 = getelementptr inbounds i16, ptr %60, i64 16
  store <8 x i16> %58, ptr %62, align 2, !tbaa !13
  %63 = getelementptr inbounds i16, ptr %60, i64 24
  store <8 x i16> %59, ptr %63, align 2, !tbaa !13
  %64 = add nuw i64 %47, 32
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !208

66:                                               ; preds = %46
  %67 = getelementptr inbounds i64, ptr %4, i64 9984
  %68 = load i64, ptr %67, align 8, !tbaa !147
  %69 = trunc i64 %68 to i16
  %70 = getelementptr inbounds i16, ptr %5, i64 9984
  store i16 %69, ptr %70, align 2, !tbaa !13
  %71 = getelementptr inbounds i64, ptr %4, i64 9985
  %72 = load i64, ptr %71, align 8, !tbaa !147
  %73 = trunc i64 %72 to i16
  %74 = getelementptr inbounds i16, ptr %5, i64 9985
  store i16 %73, ptr %74, align 2, !tbaa !13
  %75 = getelementptr inbounds i64, ptr %4, i64 9986
  %76 = load i64, ptr %75, align 8, !tbaa !147
  %77 = trunc i64 %76 to i16
  %78 = getelementptr inbounds i16, ptr %5, i64 9986
  store i16 %77, ptr %78, align 2, !tbaa !13
  %79 = getelementptr inbounds i64, ptr %4, i64 9987
  %80 = load i64, ptr %79, align 8, !tbaa !147
  %81 = trunc i64 %80 to i16
  %82 = getelementptr inbounds i16, ptr %5, i64 9987
  store i16 %81, ptr %82, align 2, !tbaa !13
  %83 = getelementptr inbounds i64, ptr %4, i64 9988
  %84 = load i64, ptr %83, align 8, !tbaa !147
  %85 = trunc i64 %84 to i16
  %86 = getelementptr inbounds i16, ptr %5, i64 9988
  store i16 %85, ptr %86, align 2, !tbaa !13
  %87 = getelementptr inbounds i64, ptr %4, i64 9989
  %88 = load i64, ptr %87, align 8, !tbaa !147
  %89 = trunc i64 %88 to i16
  %90 = getelementptr inbounds i16, ptr %5, i64 9989
  store i16 %89, ptr %90, align 2, !tbaa !13
  %91 = getelementptr inbounds i64, ptr %4, i64 9990
  %92 = load i64, ptr %91, align 8, !tbaa !147
  %93 = trunc i64 %92 to i16
  %94 = getelementptr inbounds i16, ptr %5, i64 9990
  store i16 %93, ptr %94, align 2, !tbaa !13
  %95 = getelementptr inbounds i64, ptr %4, i64 9991
  %96 = load i64, ptr %95, align 8, !tbaa !147
  %97 = trunc i64 %96 to i16
  %98 = getelementptr inbounds i16, ptr %5, i64 9991
  store i16 %97, ptr %98, align 2, !tbaa !13
  %99 = getelementptr inbounds i64, ptr %4, i64 9992
  %100 = load i64, ptr %99, align 8, !tbaa !147
  %101 = trunc i64 %100 to i16
  %102 = getelementptr inbounds i16, ptr %5, i64 9992
  store i16 %101, ptr %102, align 2, !tbaa !13
  %103 = getelementptr inbounds i64, ptr %4, i64 9993
  %104 = load i64, ptr %103, align 8, !tbaa !147
  %105 = trunc i64 %104 to i16
  %106 = getelementptr inbounds i16, ptr %5, i64 9993
  store i16 %105, ptr %106, align 2, !tbaa !13
  %107 = getelementptr inbounds i64, ptr %4, i64 9994
  %108 = load i64, ptr %107, align 8, !tbaa !147
  %109 = trunc i64 %108 to i16
  %110 = getelementptr inbounds i16, ptr %5, i64 9994
  store i16 %109, ptr %110, align 2, !tbaa !13
  %111 = getelementptr inbounds i64, ptr %4, i64 9995
  %112 = load i64, ptr %111, align 8, !tbaa !147
  %113 = trunc i64 %112 to i16
  %114 = getelementptr inbounds i16, ptr %5, i64 9995
  store i16 %113, ptr %114, align 2, !tbaa !13
  %115 = getelementptr inbounds i64, ptr %4, i64 9996
  %116 = load i64, ptr %115, align 8, !tbaa !147
  %117 = trunc i64 %116 to i16
  %118 = getelementptr inbounds i16, ptr %5, i64 9996
  store i16 %117, ptr %118, align 2, !tbaa !13
  %119 = getelementptr inbounds i64, ptr %4, i64 9997
  %120 = load i64, ptr %119, align 8, !tbaa !147
  %121 = trunc i64 %120 to i16
  %122 = getelementptr inbounds i16, ptr %5, i64 9997
  store i16 %121, ptr %122, align 2, !tbaa !13
  %123 = getelementptr inbounds i64, ptr %4, i64 9998
  %124 = load i64, ptr %123, align 8, !tbaa !147
  %125 = trunc i64 %124 to i16
  %126 = getelementptr inbounds i16, ptr %5, i64 9998
  store i16 %125, ptr %126, align 2, !tbaa !13
  %127 = getelementptr inbounds i64, ptr %4, i64 9999
  %128 = load i64, ptr %127, align 8, !tbaa !147
  %129 = trunc i64 %128 to i16
  %130 = getelementptr inbounds i16, ptr %5, i64 9999
  store i16 %129, ptr %130, align 2, !tbaa !13
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %317

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %314

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %310

137:                                              ; preds = %199, %66
  %138 = phi i64 [ 0, %66 ], [ %200, %199 ]
  %139 = getelementptr inbounds i16, ptr %5, i64 %138
  %140 = load i16, ptr %139, align 2, !tbaa !13
  %141 = getelementptr inbounds i16, ptr %7, i64 %138
  %142 = load i16, ptr %141, align 2, !tbaa !13
  %143 = icmp eq i16 %140, %142
  br i1 %143, label %171, label %144

144:                                              ; preds = %192, %185, %178, %171, %137
  %145 = phi i64 [ %138, %137 ], [ %172, %171 ], [ %179, %178 ], [ %186, %185 ], [ %193, %192 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i16, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %169

149:                                              ; preds = %144
  %150 = getelementptr inbounds i64, ptr %4, i64 %146
  %151 = load i64, ptr %150, align 8, !tbaa !147
  %152 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %151)
          to label %153 unwind label %169

153:                                              ; preds = %149
  %154 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %152, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %155 unwind label %169

155:                                              ; preds = %153
  %156 = getelementptr inbounds i16, ptr %5, i64 %146
  %157 = load i16, ptr %156, align 2, !tbaa !13
  %158 = zext i16 %157 to i64
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %152, i64 noundef %158)
          to label %160 unwind label %169

160:                                              ; preds = %155
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %162 unwind label %169

162:                                              ; preds = %160
  %163 = load i16, ptr %147, align 2, !tbaa !13
  %164 = zext i16 %163 to i64
  %165 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %159, i64 noundef %164)
          to label %166 unwind label %169

166:                                              ; preds = %162
  %167 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %165, ptr noundef nonnull @.str.149)
          to label %168 unwind label %169

168:                                              ; preds = %166
  call void @exit(i32 noundef 1) #12
  unreachable

169:                                              ; preds = %166, %162, %160, %155, %153, %149, %144
  %170 = landingpad { ptr, i32 }
          cleanup
  br label %310

171:                                              ; preds = %137
  %172 = add nuw nsw i64 %138, 1
  %173 = getelementptr inbounds i16, ptr %5, i64 %172
  %174 = load i16, ptr %173, align 2, !tbaa !13
  %175 = getelementptr inbounds i16, ptr %7, i64 %172
  %176 = load i16, ptr %175, align 2, !tbaa !13
  %177 = icmp eq i16 %174, %176
  br i1 %177, label %178, label %144

178:                                              ; preds = %171
  %179 = add nuw nsw i64 %138, 2
  %180 = getelementptr inbounds i16, ptr %5, i64 %179
  %181 = load i16, ptr %180, align 2, !tbaa !13
  %182 = getelementptr inbounds i16, ptr %7, i64 %179
  %183 = load i16, ptr %182, align 2, !tbaa !13
  %184 = icmp eq i16 %181, %183
  br i1 %184, label %185, label %144

185:                                              ; preds = %178
  %186 = add nuw nsw i64 %138, 3
  %187 = getelementptr inbounds i16, ptr %5, i64 %186
  %188 = load i16, ptr %187, align 2, !tbaa !13
  %189 = getelementptr inbounds i16, ptr %7, i64 %186
  %190 = load i16, ptr %189, align 2, !tbaa !13
  %191 = icmp eq i16 %188, %190
  br i1 %191, label %192, label %144

192:                                              ; preds = %185
  %193 = add nuw nsw i64 %138, 4
  %194 = getelementptr inbounds i16, ptr %5, i64 %193
  %195 = load i16, ptr %194, align 2, !tbaa !13
  %196 = getelementptr inbounds i16, ptr %7, i64 %193
  %197 = load i16, ptr %196, align 2, !tbaa !13
  %198 = icmp eq i16 %195, %197
  br i1 %198, label %199, label %144

199:                                              ; preds = %192
  %200 = add nuw nsw i64 %138, 5
  %201 = icmp eq i64 %200, 10000
  br i1 %201, label %202, label %137, !llvm.loop !209

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %204 = load i8, ptr %203, align 2, !tbaa !23, !range !40, !noundef !41
  %205 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %206 = load i64, ptr %205, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %207 unwind label %233

207:                                              ; preds = %202
  %208 = icmp ne i8 %204, 0
  %209 = icmp eq i64 %206, 0
  %210 = select i1 %208, i1 true, i1 %209
  br i1 %210, label %228, label %211, !prof !42

211:                                              ; preds = %207
  %212 = getelementptr inbounds i64, ptr %4, i64 9984
  %213 = getelementptr inbounds i64, ptr %4, i64 9985
  %214 = getelementptr inbounds i64, ptr %4, i64 9986
  %215 = getelementptr inbounds i64, ptr %4, i64 9987
  %216 = getelementptr inbounds i64, ptr %4, i64 9988
  %217 = getelementptr inbounds i64, ptr %4, i64 9989
  %218 = getelementptr inbounds i64, ptr %4, i64 9990
  %219 = getelementptr inbounds i64, ptr %4, i64 9991
  %220 = getelementptr inbounds i64, ptr %4, i64 9992
  %221 = getelementptr inbounds i64, ptr %4, i64 9993
  %222 = getelementptr inbounds i64, ptr %4, i64 9994
  %223 = getelementptr inbounds i64, ptr %4, i64 9995
  %224 = getelementptr inbounds i64, ptr %4, i64 9996
  %225 = getelementptr inbounds i64, ptr %4, i64 9997
  %226 = getelementptr inbounds i64, ptr %4, i64 9998
  %227 = getelementptr inbounds i64, ptr %4, i64 9999
  br label %235

228:                                              ; preds = %259, %207
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %229 unwind label %233

229:                                              ; preds = %228
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %230 = load ptr, ptr %3, align 8, !tbaa !5
  %231 = icmp eq ptr %230, null
  br i1 %231, label %319, label %232

232:                                              ; preds = %229
  call void @_ZdaPv(ptr noundef nonnull %230) #13
  br label %319

233:                                              ; preds = %228, %202
  %234 = landingpad { ptr, i32 }
          cleanup
  br label %310

235:                                              ; preds = %211, %259
  %236 = phi i64 [ %308, %259 ], [ %206, %211 ]
  %237 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %3, i64 %237) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %238 = load ptr, ptr %3, align 8, !tbaa !5
  br label %239

239:                                              ; preds = %239, %235
  %240 = phi i64 [ 0, %235 ], [ %257, %239 ]
  %241 = getelementptr inbounds i64, ptr %4, i64 %240
  %242 = load <8 x i64>, ptr %241, align 8, !tbaa !147
  %243 = getelementptr inbounds i64, ptr %241, i64 8
  %244 = load <8 x i64>, ptr %243, align 8, !tbaa !147
  %245 = getelementptr inbounds i64, ptr %241, i64 16
  %246 = load <8 x i64>, ptr %245, align 8, !tbaa !147
  %247 = getelementptr inbounds i64, ptr %241, i64 24
  %248 = load <8 x i64>, ptr %247, align 8, !tbaa !147
  %249 = trunc <8 x i64> %242 to <8 x i16>
  %250 = trunc <8 x i64> %244 to <8 x i16>
  %251 = trunc <8 x i64> %246 to <8 x i16>
  %252 = trunc <8 x i64> %248 to <8 x i16>
  %253 = getelementptr inbounds i16, ptr %238, i64 %240
  store <8 x i16> %249, ptr %253, align 2, !tbaa !13
  %254 = getelementptr inbounds i16, ptr %253, i64 8
  store <8 x i16> %250, ptr %254, align 2, !tbaa !13
  %255 = getelementptr inbounds i16, ptr %253, i64 16
  store <8 x i16> %251, ptr %255, align 2, !tbaa !13
  %256 = getelementptr inbounds i16, ptr %253, i64 24
  store <8 x i16> %252, ptr %256, align 2, !tbaa !13
  %257 = add nuw i64 %240, 32
  %258 = icmp eq i64 %257, 9984
  br i1 %258, label %259, label %239, !llvm.loop !210

259:                                              ; preds = %239
  %260 = load i64, ptr %212, align 8, !tbaa !147
  %261 = trunc i64 %260 to i16
  %262 = getelementptr inbounds i16, ptr %238, i64 9984
  store i16 %261, ptr %262, align 2, !tbaa !13
  %263 = load i64, ptr %213, align 8, !tbaa !147
  %264 = trunc i64 %263 to i16
  %265 = getelementptr inbounds i16, ptr %238, i64 9985
  store i16 %264, ptr %265, align 2, !tbaa !13
  %266 = load i64, ptr %214, align 8, !tbaa !147
  %267 = trunc i64 %266 to i16
  %268 = getelementptr inbounds i16, ptr %238, i64 9986
  store i16 %267, ptr %268, align 2, !tbaa !13
  %269 = load i64, ptr %215, align 8, !tbaa !147
  %270 = trunc i64 %269 to i16
  %271 = getelementptr inbounds i16, ptr %238, i64 9987
  store i16 %270, ptr %271, align 2, !tbaa !13
  %272 = load i64, ptr %216, align 8, !tbaa !147
  %273 = trunc i64 %272 to i16
  %274 = getelementptr inbounds i16, ptr %238, i64 9988
  store i16 %273, ptr %274, align 2, !tbaa !13
  %275 = load i64, ptr %217, align 8, !tbaa !147
  %276 = trunc i64 %275 to i16
  %277 = getelementptr inbounds i16, ptr %238, i64 9989
  store i16 %276, ptr %277, align 2, !tbaa !13
  %278 = load i64, ptr %218, align 8, !tbaa !147
  %279 = trunc i64 %278 to i16
  %280 = getelementptr inbounds i16, ptr %238, i64 9990
  store i16 %279, ptr %280, align 2, !tbaa !13
  %281 = load i64, ptr %219, align 8, !tbaa !147
  %282 = trunc i64 %281 to i16
  %283 = getelementptr inbounds i16, ptr %238, i64 9991
  store i16 %282, ptr %283, align 2, !tbaa !13
  %284 = load i64, ptr %220, align 8, !tbaa !147
  %285 = trunc i64 %284 to i16
  %286 = getelementptr inbounds i16, ptr %238, i64 9992
  store i16 %285, ptr %286, align 2, !tbaa !13
  %287 = load i64, ptr %221, align 8, !tbaa !147
  %288 = trunc i64 %287 to i16
  %289 = getelementptr inbounds i16, ptr %238, i64 9993
  store i16 %288, ptr %289, align 2, !tbaa !13
  %290 = load i64, ptr %222, align 8, !tbaa !147
  %291 = trunc i64 %290 to i16
  %292 = getelementptr inbounds i16, ptr %238, i64 9994
  store i16 %291, ptr %292, align 2, !tbaa !13
  %293 = load i64, ptr %223, align 8, !tbaa !147
  %294 = trunc i64 %293 to i16
  %295 = getelementptr inbounds i16, ptr %238, i64 9995
  store i16 %294, ptr %295, align 2, !tbaa !13
  %296 = load i64, ptr %224, align 8, !tbaa !147
  %297 = trunc i64 %296 to i16
  %298 = getelementptr inbounds i16, ptr %238, i64 9996
  store i16 %297, ptr %298, align 2, !tbaa !13
  %299 = load i64, ptr %225, align 8, !tbaa !147
  %300 = trunc i64 %299 to i16
  %301 = getelementptr inbounds i16, ptr %238, i64 9997
  store i16 %300, ptr %301, align 2, !tbaa !13
  %302 = load i64, ptr %226, align 8, !tbaa !147
  %303 = trunc i64 %302 to i16
  %304 = getelementptr inbounds i16, ptr %238, i64 9998
  store i16 %303, ptr %304, align 2, !tbaa !13
  %305 = load i64, ptr %227, align 8, !tbaa !147
  %306 = trunc i64 %305 to i16
  %307 = getelementptr inbounds i16, ptr %238, i64 9999
  store i16 %306, ptr %307, align 2, !tbaa !13
  %308 = add i64 %236, -1
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %228, label %235, !prof !42

310:                                              ; preds = %233, %169, %135
  %311 = phi { ptr, i32 } [ %170, %169 ], [ %234, %233 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %312 = load ptr, ptr %3, align 8, !tbaa !5
  %313 = icmp eq ptr %312, null
  br i1 %313, label %317, label %314

314:                                              ; preds = %310, %133
  %315 = phi { ptr, i32 } [ %134, %133 ], [ %311, %310 ]
  %316 = phi ptr [ %5, %133 ], [ %312, %310 ]
  call void @_ZdaPv(ptr noundef nonnull %316) #13
  br label %317

317:                                              ; preds = %314, %310, %131
  %318 = phi { ptr, i32 } [ %132, %131 ], [ %311, %310 ], [ %315, %314 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %318

319:                                              ; preds = %229, %232
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::unique_ptr", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %9, align 8, !tbaa !146
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i64, ptr %4, i64 %11
  store i64 %12, ptr %14, align 8, !tbaa !147
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !148

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i64, ptr %4, i64 %19
  %21 = load i64, ptr %20, align 8, !tbaa !147
  %22 = trunc i64 %21 to i16
  %23 = getelementptr inbounds i16, ptr %7, i64 %19
  store i16 %22, ptr %23, align 2, !tbaa !13
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i64, ptr %4, i64 %24
  %26 = load i64, ptr %25, align 8, !tbaa !147
  %27 = trunc i64 %26 to i16
  %28 = getelementptr inbounds i16, ptr %7, i64 %24
  store i16 %27, ptr %28, align 2, !tbaa !13
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i64, ptr %4, i64 %29
  %31 = load i64, ptr %30, align 8, !tbaa !147
  %32 = trunc i64 %31 to i16
  %33 = getelementptr inbounds i16, ptr %7, i64 %29
  store i16 %32, ptr %33, align 2, !tbaa !13
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i64, ptr %4, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !147
  %37 = trunc i64 %36 to i16
  %38 = getelementptr inbounds i16, ptr %7, i64 %34
  store i16 %37, ptr %38, align 2, !tbaa !13
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i64, ptr %4, i64 %39
  %41 = load i64, ptr %40, align 8, !tbaa !147
  %42 = trunc i64 %41 to i16
  %43 = getelementptr inbounds i16, ptr %7, i64 %39
  store i16 %42, ptr %43, align 2, !tbaa !13
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !207

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i64, ptr %4, i64 %47
  %49 = load <16 x i64>, ptr %48, align 8, !tbaa !147
  %50 = getelementptr inbounds i64, ptr %48, i64 16
  %51 = load <16 x i64>, ptr %50, align 8, !tbaa !147
  %52 = getelementptr inbounds i64, ptr %48, i64 32
  %53 = load <16 x i64>, ptr %52, align 8, !tbaa !147
  %54 = getelementptr inbounds i64, ptr %48, i64 48
  %55 = load <16 x i64>, ptr %54, align 8, !tbaa !147
  %56 = trunc <16 x i64> %49 to <16 x i16>
  %57 = trunc <16 x i64> %51 to <16 x i16>
  %58 = trunc <16 x i64> %53 to <16 x i16>
  %59 = trunc <16 x i64> %55 to <16 x i16>
  %60 = getelementptr inbounds i16, ptr %5, i64 %47
  store <16 x i16> %56, ptr %60, align 2, !tbaa !13
  %61 = getelementptr inbounds i16, ptr %60, i64 16
  store <16 x i16> %57, ptr %61, align 2, !tbaa !13
  %62 = getelementptr inbounds i16, ptr %60, i64 32
  store <16 x i16> %58, ptr %62, align 2, !tbaa !13
  %63 = getelementptr inbounds i16, ptr %60, i64 48
  store <16 x i16> %59, ptr %63, align 2, !tbaa !13
  %64 = add nuw i64 %47, 64
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !211

66:                                               ; preds = %46
  %67 = getelementptr inbounds i64, ptr %4, i64 9984
  %68 = load i64, ptr %67, align 8, !tbaa !147
  %69 = trunc i64 %68 to i16
  %70 = getelementptr inbounds i16, ptr %5, i64 9984
  store i16 %69, ptr %70, align 2, !tbaa !13
  %71 = getelementptr inbounds i64, ptr %4, i64 9985
  %72 = load i64, ptr %71, align 8, !tbaa !147
  %73 = trunc i64 %72 to i16
  %74 = getelementptr inbounds i16, ptr %5, i64 9985
  store i16 %73, ptr %74, align 2, !tbaa !13
  %75 = getelementptr inbounds i64, ptr %4, i64 9986
  %76 = load i64, ptr %75, align 8, !tbaa !147
  %77 = trunc i64 %76 to i16
  %78 = getelementptr inbounds i16, ptr %5, i64 9986
  store i16 %77, ptr %78, align 2, !tbaa !13
  %79 = getelementptr inbounds i64, ptr %4, i64 9987
  %80 = load i64, ptr %79, align 8, !tbaa !147
  %81 = trunc i64 %80 to i16
  %82 = getelementptr inbounds i16, ptr %5, i64 9987
  store i16 %81, ptr %82, align 2, !tbaa !13
  %83 = getelementptr inbounds i64, ptr %4, i64 9988
  %84 = load i64, ptr %83, align 8, !tbaa !147
  %85 = trunc i64 %84 to i16
  %86 = getelementptr inbounds i16, ptr %5, i64 9988
  store i16 %85, ptr %86, align 2, !tbaa !13
  %87 = getelementptr inbounds i64, ptr %4, i64 9989
  %88 = load i64, ptr %87, align 8, !tbaa !147
  %89 = trunc i64 %88 to i16
  %90 = getelementptr inbounds i16, ptr %5, i64 9989
  store i16 %89, ptr %90, align 2, !tbaa !13
  %91 = getelementptr inbounds i64, ptr %4, i64 9990
  %92 = load i64, ptr %91, align 8, !tbaa !147
  %93 = trunc i64 %92 to i16
  %94 = getelementptr inbounds i16, ptr %5, i64 9990
  store i16 %93, ptr %94, align 2, !tbaa !13
  %95 = getelementptr inbounds i64, ptr %4, i64 9991
  %96 = load i64, ptr %95, align 8, !tbaa !147
  %97 = trunc i64 %96 to i16
  %98 = getelementptr inbounds i16, ptr %5, i64 9991
  store i16 %97, ptr %98, align 2, !tbaa !13
  %99 = getelementptr inbounds i64, ptr %4, i64 9992
  %100 = load i64, ptr %99, align 8, !tbaa !147
  %101 = trunc i64 %100 to i16
  %102 = getelementptr inbounds i16, ptr %5, i64 9992
  store i16 %101, ptr %102, align 2, !tbaa !13
  %103 = getelementptr inbounds i64, ptr %4, i64 9993
  %104 = load i64, ptr %103, align 8, !tbaa !147
  %105 = trunc i64 %104 to i16
  %106 = getelementptr inbounds i16, ptr %5, i64 9993
  store i16 %105, ptr %106, align 2, !tbaa !13
  %107 = getelementptr inbounds i64, ptr %4, i64 9994
  %108 = load i64, ptr %107, align 8, !tbaa !147
  %109 = trunc i64 %108 to i16
  %110 = getelementptr inbounds i16, ptr %5, i64 9994
  store i16 %109, ptr %110, align 2, !tbaa !13
  %111 = getelementptr inbounds i64, ptr %4, i64 9995
  %112 = load i64, ptr %111, align 8, !tbaa !147
  %113 = trunc i64 %112 to i16
  %114 = getelementptr inbounds i16, ptr %5, i64 9995
  store i16 %113, ptr %114, align 2, !tbaa !13
  %115 = getelementptr inbounds i64, ptr %4, i64 9996
  %116 = load i64, ptr %115, align 8, !tbaa !147
  %117 = trunc i64 %116 to i16
  %118 = getelementptr inbounds i16, ptr %5, i64 9996
  store i16 %117, ptr %118, align 2, !tbaa !13
  %119 = getelementptr inbounds i64, ptr %4, i64 9997
  %120 = load i64, ptr %119, align 8, !tbaa !147
  %121 = trunc i64 %120 to i16
  %122 = getelementptr inbounds i16, ptr %5, i64 9997
  store i16 %121, ptr %122, align 2, !tbaa !13
  %123 = getelementptr inbounds i64, ptr %4, i64 9998
  %124 = load i64, ptr %123, align 8, !tbaa !147
  %125 = trunc i64 %124 to i16
  %126 = getelementptr inbounds i16, ptr %5, i64 9998
  store i16 %125, ptr %126, align 2, !tbaa !13
  %127 = getelementptr inbounds i64, ptr %4, i64 9999
  %128 = load i64, ptr %127, align 8, !tbaa !147
  %129 = trunc i64 %128 to i16
  %130 = getelementptr inbounds i16, ptr %5, i64 9999
  store i16 %129, ptr %130, align 2, !tbaa !13
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %317

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %314

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %310

137:                                              ; preds = %199, %66
  %138 = phi i64 [ 0, %66 ], [ %200, %199 ]
  %139 = getelementptr inbounds i16, ptr %5, i64 %138
  %140 = load i16, ptr %139, align 2, !tbaa !13
  %141 = getelementptr inbounds i16, ptr %7, i64 %138
  %142 = load i16, ptr %141, align 2, !tbaa !13
  %143 = icmp eq i16 %140, %142
  br i1 %143, label %171, label %144

144:                                              ; preds = %192, %185, %178, %171, %137
  %145 = phi i64 [ %138, %137 ], [ %172, %171 ], [ %179, %178 ], [ %186, %185 ], [ %193, %192 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i16, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %169

149:                                              ; preds = %144
  %150 = getelementptr inbounds i64, ptr %4, i64 %146
  %151 = load i64, ptr %150, align 8, !tbaa !147
  %152 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %151)
          to label %153 unwind label %169

153:                                              ; preds = %149
  %154 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %152, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %155 unwind label %169

155:                                              ; preds = %153
  %156 = getelementptr inbounds i16, ptr %5, i64 %146
  %157 = load i16, ptr %156, align 2, !tbaa !13
  %158 = zext i16 %157 to i64
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %152, i64 noundef %158)
          to label %160 unwind label %169

160:                                              ; preds = %155
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %162 unwind label %169

162:                                              ; preds = %160
  %163 = load i16, ptr %147, align 2, !tbaa !13
  %164 = zext i16 %163 to i64
  %165 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %159, i64 noundef %164)
          to label %166 unwind label %169

166:                                              ; preds = %162
  %167 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %165, ptr noundef nonnull @.str.149)
          to label %168 unwind label %169

168:                                              ; preds = %166
  call void @exit(i32 noundef 1) #12
  unreachable

169:                                              ; preds = %166, %162, %160, %155, %153, %149, %144
  %170 = landingpad { ptr, i32 }
          cleanup
  br label %310

171:                                              ; preds = %137
  %172 = add nuw nsw i64 %138, 1
  %173 = getelementptr inbounds i16, ptr %5, i64 %172
  %174 = load i16, ptr %173, align 2, !tbaa !13
  %175 = getelementptr inbounds i16, ptr %7, i64 %172
  %176 = load i16, ptr %175, align 2, !tbaa !13
  %177 = icmp eq i16 %174, %176
  br i1 %177, label %178, label %144

178:                                              ; preds = %171
  %179 = add nuw nsw i64 %138, 2
  %180 = getelementptr inbounds i16, ptr %5, i64 %179
  %181 = load i16, ptr %180, align 2, !tbaa !13
  %182 = getelementptr inbounds i16, ptr %7, i64 %179
  %183 = load i16, ptr %182, align 2, !tbaa !13
  %184 = icmp eq i16 %181, %183
  br i1 %184, label %185, label %144

185:                                              ; preds = %178
  %186 = add nuw nsw i64 %138, 3
  %187 = getelementptr inbounds i16, ptr %5, i64 %186
  %188 = load i16, ptr %187, align 2, !tbaa !13
  %189 = getelementptr inbounds i16, ptr %7, i64 %186
  %190 = load i16, ptr %189, align 2, !tbaa !13
  %191 = icmp eq i16 %188, %190
  br i1 %191, label %192, label %144

192:                                              ; preds = %185
  %193 = add nuw nsw i64 %138, 4
  %194 = getelementptr inbounds i16, ptr %5, i64 %193
  %195 = load i16, ptr %194, align 2, !tbaa !13
  %196 = getelementptr inbounds i16, ptr %7, i64 %193
  %197 = load i16, ptr %196, align 2, !tbaa !13
  %198 = icmp eq i16 %195, %197
  br i1 %198, label %199, label %144

199:                                              ; preds = %192
  %200 = add nuw nsw i64 %138, 5
  %201 = icmp eq i64 %200, 10000
  br i1 %201, label %202, label %137, !llvm.loop !209

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %204 = load i8, ptr %203, align 2, !tbaa !23, !range !40, !noundef !41
  %205 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %206 = load i64, ptr %205, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %207 unwind label %233

207:                                              ; preds = %202
  %208 = icmp ne i8 %204, 0
  %209 = icmp eq i64 %206, 0
  %210 = select i1 %208, i1 true, i1 %209
  br i1 %210, label %228, label %211, !prof !42

211:                                              ; preds = %207
  %212 = getelementptr inbounds i64, ptr %4, i64 9984
  %213 = getelementptr inbounds i64, ptr %4, i64 9985
  %214 = getelementptr inbounds i64, ptr %4, i64 9986
  %215 = getelementptr inbounds i64, ptr %4, i64 9987
  %216 = getelementptr inbounds i64, ptr %4, i64 9988
  %217 = getelementptr inbounds i64, ptr %4, i64 9989
  %218 = getelementptr inbounds i64, ptr %4, i64 9990
  %219 = getelementptr inbounds i64, ptr %4, i64 9991
  %220 = getelementptr inbounds i64, ptr %4, i64 9992
  %221 = getelementptr inbounds i64, ptr %4, i64 9993
  %222 = getelementptr inbounds i64, ptr %4, i64 9994
  %223 = getelementptr inbounds i64, ptr %4, i64 9995
  %224 = getelementptr inbounds i64, ptr %4, i64 9996
  %225 = getelementptr inbounds i64, ptr %4, i64 9997
  %226 = getelementptr inbounds i64, ptr %4, i64 9998
  %227 = getelementptr inbounds i64, ptr %4, i64 9999
  br label %235

228:                                              ; preds = %259, %207
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %229 unwind label %233

229:                                              ; preds = %228
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %230 = load ptr, ptr %3, align 8, !tbaa !5
  %231 = icmp eq ptr %230, null
  br i1 %231, label %319, label %232

232:                                              ; preds = %229
  call void @_ZdaPv(ptr noundef nonnull %230) #13
  br label %319

233:                                              ; preds = %228, %202
  %234 = landingpad { ptr, i32 }
          cleanup
  br label %310

235:                                              ; preds = %211, %259
  %236 = phi i64 [ %308, %259 ], [ %206, %211 ]
  %237 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %3, i64 %237) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %238 = load ptr, ptr %3, align 8, !tbaa !5
  br label %239

239:                                              ; preds = %239, %235
  %240 = phi i64 [ 0, %235 ], [ %257, %239 ]
  %241 = getelementptr inbounds i64, ptr %4, i64 %240
  %242 = load <16 x i64>, ptr %241, align 8, !tbaa !147
  %243 = getelementptr inbounds i64, ptr %241, i64 16
  %244 = load <16 x i64>, ptr %243, align 8, !tbaa !147
  %245 = getelementptr inbounds i64, ptr %241, i64 32
  %246 = load <16 x i64>, ptr %245, align 8, !tbaa !147
  %247 = getelementptr inbounds i64, ptr %241, i64 48
  %248 = load <16 x i64>, ptr %247, align 8, !tbaa !147
  %249 = trunc <16 x i64> %242 to <16 x i16>
  %250 = trunc <16 x i64> %244 to <16 x i16>
  %251 = trunc <16 x i64> %246 to <16 x i16>
  %252 = trunc <16 x i64> %248 to <16 x i16>
  %253 = getelementptr inbounds i16, ptr %238, i64 %240
  store <16 x i16> %249, ptr %253, align 2, !tbaa !13
  %254 = getelementptr inbounds i16, ptr %253, i64 16
  store <16 x i16> %250, ptr %254, align 2, !tbaa !13
  %255 = getelementptr inbounds i16, ptr %253, i64 32
  store <16 x i16> %251, ptr %255, align 2, !tbaa !13
  %256 = getelementptr inbounds i16, ptr %253, i64 48
  store <16 x i16> %252, ptr %256, align 2, !tbaa !13
  %257 = add nuw i64 %240, 64
  %258 = icmp eq i64 %257, 9984
  br i1 %258, label %259, label %239, !llvm.loop !212

259:                                              ; preds = %239
  %260 = load i64, ptr %212, align 8, !tbaa !147
  %261 = trunc i64 %260 to i16
  %262 = getelementptr inbounds i16, ptr %238, i64 9984
  store i16 %261, ptr %262, align 2, !tbaa !13
  %263 = load i64, ptr %213, align 8, !tbaa !147
  %264 = trunc i64 %263 to i16
  %265 = getelementptr inbounds i16, ptr %238, i64 9985
  store i16 %264, ptr %265, align 2, !tbaa !13
  %266 = load i64, ptr %214, align 8, !tbaa !147
  %267 = trunc i64 %266 to i16
  %268 = getelementptr inbounds i16, ptr %238, i64 9986
  store i16 %267, ptr %268, align 2, !tbaa !13
  %269 = load i64, ptr %215, align 8, !tbaa !147
  %270 = trunc i64 %269 to i16
  %271 = getelementptr inbounds i16, ptr %238, i64 9987
  store i16 %270, ptr %271, align 2, !tbaa !13
  %272 = load i64, ptr %216, align 8, !tbaa !147
  %273 = trunc i64 %272 to i16
  %274 = getelementptr inbounds i16, ptr %238, i64 9988
  store i16 %273, ptr %274, align 2, !tbaa !13
  %275 = load i64, ptr %217, align 8, !tbaa !147
  %276 = trunc i64 %275 to i16
  %277 = getelementptr inbounds i16, ptr %238, i64 9989
  store i16 %276, ptr %277, align 2, !tbaa !13
  %278 = load i64, ptr %218, align 8, !tbaa !147
  %279 = trunc i64 %278 to i16
  %280 = getelementptr inbounds i16, ptr %238, i64 9990
  store i16 %279, ptr %280, align 2, !tbaa !13
  %281 = load i64, ptr %219, align 8, !tbaa !147
  %282 = trunc i64 %281 to i16
  %283 = getelementptr inbounds i16, ptr %238, i64 9991
  store i16 %282, ptr %283, align 2, !tbaa !13
  %284 = load i64, ptr %220, align 8, !tbaa !147
  %285 = trunc i64 %284 to i16
  %286 = getelementptr inbounds i16, ptr %238, i64 9992
  store i16 %285, ptr %286, align 2, !tbaa !13
  %287 = load i64, ptr %221, align 8, !tbaa !147
  %288 = trunc i64 %287 to i16
  %289 = getelementptr inbounds i16, ptr %238, i64 9993
  store i16 %288, ptr %289, align 2, !tbaa !13
  %290 = load i64, ptr %222, align 8, !tbaa !147
  %291 = trunc i64 %290 to i16
  %292 = getelementptr inbounds i16, ptr %238, i64 9994
  store i16 %291, ptr %292, align 2, !tbaa !13
  %293 = load i64, ptr %223, align 8, !tbaa !147
  %294 = trunc i64 %293 to i16
  %295 = getelementptr inbounds i16, ptr %238, i64 9995
  store i16 %294, ptr %295, align 2, !tbaa !13
  %296 = load i64, ptr %224, align 8, !tbaa !147
  %297 = trunc i64 %296 to i16
  %298 = getelementptr inbounds i16, ptr %238, i64 9996
  store i16 %297, ptr %298, align 2, !tbaa !13
  %299 = load i64, ptr %225, align 8, !tbaa !147
  %300 = trunc i64 %299 to i16
  %301 = getelementptr inbounds i16, ptr %238, i64 9997
  store i16 %300, ptr %301, align 2, !tbaa !13
  %302 = load i64, ptr %226, align 8, !tbaa !147
  %303 = trunc i64 %302 to i16
  %304 = getelementptr inbounds i16, ptr %238, i64 9998
  store i16 %303, ptr %304, align 2, !tbaa !13
  %305 = load i64, ptr %227, align 8, !tbaa !147
  %306 = trunc i64 %305 to i16
  %307 = getelementptr inbounds i16, ptr %238, i64 9999
  store i16 %306, ptr %307, align 2, !tbaa !13
  %308 = add i64 %236, -1
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %228, label %235, !prof !42

310:                                              ; preds = %233, %169, %135
  %311 = phi { ptr, i32 } [ %170, %169 ], [ %234, %233 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %312 = load ptr, ptr %3, align 8, !tbaa !5
  %313 = icmp eq ptr %312, null
  br i1 %313, label %317, label %314

314:                                              ; preds = %310, %133
  %315 = phi { ptr, i32 } [ %134, %133 ], [ %311, %310 ]
  %316 = phi ptr [ %5, %133 ], [ %312, %310 ]
  call void @_ZdaPv(ptr noundef nonnull %316) #13
  br label %317

317:                                              ; preds = %314, %310, %131
  %318 = phi { ptr, i32 } [ %132, %131 ], [ %311, %310 ], [ %315, %314 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %318

319:                                              ; preds = %229, %232
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z54benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::unique_ptr", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %6 unwind label %67

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %8 unwind label %69

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %9, align 8, !tbaa !146
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %13 unwind label %71

13:                                               ; preds = %10
  %14 = getelementptr inbounds i64, ptr %4, i64 %11
  store i64 %12, ptr %14, align 8, !tbaa !147
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !148

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i64, ptr %4, i64 %19
  %21 = load i64, ptr %20, align 8, !tbaa !147
  %22 = trunc i64 %21 to i16
  %23 = getelementptr inbounds i16, ptr %7, i64 %19
  store i16 %22, ptr %23, align 2, !tbaa !13
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i64, ptr %4, i64 %24
  %26 = load i64, ptr %25, align 8, !tbaa !147
  %27 = trunc i64 %26 to i16
  %28 = getelementptr inbounds i16, ptr %7, i64 %24
  store i16 %27, ptr %28, align 2, !tbaa !13
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i64, ptr %4, i64 %29
  %31 = load i64, ptr %30, align 8, !tbaa !147
  %32 = trunc i64 %31 to i16
  %33 = getelementptr inbounds i16, ptr %7, i64 %29
  store i16 %32, ptr %33, align 2, !tbaa !13
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i64, ptr %4, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !147
  %37 = trunc i64 %36 to i16
  %38 = getelementptr inbounds i16, ptr %7, i64 %34
  store i16 %37, ptr %38, align 2, !tbaa !13
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i64, ptr %4, i64 %39
  %41 = load i64, ptr %40, align 8, !tbaa !147
  %42 = trunc i64 %41 to i16
  %43 = getelementptr inbounds i16, ptr %7, i64 %39
  store i16 %42, ptr %43, align 2, !tbaa !13
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !207

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %65, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i64, ptr %4, i64 %47
  %49 = load <2 x i64>, ptr %48, align 8, !tbaa !147
  %50 = getelementptr inbounds i64, ptr %48, i64 2
  %51 = load <2 x i64>, ptr %50, align 8, !tbaa !147
  %52 = trunc <2 x i64> %49 to <2 x i16>
  %53 = trunc <2 x i64> %51 to <2 x i16>
  %54 = getelementptr inbounds i16, ptr %5, i64 %47
  store <2 x i16> %52, ptr %54, align 2, !tbaa !13
  %55 = getelementptr inbounds i16, ptr %54, i64 2
  store <2 x i16> %53, ptr %55, align 2, !tbaa !13
  %56 = or i64 %47, 4
  %57 = getelementptr inbounds i64, ptr %4, i64 %56
  %58 = load <2 x i64>, ptr %57, align 8, !tbaa !147
  %59 = getelementptr inbounds i64, ptr %57, i64 2
  %60 = load <2 x i64>, ptr %59, align 8, !tbaa !147
  %61 = trunc <2 x i64> %58 to <2 x i16>
  %62 = trunc <2 x i64> %60 to <2 x i16>
  %63 = getelementptr inbounds i16, ptr %5, i64 %56
  store <2 x i16> %61, ptr %63, align 2, !tbaa !13
  %64 = getelementptr inbounds i16, ptr %63, i64 2
  store <2 x i16> %62, ptr %64, align 2, !tbaa !13
  %65 = add nuw nsw i64 %47, 8
  %66 = icmp eq i64 %65, 10000
  br i1 %66, label %73, label %46, !llvm.loop !213

67:                                               ; preds = %1
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %189

69:                                               ; preds = %6
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %186

71:                                               ; preds = %10
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %182

73:                                               ; preds = %46, %135
  %74 = phi i64 [ %136, %135 ], [ 0, %46 ]
  %75 = getelementptr inbounds i16, ptr %5, i64 %74
  %76 = load i16, ptr %75, align 2, !tbaa !13
  %77 = getelementptr inbounds i16, ptr %7, i64 %74
  %78 = load i16, ptr %77, align 2, !tbaa !13
  %79 = icmp eq i16 %76, %78
  br i1 %79, label %107, label %80

80:                                               ; preds = %128, %121, %114, %107, %73
  %81 = phi i64 [ %74, %73 ], [ %108, %107 ], [ %115, %114 ], [ %122, %121 ], [ %129, %128 ]
  %82 = and i64 %81, 4294967295
  %83 = getelementptr inbounds i16, ptr %7, i64 %82
  %84 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %85 unwind label %105

85:                                               ; preds = %80
  %86 = getelementptr inbounds i64, ptr %4, i64 %82
  %87 = load i64, ptr %86, align 8, !tbaa !147
  %88 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %87)
          to label %89 unwind label %105

89:                                               ; preds = %85
  %90 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %88, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %91 unwind label %105

91:                                               ; preds = %89
  %92 = getelementptr inbounds i16, ptr %5, i64 %82
  %93 = load i16, ptr %92, align 2, !tbaa !13
  %94 = zext i16 %93 to i64
  %95 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %88, i64 noundef %94)
          to label %96 unwind label %105

96:                                               ; preds = %91
  %97 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %95, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %98 unwind label %105

98:                                               ; preds = %96
  %99 = load i16, ptr %83, align 2, !tbaa !13
  %100 = zext i16 %99 to i64
  %101 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %95, i64 noundef %100)
          to label %102 unwind label %105

102:                                              ; preds = %98
  %103 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %101, ptr noundef nonnull @.str.149)
          to label %104 unwind label %105

104:                                              ; preds = %102
  call void @exit(i32 noundef 1) #12
  unreachable

105:                                              ; preds = %102, %98, %96, %91, %89, %85, %80
  %106 = landingpad { ptr, i32 }
          cleanup
  br label %182

107:                                              ; preds = %73
  %108 = add nuw nsw i64 %74, 1
  %109 = getelementptr inbounds i16, ptr %5, i64 %108
  %110 = load i16, ptr %109, align 2, !tbaa !13
  %111 = getelementptr inbounds i16, ptr %7, i64 %108
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = icmp eq i16 %110, %112
  br i1 %113, label %114, label %80

114:                                              ; preds = %107
  %115 = add nuw nsw i64 %74, 2
  %116 = getelementptr inbounds i16, ptr %5, i64 %115
  %117 = load i16, ptr %116, align 2, !tbaa !13
  %118 = getelementptr inbounds i16, ptr %7, i64 %115
  %119 = load i16, ptr %118, align 2, !tbaa !13
  %120 = icmp eq i16 %117, %119
  br i1 %120, label %121, label %80

121:                                              ; preds = %114
  %122 = add nuw nsw i64 %74, 3
  %123 = getelementptr inbounds i16, ptr %5, i64 %122
  %124 = load i16, ptr %123, align 2, !tbaa !13
  %125 = getelementptr inbounds i16, ptr %7, i64 %122
  %126 = load i16, ptr %125, align 2, !tbaa !13
  %127 = icmp eq i16 %124, %126
  br i1 %127, label %128, label %80

128:                                              ; preds = %121
  %129 = add nuw nsw i64 %74, 4
  %130 = getelementptr inbounds i16, ptr %5, i64 %129
  %131 = load i16, ptr %130, align 2, !tbaa !13
  %132 = getelementptr inbounds i16, ptr %7, i64 %129
  %133 = load i16, ptr %132, align 2, !tbaa !13
  %134 = icmp eq i16 %131, %133
  br i1 %134, label %135, label %80

135:                                              ; preds = %128
  %136 = add nuw nsw i64 %74, 5
  %137 = icmp eq i64 %136, 10000
  br i1 %137, label %138, label %73, !llvm.loop !209

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %140 = load i8, ptr %139, align 2, !tbaa !23, !range !40, !noundef !41
  %141 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %142 = load i64, ptr %141, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %143 unwind label %152

143:                                              ; preds = %138
  %144 = icmp ne i8 %140, 0
  %145 = icmp eq i64 %142, 0
  %146 = select i1 %144, i1 true, i1 %145
  br i1 %146, label %147, label %154, !prof !42

147:                                              ; preds = %179, %143
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %148 unwind label %152

148:                                              ; preds = %147
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %149 = load ptr, ptr %3, align 8, !tbaa !5
  %150 = icmp eq ptr %149, null
  br i1 %150, label %191, label %151

151:                                              ; preds = %148
  call void @_ZdaPv(ptr noundef nonnull %149) #13
  br label %191

152:                                              ; preds = %147, %138
  %153 = landingpad { ptr, i32 }
          cleanup
  br label %182

154:                                              ; preds = %143, %179
  %155 = phi i64 [ %180, %179 ], [ %142, %143 ]
  %156 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %3, i64 %156) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %157 = load ptr, ptr %3, align 8, !tbaa !5
  br label %158

158:                                              ; preds = %158, %154
  %159 = phi i64 [ 0, %154 ], [ %177, %158 ]
  %160 = getelementptr inbounds i64, ptr %4, i64 %159
  %161 = load <2 x i64>, ptr %160, align 8, !tbaa !147
  %162 = getelementptr inbounds i64, ptr %160, i64 2
  %163 = load <2 x i64>, ptr %162, align 8, !tbaa !147
  %164 = trunc <2 x i64> %161 to <2 x i16>
  %165 = trunc <2 x i64> %163 to <2 x i16>
  %166 = getelementptr inbounds i16, ptr %157, i64 %159
  store <2 x i16> %164, ptr %166, align 2, !tbaa !13
  %167 = getelementptr inbounds i16, ptr %166, i64 2
  store <2 x i16> %165, ptr %167, align 2, !tbaa !13
  %168 = or i64 %159, 4
  %169 = getelementptr inbounds i64, ptr %4, i64 %168
  %170 = load <2 x i64>, ptr %169, align 8, !tbaa !147
  %171 = getelementptr inbounds i64, ptr %169, i64 2
  %172 = load <2 x i64>, ptr %171, align 8, !tbaa !147
  %173 = trunc <2 x i64> %170 to <2 x i16>
  %174 = trunc <2 x i64> %172 to <2 x i16>
  %175 = getelementptr inbounds i16, ptr %157, i64 %168
  store <2 x i16> %173, ptr %175, align 2, !tbaa !13
  %176 = getelementptr inbounds i16, ptr %175, i64 2
  store <2 x i16> %174, ptr %176, align 2, !tbaa !13
  %177 = add nuw nsw i64 %159, 8
  %178 = icmp eq i64 %177, 10000
  br i1 %178, label %179, label %158, !llvm.loop !214

179:                                              ; preds = %158
  %180 = add i64 %155, -1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %147, label %154, !prof !42

182:                                              ; preds = %152, %105, %71
  %183 = phi { ptr, i32 } [ %106, %105 ], [ %153, %152 ], [ %72, %71 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %184 = load ptr, ptr %3, align 8, !tbaa !5
  %185 = icmp eq ptr %184, null
  br i1 %185, label %189, label %186

186:                                              ; preds = %182, %69
  %187 = phi { ptr, i32 } [ %70, %69 ], [ %183, %182 ]
  %188 = phi ptr [ %5, %69 ], [ %184, %182 ]
  call void @_ZdaPv(ptr noundef nonnull %188) #13
  br label %189

189:                                              ; preds = %186, %182, %67
  %190 = phi { ptr, i32 } [ %68, %67 ], [ %183, %182 ], [ %187, %186 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %190

191:                                              ; preds = %148, %151
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::uniform_int_distribution.65", align 8
  %4 = alloca %"class.std::unique_ptr", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %7 unwind label %56

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #11
  store i64 0, ptr %3, align 8, !tbaa !144
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %3, i64 0, i32 1
  store i64 -1, ptr %8, align 8, !tbaa !146
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %3)
          to label %12 unwind label %60

12:                                               ; preds = %9
  %13 = getelementptr inbounds i64, ptr %5, i64 %10
  store i64 %11, ptr %13, align 8, !tbaa !147
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !148

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %17, align 2, !tbaa !12
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %21 unwind label %58

21:                                               ; preds = %18
  %22 = getelementptr inbounds i16, ptr %6, i64 %19
  store i16 %20, ptr %22, align 2, !tbaa !13
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !14

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %177

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %51, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr inbounds i64, ptr %5, i64 9984
  %36 = getelementptr inbounds i64, ptr %5, i64 9985
  %37 = getelementptr inbounds i64, ptr %5, i64 9986
  %38 = getelementptr inbounds i64, ptr %5, i64 9987
  %39 = getelementptr inbounds i64, ptr %5, i64 9988
  %40 = getelementptr inbounds i64, ptr %5, i64 9989
  %41 = getelementptr inbounds i64, ptr %5, i64 9990
  %42 = getelementptr inbounds i64, ptr %5, i64 9991
  %43 = getelementptr inbounds i64, ptr %5, i64 9992
  %44 = getelementptr inbounds i64, ptr %5, i64 9993
  %45 = getelementptr inbounds i64, ptr %5, i64 9994
  %46 = getelementptr inbounds i64, ptr %5, i64 9995
  %47 = getelementptr inbounds i64, ptr %5, i64 9996
  %48 = getelementptr inbounds i64, ptr %5, i64 9997
  %49 = getelementptr inbounds i64, ptr %5, i64 9998
  %50 = getelementptr inbounds i64, ptr %5, i64 9999
  br label %62

51:                                               ; preds = %94, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %52 unwind label %177

52:                                               ; preds = %51
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = icmp eq ptr %53, null
  br i1 %54, label %186, label %55

55:                                               ; preds = %52
  call void @_ZdaPv(ptr noundef nonnull %53) #13
  br label %186

56:                                               ; preds = %1
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %184

58:                                               ; preds = %18
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %181

60:                                               ; preds = %9
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %181

62:                                               ; preds = %34, %94
  %63 = phi i64 [ %175, %94 ], [ %29, %34 ]
  %64 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %4, i64 %64) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %65 = load ptr, ptr %4, align 8, !tbaa !5
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i64 [ 0, %62 ], [ %92, %66 ]
  %68 = getelementptr inbounds i64, ptr %5, i64 %67
  %69 = load <8 x i64>, ptr %68, align 8, !tbaa !147
  %70 = getelementptr inbounds i64, ptr %68, i64 8
  %71 = load <8 x i64>, ptr %70, align 8, !tbaa !147
  %72 = getelementptr inbounds i64, ptr %68, i64 16
  %73 = load <8 x i64>, ptr %72, align 8, !tbaa !147
  %74 = getelementptr inbounds i64, ptr %68, i64 24
  %75 = load <8 x i64>, ptr %74, align 8, !tbaa !147
  %76 = getelementptr inbounds i16, ptr %65, i64 %67
  %77 = load <8 x i16>, ptr %76, align 2, !tbaa !13
  %78 = getelementptr inbounds i16, ptr %76, i64 8
  %79 = load <8 x i16>, ptr %78, align 2, !tbaa !13
  %80 = getelementptr inbounds i16, ptr %76, i64 16
  %81 = load <8 x i16>, ptr %80, align 2, !tbaa !13
  %82 = getelementptr inbounds i16, ptr %76, i64 24
  %83 = load <8 x i16>, ptr %82, align 2, !tbaa !13
  %84 = trunc <8 x i64> %69 to <8 x i16>
  %85 = trunc <8 x i64> %71 to <8 x i16>
  %86 = trunc <8 x i64> %73 to <8 x i16>
  %87 = trunc <8 x i64> %75 to <8 x i16>
  %88 = add <8 x i16> %77, %84
  %89 = add <8 x i16> %79, %85
  %90 = add <8 x i16> %81, %86
  %91 = add <8 x i16> %83, %87
  store <8 x i16> %88, ptr %76, align 2, !tbaa !13
  store <8 x i16> %89, ptr %78, align 2, !tbaa !13
  store <8 x i16> %90, ptr %80, align 2, !tbaa !13
  store <8 x i16> %91, ptr %82, align 2, !tbaa !13
  %92 = add nuw i64 %67, 32
  %93 = icmp eq i64 %92, 9984
  br i1 %93, label %94, label %66, !llvm.loop !215

94:                                               ; preds = %66
  %95 = load i64, ptr %35, align 8, !tbaa !147
  %96 = getelementptr inbounds i16, ptr %65, i64 9984
  %97 = load i16, ptr %96, align 2, !tbaa !13
  %98 = trunc i64 %95 to i16
  %99 = add i16 %97, %98
  store i16 %99, ptr %96, align 2, !tbaa !13
  %100 = load i64, ptr %36, align 8, !tbaa !147
  %101 = getelementptr inbounds i16, ptr %65, i64 9985
  %102 = load i16, ptr %101, align 2, !tbaa !13
  %103 = trunc i64 %100 to i16
  %104 = add i16 %102, %103
  store i16 %104, ptr %101, align 2, !tbaa !13
  %105 = load i64, ptr %37, align 8, !tbaa !147
  %106 = getelementptr inbounds i16, ptr %65, i64 9986
  %107 = load i16, ptr %106, align 2, !tbaa !13
  %108 = trunc i64 %105 to i16
  %109 = add i16 %107, %108
  store i16 %109, ptr %106, align 2, !tbaa !13
  %110 = load i64, ptr %38, align 8, !tbaa !147
  %111 = getelementptr inbounds i16, ptr %65, i64 9987
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = trunc i64 %110 to i16
  %114 = add i16 %112, %113
  store i16 %114, ptr %111, align 2, !tbaa !13
  %115 = load i64, ptr %39, align 8, !tbaa !147
  %116 = getelementptr inbounds i16, ptr %65, i64 9988
  %117 = load i16, ptr %116, align 2, !tbaa !13
  %118 = trunc i64 %115 to i16
  %119 = add i16 %117, %118
  store i16 %119, ptr %116, align 2, !tbaa !13
  %120 = load i64, ptr %40, align 8, !tbaa !147
  %121 = getelementptr inbounds i16, ptr %65, i64 9989
  %122 = load i16, ptr %121, align 2, !tbaa !13
  %123 = trunc i64 %120 to i16
  %124 = add i16 %122, %123
  store i16 %124, ptr %121, align 2, !tbaa !13
  %125 = load i64, ptr %41, align 8, !tbaa !147
  %126 = getelementptr inbounds i16, ptr %65, i64 9990
  %127 = load i16, ptr %126, align 2, !tbaa !13
  %128 = trunc i64 %125 to i16
  %129 = add i16 %127, %128
  store i16 %129, ptr %126, align 2, !tbaa !13
  %130 = load i64, ptr %42, align 8, !tbaa !147
  %131 = getelementptr inbounds i16, ptr %65, i64 9991
  %132 = load i16, ptr %131, align 2, !tbaa !13
  %133 = trunc i64 %130 to i16
  %134 = add i16 %132, %133
  store i16 %134, ptr %131, align 2, !tbaa !13
  %135 = load i64, ptr %43, align 8, !tbaa !147
  %136 = getelementptr inbounds i16, ptr %65, i64 9992
  %137 = load i16, ptr %136, align 2, !tbaa !13
  %138 = trunc i64 %135 to i16
  %139 = add i16 %137, %138
  store i16 %139, ptr %136, align 2, !tbaa !13
  %140 = load i64, ptr %44, align 8, !tbaa !147
  %141 = getelementptr inbounds i16, ptr %65, i64 9993
  %142 = load i16, ptr %141, align 2, !tbaa !13
  %143 = trunc i64 %140 to i16
  %144 = add i16 %142, %143
  store i16 %144, ptr %141, align 2, !tbaa !13
  %145 = load i64, ptr %45, align 8, !tbaa !147
  %146 = getelementptr inbounds i16, ptr %65, i64 9994
  %147 = load i16, ptr %146, align 2, !tbaa !13
  %148 = trunc i64 %145 to i16
  %149 = add i16 %147, %148
  store i16 %149, ptr %146, align 2, !tbaa !13
  %150 = load i64, ptr %46, align 8, !tbaa !147
  %151 = getelementptr inbounds i16, ptr %65, i64 9995
  %152 = load i16, ptr %151, align 2, !tbaa !13
  %153 = trunc i64 %150 to i16
  %154 = add i16 %152, %153
  store i16 %154, ptr %151, align 2, !tbaa !13
  %155 = load i64, ptr %47, align 8, !tbaa !147
  %156 = getelementptr inbounds i16, ptr %65, i64 9996
  %157 = load i16, ptr %156, align 2, !tbaa !13
  %158 = trunc i64 %155 to i16
  %159 = add i16 %157, %158
  store i16 %159, ptr %156, align 2, !tbaa !13
  %160 = load i64, ptr %48, align 8, !tbaa !147
  %161 = getelementptr inbounds i16, ptr %65, i64 9997
  %162 = load i16, ptr %161, align 2, !tbaa !13
  %163 = trunc i64 %160 to i16
  %164 = add i16 %162, %163
  store i16 %164, ptr %161, align 2, !tbaa !13
  %165 = load i64, ptr %49, align 8, !tbaa !147
  %166 = getelementptr inbounds i16, ptr %65, i64 9998
  %167 = load i16, ptr %166, align 2, !tbaa !13
  %168 = trunc i64 %165 to i16
  %169 = add i16 %167, %168
  store i16 %169, ptr %166, align 2, !tbaa !13
  %170 = load i64, ptr %50, align 8, !tbaa !147
  %171 = getelementptr inbounds i16, ptr %65, i64 9999
  %172 = load i16, ptr %171, align 2, !tbaa !13
  %173 = trunc i64 %170 to i16
  %174 = add i16 %172, %173
  store i16 %174, ptr %171, align 2, !tbaa !13
  %175 = add i64 %63, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %51, label %62, !prof !42

177:                                              ; preds = %25, %51
  %178 = landingpad { ptr, i32 }
          cleanup
  %179 = load ptr, ptr %4, align 8, !tbaa !5
  %180 = icmp eq ptr %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %60, %58, %177
  %182 = phi { ptr, i32 } [ %178, %177 ], [ %61, %60 ], [ %59, %58 ]
  %183 = phi ptr [ %179, %177 ], [ %6, %60 ], [ %6, %58 ]
  call void @_ZdaPv(ptr noundef nonnull %183) #13
  br label %184

184:                                              ; preds = %181, %177, %56
  %185 = phi { ptr, i32 } [ %57, %56 ], [ %178, %177 ], [ %182, %181 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %185

186:                                              ; preds = %52, %55
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::uniform_int_distribution.65", align 8
  %4 = alloca %"class.std::unique_ptr", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %7 unwind label %56

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #11
  store i64 0, ptr %3, align 8, !tbaa !144
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %3, i64 0, i32 1
  store i64 -1, ptr %8, align 8, !tbaa !146
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %3)
          to label %12 unwind label %60

12:                                               ; preds = %9
  %13 = getelementptr inbounds i64, ptr %5, i64 %10
  store i64 %11, ptr %13, align 8, !tbaa !147
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !148

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %17, align 2, !tbaa !12
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %21 unwind label %58

21:                                               ; preds = %18
  %22 = getelementptr inbounds i16, ptr %6, i64 %19
  store i16 %20, ptr %22, align 2, !tbaa !13
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !14

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %177

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %51, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr inbounds i64, ptr %5, i64 9984
  %36 = getelementptr inbounds i64, ptr %5, i64 9985
  %37 = getelementptr inbounds i64, ptr %5, i64 9986
  %38 = getelementptr inbounds i64, ptr %5, i64 9987
  %39 = getelementptr inbounds i64, ptr %5, i64 9988
  %40 = getelementptr inbounds i64, ptr %5, i64 9989
  %41 = getelementptr inbounds i64, ptr %5, i64 9990
  %42 = getelementptr inbounds i64, ptr %5, i64 9991
  %43 = getelementptr inbounds i64, ptr %5, i64 9992
  %44 = getelementptr inbounds i64, ptr %5, i64 9993
  %45 = getelementptr inbounds i64, ptr %5, i64 9994
  %46 = getelementptr inbounds i64, ptr %5, i64 9995
  %47 = getelementptr inbounds i64, ptr %5, i64 9996
  %48 = getelementptr inbounds i64, ptr %5, i64 9997
  %49 = getelementptr inbounds i64, ptr %5, i64 9998
  %50 = getelementptr inbounds i64, ptr %5, i64 9999
  br label %62

51:                                               ; preds = %94, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %52 unwind label %177

52:                                               ; preds = %51
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = icmp eq ptr %53, null
  br i1 %54, label %186, label %55

55:                                               ; preds = %52
  call void @_ZdaPv(ptr noundef nonnull %53) #13
  br label %186

56:                                               ; preds = %1
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %184

58:                                               ; preds = %18
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %181

60:                                               ; preds = %9
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %181

62:                                               ; preds = %34, %94
  %63 = phi i64 [ %175, %94 ], [ %29, %34 ]
  %64 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %4, i64 %64) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %65 = load ptr, ptr %4, align 8, !tbaa !5
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i64 [ 0, %62 ], [ %92, %66 ]
  %68 = getelementptr inbounds i64, ptr %5, i64 %67
  %69 = load <16 x i64>, ptr %68, align 8, !tbaa !147
  %70 = getelementptr inbounds i64, ptr %68, i64 16
  %71 = load <16 x i64>, ptr %70, align 8, !tbaa !147
  %72 = getelementptr inbounds i64, ptr %68, i64 32
  %73 = load <16 x i64>, ptr %72, align 8, !tbaa !147
  %74 = getelementptr inbounds i64, ptr %68, i64 48
  %75 = load <16 x i64>, ptr %74, align 8, !tbaa !147
  %76 = getelementptr inbounds i16, ptr %65, i64 %67
  %77 = load <16 x i16>, ptr %76, align 2, !tbaa !13
  %78 = getelementptr inbounds i16, ptr %76, i64 16
  %79 = load <16 x i16>, ptr %78, align 2, !tbaa !13
  %80 = getelementptr inbounds i16, ptr %76, i64 32
  %81 = load <16 x i16>, ptr %80, align 2, !tbaa !13
  %82 = getelementptr inbounds i16, ptr %76, i64 48
  %83 = load <16 x i16>, ptr %82, align 2, !tbaa !13
  %84 = trunc <16 x i64> %69 to <16 x i16>
  %85 = trunc <16 x i64> %71 to <16 x i16>
  %86 = trunc <16 x i64> %73 to <16 x i16>
  %87 = trunc <16 x i64> %75 to <16 x i16>
  %88 = add <16 x i16> %77, %84
  %89 = add <16 x i16> %79, %85
  %90 = add <16 x i16> %81, %86
  %91 = add <16 x i16> %83, %87
  store <16 x i16> %88, ptr %76, align 2, !tbaa !13
  store <16 x i16> %89, ptr %78, align 2, !tbaa !13
  store <16 x i16> %90, ptr %80, align 2, !tbaa !13
  store <16 x i16> %91, ptr %82, align 2, !tbaa !13
  %92 = add nuw i64 %67, 64
  %93 = icmp eq i64 %92, 9984
  br i1 %93, label %94, label %66, !llvm.loop !216

94:                                               ; preds = %66
  %95 = load i64, ptr %35, align 8, !tbaa !147
  %96 = getelementptr inbounds i16, ptr %65, i64 9984
  %97 = load i16, ptr %96, align 2, !tbaa !13
  %98 = trunc i64 %95 to i16
  %99 = add i16 %97, %98
  store i16 %99, ptr %96, align 2, !tbaa !13
  %100 = load i64, ptr %36, align 8, !tbaa !147
  %101 = getelementptr inbounds i16, ptr %65, i64 9985
  %102 = load i16, ptr %101, align 2, !tbaa !13
  %103 = trunc i64 %100 to i16
  %104 = add i16 %102, %103
  store i16 %104, ptr %101, align 2, !tbaa !13
  %105 = load i64, ptr %37, align 8, !tbaa !147
  %106 = getelementptr inbounds i16, ptr %65, i64 9986
  %107 = load i16, ptr %106, align 2, !tbaa !13
  %108 = trunc i64 %105 to i16
  %109 = add i16 %107, %108
  store i16 %109, ptr %106, align 2, !tbaa !13
  %110 = load i64, ptr %38, align 8, !tbaa !147
  %111 = getelementptr inbounds i16, ptr %65, i64 9987
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = trunc i64 %110 to i16
  %114 = add i16 %112, %113
  store i16 %114, ptr %111, align 2, !tbaa !13
  %115 = load i64, ptr %39, align 8, !tbaa !147
  %116 = getelementptr inbounds i16, ptr %65, i64 9988
  %117 = load i16, ptr %116, align 2, !tbaa !13
  %118 = trunc i64 %115 to i16
  %119 = add i16 %117, %118
  store i16 %119, ptr %116, align 2, !tbaa !13
  %120 = load i64, ptr %40, align 8, !tbaa !147
  %121 = getelementptr inbounds i16, ptr %65, i64 9989
  %122 = load i16, ptr %121, align 2, !tbaa !13
  %123 = trunc i64 %120 to i16
  %124 = add i16 %122, %123
  store i16 %124, ptr %121, align 2, !tbaa !13
  %125 = load i64, ptr %41, align 8, !tbaa !147
  %126 = getelementptr inbounds i16, ptr %65, i64 9990
  %127 = load i16, ptr %126, align 2, !tbaa !13
  %128 = trunc i64 %125 to i16
  %129 = add i16 %127, %128
  store i16 %129, ptr %126, align 2, !tbaa !13
  %130 = load i64, ptr %42, align 8, !tbaa !147
  %131 = getelementptr inbounds i16, ptr %65, i64 9991
  %132 = load i16, ptr %131, align 2, !tbaa !13
  %133 = trunc i64 %130 to i16
  %134 = add i16 %132, %133
  store i16 %134, ptr %131, align 2, !tbaa !13
  %135 = load i64, ptr %43, align 8, !tbaa !147
  %136 = getelementptr inbounds i16, ptr %65, i64 9992
  %137 = load i16, ptr %136, align 2, !tbaa !13
  %138 = trunc i64 %135 to i16
  %139 = add i16 %137, %138
  store i16 %139, ptr %136, align 2, !tbaa !13
  %140 = load i64, ptr %44, align 8, !tbaa !147
  %141 = getelementptr inbounds i16, ptr %65, i64 9993
  %142 = load i16, ptr %141, align 2, !tbaa !13
  %143 = trunc i64 %140 to i16
  %144 = add i16 %142, %143
  store i16 %144, ptr %141, align 2, !tbaa !13
  %145 = load i64, ptr %45, align 8, !tbaa !147
  %146 = getelementptr inbounds i16, ptr %65, i64 9994
  %147 = load i16, ptr %146, align 2, !tbaa !13
  %148 = trunc i64 %145 to i16
  %149 = add i16 %147, %148
  store i16 %149, ptr %146, align 2, !tbaa !13
  %150 = load i64, ptr %46, align 8, !tbaa !147
  %151 = getelementptr inbounds i16, ptr %65, i64 9995
  %152 = load i16, ptr %151, align 2, !tbaa !13
  %153 = trunc i64 %150 to i16
  %154 = add i16 %152, %153
  store i16 %154, ptr %151, align 2, !tbaa !13
  %155 = load i64, ptr %47, align 8, !tbaa !147
  %156 = getelementptr inbounds i16, ptr %65, i64 9996
  %157 = load i16, ptr %156, align 2, !tbaa !13
  %158 = trunc i64 %155 to i16
  %159 = add i16 %157, %158
  store i16 %159, ptr %156, align 2, !tbaa !13
  %160 = load i64, ptr %48, align 8, !tbaa !147
  %161 = getelementptr inbounds i16, ptr %65, i64 9997
  %162 = load i16, ptr %161, align 2, !tbaa !13
  %163 = trunc i64 %160 to i16
  %164 = add i16 %162, %163
  store i16 %164, ptr %161, align 2, !tbaa !13
  %165 = load i64, ptr %49, align 8, !tbaa !147
  %166 = getelementptr inbounds i16, ptr %65, i64 9998
  %167 = load i16, ptr %166, align 2, !tbaa !13
  %168 = trunc i64 %165 to i16
  %169 = add i16 %167, %168
  store i16 %169, ptr %166, align 2, !tbaa !13
  %170 = load i64, ptr %50, align 8, !tbaa !147
  %171 = getelementptr inbounds i16, ptr %65, i64 9999
  %172 = load i16, ptr %171, align 2, !tbaa !13
  %173 = trunc i64 %170 to i16
  %174 = add i16 %172, %173
  store i16 %174, ptr %171, align 2, !tbaa !13
  %175 = add i64 %63, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %51, label %62, !prof !42

177:                                              ; preds = %25, %51
  %178 = landingpad { ptr, i32 }
          cleanup
  %179 = load ptr, ptr %4, align 8, !tbaa !5
  %180 = icmp eq ptr %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %60, %58, %177
  %182 = phi { ptr, i32 } [ %178, %177 ], [ %61, %60 ], [ %59, %58 ]
  %183 = phi ptr [ %179, %177 ], [ %6, %60 ], [ %6, %58 ]
  call void @_ZdaPv(ptr noundef nonnull %183) #13
  br label %184

184:                                              ; preds = %181, %177, %56
  %185 = phi { ptr, i32 } [ %57, %56 ], [ %178, %177 ], [ %182, %181 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %185

186:                                              ; preds = %52, %55
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::uniform_int_distribution.65", align 8
  %4 = alloca %"class.std::unique_ptr", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %7 unwind label %39

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #11
  store i64 0, ptr %3, align 8, !tbaa !144
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %3, i64 0, i32 1
  store i64 -1, ptr %8, align 8, !tbaa !146
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %3)
          to label %12 unwind label %43

12:                                               ; preds = %9
  %13 = getelementptr inbounds i64, ptr %5, i64 %10
  store i64 %11, ptr %13, align 8, !tbaa !147
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !148

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %17, align 2, !tbaa !12
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %21 unwind label %41

21:                                               ; preds = %18
  %22 = getelementptr inbounds i16, ptr %6, i64 %19
  store i16 %20, ptr %22, align 2, !tbaa !13
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !14

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %81

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %34, label %45, !prof !42

34:                                               ; preds = %78, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %35 unwind label %81

35:                                               ; preds = %34
  %36 = load ptr, ptr %4, align 8, !tbaa !5
  %37 = icmp eq ptr %36, null
  br i1 %37, label %90, label %38

38:                                               ; preds = %35
  call void @_ZdaPv(ptr noundef nonnull %36) #13
  br label %90

39:                                               ; preds = %1
  %40 = landingpad { ptr, i32 }
          cleanup
  br label %88

41:                                               ; preds = %18
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %85

43:                                               ; preds = %9
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %85

45:                                               ; preds = %30, %78
  %46 = phi i64 [ %79, %78 ], [ %29, %30 ]
  %47 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %4, i64 %47) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %48 = load ptr, ptr %4, align 8, !tbaa !5
  br label %49

49:                                               ; preds = %49, %45
  %50 = phi i64 [ 0, %45 ], [ %76, %49 ]
  %51 = getelementptr inbounds i64, ptr %5, i64 %50
  %52 = load <2 x i64>, ptr %51, align 8, !tbaa !147
  %53 = getelementptr inbounds i64, ptr %51, i64 2
  %54 = load <2 x i64>, ptr %53, align 8, !tbaa !147
  %55 = getelementptr inbounds i16, ptr %48, i64 %50
  %56 = load <2 x i16>, ptr %55, align 2, !tbaa !13
  %57 = getelementptr inbounds i16, ptr %55, i64 2
  %58 = load <2 x i16>, ptr %57, align 2, !tbaa !13
  %59 = trunc <2 x i64> %52 to <2 x i16>
  %60 = trunc <2 x i64> %54 to <2 x i16>
  %61 = add <2 x i16> %56, %59
  %62 = add <2 x i16> %58, %60
  store <2 x i16> %61, ptr %55, align 2, !tbaa !13
  store <2 x i16> %62, ptr %57, align 2, !tbaa !13
  %63 = or i64 %50, 4
  %64 = getelementptr inbounds i64, ptr %5, i64 %63
  %65 = load <2 x i64>, ptr %64, align 8, !tbaa !147
  %66 = getelementptr inbounds i64, ptr %64, i64 2
  %67 = load <2 x i64>, ptr %66, align 8, !tbaa !147
  %68 = getelementptr inbounds i16, ptr %48, i64 %63
  %69 = load <2 x i16>, ptr %68, align 2, !tbaa !13
  %70 = getelementptr inbounds i16, ptr %68, i64 2
  %71 = load <2 x i16>, ptr %70, align 2, !tbaa !13
  %72 = trunc <2 x i64> %65 to <2 x i16>
  %73 = trunc <2 x i64> %67 to <2 x i16>
  %74 = add <2 x i16> %69, %72
  %75 = add <2 x i16> %71, %73
  store <2 x i16> %74, ptr %68, align 2, !tbaa !13
  store <2 x i16> %75, ptr %70, align 2, !tbaa !13
  %76 = add nuw nsw i64 %50, 8
  %77 = icmp eq i64 %76, 10000
  br i1 %77, label %78, label %49, !llvm.loop !217

78:                                               ; preds = %49
  %79 = add i64 %46, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %34, label %45, !prof !42

81:                                               ; preds = %25, %34
  %82 = landingpad { ptr, i32 }
          cleanup
  %83 = load ptr, ptr %4, align 8, !tbaa !5
  %84 = icmp eq ptr %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %43, %41, %81
  %86 = phi { ptr, i32 } [ %82, %81 ], [ %44, %43 ], [ %42, %41 ]
  %87 = phi ptr [ %83, %81 ], [ %6, %43 ], [ %6, %41 ]
  call void @_ZdaPv(ptr noundef nonnull %87) #13
  br label %88

88:                                               ; preds = %85, %81, %39
  %89 = phi { ptr, i32 } [ %40, %39 ], [ %82, %81 ], [ %86, %85 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %89

90:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::unique_ptr.44", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %9, align 8, !tbaa !146
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i64, ptr %4, i64 %11
  store i64 %12, ptr %14, align 8, !tbaa !147
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !148

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i64, ptr %4, i64 %19
  %21 = load i64, ptr %20, align 8, !tbaa !147
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds i32, ptr %7, i64 %19
  store i32 %22, ptr %23, align 4, !tbaa !95
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i64, ptr %4, i64 %24
  %26 = load i64, ptr %25, align 8, !tbaa !147
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds i32, ptr %7, i64 %24
  store i32 %27, ptr %28, align 4, !tbaa !95
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i64, ptr %4, i64 %29
  %31 = load i64, ptr %30, align 8, !tbaa !147
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds i32, ptr %7, i64 %29
  store i32 %32, ptr %33, align 4, !tbaa !95
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i64, ptr %4, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !147
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds i32, ptr %7, i64 %34
  store i32 %37, ptr %38, align 4, !tbaa !95
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i64, ptr %4, i64 %39
  %41 = load i64, ptr %40, align 8, !tbaa !147
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds i32, ptr %7, i64 %39
  store i32 %42, ptr %43, align 4, !tbaa !95
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !218

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i64, ptr %4, i64 %47
  %49 = load <8 x i64>, ptr %48, align 8, !tbaa !147
  %50 = getelementptr inbounds i64, ptr %48, i64 8
  %51 = load <8 x i64>, ptr %50, align 8, !tbaa !147
  %52 = getelementptr inbounds i64, ptr %48, i64 16
  %53 = load <8 x i64>, ptr %52, align 8, !tbaa !147
  %54 = getelementptr inbounds i64, ptr %48, i64 24
  %55 = load <8 x i64>, ptr %54, align 8, !tbaa !147
  %56 = trunc <8 x i64> %49 to <8 x i32>
  %57 = trunc <8 x i64> %51 to <8 x i32>
  %58 = trunc <8 x i64> %53 to <8 x i32>
  %59 = trunc <8 x i64> %55 to <8 x i32>
  %60 = getelementptr inbounds i32, ptr %5, i64 %47
  store <8 x i32> %56, ptr %60, align 4, !tbaa !95
  %61 = getelementptr inbounds i32, ptr %60, i64 8
  store <8 x i32> %57, ptr %61, align 4, !tbaa !95
  %62 = getelementptr inbounds i32, ptr %60, i64 16
  store <8 x i32> %58, ptr %62, align 4, !tbaa !95
  %63 = getelementptr inbounds i32, ptr %60, i64 24
  store <8 x i32> %59, ptr %63, align 4, !tbaa !95
  %64 = add nuw i64 %47, 32
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !219

66:                                               ; preds = %46
  %67 = getelementptr inbounds i64, ptr %4, i64 9984
  %68 = load i64, ptr %67, align 8, !tbaa !147
  %69 = trunc i64 %68 to i32
  %70 = getelementptr inbounds i32, ptr %5, i64 9984
  store i32 %69, ptr %70, align 4, !tbaa !95
  %71 = getelementptr inbounds i64, ptr %4, i64 9985
  %72 = load i64, ptr %71, align 8, !tbaa !147
  %73 = trunc i64 %72 to i32
  %74 = getelementptr inbounds i32, ptr %5, i64 9985
  store i32 %73, ptr %74, align 4, !tbaa !95
  %75 = getelementptr inbounds i64, ptr %4, i64 9986
  %76 = load i64, ptr %75, align 8, !tbaa !147
  %77 = trunc i64 %76 to i32
  %78 = getelementptr inbounds i32, ptr %5, i64 9986
  store i32 %77, ptr %78, align 4, !tbaa !95
  %79 = getelementptr inbounds i64, ptr %4, i64 9987
  %80 = load i64, ptr %79, align 8, !tbaa !147
  %81 = trunc i64 %80 to i32
  %82 = getelementptr inbounds i32, ptr %5, i64 9987
  store i32 %81, ptr %82, align 4, !tbaa !95
  %83 = getelementptr inbounds i64, ptr %4, i64 9988
  %84 = load i64, ptr %83, align 8, !tbaa !147
  %85 = trunc i64 %84 to i32
  %86 = getelementptr inbounds i32, ptr %5, i64 9988
  store i32 %85, ptr %86, align 4, !tbaa !95
  %87 = getelementptr inbounds i64, ptr %4, i64 9989
  %88 = load i64, ptr %87, align 8, !tbaa !147
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i32, ptr %5, i64 9989
  store i32 %89, ptr %90, align 4, !tbaa !95
  %91 = getelementptr inbounds i64, ptr %4, i64 9990
  %92 = load i64, ptr %91, align 8, !tbaa !147
  %93 = trunc i64 %92 to i32
  %94 = getelementptr inbounds i32, ptr %5, i64 9990
  store i32 %93, ptr %94, align 4, !tbaa !95
  %95 = getelementptr inbounds i64, ptr %4, i64 9991
  %96 = load i64, ptr %95, align 8, !tbaa !147
  %97 = trunc i64 %96 to i32
  %98 = getelementptr inbounds i32, ptr %5, i64 9991
  store i32 %97, ptr %98, align 4, !tbaa !95
  %99 = getelementptr inbounds i64, ptr %4, i64 9992
  %100 = load i64, ptr %99, align 8, !tbaa !147
  %101 = trunc i64 %100 to i32
  %102 = getelementptr inbounds i32, ptr %5, i64 9992
  store i32 %101, ptr %102, align 4, !tbaa !95
  %103 = getelementptr inbounds i64, ptr %4, i64 9993
  %104 = load i64, ptr %103, align 8, !tbaa !147
  %105 = trunc i64 %104 to i32
  %106 = getelementptr inbounds i32, ptr %5, i64 9993
  store i32 %105, ptr %106, align 4, !tbaa !95
  %107 = getelementptr inbounds i64, ptr %4, i64 9994
  %108 = load i64, ptr %107, align 8, !tbaa !147
  %109 = trunc i64 %108 to i32
  %110 = getelementptr inbounds i32, ptr %5, i64 9994
  store i32 %109, ptr %110, align 4, !tbaa !95
  %111 = getelementptr inbounds i64, ptr %4, i64 9995
  %112 = load i64, ptr %111, align 8, !tbaa !147
  %113 = trunc i64 %112 to i32
  %114 = getelementptr inbounds i32, ptr %5, i64 9995
  store i32 %113, ptr %114, align 4, !tbaa !95
  %115 = getelementptr inbounds i64, ptr %4, i64 9996
  %116 = load i64, ptr %115, align 8, !tbaa !147
  %117 = trunc i64 %116 to i32
  %118 = getelementptr inbounds i32, ptr %5, i64 9996
  store i32 %117, ptr %118, align 4, !tbaa !95
  %119 = getelementptr inbounds i64, ptr %4, i64 9997
  %120 = load i64, ptr %119, align 8, !tbaa !147
  %121 = trunc i64 %120 to i32
  %122 = getelementptr inbounds i32, ptr %5, i64 9997
  store i32 %121, ptr %122, align 4, !tbaa !95
  %123 = getelementptr inbounds i64, ptr %4, i64 9998
  %124 = load i64, ptr %123, align 8, !tbaa !147
  %125 = trunc i64 %124 to i32
  %126 = getelementptr inbounds i32, ptr %5, i64 9998
  store i32 %125, ptr %126, align 4, !tbaa !95
  %127 = getelementptr inbounds i64, ptr %4, i64 9999
  %128 = load i64, ptr %127, align 8, !tbaa !147
  %129 = trunc i64 %128 to i32
  %130 = getelementptr inbounds i32, ptr %5, i64 9999
  store i32 %129, ptr %130, align 4, !tbaa !95
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %317

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %314

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %310

137:                                              ; preds = %199, %66
  %138 = phi i64 [ 0, %66 ], [ %200, %199 ]
  %139 = getelementptr inbounds i32, ptr %5, i64 %138
  %140 = load i32, ptr %139, align 4, !tbaa !95
  %141 = getelementptr inbounds i32, ptr %7, i64 %138
  %142 = load i32, ptr %141, align 4, !tbaa !95
  %143 = icmp eq i32 %140, %142
  br i1 %143, label %171, label %144

144:                                              ; preds = %192, %185, %178, %171, %137
  %145 = phi i64 [ %138, %137 ], [ %172, %171 ], [ %179, %178 ], [ %186, %185 ], [ %193, %192 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i32, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %169

149:                                              ; preds = %144
  %150 = getelementptr inbounds i64, ptr %4, i64 %146
  %151 = load i64, ptr %150, align 8, !tbaa !147
  %152 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %151)
          to label %153 unwind label %169

153:                                              ; preds = %149
  %154 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %152, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %155 unwind label %169

155:                                              ; preds = %153
  %156 = getelementptr inbounds i32, ptr %5, i64 %146
  %157 = load i32, ptr %156, align 4, !tbaa !95
  %158 = zext i32 %157 to i64
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %152, i64 noundef %158)
          to label %160 unwind label %169

160:                                              ; preds = %155
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %162 unwind label %169

162:                                              ; preds = %160
  %163 = load i32, ptr %147, align 4, !tbaa !95
  %164 = zext i32 %163 to i64
  %165 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %159, i64 noundef %164)
          to label %166 unwind label %169

166:                                              ; preds = %162
  %167 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %165, ptr noundef nonnull @.str.149)
          to label %168 unwind label %169

168:                                              ; preds = %166
  call void @exit(i32 noundef 1) #12
  unreachable

169:                                              ; preds = %166, %162, %160, %155, %153, %149, %144
  %170 = landingpad { ptr, i32 }
          cleanup
  br label %310

171:                                              ; preds = %137
  %172 = add nuw nsw i64 %138, 1
  %173 = getelementptr inbounds i32, ptr %5, i64 %172
  %174 = load i32, ptr %173, align 4, !tbaa !95
  %175 = getelementptr inbounds i32, ptr %7, i64 %172
  %176 = load i32, ptr %175, align 4, !tbaa !95
  %177 = icmp eq i32 %174, %176
  br i1 %177, label %178, label %144

178:                                              ; preds = %171
  %179 = add nuw nsw i64 %138, 2
  %180 = getelementptr inbounds i32, ptr %5, i64 %179
  %181 = load i32, ptr %180, align 4, !tbaa !95
  %182 = getelementptr inbounds i32, ptr %7, i64 %179
  %183 = load i32, ptr %182, align 4, !tbaa !95
  %184 = icmp eq i32 %181, %183
  br i1 %184, label %185, label %144

185:                                              ; preds = %178
  %186 = add nuw nsw i64 %138, 3
  %187 = getelementptr inbounds i32, ptr %5, i64 %186
  %188 = load i32, ptr %187, align 4, !tbaa !95
  %189 = getelementptr inbounds i32, ptr %7, i64 %186
  %190 = load i32, ptr %189, align 4, !tbaa !95
  %191 = icmp eq i32 %188, %190
  br i1 %191, label %192, label %144

192:                                              ; preds = %185
  %193 = add nuw nsw i64 %138, 4
  %194 = getelementptr inbounds i32, ptr %5, i64 %193
  %195 = load i32, ptr %194, align 4, !tbaa !95
  %196 = getelementptr inbounds i32, ptr %7, i64 %193
  %197 = load i32, ptr %196, align 4, !tbaa !95
  %198 = icmp eq i32 %195, %197
  br i1 %198, label %199, label %144

199:                                              ; preds = %192
  %200 = add nuw nsw i64 %138, 5
  %201 = icmp eq i64 %200, 10000
  br i1 %201, label %202, label %137, !llvm.loop !220

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %204 = load i8, ptr %203, align 2, !tbaa !23, !range !40, !noundef !41
  %205 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %206 = load i64, ptr %205, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %207 unwind label %233

207:                                              ; preds = %202
  %208 = icmp ne i8 %204, 0
  %209 = icmp eq i64 %206, 0
  %210 = select i1 %208, i1 true, i1 %209
  br i1 %210, label %228, label %211, !prof !42

211:                                              ; preds = %207
  %212 = getelementptr inbounds i64, ptr %4, i64 9984
  %213 = getelementptr inbounds i64, ptr %4, i64 9985
  %214 = getelementptr inbounds i64, ptr %4, i64 9986
  %215 = getelementptr inbounds i64, ptr %4, i64 9987
  %216 = getelementptr inbounds i64, ptr %4, i64 9988
  %217 = getelementptr inbounds i64, ptr %4, i64 9989
  %218 = getelementptr inbounds i64, ptr %4, i64 9990
  %219 = getelementptr inbounds i64, ptr %4, i64 9991
  %220 = getelementptr inbounds i64, ptr %4, i64 9992
  %221 = getelementptr inbounds i64, ptr %4, i64 9993
  %222 = getelementptr inbounds i64, ptr %4, i64 9994
  %223 = getelementptr inbounds i64, ptr %4, i64 9995
  %224 = getelementptr inbounds i64, ptr %4, i64 9996
  %225 = getelementptr inbounds i64, ptr %4, i64 9997
  %226 = getelementptr inbounds i64, ptr %4, i64 9998
  %227 = getelementptr inbounds i64, ptr %4, i64 9999
  br label %235

228:                                              ; preds = %259, %207
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %229 unwind label %233

229:                                              ; preds = %228
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %230 = load ptr, ptr %3, align 8, !tbaa !5
  %231 = icmp eq ptr %230, null
  br i1 %231, label %319, label %232

232:                                              ; preds = %229
  call void @_ZdaPv(ptr noundef nonnull %230) #13
  br label %319

233:                                              ; preds = %228, %202
  %234 = landingpad { ptr, i32 }
          cleanup
  br label %310

235:                                              ; preds = %211, %259
  %236 = phi i64 [ %308, %259 ], [ %206, %211 ]
  %237 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %3, i64 %237) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %238 = load ptr, ptr %3, align 8, !tbaa !5
  br label %239

239:                                              ; preds = %239, %235
  %240 = phi i64 [ 0, %235 ], [ %257, %239 ]
  %241 = getelementptr inbounds i64, ptr %4, i64 %240
  %242 = load <8 x i64>, ptr %241, align 8, !tbaa !147
  %243 = getelementptr inbounds i64, ptr %241, i64 8
  %244 = load <8 x i64>, ptr %243, align 8, !tbaa !147
  %245 = getelementptr inbounds i64, ptr %241, i64 16
  %246 = load <8 x i64>, ptr %245, align 8, !tbaa !147
  %247 = getelementptr inbounds i64, ptr %241, i64 24
  %248 = load <8 x i64>, ptr %247, align 8, !tbaa !147
  %249 = trunc <8 x i64> %242 to <8 x i32>
  %250 = trunc <8 x i64> %244 to <8 x i32>
  %251 = trunc <8 x i64> %246 to <8 x i32>
  %252 = trunc <8 x i64> %248 to <8 x i32>
  %253 = getelementptr inbounds i32, ptr %238, i64 %240
  store <8 x i32> %249, ptr %253, align 4, !tbaa !95
  %254 = getelementptr inbounds i32, ptr %253, i64 8
  store <8 x i32> %250, ptr %254, align 4, !tbaa !95
  %255 = getelementptr inbounds i32, ptr %253, i64 16
  store <8 x i32> %251, ptr %255, align 4, !tbaa !95
  %256 = getelementptr inbounds i32, ptr %253, i64 24
  store <8 x i32> %252, ptr %256, align 4, !tbaa !95
  %257 = add nuw i64 %240, 32
  %258 = icmp eq i64 %257, 9984
  br i1 %258, label %259, label %239, !llvm.loop !221

259:                                              ; preds = %239
  %260 = load i64, ptr %212, align 8, !tbaa !147
  %261 = trunc i64 %260 to i32
  %262 = getelementptr inbounds i32, ptr %238, i64 9984
  store i32 %261, ptr %262, align 4, !tbaa !95
  %263 = load i64, ptr %213, align 8, !tbaa !147
  %264 = trunc i64 %263 to i32
  %265 = getelementptr inbounds i32, ptr %238, i64 9985
  store i32 %264, ptr %265, align 4, !tbaa !95
  %266 = load i64, ptr %214, align 8, !tbaa !147
  %267 = trunc i64 %266 to i32
  %268 = getelementptr inbounds i32, ptr %238, i64 9986
  store i32 %267, ptr %268, align 4, !tbaa !95
  %269 = load i64, ptr %215, align 8, !tbaa !147
  %270 = trunc i64 %269 to i32
  %271 = getelementptr inbounds i32, ptr %238, i64 9987
  store i32 %270, ptr %271, align 4, !tbaa !95
  %272 = load i64, ptr %216, align 8, !tbaa !147
  %273 = trunc i64 %272 to i32
  %274 = getelementptr inbounds i32, ptr %238, i64 9988
  store i32 %273, ptr %274, align 4, !tbaa !95
  %275 = load i64, ptr %217, align 8, !tbaa !147
  %276 = trunc i64 %275 to i32
  %277 = getelementptr inbounds i32, ptr %238, i64 9989
  store i32 %276, ptr %277, align 4, !tbaa !95
  %278 = load i64, ptr %218, align 8, !tbaa !147
  %279 = trunc i64 %278 to i32
  %280 = getelementptr inbounds i32, ptr %238, i64 9990
  store i32 %279, ptr %280, align 4, !tbaa !95
  %281 = load i64, ptr %219, align 8, !tbaa !147
  %282 = trunc i64 %281 to i32
  %283 = getelementptr inbounds i32, ptr %238, i64 9991
  store i32 %282, ptr %283, align 4, !tbaa !95
  %284 = load i64, ptr %220, align 8, !tbaa !147
  %285 = trunc i64 %284 to i32
  %286 = getelementptr inbounds i32, ptr %238, i64 9992
  store i32 %285, ptr %286, align 4, !tbaa !95
  %287 = load i64, ptr %221, align 8, !tbaa !147
  %288 = trunc i64 %287 to i32
  %289 = getelementptr inbounds i32, ptr %238, i64 9993
  store i32 %288, ptr %289, align 4, !tbaa !95
  %290 = load i64, ptr %222, align 8, !tbaa !147
  %291 = trunc i64 %290 to i32
  %292 = getelementptr inbounds i32, ptr %238, i64 9994
  store i32 %291, ptr %292, align 4, !tbaa !95
  %293 = load i64, ptr %223, align 8, !tbaa !147
  %294 = trunc i64 %293 to i32
  %295 = getelementptr inbounds i32, ptr %238, i64 9995
  store i32 %294, ptr %295, align 4, !tbaa !95
  %296 = load i64, ptr %224, align 8, !tbaa !147
  %297 = trunc i64 %296 to i32
  %298 = getelementptr inbounds i32, ptr %238, i64 9996
  store i32 %297, ptr %298, align 4, !tbaa !95
  %299 = load i64, ptr %225, align 8, !tbaa !147
  %300 = trunc i64 %299 to i32
  %301 = getelementptr inbounds i32, ptr %238, i64 9997
  store i32 %300, ptr %301, align 4, !tbaa !95
  %302 = load i64, ptr %226, align 8, !tbaa !147
  %303 = trunc i64 %302 to i32
  %304 = getelementptr inbounds i32, ptr %238, i64 9998
  store i32 %303, ptr %304, align 4, !tbaa !95
  %305 = load i64, ptr %227, align 8, !tbaa !147
  %306 = trunc i64 %305 to i32
  %307 = getelementptr inbounds i32, ptr %238, i64 9999
  store i32 %306, ptr %307, align 4, !tbaa !95
  %308 = add i64 %236, -1
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %228, label %235, !prof !42

310:                                              ; preds = %233, %169, %135
  %311 = phi { ptr, i32 } [ %170, %169 ], [ %234, %233 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %312 = load ptr, ptr %3, align 8, !tbaa !5
  %313 = icmp eq ptr %312, null
  br i1 %313, label %317, label %314

314:                                              ; preds = %310, %133
  %315 = phi { ptr, i32 } [ %134, %133 ], [ %311, %310 ]
  %316 = phi ptr [ %5, %133 ], [ %312, %310 ]
  call void @_ZdaPv(ptr noundef nonnull %316) #13
  br label %317

317:                                              ; preds = %314, %310, %131
  %318 = phi { ptr, i32 } [ %132, %131 ], [ %311, %310 ], [ %315, %314 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %318

319:                                              ; preds = %229, %232
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::unique_ptr.44", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %9, align 8, !tbaa !146
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i64, ptr %4, i64 %11
  store i64 %12, ptr %14, align 8, !tbaa !147
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !148

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i64, ptr %4, i64 %19
  %21 = load i64, ptr %20, align 8, !tbaa !147
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds i32, ptr %7, i64 %19
  store i32 %22, ptr %23, align 4, !tbaa !95
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i64, ptr %4, i64 %24
  %26 = load i64, ptr %25, align 8, !tbaa !147
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds i32, ptr %7, i64 %24
  store i32 %27, ptr %28, align 4, !tbaa !95
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i64, ptr %4, i64 %29
  %31 = load i64, ptr %30, align 8, !tbaa !147
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds i32, ptr %7, i64 %29
  store i32 %32, ptr %33, align 4, !tbaa !95
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i64, ptr %4, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !147
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds i32, ptr %7, i64 %34
  store i32 %37, ptr %38, align 4, !tbaa !95
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i64, ptr %4, i64 %39
  %41 = load i64, ptr %40, align 8, !tbaa !147
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds i32, ptr %7, i64 %39
  store i32 %42, ptr %43, align 4, !tbaa !95
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !218

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i64, ptr %4, i64 %47
  %49 = load <16 x i64>, ptr %48, align 8, !tbaa !147
  %50 = getelementptr inbounds i64, ptr %48, i64 16
  %51 = load <16 x i64>, ptr %50, align 8, !tbaa !147
  %52 = getelementptr inbounds i64, ptr %48, i64 32
  %53 = load <16 x i64>, ptr %52, align 8, !tbaa !147
  %54 = getelementptr inbounds i64, ptr %48, i64 48
  %55 = load <16 x i64>, ptr %54, align 8, !tbaa !147
  %56 = trunc <16 x i64> %49 to <16 x i32>
  %57 = trunc <16 x i64> %51 to <16 x i32>
  %58 = trunc <16 x i64> %53 to <16 x i32>
  %59 = trunc <16 x i64> %55 to <16 x i32>
  %60 = getelementptr inbounds i32, ptr %5, i64 %47
  store <16 x i32> %56, ptr %60, align 4, !tbaa !95
  %61 = getelementptr inbounds i32, ptr %60, i64 16
  store <16 x i32> %57, ptr %61, align 4, !tbaa !95
  %62 = getelementptr inbounds i32, ptr %60, i64 32
  store <16 x i32> %58, ptr %62, align 4, !tbaa !95
  %63 = getelementptr inbounds i32, ptr %60, i64 48
  store <16 x i32> %59, ptr %63, align 4, !tbaa !95
  %64 = add nuw i64 %47, 64
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !222

66:                                               ; preds = %46
  %67 = getelementptr inbounds i64, ptr %4, i64 9984
  %68 = load i64, ptr %67, align 8, !tbaa !147
  %69 = trunc i64 %68 to i32
  %70 = getelementptr inbounds i32, ptr %5, i64 9984
  store i32 %69, ptr %70, align 4, !tbaa !95
  %71 = getelementptr inbounds i64, ptr %4, i64 9985
  %72 = load i64, ptr %71, align 8, !tbaa !147
  %73 = trunc i64 %72 to i32
  %74 = getelementptr inbounds i32, ptr %5, i64 9985
  store i32 %73, ptr %74, align 4, !tbaa !95
  %75 = getelementptr inbounds i64, ptr %4, i64 9986
  %76 = load i64, ptr %75, align 8, !tbaa !147
  %77 = trunc i64 %76 to i32
  %78 = getelementptr inbounds i32, ptr %5, i64 9986
  store i32 %77, ptr %78, align 4, !tbaa !95
  %79 = getelementptr inbounds i64, ptr %4, i64 9987
  %80 = load i64, ptr %79, align 8, !tbaa !147
  %81 = trunc i64 %80 to i32
  %82 = getelementptr inbounds i32, ptr %5, i64 9987
  store i32 %81, ptr %82, align 4, !tbaa !95
  %83 = getelementptr inbounds i64, ptr %4, i64 9988
  %84 = load i64, ptr %83, align 8, !tbaa !147
  %85 = trunc i64 %84 to i32
  %86 = getelementptr inbounds i32, ptr %5, i64 9988
  store i32 %85, ptr %86, align 4, !tbaa !95
  %87 = getelementptr inbounds i64, ptr %4, i64 9989
  %88 = load i64, ptr %87, align 8, !tbaa !147
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i32, ptr %5, i64 9989
  store i32 %89, ptr %90, align 4, !tbaa !95
  %91 = getelementptr inbounds i64, ptr %4, i64 9990
  %92 = load i64, ptr %91, align 8, !tbaa !147
  %93 = trunc i64 %92 to i32
  %94 = getelementptr inbounds i32, ptr %5, i64 9990
  store i32 %93, ptr %94, align 4, !tbaa !95
  %95 = getelementptr inbounds i64, ptr %4, i64 9991
  %96 = load i64, ptr %95, align 8, !tbaa !147
  %97 = trunc i64 %96 to i32
  %98 = getelementptr inbounds i32, ptr %5, i64 9991
  store i32 %97, ptr %98, align 4, !tbaa !95
  %99 = getelementptr inbounds i64, ptr %4, i64 9992
  %100 = load i64, ptr %99, align 8, !tbaa !147
  %101 = trunc i64 %100 to i32
  %102 = getelementptr inbounds i32, ptr %5, i64 9992
  store i32 %101, ptr %102, align 4, !tbaa !95
  %103 = getelementptr inbounds i64, ptr %4, i64 9993
  %104 = load i64, ptr %103, align 8, !tbaa !147
  %105 = trunc i64 %104 to i32
  %106 = getelementptr inbounds i32, ptr %5, i64 9993
  store i32 %105, ptr %106, align 4, !tbaa !95
  %107 = getelementptr inbounds i64, ptr %4, i64 9994
  %108 = load i64, ptr %107, align 8, !tbaa !147
  %109 = trunc i64 %108 to i32
  %110 = getelementptr inbounds i32, ptr %5, i64 9994
  store i32 %109, ptr %110, align 4, !tbaa !95
  %111 = getelementptr inbounds i64, ptr %4, i64 9995
  %112 = load i64, ptr %111, align 8, !tbaa !147
  %113 = trunc i64 %112 to i32
  %114 = getelementptr inbounds i32, ptr %5, i64 9995
  store i32 %113, ptr %114, align 4, !tbaa !95
  %115 = getelementptr inbounds i64, ptr %4, i64 9996
  %116 = load i64, ptr %115, align 8, !tbaa !147
  %117 = trunc i64 %116 to i32
  %118 = getelementptr inbounds i32, ptr %5, i64 9996
  store i32 %117, ptr %118, align 4, !tbaa !95
  %119 = getelementptr inbounds i64, ptr %4, i64 9997
  %120 = load i64, ptr %119, align 8, !tbaa !147
  %121 = trunc i64 %120 to i32
  %122 = getelementptr inbounds i32, ptr %5, i64 9997
  store i32 %121, ptr %122, align 4, !tbaa !95
  %123 = getelementptr inbounds i64, ptr %4, i64 9998
  %124 = load i64, ptr %123, align 8, !tbaa !147
  %125 = trunc i64 %124 to i32
  %126 = getelementptr inbounds i32, ptr %5, i64 9998
  store i32 %125, ptr %126, align 4, !tbaa !95
  %127 = getelementptr inbounds i64, ptr %4, i64 9999
  %128 = load i64, ptr %127, align 8, !tbaa !147
  %129 = trunc i64 %128 to i32
  %130 = getelementptr inbounds i32, ptr %5, i64 9999
  store i32 %129, ptr %130, align 4, !tbaa !95
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %317

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %314

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %310

137:                                              ; preds = %199, %66
  %138 = phi i64 [ 0, %66 ], [ %200, %199 ]
  %139 = getelementptr inbounds i32, ptr %5, i64 %138
  %140 = load i32, ptr %139, align 4, !tbaa !95
  %141 = getelementptr inbounds i32, ptr %7, i64 %138
  %142 = load i32, ptr %141, align 4, !tbaa !95
  %143 = icmp eq i32 %140, %142
  br i1 %143, label %171, label %144

144:                                              ; preds = %192, %185, %178, %171, %137
  %145 = phi i64 [ %138, %137 ], [ %172, %171 ], [ %179, %178 ], [ %186, %185 ], [ %193, %192 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i32, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %169

149:                                              ; preds = %144
  %150 = getelementptr inbounds i64, ptr %4, i64 %146
  %151 = load i64, ptr %150, align 8, !tbaa !147
  %152 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %151)
          to label %153 unwind label %169

153:                                              ; preds = %149
  %154 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %152, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %155 unwind label %169

155:                                              ; preds = %153
  %156 = getelementptr inbounds i32, ptr %5, i64 %146
  %157 = load i32, ptr %156, align 4, !tbaa !95
  %158 = zext i32 %157 to i64
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %152, i64 noundef %158)
          to label %160 unwind label %169

160:                                              ; preds = %155
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %162 unwind label %169

162:                                              ; preds = %160
  %163 = load i32, ptr %147, align 4, !tbaa !95
  %164 = zext i32 %163 to i64
  %165 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %159, i64 noundef %164)
          to label %166 unwind label %169

166:                                              ; preds = %162
  %167 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %165, ptr noundef nonnull @.str.149)
          to label %168 unwind label %169

168:                                              ; preds = %166
  call void @exit(i32 noundef 1) #12
  unreachable

169:                                              ; preds = %166, %162, %160, %155, %153, %149, %144
  %170 = landingpad { ptr, i32 }
          cleanup
  br label %310

171:                                              ; preds = %137
  %172 = add nuw nsw i64 %138, 1
  %173 = getelementptr inbounds i32, ptr %5, i64 %172
  %174 = load i32, ptr %173, align 4, !tbaa !95
  %175 = getelementptr inbounds i32, ptr %7, i64 %172
  %176 = load i32, ptr %175, align 4, !tbaa !95
  %177 = icmp eq i32 %174, %176
  br i1 %177, label %178, label %144

178:                                              ; preds = %171
  %179 = add nuw nsw i64 %138, 2
  %180 = getelementptr inbounds i32, ptr %5, i64 %179
  %181 = load i32, ptr %180, align 4, !tbaa !95
  %182 = getelementptr inbounds i32, ptr %7, i64 %179
  %183 = load i32, ptr %182, align 4, !tbaa !95
  %184 = icmp eq i32 %181, %183
  br i1 %184, label %185, label %144

185:                                              ; preds = %178
  %186 = add nuw nsw i64 %138, 3
  %187 = getelementptr inbounds i32, ptr %5, i64 %186
  %188 = load i32, ptr %187, align 4, !tbaa !95
  %189 = getelementptr inbounds i32, ptr %7, i64 %186
  %190 = load i32, ptr %189, align 4, !tbaa !95
  %191 = icmp eq i32 %188, %190
  br i1 %191, label %192, label %144

192:                                              ; preds = %185
  %193 = add nuw nsw i64 %138, 4
  %194 = getelementptr inbounds i32, ptr %5, i64 %193
  %195 = load i32, ptr %194, align 4, !tbaa !95
  %196 = getelementptr inbounds i32, ptr %7, i64 %193
  %197 = load i32, ptr %196, align 4, !tbaa !95
  %198 = icmp eq i32 %195, %197
  br i1 %198, label %199, label %144

199:                                              ; preds = %192
  %200 = add nuw nsw i64 %138, 5
  %201 = icmp eq i64 %200, 10000
  br i1 %201, label %202, label %137, !llvm.loop !220

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %204 = load i8, ptr %203, align 2, !tbaa !23, !range !40, !noundef !41
  %205 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %206 = load i64, ptr %205, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %207 unwind label %233

207:                                              ; preds = %202
  %208 = icmp ne i8 %204, 0
  %209 = icmp eq i64 %206, 0
  %210 = select i1 %208, i1 true, i1 %209
  br i1 %210, label %228, label %211, !prof !42

211:                                              ; preds = %207
  %212 = getelementptr inbounds i64, ptr %4, i64 9984
  %213 = getelementptr inbounds i64, ptr %4, i64 9985
  %214 = getelementptr inbounds i64, ptr %4, i64 9986
  %215 = getelementptr inbounds i64, ptr %4, i64 9987
  %216 = getelementptr inbounds i64, ptr %4, i64 9988
  %217 = getelementptr inbounds i64, ptr %4, i64 9989
  %218 = getelementptr inbounds i64, ptr %4, i64 9990
  %219 = getelementptr inbounds i64, ptr %4, i64 9991
  %220 = getelementptr inbounds i64, ptr %4, i64 9992
  %221 = getelementptr inbounds i64, ptr %4, i64 9993
  %222 = getelementptr inbounds i64, ptr %4, i64 9994
  %223 = getelementptr inbounds i64, ptr %4, i64 9995
  %224 = getelementptr inbounds i64, ptr %4, i64 9996
  %225 = getelementptr inbounds i64, ptr %4, i64 9997
  %226 = getelementptr inbounds i64, ptr %4, i64 9998
  %227 = getelementptr inbounds i64, ptr %4, i64 9999
  br label %235

228:                                              ; preds = %259, %207
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %229 unwind label %233

229:                                              ; preds = %228
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %230 = load ptr, ptr %3, align 8, !tbaa !5
  %231 = icmp eq ptr %230, null
  br i1 %231, label %319, label %232

232:                                              ; preds = %229
  call void @_ZdaPv(ptr noundef nonnull %230) #13
  br label %319

233:                                              ; preds = %228, %202
  %234 = landingpad { ptr, i32 }
          cleanup
  br label %310

235:                                              ; preds = %211, %259
  %236 = phi i64 [ %308, %259 ], [ %206, %211 ]
  %237 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %3, i64 %237) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %238 = load ptr, ptr %3, align 8, !tbaa !5
  br label %239

239:                                              ; preds = %239, %235
  %240 = phi i64 [ 0, %235 ], [ %257, %239 ]
  %241 = getelementptr inbounds i64, ptr %4, i64 %240
  %242 = load <16 x i64>, ptr %241, align 8, !tbaa !147
  %243 = getelementptr inbounds i64, ptr %241, i64 16
  %244 = load <16 x i64>, ptr %243, align 8, !tbaa !147
  %245 = getelementptr inbounds i64, ptr %241, i64 32
  %246 = load <16 x i64>, ptr %245, align 8, !tbaa !147
  %247 = getelementptr inbounds i64, ptr %241, i64 48
  %248 = load <16 x i64>, ptr %247, align 8, !tbaa !147
  %249 = trunc <16 x i64> %242 to <16 x i32>
  %250 = trunc <16 x i64> %244 to <16 x i32>
  %251 = trunc <16 x i64> %246 to <16 x i32>
  %252 = trunc <16 x i64> %248 to <16 x i32>
  %253 = getelementptr inbounds i32, ptr %238, i64 %240
  store <16 x i32> %249, ptr %253, align 4, !tbaa !95
  %254 = getelementptr inbounds i32, ptr %253, i64 16
  store <16 x i32> %250, ptr %254, align 4, !tbaa !95
  %255 = getelementptr inbounds i32, ptr %253, i64 32
  store <16 x i32> %251, ptr %255, align 4, !tbaa !95
  %256 = getelementptr inbounds i32, ptr %253, i64 48
  store <16 x i32> %252, ptr %256, align 4, !tbaa !95
  %257 = add nuw i64 %240, 64
  %258 = icmp eq i64 %257, 9984
  br i1 %258, label %259, label %239, !llvm.loop !223

259:                                              ; preds = %239
  %260 = load i64, ptr %212, align 8, !tbaa !147
  %261 = trunc i64 %260 to i32
  %262 = getelementptr inbounds i32, ptr %238, i64 9984
  store i32 %261, ptr %262, align 4, !tbaa !95
  %263 = load i64, ptr %213, align 8, !tbaa !147
  %264 = trunc i64 %263 to i32
  %265 = getelementptr inbounds i32, ptr %238, i64 9985
  store i32 %264, ptr %265, align 4, !tbaa !95
  %266 = load i64, ptr %214, align 8, !tbaa !147
  %267 = trunc i64 %266 to i32
  %268 = getelementptr inbounds i32, ptr %238, i64 9986
  store i32 %267, ptr %268, align 4, !tbaa !95
  %269 = load i64, ptr %215, align 8, !tbaa !147
  %270 = trunc i64 %269 to i32
  %271 = getelementptr inbounds i32, ptr %238, i64 9987
  store i32 %270, ptr %271, align 4, !tbaa !95
  %272 = load i64, ptr %216, align 8, !tbaa !147
  %273 = trunc i64 %272 to i32
  %274 = getelementptr inbounds i32, ptr %238, i64 9988
  store i32 %273, ptr %274, align 4, !tbaa !95
  %275 = load i64, ptr %217, align 8, !tbaa !147
  %276 = trunc i64 %275 to i32
  %277 = getelementptr inbounds i32, ptr %238, i64 9989
  store i32 %276, ptr %277, align 4, !tbaa !95
  %278 = load i64, ptr %218, align 8, !tbaa !147
  %279 = trunc i64 %278 to i32
  %280 = getelementptr inbounds i32, ptr %238, i64 9990
  store i32 %279, ptr %280, align 4, !tbaa !95
  %281 = load i64, ptr %219, align 8, !tbaa !147
  %282 = trunc i64 %281 to i32
  %283 = getelementptr inbounds i32, ptr %238, i64 9991
  store i32 %282, ptr %283, align 4, !tbaa !95
  %284 = load i64, ptr %220, align 8, !tbaa !147
  %285 = trunc i64 %284 to i32
  %286 = getelementptr inbounds i32, ptr %238, i64 9992
  store i32 %285, ptr %286, align 4, !tbaa !95
  %287 = load i64, ptr %221, align 8, !tbaa !147
  %288 = trunc i64 %287 to i32
  %289 = getelementptr inbounds i32, ptr %238, i64 9993
  store i32 %288, ptr %289, align 4, !tbaa !95
  %290 = load i64, ptr %222, align 8, !tbaa !147
  %291 = trunc i64 %290 to i32
  %292 = getelementptr inbounds i32, ptr %238, i64 9994
  store i32 %291, ptr %292, align 4, !tbaa !95
  %293 = load i64, ptr %223, align 8, !tbaa !147
  %294 = trunc i64 %293 to i32
  %295 = getelementptr inbounds i32, ptr %238, i64 9995
  store i32 %294, ptr %295, align 4, !tbaa !95
  %296 = load i64, ptr %224, align 8, !tbaa !147
  %297 = trunc i64 %296 to i32
  %298 = getelementptr inbounds i32, ptr %238, i64 9996
  store i32 %297, ptr %298, align 4, !tbaa !95
  %299 = load i64, ptr %225, align 8, !tbaa !147
  %300 = trunc i64 %299 to i32
  %301 = getelementptr inbounds i32, ptr %238, i64 9997
  store i32 %300, ptr %301, align 4, !tbaa !95
  %302 = load i64, ptr %226, align 8, !tbaa !147
  %303 = trunc i64 %302 to i32
  %304 = getelementptr inbounds i32, ptr %238, i64 9998
  store i32 %303, ptr %304, align 4, !tbaa !95
  %305 = load i64, ptr %227, align 8, !tbaa !147
  %306 = trunc i64 %305 to i32
  %307 = getelementptr inbounds i32, ptr %238, i64 9999
  store i32 %306, ptr %307, align 4, !tbaa !95
  %308 = add i64 %236, -1
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %228, label %235, !prof !42

310:                                              ; preds = %233, %169, %135
  %311 = phi { ptr, i32 } [ %170, %169 ], [ %234, %233 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %312 = load ptr, ptr %3, align 8, !tbaa !5
  %313 = icmp eq ptr %312, null
  br i1 %313, label %317, label %314

314:                                              ; preds = %310, %133
  %315 = phi { ptr, i32 } [ %134, %133 ], [ %311, %310 ]
  %316 = phi ptr [ %5, %133 ], [ %312, %310 ]
  call void @_ZdaPv(ptr noundef nonnull %316) #13
  br label %317

317:                                              ; preds = %314, %310, %131
  %318 = phi { ptr, i32 } [ %132, %131 ], [ %311, %310 ], [ %315, %314 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %318

319:                                              ; preds = %229, %232
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z54benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::unique_ptr.44", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %6 unwind label %67

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %8 unwind label %69

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %9, align 8, !tbaa !146
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %13 unwind label %71

13:                                               ; preds = %10
  %14 = getelementptr inbounds i64, ptr %4, i64 %11
  store i64 %12, ptr %14, align 8, !tbaa !147
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !148

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i64, ptr %4, i64 %19
  %21 = load i64, ptr %20, align 8, !tbaa !147
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds i32, ptr %7, i64 %19
  store i32 %22, ptr %23, align 4, !tbaa !95
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i64, ptr %4, i64 %24
  %26 = load i64, ptr %25, align 8, !tbaa !147
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds i32, ptr %7, i64 %24
  store i32 %27, ptr %28, align 4, !tbaa !95
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i64, ptr %4, i64 %29
  %31 = load i64, ptr %30, align 8, !tbaa !147
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds i32, ptr %7, i64 %29
  store i32 %32, ptr %33, align 4, !tbaa !95
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i64, ptr %4, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !147
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds i32, ptr %7, i64 %34
  store i32 %37, ptr %38, align 4, !tbaa !95
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i64, ptr %4, i64 %39
  %41 = load i64, ptr %40, align 8, !tbaa !147
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds i32, ptr %7, i64 %39
  store i32 %42, ptr %43, align 4, !tbaa !95
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !218

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %65, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i64, ptr %4, i64 %47
  %49 = load <2 x i64>, ptr %48, align 8, !tbaa !147
  %50 = getelementptr inbounds i64, ptr %48, i64 2
  %51 = load <2 x i64>, ptr %50, align 8, !tbaa !147
  %52 = trunc <2 x i64> %49 to <2 x i32>
  %53 = trunc <2 x i64> %51 to <2 x i32>
  %54 = getelementptr inbounds i32, ptr %5, i64 %47
  store <2 x i32> %52, ptr %54, align 4, !tbaa !95
  %55 = getelementptr inbounds i32, ptr %54, i64 2
  store <2 x i32> %53, ptr %55, align 4, !tbaa !95
  %56 = or i64 %47, 4
  %57 = getelementptr inbounds i64, ptr %4, i64 %56
  %58 = load <2 x i64>, ptr %57, align 8, !tbaa !147
  %59 = getelementptr inbounds i64, ptr %57, i64 2
  %60 = load <2 x i64>, ptr %59, align 8, !tbaa !147
  %61 = trunc <2 x i64> %58 to <2 x i32>
  %62 = trunc <2 x i64> %60 to <2 x i32>
  %63 = getelementptr inbounds i32, ptr %5, i64 %56
  store <2 x i32> %61, ptr %63, align 4, !tbaa !95
  %64 = getelementptr inbounds i32, ptr %63, i64 2
  store <2 x i32> %62, ptr %64, align 4, !tbaa !95
  %65 = add nuw nsw i64 %47, 8
  %66 = icmp eq i64 %65, 10000
  br i1 %66, label %73, label %46, !llvm.loop !224

67:                                               ; preds = %1
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %189

69:                                               ; preds = %6
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %186

71:                                               ; preds = %10
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %182

73:                                               ; preds = %46, %135
  %74 = phi i64 [ %136, %135 ], [ 0, %46 ]
  %75 = getelementptr inbounds i32, ptr %5, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !95
  %77 = getelementptr inbounds i32, ptr %7, i64 %74
  %78 = load i32, ptr %77, align 4, !tbaa !95
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %107, label %80

80:                                               ; preds = %128, %121, %114, %107, %73
  %81 = phi i64 [ %74, %73 ], [ %108, %107 ], [ %115, %114 ], [ %122, %121 ], [ %129, %128 ]
  %82 = and i64 %81, 4294967295
  %83 = getelementptr inbounds i32, ptr %7, i64 %82
  %84 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %85 unwind label %105

85:                                               ; preds = %80
  %86 = getelementptr inbounds i64, ptr %4, i64 %82
  %87 = load i64, ptr %86, align 8, !tbaa !147
  %88 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %87)
          to label %89 unwind label %105

89:                                               ; preds = %85
  %90 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %88, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %91 unwind label %105

91:                                               ; preds = %89
  %92 = getelementptr inbounds i32, ptr %5, i64 %82
  %93 = load i32, ptr %92, align 4, !tbaa !95
  %94 = zext i32 %93 to i64
  %95 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %88, i64 noundef %94)
          to label %96 unwind label %105

96:                                               ; preds = %91
  %97 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %95, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %98 unwind label %105

98:                                               ; preds = %96
  %99 = load i32, ptr %83, align 4, !tbaa !95
  %100 = zext i32 %99 to i64
  %101 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %95, i64 noundef %100)
          to label %102 unwind label %105

102:                                              ; preds = %98
  %103 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %101, ptr noundef nonnull @.str.149)
          to label %104 unwind label %105

104:                                              ; preds = %102
  call void @exit(i32 noundef 1) #12
  unreachable

105:                                              ; preds = %102, %98, %96, %91, %89, %85, %80
  %106 = landingpad { ptr, i32 }
          cleanup
  br label %182

107:                                              ; preds = %73
  %108 = add nuw nsw i64 %74, 1
  %109 = getelementptr inbounds i32, ptr %5, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !95
  %111 = getelementptr inbounds i32, ptr %7, i64 %108
  %112 = load i32, ptr %111, align 4, !tbaa !95
  %113 = icmp eq i32 %110, %112
  br i1 %113, label %114, label %80

114:                                              ; preds = %107
  %115 = add nuw nsw i64 %74, 2
  %116 = getelementptr inbounds i32, ptr %5, i64 %115
  %117 = load i32, ptr %116, align 4, !tbaa !95
  %118 = getelementptr inbounds i32, ptr %7, i64 %115
  %119 = load i32, ptr %118, align 4, !tbaa !95
  %120 = icmp eq i32 %117, %119
  br i1 %120, label %121, label %80

121:                                              ; preds = %114
  %122 = add nuw nsw i64 %74, 3
  %123 = getelementptr inbounds i32, ptr %5, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !95
  %125 = getelementptr inbounds i32, ptr %7, i64 %122
  %126 = load i32, ptr %125, align 4, !tbaa !95
  %127 = icmp eq i32 %124, %126
  br i1 %127, label %128, label %80

128:                                              ; preds = %121
  %129 = add nuw nsw i64 %74, 4
  %130 = getelementptr inbounds i32, ptr %5, i64 %129
  %131 = load i32, ptr %130, align 4, !tbaa !95
  %132 = getelementptr inbounds i32, ptr %7, i64 %129
  %133 = load i32, ptr %132, align 4, !tbaa !95
  %134 = icmp eq i32 %131, %133
  br i1 %134, label %135, label %80

135:                                              ; preds = %128
  %136 = add nuw nsw i64 %74, 5
  %137 = icmp eq i64 %136, 10000
  br i1 %137, label %138, label %73, !llvm.loop !220

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %140 = load i8, ptr %139, align 2, !tbaa !23, !range !40, !noundef !41
  %141 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %142 = load i64, ptr %141, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %143 unwind label %152

143:                                              ; preds = %138
  %144 = icmp ne i8 %140, 0
  %145 = icmp eq i64 %142, 0
  %146 = select i1 %144, i1 true, i1 %145
  br i1 %146, label %147, label %154, !prof !42

147:                                              ; preds = %179, %143
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %148 unwind label %152

148:                                              ; preds = %147
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %149 = load ptr, ptr %3, align 8, !tbaa !5
  %150 = icmp eq ptr %149, null
  br i1 %150, label %191, label %151

151:                                              ; preds = %148
  call void @_ZdaPv(ptr noundef nonnull %149) #13
  br label %191

152:                                              ; preds = %147, %138
  %153 = landingpad { ptr, i32 }
          cleanup
  br label %182

154:                                              ; preds = %143, %179
  %155 = phi i64 [ %180, %179 ], [ %142, %143 ]
  %156 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %3, i64 %156) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %157 = load ptr, ptr %3, align 8, !tbaa !5
  br label %158

158:                                              ; preds = %158, %154
  %159 = phi i64 [ 0, %154 ], [ %177, %158 ]
  %160 = getelementptr inbounds i64, ptr %4, i64 %159
  %161 = load <2 x i64>, ptr %160, align 8, !tbaa !147
  %162 = getelementptr inbounds i64, ptr %160, i64 2
  %163 = load <2 x i64>, ptr %162, align 8, !tbaa !147
  %164 = trunc <2 x i64> %161 to <2 x i32>
  %165 = trunc <2 x i64> %163 to <2 x i32>
  %166 = getelementptr inbounds i32, ptr %157, i64 %159
  store <2 x i32> %164, ptr %166, align 4, !tbaa !95
  %167 = getelementptr inbounds i32, ptr %166, i64 2
  store <2 x i32> %165, ptr %167, align 4, !tbaa !95
  %168 = or i64 %159, 4
  %169 = getelementptr inbounds i64, ptr %4, i64 %168
  %170 = load <2 x i64>, ptr %169, align 8, !tbaa !147
  %171 = getelementptr inbounds i64, ptr %169, i64 2
  %172 = load <2 x i64>, ptr %171, align 8, !tbaa !147
  %173 = trunc <2 x i64> %170 to <2 x i32>
  %174 = trunc <2 x i64> %172 to <2 x i32>
  %175 = getelementptr inbounds i32, ptr %157, i64 %168
  store <2 x i32> %173, ptr %175, align 4, !tbaa !95
  %176 = getelementptr inbounds i32, ptr %175, i64 2
  store <2 x i32> %174, ptr %176, align 4, !tbaa !95
  %177 = add nuw nsw i64 %159, 8
  %178 = icmp eq i64 %177, 10000
  br i1 %178, label %179, label %158, !llvm.loop !225

179:                                              ; preds = %158
  %180 = add i64 %155, -1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %147, label %154, !prof !42

182:                                              ; preds = %152, %105, %71
  %183 = phi { ptr, i32 } [ %106, %105 ], [ %153, %152 ], [ %72, %71 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %184 = load ptr, ptr %3, align 8, !tbaa !5
  %185 = icmp eq ptr %184, null
  br i1 %185, label %189, label %186

186:                                              ; preds = %182, %69
  %187 = phi { ptr, i32 } [ %70, %69 ], [ %183, %182 ]
  %188 = phi ptr [ %5, %69 ], [ %184, %182 ]
  call void @_ZdaPv(ptr noundef nonnull %188) #13
  br label %189

189:                                              ; preds = %186, %182, %67
  %190 = phi { ptr, i32 } [ %68, %67 ], [ %183, %182 ], [ %187, %186 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %190

191:                                              ; preds = %148, %151
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::uniform_int_distribution.65", align 8
  %4 = alloca %"class.std::unique_ptr.44", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %7 unwind label %56

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #11
  store i64 0, ptr %3, align 8, !tbaa !144
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %3, i64 0, i32 1
  store i64 -1, ptr %8, align 8, !tbaa !146
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %3)
          to label %12 unwind label %60

12:                                               ; preds = %9
  %13 = getelementptr inbounds i64, ptr %5, i64 %10
  store i64 %11, ptr %13, align 8, !tbaa !147
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !148

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %17, align 4, !tbaa !94
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %21 unwind label %58

21:                                               ; preds = %18
  %22 = getelementptr inbounds i32, ptr %6, i64 %19
  store i32 %20, ptr %22, align 4, !tbaa !95
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !96

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %177

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %51, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr inbounds i64, ptr %5, i64 9984
  %36 = getelementptr inbounds i64, ptr %5, i64 9985
  %37 = getelementptr inbounds i64, ptr %5, i64 9986
  %38 = getelementptr inbounds i64, ptr %5, i64 9987
  %39 = getelementptr inbounds i64, ptr %5, i64 9988
  %40 = getelementptr inbounds i64, ptr %5, i64 9989
  %41 = getelementptr inbounds i64, ptr %5, i64 9990
  %42 = getelementptr inbounds i64, ptr %5, i64 9991
  %43 = getelementptr inbounds i64, ptr %5, i64 9992
  %44 = getelementptr inbounds i64, ptr %5, i64 9993
  %45 = getelementptr inbounds i64, ptr %5, i64 9994
  %46 = getelementptr inbounds i64, ptr %5, i64 9995
  %47 = getelementptr inbounds i64, ptr %5, i64 9996
  %48 = getelementptr inbounds i64, ptr %5, i64 9997
  %49 = getelementptr inbounds i64, ptr %5, i64 9998
  %50 = getelementptr inbounds i64, ptr %5, i64 9999
  br label %62

51:                                               ; preds = %94, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %52 unwind label %177

52:                                               ; preds = %51
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = icmp eq ptr %53, null
  br i1 %54, label %186, label %55

55:                                               ; preds = %52
  call void @_ZdaPv(ptr noundef nonnull %53) #13
  br label %186

56:                                               ; preds = %1
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %184

58:                                               ; preds = %18
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %181

60:                                               ; preds = %9
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %181

62:                                               ; preds = %34, %94
  %63 = phi i64 [ %175, %94 ], [ %29, %34 ]
  %64 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %4, i64 %64) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %65 = load ptr, ptr %4, align 8, !tbaa !5
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i64 [ 0, %62 ], [ %92, %66 ]
  %68 = getelementptr inbounds i64, ptr %5, i64 %67
  %69 = load <8 x i64>, ptr %68, align 8, !tbaa !147
  %70 = getelementptr inbounds i64, ptr %68, i64 8
  %71 = load <8 x i64>, ptr %70, align 8, !tbaa !147
  %72 = getelementptr inbounds i64, ptr %68, i64 16
  %73 = load <8 x i64>, ptr %72, align 8, !tbaa !147
  %74 = getelementptr inbounds i64, ptr %68, i64 24
  %75 = load <8 x i64>, ptr %74, align 8, !tbaa !147
  %76 = getelementptr inbounds i32, ptr %65, i64 %67
  %77 = load <8 x i32>, ptr %76, align 4, !tbaa !95
  %78 = getelementptr inbounds i32, ptr %76, i64 8
  %79 = load <8 x i32>, ptr %78, align 4, !tbaa !95
  %80 = getelementptr inbounds i32, ptr %76, i64 16
  %81 = load <8 x i32>, ptr %80, align 4, !tbaa !95
  %82 = getelementptr inbounds i32, ptr %76, i64 24
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !95
  %84 = trunc <8 x i64> %69 to <8 x i32>
  %85 = trunc <8 x i64> %71 to <8 x i32>
  %86 = trunc <8 x i64> %73 to <8 x i32>
  %87 = trunc <8 x i64> %75 to <8 x i32>
  %88 = add <8 x i32> %77, %84
  %89 = add <8 x i32> %79, %85
  %90 = add <8 x i32> %81, %86
  %91 = add <8 x i32> %83, %87
  store <8 x i32> %88, ptr %76, align 4, !tbaa !95
  store <8 x i32> %89, ptr %78, align 4, !tbaa !95
  store <8 x i32> %90, ptr %80, align 4, !tbaa !95
  store <8 x i32> %91, ptr %82, align 4, !tbaa !95
  %92 = add nuw i64 %67, 32
  %93 = icmp eq i64 %92, 9984
  br i1 %93, label %94, label %66, !llvm.loop !226

94:                                               ; preds = %66
  %95 = load i64, ptr %35, align 8, !tbaa !147
  %96 = getelementptr inbounds i32, ptr %65, i64 9984
  %97 = load i32, ptr %96, align 4, !tbaa !95
  %98 = trunc i64 %95 to i32
  %99 = add i32 %97, %98
  store i32 %99, ptr %96, align 4, !tbaa !95
  %100 = load i64, ptr %36, align 8, !tbaa !147
  %101 = getelementptr inbounds i32, ptr %65, i64 9985
  %102 = load i32, ptr %101, align 4, !tbaa !95
  %103 = trunc i64 %100 to i32
  %104 = add i32 %102, %103
  store i32 %104, ptr %101, align 4, !tbaa !95
  %105 = load i64, ptr %37, align 8, !tbaa !147
  %106 = getelementptr inbounds i32, ptr %65, i64 9986
  %107 = load i32, ptr %106, align 4, !tbaa !95
  %108 = trunc i64 %105 to i32
  %109 = add i32 %107, %108
  store i32 %109, ptr %106, align 4, !tbaa !95
  %110 = load i64, ptr %38, align 8, !tbaa !147
  %111 = getelementptr inbounds i32, ptr %65, i64 9987
  %112 = load i32, ptr %111, align 4, !tbaa !95
  %113 = trunc i64 %110 to i32
  %114 = add i32 %112, %113
  store i32 %114, ptr %111, align 4, !tbaa !95
  %115 = load i64, ptr %39, align 8, !tbaa !147
  %116 = getelementptr inbounds i32, ptr %65, i64 9988
  %117 = load i32, ptr %116, align 4, !tbaa !95
  %118 = trunc i64 %115 to i32
  %119 = add i32 %117, %118
  store i32 %119, ptr %116, align 4, !tbaa !95
  %120 = load i64, ptr %40, align 8, !tbaa !147
  %121 = getelementptr inbounds i32, ptr %65, i64 9989
  %122 = load i32, ptr %121, align 4, !tbaa !95
  %123 = trunc i64 %120 to i32
  %124 = add i32 %122, %123
  store i32 %124, ptr %121, align 4, !tbaa !95
  %125 = load i64, ptr %41, align 8, !tbaa !147
  %126 = getelementptr inbounds i32, ptr %65, i64 9990
  %127 = load i32, ptr %126, align 4, !tbaa !95
  %128 = trunc i64 %125 to i32
  %129 = add i32 %127, %128
  store i32 %129, ptr %126, align 4, !tbaa !95
  %130 = load i64, ptr %42, align 8, !tbaa !147
  %131 = getelementptr inbounds i32, ptr %65, i64 9991
  %132 = load i32, ptr %131, align 4, !tbaa !95
  %133 = trunc i64 %130 to i32
  %134 = add i32 %132, %133
  store i32 %134, ptr %131, align 4, !tbaa !95
  %135 = load i64, ptr %43, align 8, !tbaa !147
  %136 = getelementptr inbounds i32, ptr %65, i64 9992
  %137 = load i32, ptr %136, align 4, !tbaa !95
  %138 = trunc i64 %135 to i32
  %139 = add i32 %137, %138
  store i32 %139, ptr %136, align 4, !tbaa !95
  %140 = load i64, ptr %44, align 8, !tbaa !147
  %141 = getelementptr inbounds i32, ptr %65, i64 9993
  %142 = load i32, ptr %141, align 4, !tbaa !95
  %143 = trunc i64 %140 to i32
  %144 = add i32 %142, %143
  store i32 %144, ptr %141, align 4, !tbaa !95
  %145 = load i64, ptr %45, align 8, !tbaa !147
  %146 = getelementptr inbounds i32, ptr %65, i64 9994
  %147 = load i32, ptr %146, align 4, !tbaa !95
  %148 = trunc i64 %145 to i32
  %149 = add i32 %147, %148
  store i32 %149, ptr %146, align 4, !tbaa !95
  %150 = load i64, ptr %46, align 8, !tbaa !147
  %151 = getelementptr inbounds i32, ptr %65, i64 9995
  %152 = load i32, ptr %151, align 4, !tbaa !95
  %153 = trunc i64 %150 to i32
  %154 = add i32 %152, %153
  store i32 %154, ptr %151, align 4, !tbaa !95
  %155 = load i64, ptr %47, align 8, !tbaa !147
  %156 = getelementptr inbounds i32, ptr %65, i64 9996
  %157 = load i32, ptr %156, align 4, !tbaa !95
  %158 = trunc i64 %155 to i32
  %159 = add i32 %157, %158
  store i32 %159, ptr %156, align 4, !tbaa !95
  %160 = load i64, ptr %48, align 8, !tbaa !147
  %161 = getelementptr inbounds i32, ptr %65, i64 9997
  %162 = load i32, ptr %161, align 4, !tbaa !95
  %163 = trunc i64 %160 to i32
  %164 = add i32 %162, %163
  store i32 %164, ptr %161, align 4, !tbaa !95
  %165 = load i64, ptr %49, align 8, !tbaa !147
  %166 = getelementptr inbounds i32, ptr %65, i64 9998
  %167 = load i32, ptr %166, align 4, !tbaa !95
  %168 = trunc i64 %165 to i32
  %169 = add i32 %167, %168
  store i32 %169, ptr %166, align 4, !tbaa !95
  %170 = load i64, ptr %50, align 8, !tbaa !147
  %171 = getelementptr inbounds i32, ptr %65, i64 9999
  %172 = load i32, ptr %171, align 4, !tbaa !95
  %173 = trunc i64 %170 to i32
  %174 = add i32 %172, %173
  store i32 %174, ptr %171, align 4, !tbaa !95
  %175 = add i64 %63, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %51, label %62, !prof !42

177:                                              ; preds = %25, %51
  %178 = landingpad { ptr, i32 }
          cleanup
  %179 = load ptr, ptr %4, align 8, !tbaa !5
  %180 = icmp eq ptr %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %60, %58, %177
  %182 = phi { ptr, i32 } [ %178, %177 ], [ %61, %60 ], [ %59, %58 ]
  %183 = phi ptr [ %179, %177 ], [ %6, %60 ], [ %6, %58 ]
  call void @_ZdaPv(ptr noundef nonnull %183) #13
  br label %184

184:                                              ; preds = %181, %177, %56
  %185 = phi { ptr, i32 } [ %57, %56 ], [ %178, %177 ], [ %182, %181 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %185

186:                                              ; preds = %52, %55
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::uniform_int_distribution.65", align 8
  %4 = alloca %"class.std::unique_ptr.44", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %7 unwind label %56

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #11
  store i64 0, ptr %3, align 8, !tbaa !144
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %3, i64 0, i32 1
  store i64 -1, ptr %8, align 8, !tbaa !146
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %3)
          to label %12 unwind label %60

12:                                               ; preds = %9
  %13 = getelementptr inbounds i64, ptr %5, i64 %10
  store i64 %11, ptr %13, align 8, !tbaa !147
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !148

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %17, align 4, !tbaa !94
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %21 unwind label %58

21:                                               ; preds = %18
  %22 = getelementptr inbounds i32, ptr %6, i64 %19
  store i32 %20, ptr %22, align 4, !tbaa !95
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !96

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %177

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %51, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr inbounds i64, ptr %5, i64 9984
  %36 = getelementptr inbounds i64, ptr %5, i64 9985
  %37 = getelementptr inbounds i64, ptr %5, i64 9986
  %38 = getelementptr inbounds i64, ptr %5, i64 9987
  %39 = getelementptr inbounds i64, ptr %5, i64 9988
  %40 = getelementptr inbounds i64, ptr %5, i64 9989
  %41 = getelementptr inbounds i64, ptr %5, i64 9990
  %42 = getelementptr inbounds i64, ptr %5, i64 9991
  %43 = getelementptr inbounds i64, ptr %5, i64 9992
  %44 = getelementptr inbounds i64, ptr %5, i64 9993
  %45 = getelementptr inbounds i64, ptr %5, i64 9994
  %46 = getelementptr inbounds i64, ptr %5, i64 9995
  %47 = getelementptr inbounds i64, ptr %5, i64 9996
  %48 = getelementptr inbounds i64, ptr %5, i64 9997
  %49 = getelementptr inbounds i64, ptr %5, i64 9998
  %50 = getelementptr inbounds i64, ptr %5, i64 9999
  br label %62

51:                                               ; preds = %94, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %52 unwind label %177

52:                                               ; preds = %51
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = icmp eq ptr %53, null
  br i1 %54, label %186, label %55

55:                                               ; preds = %52
  call void @_ZdaPv(ptr noundef nonnull %53) #13
  br label %186

56:                                               ; preds = %1
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %184

58:                                               ; preds = %18
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %181

60:                                               ; preds = %9
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %181

62:                                               ; preds = %34, %94
  %63 = phi i64 [ %175, %94 ], [ %29, %34 ]
  %64 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %4, i64 %64) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %65 = load ptr, ptr %4, align 8, !tbaa !5
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i64 [ 0, %62 ], [ %92, %66 ]
  %68 = getelementptr inbounds i64, ptr %5, i64 %67
  %69 = load <16 x i64>, ptr %68, align 8, !tbaa !147
  %70 = getelementptr inbounds i64, ptr %68, i64 16
  %71 = load <16 x i64>, ptr %70, align 8, !tbaa !147
  %72 = getelementptr inbounds i64, ptr %68, i64 32
  %73 = load <16 x i64>, ptr %72, align 8, !tbaa !147
  %74 = getelementptr inbounds i64, ptr %68, i64 48
  %75 = load <16 x i64>, ptr %74, align 8, !tbaa !147
  %76 = getelementptr inbounds i32, ptr %65, i64 %67
  %77 = load <16 x i32>, ptr %76, align 4, !tbaa !95
  %78 = getelementptr inbounds i32, ptr %76, i64 16
  %79 = load <16 x i32>, ptr %78, align 4, !tbaa !95
  %80 = getelementptr inbounds i32, ptr %76, i64 32
  %81 = load <16 x i32>, ptr %80, align 4, !tbaa !95
  %82 = getelementptr inbounds i32, ptr %76, i64 48
  %83 = load <16 x i32>, ptr %82, align 4, !tbaa !95
  %84 = trunc <16 x i64> %69 to <16 x i32>
  %85 = trunc <16 x i64> %71 to <16 x i32>
  %86 = trunc <16 x i64> %73 to <16 x i32>
  %87 = trunc <16 x i64> %75 to <16 x i32>
  %88 = add <16 x i32> %77, %84
  %89 = add <16 x i32> %79, %85
  %90 = add <16 x i32> %81, %86
  %91 = add <16 x i32> %83, %87
  store <16 x i32> %88, ptr %76, align 4, !tbaa !95
  store <16 x i32> %89, ptr %78, align 4, !tbaa !95
  store <16 x i32> %90, ptr %80, align 4, !tbaa !95
  store <16 x i32> %91, ptr %82, align 4, !tbaa !95
  %92 = add nuw i64 %67, 64
  %93 = icmp eq i64 %92, 9984
  br i1 %93, label %94, label %66, !llvm.loop !227

94:                                               ; preds = %66
  %95 = load i64, ptr %35, align 8, !tbaa !147
  %96 = getelementptr inbounds i32, ptr %65, i64 9984
  %97 = load i32, ptr %96, align 4, !tbaa !95
  %98 = trunc i64 %95 to i32
  %99 = add i32 %97, %98
  store i32 %99, ptr %96, align 4, !tbaa !95
  %100 = load i64, ptr %36, align 8, !tbaa !147
  %101 = getelementptr inbounds i32, ptr %65, i64 9985
  %102 = load i32, ptr %101, align 4, !tbaa !95
  %103 = trunc i64 %100 to i32
  %104 = add i32 %102, %103
  store i32 %104, ptr %101, align 4, !tbaa !95
  %105 = load i64, ptr %37, align 8, !tbaa !147
  %106 = getelementptr inbounds i32, ptr %65, i64 9986
  %107 = load i32, ptr %106, align 4, !tbaa !95
  %108 = trunc i64 %105 to i32
  %109 = add i32 %107, %108
  store i32 %109, ptr %106, align 4, !tbaa !95
  %110 = load i64, ptr %38, align 8, !tbaa !147
  %111 = getelementptr inbounds i32, ptr %65, i64 9987
  %112 = load i32, ptr %111, align 4, !tbaa !95
  %113 = trunc i64 %110 to i32
  %114 = add i32 %112, %113
  store i32 %114, ptr %111, align 4, !tbaa !95
  %115 = load i64, ptr %39, align 8, !tbaa !147
  %116 = getelementptr inbounds i32, ptr %65, i64 9988
  %117 = load i32, ptr %116, align 4, !tbaa !95
  %118 = trunc i64 %115 to i32
  %119 = add i32 %117, %118
  store i32 %119, ptr %116, align 4, !tbaa !95
  %120 = load i64, ptr %40, align 8, !tbaa !147
  %121 = getelementptr inbounds i32, ptr %65, i64 9989
  %122 = load i32, ptr %121, align 4, !tbaa !95
  %123 = trunc i64 %120 to i32
  %124 = add i32 %122, %123
  store i32 %124, ptr %121, align 4, !tbaa !95
  %125 = load i64, ptr %41, align 8, !tbaa !147
  %126 = getelementptr inbounds i32, ptr %65, i64 9990
  %127 = load i32, ptr %126, align 4, !tbaa !95
  %128 = trunc i64 %125 to i32
  %129 = add i32 %127, %128
  store i32 %129, ptr %126, align 4, !tbaa !95
  %130 = load i64, ptr %42, align 8, !tbaa !147
  %131 = getelementptr inbounds i32, ptr %65, i64 9991
  %132 = load i32, ptr %131, align 4, !tbaa !95
  %133 = trunc i64 %130 to i32
  %134 = add i32 %132, %133
  store i32 %134, ptr %131, align 4, !tbaa !95
  %135 = load i64, ptr %43, align 8, !tbaa !147
  %136 = getelementptr inbounds i32, ptr %65, i64 9992
  %137 = load i32, ptr %136, align 4, !tbaa !95
  %138 = trunc i64 %135 to i32
  %139 = add i32 %137, %138
  store i32 %139, ptr %136, align 4, !tbaa !95
  %140 = load i64, ptr %44, align 8, !tbaa !147
  %141 = getelementptr inbounds i32, ptr %65, i64 9993
  %142 = load i32, ptr %141, align 4, !tbaa !95
  %143 = trunc i64 %140 to i32
  %144 = add i32 %142, %143
  store i32 %144, ptr %141, align 4, !tbaa !95
  %145 = load i64, ptr %45, align 8, !tbaa !147
  %146 = getelementptr inbounds i32, ptr %65, i64 9994
  %147 = load i32, ptr %146, align 4, !tbaa !95
  %148 = trunc i64 %145 to i32
  %149 = add i32 %147, %148
  store i32 %149, ptr %146, align 4, !tbaa !95
  %150 = load i64, ptr %46, align 8, !tbaa !147
  %151 = getelementptr inbounds i32, ptr %65, i64 9995
  %152 = load i32, ptr %151, align 4, !tbaa !95
  %153 = trunc i64 %150 to i32
  %154 = add i32 %152, %153
  store i32 %154, ptr %151, align 4, !tbaa !95
  %155 = load i64, ptr %47, align 8, !tbaa !147
  %156 = getelementptr inbounds i32, ptr %65, i64 9996
  %157 = load i32, ptr %156, align 4, !tbaa !95
  %158 = trunc i64 %155 to i32
  %159 = add i32 %157, %158
  store i32 %159, ptr %156, align 4, !tbaa !95
  %160 = load i64, ptr %48, align 8, !tbaa !147
  %161 = getelementptr inbounds i32, ptr %65, i64 9997
  %162 = load i32, ptr %161, align 4, !tbaa !95
  %163 = trunc i64 %160 to i32
  %164 = add i32 %162, %163
  store i32 %164, ptr %161, align 4, !tbaa !95
  %165 = load i64, ptr %49, align 8, !tbaa !147
  %166 = getelementptr inbounds i32, ptr %65, i64 9998
  %167 = load i32, ptr %166, align 4, !tbaa !95
  %168 = trunc i64 %165 to i32
  %169 = add i32 %167, %168
  store i32 %169, ptr %166, align 4, !tbaa !95
  %170 = load i64, ptr %50, align 8, !tbaa !147
  %171 = getelementptr inbounds i32, ptr %65, i64 9999
  %172 = load i32, ptr %171, align 4, !tbaa !95
  %173 = trunc i64 %170 to i32
  %174 = add i32 %172, %173
  store i32 %174, ptr %171, align 4, !tbaa !95
  %175 = add i64 %63, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %51, label %62, !prof !42

177:                                              ; preds = %25, %51
  %178 = landingpad { ptr, i32 }
          cleanup
  %179 = load ptr, ptr %4, align 8, !tbaa !5
  %180 = icmp eq ptr %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %60, %58, %177
  %182 = phi { ptr, i32 } [ %178, %177 ], [ %61, %60 ], [ %59, %58 ]
  %183 = phi ptr [ %179, %177 ], [ %6, %60 ], [ %6, %58 ]
  call void @_ZdaPv(ptr noundef nonnull %183) #13
  br label %184

184:                                              ; preds = %181, %177, %56
  %185 = phi { ptr, i32 } [ %57, %56 ], [ %178, %177 ], [ %182, %181 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %185

186:                                              ; preds = %52, %55
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::uniform_int_distribution.65", align 8
  %4 = alloca %"class.std::unique_ptr.44", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %7 unwind label %39

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #11
  store i64 0, ptr %3, align 8, !tbaa !144
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %3, i64 0, i32 1
  store i64 -1, ptr %8, align 8, !tbaa !146
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %3)
          to label %12 unwind label %43

12:                                               ; preds = %9
  %13 = getelementptr inbounds i64, ptr %5, i64 %10
  store i64 %11, ptr %13, align 8, !tbaa !147
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !148

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %17, align 4, !tbaa !94
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %21 unwind label %41

21:                                               ; preds = %18
  %22 = getelementptr inbounds i32, ptr %6, i64 %19
  store i32 %20, ptr %22, align 4, !tbaa !95
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !96

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %81

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %34, label %45, !prof !42

34:                                               ; preds = %78, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %35 unwind label %81

35:                                               ; preds = %34
  %36 = load ptr, ptr %4, align 8, !tbaa !5
  %37 = icmp eq ptr %36, null
  br i1 %37, label %90, label %38

38:                                               ; preds = %35
  call void @_ZdaPv(ptr noundef nonnull %36) #13
  br label %90

39:                                               ; preds = %1
  %40 = landingpad { ptr, i32 }
          cleanup
  br label %88

41:                                               ; preds = %18
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %85

43:                                               ; preds = %9
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %85

45:                                               ; preds = %30, %78
  %46 = phi i64 [ %79, %78 ], [ %29, %30 ]
  %47 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %4, i64 %47) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %48 = load ptr, ptr %4, align 8, !tbaa !5
  br label %49

49:                                               ; preds = %49, %45
  %50 = phi i64 [ 0, %45 ], [ %76, %49 ]
  %51 = getelementptr inbounds i64, ptr %5, i64 %50
  %52 = load <2 x i64>, ptr %51, align 8, !tbaa !147
  %53 = getelementptr inbounds i64, ptr %51, i64 2
  %54 = load <2 x i64>, ptr %53, align 8, !tbaa !147
  %55 = getelementptr inbounds i32, ptr %48, i64 %50
  %56 = load <2 x i32>, ptr %55, align 4, !tbaa !95
  %57 = getelementptr inbounds i32, ptr %55, i64 2
  %58 = load <2 x i32>, ptr %57, align 4, !tbaa !95
  %59 = trunc <2 x i64> %52 to <2 x i32>
  %60 = trunc <2 x i64> %54 to <2 x i32>
  %61 = add <2 x i32> %56, %59
  %62 = add <2 x i32> %58, %60
  store <2 x i32> %61, ptr %55, align 4, !tbaa !95
  store <2 x i32> %62, ptr %57, align 4, !tbaa !95
  %63 = or i64 %50, 4
  %64 = getelementptr inbounds i64, ptr %5, i64 %63
  %65 = load <2 x i64>, ptr %64, align 8, !tbaa !147
  %66 = getelementptr inbounds i64, ptr %64, i64 2
  %67 = load <2 x i64>, ptr %66, align 8, !tbaa !147
  %68 = getelementptr inbounds i32, ptr %48, i64 %63
  %69 = load <2 x i32>, ptr %68, align 4, !tbaa !95
  %70 = getelementptr inbounds i32, ptr %68, i64 2
  %71 = load <2 x i32>, ptr %70, align 4, !tbaa !95
  %72 = trunc <2 x i64> %65 to <2 x i32>
  %73 = trunc <2 x i64> %67 to <2 x i32>
  %74 = add <2 x i32> %69, %72
  %75 = add <2 x i32> %71, %73
  store <2 x i32> %74, ptr %68, align 4, !tbaa !95
  store <2 x i32> %75, ptr %70, align 4, !tbaa !95
  %76 = add nuw nsw i64 %50, 8
  %77 = icmp eq i64 %76, 10000
  br i1 %77, label %78, label %49, !llvm.loop !228

78:                                               ; preds = %49
  %79 = add i64 %46, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %34, label %45, !prof !42

81:                                               ; preds = %25, %34
  %82 = landingpad { ptr, i32 }
          cleanup
  %83 = load ptr, ptr %4, align 8, !tbaa !5
  %84 = icmp eq ptr %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %43, %41, %81
  %86 = phi { ptr, i32 } [ %82, %81 ], [ %44, %43 ], [ %42, %41 ]
  %87 = phi ptr [ %83, %81 ], [ %6, %43 ], [ %6, %41 ]
  call void @_ZdaPv(ptr noundef nonnull %87) #13
  br label %88

88:                                               ; preds = %85, %81, %39
  %89 = phi { ptr, i32 } [ %40, %39 ], [ %82, %81 ], [ %86, %85 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %89

90:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::unique_ptr", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %9, align 1, !tbaa !69
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, ptr %4, i64 %11
  store i8 %12, ptr %14, align 1, !tbaa !16
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !70

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i8, ptr %4, i64 %19
  %21 = load i8, ptr %20, align 1, !tbaa !16
  %22 = zext i8 %21 to i16
  %23 = getelementptr inbounds i16, ptr %7, i64 %19
  store i16 %22, ptr %23, align 2, !tbaa !13
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i8, ptr %4, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !16
  %27 = zext i8 %26 to i16
  %28 = getelementptr inbounds i16, ptr %7, i64 %24
  store i16 %27, ptr %28, align 2, !tbaa !13
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i8, ptr %4, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !16
  %32 = zext i8 %31 to i16
  %33 = getelementptr inbounds i16, ptr %7, i64 %29
  store i16 %32, ptr %33, align 2, !tbaa !13
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i8, ptr %4, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !16
  %37 = zext i8 %36 to i16
  %38 = getelementptr inbounds i16, ptr %7, i64 %34
  store i16 %37, ptr %38, align 2, !tbaa !13
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i8, ptr %4, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !16
  %42 = zext i8 %41 to i16
  %43 = getelementptr inbounds i16, ptr %7, i64 %39
  store i16 %42, ptr %43, align 2, !tbaa !13
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !229

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i8, ptr %4, i64 %47
  %49 = load <8 x i8>, ptr %48, align 1, !tbaa !16
  %50 = getelementptr inbounds i8, ptr %48, i64 8
  %51 = load <8 x i8>, ptr %50, align 1, !tbaa !16
  %52 = getelementptr inbounds i8, ptr %48, i64 16
  %53 = load <8 x i8>, ptr %52, align 1, !tbaa !16
  %54 = getelementptr inbounds i8, ptr %48, i64 24
  %55 = load <8 x i8>, ptr %54, align 1, !tbaa !16
  %56 = zext <8 x i8> %49 to <8 x i16>
  %57 = zext <8 x i8> %51 to <8 x i16>
  %58 = zext <8 x i8> %53 to <8 x i16>
  %59 = zext <8 x i8> %55 to <8 x i16>
  %60 = getelementptr inbounds i16, ptr %5, i64 %47
  store <8 x i16> %56, ptr %60, align 2, !tbaa !13
  %61 = getelementptr inbounds i16, ptr %60, i64 8
  store <8 x i16> %57, ptr %61, align 2, !tbaa !13
  %62 = getelementptr inbounds i16, ptr %60, i64 16
  store <8 x i16> %58, ptr %62, align 2, !tbaa !13
  %63 = getelementptr inbounds i16, ptr %60, i64 24
  store <8 x i16> %59, ptr %63, align 2, !tbaa !13
  %64 = add nuw i64 %47, 32
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !230

66:                                               ; preds = %46
  %67 = getelementptr inbounds i8, ptr %4, i64 9984
  %68 = load i8, ptr %67, align 1, !tbaa !16
  %69 = zext i8 %68 to i16
  %70 = getelementptr inbounds i16, ptr %5, i64 9984
  store i16 %69, ptr %70, align 2, !tbaa !13
  %71 = getelementptr inbounds i8, ptr %4, i64 9985
  %72 = load i8, ptr %71, align 1, !tbaa !16
  %73 = zext i8 %72 to i16
  %74 = getelementptr inbounds i16, ptr %5, i64 9985
  store i16 %73, ptr %74, align 2, !tbaa !13
  %75 = getelementptr inbounds i8, ptr %4, i64 9986
  %76 = load i8, ptr %75, align 1, !tbaa !16
  %77 = zext i8 %76 to i16
  %78 = getelementptr inbounds i16, ptr %5, i64 9986
  store i16 %77, ptr %78, align 2, !tbaa !13
  %79 = getelementptr inbounds i8, ptr %4, i64 9987
  %80 = load i8, ptr %79, align 1, !tbaa !16
  %81 = zext i8 %80 to i16
  %82 = getelementptr inbounds i16, ptr %5, i64 9987
  store i16 %81, ptr %82, align 2, !tbaa !13
  %83 = getelementptr inbounds i8, ptr %4, i64 9988
  %84 = load i8, ptr %83, align 1, !tbaa !16
  %85 = zext i8 %84 to i16
  %86 = getelementptr inbounds i16, ptr %5, i64 9988
  store i16 %85, ptr %86, align 2, !tbaa !13
  %87 = getelementptr inbounds i8, ptr %4, i64 9989
  %88 = load i8, ptr %87, align 1, !tbaa !16
  %89 = zext i8 %88 to i16
  %90 = getelementptr inbounds i16, ptr %5, i64 9989
  store i16 %89, ptr %90, align 2, !tbaa !13
  %91 = getelementptr inbounds i8, ptr %4, i64 9990
  %92 = load i8, ptr %91, align 1, !tbaa !16
  %93 = zext i8 %92 to i16
  %94 = getelementptr inbounds i16, ptr %5, i64 9990
  store i16 %93, ptr %94, align 2, !tbaa !13
  %95 = getelementptr inbounds i8, ptr %4, i64 9991
  %96 = load i8, ptr %95, align 1, !tbaa !16
  %97 = zext i8 %96 to i16
  %98 = getelementptr inbounds i16, ptr %5, i64 9991
  store i16 %97, ptr %98, align 2, !tbaa !13
  %99 = getelementptr inbounds i8, ptr %4, i64 9992
  %100 = load i8, ptr %99, align 1, !tbaa !16
  %101 = zext i8 %100 to i16
  %102 = getelementptr inbounds i16, ptr %5, i64 9992
  store i16 %101, ptr %102, align 2, !tbaa !13
  %103 = getelementptr inbounds i8, ptr %4, i64 9993
  %104 = load i8, ptr %103, align 1, !tbaa !16
  %105 = zext i8 %104 to i16
  %106 = getelementptr inbounds i16, ptr %5, i64 9993
  store i16 %105, ptr %106, align 2, !tbaa !13
  %107 = getelementptr inbounds i8, ptr %4, i64 9994
  %108 = load i8, ptr %107, align 1, !tbaa !16
  %109 = zext i8 %108 to i16
  %110 = getelementptr inbounds i16, ptr %5, i64 9994
  store i16 %109, ptr %110, align 2, !tbaa !13
  %111 = getelementptr inbounds i8, ptr %4, i64 9995
  %112 = load i8, ptr %111, align 1, !tbaa !16
  %113 = zext i8 %112 to i16
  %114 = getelementptr inbounds i16, ptr %5, i64 9995
  store i16 %113, ptr %114, align 2, !tbaa !13
  %115 = getelementptr inbounds i8, ptr %4, i64 9996
  %116 = load i8, ptr %115, align 1, !tbaa !16
  %117 = zext i8 %116 to i16
  %118 = getelementptr inbounds i16, ptr %5, i64 9996
  store i16 %117, ptr %118, align 2, !tbaa !13
  %119 = getelementptr inbounds i8, ptr %4, i64 9997
  %120 = load i8, ptr %119, align 1, !tbaa !16
  %121 = zext i8 %120 to i16
  %122 = getelementptr inbounds i16, ptr %5, i64 9997
  store i16 %121, ptr %122, align 2, !tbaa !13
  %123 = getelementptr inbounds i8, ptr %4, i64 9998
  %124 = load i8, ptr %123, align 1, !tbaa !16
  %125 = zext i8 %124 to i16
  %126 = getelementptr inbounds i16, ptr %5, i64 9998
  store i16 %125, ptr %126, align 2, !tbaa !13
  %127 = getelementptr inbounds i8, ptr %4, i64 9999
  %128 = load i8, ptr %127, align 1, !tbaa !16
  %129 = zext i8 %128 to i16
  %130 = getelementptr inbounds i16, ptr %5, i64 9999
  store i16 %129, ptr %130, align 2, !tbaa !13
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %283

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %280

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %276

137:                                              ; preds = %199, %66
  %138 = phi i64 [ 0, %66 ], [ %200, %199 ]
  %139 = getelementptr inbounds i16, ptr %5, i64 %138
  %140 = load i16, ptr %139, align 2, !tbaa !13
  %141 = getelementptr inbounds i16, ptr %7, i64 %138
  %142 = load i16, ptr %141, align 2, !tbaa !13
  %143 = icmp eq i16 %140, %142
  br i1 %143, label %171, label %144

144:                                              ; preds = %192, %185, %178, %171, %137
  %145 = phi i64 [ %138, %137 ], [ %172, %171 ], [ %179, %178 ], [ %186, %185 ], [ %193, %192 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i16, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %169

149:                                              ; preds = %144
  %150 = getelementptr inbounds i8, ptr %4, i64 %146
  %151 = load i8, ptr %150, align 1, !tbaa !16
  %152 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %151)
          to label %153 unwind label %169

153:                                              ; preds = %149
  %154 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %152, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %155 unwind label %169

155:                                              ; preds = %153
  %156 = getelementptr inbounds i16, ptr %5, i64 %146
  %157 = load i16, ptr %156, align 2, !tbaa !13
  %158 = zext i16 %157 to i64
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %152, i64 noundef %158)
          to label %160 unwind label %169

160:                                              ; preds = %155
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %162 unwind label %169

162:                                              ; preds = %160
  %163 = load i16, ptr %147, align 2, !tbaa !13
  %164 = zext i16 %163 to i64
  %165 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %159, i64 noundef %164)
          to label %166 unwind label %169

166:                                              ; preds = %162
  %167 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %165, ptr noundef nonnull @.str.149)
          to label %168 unwind label %169

168:                                              ; preds = %166
  call void @exit(i32 noundef 1) #12
  unreachable

169:                                              ; preds = %166, %162, %160, %155, %153, %149, %144
  %170 = landingpad { ptr, i32 }
          cleanup
  br label %276

171:                                              ; preds = %137
  %172 = add nuw nsw i64 %138, 1
  %173 = getelementptr inbounds i16, ptr %5, i64 %172
  %174 = load i16, ptr %173, align 2, !tbaa !13
  %175 = getelementptr inbounds i16, ptr %7, i64 %172
  %176 = load i16, ptr %175, align 2, !tbaa !13
  %177 = icmp eq i16 %174, %176
  br i1 %177, label %178, label %144

178:                                              ; preds = %171
  %179 = add nuw nsw i64 %138, 2
  %180 = getelementptr inbounds i16, ptr %5, i64 %179
  %181 = load i16, ptr %180, align 2, !tbaa !13
  %182 = getelementptr inbounds i16, ptr %7, i64 %179
  %183 = load i16, ptr %182, align 2, !tbaa !13
  %184 = icmp eq i16 %181, %183
  br i1 %184, label %185, label %144

185:                                              ; preds = %178
  %186 = add nuw nsw i64 %138, 3
  %187 = getelementptr inbounds i16, ptr %5, i64 %186
  %188 = load i16, ptr %187, align 2, !tbaa !13
  %189 = getelementptr inbounds i16, ptr %7, i64 %186
  %190 = load i16, ptr %189, align 2, !tbaa !13
  %191 = icmp eq i16 %188, %190
  br i1 %191, label %192, label %144

192:                                              ; preds = %185
  %193 = add nuw nsw i64 %138, 4
  %194 = getelementptr inbounds i16, ptr %5, i64 %193
  %195 = load i16, ptr %194, align 2, !tbaa !13
  %196 = getelementptr inbounds i16, ptr %7, i64 %193
  %197 = load i16, ptr %196, align 2, !tbaa !13
  %198 = icmp eq i16 %195, %197
  br i1 %198, label %199, label %144

199:                                              ; preds = %192
  %200 = add nuw nsw i64 %138, 5
  %201 = icmp eq i64 %200, 10000
  br i1 %201, label %202, label %137, !llvm.loop !231

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %204 = load i8, ptr %203, align 2, !tbaa !23, !range !40, !noundef !41
  %205 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %206 = load i64, ptr %205, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %207 unwind label %218

207:                                              ; preds = %202
  %208 = icmp ne i8 %204, 0
  %209 = icmp eq i64 %206, 0
  %210 = select i1 %208, i1 true, i1 %209
  br i1 %210, label %213, label %211, !prof !42

211:                                              ; preds = %207
  %212 = getelementptr i8, ptr %4, i64 10000
  br label %220

213:                                              ; preds = %273, %207
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %214 unwind label %218

214:                                              ; preds = %213
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %215 = load ptr, ptr %3, align 8, !tbaa !5
  %216 = icmp eq ptr %215, null
  br i1 %216, label %285, label %217

217:                                              ; preds = %214
  call void @_ZdaPv(ptr noundef nonnull %215) #13
  br label %285

218:                                              ; preds = %213, %202
  %219 = landingpad { ptr, i32 }
          cleanup
  br label %276

220:                                              ; preds = %211, %273
  %221 = phi i64 [ %274, %273 ], [ %206, %211 ]
  %222 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %3, i64 %222) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %223 = load ptr, ptr %3, align 8, !tbaa !5
  %224 = getelementptr i8, ptr %223, i64 20000
  %225 = icmp ult ptr %223, %212
  %226 = icmp ult ptr %4, %224
  %227 = and i1 %225, %226
  br i1 %227, label %248, label %228

228:                                              ; preds = %220, %228
  %229 = phi i64 [ %246, %228 ], [ 0, %220 ]
  %230 = getelementptr inbounds i8, ptr %4, i64 %229
  %231 = load <8 x i8>, ptr %230, align 1, !tbaa !16, !alias.scope !232
  %232 = getelementptr inbounds i8, ptr %230, i64 8
  %233 = load <8 x i8>, ptr %232, align 1, !tbaa !16, !alias.scope !232
  %234 = getelementptr inbounds i8, ptr %230, i64 16
  %235 = load <8 x i8>, ptr %234, align 1, !tbaa !16, !alias.scope !232
  %236 = getelementptr inbounds i8, ptr %230, i64 24
  %237 = load <8 x i8>, ptr %236, align 1, !tbaa !16, !alias.scope !232
  %238 = zext <8 x i8> %231 to <8 x i16>
  %239 = zext <8 x i8> %233 to <8 x i16>
  %240 = zext <8 x i8> %235 to <8 x i16>
  %241 = zext <8 x i8> %237 to <8 x i16>
  %242 = getelementptr inbounds i16, ptr %223, i64 %229
  store <8 x i16> %238, ptr %242, align 2, !tbaa !13, !alias.scope !235, !noalias !232
  %243 = getelementptr inbounds i16, ptr %242, i64 8
  store <8 x i16> %239, ptr %243, align 2, !tbaa !13, !alias.scope !235, !noalias !232
  %244 = getelementptr inbounds i16, ptr %242, i64 16
  store <8 x i16> %240, ptr %244, align 2, !tbaa !13, !alias.scope !235, !noalias !232
  %245 = getelementptr inbounds i16, ptr %242, i64 24
  store <8 x i16> %241, ptr %245, align 2, !tbaa !13, !alias.scope !235, !noalias !232
  %246 = add nuw i64 %229, 32
  %247 = icmp eq i64 %246, 9984
  br i1 %247, label %248, label %228, !llvm.loop !237

248:                                              ; preds = %228, %220
  %249 = phi i64 [ 0, %220 ], [ 9984, %228 ]
  br label %250

250:                                              ; preds = %250, %248
  %251 = phi i64 [ %249, %248 ], [ %271, %250 ]
  %252 = getelementptr inbounds i8, ptr %4, i64 %251
  %253 = load i8, ptr %252, align 1, !tbaa !16
  %254 = zext i8 %253 to i16
  %255 = getelementptr inbounds i16, ptr %223, i64 %251
  store i16 %254, ptr %255, align 2, !tbaa !13
  %256 = or i64 %251, 1
  %257 = getelementptr inbounds i8, ptr %4, i64 %256
  %258 = load i8, ptr %257, align 1, !tbaa !16
  %259 = zext i8 %258 to i16
  %260 = getelementptr inbounds i16, ptr %223, i64 %256
  store i16 %259, ptr %260, align 2, !tbaa !13
  %261 = or i64 %251, 2
  %262 = getelementptr inbounds i8, ptr %4, i64 %261
  %263 = load i8, ptr %262, align 1, !tbaa !16
  %264 = zext i8 %263 to i16
  %265 = getelementptr inbounds i16, ptr %223, i64 %261
  store i16 %264, ptr %265, align 2, !tbaa !13
  %266 = or i64 %251, 3
  %267 = getelementptr inbounds i8, ptr %4, i64 %266
  %268 = load i8, ptr %267, align 1, !tbaa !16
  %269 = zext i8 %268 to i16
  %270 = getelementptr inbounds i16, ptr %223, i64 %266
  store i16 %269, ptr %270, align 2, !tbaa !13
  %271 = add nuw nsw i64 %251, 4
  %272 = icmp eq i64 %271, 10000
  br i1 %272, label %273, label %250, !llvm.loop !238

273:                                              ; preds = %250
  %274 = add i64 %221, -1
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %213, label %220, !prof !42

276:                                              ; preds = %218, %169, %135
  %277 = phi { ptr, i32 } [ %170, %169 ], [ %219, %218 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %278 = load ptr, ptr %3, align 8, !tbaa !5
  %279 = icmp eq ptr %278, null
  br i1 %279, label %283, label %280

280:                                              ; preds = %276, %133
  %281 = phi { ptr, i32 } [ %134, %133 ], [ %277, %276 ]
  %282 = phi ptr [ %5, %133 ], [ %278, %276 ]
  call void @_ZdaPv(ptr noundef nonnull %282) #13
  br label %283

283:                                              ; preds = %280, %276, %131
  %284 = phi { ptr, i32 } [ %132, %131 ], [ %277, %276 ], [ %281, %280 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %284

285:                                              ; preds = %214, %217
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::unique_ptr", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %9, align 1, !tbaa !69
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, ptr %4, i64 %11
  store i8 %12, ptr %14, align 1, !tbaa !16
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !70

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i8, ptr %4, i64 %19
  %21 = load i8, ptr %20, align 1, !tbaa !16
  %22 = zext i8 %21 to i16
  %23 = getelementptr inbounds i16, ptr %7, i64 %19
  store i16 %22, ptr %23, align 2, !tbaa !13
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i8, ptr %4, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !16
  %27 = zext i8 %26 to i16
  %28 = getelementptr inbounds i16, ptr %7, i64 %24
  store i16 %27, ptr %28, align 2, !tbaa !13
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i8, ptr %4, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !16
  %32 = zext i8 %31 to i16
  %33 = getelementptr inbounds i16, ptr %7, i64 %29
  store i16 %32, ptr %33, align 2, !tbaa !13
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i8, ptr %4, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !16
  %37 = zext i8 %36 to i16
  %38 = getelementptr inbounds i16, ptr %7, i64 %34
  store i16 %37, ptr %38, align 2, !tbaa !13
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i8, ptr %4, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !16
  %42 = zext i8 %41 to i16
  %43 = getelementptr inbounds i16, ptr %7, i64 %39
  store i16 %42, ptr %43, align 2, !tbaa !13
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !229

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i8, ptr %4, i64 %47
  %49 = load <16 x i8>, ptr %48, align 1, !tbaa !16
  %50 = getelementptr inbounds i8, ptr %48, i64 16
  %51 = load <16 x i8>, ptr %50, align 1, !tbaa !16
  %52 = getelementptr inbounds i8, ptr %48, i64 32
  %53 = load <16 x i8>, ptr %52, align 1, !tbaa !16
  %54 = getelementptr inbounds i8, ptr %48, i64 48
  %55 = load <16 x i8>, ptr %54, align 1, !tbaa !16
  %56 = zext <16 x i8> %49 to <16 x i16>
  %57 = zext <16 x i8> %51 to <16 x i16>
  %58 = zext <16 x i8> %53 to <16 x i16>
  %59 = zext <16 x i8> %55 to <16 x i16>
  %60 = getelementptr inbounds i16, ptr %5, i64 %47
  store <16 x i16> %56, ptr %60, align 2, !tbaa !13
  %61 = getelementptr inbounds i16, ptr %60, i64 16
  store <16 x i16> %57, ptr %61, align 2, !tbaa !13
  %62 = getelementptr inbounds i16, ptr %60, i64 32
  store <16 x i16> %58, ptr %62, align 2, !tbaa !13
  %63 = getelementptr inbounds i16, ptr %60, i64 48
  store <16 x i16> %59, ptr %63, align 2, !tbaa !13
  %64 = add nuw i64 %47, 64
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !239

66:                                               ; preds = %46
  %67 = getelementptr inbounds i8, ptr %4, i64 9984
  %68 = load i8, ptr %67, align 1, !tbaa !16
  %69 = zext i8 %68 to i16
  %70 = getelementptr inbounds i16, ptr %5, i64 9984
  store i16 %69, ptr %70, align 2, !tbaa !13
  %71 = getelementptr inbounds i8, ptr %4, i64 9985
  %72 = load i8, ptr %71, align 1, !tbaa !16
  %73 = zext i8 %72 to i16
  %74 = getelementptr inbounds i16, ptr %5, i64 9985
  store i16 %73, ptr %74, align 2, !tbaa !13
  %75 = getelementptr inbounds i8, ptr %4, i64 9986
  %76 = load i8, ptr %75, align 1, !tbaa !16
  %77 = zext i8 %76 to i16
  %78 = getelementptr inbounds i16, ptr %5, i64 9986
  store i16 %77, ptr %78, align 2, !tbaa !13
  %79 = getelementptr inbounds i8, ptr %4, i64 9987
  %80 = load i8, ptr %79, align 1, !tbaa !16
  %81 = zext i8 %80 to i16
  %82 = getelementptr inbounds i16, ptr %5, i64 9987
  store i16 %81, ptr %82, align 2, !tbaa !13
  %83 = getelementptr inbounds i8, ptr %4, i64 9988
  %84 = load i8, ptr %83, align 1, !tbaa !16
  %85 = zext i8 %84 to i16
  %86 = getelementptr inbounds i16, ptr %5, i64 9988
  store i16 %85, ptr %86, align 2, !tbaa !13
  %87 = getelementptr inbounds i8, ptr %4, i64 9989
  %88 = load i8, ptr %87, align 1, !tbaa !16
  %89 = zext i8 %88 to i16
  %90 = getelementptr inbounds i16, ptr %5, i64 9989
  store i16 %89, ptr %90, align 2, !tbaa !13
  %91 = getelementptr inbounds i8, ptr %4, i64 9990
  %92 = load i8, ptr %91, align 1, !tbaa !16
  %93 = zext i8 %92 to i16
  %94 = getelementptr inbounds i16, ptr %5, i64 9990
  store i16 %93, ptr %94, align 2, !tbaa !13
  %95 = getelementptr inbounds i8, ptr %4, i64 9991
  %96 = load i8, ptr %95, align 1, !tbaa !16
  %97 = zext i8 %96 to i16
  %98 = getelementptr inbounds i16, ptr %5, i64 9991
  store i16 %97, ptr %98, align 2, !tbaa !13
  %99 = getelementptr inbounds i8, ptr %4, i64 9992
  %100 = load i8, ptr %99, align 1, !tbaa !16
  %101 = zext i8 %100 to i16
  %102 = getelementptr inbounds i16, ptr %5, i64 9992
  store i16 %101, ptr %102, align 2, !tbaa !13
  %103 = getelementptr inbounds i8, ptr %4, i64 9993
  %104 = load i8, ptr %103, align 1, !tbaa !16
  %105 = zext i8 %104 to i16
  %106 = getelementptr inbounds i16, ptr %5, i64 9993
  store i16 %105, ptr %106, align 2, !tbaa !13
  %107 = getelementptr inbounds i8, ptr %4, i64 9994
  %108 = load i8, ptr %107, align 1, !tbaa !16
  %109 = zext i8 %108 to i16
  %110 = getelementptr inbounds i16, ptr %5, i64 9994
  store i16 %109, ptr %110, align 2, !tbaa !13
  %111 = getelementptr inbounds i8, ptr %4, i64 9995
  %112 = load i8, ptr %111, align 1, !tbaa !16
  %113 = zext i8 %112 to i16
  %114 = getelementptr inbounds i16, ptr %5, i64 9995
  store i16 %113, ptr %114, align 2, !tbaa !13
  %115 = getelementptr inbounds i8, ptr %4, i64 9996
  %116 = load i8, ptr %115, align 1, !tbaa !16
  %117 = zext i8 %116 to i16
  %118 = getelementptr inbounds i16, ptr %5, i64 9996
  store i16 %117, ptr %118, align 2, !tbaa !13
  %119 = getelementptr inbounds i8, ptr %4, i64 9997
  %120 = load i8, ptr %119, align 1, !tbaa !16
  %121 = zext i8 %120 to i16
  %122 = getelementptr inbounds i16, ptr %5, i64 9997
  store i16 %121, ptr %122, align 2, !tbaa !13
  %123 = getelementptr inbounds i8, ptr %4, i64 9998
  %124 = load i8, ptr %123, align 1, !tbaa !16
  %125 = zext i8 %124 to i16
  %126 = getelementptr inbounds i16, ptr %5, i64 9998
  store i16 %125, ptr %126, align 2, !tbaa !13
  %127 = getelementptr inbounds i8, ptr %4, i64 9999
  %128 = load i8, ptr %127, align 1, !tbaa !16
  %129 = zext i8 %128 to i16
  %130 = getelementptr inbounds i16, ptr %5, i64 9999
  store i16 %129, ptr %130, align 2, !tbaa !13
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %283

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %280

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %276

137:                                              ; preds = %199, %66
  %138 = phi i64 [ 0, %66 ], [ %200, %199 ]
  %139 = getelementptr inbounds i16, ptr %5, i64 %138
  %140 = load i16, ptr %139, align 2, !tbaa !13
  %141 = getelementptr inbounds i16, ptr %7, i64 %138
  %142 = load i16, ptr %141, align 2, !tbaa !13
  %143 = icmp eq i16 %140, %142
  br i1 %143, label %171, label %144

144:                                              ; preds = %192, %185, %178, %171, %137
  %145 = phi i64 [ %138, %137 ], [ %172, %171 ], [ %179, %178 ], [ %186, %185 ], [ %193, %192 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i16, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %169

149:                                              ; preds = %144
  %150 = getelementptr inbounds i8, ptr %4, i64 %146
  %151 = load i8, ptr %150, align 1, !tbaa !16
  %152 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %151)
          to label %153 unwind label %169

153:                                              ; preds = %149
  %154 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %152, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %155 unwind label %169

155:                                              ; preds = %153
  %156 = getelementptr inbounds i16, ptr %5, i64 %146
  %157 = load i16, ptr %156, align 2, !tbaa !13
  %158 = zext i16 %157 to i64
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %152, i64 noundef %158)
          to label %160 unwind label %169

160:                                              ; preds = %155
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %162 unwind label %169

162:                                              ; preds = %160
  %163 = load i16, ptr %147, align 2, !tbaa !13
  %164 = zext i16 %163 to i64
  %165 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %159, i64 noundef %164)
          to label %166 unwind label %169

166:                                              ; preds = %162
  %167 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %165, ptr noundef nonnull @.str.149)
          to label %168 unwind label %169

168:                                              ; preds = %166
  call void @exit(i32 noundef 1) #12
  unreachable

169:                                              ; preds = %166, %162, %160, %155, %153, %149, %144
  %170 = landingpad { ptr, i32 }
          cleanup
  br label %276

171:                                              ; preds = %137
  %172 = add nuw nsw i64 %138, 1
  %173 = getelementptr inbounds i16, ptr %5, i64 %172
  %174 = load i16, ptr %173, align 2, !tbaa !13
  %175 = getelementptr inbounds i16, ptr %7, i64 %172
  %176 = load i16, ptr %175, align 2, !tbaa !13
  %177 = icmp eq i16 %174, %176
  br i1 %177, label %178, label %144

178:                                              ; preds = %171
  %179 = add nuw nsw i64 %138, 2
  %180 = getelementptr inbounds i16, ptr %5, i64 %179
  %181 = load i16, ptr %180, align 2, !tbaa !13
  %182 = getelementptr inbounds i16, ptr %7, i64 %179
  %183 = load i16, ptr %182, align 2, !tbaa !13
  %184 = icmp eq i16 %181, %183
  br i1 %184, label %185, label %144

185:                                              ; preds = %178
  %186 = add nuw nsw i64 %138, 3
  %187 = getelementptr inbounds i16, ptr %5, i64 %186
  %188 = load i16, ptr %187, align 2, !tbaa !13
  %189 = getelementptr inbounds i16, ptr %7, i64 %186
  %190 = load i16, ptr %189, align 2, !tbaa !13
  %191 = icmp eq i16 %188, %190
  br i1 %191, label %192, label %144

192:                                              ; preds = %185
  %193 = add nuw nsw i64 %138, 4
  %194 = getelementptr inbounds i16, ptr %5, i64 %193
  %195 = load i16, ptr %194, align 2, !tbaa !13
  %196 = getelementptr inbounds i16, ptr %7, i64 %193
  %197 = load i16, ptr %196, align 2, !tbaa !13
  %198 = icmp eq i16 %195, %197
  br i1 %198, label %199, label %144

199:                                              ; preds = %192
  %200 = add nuw nsw i64 %138, 5
  %201 = icmp eq i64 %200, 10000
  br i1 %201, label %202, label %137, !llvm.loop !231

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %204 = load i8, ptr %203, align 2, !tbaa !23, !range !40, !noundef !41
  %205 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %206 = load i64, ptr %205, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %207 unwind label %218

207:                                              ; preds = %202
  %208 = icmp ne i8 %204, 0
  %209 = icmp eq i64 %206, 0
  %210 = select i1 %208, i1 true, i1 %209
  br i1 %210, label %213, label %211, !prof !42

211:                                              ; preds = %207
  %212 = getelementptr i8, ptr %4, i64 10000
  br label %220

213:                                              ; preds = %273, %207
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %214 unwind label %218

214:                                              ; preds = %213
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %215 = load ptr, ptr %3, align 8, !tbaa !5
  %216 = icmp eq ptr %215, null
  br i1 %216, label %285, label %217

217:                                              ; preds = %214
  call void @_ZdaPv(ptr noundef nonnull %215) #13
  br label %285

218:                                              ; preds = %213, %202
  %219 = landingpad { ptr, i32 }
          cleanup
  br label %276

220:                                              ; preds = %211, %273
  %221 = phi i64 [ %274, %273 ], [ %206, %211 ]
  %222 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %3, i64 %222) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %223 = load ptr, ptr %3, align 8, !tbaa !5
  %224 = getelementptr i8, ptr %223, i64 20000
  %225 = icmp ult ptr %223, %212
  %226 = icmp ult ptr %4, %224
  %227 = and i1 %225, %226
  br i1 %227, label %248, label %228

228:                                              ; preds = %220, %228
  %229 = phi i64 [ %246, %228 ], [ 0, %220 ]
  %230 = getelementptr inbounds i8, ptr %4, i64 %229
  %231 = load <16 x i8>, ptr %230, align 1, !tbaa !16, !alias.scope !240
  %232 = getelementptr inbounds i8, ptr %230, i64 16
  %233 = load <16 x i8>, ptr %232, align 1, !tbaa !16, !alias.scope !240
  %234 = getelementptr inbounds i8, ptr %230, i64 32
  %235 = load <16 x i8>, ptr %234, align 1, !tbaa !16, !alias.scope !240
  %236 = getelementptr inbounds i8, ptr %230, i64 48
  %237 = load <16 x i8>, ptr %236, align 1, !tbaa !16, !alias.scope !240
  %238 = zext <16 x i8> %231 to <16 x i16>
  %239 = zext <16 x i8> %233 to <16 x i16>
  %240 = zext <16 x i8> %235 to <16 x i16>
  %241 = zext <16 x i8> %237 to <16 x i16>
  %242 = getelementptr inbounds i16, ptr %223, i64 %229
  store <16 x i16> %238, ptr %242, align 2, !tbaa !13, !alias.scope !243, !noalias !240
  %243 = getelementptr inbounds i16, ptr %242, i64 16
  store <16 x i16> %239, ptr %243, align 2, !tbaa !13, !alias.scope !243, !noalias !240
  %244 = getelementptr inbounds i16, ptr %242, i64 32
  store <16 x i16> %240, ptr %244, align 2, !tbaa !13, !alias.scope !243, !noalias !240
  %245 = getelementptr inbounds i16, ptr %242, i64 48
  store <16 x i16> %241, ptr %245, align 2, !tbaa !13, !alias.scope !243, !noalias !240
  %246 = add nuw i64 %229, 64
  %247 = icmp eq i64 %246, 9984
  br i1 %247, label %248, label %228, !llvm.loop !245

248:                                              ; preds = %228, %220
  %249 = phi i64 [ 0, %220 ], [ 9984, %228 ]
  br label %250

250:                                              ; preds = %250, %248
  %251 = phi i64 [ %249, %248 ], [ %271, %250 ]
  %252 = getelementptr inbounds i8, ptr %4, i64 %251
  %253 = load i8, ptr %252, align 1, !tbaa !16
  %254 = zext i8 %253 to i16
  %255 = getelementptr inbounds i16, ptr %223, i64 %251
  store i16 %254, ptr %255, align 2, !tbaa !13
  %256 = or i64 %251, 1
  %257 = getelementptr inbounds i8, ptr %4, i64 %256
  %258 = load i8, ptr %257, align 1, !tbaa !16
  %259 = zext i8 %258 to i16
  %260 = getelementptr inbounds i16, ptr %223, i64 %256
  store i16 %259, ptr %260, align 2, !tbaa !13
  %261 = or i64 %251, 2
  %262 = getelementptr inbounds i8, ptr %4, i64 %261
  %263 = load i8, ptr %262, align 1, !tbaa !16
  %264 = zext i8 %263 to i16
  %265 = getelementptr inbounds i16, ptr %223, i64 %261
  store i16 %264, ptr %265, align 2, !tbaa !13
  %266 = or i64 %251, 3
  %267 = getelementptr inbounds i8, ptr %4, i64 %266
  %268 = load i8, ptr %267, align 1, !tbaa !16
  %269 = zext i8 %268 to i16
  %270 = getelementptr inbounds i16, ptr %223, i64 %266
  store i16 %269, ptr %270, align 2, !tbaa !13
  %271 = add nuw nsw i64 %251, 4
  %272 = icmp eq i64 %271, 10000
  br i1 %272, label %273, label %250, !llvm.loop !246

273:                                              ; preds = %250
  %274 = add i64 %221, -1
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %213, label %220, !prof !42

276:                                              ; preds = %218, %169, %135
  %277 = phi { ptr, i32 } [ %170, %169 ], [ %219, %218 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %278 = load ptr, ptr %3, align 8, !tbaa !5
  %279 = icmp eq ptr %278, null
  br i1 %279, label %283, label %280

280:                                              ; preds = %276, %133
  %281 = phi { ptr, i32 } [ %134, %133 ], [ %277, %276 ]
  %282 = phi ptr [ %5, %133 ], [ %278, %276 ]
  call void @_ZdaPv(ptr noundef nonnull %282) #13
  br label %283

283:                                              ; preds = %280, %276, %131
  %284 = phi { ptr, i32 } [ %132, %131 ], [ %277, %276 ], [ %281, %280 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %284

285:                                              ; preds = %214, %217
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z53benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::unique_ptr", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %6 unwind label %68

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %8 unwind label %70

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %9, align 1, !tbaa !69
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %13 unwind label %72

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, ptr %4, i64 %11
  store i8 %12, ptr %14, align 1, !tbaa !16
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !70

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i8, ptr %4, i64 %19
  %21 = load i8, ptr %20, align 1, !tbaa !16
  %22 = zext i8 %21 to i16
  %23 = getelementptr inbounds i16, ptr %7, i64 %19
  store i16 %22, ptr %23, align 2, !tbaa !13
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i8, ptr %4, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !16
  %27 = zext i8 %26 to i16
  %28 = getelementptr inbounds i16, ptr %7, i64 %24
  store i16 %27, ptr %28, align 2, !tbaa !13
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i8, ptr %4, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !16
  %32 = zext i8 %31 to i16
  %33 = getelementptr inbounds i16, ptr %7, i64 %29
  store i16 %32, ptr %33, align 2, !tbaa !13
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i8, ptr %4, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !16
  %37 = zext i8 %36 to i16
  %38 = getelementptr inbounds i16, ptr %7, i64 %34
  store i16 %37, ptr %38, align 2, !tbaa !13
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i8, ptr %4, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !16
  %42 = zext i8 %41 to i16
  %43 = getelementptr inbounds i16, ptr %7, i64 %39
  store i16 %42, ptr %43, align 2, !tbaa !13
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !229

46:                                               ; preds = %18, %58
  %47 = phi i64 [ %67, %58 ], [ 0, %18 ]
  %48 = getelementptr inbounds i8, ptr %4, i64 %47
  %49 = load <8 x i8>, ptr %48, align 1, !tbaa !16
  %50 = getelementptr inbounds i8, ptr %48, i64 8
  %51 = load <8 x i8>, ptr %50, align 1, !tbaa !16
  %52 = zext <8 x i8> %49 to <8 x i16>
  %53 = zext <8 x i8> %51 to <8 x i16>
  %54 = getelementptr inbounds i16, ptr %5, i64 %47
  store <8 x i16> %52, ptr %54, align 2, !tbaa !13
  %55 = getelementptr inbounds i16, ptr %54, i64 8
  store <8 x i16> %53, ptr %55, align 2, !tbaa !13
  %56 = or i64 %47, 16
  %57 = icmp eq i64 %56, 10000
  br i1 %57, label %74, label %58, !llvm.loop !247

58:                                               ; preds = %46
  %59 = getelementptr inbounds i8, ptr %4, i64 %56
  %60 = load <8 x i8>, ptr %59, align 1, !tbaa !16
  %61 = getelementptr inbounds i8, ptr %59, i64 8
  %62 = load <8 x i8>, ptr %61, align 1, !tbaa !16
  %63 = zext <8 x i8> %60 to <8 x i16>
  %64 = zext <8 x i8> %62 to <8 x i16>
  %65 = getelementptr inbounds i16, ptr %5, i64 %56
  store <8 x i16> %63, ptr %65, align 2, !tbaa !13
  %66 = getelementptr inbounds i16, ptr %65, i64 8
  store <8 x i16> %64, ptr %66, align 2, !tbaa !13
  %67 = add nuw nsw i64 %47, 32
  br label %46

68:                                               ; preds = %1
  %69 = landingpad { ptr, i32 }
          cleanup
  br label %225

70:                                               ; preds = %6
  %71 = landingpad { ptr, i32 }
          cleanup
  br label %222

72:                                               ; preds = %10
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %218

74:                                               ; preds = %46, %136
  %75 = phi i64 [ %137, %136 ], [ 0, %46 ]
  %76 = getelementptr inbounds i16, ptr %5, i64 %75
  %77 = load i16, ptr %76, align 2, !tbaa !13
  %78 = getelementptr inbounds i16, ptr %7, i64 %75
  %79 = load i16, ptr %78, align 2, !tbaa !13
  %80 = icmp eq i16 %77, %79
  br i1 %80, label %108, label %81

81:                                               ; preds = %129, %122, %115, %108, %74
  %82 = phi i64 [ %75, %74 ], [ %109, %108 ], [ %116, %115 ], [ %123, %122 ], [ %130, %129 ]
  %83 = and i64 %82, 4294967295
  %84 = getelementptr inbounds i16, ptr %7, i64 %83
  %85 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %86 unwind label %106

86:                                               ; preds = %81
  %87 = getelementptr inbounds i8, ptr %4, i64 %83
  %88 = load i8, ptr %87, align 1, !tbaa !16
  %89 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %88)
          to label %90 unwind label %106

90:                                               ; preds = %86
  %91 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %89, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %92 unwind label %106

92:                                               ; preds = %90
  %93 = getelementptr inbounds i16, ptr %5, i64 %83
  %94 = load i16, ptr %93, align 2, !tbaa !13
  %95 = zext i16 %94 to i64
  %96 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %89, i64 noundef %95)
          to label %97 unwind label %106

97:                                               ; preds = %92
  %98 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %96, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %99 unwind label %106

99:                                               ; preds = %97
  %100 = load i16, ptr %84, align 2, !tbaa !13
  %101 = zext i16 %100 to i64
  %102 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %96, i64 noundef %101)
          to label %103 unwind label %106

103:                                              ; preds = %99
  %104 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %102, ptr noundef nonnull @.str.149)
          to label %105 unwind label %106

105:                                              ; preds = %103
  call void @exit(i32 noundef 1) #12
  unreachable

106:                                              ; preds = %103, %99, %97, %92, %90, %86, %81
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %218

108:                                              ; preds = %74
  %109 = add nuw nsw i64 %75, 1
  %110 = getelementptr inbounds i16, ptr %5, i64 %109
  %111 = load i16, ptr %110, align 2, !tbaa !13
  %112 = getelementptr inbounds i16, ptr %7, i64 %109
  %113 = load i16, ptr %112, align 2, !tbaa !13
  %114 = icmp eq i16 %111, %113
  br i1 %114, label %115, label %81

115:                                              ; preds = %108
  %116 = add nuw nsw i64 %75, 2
  %117 = getelementptr inbounds i16, ptr %5, i64 %116
  %118 = load i16, ptr %117, align 2, !tbaa !13
  %119 = getelementptr inbounds i16, ptr %7, i64 %116
  %120 = load i16, ptr %119, align 2, !tbaa !13
  %121 = icmp eq i16 %118, %120
  br i1 %121, label %122, label %81

122:                                              ; preds = %115
  %123 = add nuw nsw i64 %75, 3
  %124 = getelementptr inbounds i16, ptr %5, i64 %123
  %125 = load i16, ptr %124, align 2, !tbaa !13
  %126 = getelementptr inbounds i16, ptr %7, i64 %123
  %127 = load i16, ptr %126, align 2, !tbaa !13
  %128 = icmp eq i16 %125, %127
  br i1 %128, label %129, label %81

129:                                              ; preds = %122
  %130 = add nuw nsw i64 %75, 4
  %131 = getelementptr inbounds i16, ptr %5, i64 %130
  %132 = load i16, ptr %131, align 2, !tbaa !13
  %133 = getelementptr inbounds i16, ptr %7, i64 %130
  %134 = load i16, ptr %133, align 2, !tbaa !13
  %135 = icmp eq i16 %132, %134
  br i1 %135, label %136, label %81

136:                                              ; preds = %129
  %137 = add nuw nsw i64 %75, 5
  %138 = icmp eq i64 %137, 10000
  br i1 %138, label %139, label %74, !llvm.loop !231

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %141 = load i8, ptr %140, align 2, !tbaa !23, !range !40, !noundef !41
  %142 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %143 = load i64, ptr %142, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %144 unwind label %155

144:                                              ; preds = %139
  %145 = icmp ne i8 %141, 0
  %146 = icmp eq i64 %143, 0
  %147 = select i1 %145, i1 true, i1 %146
  br i1 %147, label %150, label %148, !prof !42

148:                                              ; preds = %144
  %149 = getelementptr i8, ptr %4, i64 10000
  br label %157

150:                                              ; preds = %215, %144
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %151 unwind label %155

151:                                              ; preds = %150
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %152 = load ptr, ptr %3, align 8, !tbaa !5
  %153 = icmp eq ptr %152, null
  br i1 %153, label %227, label %154

154:                                              ; preds = %151
  call void @_ZdaPv(ptr noundef nonnull %152) #13
  br label %227

155:                                              ; preds = %150, %139
  %156 = landingpad { ptr, i32 }
          cleanup
  br label %218

157:                                              ; preds = %148, %215
  %158 = phi i64 [ %216, %215 ], [ %143, %148 ]
  %159 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %3, i64 %159) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %160 = load ptr, ptr %3, align 8, !tbaa !5
  %161 = getelementptr i8, ptr %160, i64 20000
  %162 = icmp ult ptr %160, %149
  %163 = icmp ult ptr %4, %161
  %164 = and i1 %162, %163
  br i1 %164, label %187, label %165

165:                                              ; preds = %157, %177
  %166 = phi i64 [ %186, %177 ], [ 0, %157 ]
  %167 = getelementptr inbounds i8, ptr %4, i64 %166
  %168 = load <8 x i8>, ptr %167, align 1, !tbaa !16, !alias.scope !248
  %169 = getelementptr inbounds i8, ptr %167, i64 8
  %170 = load <8 x i8>, ptr %169, align 1, !tbaa !16, !alias.scope !248
  %171 = zext <8 x i8> %168 to <8 x i16>
  %172 = zext <8 x i8> %170 to <8 x i16>
  %173 = getelementptr inbounds i16, ptr %160, i64 %166
  store <8 x i16> %171, ptr %173, align 2, !tbaa !13, !alias.scope !251, !noalias !248
  %174 = getelementptr inbounds i16, ptr %173, i64 8
  store <8 x i16> %172, ptr %174, align 2, !tbaa !13, !alias.scope !251, !noalias !248
  %175 = or i64 %166, 16
  %176 = icmp eq i64 %175, 10000
  br i1 %176, label %215, label %177, !llvm.loop !253

177:                                              ; preds = %165
  %178 = getelementptr inbounds i8, ptr %4, i64 %175
  %179 = load <8 x i8>, ptr %178, align 1, !tbaa !16, !alias.scope !248
  %180 = getelementptr inbounds i8, ptr %178, i64 8
  %181 = load <8 x i8>, ptr %180, align 1, !tbaa !16, !alias.scope !248
  %182 = zext <8 x i8> %179 to <8 x i16>
  %183 = zext <8 x i8> %181 to <8 x i16>
  %184 = getelementptr inbounds i16, ptr %160, i64 %175
  store <8 x i16> %182, ptr %184, align 2, !tbaa !13, !alias.scope !251, !noalias !248
  %185 = getelementptr inbounds i16, ptr %184, i64 8
  store <8 x i16> %183, ptr %185, align 2, !tbaa !13, !alias.scope !251, !noalias !248
  %186 = add nuw nsw i64 %166, 32
  br label %165

187:                                              ; preds = %157, %187
  %188 = phi i64 [ %213, %187 ], [ 0, %157 ]
  %189 = getelementptr inbounds i8, ptr %4, i64 %188
  %190 = load i8, ptr %189, align 1, !tbaa !16
  %191 = zext i8 %190 to i16
  %192 = getelementptr inbounds i16, ptr %160, i64 %188
  store i16 %191, ptr %192, align 2, !tbaa !13
  %193 = add nuw nsw i64 %188, 1
  %194 = getelementptr inbounds i8, ptr %4, i64 %193
  %195 = load i8, ptr %194, align 1, !tbaa !16
  %196 = zext i8 %195 to i16
  %197 = getelementptr inbounds i16, ptr %160, i64 %193
  store i16 %196, ptr %197, align 2, !tbaa !13
  %198 = add nuw nsw i64 %188, 2
  %199 = getelementptr inbounds i8, ptr %4, i64 %198
  %200 = load i8, ptr %199, align 1, !tbaa !16
  %201 = zext i8 %200 to i16
  %202 = getelementptr inbounds i16, ptr %160, i64 %198
  store i16 %201, ptr %202, align 2, !tbaa !13
  %203 = add nuw nsw i64 %188, 3
  %204 = getelementptr inbounds i8, ptr %4, i64 %203
  %205 = load i8, ptr %204, align 1, !tbaa !16
  %206 = zext i8 %205 to i16
  %207 = getelementptr inbounds i16, ptr %160, i64 %203
  store i16 %206, ptr %207, align 2, !tbaa !13
  %208 = add nuw nsw i64 %188, 4
  %209 = getelementptr inbounds i8, ptr %4, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !16
  %211 = zext i8 %210 to i16
  %212 = getelementptr inbounds i16, ptr %160, i64 %208
  store i16 %211, ptr %212, align 2, !tbaa !13
  %213 = add nuw nsw i64 %188, 5
  %214 = icmp eq i64 %213, 10000
  br i1 %214, label %215, label %187, !llvm.loop !254

215:                                              ; preds = %165, %187
  %216 = add i64 %158, -1
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %150, label %157, !prof !42

218:                                              ; preds = %155, %106, %72
  %219 = phi { ptr, i32 } [ %107, %106 ], [ %156, %155 ], [ %73, %72 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %220 = load ptr, ptr %3, align 8, !tbaa !5
  %221 = icmp eq ptr %220, null
  br i1 %221, label %225, label %222

222:                                              ; preds = %218, %70
  %223 = phi { ptr, i32 } [ %71, %70 ], [ %219, %218 ]
  %224 = phi ptr [ %5, %70 ], [ %220, %218 ]
  call void @_ZdaPv(ptr noundef nonnull %224) #13
  br label %225

225:                                              ; preds = %222, %218, %68
  %226 = phi { ptr, i32 } [ %69, %68 ], [ %219, %218 ], [ %223, %222 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %226

227:                                              ; preds = %151, %154
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::uniform_int_distribution.43", align 1
  %4 = alloca %"class.std::unique_ptr", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %7 unwind label %41

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %3) #11
  store i8 0, ptr %3, align 1, !tbaa !67
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %3, i64 0, i32 1
  store i8 -1, ptr %8, align 1, !tbaa !69
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %3)
          to label %12 unwind label %45

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, ptr %5, i64 %10
  store i8 %11, ptr %13, align 1, !tbaa !16
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !70

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %17, align 2, !tbaa !12
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %21 unwind label %43

21:                                               ; preds = %18
  %22 = getelementptr inbounds i16, ptr %6, i64 %19
  store i16 %20, ptr %22, align 2, !tbaa !13
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !14

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %119

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %36, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr i8, ptr %5, i64 10000
  br label %47

36:                                               ; preds = %116, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %37 unwind label %119

37:                                               ; preds = %36
  %38 = load ptr, ptr %4, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %128, label %40

40:                                               ; preds = %37
  call void @_ZdaPv(ptr noundef nonnull %38) #13
  br label %128

41:                                               ; preds = %1
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %126

43:                                               ; preds = %18
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %123

45:                                               ; preds = %9
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %123

47:                                               ; preds = %34, %116
  %48 = phi i64 [ %117, %116 ], [ %29, %34 ]
  %49 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %4, i64 %49) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %50 = load ptr, ptr %4, align 8, !tbaa !5
  %51 = getelementptr i8, ptr %50, i64 20000
  %52 = icmp ult ptr %50, %35
  %53 = icmp ult ptr %5, %51
  %54 = and i1 %52, %53
  br i1 %54, label %83, label %55

55:                                               ; preds = %47, %55
  %56 = phi i64 [ %81, %55 ], [ 0, %47 ]
  %57 = getelementptr inbounds i8, ptr %5, i64 %56
  %58 = load <8 x i8>, ptr %57, align 1, !tbaa !16, !alias.scope !255
  %59 = getelementptr inbounds i8, ptr %57, i64 8
  %60 = load <8 x i8>, ptr %59, align 1, !tbaa !16, !alias.scope !255
  %61 = getelementptr inbounds i8, ptr %57, i64 16
  %62 = load <8 x i8>, ptr %61, align 1, !tbaa !16, !alias.scope !255
  %63 = getelementptr inbounds i8, ptr %57, i64 24
  %64 = load <8 x i8>, ptr %63, align 1, !tbaa !16, !alias.scope !255
  %65 = zext <8 x i8> %58 to <8 x i16>
  %66 = zext <8 x i8> %60 to <8 x i16>
  %67 = zext <8 x i8> %62 to <8 x i16>
  %68 = zext <8 x i8> %64 to <8 x i16>
  %69 = getelementptr inbounds i16, ptr %50, i64 %56
  %70 = load <8 x i16>, ptr %69, align 2, !tbaa !13, !alias.scope !258, !noalias !255
  %71 = getelementptr inbounds i16, ptr %69, i64 8
  %72 = load <8 x i16>, ptr %71, align 2, !tbaa !13, !alias.scope !258, !noalias !255
  %73 = getelementptr inbounds i16, ptr %69, i64 16
  %74 = load <8 x i16>, ptr %73, align 2, !tbaa !13, !alias.scope !258, !noalias !255
  %75 = getelementptr inbounds i16, ptr %69, i64 24
  %76 = load <8 x i16>, ptr %75, align 2, !tbaa !13, !alias.scope !258, !noalias !255
  %77 = add <8 x i16> %70, %65
  %78 = add <8 x i16> %72, %66
  %79 = add <8 x i16> %74, %67
  %80 = add <8 x i16> %76, %68
  store <8 x i16> %77, ptr %69, align 2, !tbaa !13, !alias.scope !258, !noalias !255
  store <8 x i16> %78, ptr %71, align 2, !tbaa !13, !alias.scope !258, !noalias !255
  store <8 x i16> %79, ptr %73, align 2, !tbaa !13, !alias.scope !258, !noalias !255
  store <8 x i16> %80, ptr %75, align 2, !tbaa !13, !alias.scope !258, !noalias !255
  %81 = add nuw i64 %56, 32
  %82 = icmp eq i64 %81, 9984
  br i1 %82, label %83, label %55, !llvm.loop !260

83:                                               ; preds = %55, %47
  %84 = phi i64 [ 0, %47 ], [ 9984, %55 ]
  br label %85

85:                                               ; preds = %85, %83
  %86 = phi i64 [ %84, %83 ], [ %114, %85 ]
  %87 = getelementptr inbounds i8, ptr %5, i64 %86
  %88 = load i8, ptr %87, align 1, !tbaa !16
  %89 = zext i8 %88 to i16
  %90 = getelementptr inbounds i16, ptr %50, i64 %86
  %91 = load i16, ptr %90, align 2, !tbaa !13
  %92 = add i16 %91, %89
  store i16 %92, ptr %90, align 2, !tbaa !13
  %93 = or i64 %86, 1
  %94 = getelementptr inbounds i8, ptr %5, i64 %93
  %95 = load i8, ptr %94, align 1, !tbaa !16
  %96 = zext i8 %95 to i16
  %97 = getelementptr inbounds i16, ptr %50, i64 %93
  %98 = load i16, ptr %97, align 2, !tbaa !13
  %99 = add i16 %98, %96
  store i16 %99, ptr %97, align 2, !tbaa !13
  %100 = or i64 %86, 2
  %101 = getelementptr inbounds i8, ptr %5, i64 %100
  %102 = load i8, ptr %101, align 1, !tbaa !16
  %103 = zext i8 %102 to i16
  %104 = getelementptr inbounds i16, ptr %50, i64 %100
  %105 = load i16, ptr %104, align 2, !tbaa !13
  %106 = add i16 %105, %103
  store i16 %106, ptr %104, align 2, !tbaa !13
  %107 = or i64 %86, 3
  %108 = getelementptr inbounds i8, ptr %5, i64 %107
  %109 = load i8, ptr %108, align 1, !tbaa !16
  %110 = zext i8 %109 to i16
  %111 = getelementptr inbounds i16, ptr %50, i64 %107
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = add i16 %112, %110
  store i16 %113, ptr %111, align 2, !tbaa !13
  %114 = add nuw nsw i64 %86, 4
  %115 = icmp eq i64 %114, 10000
  br i1 %115, label %116, label %85, !llvm.loop !261

116:                                              ; preds = %85
  %117 = add i64 %48, -1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %36, label %47, !prof !42

119:                                              ; preds = %25, %36
  %120 = landingpad { ptr, i32 }
          cleanup
  %121 = load ptr, ptr %4, align 8, !tbaa !5
  %122 = icmp eq ptr %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %45, %43, %119
  %124 = phi { ptr, i32 } [ %120, %119 ], [ %46, %45 ], [ %44, %43 ]
  %125 = phi ptr [ %121, %119 ], [ %6, %45 ], [ %6, %43 ]
  call void @_ZdaPv(ptr noundef nonnull %125) #13
  br label %126

126:                                              ; preds = %123, %119, %41
  %127 = phi { ptr, i32 } [ %42, %41 ], [ %120, %119 ], [ %124, %123 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %127

128:                                              ; preds = %37, %40
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::uniform_int_distribution.43", align 1
  %4 = alloca %"class.std::unique_ptr", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %7 unwind label %41

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %3) #11
  store i8 0, ptr %3, align 1, !tbaa !67
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %3, i64 0, i32 1
  store i8 -1, ptr %8, align 1, !tbaa !69
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %3)
          to label %12 unwind label %45

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, ptr %5, i64 %10
  store i8 %11, ptr %13, align 1, !tbaa !16
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !70

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %17, align 2, !tbaa !12
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %21 unwind label %43

21:                                               ; preds = %18
  %22 = getelementptr inbounds i16, ptr %6, i64 %19
  store i16 %20, ptr %22, align 2, !tbaa !13
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !14

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %119

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %36, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr i8, ptr %5, i64 10000
  br label %47

36:                                               ; preds = %116, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %37 unwind label %119

37:                                               ; preds = %36
  %38 = load ptr, ptr %4, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %128, label %40

40:                                               ; preds = %37
  call void @_ZdaPv(ptr noundef nonnull %38) #13
  br label %128

41:                                               ; preds = %1
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %126

43:                                               ; preds = %18
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %123

45:                                               ; preds = %9
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %123

47:                                               ; preds = %34, %116
  %48 = phi i64 [ %117, %116 ], [ %29, %34 ]
  %49 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %4, i64 %49) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %50 = load ptr, ptr %4, align 8, !tbaa !5
  %51 = getelementptr i8, ptr %50, i64 20000
  %52 = icmp ult ptr %50, %35
  %53 = icmp ult ptr %5, %51
  %54 = and i1 %52, %53
  br i1 %54, label %83, label %55

55:                                               ; preds = %47, %55
  %56 = phi i64 [ %81, %55 ], [ 0, %47 ]
  %57 = getelementptr inbounds i8, ptr %5, i64 %56
  %58 = load <16 x i8>, ptr %57, align 1, !tbaa !16, !alias.scope !262
  %59 = getelementptr inbounds i8, ptr %57, i64 16
  %60 = load <16 x i8>, ptr %59, align 1, !tbaa !16, !alias.scope !262
  %61 = getelementptr inbounds i8, ptr %57, i64 32
  %62 = load <16 x i8>, ptr %61, align 1, !tbaa !16, !alias.scope !262
  %63 = getelementptr inbounds i8, ptr %57, i64 48
  %64 = load <16 x i8>, ptr %63, align 1, !tbaa !16, !alias.scope !262
  %65 = zext <16 x i8> %58 to <16 x i16>
  %66 = zext <16 x i8> %60 to <16 x i16>
  %67 = zext <16 x i8> %62 to <16 x i16>
  %68 = zext <16 x i8> %64 to <16 x i16>
  %69 = getelementptr inbounds i16, ptr %50, i64 %56
  %70 = load <16 x i16>, ptr %69, align 2, !tbaa !13, !alias.scope !265, !noalias !262
  %71 = getelementptr inbounds i16, ptr %69, i64 16
  %72 = load <16 x i16>, ptr %71, align 2, !tbaa !13, !alias.scope !265, !noalias !262
  %73 = getelementptr inbounds i16, ptr %69, i64 32
  %74 = load <16 x i16>, ptr %73, align 2, !tbaa !13, !alias.scope !265, !noalias !262
  %75 = getelementptr inbounds i16, ptr %69, i64 48
  %76 = load <16 x i16>, ptr %75, align 2, !tbaa !13, !alias.scope !265, !noalias !262
  %77 = add <16 x i16> %70, %65
  %78 = add <16 x i16> %72, %66
  %79 = add <16 x i16> %74, %67
  %80 = add <16 x i16> %76, %68
  store <16 x i16> %77, ptr %69, align 2, !tbaa !13, !alias.scope !265, !noalias !262
  store <16 x i16> %78, ptr %71, align 2, !tbaa !13, !alias.scope !265, !noalias !262
  store <16 x i16> %79, ptr %73, align 2, !tbaa !13, !alias.scope !265, !noalias !262
  store <16 x i16> %80, ptr %75, align 2, !tbaa !13, !alias.scope !265, !noalias !262
  %81 = add nuw i64 %56, 64
  %82 = icmp eq i64 %81, 9984
  br i1 %82, label %83, label %55, !llvm.loop !267

83:                                               ; preds = %55, %47
  %84 = phi i64 [ 0, %47 ], [ 9984, %55 ]
  br label %85

85:                                               ; preds = %85, %83
  %86 = phi i64 [ %84, %83 ], [ %114, %85 ]
  %87 = getelementptr inbounds i8, ptr %5, i64 %86
  %88 = load i8, ptr %87, align 1, !tbaa !16
  %89 = zext i8 %88 to i16
  %90 = getelementptr inbounds i16, ptr %50, i64 %86
  %91 = load i16, ptr %90, align 2, !tbaa !13
  %92 = add i16 %91, %89
  store i16 %92, ptr %90, align 2, !tbaa !13
  %93 = or i64 %86, 1
  %94 = getelementptr inbounds i8, ptr %5, i64 %93
  %95 = load i8, ptr %94, align 1, !tbaa !16
  %96 = zext i8 %95 to i16
  %97 = getelementptr inbounds i16, ptr %50, i64 %93
  %98 = load i16, ptr %97, align 2, !tbaa !13
  %99 = add i16 %98, %96
  store i16 %99, ptr %97, align 2, !tbaa !13
  %100 = or i64 %86, 2
  %101 = getelementptr inbounds i8, ptr %5, i64 %100
  %102 = load i8, ptr %101, align 1, !tbaa !16
  %103 = zext i8 %102 to i16
  %104 = getelementptr inbounds i16, ptr %50, i64 %100
  %105 = load i16, ptr %104, align 2, !tbaa !13
  %106 = add i16 %105, %103
  store i16 %106, ptr %104, align 2, !tbaa !13
  %107 = or i64 %86, 3
  %108 = getelementptr inbounds i8, ptr %5, i64 %107
  %109 = load i8, ptr %108, align 1, !tbaa !16
  %110 = zext i8 %109 to i16
  %111 = getelementptr inbounds i16, ptr %50, i64 %107
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = add i16 %112, %110
  store i16 %113, ptr %111, align 2, !tbaa !13
  %114 = add nuw nsw i64 %86, 4
  %115 = icmp eq i64 %114, 10000
  br i1 %115, label %116, label %85, !llvm.loop !268

116:                                              ; preds = %85
  %117 = add i64 %48, -1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %36, label %47, !prof !42

119:                                              ; preds = %25, %36
  %120 = landingpad { ptr, i32 }
          cleanup
  %121 = load ptr, ptr %4, align 8, !tbaa !5
  %122 = icmp eq ptr %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %45, %43, %119
  %124 = phi { ptr, i32 } [ %120, %119 ], [ %46, %45 ], [ %44, %43 ]
  %125 = phi ptr [ %121, %119 ], [ %6, %45 ], [ %6, %43 ]
  call void @_ZdaPv(ptr noundef nonnull %125) #13
  br label %126

126:                                              ; preds = %123, %119, %41
  %127 = phi { ptr, i32 } [ %42, %41 ], [ %120, %119 ], [ %124, %123 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %127

128:                                              ; preds = %37, %40
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::uniform_int_distribution.43", align 1
  %4 = alloca %"class.std::unique_ptr", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %7 unwind label %41

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %3) #11
  store i8 0, ptr %3, align 1, !tbaa !67
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %3, i64 0, i32 1
  store i8 -1, ptr %8, align 1, !tbaa !69
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %3)
          to label %12 unwind label %45

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, ptr %5, i64 %10
  store i8 %11, ptr %13, align 1, !tbaa !16
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !70

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %17, align 2, !tbaa !12
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %21 unwind label %43

21:                                               ; preds = %18
  %22 = getelementptr inbounds i16, ptr %6, i64 %19
  store i16 %20, ptr %22, align 2, !tbaa !13
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !14

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %119

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %36, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr i8, ptr %5, i64 10000
  br label %47

36:                                               ; preds = %116, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %37 unwind label %119

37:                                               ; preds = %36
  %38 = load ptr, ptr %4, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %128, label %40

40:                                               ; preds = %37
  call void @_ZdaPv(ptr noundef nonnull %38) #13
  br label %128

41:                                               ; preds = %1
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %126

43:                                               ; preds = %18
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %123

45:                                               ; preds = %9
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %123

47:                                               ; preds = %34, %116
  %48 = phi i64 [ %117, %116 ], [ %29, %34 ]
  %49 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %4, i64 %49) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %50 = load ptr, ptr %4, align 8, !tbaa !5
  %51 = getelementptr i8, ptr %50, i64 20000
  %52 = icmp ult ptr %50, %35
  %53 = icmp ult ptr %5, %51
  %54 = and i1 %52, %53
  br i1 %54, label %85, label %55

55:                                               ; preds = %47, %71
  %56 = phi i64 [ %84, %71 ], [ 0, %47 ]
  %57 = getelementptr inbounds i8, ptr %5, i64 %56
  %58 = load <8 x i8>, ptr %57, align 1, !tbaa !16, !alias.scope !269
  %59 = getelementptr inbounds i8, ptr %57, i64 8
  %60 = load <8 x i8>, ptr %59, align 1, !tbaa !16, !alias.scope !269
  %61 = zext <8 x i8> %58 to <8 x i16>
  %62 = zext <8 x i8> %60 to <8 x i16>
  %63 = getelementptr inbounds i16, ptr %50, i64 %56
  %64 = load <8 x i16>, ptr %63, align 2, !tbaa !13, !alias.scope !272, !noalias !269
  %65 = getelementptr inbounds i16, ptr %63, i64 8
  %66 = load <8 x i16>, ptr %65, align 2, !tbaa !13, !alias.scope !272, !noalias !269
  %67 = add <8 x i16> %64, %61
  %68 = add <8 x i16> %66, %62
  store <8 x i16> %67, ptr %63, align 2, !tbaa !13, !alias.scope !272, !noalias !269
  store <8 x i16> %68, ptr %65, align 2, !tbaa !13, !alias.scope !272, !noalias !269
  %69 = or i64 %56, 16
  %70 = icmp eq i64 %69, 10000
  br i1 %70, label %116, label %71, !llvm.loop !274

71:                                               ; preds = %55
  %72 = getelementptr inbounds i8, ptr %5, i64 %69
  %73 = load <8 x i8>, ptr %72, align 1, !tbaa !16, !alias.scope !269
  %74 = getelementptr inbounds i8, ptr %72, i64 8
  %75 = load <8 x i8>, ptr %74, align 1, !tbaa !16, !alias.scope !269
  %76 = zext <8 x i8> %73 to <8 x i16>
  %77 = zext <8 x i8> %75 to <8 x i16>
  %78 = getelementptr inbounds i16, ptr %50, i64 %69
  %79 = load <8 x i16>, ptr %78, align 2, !tbaa !13, !alias.scope !272, !noalias !269
  %80 = getelementptr inbounds i16, ptr %78, i64 8
  %81 = load <8 x i16>, ptr %80, align 2, !tbaa !13, !alias.scope !272, !noalias !269
  %82 = add <8 x i16> %79, %76
  %83 = add <8 x i16> %81, %77
  store <8 x i16> %82, ptr %78, align 2, !tbaa !13, !alias.scope !272, !noalias !269
  store <8 x i16> %83, ptr %80, align 2, !tbaa !13, !alias.scope !272, !noalias !269
  %84 = add nuw nsw i64 %56, 32
  br label %55

85:                                               ; preds = %47, %85
  %86 = phi i64 [ %114, %85 ], [ 0, %47 ]
  %87 = getelementptr inbounds i8, ptr %5, i64 %86
  %88 = load i8, ptr %87, align 1, !tbaa !16
  %89 = zext i8 %88 to i16
  %90 = getelementptr inbounds i16, ptr %50, i64 %86
  %91 = load i16, ptr %90, align 2, !tbaa !13
  %92 = add i16 %91, %89
  store i16 %92, ptr %90, align 2, !tbaa !13
  %93 = or i64 %86, 1
  %94 = getelementptr inbounds i8, ptr %5, i64 %93
  %95 = load i8, ptr %94, align 1, !tbaa !16
  %96 = zext i8 %95 to i16
  %97 = getelementptr inbounds i16, ptr %50, i64 %93
  %98 = load i16, ptr %97, align 2, !tbaa !13
  %99 = add i16 %98, %96
  store i16 %99, ptr %97, align 2, !tbaa !13
  %100 = or i64 %86, 2
  %101 = getelementptr inbounds i8, ptr %5, i64 %100
  %102 = load i8, ptr %101, align 1, !tbaa !16
  %103 = zext i8 %102 to i16
  %104 = getelementptr inbounds i16, ptr %50, i64 %100
  %105 = load i16, ptr %104, align 2, !tbaa !13
  %106 = add i16 %105, %103
  store i16 %106, ptr %104, align 2, !tbaa !13
  %107 = or i64 %86, 3
  %108 = getelementptr inbounds i8, ptr %5, i64 %107
  %109 = load i8, ptr %108, align 1, !tbaa !16
  %110 = zext i8 %109 to i16
  %111 = getelementptr inbounds i16, ptr %50, i64 %107
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = add i16 %112, %110
  store i16 %113, ptr %111, align 2, !tbaa !13
  %114 = add nuw nsw i64 %86, 4
  %115 = icmp eq i64 %114, 10000
  br i1 %115, label %116, label %85, !llvm.loop !275

116:                                              ; preds = %55, %85
  %117 = add i64 %48, -1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %36, label %47, !prof !42

119:                                              ; preds = %25, %36
  %120 = landingpad { ptr, i32 }
          cleanup
  %121 = load ptr, ptr %4, align 8, !tbaa !5
  %122 = icmp eq ptr %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %45, %43, %119
  %124 = phi { ptr, i32 } [ %120, %119 ], [ %46, %45 ], [ %44, %43 ]
  %125 = phi ptr [ %121, %119 ], [ %6, %45 ], [ %6, %43 ]
  call void @_ZdaPv(ptr noundef nonnull %125) #13
  br label %126

126:                                              ; preds = %123, %119, %41
  %127 = phi { ptr, i32 } [ %42, %41 ], [ %120, %119 ], [ %124, %123 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %127

128:                                              ; preds = %37, %40
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::unique_ptr.44", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %9, align 1, !tbaa !69
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, ptr %4, i64 %11
  store i8 %12, ptr %14, align 1, !tbaa !16
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !70

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i8, ptr %4, i64 %19
  %21 = load i8, ptr %20, align 1, !tbaa !16
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds i32, ptr %7, i64 %19
  store i32 %22, ptr %23, align 4, !tbaa !95
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i8, ptr %4, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !16
  %27 = zext i8 %26 to i32
  %28 = getelementptr inbounds i32, ptr %7, i64 %24
  store i32 %27, ptr %28, align 4, !tbaa !95
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i8, ptr %4, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !16
  %32 = zext i8 %31 to i32
  %33 = getelementptr inbounds i32, ptr %7, i64 %29
  store i32 %32, ptr %33, align 4, !tbaa !95
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i8, ptr %4, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !16
  %37 = zext i8 %36 to i32
  %38 = getelementptr inbounds i32, ptr %7, i64 %34
  store i32 %37, ptr %38, align 4, !tbaa !95
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i8, ptr %4, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !16
  %42 = zext i8 %41 to i32
  %43 = getelementptr inbounds i32, ptr %7, i64 %39
  store i32 %42, ptr %43, align 4, !tbaa !95
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !276

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i8, ptr %4, i64 %47
  %49 = load <8 x i8>, ptr %48, align 1, !tbaa !16
  %50 = getelementptr inbounds i8, ptr %48, i64 8
  %51 = load <8 x i8>, ptr %50, align 1, !tbaa !16
  %52 = getelementptr inbounds i8, ptr %48, i64 16
  %53 = load <8 x i8>, ptr %52, align 1, !tbaa !16
  %54 = getelementptr inbounds i8, ptr %48, i64 24
  %55 = load <8 x i8>, ptr %54, align 1, !tbaa !16
  %56 = zext <8 x i8> %49 to <8 x i32>
  %57 = zext <8 x i8> %51 to <8 x i32>
  %58 = zext <8 x i8> %53 to <8 x i32>
  %59 = zext <8 x i8> %55 to <8 x i32>
  %60 = getelementptr inbounds i32, ptr %5, i64 %47
  store <8 x i32> %56, ptr %60, align 4, !tbaa !95
  %61 = getelementptr inbounds i32, ptr %60, i64 8
  store <8 x i32> %57, ptr %61, align 4, !tbaa !95
  %62 = getelementptr inbounds i32, ptr %60, i64 16
  store <8 x i32> %58, ptr %62, align 4, !tbaa !95
  %63 = getelementptr inbounds i32, ptr %60, i64 24
  store <8 x i32> %59, ptr %63, align 4, !tbaa !95
  %64 = add nuw i64 %47, 32
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !277

66:                                               ; preds = %46
  %67 = getelementptr inbounds i8, ptr %4, i64 9984
  %68 = load i8, ptr %67, align 1, !tbaa !16
  %69 = zext i8 %68 to i32
  %70 = getelementptr inbounds i32, ptr %5, i64 9984
  store i32 %69, ptr %70, align 4, !tbaa !95
  %71 = getelementptr inbounds i8, ptr %4, i64 9985
  %72 = load i8, ptr %71, align 1, !tbaa !16
  %73 = zext i8 %72 to i32
  %74 = getelementptr inbounds i32, ptr %5, i64 9985
  store i32 %73, ptr %74, align 4, !tbaa !95
  %75 = getelementptr inbounds i8, ptr %4, i64 9986
  %76 = load i8, ptr %75, align 1, !tbaa !16
  %77 = zext i8 %76 to i32
  %78 = getelementptr inbounds i32, ptr %5, i64 9986
  store i32 %77, ptr %78, align 4, !tbaa !95
  %79 = getelementptr inbounds i8, ptr %4, i64 9987
  %80 = load i8, ptr %79, align 1, !tbaa !16
  %81 = zext i8 %80 to i32
  %82 = getelementptr inbounds i32, ptr %5, i64 9987
  store i32 %81, ptr %82, align 4, !tbaa !95
  %83 = getelementptr inbounds i8, ptr %4, i64 9988
  %84 = load i8, ptr %83, align 1, !tbaa !16
  %85 = zext i8 %84 to i32
  %86 = getelementptr inbounds i32, ptr %5, i64 9988
  store i32 %85, ptr %86, align 4, !tbaa !95
  %87 = getelementptr inbounds i8, ptr %4, i64 9989
  %88 = load i8, ptr %87, align 1, !tbaa !16
  %89 = zext i8 %88 to i32
  %90 = getelementptr inbounds i32, ptr %5, i64 9989
  store i32 %89, ptr %90, align 4, !tbaa !95
  %91 = getelementptr inbounds i8, ptr %4, i64 9990
  %92 = load i8, ptr %91, align 1, !tbaa !16
  %93 = zext i8 %92 to i32
  %94 = getelementptr inbounds i32, ptr %5, i64 9990
  store i32 %93, ptr %94, align 4, !tbaa !95
  %95 = getelementptr inbounds i8, ptr %4, i64 9991
  %96 = load i8, ptr %95, align 1, !tbaa !16
  %97 = zext i8 %96 to i32
  %98 = getelementptr inbounds i32, ptr %5, i64 9991
  store i32 %97, ptr %98, align 4, !tbaa !95
  %99 = getelementptr inbounds i8, ptr %4, i64 9992
  %100 = load i8, ptr %99, align 1, !tbaa !16
  %101 = zext i8 %100 to i32
  %102 = getelementptr inbounds i32, ptr %5, i64 9992
  store i32 %101, ptr %102, align 4, !tbaa !95
  %103 = getelementptr inbounds i8, ptr %4, i64 9993
  %104 = load i8, ptr %103, align 1, !tbaa !16
  %105 = zext i8 %104 to i32
  %106 = getelementptr inbounds i32, ptr %5, i64 9993
  store i32 %105, ptr %106, align 4, !tbaa !95
  %107 = getelementptr inbounds i8, ptr %4, i64 9994
  %108 = load i8, ptr %107, align 1, !tbaa !16
  %109 = zext i8 %108 to i32
  %110 = getelementptr inbounds i32, ptr %5, i64 9994
  store i32 %109, ptr %110, align 4, !tbaa !95
  %111 = getelementptr inbounds i8, ptr %4, i64 9995
  %112 = load i8, ptr %111, align 1, !tbaa !16
  %113 = zext i8 %112 to i32
  %114 = getelementptr inbounds i32, ptr %5, i64 9995
  store i32 %113, ptr %114, align 4, !tbaa !95
  %115 = getelementptr inbounds i8, ptr %4, i64 9996
  %116 = load i8, ptr %115, align 1, !tbaa !16
  %117 = zext i8 %116 to i32
  %118 = getelementptr inbounds i32, ptr %5, i64 9996
  store i32 %117, ptr %118, align 4, !tbaa !95
  %119 = getelementptr inbounds i8, ptr %4, i64 9997
  %120 = load i8, ptr %119, align 1, !tbaa !16
  %121 = zext i8 %120 to i32
  %122 = getelementptr inbounds i32, ptr %5, i64 9997
  store i32 %121, ptr %122, align 4, !tbaa !95
  %123 = getelementptr inbounds i8, ptr %4, i64 9998
  %124 = load i8, ptr %123, align 1, !tbaa !16
  %125 = zext i8 %124 to i32
  %126 = getelementptr inbounds i32, ptr %5, i64 9998
  store i32 %125, ptr %126, align 4, !tbaa !95
  %127 = getelementptr inbounds i8, ptr %4, i64 9999
  %128 = load i8, ptr %127, align 1, !tbaa !16
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds i32, ptr %5, i64 9999
  store i32 %129, ptr %130, align 4, !tbaa !95
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %283

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %280

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %276

137:                                              ; preds = %199, %66
  %138 = phi i64 [ 0, %66 ], [ %200, %199 ]
  %139 = getelementptr inbounds i32, ptr %5, i64 %138
  %140 = load i32, ptr %139, align 4, !tbaa !95
  %141 = getelementptr inbounds i32, ptr %7, i64 %138
  %142 = load i32, ptr %141, align 4, !tbaa !95
  %143 = icmp eq i32 %140, %142
  br i1 %143, label %171, label %144

144:                                              ; preds = %192, %185, %178, %171, %137
  %145 = phi i64 [ %138, %137 ], [ %172, %171 ], [ %179, %178 ], [ %186, %185 ], [ %193, %192 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i32, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %169

149:                                              ; preds = %144
  %150 = getelementptr inbounds i8, ptr %4, i64 %146
  %151 = load i8, ptr %150, align 1, !tbaa !16
  %152 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %151)
          to label %153 unwind label %169

153:                                              ; preds = %149
  %154 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %152, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %155 unwind label %169

155:                                              ; preds = %153
  %156 = getelementptr inbounds i32, ptr %5, i64 %146
  %157 = load i32, ptr %156, align 4, !tbaa !95
  %158 = zext i32 %157 to i64
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %152, i64 noundef %158)
          to label %160 unwind label %169

160:                                              ; preds = %155
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %162 unwind label %169

162:                                              ; preds = %160
  %163 = load i32, ptr %147, align 4, !tbaa !95
  %164 = zext i32 %163 to i64
  %165 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %159, i64 noundef %164)
          to label %166 unwind label %169

166:                                              ; preds = %162
  %167 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %165, ptr noundef nonnull @.str.149)
          to label %168 unwind label %169

168:                                              ; preds = %166
  call void @exit(i32 noundef 1) #12
  unreachable

169:                                              ; preds = %166, %162, %160, %155, %153, %149, %144
  %170 = landingpad { ptr, i32 }
          cleanup
  br label %276

171:                                              ; preds = %137
  %172 = add nuw nsw i64 %138, 1
  %173 = getelementptr inbounds i32, ptr %5, i64 %172
  %174 = load i32, ptr %173, align 4, !tbaa !95
  %175 = getelementptr inbounds i32, ptr %7, i64 %172
  %176 = load i32, ptr %175, align 4, !tbaa !95
  %177 = icmp eq i32 %174, %176
  br i1 %177, label %178, label %144

178:                                              ; preds = %171
  %179 = add nuw nsw i64 %138, 2
  %180 = getelementptr inbounds i32, ptr %5, i64 %179
  %181 = load i32, ptr %180, align 4, !tbaa !95
  %182 = getelementptr inbounds i32, ptr %7, i64 %179
  %183 = load i32, ptr %182, align 4, !tbaa !95
  %184 = icmp eq i32 %181, %183
  br i1 %184, label %185, label %144

185:                                              ; preds = %178
  %186 = add nuw nsw i64 %138, 3
  %187 = getelementptr inbounds i32, ptr %5, i64 %186
  %188 = load i32, ptr %187, align 4, !tbaa !95
  %189 = getelementptr inbounds i32, ptr %7, i64 %186
  %190 = load i32, ptr %189, align 4, !tbaa !95
  %191 = icmp eq i32 %188, %190
  br i1 %191, label %192, label %144

192:                                              ; preds = %185
  %193 = add nuw nsw i64 %138, 4
  %194 = getelementptr inbounds i32, ptr %5, i64 %193
  %195 = load i32, ptr %194, align 4, !tbaa !95
  %196 = getelementptr inbounds i32, ptr %7, i64 %193
  %197 = load i32, ptr %196, align 4, !tbaa !95
  %198 = icmp eq i32 %195, %197
  br i1 %198, label %199, label %144

199:                                              ; preds = %192
  %200 = add nuw nsw i64 %138, 5
  %201 = icmp eq i64 %200, 10000
  br i1 %201, label %202, label %137, !llvm.loop !278

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %204 = load i8, ptr %203, align 2, !tbaa !23, !range !40, !noundef !41
  %205 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %206 = load i64, ptr %205, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %207 unwind label %218

207:                                              ; preds = %202
  %208 = icmp ne i8 %204, 0
  %209 = icmp eq i64 %206, 0
  %210 = select i1 %208, i1 true, i1 %209
  br i1 %210, label %213, label %211, !prof !42

211:                                              ; preds = %207
  %212 = getelementptr i8, ptr %4, i64 10000
  br label %220

213:                                              ; preds = %273, %207
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %214 unwind label %218

214:                                              ; preds = %213
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %215 = load ptr, ptr %3, align 8, !tbaa !5
  %216 = icmp eq ptr %215, null
  br i1 %216, label %285, label %217

217:                                              ; preds = %214
  call void @_ZdaPv(ptr noundef nonnull %215) #13
  br label %285

218:                                              ; preds = %213, %202
  %219 = landingpad { ptr, i32 }
          cleanup
  br label %276

220:                                              ; preds = %211, %273
  %221 = phi i64 [ %274, %273 ], [ %206, %211 ]
  %222 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %3, i64 %222) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %223 = load ptr, ptr %3, align 8, !tbaa !5
  %224 = getelementptr i8, ptr %223, i64 40000
  %225 = icmp ult ptr %223, %212
  %226 = icmp ult ptr %4, %224
  %227 = and i1 %225, %226
  br i1 %227, label %248, label %228

228:                                              ; preds = %220, %228
  %229 = phi i64 [ %246, %228 ], [ 0, %220 ]
  %230 = getelementptr inbounds i8, ptr %4, i64 %229
  %231 = load <8 x i8>, ptr %230, align 1, !tbaa !16, !alias.scope !279
  %232 = getelementptr inbounds i8, ptr %230, i64 8
  %233 = load <8 x i8>, ptr %232, align 1, !tbaa !16, !alias.scope !279
  %234 = getelementptr inbounds i8, ptr %230, i64 16
  %235 = load <8 x i8>, ptr %234, align 1, !tbaa !16, !alias.scope !279
  %236 = getelementptr inbounds i8, ptr %230, i64 24
  %237 = load <8 x i8>, ptr %236, align 1, !tbaa !16, !alias.scope !279
  %238 = zext <8 x i8> %231 to <8 x i32>
  %239 = zext <8 x i8> %233 to <8 x i32>
  %240 = zext <8 x i8> %235 to <8 x i32>
  %241 = zext <8 x i8> %237 to <8 x i32>
  %242 = getelementptr inbounds i32, ptr %223, i64 %229
  store <8 x i32> %238, ptr %242, align 4, !tbaa !95, !alias.scope !282, !noalias !279
  %243 = getelementptr inbounds i32, ptr %242, i64 8
  store <8 x i32> %239, ptr %243, align 4, !tbaa !95, !alias.scope !282, !noalias !279
  %244 = getelementptr inbounds i32, ptr %242, i64 16
  store <8 x i32> %240, ptr %244, align 4, !tbaa !95, !alias.scope !282, !noalias !279
  %245 = getelementptr inbounds i32, ptr %242, i64 24
  store <8 x i32> %241, ptr %245, align 4, !tbaa !95, !alias.scope !282, !noalias !279
  %246 = add nuw i64 %229, 32
  %247 = icmp eq i64 %246, 9984
  br i1 %247, label %248, label %228, !llvm.loop !284

248:                                              ; preds = %228, %220
  %249 = phi i64 [ 0, %220 ], [ 9984, %228 ]
  br label %250

250:                                              ; preds = %250, %248
  %251 = phi i64 [ %249, %248 ], [ %271, %250 ]
  %252 = getelementptr inbounds i8, ptr %4, i64 %251
  %253 = load i8, ptr %252, align 1, !tbaa !16
  %254 = zext i8 %253 to i32
  %255 = getelementptr inbounds i32, ptr %223, i64 %251
  store i32 %254, ptr %255, align 4, !tbaa !95
  %256 = or i64 %251, 1
  %257 = getelementptr inbounds i8, ptr %4, i64 %256
  %258 = load i8, ptr %257, align 1, !tbaa !16
  %259 = zext i8 %258 to i32
  %260 = getelementptr inbounds i32, ptr %223, i64 %256
  store i32 %259, ptr %260, align 4, !tbaa !95
  %261 = or i64 %251, 2
  %262 = getelementptr inbounds i8, ptr %4, i64 %261
  %263 = load i8, ptr %262, align 1, !tbaa !16
  %264 = zext i8 %263 to i32
  %265 = getelementptr inbounds i32, ptr %223, i64 %261
  store i32 %264, ptr %265, align 4, !tbaa !95
  %266 = or i64 %251, 3
  %267 = getelementptr inbounds i8, ptr %4, i64 %266
  %268 = load i8, ptr %267, align 1, !tbaa !16
  %269 = zext i8 %268 to i32
  %270 = getelementptr inbounds i32, ptr %223, i64 %266
  store i32 %269, ptr %270, align 4, !tbaa !95
  %271 = add nuw nsw i64 %251, 4
  %272 = icmp eq i64 %271, 10000
  br i1 %272, label %273, label %250, !llvm.loop !285

273:                                              ; preds = %250
  %274 = add i64 %221, -1
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %213, label %220, !prof !42

276:                                              ; preds = %218, %169, %135
  %277 = phi { ptr, i32 } [ %170, %169 ], [ %219, %218 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %278 = load ptr, ptr %3, align 8, !tbaa !5
  %279 = icmp eq ptr %278, null
  br i1 %279, label %283, label %280

280:                                              ; preds = %276, %133
  %281 = phi { ptr, i32 } [ %134, %133 ], [ %277, %276 ]
  %282 = phi ptr [ %5, %133 ], [ %278, %276 ]
  call void @_ZdaPv(ptr noundef nonnull %282) #13
  br label %283

283:                                              ; preds = %280, %276, %131
  %284 = phi { ptr, i32 } [ %132, %131 ], [ %277, %276 ], [ %281, %280 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %284

285:                                              ; preds = %214, %217
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::unique_ptr.44", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %9, align 1, !tbaa !69
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, ptr %4, i64 %11
  store i8 %12, ptr %14, align 1, !tbaa !16
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !70

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i8, ptr %4, i64 %19
  %21 = load i8, ptr %20, align 1, !tbaa !16
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds i32, ptr %7, i64 %19
  store i32 %22, ptr %23, align 4, !tbaa !95
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i8, ptr %4, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !16
  %27 = zext i8 %26 to i32
  %28 = getelementptr inbounds i32, ptr %7, i64 %24
  store i32 %27, ptr %28, align 4, !tbaa !95
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i8, ptr %4, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !16
  %32 = zext i8 %31 to i32
  %33 = getelementptr inbounds i32, ptr %7, i64 %29
  store i32 %32, ptr %33, align 4, !tbaa !95
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i8, ptr %4, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !16
  %37 = zext i8 %36 to i32
  %38 = getelementptr inbounds i32, ptr %7, i64 %34
  store i32 %37, ptr %38, align 4, !tbaa !95
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i8, ptr %4, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !16
  %42 = zext i8 %41 to i32
  %43 = getelementptr inbounds i32, ptr %7, i64 %39
  store i32 %42, ptr %43, align 4, !tbaa !95
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !276

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i8, ptr %4, i64 %47
  %49 = load <16 x i8>, ptr %48, align 1, !tbaa !16
  %50 = getelementptr inbounds i8, ptr %48, i64 16
  %51 = load <16 x i8>, ptr %50, align 1, !tbaa !16
  %52 = getelementptr inbounds i8, ptr %48, i64 32
  %53 = load <16 x i8>, ptr %52, align 1, !tbaa !16
  %54 = getelementptr inbounds i8, ptr %48, i64 48
  %55 = load <16 x i8>, ptr %54, align 1, !tbaa !16
  %56 = zext <16 x i8> %49 to <16 x i32>
  %57 = zext <16 x i8> %51 to <16 x i32>
  %58 = zext <16 x i8> %53 to <16 x i32>
  %59 = zext <16 x i8> %55 to <16 x i32>
  %60 = getelementptr inbounds i32, ptr %5, i64 %47
  store <16 x i32> %56, ptr %60, align 4, !tbaa !95
  %61 = getelementptr inbounds i32, ptr %60, i64 16
  store <16 x i32> %57, ptr %61, align 4, !tbaa !95
  %62 = getelementptr inbounds i32, ptr %60, i64 32
  store <16 x i32> %58, ptr %62, align 4, !tbaa !95
  %63 = getelementptr inbounds i32, ptr %60, i64 48
  store <16 x i32> %59, ptr %63, align 4, !tbaa !95
  %64 = add nuw i64 %47, 64
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !286

66:                                               ; preds = %46
  %67 = getelementptr inbounds i8, ptr %4, i64 9984
  %68 = load i8, ptr %67, align 1, !tbaa !16
  %69 = zext i8 %68 to i32
  %70 = getelementptr inbounds i32, ptr %5, i64 9984
  store i32 %69, ptr %70, align 4, !tbaa !95
  %71 = getelementptr inbounds i8, ptr %4, i64 9985
  %72 = load i8, ptr %71, align 1, !tbaa !16
  %73 = zext i8 %72 to i32
  %74 = getelementptr inbounds i32, ptr %5, i64 9985
  store i32 %73, ptr %74, align 4, !tbaa !95
  %75 = getelementptr inbounds i8, ptr %4, i64 9986
  %76 = load i8, ptr %75, align 1, !tbaa !16
  %77 = zext i8 %76 to i32
  %78 = getelementptr inbounds i32, ptr %5, i64 9986
  store i32 %77, ptr %78, align 4, !tbaa !95
  %79 = getelementptr inbounds i8, ptr %4, i64 9987
  %80 = load i8, ptr %79, align 1, !tbaa !16
  %81 = zext i8 %80 to i32
  %82 = getelementptr inbounds i32, ptr %5, i64 9987
  store i32 %81, ptr %82, align 4, !tbaa !95
  %83 = getelementptr inbounds i8, ptr %4, i64 9988
  %84 = load i8, ptr %83, align 1, !tbaa !16
  %85 = zext i8 %84 to i32
  %86 = getelementptr inbounds i32, ptr %5, i64 9988
  store i32 %85, ptr %86, align 4, !tbaa !95
  %87 = getelementptr inbounds i8, ptr %4, i64 9989
  %88 = load i8, ptr %87, align 1, !tbaa !16
  %89 = zext i8 %88 to i32
  %90 = getelementptr inbounds i32, ptr %5, i64 9989
  store i32 %89, ptr %90, align 4, !tbaa !95
  %91 = getelementptr inbounds i8, ptr %4, i64 9990
  %92 = load i8, ptr %91, align 1, !tbaa !16
  %93 = zext i8 %92 to i32
  %94 = getelementptr inbounds i32, ptr %5, i64 9990
  store i32 %93, ptr %94, align 4, !tbaa !95
  %95 = getelementptr inbounds i8, ptr %4, i64 9991
  %96 = load i8, ptr %95, align 1, !tbaa !16
  %97 = zext i8 %96 to i32
  %98 = getelementptr inbounds i32, ptr %5, i64 9991
  store i32 %97, ptr %98, align 4, !tbaa !95
  %99 = getelementptr inbounds i8, ptr %4, i64 9992
  %100 = load i8, ptr %99, align 1, !tbaa !16
  %101 = zext i8 %100 to i32
  %102 = getelementptr inbounds i32, ptr %5, i64 9992
  store i32 %101, ptr %102, align 4, !tbaa !95
  %103 = getelementptr inbounds i8, ptr %4, i64 9993
  %104 = load i8, ptr %103, align 1, !tbaa !16
  %105 = zext i8 %104 to i32
  %106 = getelementptr inbounds i32, ptr %5, i64 9993
  store i32 %105, ptr %106, align 4, !tbaa !95
  %107 = getelementptr inbounds i8, ptr %4, i64 9994
  %108 = load i8, ptr %107, align 1, !tbaa !16
  %109 = zext i8 %108 to i32
  %110 = getelementptr inbounds i32, ptr %5, i64 9994
  store i32 %109, ptr %110, align 4, !tbaa !95
  %111 = getelementptr inbounds i8, ptr %4, i64 9995
  %112 = load i8, ptr %111, align 1, !tbaa !16
  %113 = zext i8 %112 to i32
  %114 = getelementptr inbounds i32, ptr %5, i64 9995
  store i32 %113, ptr %114, align 4, !tbaa !95
  %115 = getelementptr inbounds i8, ptr %4, i64 9996
  %116 = load i8, ptr %115, align 1, !tbaa !16
  %117 = zext i8 %116 to i32
  %118 = getelementptr inbounds i32, ptr %5, i64 9996
  store i32 %117, ptr %118, align 4, !tbaa !95
  %119 = getelementptr inbounds i8, ptr %4, i64 9997
  %120 = load i8, ptr %119, align 1, !tbaa !16
  %121 = zext i8 %120 to i32
  %122 = getelementptr inbounds i32, ptr %5, i64 9997
  store i32 %121, ptr %122, align 4, !tbaa !95
  %123 = getelementptr inbounds i8, ptr %4, i64 9998
  %124 = load i8, ptr %123, align 1, !tbaa !16
  %125 = zext i8 %124 to i32
  %126 = getelementptr inbounds i32, ptr %5, i64 9998
  store i32 %125, ptr %126, align 4, !tbaa !95
  %127 = getelementptr inbounds i8, ptr %4, i64 9999
  %128 = load i8, ptr %127, align 1, !tbaa !16
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds i32, ptr %5, i64 9999
  store i32 %129, ptr %130, align 4, !tbaa !95
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %283

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %280

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %276

137:                                              ; preds = %199, %66
  %138 = phi i64 [ 0, %66 ], [ %200, %199 ]
  %139 = getelementptr inbounds i32, ptr %5, i64 %138
  %140 = load i32, ptr %139, align 4, !tbaa !95
  %141 = getelementptr inbounds i32, ptr %7, i64 %138
  %142 = load i32, ptr %141, align 4, !tbaa !95
  %143 = icmp eq i32 %140, %142
  br i1 %143, label %171, label %144

144:                                              ; preds = %192, %185, %178, %171, %137
  %145 = phi i64 [ %138, %137 ], [ %172, %171 ], [ %179, %178 ], [ %186, %185 ], [ %193, %192 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i32, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %169

149:                                              ; preds = %144
  %150 = getelementptr inbounds i8, ptr %4, i64 %146
  %151 = load i8, ptr %150, align 1, !tbaa !16
  %152 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %151)
          to label %153 unwind label %169

153:                                              ; preds = %149
  %154 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %152, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %155 unwind label %169

155:                                              ; preds = %153
  %156 = getelementptr inbounds i32, ptr %5, i64 %146
  %157 = load i32, ptr %156, align 4, !tbaa !95
  %158 = zext i32 %157 to i64
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %152, i64 noundef %158)
          to label %160 unwind label %169

160:                                              ; preds = %155
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %162 unwind label %169

162:                                              ; preds = %160
  %163 = load i32, ptr %147, align 4, !tbaa !95
  %164 = zext i32 %163 to i64
  %165 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %159, i64 noundef %164)
          to label %166 unwind label %169

166:                                              ; preds = %162
  %167 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %165, ptr noundef nonnull @.str.149)
          to label %168 unwind label %169

168:                                              ; preds = %166
  call void @exit(i32 noundef 1) #12
  unreachable

169:                                              ; preds = %166, %162, %160, %155, %153, %149, %144
  %170 = landingpad { ptr, i32 }
          cleanup
  br label %276

171:                                              ; preds = %137
  %172 = add nuw nsw i64 %138, 1
  %173 = getelementptr inbounds i32, ptr %5, i64 %172
  %174 = load i32, ptr %173, align 4, !tbaa !95
  %175 = getelementptr inbounds i32, ptr %7, i64 %172
  %176 = load i32, ptr %175, align 4, !tbaa !95
  %177 = icmp eq i32 %174, %176
  br i1 %177, label %178, label %144

178:                                              ; preds = %171
  %179 = add nuw nsw i64 %138, 2
  %180 = getelementptr inbounds i32, ptr %5, i64 %179
  %181 = load i32, ptr %180, align 4, !tbaa !95
  %182 = getelementptr inbounds i32, ptr %7, i64 %179
  %183 = load i32, ptr %182, align 4, !tbaa !95
  %184 = icmp eq i32 %181, %183
  br i1 %184, label %185, label %144

185:                                              ; preds = %178
  %186 = add nuw nsw i64 %138, 3
  %187 = getelementptr inbounds i32, ptr %5, i64 %186
  %188 = load i32, ptr %187, align 4, !tbaa !95
  %189 = getelementptr inbounds i32, ptr %7, i64 %186
  %190 = load i32, ptr %189, align 4, !tbaa !95
  %191 = icmp eq i32 %188, %190
  br i1 %191, label %192, label %144

192:                                              ; preds = %185
  %193 = add nuw nsw i64 %138, 4
  %194 = getelementptr inbounds i32, ptr %5, i64 %193
  %195 = load i32, ptr %194, align 4, !tbaa !95
  %196 = getelementptr inbounds i32, ptr %7, i64 %193
  %197 = load i32, ptr %196, align 4, !tbaa !95
  %198 = icmp eq i32 %195, %197
  br i1 %198, label %199, label %144

199:                                              ; preds = %192
  %200 = add nuw nsw i64 %138, 5
  %201 = icmp eq i64 %200, 10000
  br i1 %201, label %202, label %137, !llvm.loop !278

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %204 = load i8, ptr %203, align 2, !tbaa !23, !range !40, !noundef !41
  %205 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %206 = load i64, ptr %205, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %207 unwind label %218

207:                                              ; preds = %202
  %208 = icmp ne i8 %204, 0
  %209 = icmp eq i64 %206, 0
  %210 = select i1 %208, i1 true, i1 %209
  br i1 %210, label %213, label %211, !prof !42

211:                                              ; preds = %207
  %212 = getelementptr i8, ptr %4, i64 10000
  br label %220

213:                                              ; preds = %273, %207
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %214 unwind label %218

214:                                              ; preds = %213
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %215 = load ptr, ptr %3, align 8, !tbaa !5
  %216 = icmp eq ptr %215, null
  br i1 %216, label %285, label %217

217:                                              ; preds = %214
  call void @_ZdaPv(ptr noundef nonnull %215) #13
  br label %285

218:                                              ; preds = %213, %202
  %219 = landingpad { ptr, i32 }
          cleanup
  br label %276

220:                                              ; preds = %211, %273
  %221 = phi i64 [ %274, %273 ], [ %206, %211 ]
  %222 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %3, i64 %222) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %223 = load ptr, ptr %3, align 8, !tbaa !5
  %224 = getelementptr i8, ptr %223, i64 40000
  %225 = icmp ult ptr %223, %212
  %226 = icmp ult ptr %4, %224
  %227 = and i1 %225, %226
  br i1 %227, label %248, label %228

228:                                              ; preds = %220, %228
  %229 = phi i64 [ %246, %228 ], [ 0, %220 ]
  %230 = getelementptr inbounds i8, ptr %4, i64 %229
  %231 = load <16 x i8>, ptr %230, align 1, !tbaa !16, !alias.scope !287
  %232 = getelementptr inbounds i8, ptr %230, i64 16
  %233 = load <16 x i8>, ptr %232, align 1, !tbaa !16, !alias.scope !287
  %234 = getelementptr inbounds i8, ptr %230, i64 32
  %235 = load <16 x i8>, ptr %234, align 1, !tbaa !16, !alias.scope !287
  %236 = getelementptr inbounds i8, ptr %230, i64 48
  %237 = load <16 x i8>, ptr %236, align 1, !tbaa !16, !alias.scope !287
  %238 = zext <16 x i8> %231 to <16 x i32>
  %239 = zext <16 x i8> %233 to <16 x i32>
  %240 = zext <16 x i8> %235 to <16 x i32>
  %241 = zext <16 x i8> %237 to <16 x i32>
  %242 = getelementptr inbounds i32, ptr %223, i64 %229
  store <16 x i32> %238, ptr %242, align 4, !tbaa !95, !alias.scope !290, !noalias !287
  %243 = getelementptr inbounds i32, ptr %242, i64 16
  store <16 x i32> %239, ptr %243, align 4, !tbaa !95, !alias.scope !290, !noalias !287
  %244 = getelementptr inbounds i32, ptr %242, i64 32
  store <16 x i32> %240, ptr %244, align 4, !tbaa !95, !alias.scope !290, !noalias !287
  %245 = getelementptr inbounds i32, ptr %242, i64 48
  store <16 x i32> %241, ptr %245, align 4, !tbaa !95, !alias.scope !290, !noalias !287
  %246 = add nuw i64 %229, 64
  %247 = icmp eq i64 %246, 9984
  br i1 %247, label %248, label %228, !llvm.loop !292

248:                                              ; preds = %228, %220
  %249 = phi i64 [ 0, %220 ], [ 9984, %228 ]
  br label %250

250:                                              ; preds = %250, %248
  %251 = phi i64 [ %249, %248 ], [ %271, %250 ]
  %252 = getelementptr inbounds i8, ptr %4, i64 %251
  %253 = load i8, ptr %252, align 1, !tbaa !16
  %254 = zext i8 %253 to i32
  %255 = getelementptr inbounds i32, ptr %223, i64 %251
  store i32 %254, ptr %255, align 4, !tbaa !95
  %256 = or i64 %251, 1
  %257 = getelementptr inbounds i8, ptr %4, i64 %256
  %258 = load i8, ptr %257, align 1, !tbaa !16
  %259 = zext i8 %258 to i32
  %260 = getelementptr inbounds i32, ptr %223, i64 %256
  store i32 %259, ptr %260, align 4, !tbaa !95
  %261 = or i64 %251, 2
  %262 = getelementptr inbounds i8, ptr %4, i64 %261
  %263 = load i8, ptr %262, align 1, !tbaa !16
  %264 = zext i8 %263 to i32
  %265 = getelementptr inbounds i32, ptr %223, i64 %261
  store i32 %264, ptr %265, align 4, !tbaa !95
  %266 = or i64 %251, 3
  %267 = getelementptr inbounds i8, ptr %4, i64 %266
  %268 = load i8, ptr %267, align 1, !tbaa !16
  %269 = zext i8 %268 to i32
  %270 = getelementptr inbounds i32, ptr %223, i64 %266
  store i32 %269, ptr %270, align 4, !tbaa !95
  %271 = add nuw nsw i64 %251, 4
  %272 = icmp eq i64 %271, 10000
  br i1 %272, label %273, label %250, !llvm.loop !293

273:                                              ; preds = %250
  %274 = add i64 %221, -1
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %213, label %220, !prof !42

276:                                              ; preds = %218, %169, %135
  %277 = phi { ptr, i32 } [ %170, %169 ], [ %219, %218 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %278 = load ptr, ptr %3, align 8, !tbaa !5
  %279 = icmp eq ptr %278, null
  br i1 %279, label %283, label %280

280:                                              ; preds = %276, %133
  %281 = phi { ptr, i32 } [ %134, %133 ], [ %277, %276 ]
  %282 = phi ptr [ %5, %133 ], [ %278, %276 ]
  call void @_ZdaPv(ptr noundef nonnull %282) #13
  br label %283

283:                                              ; preds = %280, %276, %131
  %284 = phi { ptr, i32 } [ %132, %131 ], [ %277, %276 ], [ %281, %280 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %284

285:                                              ; preds = %214, %217
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z53benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::unique_ptr.44", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %6 unwind label %67

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %8 unwind label %69

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %9, align 1, !tbaa !69
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %13 unwind label %71

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, ptr %4, i64 %11
  store i8 %12, ptr %14, align 1, !tbaa !16
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !70

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i8, ptr %4, i64 %19
  %21 = load i8, ptr %20, align 1, !tbaa !16
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds i32, ptr %7, i64 %19
  store i32 %22, ptr %23, align 4, !tbaa !95
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i8, ptr %4, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !16
  %27 = zext i8 %26 to i32
  %28 = getelementptr inbounds i32, ptr %7, i64 %24
  store i32 %27, ptr %28, align 4, !tbaa !95
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i8, ptr %4, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !16
  %32 = zext i8 %31 to i32
  %33 = getelementptr inbounds i32, ptr %7, i64 %29
  store i32 %32, ptr %33, align 4, !tbaa !95
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i8, ptr %4, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !16
  %37 = zext i8 %36 to i32
  %38 = getelementptr inbounds i32, ptr %7, i64 %34
  store i32 %37, ptr %38, align 4, !tbaa !95
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i8, ptr %4, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !16
  %42 = zext i8 %41 to i32
  %43 = getelementptr inbounds i32, ptr %7, i64 %39
  store i32 %42, ptr %43, align 4, !tbaa !95
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !276

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %65, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i8, ptr %4, i64 %47
  %49 = load <4 x i8>, ptr %48, align 1, !tbaa !16
  %50 = getelementptr inbounds i8, ptr %48, i64 4
  %51 = load <4 x i8>, ptr %50, align 1, !tbaa !16
  %52 = zext <4 x i8> %49 to <4 x i32>
  %53 = zext <4 x i8> %51 to <4 x i32>
  %54 = getelementptr inbounds i32, ptr %5, i64 %47
  store <4 x i32> %52, ptr %54, align 4, !tbaa !95
  %55 = getelementptr inbounds i32, ptr %54, i64 4
  store <4 x i32> %53, ptr %55, align 4, !tbaa !95
  %56 = or i64 %47, 8
  %57 = getelementptr inbounds i8, ptr %4, i64 %56
  %58 = load <4 x i8>, ptr %57, align 1, !tbaa !16
  %59 = getelementptr inbounds i8, ptr %57, i64 4
  %60 = load <4 x i8>, ptr %59, align 1, !tbaa !16
  %61 = zext <4 x i8> %58 to <4 x i32>
  %62 = zext <4 x i8> %60 to <4 x i32>
  %63 = getelementptr inbounds i32, ptr %5, i64 %56
  store <4 x i32> %61, ptr %63, align 4, !tbaa !95
  %64 = getelementptr inbounds i32, ptr %63, i64 4
  store <4 x i32> %62, ptr %64, align 4, !tbaa !95
  %65 = add nuw nsw i64 %47, 16
  %66 = icmp eq i64 %65, 10000
  br i1 %66, label %73, label %46, !llvm.loop !294

67:                                               ; preds = %1
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %223

69:                                               ; preds = %6
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %220

71:                                               ; preds = %10
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %216

73:                                               ; preds = %46, %135
  %74 = phi i64 [ %136, %135 ], [ 0, %46 ]
  %75 = getelementptr inbounds i32, ptr %5, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !95
  %77 = getelementptr inbounds i32, ptr %7, i64 %74
  %78 = load i32, ptr %77, align 4, !tbaa !95
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %107, label %80

80:                                               ; preds = %128, %121, %114, %107, %73
  %81 = phi i64 [ %74, %73 ], [ %108, %107 ], [ %115, %114 ], [ %122, %121 ], [ %129, %128 ]
  %82 = and i64 %81, 4294967295
  %83 = getelementptr inbounds i32, ptr %7, i64 %82
  %84 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %85 unwind label %105

85:                                               ; preds = %80
  %86 = getelementptr inbounds i8, ptr %4, i64 %82
  %87 = load i8, ptr %86, align 1, !tbaa !16
  %88 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %87)
          to label %89 unwind label %105

89:                                               ; preds = %85
  %90 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %88, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %91 unwind label %105

91:                                               ; preds = %89
  %92 = getelementptr inbounds i32, ptr %5, i64 %82
  %93 = load i32, ptr %92, align 4, !tbaa !95
  %94 = zext i32 %93 to i64
  %95 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %88, i64 noundef %94)
          to label %96 unwind label %105

96:                                               ; preds = %91
  %97 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %95, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %98 unwind label %105

98:                                               ; preds = %96
  %99 = load i32, ptr %83, align 4, !tbaa !95
  %100 = zext i32 %99 to i64
  %101 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %95, i64 noundef %100)
          to label %102 unwind label %105

102:                                              ; preds = %98
  %103 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %101, ptr noundef nonnull @.str.149)
          to label %104 unwind label %105

104:                                              ; preds = %102
  call void @exit(i32 noundef 1) #12
  unreachable

105:                                              ; preds = %102, %98, %96, %91, %89, %85, %80
  %106 = landingpad { ptr, i32 }
          cleanup
  br label %216

107:                                              ; preds = %73
  %108 = add nuw nsw i64 %74, 1
  %109 = getelementptr inbounds i32, ptr %5, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !95
  %111 = getelementptr inbounds i32, ptr %7, i64 %108
  %112 = load i32, ptr %111, align 4, !tbaa !95
  %113 = icmp eq i32 %110, %112
  br i1 %113, label %114, label %80

114:                                              ; preds = %107
  %115 = add nuw nsw i64 %74, 2
  %116 = getelementptr inbounds i32, ptr %5, i64 %115
  %117 = load i32, ptr %116, align 4, !tbaa !95
  %118 = getelementptr inbounds i32, ptr %7, i64 %115
  %119 = load i32, ptr %118, align 4, !tbaa !95
  %120 = icmp eq i32 %117, %119
  br i1 %120, label %121, label %80

121:                                              ; preds = %114
  %122 = add nuw nsw i64 %74, 3
  %123 = getelementptr inbounds i32, ptr %5, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !95
  %125 = getelementptr inbounds i32, ptr %7, i64 %122
  %126 = load i32, ptr %125, align 4, !tbaa !95
  %127 = icmp eq i32 %124, %126
  br i1 %127, label %128, label %80

128:                                              ; preds = %121
  %129 = add nuw nsw i64 %74, 4
  %130 = getelementptr inbounds i32, ptr %5, i64 %129
  %131 = load i32, ptr %130, align 4, !tbaa !95
  %132 = getelementptr inbounds i32, ptr %7, i64 %129
  %133 = load i32, ptr %132, align 4, !tbaa !95
  %134 = icmp eq i32 %131, %133
  br i1 %134, label %135, label %80

135:                                              ; preds = %128
  %136 = add nuw nsw i64 %74, 5
  %137 = icmp eq i64 %136, 10000
  br i1 %137, label %138, label %73, !llvm.loop !278

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %140 = load i8, ptr %139, align 2, !tbaa !23, !range !40, !noundef !41
  %141 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %142 = load i64, ptr %141, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %143 unwind label %154

143:                                              ; preds = %138
  %144 = icmp ne i8 %140, 0
  %145 = icmp eq i64 %142, 0
  %146 = select i1 %144, i1 true, i1 %145
  br i1 %146, label %149, label %147, !prof !42

147:                                              ; preds = %143
  %148 = getelementptr i8, ptr %4, i64 10000
  br label %156

149:                                              ; preds = %213, %143
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %150 unwind label %154

150:                                              ; preds = %149
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %151 = load ptr, ptr %3, align 8, !tbaa !5
  %152 = icmp eq ptr %151, null
  br i1 %152, label %225, label %153

153:                                              ; preds = %150
  call void @_ZdaPv(ptr noundef nonnull %151) #13
  br label %225

154:                                              ; preds = %149, %138
  %155 = landingpad { ptr, i32 }
          cleanup
  br label %216

156:                                              ; preds = %147, %213
  %157 = phi i64 [ %214, %213 ], [ %142, %147 ]
  %158 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %3, i64 %158) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %159 = load ptr, ptr %3, align 8, !tbaa !5
  %160 = getelementptr i8, ptr %159, i64 40000
  %161 = icmp ult ptr %159, %148
  %162 = icmp ult ptr %4, %160
  %163 = and i1 %161, %162
  br i1 %163, label %185, label %164

164:                                              ; preds = %156, %164
  %165 = phi i64 [ %183, %164 ], [ 0, %156 ]
  %166 = getelementptr inbounds i8, ptr %4, i64 %165
  %167 = load <4 x i8>, ptr %166, align 1, !tbaa !16, !alias.scope !295
  %168 = getelementptr inbounds i8, ptr %166, i64 4
  %169 = load <4 x i8>, ptr %168, align 1, !tbaa !16, !alias.scope !295
  %170 = zext <4 x i8> %167 to <4 x i32>
  %171 = zext <4 x i8> %169 to <4 x i32>
  %172 = getelementptr inbounds i32, ptr %159, i64 %165
  store <4 x i32> %170, ptr %172, align 4, !tbaa !95, !alias.scope !298, !noalias !295
  %173 = getelementptr inbounds i32, ptr %172, i64 4
  store <4 x i32> %171, ptr %173, align 4, !tbaa !95, !alias.scope !298, !noalias !295
  %174 = or i64 %165, 8
  %175 = getelementptr inbounds i8, ptr %4, i64 %174
  %176 = load <4 x i8>, ptr %175, align 1, !tbaa !16, !alias.scope !295
  %177 = getelementptr inbounds i8, ptr %175, i64 4
  %178 = load <4 x i8>, ptr %177, align 1, !tbaa !16, !alias.scope !295
  %179 = zext <4 x i8> %176 to <4 x i32>
  %180 = zext <4 x i8> %178 to <4 x i32>
  %181 = getelementptr inbounds i32, ptr %159, i64 %174
  store <4 x i32> %179, ptr %181, align 4, !tbaa !95, !alias.scope !298, !noalias !295
  %182 = getelementptr inbounds i32, ptr %181, i64 4
  store <4 x i32> %180, ptr %182, align 4, !tbaa !95, !alias.scope !298, !noalias !295
  %183 = add nuw nsw i64 %165, 16
  %184 = icmp eq i64 %183, 10000
  br i1 %184, label %213, label %164, !llvm.loop !300

185:                                              ; preds = %156, %185
  %186 = phi i64 [ %211, %185 ], [ 0, %156 ]
  %187 = getelementptr inbounds i8, ptr %4, i64 %186
  %188 = load i8, ptr %187, align 1, !tbaa !16
  %189 = zext i8 %188 to i32
  %190 = getelementptr inbounds i32, ptr %159, i64 %186
  store i32 %189, ptr %190, align 4, !tbaa !95
  %191 = add nuw nsw i64 %186, 1
  %192 = getelementptr inbounds i8, ptr %4, i64 %191
  %193 = load i8, ptr %192, align 1, !tbaa !16
  %194 = zext i8 %193 to i32
  %195 = getelementptr inbounds i32, ptr %159, i64 %191
  store i32 %194, ptr %195, align 4, !tbaa !95
  %196 = add nuw nsw i64 %186, 2
  %197 = getelementptr inbounds i8, ptr %4, i64 %196
  %198 = load i8, ptr %197, align 1, !tbaa !16
  %199 = zext i8 %198 to i32
  %200 = getelementptr inbounds i32, ptr %159, i64 %196
  store i32 %199, ptr %200, align 4, !tbaa !95
  %201 = add nuw nsw i64 %186, 3
  %202 = getelementptr inbounds i8, ptr %4, i64 %201
  %203 = load i8, ptr %202, align 1, !tbaa !16
  %204 = zext i8 %203 to i32
  %205 = getelementptr inbounds i32, ptr %159, i64 %201
  store i32 %204, ptr %205, align 4, !tbaa !95
  %206 = add nuw nsw i64 %186, 4
  %207 = getelementptr inbounds i8, ptr %4, i64 %206
  %208 = load i8, ptr %207, align 1, !tbaa !16
  %209 = zext i8 %208 to i32
  %210 = getelementptr inbounds i32, ptr %159, i64 %206
  store i32 %209, ptr %210, align 4, !tbaa !95
  %211 = add nuw nsw i64 %186, 5
  %212 = icmp eq i64 %211, 10000
  br i1 %212, label %213, label %185, !llvm.loop !301

213:                                              ; preds = %164, %185
  %214 = add i64 %157, -1
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %149, label %156, !prof !42

216:                                              ; preds = %154, %105, %71
  %217 = phi { ptr, i32 } [ %106, %105 ], [ %155, %154 ], [ %72, %71 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %218 = load ptr, ptr %3, align 8, !tbaa !5
  %219 = icmp eq ptr %218, null
  br i1 %219, label %223, label %220

220:                                              ; preds = %216, %69
  %221 = phi { ptr, i32 } [ %70, %69 ], [ %217, %216 ]
  %222 = phi ptr [ %5, %69 ], [ %218, %216 ]
  call void @_ZdaPv(ptr noundef nonnull %222) #13
  br label %223

223:                                              ; preds = %220, %216, %67
  %224 = phi { ptr, i32 } [ %68, %67 ], [ %217, %216 ], [ %221, %220 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %224

225:                                              ; preds = %150, %153
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::uniform_int_distribution.43", align 1
  %4 = alloca %"class.std::unique_ptr.44", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %7 unwind label %41

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %3) #11
  store i8 0, ptr %3, align 1, !tbaa !67
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %3, i64 0, i32 1
  store i8 -1, ptr %8, align 1, !tbaa !69
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %3)
          to label %12 unwind label %45

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, ptr %5, i64 %10
  store i8 %11, ptr %13, align 1, !tbaa !16
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !70

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %17, align 4, !tbaa !94
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %21 unwind label %43

21:                                               ; preds = %18
  %22 = getelementptr inbounds i32, ptr %6, i64 %19
  store i32 %20, ptr %22, align 4, !tbaa !95
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !96

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %119

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %36, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr i8, ptr %5, i64 10000
  br label %47

36:                                               ; preds = %116, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %37 unwind label %119

37:                                               ; preds = %36
  %38 = load ptr, ptr %4, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %128, label %40

40:                                               ; preds = %37
  call void @_ZdaPv(ptr noundef nonnull %38) #13
  br label %128

41:                                               ; preds = %1
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %126

43:                                               ; preds = %18
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %123

45:                                               ; preds = %9
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %123

47:                                               ; preds = %34, %116
  %48 = phi i64 [ %117, %116 ], [ %29, %34 ]
  %49 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %4, i64 %49) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %50 = load ptr, ptr %4, align 8, !tbaa !5
  %51 = getelementptr i8, ptr %50, i64 40000
  %52 = icmp ult ptr %50, %35
  %53 = icmp ult ptr %5, %51
  %54 = and i1 %52, %53
  br i1 %54, label %83, label %55

55:                                               ; preds = %47, %55
  %56 = phi i64 [ %81, %55 ], [ 0, %47 ]
  %57 = getelementptr inbounds i8, ptr %5, i64 %56
  %58 = load <8 x i8>, ptr %57, align 1, !tbaa !16, !alias.scope !302
  %59 = getelementptr inbounds i8, ptr %57, i64 8
  %60 = load <8 x i8>, ptr %59, align 1, !tbaa !16, !alias.scope !302
  %61 = getelementptr inbounds i8, ptr %57, i64 16
  %62 = load <8 x i8>, ptr %61, align 1, !tbaa !16, !alias.scope !302
  %63 = getelementptr inbounds i8, ptr %57, i64 24
  %64 = load <8 x i8>, ptr %63, align 1, !tbaa !16, !alias.scope !302
  %65 = zext <8 x i8> %58 to <8 x i32>
  %66 = zext <8 x i8> %60 to <8 x i32>
  %67 = zext <8 x i8> %62 to <8 x i32>
  %68 = zext <8 x i8> %64 to <8 x i32>
  %69 = getelementptr inbounds i32, ptr %50, i64 %56
  %70 = load <8 x i32>, ptr %69, align 4, !tbaa !95, !alias.scope !305, !noalias !302
  %71 = getelementptr inbounds i32, ptr %69, i64 8
  %72 = load <8 x i32>, ptr %71, align 4, !tbaa !95, !alias.scope !305, !noalias !302
  %73 = getelementptr inbounds i32, ptr %69, i64 16
  %74 = load <8 x i32>, ptr %73, align 4, !tbaa !95, !alias.scope !305, !noalias !302
  %75 = getelementptr inbounds i32, ptr %69, i64 24
  %76 = load <8 x i32>, ptr %75, align 4, !tbaa !95, !alias.scope !305, !noalias !302
  %77 = add <8 x i32> %70, %65
  %78 = add <8 x i32> %72, %66
  %79 = add <8 x i32> %74, %67
  %80 = add <8 x i32> %76, %68
  store <8 x i32> %77, ptr %69, align 4, !tbaa !95, !alias.scope !305, !noalias !302
  store <8 x i32> %78, ptr %71, align 4, !tbaa !95, !alias.scope !305, !noalias !302
  store <8 x i32> %79, ptr %73, align 4, !tbaa !95, !alias.scope !305, !noalias !302
  store <8 x i32> %80, ptr %75, align 4, !tbaa !95, !alias.scope !305, !noalias !302
  %81 = add nuw i64 %56, 32
  %82 = icmp eq i64 %81, 9984
  br i1 %82, label %83, label %55, !llvm.loop !307

83:                                               ; preds = %55, %47
  %84 = phi i64 [ 0, %47 ], [ 9984, %55 ]
  br label %85

85:                                               ; preds = %85, %83
  %86 = phi i64 [ %84, %83 ], [ %114, %85 ]
  %87 = getelementptr inbounds i8, ptr %5, i64 %86
  %88 = load i8, ptr %87, align 1, !tbaa !16
  %89 = zext i8 %88 to i32
  %90 = getelementptr inbounds i32, ptr %50, i64 %86
  %91 = load i32, ptr %90, align 4, !tbaa !95
  %92 = add i32 %91, %89
  store i32 %92, ptr %90, align 4, !tbaa !95
  %93 = or i64 %86, 1
  %94 = getelementptr inbounds i8, ptr %5, i64 %93
  %95 = load i8, ptr %94, align 1, !tbaa !16
  %96 = zext i8 %95 to i32
  %97 = getelementptr inbounds i32, ptr %50, i64 %93
  %98 = load i32, ptr %97, align 4, !tbaa !95
  %99 = add i32 %98, %96
  store i32 %99, ptr %97, align 4, !tbaa !95
  %100 = or i64 %86, 2
  %101 = getelementptr inbounds i8, ptr %5, i64 %100
  %102 = load i8, ptr %101, align 1, !tbaa !16
  %103 = zext i8 %102 to i32
  %104 = getelementptr inbounds i32, ptr %50, i64 %100
  %105 = load i32, ptr %104, align 4, !tbaa !95
  %106 = add i32 %105, %103
  store i32 %106, ptr %104, align 4, !tbaa !95
  %107 = or i64 %86, 3
  %108 = getelementptr inbounds i8, ptr %5, i64 %107
  %109 = load i8, ptr %108, align 1, !tbaa !16
  %110 = zext i8 %109 to i32
  %111 = getelementptr inbounds i32, ptr %50, i64 %107
  %112 = load i32, ptr %111, align 4, !tbaa !95
  %113 = add i32 %112, %110
  store i32 %113, ptr %111, align 4, !tbaa !95
  %114 = add nuw nsw i64 %86, 4
  %115 = icmp eq i64 %114, 10000
  br i1 %115, label %116, label %85, !llvm.loop !308

116:                                              ; preds = %85
  %117 = add i64 %48, -1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %36, label %47, !prof !42

119:                                              ; preds = %25, %36
  %120 = landingpad { ptr, i32 }
          cleanup
  %121 = load ptr, ptr %4, align 8, !tbaa !5
  %122 = icmp eq ptr %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %45, %43, %119
  %124 = phi { ptr, i32 } [ %120, %119 ], [ %46, %45 ], [ %44, %43 ]
  %125 = phi ptr [ %121, %119 ], [ %6, %45 ], [ %6, %43 ]
  call void @_ZdaPv(ptr noundef nonnull %125) #13
  br label %126

126:                                              ; preds = %123, %119, %41
  %127 = phi { ptr, i32 } [ %42, %41 ], [ %120, %119 ], [ %124, %123 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %127

128:                                              ; preds = %37, %40
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::uniform_int_distribution.43", align 1
  %4 = alloca %"class.std::unique_ptr.44", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %7 unwind label %41

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %3) #11
  store i8 0, ptr %3, align 1, !tbaa !67
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %3, i64 0, i32 1
  store i8 -1, ptr %8, align 1, !tbaa !69
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %3)
          to label %12 unwind label %45

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, ptr %5, i64 %10
  store i8 %11, ptr %13, align 1, !tbaa !16
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !70

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %17, align 4, !tbaa !94
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %21 unwind label %43

21:                                               ; preds = %18
  %22 = getelementptr inbounds i32, ptr %6, i64 %19
  store i32 %20, ptr %22, align 4, !tbaa !95
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !96

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %119

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %36, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr i8, ptr %5, i64 10000
  br label %47

36:                                               ; preds = %116, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %37 unwind label %119

37:                                               ; preds = %36
  %38 = load ptr, ptr %4, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %128, label %40

40:                                               ; preds = %37
  call void @_ZdaPv(ptr noundef nonnull %38) #13
  br label %128

41:                                               ; preds = %1
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %126

43:                                               ; preds = %18
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %123

45:                                               ; preds = %9
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %123

47:                                               ; preds = %34, %116
  %48 = phi i64 [ %117, %116 ], [ %29, %34 ]
  %49 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %4, i64 %49) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %50 = load ptr, ptr %4, align 8, !tbaa !5
  %51 = getelementptr i8, ptr %50, i64 40000
  %52 = icmp ult ptr %50, %35
  %53 = icmp ult ptr %5, %51
  %54 = and i1 %52, %53
  br i1 %54, label %83, label %55

55:                                               ; preds = %47, %55
  %56 = phi i64 [ %81, %55 ], [ 0, %47 ]
  %57 = getelementptr inbounds i8, ptr %5, i64 %56
  %58 = load <16 x i8>, ptr %57, align 1, !tbaa !16, !alias.scope !309
  %59 = getelementptr inbounds i8, ptr %57, i64 16
  %60 = load <16 x i8>, ptr %59, align 1, !tbaa !16, !alias.scope !309
  %61 = getelementptr inbounds i8, ptr %57, i64 32
  %62 = load <16 x i8>, ptr %61, align 1, !tbaa !16, !alias.scope !309
  %63 = getelementptr inbounds i8, ptr %57, i64 48
  %64 = load <16 x i8>, ptr %63, align 1, !tbaa !16, !alias.scope !309
  %65 = zext <16 x i8> %58 to <16 x i32>
  %66 = zext <16 x i8> %60 to <16 x i32>
  %67 = zext <16 x i8> %62 to <16 x i32>
  %68 = zext <16 x i8> %64 to <16 x i32>
  %69 = getelementptr inbounds i32, ptr %50, i64 %56
  %70 = load <16 x i32>, ptr %69, align 4, !tbaa !95, !alias.scope !312, !noalias !309
  %71 = getelementptr inbounds i32, ptr %69, i64 16
  %72 = load <16 x i32>, ptr %71, align 4, !tbaa !95, !alias.scope !312, !noalias !309
  %73 = getelementptr inbounds i32, ptr %69, i64 32
  %74 = load <16 x i32>, ptr %73, align 4, !tbaa !95, !alias.scope !312, !noalias !309
  %75 = getelementptr inbounds i32, ptr %69, i64 48
  %76 = load <16 x i32>, ptr %75, align 4, !tbaa !95, !alias.scope !312, !noalias !309
  %77 = add <16 x i32> %70, %65
  %78 = add <16 x i32> %72, %66
  %79 = add <16 x i32> %74, %67
  %80 = add <16 x i32> %76, %68
  store <16 x i32> %77, ptr %69, align 4, !tbaa !95, !alias.scope !312, !noalias !309
  store <16 x i32> %78, ptr %71, align 4, !tbaa !95, !alias.scope !312, !noalias !309
  store <16 x i32> %79, ptr %73, align 4, !tbaa !95, !alias.scope !312, !noalias !309
  store <16 x i32> %80, ptr %75, align 4, !tbaa !95, !alias.scope !312, !noalias !309
  %81 = add nuw i64 %56, 64
  %82 = icmp eq i64 %81, 9984
  br i1 %82, label %83, label %55, !llvm.loop !314

83:                                               ; preds = %55, %47
  %84 = phi i64 [ 0, %47 ], [ 9984, %55 ]
  br label %85

85:                                               ; preds = %85, %83
  %86 = phi i64 [ %84, %83 ], [ %114, %85 ]
  %87 = getelementptr inbounds i8, ptr %5, i64 %86
  %88 = load i8, ptr %87, align 1, !tbaa !16
  %89 = zext i8 %88 to i32
  %90 = getelementptr inbounds i32, ptr %50, i64 %86
  %91 = load i32, ptr %90, align 4, !tbaa !95
  %92 = add i32 %91, %89
  store i32 %92, ptr %90, align 4, !tbaa !95
  %93 = or i64 %86, 1
  %94 = getelementptr inbounds i8, ptr %5, i64 %93
  %95 = load i8, ptr %94, align 1, !tbaa !16
  %96 = zext i8 %95 to i32
  %97 = getelementptr inbounds i32, ptr %50, i64 %93
  %98 = load i32, ptr %97, align 4, !tbaa !95
  %99 = add i32 %98, %96
  store i32 %99, ptr %97, align 4, !tbaa !95
  %100 = or i64 %86, 2
  %101 = getelementptr inbounds i8, ptr %5, i64 %100
  %102 = load i8, ptr %101, align 1, !tbaa !16
  %103 = zext i8 %102 to i32
  %104 = getelementptr inbounds i32, ptr %50, i64 %100
  %105 = load i32, ptr %104, align 4, !tbaa !95
  %106 = add i32 %105, %103
  store i32 %106, ptr %104, align 4, !tbaa !95
  %107 = or i64 %86, 3
  %108 = getelementptr inbounds i8, ptr %5, i64 %107
  %109 = load i8, ptr %108, align 1, !tbaa !16
  %110 = zext i8 %109 to i32
  %111 = getelementptr inbounds i32, ptr %50, i64 %107
  %112 = load i32, ptr %111, align 4, !tbaa !95
  %113 = add i32 %112, %110
  store i32 %113, ptr %111, align 4, !tbaa !95
  %114 = add nuw nsw i64 %86, 4
  %115 = icmp eq i64 %114, 10000
  br i1 %115, label %116, label %85, !llvm.loop !315

116:                                              ; preds = %85
  %117 = add i64 %48, -1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %36, label %47, !prof !42

119:                                              ; preds = %25, %36
  %120 = landingpad { ptr, i32 }
          cleanup
  %121 = load ptr, ptr %4, align 8, !tbaa !5
  %122 = icmp eq ptr %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %45, %43, %119
  %124 = phi { ptr, i32 } [ %120, %119 ], [ %46, %45 ], [ %44, %43 ]
  %125 = phi ptr [ %121, %119 ], [ %6, %45 ], [ %6, %43 ]
  call void @_ZdaPv(ptr noundef nonnull %125) #13
  br label %126

126:                                              ; preds = %123, %119, %41
  %127 = phi { ptr, i32 } [ %42, %41 ], [ %120, %119 ], [ %124, %123 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %127

128:                                              ; preds = %37, %40
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::uniform_int_distribution.43", align 1
  %4 = alloca %"class.std::unique_ptr.44", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %7 unwind label %41

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %3) #11
  store i8 0, ptr %3, align 1, !tbaa !67
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %3, i64 0, i32 1
  store i8 -1, ptr %8, align 1, !tbaa !69
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %3)
          to label %12 unwind label %45

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, ptr %5, i64 %10
  store i8 %11, ptr %13, align 1, !tbaa !16
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !70

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %17, align 4, !tbaa !94
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %21 unwind label %43

21:                                               ; preds = %18
  %22 = getelementptr inbounds i32, ptr %6, i64 %19
  store i32 %20, ptr %22, align 4, !tbaa !95
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !96

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %118

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %36, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr i8, ptr %5, i64 10000
  br label %47

36:                                               ; preds = %115, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %37 unwind label %118

37:                                               ; preds = %36
  %38 = load ptr, ptr %4, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %127, label %40

40:                                               ; preds = %37
  call void @_ZdaPv(ptr noundef nonnull %38) #13
  br label %127

41:                                               ; preds = %1
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %125

43:                                               ; preds = %18
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %122

45:                                               ; preds = %9
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %122

47:                                               ; preds = %34, %115
  %48 = phi i64 [ %116, %115 ], [ %29, %34 ]
  %49 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %4, i64 %49) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %50 = load ptr, ptr %4, align 8, !tbaa !5
  %51 = getelementptr i8, ptr %50, i64 40000
  %52 = icmp ult ptr %50, %35
  %53 = icmp ult ptr %5, %51
  %54 = and i1 %52, %53
  br i1 %54, label %84, label %55

55:                                               ; preds = %47, %55
  %56 = phi i64 [ %82, %55 ], [ 0, %47 ]
  %57 = getelementptr inbounds i8, ptr %5, i64 %56
  %58 = load <4 x i8>, ptr %57, align 1, !tbaa !16, !alias.scope !316
  %59 = getelementptr inbounds i8, ptr %57, i64 4
  %60 = load <4 x i8>, ptr %59, align 1, !tbaa !16, !alias.scope !316
  %61 = zext <4 x i8> %58 to <4 x i32>
  %62 = zext <4 x i8> %60 to <4 x i32>
  %63 = getelementptr inbounds i32, ptr %50, i64 %56
  %64 = load <4 x i32>, ptr %63, align 4, !tbaa !95, !alias.scope !319, !noalias !316
  %65 = getelementptr inbounds i32, ptr %63, i64 4
  %66 = load <4 x i32>, ptr %65, align 4, !tbaa !95, !alias.scope !319, !noalias !316
  %67 = add <4 x i32> %64, %61
  %68 = add <4 x i32> %66, %62
  store <4 x i32> %67, ptr %63, align 4, !tbaa !95, !alias.scope !319, !noalias !316
  store <4 x i32> %68, ptr %65, align 4, !tbaa !95, !alias.scope !319, !noalias !316
  %69 = or i64 %56, 8
  %70 = getelementptr inbounds i8, ptr %5, i64 %69
  %71 = load <4 x i8>, ptr %70, align 1, !tbaa !16, !alias.scope !316
  %72 = getelementptr inbounds i8, ptr %70, i64 4
  %73 = load <4 x i8>, ptr %72, align 1, !tbaa !16, !alias.scope !316
  %74 = zext <4 x i8> %71 to <4 x i32>
  %75 = zext <4 x i8> %73 to <4 x i32>
  %76 = getelementptr inbounds i32, ptr %50, i64 %69
  %77 = load <4 x i32>, ptr %76, align 4, !tbaa !95, !alias.scope !319, !noalias !316
  %78 = getelementptr inbounds i32, ptr %76, i64 4
  %79 = load <4 x i32>, ptr %78, align 4, !tbaa !95, !alias.scope !319, !noalias !316
  %80 = add <4 x i32> %77, %74
  %81 = add <4 x i32> %79, %75
  store <4 x i32> %80, ptr %76, align 4, !tbaa !95, !alias.scope !319, !noalias !316
  store <4 x i32> %81, ptr %78, align 4, !tbaa !95, !alias.scope !319, !noalias !316
  %82 = add nuw nsw i64 %56, 16
  %83 = icmp eq i64 %82, 10000
  br i1 %83, label %115, label %55, !llvm.loop !321

84:                                               ; preds = %47, %84
  %85 = phi i64 [ %113, %84 ], [ 0, %47 ]
  %86 = getelementptr inbounds i8, ptr %5, i64 %85
  %87 = load i8, ptr %86, align 1, !tbaa !16
  %88 = zext i8 %87 to i32
  %89 = getelementptr inbounds i32, ptr %50, i64 %85
  %90 = load i32, ptr %89, align 4, !tbaa !95
  %91 = add i32 %90, %88
  store i32 %91, ptr %89, align 4, !tbaa !95
  %92 = or i64 %85, 1
  %93 = getelementptr inbounds i8, ptr %5, i64 %92
  %94 = load i8, ptr %93, align 1, !tbaa !16
  %95 = zext i8 %94 to i32
  %96 = getelementptr inbounds i32, ptr %50, i64 %92
  %97 = load i32, ptr %96, align 4, !tbaa !95
  %98 = add i32 %97, %95
  store i32 %98, ptr %96, align 4, !tbaa !95
  %99 = or i64 %85, 2
  %100 = getelementptr inbounds i8, ptr %5, i64 %99
  %101 = load i8, ptr %100, align 1, !tbaa !16
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds i32, ptr %50, i64 %99
  %104 = load i32, ptr %103, align 4, !tbaa !95
  %105 = add i32 %104, %102
  store i32 %105, ptr %103, align 4, !tbaa !95
  %106 = or i64 %85, 3
  %107 = getelementptr inbounds i8, ptr %5, i64 %106
  %108 = load i8, ptr %107, align 1, !tbaa !16
  %109 = zext i8 %108 to i32
  %110 = getelementptr inbounds i32, ptr %50, i64 %106
  %111 = load i32, ptr %110, align 4, !tbaa !95
  %112 = add i32 %111, %109
  store i32 %112, ptr %110, align 4, !tbaa !95
  %113 = add nuw nsw i64 %85, 4
  %114 = icmp eq i64 %113, 10000
  br i1 %114, label %115, label %84, !llvm.loop !322

115:                                              ; preds = %55, %84
  %116 = add i64 %48, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %36, label %47, !prof !42

118:                                              ; preds = %25, %36
  %119 = landingpad { ptr, i32 }
          cleanup
  %120 = load ptr, ptr %4, align 8, !tbaa !5
  %121 = icmp eq ptr %120, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %45, %43, %118
  %123 = phi { ptr, i32 } [ %119, %118 ], [ %46, %45 ], [ %44, %43 ]
  %124 = phi ptr [ %120, %118 ], [ %6, %45 ], [ %6, %43 ]
  call void @_ZdaPv(ptr noundef nonnull %124) #13
  br label %125

125:                                              ; preds = %122, %118, %41
  %126 = phi { ptr, i32 } [ %42, %41 ], [ %119, %118 ], [ %123, %122 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %126

127:                                              ; preds = %37, %40
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::unique_ptr.55", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %9, align 1, !tbaa !69
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, ptr %4, i64 %11
  store i8 %12, ptr %14, align 1, !tbaa !16
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !70

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i8, ptr %4, i64 %19
  %21 = load i8, ptr %20, align 1, !tbaa !16
  %22 = zext i8 %21 to i64
  %23 = getelementptr inbounds i64, ptr %7, i64 %19
  store i64 %22, ptr %23, align 8, !tbaa !147
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i8, ptr %4, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !16
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds i64, ptr %7, i64 %24
  store i64 %27, ptr %28, align 8, !tbaa !147
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i8, ptr %4, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !16
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds i64, ptr %7, i64 %29
  store i64 %32, ptr %33, align 8, !tbaa !147
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i8, ptr %4, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !16
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds i64, ptr %7, i64 %34
  store i64 %37, ptr %38, align 8, !tbaa !147
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i8, ptr %4, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !16
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds i64, ptr %7, i64 %39
  store i64 %42, ptr %43, align 8, !tbaa !147
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !323

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i8, ptr %4, i64 %47
  %49 = load <8 x i8>, ptr %48, align 1, !tbaa !16
  %50 = getelementptr inbounds i8, ptr %48, i64 8
  %51 = load <8 x i8>, ptr %50, align 1, !tbaa !16
  %52 = getelementptr inbounds i8, ptr %48, i64 16
  %53 = load <8 x i8>, ptr %52, align 1, !tbaa !16
  %54 = getelementptr inbounds i8, ptr %48, i64 24
  %55 = load <8 x i8>, ptr %54, align 1, !tbaa !16
  %56 = zext <8 x i8> %49 to <8 x i64>
  %57 = zext <8 x i8> %51 to <8 x i64>
  %58 = zext <8 x i8> %53 to <8 x i64>
  %59 = zext <8 x i8> %55 to <8 x i64>
  %60 = getelementptr inbounds i64, ptr %5, i64 %47
  store <8 x i64> %56, ptr %60, align 8, !tbaa !147
  %61 = getelementptr inbounds i64, ptr %60, i64 8
  store <8 x i64> %57, ptr %61, align 8, !tbaa !147
  %62 = getelementptr inbounds i64, ptr %60, i64 16
  store <8 x i64> %58, ptr %62, align 8, !tbaa !147
  %63 = getelementptr inbounds i64, ptr %60, i64 24
  store <8 x i64> %59, ptr %63, align 8, !tbaa !147
  %64 = add nuw i64 %47, 32
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !324

66:                                               ; preds = %46
  %67 = getelementptr inbounds i8, ptr %4, i64 9984
  %68 = load i8, ptr %67, align 1, !tbaa !16
  %69 = zext i8 %68 to i64
  %70 = getelementptr inbounds i64, ptr %5, i64 9984
  store i64 %69, ptr %70, align 8, !tbaa !147
  %71 = getelementptr inbounds i8, ptr %4, i64 9985
  %72 = load i8, ptr %71, align 1, !tbaa !16
  %73 = zext i8 %72 to i64
  %74 = getelementptr inbounds i64, ptr %5, i64 9985
  store i64 %73, ptr %74, align 8, !tbaa !147
  %75 = getelementptr inbounds i8, ptr %4, i64 9986
  %76 = load i8, ptr %75, align 1, !tbaa !16
  %77 = zext i8 %76 to i64
  %78 = getelementptr inbounds i64, ptr %5, i64 9986
  store i64 %77, ptr %78, align 8, !tbaa !147
  %79 = getelementptr inbounds i8, ptr %4, i64 9987
  %80 = load i8, ptr %79, align 1, !tbaa !16
  %81 = zext i8 %80 to i64
  %82 = getelementptr inbounds i64, ptr %5, i64 9987
  store i64 %81, ptr %82, align 8, !tbaa !147
  %83 = getelementptr inbounds i8, ptr %4, i64 9988
  %84 = load i8, ptr %83, align 1, !tbaa !16
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds i64, ptr %5, i64 9988
  store i64 %85, ptr %86, align 8, !tbaa !147
  %87 = getelementptr inbounds i8, ptr %4, i64 9989
  %88 = load i8, ptr %87, align 1, !tbaa !16
  %89 = zext i8 %88 to i64
  %90 = getelementptr inbounds i64, ptr %5, i64 9989
  store i64 %89, ptr %90, align 8, !tbaa !147
  %91 = getelementptr inbounds i8, ptr %4, i64 9990
  %92 = load i8, ptr %91, align 1, !tbaa !16
  %93 = zext i8 %92 to i64
  %94 = getelementptr inbounds i64, ptr %5, i64 9990
  store i64 %93, ptr %94, align 8, !tbaa !147
  %95 = getelementptr inbounds i8, ptr %4, i64 9991
  %96 = load i8, ptr %95, align 1, !tbaa !16
  %97 = zext i8 %96 to i64
  %98 = getelementptr inbounds i64, ptr %5, i64 9991
  store i64 %97, ptr %98, align 8, !tbaa !147
  %99 = getelementptr inbounds i8, ptr %4, i64 9992
  %100 = load i8, ptr %99, align 1, !tbaa !16
  %101 = zext i8 %100 to i64
  %102 = getelementptr inbounds i64, ptr %5, i64 9992
  store i64 %101, ptr %102, align 8, !tbaa !147
  %103 = getelementptr inbounds i8, ptr %4, i64 9993
  %104 = load i8, ptr %103, align 1, !tbaa !16
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds i64, ptr %5, i64 9993
  store i64 %105, ptr %106, align 8, !tbaa !147
  %107 = getelementptr inbounds i8, ptr %4, i64 9994
  %108 = load i8, ptr %107, align 1, !tbaa !16
  %109 = zext i8 %108 to i64
  %110 = getelementptr inbounds i64, ptr %5, i64 9994
  store i64 %109, ptr %110, align 8, !tbaa !147
  %111 = getelementptr inbounds i8, ptr %4, i64 9995
  %112 = load i8, ptr %111, align 1, !tbaa !16
  %113 = zext i8 %112 to i64
  %114 = getelementptr inbounds i64, ptr %5, i64 9995
  store i64 %113, ptr %114, align 8, !tbaa !147
  %115 = getelementptr inbounds i8, ptr %4, i64 9996
  %116 = load i8, ptr %115, align 1, !tbaa !16
  %117 = zext i8 %116 to i64
  %118 = getelementptr inbounds i64, ptr %5, i64 9996
  store i64 %117, ptr %118, align 8, !tbaa !147
  %119 = getelementptr inbounds i8, ptr %4, i64 9997
  %120 = load i8, ptr %119, align 1, !tbaa !16
  %121 = zext i8 %120 to i64
  %122 = getelementptr inbounds i64, ptr %5, i64 9997
  store i64 %121, ptr %122, align 8, !tbaa !147
  %123 = getelementptr inbounds i8, ptr %4, i64 9998
  %124 = load i8, ptr %123, align 1, !tbaa !16
  %125 = zext i8 %124 to i64
  %126 = getelementptr inbounds i64, ptr %5, i64 9998
  store i64 %125, ptr %126, align 8, !tbaa !147
  %127 = getelementptr inbounds i8, ptr %4, i64 9999
  %128 = load i8, ptr %127, align 1, !tbaa !16
  %129 = zext i8 %128 to i64
  %130 = getelementptr inbounds i64, ptr %5, i64 9999
  store i64 %129, ptr %130, align 8, !tbaa !147
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %281

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %278

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %274

137:                                              ; preds = %197, %66
  %138 = phi i64 [ 0, %66 ], [ %198, %197 ]
  %139 = getelementptr inbounds i64, ptr %5, i64 %138
  %140 = load i64, ptr %139, align 8, !tbaa !147
  %141 = getelementptr inbounds i64, ptr %7, i64 %138
  %142 = load i64, ptr %141, align 8, !tbaa !147
  %143 = icmp eq i64 %140, %142
  br i1 %143, label %169, label %144

144:                                              ; preds = %190, %183, %176, %169, %137
  %145 = phi i64 [ %138, %137 ], [ %170, %169 ], [ %177, %176 ], [ %184, %183 ], [ %191, %190 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i64, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %167

149:                                              ; preds = %144
  %150 = getelementptr inbounds i8, ptr %4, i64 %146
  %151 = load i8, ptr %150, align 1, !tbaa !16
  %152 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %151)
          to label %153 unwind label %167

153:                                              ; preds = %149
  %154 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %152, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %155 unwind label %167

155:                                              ; preds = %153
  %156 = getelementptr inbounds i64, ptr %5, i64 %146
  %157 = load i64, ptr %156, align 8, !tbaa !147
  %158 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %152, i64 noundef %157)
          to label %159 unwind label %167

159:                                              ; preds = %155
  %160 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %158, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %161 unwind label %167

161:                                              ; preds = %159
  %162 = load i64, ptr %147, align 8, !tbaa !147
  %163 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %158, i64 noundef %162)
          to label %164 unwind label %167

164:                                              ; preds = %161
  %165 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %163, ptr noundef nonnull @.str.149)
          to label %166 unwind label %167

166:                                              ; preds = %164
  call void @exit(i32 noundef 1) #12
  unreachable

167:                                              ; preds = %164, %161, %159, %155, %153, %149, %144
  %168 = landingpad { ptr, i32 }
          cleanup
  br label %274

169:                                              ; preds = %137
  %170 = add nuw nsw i64 %138, 1
  %171 = getelementptr inbounds i64, ptr %5, i64 %170
  %172 = load i64, ptr %171, align 8, !tbaa !147
  %173 = getelementptr inbounds i64, ptr %7, i64 %170
  %174 = load i64, ptr %173, align 8, !tbaa !147
  %175 = icmp eq i64 %172, %174
  br i1 %175, label %176, label %144

176:                                              ; preds = %169
  %177 = add nuw nsw i64 %138, 2
  %178 = getelementptr inbounds i64, ptr %5, i64 %177
  %179 = load i64, ptr %178, align 8, !tbaa !147
  %180 = getelementptr inbounds i64, ptr %7, i64 %177
  %181 = load i64, ptr %180, align 8, !tbaa !147
  %182 = icmp eq i64 %179, %181
  br i1 %182, label %183, label %144

183:                                              ; preds = %176
  %184 = add nuw nsw i64 %138, 3
  %185 = getelementptr inbounds i64, ptr %5, i64 %184
  %186 = load i64, ptr %185, align 8, !tbaa !147
  %187 = getelementptr inbounds i64, ptr %7, i64 %184
  %188 = load i64, ptr %187, align 8, !tbaa !147
  %189 = icmp eq i64 %186, %188
  br i1 %189, label %190, label %144

190:                                              ; preds = %183
  %191 = add nuw nsw i64 %138, 4
  %192 = getelementptr inbounds i64, ptr %5, i64 %191
  %193 = load i64, ptr %192, align 8, !tbaa !147
  %194 = getelementptr inbounds i64, ptr %7, i64 %191
  %195 = load i64, ptr %194, align 8, !tbaa !147
  %196 = icmp eq i64 %193, %195
  br i1 %196, label %197, label %144

197:                                              ; preds = %190
  %198 = add nuw nsw i64 %138, 5
  %199 = icmp eq i64 %198, 10000
  br i1 %199, label %200, label %137, !llvm.loop !325

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %202 = load i8, ptr %201, align 2, !tbaa !23, !range !40, !noundef !41
  %203 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %204 = load i64, ptr %203, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %205 unwind label %216

205:                                              ; preds = %200
  %206 = icmp ne i8 %202, 0
  %207 = icmp eq i64 %204, 0
  %208 = select i1 %206, i1 true, i1 %207
  br i1 %208, label %211, label %209, !prof !42

209:                                              ; preds = %205
  %210 = getelementptr i8, ptr %4, i64 10000
  br label %218

211:                                              ; preds = %271, %205
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %212 unwind label %216

212:                                              ; preds = %211
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %213 = load ptr, ptr %3, align 8, !tbaa !5
  %214 = icmp eq ptr %213, null
  br i1 %214, label %283, label %215

215:                                              ; preds = %212
  call void @_ZdaPv(ptr noundef nonnull %213) #13
  br label %283

216:                                              ; preds = %211, %200
  %217 = landingpad { ptr, i32 }
          cleanup
  br label %274

218:                                              ; preds = %209, %271
  %219 = phi i64 [ %272, %271 ], [ %204, %209 ]
  %220 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %3, i64 %220) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %221 = load ptr, ptr %3, align 8, !tbaa !5
  %222 = getelementptr i8, ptr %221, i64 80000
  %223 = icmp ult ptr %221, %210
  %224 = icmp ult ptr %4, %222
  %225 = and i1 %223, %224
  br i1 %225, label %246, label %226

226:                                              ; preds = %218, %226
  %227 = phi i64 [ %244, %226 ], [ 0, %218 ]
  %228 = getelementptr inbounds i8, ptr %4, i64 %227
  %229 = load <8 x i8>, ptr %228, align 1, !tbaa !16, !alias.scope !326
  %230 = getelementptr inbounds i8, ptr %228, i64 8
  %231 = load <8 x i8>, ptr %230, align 1, !tbaa !16, !alias.scope !326
  %232 = getelementptr inbounds i8, ptr %228, i64 16
  %233 = load <8 x i8>, ptr %232, align 1, !tbaa !16, !alias.scope !326
  %234 = getelementptr inbounds i8, ptr %228, i64 24
  %235 = load <8 x i8>, ptr %234, align 1, !tbaa !16, !alias.scope !326
  %236 = zext <8 x i8> %229 to <8 x i64>
  %237 = zext <8 x i8> %231 to <8 x i64>
  %238 = zext <8 x i8> %233 to <8 x i64>
  %239 = zext <8 x i8> %235 to <8 x i64>
  %240 = getelementptr inbounds i64, ptr %221, i64 %227
  store <8 x i64> %236, ptr %240, align 8, !tbaa !147, !alias.scope !329, !noalias !326
  %241 = getelementptr inbounds i64, ptr %240, i64 8
  store <8 x i64> %237, ptr %241, align 8, !tbaa !147, !alias.scope !329, !noalias !326
  %242 = getelementptr inbounds i64, ptr %240, i64 16
  store <8 x i64> %238, ptr %242, align 8, !tbaa !147, !alias.scope !329, !noalias !326
  %243 = getelementptr inbounds i64, ptr %240, i64 24
  store <8 x i64> %239, ptr %243, align 8, !tbaa !147, !alias.scope !329, !noalias !326
  %244 = add nuw i64 %227, 32
  %245 = icmp eq i64 %244, 9984
  br i1 %245, label %246, label %226, !llvm.loop !331

246:                                              ; preds = %226, %218
  %247 = phi i64 [ 0, %218 ], [ 9984, %226 ]
  br label %248

248:                                              ; preds = %248, %246
  %249 = phi i64 [ %247, %246 ], [ %269, %248 ]
  %250 = getelementptr inbounds i8, ptr %4, i64 %249
  %251 = load i8, ptr %250, align 1, !tbaa !16
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds i64, ptr %221, i64 %249
  store i64 %252, ptr %253, align 8, !tbaa !147
  %254 = or i64 %249, 1
  %255 = getelementptr inbounds i8, ptr %4, i64 %254
  %256 = load i8, ptr %255, align 1, !tbaa !16
  %257 = zext i8 %256 to i64
  %258 = getelementptr inbounds i64, ptr %221, i64 %254
  store i64 %257, ptr %258, align 8, !tbaa !147
  %259 = or i64 %249, 2
  %260 = getelementptr inbounds i8, ptr %4, i64 %259
  %261 = load i8, ptr %260, align 1, !tbaa !16
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds i64, ptr %221, i64 %259
  store i64 %262, ptr %263, align 8, !tbaa !147
  %264 = or i64 %249, 3
  %265 = getelementptr inbounds i8, ptr %4, i64 %264
  %266 = load i8, ptr %265, align 1, !tbaa !16
  %267 = zext i8 %266 to i64
  %268 = getelementptr inbounds i64, ptr %221, i64 %264
  store i64 %267, ptr %268, align 8, !tbaa !147
  %269 = add nuw nsw i64 %249, 4
  %270 = icmp eq i64 %269, 10000
  br i1 %270, label %271, label %248, !llvm.loop !332

271:                                              ; preds = %248
  %272 = add i64 %219, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %211, label %218, !prof !42

274:                                              ; preds = %216, %167, %135
  %275 = phi { ptr, i32 } [ %168, %167 ], [ %217, %216 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %276 = load ptr, ptr %3, align 8, !tbaa !5
  %277 = icmp eq ptr %276, null
  br i1 %277, label %281, label %278

278:                                              ; preds = %274, %133
  %279 = phi { ptr, i32 } [ %134, %133 ], [ %275, %274 ]
  %280 = phi ptr [ %5, %133 ], [ %276, %274 ]
  call void @_ZdaPv(ptr noundef nonnull %280) #13
  br label %281

281:                                              ; preds = %278, %274, %131
  %282 = phi { ptr, i32 } [ %132, %131 ], [ %275, %274 ], [ %279, %278 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %282

283:                                              ; preds = %212, %215
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::unique_ptr.55", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %9, align 1, !tbaa !69
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, ptr %4, i64 %11
  store i8 %12, ptr %14, align 1, !tbaa !16
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !70

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i8, ptr %4, i64 %19
  %21 = load i8, ptr %20, align 1, !tbaa !16
  %22 = zext i8 %21 to i64
  %23 = getelementptr inbounds i64, ptr %7, i64 %19
  store i64 %22, ptr %23, align 8, !tbaa !147
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i8, ptr %4, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !16
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds i64, ptr %7, i64 %24
  store i64 %27, ptr %28, align 8, !tbaa !147
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i8, ptr %4, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !16
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds i64, ptr %7, i64 %29
  store i64 %32, ptr %33, align 8, !tbaa !147
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i8, ptr %4, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !16
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds i64, ptr %7, i64 %34
  store i64 %37, ptr %38, align 8, !tbaa !147
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i8, ptr %4, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !16
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds i64, ptr %7, i64 %39
  store i64 %42, ptr %43, align 8, !tbaa !147
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !323

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i8, ptr %4, i64 %47
  %49 = load <16 x i8>, ptr %48, align 1, !tbaa !16
  %50 = getelementptr inbounds i8, ptr %48, i64 16
  %51 = load <16 x i8>, ptr %50, align 1, !tbaa !16
  %52 = getelementptr inbounds i8, ptr %48, i64 32
  %53 = load <16 x i8>, ptr %52, align 1, !tbaa !16
  %54 = getelementptr inbounds i8, ptr %48, i64 48
  %55 = load <16 x i8>, ptr %54, align 1, !tbaa !16
  %56 = zext <16 x i8> %49 to <16 x i64>
  %57 = zext <16 x i8> %51 to <16 x i64>
  %58 = zext <16 x i8> %53 to <16 x i64>
  %59 = zext <16 x i8> %55 to <16 x i64>
  %60 = getelementptr inbounds i64, ptr %5, i64 %47
  store <16 x i64> %56, ptr %60, align 8, !tbaa !147
  %61 = getelementptr inbounds i64, ptr %60, i64 16
  store <16 x i64> %57, ptr %61, align 8, !tbaa !147
  %62 = getelementptr inbounds i64, ptr %60, i64 32
  store <16 x i64> %58, ptr %62, align 8, !tbaa !147
  %63 = getelementptr inbounds i64, ptr %60, i64 48
  store <16 x i64> %59, ptr %63, align 8, !tbaa !147
  %64 = add nuw i64 %47, 64
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !333

66:                                               ; preds = %46
  %67 = getelementptr inbounds i8, ptr %4, i64 9984
  %68 = load i8, ptr %67, align 1, !tbaa !16
  %69 = zext i8 %68 to i64
  %70 = getelementptr inbounds i64, ptr %5, i64 9984
  store i64 %69, ptr %70, align 8, !tbaa !147
  %71 = getelementptr inbounds i8, ptr %4, i64 9985
  %72 = load i8, ptr %71, align 1, !tbaa !16
  %73 = zext i8 %72 to i64
  %74 = getelementptr inbounds i64, ptr %5, i64 9985
  store i64 %73, ptr %74, align 8, !tbaa !147
  %75 = getelementptr inbounds i8, ptr %4, i64 9986
  %76 = load i8, ptr %75, align 1, !tbaa !16
  %77 = zext i8 %76 to i64
  %78 = getelementptr inbounds i64, ptr %5, i64 9986
  store i64 %77, ptr %78, align 8, !tbaa !147
  %79 = getelementptr inbounds i8, ptr %4, i64 9987
  %80 = load i8, ptr %79, align 1, !tbaa !16
  %81 = zext i8 %80 to i64
  %82 = getelementptr inbounds i64, ptr %5, i64 9987
  store i64 %81, ptr %82, align 8, !tbaa !147
  %83 = getelementptr inbounds i8, ptr %4, i64 9988
  %84 = load i8, ptr %83, align 1, !tbaa !16
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds i64, ptr %5, i64 9988
  store i64 %85, ptr %86, align 8, !tbaa !147
  %87 = getelementptr inbounds i8, ptr %4, i64 9989
  %88 = load i8, ptr %87, align 1, !tbaa !16
  %89 = zext i8 %88 to i64
  %90 = getelementptr inbounds i64, ptr %5, i64 9989
  store i64 %89, ptr %90, align 8, !tbaa !147
  %91 = getelementptr inbounds i8, ptr %4, i64 9990
  %92 = load i8, ptr %91, align 1, !tbaa !16
  %93 = zext i8 %92 to i64
  %94 = getelementptr inbounds i64, ptr %5, i64 9990
  store i64 %93, ptr %94, align 8, !tbaa !147
  %95 = getelementptr inbounds i8, ptr %4, i64 9991
  %96 = load i8, ptr %95, align 1, !tbaa !16
  %97 = zext i8 %96 to i64
  %98 = getelementptr inbounds i64, ptr %5, i64 9991
  store i64 %97, ptr %98, align 8, !tbaa !147
  %99 = getelementptr inbounds i8, ptr %4, i64 9992
  %100 = load i8, ptr %99, align 1, !tbaa !16
  %101 = zext i8 %100 to i64
  %102 = getelementptr inbounds i64, ptr %5, i64 9992
  store i64 %101, ptr %102, align 8, !tbaa !147
  %103 = getelementptr inbounds i8, ptr %4, i64 9993
  %104 = load i8, ptr %103, align 1, !tbaa !16
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds i64, ptr %5, i64 9993
  store i64 %105, ptr %106, align 8, !tbaa !147
  %107 = getelementptr inbounds i8, ptr %4, i64 9994
  %108 = load i8, ptr %107, align 1, !tbaa !16
  %109 = zext i8 %108 to i64
  %110 = getelementptr inbounds i64, ptr %5, i64 9994
  store i64 %109, ptr %110, align 8, !tbaa !147
  %111 = getelementptr inbounds i8, ptr %4, i64 9995
  %112 = load i8, ptr %111, align 1, !tbaa !16
  %113 = zext i8 %112 to i64
  %114 = getelementptr inbounds i64, ptr %5, i64 9995
  store i64 %113, ptr %114, align 8, !tbaa !147
  %115 = getelementptr inbounds i8, ptr %4, i64 9996
  %116 = load i8, ptr %115, align 1, !tbaa !16
  %117 = zext i8 %116 to i64
  %118 = getelementptr inbounds i64, ptr %5, i64 9996
  store i64 %117, ptr %118, align 8, !tbaa !147
  %119 = getelementptr inbounds i8, ptr %4, i64 9997
  %120 = load i8, ptr %119, align 1, !tbaa !16
  %121 = zext i8 %120 to i64
  %122 = getelementptr inbounds i64, ptr %5, i64 9997
  store i64 %121, ptr %122, align 8, !tbaa !147
  %123 = getelementptr inbounds i8, ptr %4, i64 9998
  %124 = load i8, ptr %123, align 1, !tbaa !16
  %125 = zext i8 %124 to i64
  %126 = getelementptr inbounds i64, ptr %5, i64 9998
  store i64 %125, ptr %126, align 8, !tbaa !147
  %127 = getelementptr inbounds i8, ptr %4, i64 9999
  %128 = load i8, ptr %127, align 1, !tbaa !16
  %129 = zext i8 %128 to i64
  %130 = getelementptr inbounds i64, ptr %5, i64 9999
  store i64 %129, ptr %130, align 8, !tbaa !147
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %281

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %278

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %274

137:                                              ; preds = %197, %66
  %138 = phi i64 [ 0, %66 ], [ %198, %197 ]
  %139 = getelementptr inbounds i64, ptr %5, i64 %138
  %140 = load i64, ptr %139, align 8, !tbaa !147
  %141 = getelementptr inbounds i64, ptr %7, i64 %138
  %142 = load i64, ptr %141, align 8, !tbaa !147
  %143 = icmp eq i64 %140, %142
  br i1 %143, label %169, label %144

144:                                              ; preds = %190, %183, %176, %169, %137
  %145 = phi i64 [ %138, %137 ], [ %170, %169 ], [ %177, %176 ], [ %184, %183 ], [ %191, %190 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i64, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %167

149:                                              ; preds = %144
  %150 = getelementptr inbounds i8, ptr %4, i64 %146
  %151 = load i8, ptr %150, align 1, !tbaa !16
  %152 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %151)
          to label %153 unwind label %167

153:                                              ; preds = %149
  %154 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %152, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %155 unwind label %167

155:                                              ; preds = %153
  %156 = getelementptr inbounds i64, ptr %5, i64 %146
  %157 = load i64, ptr %156, align 8, !tbaa !147
  %158 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %152, i64 noundef %157)
          to label %159 unwind label %167

159:                                              ; preds = %155
  %160 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %158, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %161 unwind label %167

161:                                              ; preds = %159
  %162 = load i64, ptr %147, align 8, !tbaa !147
  %163 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %158, i64 noundef %162)
          to label %164 unwind label %167

164:                                              ; preds = %161
  %165 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %163, ptr noundef nonnull @.str.149)
          to label %166 unwind label %167

166:                                              ; preds = %164
  call void @exit(i32 noundef 1) #12
  unreachable

167:                                              ; preds = %164, %161, %159, %155, %153, %149, %144
  %168 = landingpad { ptr, i32 }
          cleanup
  br label %274

169:                                              ; preds = %137
  %170 = add nuw nsw i64 %138, 1
  %171 = getelementptr inbounds i64, ptr %5, i64 %170
  %172 = load i64, ptr %171, align 8, !tbaa !147
  %173 = getelementptr inbounds i64, ptr %7, i64 %170
  %174 = load i64, ptr %173, align 8, !tbaa !147
  %175 = icmp eq i64 %172, %174
  br i1 %175, label %176, label %144

176:                                              ; preds = %169
  %177 = add nuw nsw i64 %138, 2
  %178 = getelementptr inbounds i64, ptr %5, i64 %177
  %179 = load i64, ptr %178, align 8, !tbaa !147
  %180 = getelementptr inbounds i64, ptr %7, i64 %177
  %181 = load i64, ptr %180, align 8, !tbaa !147
  %182 = icmp eq i64 %179, %181
  br i1 %182, label %183, label %144

183:                                              ; preds = %176
  %184 = add nuw nsw i64 %138, 3
  %185 = getelementptr inbounds i64, ptr %5, i64 %184
  %186 = load i64, ptr %185, align 8, !tbaa !147
  %187 = getelementptr inbounds i64, ptr %7, i64 %184
  %188 = load i64, ptr %187, align 8, !tbaa !147
  %189 = icmp eq i64 %186, %188
  br i1 %189, label %190, label %144

190:                                              ; preds = %183
  %191 = add nuw nsw i64 %138, 4
  %192 = getelementptr inbounds i64, ptr %5, i64 %191
  %193 = load i64, ptr %192, align 8, !tbaa !147
  %194 = getelementptr inbounds i64, ptr %7, i64 %191
  %195 = load i64, ptr %194, align 8, !tbaa !147
  %196 = icmp eq i64 %193, %195
  br i1 %196, label %197, label %144

197:                                              ; preds = %190
  %198 = add nuw nsw i64 %138, 5
  %199 = icmp eq i64 %198, 10000
  br i1 %199, label %200, label %137, !llvm.loop !325

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %202 = load i8, ptr %201, align 2, !tbaa !23, !range !40, !noundef !41
  %203 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %204 = load i64, ptr %203, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %205 unwind label %216

205:                                              ; preds = %200
  %206 = icmp ne i8 %202, 0
  %207 = icmp eq i64 %204, 0
  %208 = select i1 %206, i1 true, i1 %207
  br i1 %208, label %211, label %209, !prof !42

209:                                              ; preds = %205
  %210 = getelementptr i8, ptr %4, i64 10000
  br label %218

211:                                              ; preds = %271, %205
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %212 unwind label %216

212:                                              ; preds = %211
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %213 = load ptr, ptr %3, align 8, !tbaa !5
  %214 = icmp eq ptr %213, null
  br i1 %214, label %283, label %215

215:                                              ; preds = %212
  call void @_ZdaPv(ptr noundef nonnull %213) #13
  br label %283

216:                                              ; preds = %211, %200
  %217 = landingpad { ptr, i32 }
          cleanup
  br label %274

218:                                              ; preds = %209, %271
  %219 = phi i64 [ %272, %271 ], [ %204, %209 ]
  %220 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %3, i64 %220) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %221 = load ptr, ptr %3, align 8, !tbaa !5
  %222 = getelementptr i8, ptr %221, i64 80000
  %223 = icmp ult ptr %221, %210
  %224 = icmp ult ptr %4, %222
  %225 = and i1 %223, %224
  br i1 %225, label %246, label %226

226:                                              ; preds = %218, %226
  %227 = phi i64 [ %244, %226 ], [ 0, %218 ]
  %228 = getelementptr inbounds i8, ptr %4, i64 %227
  %229 = load <16 x i8>, ptr %228, align 1, !tbaa !16, !alias.scope !334
  %230 = getelementptr inbounds i8, ptr %228, i64 16
  %231 = load <16 x i8>, ptr %230, align 1, !tbaa !16, !alias.scope !334
  %232 = getelementptr inbounds i8, ptr %228, i64 32
  %233 = load <16 x i8>, ptr %232, align 1, !tbaa !16, !alias.scope !334
  %234 = getelementptr inbounds i8, ptr %228, i64 48
  %235 = load <16 x i8>, ptr %234, align 1, !tbaa !16, !alias.scope !334
  %236 = zext <16 x i8> %229 to <16 x i64>
  %237 = zext <16 x i8> %231 to <16 x i64>
  %238 = zext <16 x i8> %233 to <16 x i64>
  %239 = zext <16 x i8> %235 to <16 x i64>
  %240 = getelementptr inbounds i64, ptr %221, i64 %227
  store <16 x i64> %236, ptr %240, align 8, !tbaa !147, !alias.scope !337, !noalias !334
  %241 = getelementptr inbounds i64, ptr %240, i64 16
  store <16 x i64> %237, ptr %241, align 8, !tbaa !147, !alias.scope !337, !noalias !334
  %242 = getelementptr inbounds i64, ptr %240, i64 32
  store <16 x i64> %238, ptr %242, align 8, !tbaa !147, !alias.scope !337, !noalias !334
  %243 = getelementptr inbounds i64, ptr %240, i64 48
  store <16 x i64> %239, ptr %243, align 8, !tbaa !147, !alias.scope !337, !noalias !334
  %244 = add nuw i64 %227, 64
  %245 = icmp eq i64 %244, 9984
  br i1 %245, label %246, label %226, !llvm.loop !339

246:                                              ; preds = %226, %218
  %247 = phi i64 [ 0, %218 ], [ 9984, %226 ]
  br label %248

248:                                              ; preds = %248, %246
  %249 = phi i64 [ %247, %246 ], [ %269, %248 ]
  %250 = getelementptr inbounds i8, ptr %4, i64 %249
  %251 = load i8, ptr %250, align 1, !tbaa !16
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds i64, ptr %221, i64 %249
  store i64 %252, ptr %253, align 8, !tbaa !147
  %254 = or i64 %249, 1
  %255 = getelementptr inbounds i8, ptr %4, i64 %254
  %256 = load i8, ptr %255, align 1, !tbaa !16
  %257 = zext i8 %256 to i64
  %258 = getelementptr inbounds i64, ptr %221, i64 %254
  store i64 %257, ptr %258, align 8, !tbaa !147
  %259 = or i64 %249, 2
  %260 = getelementptr inbounds i8, ptr %4, i64 %259
  %261 = load i8, ptr %260, align 1, !tbaa !16
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds i64, ptr %221, i64 %259
  store i64 %262, ptr %263, align 8, !tbaa !147
  %264 = or i64 %249, 3
  %265 = getelementptr inbounds i8, ptr %4, i64 %264
  %266 = load i8, ptr %265, align 1, !tbaa !16
  %267 = zext i8 %266 to i64
  %268 = getelementptr inbounds i64, ptr %221, i64 %264
  store i64 %267, ptr %268, align 8, !tbaa !147
  %269 = add nuw nsw i64 %249, 4
  %270 = icmp eq i64 %269, 10000
  br i1 %270, label %271, label %248, !llvm.loop !340

271:                                              ; preds = %248
  %272 = add i64 %219, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %211, label %218, !prof !42

274:                                              ; preds = %216, %167, %135
  %275 = phi { ptr, i32 } [ %168, %167 ], [ %217, %216 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %276 = load ptr, ptr %3, align 8, !tbaa !5
  %277 = icmp eq ptr %276, null
  br i1 %277, label %281, label %278

278:                                              ; preds = %274, %133
  %279 = phi { ptr, i32 } [ %134, %133 ], [ %275, %274 ]
  %280 = phi ptr [ %5, %133 ], [ %276, %274 ]
  call void @_ZdaPv(ptr noundef nonnull %280) #13
  br label %281

281:                                              ; preds = %278, %274, %131
  %282 = phi { ptr, i32 } [ %132, %131 ], [ %275, %274 ], [ %279, %278 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %282

283:                                              ; preds = %212, %215
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z53benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.43", align 1
  %3 = alloca %"class.std::unique_ptr.55", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %6 unwind label %67

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %8 unwind label %69

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #11
  store i8 0, ptr %2, align 1, !tbaa !67
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  store i8 -1, ptr %9, align 1, !tbaa !69
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %2)
          to label %13 unwind label %71

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, ptr %4, i64 %11
  store i8 %12, ptr %14, align 1, !tbaa !16
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !70

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i8, ptr %4, i64 %19
  %21 = load i8, ptr %20, align 1, !tbaa !16
  %22 = zext i8 %21 to i64
  %23 = getelementptr inbounds i64, ptr %7, i64 %19
  store i64 %22, ptr %23, align 8, !tbaa !147
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i8, ptr %4, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !16
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds i64, ptr %7, i64 %24
  store i64 %27, ptr %28, align 8, !tbaa !147
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i8, ptr %4, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !16
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds i64, ptr %7, i64 %29
  store i64 %32, ptr %33, align 8, !tbaa !147
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i8, ptr %4, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !16
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds i64, ptr %7, i64 %34
  store i64 %37, ptr %38, align 8, !tbaa !147
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i8, ptr %4, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !16
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds i64, ptr %7, i64 %39
  store i64 %42, ptr %43, align 8, !tbaa !147
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !323

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %65, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i8, ptr %4, i64 %47
  %49 = load <2 x i8>, ptr %48, align 1, !tbaa !16
  %50 = getelementptr inbounds i8, ptr %48, i64 2
  %51 = load <2 x i8>, ptr %50, align 1, !tbaa !16
  %52 = zext <2 x i8> %49 to <2 x i64>
  %53 = zext <2 x i8> %51 to <2 x i64>
  %54 = getelementptr inbounds i64, ptr %5, i64 %47
  store <2 x i64> %52, ptr %54, align 8, !tbaa !147
  %55 = getelementptr inbounds i64, ptr %54, i64 2
  store <2 x i64> %53, ptr %55, align 8, !tbaa !147
  %56 = or i64 %47, 4
  %57 = getelementptr inbounds i8, ptr %4, i64 %56
  %58 = load <2 x i8>, ptr %57, align 1, !tbaa !16
  %59 = getelementptr inbounds i8, ptr %57, i64 2
  %60 = load <2 x i8>, ptr %59, align 1, !tbaa !16
  %61 = zext <2 x i8> %58 to <2 x i64>
  %62 = zext <2 x i8> %60 to <2 x i64>
  %63 = getelementptr inbounds i64, ptr %5, i64 %56
  store <2 x i64> %61, ptr %63, align 8, !tbaa !147
  %64 = getelementptr inbounds i64, ptr %63, i64 2
  store <2 x i64> %62, ptr %64, align 8, !tbaa !147
  %65 = add nuw nsw i64 %47, 8
  %66 = icmp eq i64 %65, 10000
  br i1 %66, label %73, label %46, !llvm.loop !341

67:                                               ; preds = %1
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %221

69:                                               ; preds = %6
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %218

71:                                               ; preds = %10
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %214

73:                                               ; preds = %46, %133
  %74 = phi i64 [ %134, %133 ], [ 0, %46 ]
  %75 = getelementptr inbounds i64, ptr %5, i64 %74
  %76 = load i64, ptr %75, align 8, !tbaa !147
  %77 = getelementptr inbounds i64, ptr %7, i64 %74
  %78 = load i64, ptr %77, align 8, !tbaa !147
  %79 = icmp eq i64 %76, %78
  br i1 %79, label %105, label %80

80:                                               ; preds = %126, %119, %112, %105, %73
  %81 = phi i64 [ %74, %73 ], [ %106, %105 ], [ %113, %112 ], [ %120, %119 ], [ %127, %126 ]
  %82 = and i64 %81, 4294967295
  %83 = getelementptr inbounds i64, ptr %7, i64 %82
  %84 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %85 unwind label %103

85:                                               ; preds = %80
  %86 = getelementptr inbounds i8, ptr %4, i64 %82
  %87 = load i8, ptr %86, align 1, !tbaa !16
  %88 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %87)
          to label %89 unwind label %103

89:                                               ; preds = %85
  %90 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %88, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %91 unwind label %103

91:                                               ; preds = %89
  %92 = getelementptr inbounds i64, ptr %5, i64 %82
  %93 = load i64, ptr %92, align 8, !tbaa !147
  %94 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %88, i64 noundef %93)
          to label %95 unwind label %103

95:                                               ; preds = %91
  %96 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %94, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %97 unwind label %103

97:                                               ; preds = %95
  %98 = load i64, ptr %83, align 8, !tbaa !147
  %99 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %94, i64 noundef %98)
          to label %100 unwind label %103

100:                                              ; preds = %97
  %101 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %99, ptr noundef nonnull @.str.149)
          to label %102 unwind label %103

102:                                              ; preds = %100
  call void @exit(i32 noundef 1) #12
  unreachable

103:                                              ; preds = %100, %97, %95, %91, %89, %85, %80
  %104 = landingpad { ptr, i32 }
          cleanup
  br label %214

105:                                              ; preds = %73
  %106 = add nuw nsw i64 %74, 1
  %107 = getelementptr inbounds i64, ptr %5, i64 %106
  %108 = load i64, ptr %107, align 8, !tbaa !147
  %109 = getelementptr inbounds i64, ptr %7, i64 %106
  %110 = load i64, ptr %109, align 8, !tbaa !147
  %111 = icmp eq i64 %108, %110
  br i1 %111, label %112, label %80

112:                                              ; preds = %105
  %113 = add nuw nsw i64 %74, 2
  %114 = getelementptr inbounds i64, ptr %5, i64 %113
  %115 = load i64, ptr %114, align 8, !tbaa !147
  %116 = getelementptr inbounds i64, ptr %7, i64 %113
  %117 = load i64, ptr %116, align 8, !tbaa !147
  %118 = icmp eq i64 %115, %117
  br i1 %118, label %119, label %80

119:                                              ; preds = %112
  %120 = add nuw nsw i64 %74, 3
  %121 = getelementptr inbounds i64, ptr %5, i64 %120
  %122 = load i64, ptr %121, align 8, !tbaa !147
  %123 = getelementptr inbounds i64, ptr %7, i64 %120
  %124 = load i64, ptr %123, align 8, !tbaa !147
  %125 = icmp eq i64 %122, %124
  br i1 %125, label %126, label %80

126:                                              ; preds = %119
  %127 = add nuw nsw i64 %74, 4
  %128 = getelementptr inbounds i64, ptr %5, i64 %127
  %129 = load i64, ptr %128, align 8, !tbaa !147
  %130 = getelementptr inbounds i64, ptr %7, i64 %127
  %131 = load i64, ptr %130, align 8, !tbaa !147
  %132 = icmp eq i64 %129, %131
  br i1 %132, label %133, label %80

133:                                              ; preds = %126
  %134 = add nuw nsw i64 %74, 5
  %135 = icmp eq i64 %134, 10000
  br i1 %135, label %136, label %73, !llvm.loop !325

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %138 = load i8, ptr %137, align 2, !tbaa !23, !range !40, !noundef !41
  %139 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %140 = load i64, ptr %139, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %141 unwind label %152

141:                                              ; preds = %136
  %142 = icmp ne i8 %138, 0
  %143 = icmp eq i64 %140, 0
  %144 = select i1 %142, i1 true, i1 %143
  br i1 %144, label %147, label %145, !prof !42

145:                                              ; preds = %141
  %146 = getelementptr i8, ptr %4, i64 10000
  br label %154

147:                                              ; preds = %211, %141
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %148 unwind label %152

148:                                              ; preds = %147
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %149 = load ptr, ptr %3, align 8, !tbaa !5
  %150 = icmp eq ptr %149, null
  br i1 %150, label %223, label %151

151:                                              ; preds = %148
  call void @_ZdaPv(ptr noundef nonnull %149) #13
  br label %223

152:                                              ; preds = %147, %136
  %153 = landingpad { ptr, i32 }
          cleanup
  br label %214

154:                                              ; preds = %145, %211
  %155 = phi i64 [ %212, %211 ], [ %140, %145 ]
  %156 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %3, i64 %156) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %157 = load ptr, ptr %3, align 8, !tbaa !5
  %158 = getelementptr i8, ptr %157, i64 80000
  %159 = icmp ult ptr %157, %146
  %160 = icmp ult ptr %4, %158
  %161 = and i1 %159, %160
  br i1 %161, label %183, label %162

162:                                              ; preds = %154, %162
  %163 = phi i64 [ %181, %162 ], [ 0, %154 ]
  %164 = getelementptr inbounds i8, ptr %4, i64 %163
  %165 = load <2 x i8>, ptr %164, align 1, !tbaa !16, !alias.scope !342
  %166 = getelementptr inbounds i8, ptr %164, i64 2
  %167 = load <2 x i8>, ptr %166, align 1, !tbaa !16, !alias.scope !342
  %168 = zext <2 x i8> %165 to <2 x i64>
  %169 = zext <2 x i8> %167 to <2 x i64>
  %170 = getelementptr inbounds i64, ptr %157, i64 %163
  store <2 x i64> %168, ptr %170, align 8, !tbaa !147, !alias.scope !345, !noalias !342
  %171 = getelementptr inbounds i64, ptr %170, i64 2
  store <2 x i64> %169, ptr %171, align 8, !tbaa !147, !alias.scope !345, !noalias !342
  %172 = or i64 %163, 4
  %173 = getelementptr inbounds i8, ptr %4, i64 %172
  %174 = load <2 x i8>, ptr %173, align 1, !tbaa !16, !alias.scope !342
  %175 = getelementptr inbounds i8, ptr %173, i64 2
  %176 = load <2 x i8>, ptr %175, align 1, !tbaa !16, !alias.scope !342
  %177 = zext <2 x i8> %174 to <2 x i64>
  %178 = zext <2 x i8> %176 to <2 x i64>
  %179 = getelementptr inbounds i64, ptr %157, i64 %172
  store <2 x i64> %177, ptr %179, align 8, !tbaa !147, !alias.scope !345, !noalias !342
  %180 = getelementptr inbounds i64, ptr %179, i64 2
  store <2 x i64> %178, ptr %180, align 8, !tbaa !147, !alias.scope !345, !noalias !342
  %181 = add nuw nsw i64 %163, 8
  %182 = icmp eq i64 %181, 10000
  br i1 %182, label %211, label %162, !llvm.loop !347

183:                                              ; preds = %154, %183
  %184 = phi i64 [ %209, %183 ], [ 0, %154 ]
  %185 = getelementptr inbounds i8, ptr %4, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !16
  %187 = zext i8 %186 to i64
  %188 = getelementptr inbounds i64, ptr %157, i64 %184
  store i64 %187, ptr %188, align 8, !tbaa !147
  %189 = add nuw nsw i64 %184, 1
  %190 = getelementptr inbounds i8, ptr %4, i64 %189
  %191 = load i8, ptr %190, align 1, !tbaa !16
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds i64, ptr %157, i64 %189
  store i64 %192, ptr %193, align 8, !tbaa !147
  %194 = add nuw nsw i64 %184, 2
  %195 = getelementptr inbounds i8, ptr %4, i64 %194
  %196 = load i8, ptr %195, align 1, !tbaa !16
  %197 = zext i8 %196 to i64
  %198 = getelementptr inbounds i64, ptr %157, i64 %194
  store i64 %197, ptr %198, align 8, !tbaa !147
  %199 = add nuw nsw i64 %184, 3
  %200 = getelementptr inbounds i8, ptr %4, i64 %199
  %201 = load i8, ptr %200, align 1, !tbaa !16
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds i64, ptr %157, i64 %199
  store i64 %202, ptr %203, align 8, !tbaa !147
  %204 = add nuw nsw i64 %184, 4
  %205 = getelementptr inbounds i8, ptr %4, i64 %204
  %206 = load i8, ptr %205, align 1, !tbaa !16
  %207 = zext i8 %206 to i64
  %208 = getelementptr inbounds i64, ptr %157, i64 %204
  store i64 %207, ptr %208, align 8, !tbaa !147
  %209 = add nuw nsw i64 %184, 5
  %210 = icmp eq i64 %209, 10000
  br i1 %210, label %211, label %183, !llvm.loop !348

211:                                              ; preds = %162, %183
  %212 = add i64 %155, -1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %147, label %154, !prof !42

214:                                              ; preds = %152, %103, %71
  %215 = phi { ptr, i32 } [ %104, %103 ], [ %153, %152 ], [ %72, %71 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %216 = load ptr, ptr %3, align 8, !tbaa !5
  %217 = icmp eq ptr %216, null
  br i1 %217, label %221, label %218

218:                                              ; preds = %214, %69
  %219 = phi { ptr, i32 } [ %70, %69 ], [ %215, %214 ]
  %220 = phi ptr [ %5, %69 ], [ %216, %214 ]
  call void @_ZdaPv(ptr noundef nonnull %220) #13
  br label %221

221:                                              ; preds = %218, %214, %67
  %222 = phi { ptr, i32 } [ %68, %67 ], [ %215, %214 ], [ %219, %218 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %222

223:                                              ; preds = %148, %151
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::uniform_int_distribution.43", align 1
  %4 = alloca %"class.std::unique_ptr.55", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %7 unwind label %41

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %3) #11
  store i8 0, ptr %3, align 1, !tbaa !67
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %3, i64 0, i32 1
  store i8 -1, ptr %8, align 1, !tbaa !69
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %3)
          to label %12 unwind label %45

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, ptr %5, i64 %10
  store i8 %11, ptr %13, align 1, !tbaa !16
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !70

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %17, align 8, !tbaa !146
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %21 unwind label %43

21:                                               ; preds = %18
  %22 = getelementptr inbounds i64, ptr %6, i64 %19
  store i64 %20, ptr %22, align 8, !tbaa !147
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !148

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %119

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %36, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr i8, ptr %5, i64 10000
  br label %47

36:                                               ; preds = %116, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %37 unwind label %119

37:                                               ; preds = %36
  %38 = load ptr, ptr %4, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %128, label %40

40:                                               ; preds = %37
  call void @_ZdaPv(ptr noundef nonnull %38) #13
  br label %128

41:                                               ; preds = %1
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %126

43:                                               ; preds = %18
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %123

45:                                               ; preds = %9
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %123

47:                                               ; preds = %34, %116
  %48 = phi i64 [ %117, %116 ], [ %29, %34 ]
  %49 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %4, i64 %49) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %50 = load ptr, ptr %4, align 8, !tbaa !5
  %51 = getelementptr i8, ptr %50, i64 80000
  %52 = icmp ult ptr %50, %35
  %53 = icmp ult ptr %5, %51
  %54 = and i1 %52, %53
  br i1 %54, label %83, label %55

55:                                               ; preds = %47, %55
  %56 = phi i64 [ %81, %55 ], [ 0, %47 ]
  %57 = getelementptr inbounds i8, ptr %5, i64 %56
  %58 = load <8 x i8>, ptr %57, align 1, !tbaa !16, !alias.scope !349
  %59 = getelementptr inbounds i8, ptr %57, i64 8
  %60 = load <8 x i8>, ptr %59, align 1, !tbaa !16, !alias.scope !349
  %61 = getelementptr inbounds i8, ptr %57, i64 16
  %62 = load <8 x i8>, ptr %61, align 1, !tbaa !16, !alias.scope !349
  %63 = getelementptr inbounds i8, ptr %57, i64 24
  %64 = load <8 x i8>, ptr %63, align 1, !tbaa !16, !alias.scope !349
  %65 = zext <8 x i8> %58 to <8 x i64>
  %66 = zext <8 x i8> %60 to <8 x i64>
  %67 = zext <8 x i8> %62 to <8 x i64>
  %68 = zext <8 x i8> %64 to <8 x i64>
  %69 = getelementptr inbounds i64, ptr %50, i64 %56
  %70 = load <8 x i64>, ptr %69, align 8, !tbaa !147, !alias.scope !352, !noalias !349
  %71 = getelementptr inbounds i64, ptr %69, i64 8
  %72 = load <8 x i64>, ptr %71, align 8, !tbaa !147, !alias.scope !352, !noalias !349
  %73 = getelementptr inbounds i64, ptr %69, i64 16
  %74 = load <8 x i64>, ptr %73, align 8, !tbaa !147, !alias.scope !352, !noalias !349
  %75 = getelementptr inbounds i64, ptr %69, i64 24
  %76 = load <8 x i64>, ptr %75, align 8, !tbaa !147, !alias.scope !352, !noalias !349
  %77 = add <8 x i64> %70, %65
  %78 = add <8 x i64> %72, %66
  %79 = add <8 x i64> %74, %67
  %80 = add <8 x i64> %76, %68
  store <8 x i64> %77, ptr %69, align 8, !tbaa !147, !alias.scope !352, !noalias !349
  store <8 x i64> %78, ptr %71, align 8, !tbaa !147, !alias.scope !352, !noalias !349
  store <8 x i64> %79, ptr %73, align 8, !tbaa !147, !alias.scope !352, !noalias !349
  store <8 x i64> %80, ptr %75, align 8, !tbaa !147, !alias.scope !352, !noalias !349
  %81 = add nuw i64 %56, 32
  %82 = icmp eq i64 %81, 9984
  br i1 %82, label %83, label %55, !llvm.loop !354

83:                                               ; preds = %55, %47
  %84 = phi i64 [ 0, %47 ], [ 9984, %55 ]
  br label %85

85:                                               ; preds = %85, %83
  %86 = phi i64 [ %84, %83 ], [ %114, %85 ]
  %87 = getelementptr inbounds i8, ptr %5, i64 %86
  %88 = load i8, ptr %87, align 1, !tbaa !16
  %89 = zext i8 %88 to i64
  %90 = getelementptr inbounds i64, ptr %50, i64 %86
  %91 = load i64, ptr %90, align 8, !tbaa !147
  %92 = add i64 %91, %89
  store i64 %92, ptr %90, align 8, !tbaa !147
  %93 = or i64 %86, 1
  %94 = getelementptr inbounds i8, ptr %5, i64 %93
  %95 = load i8, ptr %94, align 1, !tbaa !16
  %96 = zext i8 %95 to i64
  %97 = getelementptr inbounds i64, ptr %50, i64 %93
  %98 = load i64, ptr %97, align 8, !tbaa !147
  %99 = add i64 %98, %96
  store i64 %99, ptr %97, align 8, !tbaa !147
  %100 = or i64 %86, 2
  %101 = getelementptr inbounds i8, ptr %5, i64 %100
  %102 = load i8, ptr %101, align 1, !tbaa !16
  %103 = zext i8 %102 to i64
  %104 = getelementptr inbounds i64, ptr %50, i64 %100
  %105 = load i64, ptr %104, align 8, !tbaa !147
  %106 = add i64 %105, %103
  store i64 %106, ptr %104, align 8, !tbaa !147
  %107 = or i64 %86, 3
  %108 = getelementptr inbounds i8, ptr %5, i64 %107
  %109 = load i8, ptr %108, align 1, !tbaa !16
  %110 = zext i8 %109 to i64
  %111 = getelementptr inbounds i64, ptr %50, i64 %107
  %112 = load i64, ptr %111, align 8, !tbaa !147
  %113 = add i64 %112, %110
  store i64 %113, ptr %111, align 8, !tbaa !147
  %114 = add nuw nsw i64 %86, 4
  %115 = icmp eq i64 %114, 10000
  br i1 %115, label %116, label %85, !llvm.loop !355

116:                                              ; preds = %85
  %117 = add i64 %48, -1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %36, label %47, !prof !42

119:                                              ; preds = %25, %36
  %120 = landingpad { ptr, i32 }
          cleanup
  %121 = load ptr, ptr %4, align 8, !tbaa !5
  %122 = icmp eq ptr %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %45, %43, %119
  %124 = phi { ptr, i32 } [ %120, %119 ], [ %46, %45 ], [ %44, %43 ]
  %125 = phi ptr [ %121, %119 ], [ %6, %45 ], [ %6, %43 ]
  call void @_ZdaPv(ptr noundef nonnull %125) #13
  br label %126

126:                                              ; preds = %123, %119, %41
  %127 = phi { ptr, i32 } [ %42, %41 ], [ %120, %119 ], [ %124, %123 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %127

128:                                              ; preds = %37, %40
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::uniform_int_distribution.43", align 1
  %4 = alloca %"class.std::unique_ptr.55", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %7 unwind label %41

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %3) #11
  store i8 0, ptr %3, align 1, !tbaa !67
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %3, i64 0, i32 1
  store i8 -1, ptr %8, align 1, !tbaa !69
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %3)
          to label %12 unwind label %45

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, ptr %5, i64 %10
  store i8 %11, ptr %13, align 1, !tbaa !16
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !70

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %17, align 8, !tbaa !146
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %21 unwind label %43

21:                                               ; preds = %18
  %22 = getelementptr inbounds i64, ptr %6, i64 %19
  store i64 %20, ptr %22, align 8, !tbaa !147
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !148

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %119

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %36, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr i8, ptr %5, i64 10000
  br label %47

36:                                               ; preds = %116, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %37 unwind label %119

37:                                               ; preds = %36
  %38 = load ptr, ptr %4, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %128, label %40

40:                                               ; preds = %37
  call void @_ZdaPv(ptr noundef nonnull %38) #13
  br label %128

41:                                               ; preds = %1
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %126

43:                                               ; preds = %18
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %123

45:                                               ; preds = %9
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %123

47:                                               ; preds = %34, %116
  %48 = phi i64 [ %117, %116 ], [ %29, %34 ]
  %49 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %4, i64 %49) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %50 = load ptr, ptr %4, align 8, !tbaa !5
  %51 = getelementptr i8, ptr %50, i64 80000
  %52 = icmp ult ptr %50, %35
  %53 = icmp ult ptr %5, %51
  %54 = and i1 %52, %53
  br i1 %54, label %83, label %55

55:                                               ; preds = %47, %55
  %56 = phi i64 [ %81, %55 ], [ 0, %47 ]
  %57 = getelementptr inbounds i8, ptr %5, i64 %56
  %58 = load <16 x i8>, ptr %57, align 1, !tbaa !16, !alias.scope !356
  %59 = getelementptr inbounds i8, ptr %57, i64 16
  %60 = load <16 x i8>, ptr %59, align 1, !tbaa !16, !alias.scope !356
  %61 = getelementptr inbounds i8, ptr %57, i64 32
  %62 = load <16 x i8>, ptr %61, align 1, !tbaa !16, !alias.scope !356
  %63 = getelementptr inbounds i8, ptr %57, i64 48
  %64 = load <16 x i8>, ptr %63, align 1, !tbaa !16, !alias.scope !356
  %65 = zext <16 x i8> %58 to <16 x i64>
  %66 = zext <16 x i8> %60 to <16 x i64>
  %67 = zext <16 x i8> %62 to <16 x i64>
  %68 = zext <16 x i8> %64 to <16 x i64>
  %69 = getelementptr inbounds i64, ptr %50, i64 %56
  %70 = load <16 x i64>, ptr %69, align 8, !tbaa !147, !alias.scope !359, !noalias !356
  %71 = getelementptr inbounds i64, ptr %69, i64 16
  %72 = load <16 x i64>, ptr %71, align 8, !tbaa !147, !alias.scope !359, !noalias !356
  %73 = getelementptr inbounds i64, ptr %69, i64 32
  %74 = load <16 x i64>, ptr %73, align 8, !tbaa !147, !alias.scope !359, !noalias !356
  %75 = getelementptr inbounds i64, ptr %69, i64 48
  %76 = load <16 x i64>, ptr %75, align 8, !tbaa !147, !alias.scope !359, !noalias !356
  %77 = add <16 x i64> %70, %65
  %78 = add <16 x i64> %72, %66
  %79 = add <16 x i64> %74, %67
  %80 = add <16 x i64> %76, %68
  store <16 x i64> %77, ptr %69, align 8, !tbaa !147, !alias.scope !359, !noalias !356
  store <16 x i64> %78, ptr %71, align 8, !tbaa !147, !alias.scope !359, !noalias !356
  store <16 x i64> %79, ptr %73, align 8, !tbaa !147, !alias.scope !359, !noalias !356
  store <16 x i64> %80, ptr %75, align 8, !tbaa !147, !alias.scope !359, !noalias !356
  %81 = add nuw i64 %56, 64
  %82 = icmp eq i64 %81, 9984
  br i1 %82, label %83, label %55, !llvm.loop !361

83:                                               ; preds = %55, %47
  %84 = phi i64 [ 0, %47 ], [ 9984, %55 ]
  br label %85

85:                                               ; preds = %85, %83
  %86 = phi i64 [ %84, %83 ], [ %114, %85 ]
  %87 = getelementptr inbounds i8, ptr %5, i64 %86
  %88 = load i8, ptr %87, align 1, !tbaa !16
  %89 = zext i8 %88 to i64
  %90 = getelementptr inbounds i64, ptr %50, i64 %86
  %91 = load i64, ptr %90, align 8, !tbaa !147
  %92 = add i64 %91, %89
  store i64 %92, ptr %90, align 8, !tbaa !147
  %93 = or i64 %86, 1
  %94 = getelementptr inbounds i8, ptr %5, i64 %93
  %95 = load i8, ptr %94, align 1, !tbaa !16
  %96 = zext i8 %95 to i64
  %97 = getelementptr inbounds i64, ptr %50, i64 %93
  %98 = load i64, ptr %97, align 8, !tbaa !147
  %99 = add i64 %98, %96
  store i64 %99, ptr %97, align 8, !tbaa !147
  %100 = or i64 %86, 2
  %101 = getelementptr inbounds i8, ptr %5, i64 %100
  %102 = load i8, ptr %101, align 1, !tbaa !16
  %103 = zext i8 %102 to i64
  %104 = getelementptr inbounds i64, ptr %50, i64 %100
  %105 = load i64, ptr %104, align 8, !tbaa !147
  %106 = add i64 %105, %103
  store i64 %106, ptr %104, align 8, !tbaa !147
  %107 = or i64 %86, 3
  %108 = getelementptr inbounds i8, ptr %5, i64 %107
  %109 = load i8, ptr %108, align 1, !tbaa !16
  %110 = zext i8 %109 to i64
  %111 = getelementptr inbounds i64, ptr %50, i64 %107
  %112 = load i64, ptr %111, align 8, !tbaa !147
  %113 = add i64 %112, %110
  store i64 %113, ptr %111, align 8, !tbaa !147
  %114 = add nuw nsw i64 %86, 4
  %115 = icmp eq i64 %114, 10000
  br i1 %115, label %116, label %85, !llvm.loop !362

116:                                              ; preds = %85
  %117 = add i64 %48, -1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %36, label %47, !prof !42

119:                                              ; preds = %25, %36
  %120 = landingpad { ptr, i32 }
          cleanup
  %121 = load ptr, ptr %4, align 8, !tbaa !5
  %122 = icmp eq ptr %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %45, %43, %119
  %124 = phi { ptr, i32 } [ %120, %119 ], [ %46, %45 ], [ %44, %43 ]
  %125 = phi ptr [ %121, %119 ], [ %6, %45 ], [ %6, %43 ]
  call void @_ZdaPv(ptr noundef nonnull %125) #13
  br label %126

126:                                              ; preds = %123, %119, %41
  %127 = phi { ptr, i32 } [ %42, %41 ], [ %120, %119 ], [ %124, %123 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %127

128:                                              ; preds = %37, %40
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::uniform_int_distribution.43", align 1
  %4 = alloca %"class.std::unique_ptr.55", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %7 unwind label %41

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %3) #11
  store i8 0, ptr %3, align 1, !tbaa !67
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %3, i64 0, i32 1
  store i8 -1, ptr %8, align 1, !tbaa !69
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %3)
          to label %12 unwind label %45

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, ptr %5, i64 %10
  store i8 %11, ptr %13, align 1, !tbaa !16
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !70

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %17, align 8, !tbaa !146
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %21 unwind label %43

21:                                               ; preds = %18
  %22 = getelementptr inbounds i64, ptr %6, i64 %19
  store i64 %20, ptr %22, align 8, !tbaa !147
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !148

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %118

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %36, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr i8, ptr %5, i64 10000
  br label %47

36:                                               ; preds = %115, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %37 unwind label %118

37:                                               ; preds = %36
  %38 = load ptr, ptr %4, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %127, label %40

40:                                               ; preds = %37
  call void @_ZdaPv(ptr noundef nonnull %38) #13
  br label %127

41:                                               ; preds = %1
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %125

43:                                               ; preds = %18
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %122

45:                                               ; preds = %9
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %122

47:                                               ; preds = %34, %115
  %48 = phi i64 [ %116, %115 ], [ %29, %34 ]
  %49 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %4, i64 %49) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %50 = load ptr, ptr %4, align 8, !tbaa !5
  %51 = getelementptr i8, ptr %50, i64 80000
  %52 = icmp ult ptr %50, %35
  %53 = icmp ult ptr %5, %51
  %54 = and i1 %52, %53
  br i1 %54, label %84, label %55

55:                                               ; preds = %47, %55
  %56 = phi i64 [ %82, %55 ], [ 0, %47 ]
  %57 = getelementptr inbounds i8, ptr %5, i64 %56
  %58 = load <2 x i8>, ptr %57, align 1, !tbaa !16, !alias.scope !363
  %59 = getelementptr inbounds i8, ptr %57, i64 2
  %60 = load <2 x i8>, ptr %59, align 1, !tbaa !16, !alias.scope !363
  %61 = zext <2 x i8> %58 to <2 x i64>
  %62 = zext <2 x i8> %60 to <2 x i64>
  %63 = getelementptr inbounds i64, ptr %50, i64 %56
  %64 = load <2 x i64>, ptr %63, align 8, !tbaa !147, !alias.scope !366, !noalias !363
  %65 = getelementptr inbounds i64, ptr %63, i64 2
  %66 = load <2 x i64>, ptr %65, align 8, !tbaa !147, !alias.scope !366, !noalias !363
  %67 = add <2 x i64> %64, %61
  %68 = add <2 x i64> %66, %62
  store <2 x i64> %67, ptr %63, align 8, !tbaa !147, !alias.scope !366, !noalias !363
  store <2 x i64> %68, ptr %65, align 8, !tbaa !147, !alias.scope !366, !noalias !363
  %69 = or i64 %56, 4
  %70 = getelementptr inbounds i8, ptr %5, i64 %69
  %71 = load <2 x i8>, ptr %70, align 1, !tbaa !16, !alias.scope !363
  %72 = getelementptr inbounds i8, ptr %70, i64 2
  %73 = load <2 x i8>, ptr %72, align 1, !tbaa !16, !alias.scope !363
  %74 = zext <2 x i8> %71 to <2 x i64>
  %75 = zext <2 x i8> %73 to <2 x i64>
  %76 = getelementptr inbounds i64, ptr %50, i64 %69
  %77 = load <2 x i64>, ptr %76, align 8, !tbaa !147, !alias.scope !366, !noalias !363
  %78 = getelementptr inbounds i64, ptr %76, i64 2
  %79 = load <2 x i64>, ptr %78, align 8, !tbaa !147, !alias.scope !366, !noalias !363
  %80 = add <2 x i64> %77, %74
  %81 = add <2 x i64> %79, %75
  store <2 x i64> %80, ptr %76, align 8, !tbaa !147, !alias.scope !366, !noalias !363
  store <2 x i64> %81, ptr %78, align 8, !tbaa !147, !alias.scope !366, !noalias !363
  %82 = add nuw nsw i64 %56, 8
  %83 = icmp eq i64 %82, 10000
  br i1 %83, label %115, label %55, !llvm.loop !368

84:                                               ; preds = %47, %84
  %85 = phi i64 [ %113, %84 ], [ 0, %47 ]
  %86 = getelementptr inbounds i8, ptr %5, i64 %85
  %87 = load i8, ptr %86, align 1, !tbaa !16
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds i64, ptr %50, i64 %85
  %90 = load i64, ptr %89, align 8, !tbaa !147
  %91 = add i64 %90, %88
  store i64 %91, ptr %89, align 8, !tbaa !147
  %92 = or i64 %85, 1
  %93 = getelementptr inbounds i8, ptr %5, i64 %92
  %94 = load i8, ptr %93, align 1, !tbaa !16
  %95 = zext i8 %94 to i64
  %96 = getelementptr inbounds i64, ptr %50, i64 %92
  %97 = load i64, ptr %96, align 8, !tbaa !147
  %98 = add i64 %97, %95
  store i64 %98, ptr %96, align 8, !tbaa !147
  %99 = or i64 %85, 2
  %100 = getelementptr inbounds i8, ptr %5, i64 %99
  %101 = load i8, ptr %100, align 1, !tbaa !16
  %102 = zext i8 %101 to i64
  %103 = getelementptr inbounds i64, ptr %50, i64 %99
  %104 = load i64, ptr %103, align 8, !tbaa !147
  %105 = add i64 %104, %102
  store i64 %105, ptr %103, align 8, !tbaa !147
  %106 = or i64 %85, 3
  %107 = getelementptr inbounds i8, ptr %5, i64 %106
  %108 = load i8, ptr %107, align 1, !tbaa !16
  %109 = zext i8 %108 to i64
  %110 = getelementptr inbounds i64, ptr %50, i64 %106
  %111 = load i64, ptr %110, align 8, !tbaa !147
  %112 = add i64 %111, %109
  store i64 %112, ptr %110, align 8, !tbaa !147
  %113 = add nuw nsw i64 %85, 4
  %114 = icmp eq i64 %113, 10000
  br i1 %114, label %115, label %84, !llvm.loop !369

115:                                              ; preds = %55, %84
  %116 = add i64 %48, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %36, label %47, !prof !42

118:                                              ; preds = %25, %36
  %119 = landingpad { ptr, i32 }
          cleanup
  %120 = load ptr, ptr %4, align 8, !tbaa !5
  %121 = icmp eq ptr %120, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %45, %43, %118
  %123 = phi { ptr, i32 } [ %119, %118 ], [ %46, %45 ], [ %44, %43 ]
  %124 = phi ptr [ %120, %118 ], [ %6, %45 ], [ %6, %43 ]
  call void @_ZdaPv(ptr noundef nonnull %124) #13
  br label %125

125:                                              ; preds = %122, %118, %41
  %126 = phi { ptr, i32 } [ %42, %41 ], [ %119, %118 ], [ %123, %122 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %126

127:                                              ; preds = %37, %40
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::unique_ptr.44", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %9, align 2, !tbaa !12
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i16, ptr %4, i64 %11
  store i16 %12, ptr %14, align 2, !tbaa !13
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !14

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i16, ptr %4, i64 %19
  %21 = load i16, ptr %20, align 2, !tbaa !13
  %22 = zext i16 %21 to i32
  %23 = getelementptr inbounds i32, ptr %7, i64 %19
  store i32 %22, ptr %23, align 4, !tbaa !95
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i16, ptr %4, i64 %24
  %26 = load i16, ptr %25, align 2, !tbaa !13
  %27 = zext i16 %26 to i32
  %28 = getelementptr inbounds i32, ptr %7, i64 %24
  store i32 %27, ptr %28, align 4, !tbaa !95
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i16, ptr %4, i64 %29
  %31 = load i16, ptr %30, align 2, !tbaa !13
  %32 = zext i16 %31 to i32
  %33 = getelementptr inbounds i32, ptr %7, i64 %29
  store i32 %32, ptr %33, align 4, !tbaa !95
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i16, ptr %4, i64 %34
  %36 = load i16, ptr %35, align 2, !tbaa !13
  %37 = zext i16 %36 to i32
  %38 = getelementptr inbounds i32, ptr %7, i64 %34
  store i32 %37, ptr %38, align 4, !tbaa !95
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i16, ptr %4, i64 %39
  %41 = load i16, ptr %40, align 2, !tbaa !13
  %42 = zext i16 %41 to i32
  %43 = getelementptr inbounds i32, ptr %7, i64 %39
  store i32 %42, ptr %43, align 4, !tbaa !95
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !370

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i16, ptr %4, i64 %47
  %49 = load <8 x i16>, ptr %48, align 2, !tbaa !13
  %50 = getelementptr inbounds i16, ptr %48, i64 8
  %51 = load <8 x i16>, ptr %50, align 2, !tbaa !13
  %52 = getelementptr inbounds i16, ptr %48, i64 16
  %53 = load <8 x i16>, ptr %52, align 2, !tbaa !13
  %54 = getelementptr inbounds i16, ptr %48, i64 24
  %55 = load <8 x i16>, ptr %54, align 2, !tbaa !13
  %56 = zext <8 x i16> %49 to <8 x i32>
  %57 = zext <8 x i16> %51 to <8 x i32>
  %58 = zext <8 x i16> %53 to <8 x i32>
  %59 = zext <8 x i16> %55 to <8 x i32>
  %60 = getelementptr inbounds i32, ptr %5, i64 %47
  store <8 x i32> %56, ptr %60, align 4, !tbaa !95
  %61 = getelementptr inbounds i32, ptr %60, i64 8
  store <8 x i32> %57, ptr %61, align 4, !tbaa !95
  %62 = getelementptr inbounds i32, ptr %60, i64 16
  store <8 x i32> %58, ptr %62, align 4, !tbaa !95
  %63 = getelementptr inbounds i32, ptr %60, i64 24
  store <8 x i32> %59, ptr %63, align 4, !tbaa !95
  %64 = add nuw i64 %47, 32
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !371

66:                                               ; preds = %46
  %67 = getelementptr inbounds i16, ptr %4, i64 9984
  %68 = load i16, ptr %67, align 2, !tbaa !13
  %69 = zext i16 %68 to i32
  %70 = getelementptr inbounds i32, ptr %5, i64 9984
  store i32 %69, ptr %70, align 4, !tbaa !95
  %71 = getelementptr inbounds i16, ptr %4, i64 9985
  %72 = load i16, ptr %71, align 2, !tbaa !13
  %73 = zext i16 %72 to i32
  %74 = getelementptr inbounds i32, ptr %5, i64 9985
  store i32 %73, ptr %74, align 4, !tbaa !95
  %75 = getelementptr inbounds i16, ptr %4, i64 9986
  %76 = load i16, ptr %75, align 2, !tbaa !13
  %77 = zext i16 %76 to i32
  %78 = getelementptr inbounds i32, ptr %5, i64 9986
  store i32 %77, ptr %78, align 4, !tbaa !95
  %79 = getelementptr inbounds i16, ptr %4, i64 9987
  %80 = load i16, ptr %79, align 2, !tbaa !13
  %81 = zext i16 %80 to i32
  %82 = getelementptr inbounds i32, ptr %5, i64 9987
  store i32 %81, ptr %82, align 4, !tbaa !95
  %83 = getelementptr inbounds i16, ptr %4, i64 9988
  %84 = load i16, ptr %83, align 2, !tbaa !13
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds i32, ptr %5, i64 9988
  store i32 %85, ptr %86, align 4, !tbaa !95
  %87 = getelementptr inbounds i16, ptr %4, i64 9989
  %88 = load i16, ptr %87, align 2, !tbaa !13
  %89 = zext i16 %88 to i32
  %90 = getelementptr inbounds i32, ptr %5, i64 9989
  store i32 %89, ptr %90, align 4, !tbaa !95
  %91 = getelementptr inbounds i16, ptr %4, i64 9990
  %92 = load i16, ptr %91, align 2, !tbaa !13
  %93 = zext i16 %92 to i32
  %94 = getelementptr inbounds i32, ptr %5, i64 9990
  store i32 %93, ptr %94, align 4, !tbaa !95
  %95 = getelementptr inbounds i16, ptr %4, i64 9991
  %96 = load i16, ptr %95, align 2, !tbaa !13
  %97 = zext i16 %96 to i32
  %98 = getelementptr inbounds i32, ptr %5, i64 9991
  store i32 %97, ptr %98, align 4, !tbaa !95
  %99 = getelementptr inbounds i16, ptr %4, i64 9992
  %100 = load i16, ptr %99, align 2, !tbaa !13
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds i32, ptr %5, i64 9992
  store i32 %101, ptr %102, align 4, !tbaa !95
  %103 = getelementptr inbounds i16, ptr %4, i64 9993
  %104 = load i16, ptr %103, align 2, !tbaa !13
  %105 = zext i16 %104 to i32
  %106 = getelementptr inbounds i32, ptr %5, i64 9993
  store i32 %105, ptr %106, align 4, !tbaa !95
  %107 = getelementptr inbounds i16, ptr %4, i64 9994
  %108 = load i16, ptr %107, align 2, !tbaa !13
  %109 = zext i16 %108 to i32
  %110 = getelementptr inbounds i32, ptr %5, i64 9994
  store i32 %109, ptr %110, align 4, !tbaa !95
  %111 = getelementptr inbounds i16, ptr %4, i64 9995
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = zext i16 %112 to i32
  %114 = getelementptr inbounds i32, ptr %5, i64 9995
  store i32 %113, ptr %114, align 4, !tbaa !95
  %115 = getelementptr inbounds i16, ptr %4, i64 9996
  %116 = load i16, ptr %115, align 2, !tbaa !13
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds i32, ptr %5, i64 9996
  store i32 %117, ptr %118, align 4, !tbaa !95
  %119 = getelementptr inbounds i16, ptr %4, i64 9997
  %120 = load i16, ptr %119, align 2, !tbaa !13
  %121 = zext i16 %120 to i32
  %122 = getelementptr inbounds i32, ptr %5, i64 9997
  store i32 %121, ptr %122, align 4, !tbaa !95
  %123 = getelementptr inbounds i16, ptr %4, i64 9998
  %124 = load i16, ptr %123, align 2, !tbaa !13
  %125 = zext i16 %124 to i32
  %126 = getelementptr inbounds i32, ptr %5, i64 9998
  store i32 %125, ptr %126, align 4, !tbaa !95
  %127 = getelementptr inbounds i16, ptr %4, i64 9999
  %128 = load i16, ptr %127, align 2, !tbaa !13
  %129 = zext i16 %128 to i32
  %130 = getelementptr inbounds i32, ptr %5, i64 9999
  store i32 %129, ptr %130, align 4, !tbaa !95
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %318

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %315

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %311

137:                                              ; preds = %200, %66
  %138 = phi i64 [ 0, %66 ], [ %201, %200 ]
  %139 = getelementptr inbounds i32, ptr %5, i64 %138
  %140 = load i32, ptr %139, align 4, !tbaa !95
  %141 = getelementptr inbounds i32, ptr %7, i64 %138
  %142 = load i32, ptr %141, align 4, !tbaa !95
  %143 = icmp eq i32 %140, %142
  br i1 %143, label %172, label %144

144:                                              ; preds = %193, %186, %179, %172, %137
  %145 = phi i64 [ %138, %137 ], [ %173, %172 ], [ %180, %179 ], [ %187, %186 ], [ %194, %193 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i32, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %170

149:                                              ; preds = %144
  %150 = getelementptr inbounds i16, ptr %4, i64 %146
  %151 = load i16, ptr %150, align 2, !tbaa !13
  %152 = zext i16 %151 to i64
  %153 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %152)
          to label %154 unwind label %170

154:                                              ; preds = %149
  %155 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %153, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %156 unwind label %170

156:                                              ; preds = %154
  %157 = getelementptr inbounds i32, ptr %5, i64 %146
  %158 = load i32, ptr %157, align 4, !tbaa !95
  %159 = zext i32 %158 to i64
  %160 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %153, i64 noundef %159)
          to label %161 unwind label %170

161:                                              ; preds = %156
  %162 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %160, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %163 unwind label %170

163:                                              ; preds = %161
  %164 = load i32, ptr %147, align 4, !tbaa !95
  %165 = zext i32 %164 to i64
  %166 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %160, i64 noundef %165)
          to label %167 unwind label %170

167:                                              ; preds = %163
  %168 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %166, ptr noundef nonnull @.str.149)
          to label %169 unwind label %170

169:                                              ; preds = %167
  call void @exit(i32 noundef 1) #12
  unreachable

170:                                              ; preds = %167, %163, %161, %156, %154, %149, %144
  %171 = landingpad { ptr, i32 }
          cleanup
  br label %311

172:                                              ; preds = %137
  %173 = add nuw nsw i64 %138, 1
  %174 = getelementptr inbounds i32, ptr %5, i64 %173
  %175 = load i32, ptr %174, align 4, !tbaa !95
  %176 = getelementptr inbounds i32, ptr %7, i64 %173
  %177 = load i32, ptr %176, align 4, !tbaa !95
  %178 = icmp eq i32 %175, %177
  br i1 %178, label %179, label %144

179:                                              ; preds = %172
  %180 = add nuw nsw i64 %138, 2
  %181 = getelementptr inbounds i32, ptr %5, i64 %180
  %182 = load i32, ptr %181, align 4, !tbaa !95
  %183 = getelementptr inbounds i32, ptr %7, i64 %180
  %184 = load i32, ptr %183, align 4, !tbaa !95
  %185 = icmp eq i32 %182, %184
  br i1 %185, label %186, label %144

186:                                              ; preds = %179
  %187 = add nuw nsw i64 %138, 3
  %188 = getelementptr inbounds i32, ptr %5, i64 %187
  %189 = load i32, ptr %188, align 4, !tbaa !95
  %190 = getelementptr inbounds i32, ptr %7, i64 %187
  %191 = load i32, ptr %190, align 4, !tbaa !95
  %192 = icmp eq i32 %189, %191
  br i1 %192, label %193, label %144

193:                                              ; preds = %186
  %194 = add nuw nsw i64 %138, 4
  %195 = getelementptr inbounds i32, ptr %5, i64 %194
  %196 = load i32, ptr %195, align 4, !tbaa !95
  %197 = getelementptr inbounds i32, ptr %7, i64 %194
  %198 = load i32, ptr %197, align 4, !tbaa !95
  %199 = icmp eq i32 %196, %198
  br i1 %199, label %200, label %144

200:                                              ; preds = %193
  %201 = add nuw nsw i64 %138, 5
  %202 = icmp eq i64 %201, 10000
  br i1 %202, label %203, label %137, !llvm.loop !372

203:                                              ; preds = %200
  %204 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %205 = load i8, ptr %204, align 2, !tbaa !23, !range !40, !noundef !41
  %206 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %207 = load i64, ptr %206, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %208 unwind label %234

208:                                              ; preds = %203
  %209 = icmp ne i8 %205, 0
  %210 = icmp eq i64 %207, 0
  %211 = select i1 %209, i1 true, i1 %210
  br i1 %211, label %229, label %212, !prof !42

212:                                              ; preds = %208
  %213 = getelementptr inbounds i16, ptr %4, i64 9984
  %214 = getelementptr inbounds i16, ptr %4, i64 9985
  %215 = getelementptr inbounds i16, ptr %4, i64 9986
  %216 = getelementptr inbounds i16, ptr %4, i64 9987
  %217 = getelementptr inbounds i16, ptr %4, i64 9988
  %218 = getelementptr inbounds i16, ptr %4, i64 9989
  %219 = getelementptr inbounds i16, ptr %4, i64 9990
  %220 = getelementptr inbounds i16, ptr %4, i64 9991
  %221 = getelementptr inbounds i16, ptr %4, i64 9992
  %222 = getelementptr inbounds i16, ptr %4, i64 9993
  %223 = getelementptr inbounds i16, ptr %4, i64 9994
  %224 = getelementptr inbounds i16, ptr %4, i64 9995
  %225 = getelementptr inbounds i16, ptr %4, i64 9996
  %226 = getelementptr inbounds i16, ptr %4, i64 9997
  %227 = getelementptr inbounds i16, ptr %4, i64 9998
  %228 = getelementptr inbounds i16, ptr %4, i64 9999
  br label %236

229:                                              ; preds = %260, %208
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %230 unwind label %234

230:                                              ; preds = %229
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %231 = load ptr, ptr %3, align 8, !tbaa !5
  %232 = icmp eq ptr %231, null
  br i1 %232, label %320, label %233

233:                                              ; preds = %230
  call void @_ZdaPv(ptr noundef nonnull %231) #13
  br label %320

234:                                              ; preds = %229, %203
  %235 = landingpad { ptr, i32 }
          cleanup
  br label %311

236:                                              ; preds = %212, %260
  %237 = phi i64 [ %309, %260 ], [ %207, %212 ]
  %238 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %3, i64 %238) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %239 = load ptr, ptr %3, align 8, !tbaa !5
  br label %240

240:                                              ; preds = %240, %236
  %241 = phi i64 [ 0, %236 ], [ %258, %240 ]
  %242 = getelementptr inbounds i16, ptr %4, i64 %241
  %243 = load <8 x i16>, ptr %242, align 2, !tbaa !13
  %244 = getelementptr inbounds i16, ptr %242, i64 8
  %245 = load <8 x i16>, ptr %244, align 2, !tbaa !13
  %246 = getelementptr inbounds i16, ptr %242, i64 16
  %247 = load <8 x i16>, ptr %246, align 2, !tbaa !13
  %248 = getelementptr inbounds i16, ptr %242, i64 24
  %249 = load <8 x i16>, ptr %248, align 2, !tbaa !13
  %250 = zext <8 x i16> %243 to <8 x i32>
  %251 = zext <8 x i16> %245 to <8 x i32>
  %252 = zext <8 x i16> %247 to <8 x i32>
  %253 = zext <8 x i16> %249 to <8 x i32>
  %254 = getelementptr inbounds i32, ptr %239, i64 %241
  store <8 x i32> %250, ptr %254, align 4, !tbaa !95
  %255 = getelementptr inbounds i32, ptr %254, i64 8
  store <8 x i32> %251, ptr %255, align 4, !tbaa !95
  %256 = getelementptr inbounds i32, ptr %254, i64 16
  store <8 x i32> %252, ptr %256, align 4, !tbaa !95
  %257 = getelementptr inbounds i32, ptr %254, i64 24
  store <8 x i32> %253, ptr %257, align 4, !tbaa !95
  %258 = add nuw i64 %241, 32
  %259 = icmp eq i64 %258, 9984
  br i1 %259, label %260, label %240, !llvm.loop !373

260:                                              ; preds = %240
  %261 = load i16, ptr %213, align 2, !tbaa !13
  %262 = zext i16 %261 to i32
  %263 = getelementptr inbounds i32, ptr %239, i64 9984
  store i32 %262, ptr %263, align 4, !tbaa !95
  %264 = load i16, ptr %214, align 2, !tbaa !13
  %265 = zext i16 %264 to i32
  %266 = getelementptr inbounds i32, ptr %239, i64 9985
  store i32 %265, ptr %266, align 4, !tbaa !95
  %267 = load i16, ptr %215, align 2, !tbaa !13
  %268 = zext i16 %267 to i32
  %269 = getelementptr inbounds i32, ptr %239, i64 9986
  store i32 %268, ptr %269, align 4, !tbaa !95
  %270 = load i16, ptr %216, align 2, !tbaa !13
  %271 = zext i16 %270 to i32
  %272 = getelementptr inbounds i32, ptr %239, i64 9987
  store i32 %271, ptr %272, align 4, !tbaa !95
  %273 = load i16, ptr %217, align 2, !tbaa !13
  %274 = zext i16 %273 to i32
  %275 = getelementptr inbounds i32, ptr %239, i64 9988
  store i32 %274, ptr %275, align 4, !tbaa !95
  %276 = load i16, ptr %218, align 2, !tbaa !13
  %277 = zext i16 %276 to i32
  %278 = getelementptr inbounds i32, ptr %239, i64 9989
  store i32 %277, ptr %278, align 4, !tbaa !95
  %279 = load i16, ptr %219, align 2, !tbaa !13
  %280 = zext i16 %279 to i32
  %281 = getelementptr inbounds i32, ptr %239, i64 9990
  store i32 %280, ptr %281, align 4, !tbaa !95
  %282 = load i16, ptr %220, align 2, !tbaa !13
  %283 = zext i16 %282 to i32
  %284 = getelementptr inbounds i32, ptr %239, i64 9991
  store i32 %283, ptr %284, align 4, !tbaa !95
  %285 = load i16, ptr %221, align 2, !tbaa !13
  %286 = zext i16 %285 to i32
  %287 = getelementptr inbounds i32, ptr %239, i64 9992
  store i32 %286, ptr %287, align 4, !tbaa !95
  %288 = load i16, ptr %222, align 2, !tbaa !13
  %289 = zext i16 %288 to i32
  %290 = getelementptr inbounds i32, ptr %239, i64 9993
  store i32 %289, ptr %290, align 4, !tbaa !95
  %291 = load i16, ptr %223, align 2, !tbaa !13
  %292 = zext i16 %291 to i32
  %293 = getelementptr inbounds i32, ptr %239, i64 9994
  store i32 %292, ptr %293, align 4, !tbaa !95
  %294 = load i16, ptr %224, align 2, !tbaa !13
  %295 = zext i16 %294 to i32
  %296 = getelementptr inbounds i32, ptr %239, i64 9995
  store i32 %295, ptr %296, align 4, !tbaa !95
  %297 = load i16, ptr %225, align 2, !tbaa !13
  %298 = zext i16 %297 to i32
  %299 = getelementptr inbounds i32, ptr %239, i64 9996
  store i32 %298, ptr %299, align 4, !tbaa !95
  %300 = load i16, ptr %226, align 2, !tbaa !13
  %301 = zext i16 %300 to i32
  %302 = getelementptr inbounds i32, ptr %239, i64 9997
  store i32 %301, ptr %302, align 4, !tbaa !95
  %303 = load i16, ptr %227, align 2, !tbaa !13
  %304 = zext i16 %303 to i32
  %305 = getelementptr inbounds i32, ptr %239, i64 9998
  store i32 %304, ptr %305, align 4, !tbaa !95
  %306 = load i16, ptr %228, align 2, !tbaa !13
  %307 = zext i16 %306 to i32
  %308 = getelementptr inbounds i32, ptr %239, i64 9999
  store i32 %307, ptr %308, align 4, !tbaa !95
  %309 = add i64 %237, -1
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %229, label %236, !prof !42

311:                                              ; preds = %234, %170, %135
  %312 = phi { ptr, i32 } [ %171, %170 ], [ %235, %234 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %313 = load ptr, ptr %3, align 8, !tbaa !5
  %314 = icmp eq ptr %313, null
  br i1 %314, label %318, label %315

315:                                              ; preds = %311, %133
  %316 = phi { ptr, i32 } [ %134, %133 ], [ %312, %311 ]
  %317 = phi ptr [ %5, %133 ], [ %313, %311 ]
  call void @_ZdaPv(ptr noundef nonnull %317) #13
  br label %318

318:                                              ; preds = %315, %311, %131
  %319 = phi { ptr, i32 } [ %132, %131 ], [ %312, %311 ], [ %316, %315 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %319

320:                                              ; preds = %230, %233
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::unique_ptr.44", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %9, align 2, !tbaa !12
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i16, ptr %4, i64 %11
  store i16 %12, ptr %14, align 2, !tbaa !13
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !14

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i16, ptr %4, i64 %19
  %21 = load i16, ptr %20, align 2, !tbaa !13
  %22 = zext i16 %21 to i32
  %23 = getelementptr inbounds i32, ptr %7, i64 %19
  store i32 %22, ptr %23, align 4, !tbaa !95
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i16, ptr %4, i64 %24
  %26 = load i16, ptr %25, align 2, !tbaa !13
  %27 = zext i16 %26 to i32
  %28 = getelementptr inbounds i32, ptr %7, i64 %24
  store i32 %27, ptr %28, align 4, !tbaa !95
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i16, ptr %4, i64 %29
  %31 = load i16, ptr %30, align 2, !tbaa !13
  %32 = zext i16 %31 to i32
  %33 = getelementptr inbounds i32, ptr %7, i64 %29
  store i32 %32, ptr %33, align 4, !tbaa !95
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i16, ptr %4, i64 %34
  %36 = load i16, ptr %35, align 2, !tbaa !13
  %37 = zext i16 %36 to i32
  %38 = getelementptr inbounds i32, ptr %7, i64 %34
  store i32 %37, ptr %38, align 4, !tbaa !95
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i16, ptr %4, i64 %39
  %41 = load i16, ptr %40, align 2, !tbaa !13
  %42 = zext i16 %41 to i32
  %43 = getelementptr inbounds i32, ptr %7, i64 %39
  store i32 %42, ptr %43, align 4, !tbaa !95
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !370

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i16, ptr %4, i64 %47
  %49 = load <16 x i16>, ptr %48, align 2, !tbaa !13
  %50 = getelementptr inbounds i16, ptr %48, i64 16
  %51 = load <16 x i16>, ptr %50, align 2, !tbaa !13
  %52 = getelementptr inbounds i16, ptr %48, i64 32
  %53 = load <16 x i16>, ptr %52, align 2, !tbaa !13
  %54 = getelementptr inbounds i16, ptr %48, i64 48
  %55 = load <16 x i16>, ptr %54, align 2, !tbaa !13
  %56 = zext <16 x i16> %49 to <16 x i32>
  %57 = zext <16 x i16> %51 to <16 x i32>
  %58 = zext <16 x i16> %53 to <16 x i32>
  %59 = zext <16 x i16> %55 to <16 x i32>
  %60 = getelementptr inbounds i32, ptr %5, i64 %47
  store <16 x i32> %56, ptr %60, align 4, !tbaa !95
  %61 = getelementptr inbounds i32, ptr %60, i64 16
  store <16 x i32> %57, ptr %61, align 4, !tbaa !95
  %62 = getelementptr inbounds i32, ptr %60, i64 32
  store <16 x i32> %58, ptr %62, align 4, !tbaa !95
  %63 = getelementptr inbounds i32, ptr %60, i64 48
  store <16 x i32> %59, ptr %63, align 4, !tbaa !95
  %64 = add nuw i64 %47, 64
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !374

66:                                               ; preds = %46
  %67 = getelementptr inbounds i16, ptr %4, i64 9984
  %68 = load i16, ptr %67, align 2, !tbaa !13
  %69 = zext i16 %68 to i32
  %70 = getelementptr inbounds i32, ptr %5, i64 9984
  store i32 %69, ptr %70, align 4, !tbaa !95
  %71 = getelementptr inbounds i16, ptr %4, i64 9985
  %72 = load i16, ptr %71, align 2, !tbaa !13
  %73 = zext i16 %72 to i32
  %74 = getelementptr inbounds i32, ptr %5, i64 9985
  store i32 %73, ptr %74, align 4, !tbaa !95
  %75 = getelementptr inbounds i16, ptr %4, i64 9986
  %76 = load i16, ptr %75, align 2, !tbaa !13
  %77 = zext i16 %76 to i32
  %78 = getelementptr inbounds i32, ptr %5, i64 9986
  store i32 %77, ptr %78, align 4, !tbaa !95
  %79 = getelementptr inbounds i16, ptr %4, i64 9987
  %80 = load i16, ptr %79, align 2, !tbaa !13
  %81 = zext i16 %80 to i32
  %82 = getelementptr inbounds i32, ptr %5, i64 9987
  store i32 %81, ptr %82, align 4, !tbaa !95
  %83 = getelementptr inbounds i16, ptr %4, i64 9988
  %84 = load i16, ptr %83, align 2, !tbaa !13
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds i32, ptr %5, i64 9988
  store i32 %85, ptr %86, align 4, !tbaa !95
  %87 = getelementptr inbounds i16, ptr %4, i64 9989
  %88 = load i16, ptr %87, align 2, !tbaa !13
  %89 = zext i16 %88 to i32
  %90 = getelementptr inbounds i32, ptr %5, i64 9989
  store i32 %89, ptr %90, align 4, !tbaa !95
  %91 = getelementptr inbounds i16, ptr %4, i64 9990
  %92 = load i16, ptr %91, align 2, !tbaa !13
  %93 = zext i16 %92 to i32
  %94 = getelementptr inbounds i32, ptr %5, i64 9990
  store i32 %93, ptr %94, align 4, !tbaa !95
  %95 = getelementptr inbounds i16, ptr %4, i64 9991
  %96 = load i16, ptr %95, align 2, !tbaa !13
  %97 = zext i16 %96 to i32
  %98 = getelementptr inbounds i32, ptr %5, i64 9991
  store i32 %97, ptr %98, align 4, !tbaa !95
  %99 = getelementptr inbounds i16, ptr %4, i64 9992
  %100 = load i16, ptr %99, align 2, !tbaa !13
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds i32, ptr %5, i64 9992
  store i32 %101, ptr %102, align 4, !tbaa !95
  %103 = getelementptr inbounds i16, ptr %4, i64 9993
  %104 = load i16, ptr %103, align 2, !tbaa !13
  %105 = zext i16 %104 to i32
  %106 = getelementptr inbounds i32, ptr %5, i64 9993
  store i32 %105, ptr %106, align 4, !tbaa !95
  %107 = getelementptr inbounds i16, ptr %4, i64 9994
  %108 = load i16, ptr %107, align 2, !tbaa !13
  %109 = zext i16 %108 to i32
  %110 = getelementptr inbounds i32, ptr %5, i64 9994
  store i32 %109, ptr %110, align 4, !tbaa !95
  %111 = getelementptr inbounds i16, ptr %4, i64 9995
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = zext i16 %112 to i32
  %114 = getelementptr inbounds i32, ptr %5, i64 9995
  store i32 %113, ptr %114, align 4, !tbaa !95
  %115 = getelementptr inbounds i16, ptr %4, i64 9996
  %116 = load i16, ptr %115, align 2, !tbaa !13
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds i32, ptr %5, i64 9996
  store i32 %117, ptr %118, align 4, !tbaa !95
  %119 = getelementptr inbounds i16, ptr %4, i64 9997
  %120 = load i16, ptr %119, align 2, !tbaa !13
  %121 = zext i16 %120 to i32
  %122 = getelementptr inbounds i32, ptr %5, i64 9997
  store i32 %121, ptr %122, align 4, !tbaa !95
  %123 = getelementptr inbounds i16, ptr %4, i64 9998
  %124 = load i16, ptr %123, align 2, !tbaa !13
  %125 = zext i16 %124 to i32
  %126 = getelementptr inbounds i32, ptr %5, i64 9998
  store i32 %125, ptr %126, align 4, !tbaa !95
  %127 = getelementptr inbounds i16, ptr %4, i64 9999
  %128 = load i16, ptr %127, align 2, !tbaa !13
  %129 = zext i16 %128 to i32
  %130 = getelementptr inbounds i32, ptr %5, i64 9999
  store i32 %129, ptr %130, align 4, !tbaa !95
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %318

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %315

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %311

137:                                              ; preds = %200, %66
  %138 = phi i64 [ 0, %66 ], [ %201, %200 ]
  %139 = getelementptr inbounds i32, ptr %5, i64 %138
  %140 = load i32, ptr %139, align 4, !tbaa !95
  %141 = getelementptr inbounds i32, ptr %7, i64 %138
  %142 = load i32, ptr %141, align 4, !tbaa !95
  %143 = icmp eq i32 %140, %142
  br i1 %143, label %172, label %144

144:                                              ; preds = %193, %186, %179, %172, %137
  %145 = phi i64 [ %138, %137 ], [ %173, %172 ], [ %180, %179 ], [ %187, %186 ], [ %194, %193 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i32, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %170

149:                                              ; preds = %144
  %150 = getelementptr inbounds i16, ptr %4, i64 %146
  %151 = load i16, ptr %150, align 2, !tbaa !13
  %152 = zext i16 %151 to i64
  %153 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %152)
          to label %154 unwind label %170

154:                                              ; preds = %149
  %155 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %153, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %156 unwind label %170

156:                                              ; preds = %154
  %157 = getelementptr inbounds i32, ptr %5, i64 %146
  %158 = load i32, ptr %157, align 4, !tbaa !95
  %159 = zext i32 %158 to i64
  %160 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %153, i64 noundef %159)
          to label %161 unwind label %170

161:                                              ; preds = %156
  %162 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %160, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %163 unwind label %170

163:                                              ; preds = %161
  %164 = load i32, ptr %147, align 4, !tbaa !95
  %165 = zext i32 %164 to i64
  %166 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %160, i64 noundef %165)
          to label %167 unwind label %170

167:                                              ; preds = %163
  %168 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %166, ptr noundef nonnull @.str.149)
          to label %169 unwind label %170

169:                                              ; preds = %167
  call void @exit(i32 noundef 1) #12
  unreachable

170:                                              ; preds = %167, %163, %161, %156, %154, %149, %144
  %171 = landingpad { ptr, i32 }
          cleanup
  br label %311

172:                                              ; preds = %137
  %173 = add nuw nsw i64 %138, 1
  %174 = getelementptr inbounds i32, ptr %5, i64 %173
  %175 = load i32, ptr %174, align 4, !tbaa !95
  %176 = getelementptr inbounds i32, ptr %7, i64 %173
  %177 = load i32, ptr %176, align 4, !tbaa !95
  %178 = icmp eq i32 %175, %177
  br i1 %178, label %179, label %144

179:                                              ; preds = %172
  %180 = add nuw nsw i64 %138, 2
  %181 = getelementptr inbounds i32, ptr %5, i64 %180
  %182 = load i32, ptr %181, align 4, !tbaa !95
  %183 = getelementptr inbounds i32, ptr %7, i64 %180
  %184 = load i32, ptr %183, align 4, !tbaa !95
  %185 = icmp eq i32 %182, %184
  br i1 %185, label %186, label %144

186:                                              ; preds = %179
  %187 = add nuw nsw i64 %138, 3
  %188 = getelementptr inbounds i32, ptr %5, i64 %187
  %189 = load i32, ptr %188, align 4, !tbaa !95
  %190 = getelementptr inbounds i32, ptr %7, i64 %187
  %191 = load i32, ptr %190, align 4, !tbaa !95
  %192 = icmp eq i32 %189, %191
  br i1 %192, label %193, label %144

193:                                              ; preds = %186
  %194 = add nuw nsw i64 %138, 4
  %195 = getelementptr inbounds i32, ptr %5, i64 %194
  %196 = load i32, ptr %195, align 4, !tbaa !95
  %197 = getelementptr inbounds i32, ptr %7, i64 %194
  %198 = load i32, ptr %197, align 4, !tbaa !95
  %199 = icmp eq i32 %196, %198
  br i1 %199, label %200, label %144

200:                                              ; preds = %193
  %201 = add nuw nsw i64 %138, 5
  %202 = icmp eq i64 %201, 10000
  br i1 %202, label %203, label %137, !llvm.loop !372

203:                                              ; preds = %200
  %204 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %205 = load i8, ptr %204, align 2, !tbaa !23, !range !40, !noundef !41
  %206 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %207 = load i64, ptr %206, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %208 unwind label %234

208:                                              ; preds = %203
  %209 = icmp ne i8 %205, 0
  %210 = icmp eq i64 %207, 0
  %211 = select i1 %209, i1 true, i1 %210
  br i1 %211, label %229, label %212, !prof !42

212:                                              ; preds = %208
  %213 = getelementptr inbounds i16, ptr %4, i64 9984
  %214 = getelementptr inbounds i16, ptr %4, i64 9985
  %215 = getelementptr inbounds i16, ptr %4, i64 9986
  %216 = getelementptr inbounds i16, ptr %4, i64 9987
  %217 = getelementptr inbounds i16, ptr %4, i64 9988
  %218 = getelementptr inbounds i16, ptr %4, i64 9989
  %219 = getelementptr inbounds i16, ptr %4, i64 9990
  %220 = getelementptr inbounds i16, ptr %4, i64 9991
  %221 = getelementptr inbounds i16, ptr %4, i64 9992
  %222 = getelementptr inbounds i16, ptr %4, i64 9993
  %223 = getelementptr inbounds i16, ptr %4, i64 9994
  %224 = getelementptr inbounds i16, ptr %4, i64 9995
  %225 = getelementptr inbounds i16, ptr %4, i64 9996
  %226 = getelementptr inbounds i16, ptr %4, i64 9997
  %227 = getelementptr inbounds i16, ptr %4, i64 9998
  %228 = getelementptr inbounds i16, ptr %4, i64 9999
  br label %236

229:                                              ; preds = %260, %208
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %230 unwind label %234

230:                                              ; preds = %229
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %231 = load ptr, ptr %3, align 8, !tbaa !5
  %232 = icmp eq ptr %231, null
  br i1 %232, label %320, label %233

233:                                              ; preds = %230
  call void @_ZdaPv(ptr noundef nonnull %231) #13
  br label %320

234:                                              ; preds = %229, %203
  %235 = landingpad { ptr, i32 }
          cleanup
  br label %311

236:                                              ; preds = %212, %260
  %237 = phi i64 [ %309, %260 ], [ %207, %212 ]
  %238 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %3, i64 %238) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %239 = load ptr, ptr %3, align 8, !tbaa !5
  br label %240

240:                                              ; preds = %240, %236
  %241 = phi i64 [ 0, %236 ], [ %258, %240 ]
  %242 = getelementptr inbounds i16, ptr %4, i64 %241
  %243 = load <16 x i16>, ptr %242, align 2, !tbaa !13
  %244 = getelementptr inbounds i16, ptr %242, i64 16
  %245 = load <16 x i16>, ptr %244, align 2, !tbaa !13
  %246 = getelementptr inbounds i16, ptr %242, i64 32
  %247 = load <16 x i16>, ptr %246, align 2, !tbaa !13
  %248 = getelementptr inbounds i16, ptr %242, i64 48
  %249 = load <16 x i16>, ptr %248, align 2, !tbaa !13
  %250 = zext <16 x i16> %243 to <16 x i32>
  %251 = zext <16 x i16> %245 to <16 x i32>
  %252 = zext <16 x i16> %247 to <16 x i32>
  %253 = zext <16 x i16> %249 to <16 x i32>
  %254 = getelementptr inbounds i32, ptr %239, i64 %241
  store <16 x i32> %250, ptr %254, align 4, !tbaa !95
  %255 = getelementptr inbounds i32, ptr %254, i64 16
  store <16 x i32> %251, ptr %255, align 4, !tbaa !95
  %256 = getelementptr inbounds i32, ptr %254, i64 32
  store <16 x i32> %252, ptr %256, align 4, !tbaa !95
  %257 = getelementptr inbounds i32, ptr %254, i64 48
  store <16 x i32> %253, ptr %257, align 4, !tbaa !95
  %258 = add nuw i64 %241, 64
  %259 = icmp eq i64 %258, 9984
  br i1 %259, label %260, label %240, !llvm.loop !375

260:                                              ; preds = %240
  %261 = load i16, ptr %213, align 2, !tbaa !13
  %262 = zext i16 %261 to i32
  %263 = getelementptr inbounds i32, ptr %239, i64 9984
  store i32 %262, ptr %263, align 4, !tbaa !95
  %264 = load i16, ptr %214, align 2, !tbaa !13
  %265 = zext i16 %264 to i32
  %266 = getelementptr inbounds i32, ptr %239, i64 9985
  store i32 %265, ptr %266, align 4, !tbaa !95
  %267 = load i16, ptr %215, align 2, !tbaa !13
  %268 = zext i16 %267 to i32
  %269 = getelementptr inbounds i32, ptr %239, i64 9986
  store i32 %268, ptr %269, align 4, !tbaa !95
  %270 = load i16, ptr %216, align 2, !tbaa !13
  %271 = zext i16 %270 to i32
  %272 = getelementptr inbounds i32, ptr %239, i64 9987
  store i32 %271, ptr %272, align 4, !tbaa !95
  %273 = load i16, ptr %217, align 2, !tbaa !13
  %274 = zext i16 %273 to i32
  %275 = getelementptr inbounds i32, ptr %239, i64 9988
  store i32 %274, ptr %275, align 4, !tbaa !95
  %276 = load i16, ptr %218, align 2, !tbaa !13
  %277 = zext i16 %276 to i32
  %278 = getelementptr inbounds i32, ptr %239, i64 9989
  store i32 %277, ptr %278, align 4, !tbaa !95
  %279 = load i16, ptr %219, align 2, !tbaa !13
  %280 = zext i16 %279 to i32
  %281 = getelementptr inbounds i32, ptr %239, i64 9990
  store i32 %280, ptr %281, align 4, !tbaa !95
  %282 = load i16, ptr %220, align 2, !tbaa !13
  %283 = zext i16 %282 to i32
  %284 = getelementptr inbounds i32, ptr %239, i64 9991
  store i32 %283, ptr %284, align 4, !tbaa !95
  %285 = load i16, ptr %221, align 2, !tbaa !13
  %286 = zext i16 %285 to i32
  %287 = getelementptr inbounds i32, ptr %239, i64 9992
  store i32 %286, ptr %287, align 4, !tbaa !95
  %288 = load i16, ptr %222, align 2, !tbaa !13
  %289 = zext i16 %288 to i32
  %290 = getelementptr inbounds i32, ptr %239, i64 9993
  store i32 %289, ptr %290, align 4, !tbaa !95
  %291 = load i16, ptr %223, align 2, !tbaa !13
  %292 = zext i16 %291 to i32
  %293 = getelementptr inbounds i32, ptr %239, i64 9994
  store i32 %292, ptr %293, align 4, !tbaa !95
  %294 = load i16, ptr %224, align 2, !tbaa !13
  %295 = zext i16 %294 to i32
  %296 = getelementptr inbounds i32, ptr %239, i64 9995
  store i32 %295, ptr %296, align 4, !tbaa !95
  %297 = load i16, ptr %225, align 2, !tbaa !13
  %298 = zext i16 %297 to i32
  %299 = getelementptr inbounds i32, ptr %239, i64 9996
  store i32 %298, ptr %299, align 4, !tbaa !95
  %300 = load i16, ptr %226, align 2, !tbaa !13
  %301 = zext i16 %300 to i32
  %302 = getelementptr inbounds i32, ptr %239, i64 9997
  store i32 %301, ptr %302, align 4, !tbaa !95
  %303 = load i16, ptr %227, align 2, !tbaa !13
  %304 = zext i16 %303 to i32
  %305 = getelementptr inbounds i32, ptr %239, i64 9998
  store i32 %304, ptr %305, align 4, !tbaa !95
  %306 = load i16, ptr %228, align 2, !tbaa !13
  %307 = zext i16 %306 to i32
  %308 = getelementptr inbounds i32, ptr %239, i64 9999
  store i32 %307, ptr %308, align 4, !tbaa !95
  %309 = add i64 %237, -1
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %229, label %236, !prof !42

311:                                              ; preds = %234, %170, %135
  %312 = phi { ptr, i32 } [ %171, %170 ], [ %235, %234 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %313 = load ptr, ptr %3, align 8, !tbaa !5
  %314 = icmp eq ptr %313, null
  br i1 %314, label %318, label %315

315:                                              ; preds = %311, %133
  %316 = phi { ptr, i32 } [ %134, %133 ], [ %312, %311 ]
  %317 = phi ptr [ %5, %133 ], [ %313, %311 ]
  call void @_ZdaPv(ptr noundef nonnull %317) #13
  br label %318

318:                                              ; preds = %315, %311, %131
  %319 = phi { ptr, i32 } [ %132, %131 ], [ %312, %311 ], [ %316, %315 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %319

320:                                              ; preds = %230, %233
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z54benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::unique_ptr.44", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %6 unwind label %67

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %8 unwind label %69

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %9, align 2, !tbaa !12
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %13 unwind label %71

13:                                               ; preds = %10
  %14 = getelementptr inbounds i16, ptr %4, i64 %11
  store i16 %12, ptr %14, align 2, !tbaa !13
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !14

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i16, ptr %4, i64 %19
  %21 = load i16, ptr %20, align 2, !tbaa !13
  %22 = zext i16 %21 to i32
  %23 = getelementptr inbounds i32, ptr %7, i64 %19
  store i32 %22, ptr %23, align 4, !tbaa !95
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i16, ptr %4, i64 %24
  %26 = load i16, ptr %25, align 2, !tbaa !13
  %27 = zext i16 %26 to i32
  %28 = getelementptr inbounds i32, ptr %7, i64 %24
  store i32 %27, ptr %28, align 4, !tbaa !95
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i16, ptr %4, i64 %29
  %31 = load i16, ptr %30, align 2, !tbaa !13
  %32 = zext i16 %31 to i32
  %33 = getelementptr inbounds i32, ptr %7, i64 %29
  store i32 %32, ptr %33, align 4, !tbaa !95
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i16, ptr %4, i64 %34
  %36 = load i16, ptr %35, align 2, !tbaa !13
  %37 = zext i16 %36 to i32
  %38 = getelementptr inbounds i32, ptr %7, i64 %34
  store i32 %37, ptr %38, align 4, !tbaa !95
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i16, ptr %4, i64 %39
  %41 = load i16, ptr %40, align 2, !tbaa !13
  %42 = zext i16 %41 to i32
  %43 = getelementptr inbounds i32, ptr %7, i64 %39
  store i32 %42, ptr %43, align 4, !tbaa !95
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !370

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %65, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i16, ptr %4, i64 %47
  %49 = load <4 x i16>, ptr %48, align 2, !tbaa !13
  %50 = getelementptr inbounds i16, ptr %48, i64 4
  %51 = load <4 x i16>, ptr %50, align 2, !tbaa !13
  %52 = zext <4 x i16> %49 to <4 x i32>
  %53 = zext <4 x i16> %51 to <4 x i32>
  %54 = getelementptr inbounds i32, ptr %5, i64 %47
  store <4 x i32> %52, ptr %54, align 4, !tbaa !95
  %55 = getelementptr inbounds i32, ptr %54, i64 4
  store <4 x i32> %53, ptr %55, align 4, !tbaa !95
  %56 = or i64 %47, 8
  %57 = getelementptr inbounds i16, ptr %4, i64 %56
  %58 = load <4 x i16>, ptr %57, align 2, !tbaa !13
  %59 = getelementptr inbounds i16, ptr %57, i64 4
  %60 = load <4 x i16>, ptr %59, align 2, !tbaa !13
  %61 = zext <4 x i16> %58 to <4 x i32>
  %62 = zext <4 x i16> %60 to <4 x i32>
  %63 = getelementptr inbounds i32, ptr %5, i64 %56
  store <4 x i32> %61, ptr %63, align 4, !tbaa !95
  %64 = getelementptr inbounds i32, ptr %63, i64 4
  store <4 x i32> %62, ptr %64, align 4, !tbaa !95
  %65 = add nuw nsw i64 %47, 16
  %66 = icmp eq i64 %65, 10000
  br i1 %66, label %73, label %46, !llvm.loop !376

67:                                               ; preds = %1
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %190

69:                                               ; preds = %6
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %187

71:                                               ; preds = %10
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %183

73:                                               ; preds = %46, %136
  %74 = phi i64 [ %137, %136 ], [ 0, %46 ]
  %75 = getelementptr inbounds i32, ptr %5, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !95
  %77 = getelementptr inbounds i32, ptr %7, i64 %74
  %78 = load i32, ptr %77, align 4, !tbaa !95
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %108, label %80

80:                                               ; preds = %129, %122, %115, %108, %73
  %81 = phi i64 [ %74, %73 ], [ %109, %108 ], [ %116, %115 ], [ %123, %122 ], [ %130, %129 ]
  %82 = and i64 %81, 4294967295
  %83 = getelementptr inbounds i32, ptr %7, i64 %82
  %84 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %85 unwind label %106

85:                                               ; preds = %80
  %86 = getelementptr inbounds i16, ptr %4, i64 %82
  %87 = load i16, ptr %86, align 2, !tbaa !13
  %88 = zext i16 %87 to i64
  %89 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %88)
          to label %90 unwind label %106

90:                                               ; preds = %85
  %91 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %89, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %92 unwind label %106

92:                                               ; preds = %90
  %93 = getelementptr inbounds i32, ptr %5, i64 %82
  %94 = load i32, ptr %93, align 4, !tbaa !95
  %95 = zext i32 %94 to i64
  %96 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %89, i64 noundef %95)
          to label %97 unwind label %106

97:                                               ; preds = %92
  %98 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %96, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %99 unwind label %106

99:                                               ; preds = %97
  %100 = load i32, ptr %83, align 4, !tbaa !95
  %101 = zext i32 %100 to i64
  %102 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %96, i64 noundef %101)
          to label %103 unwind label %106

103:                                              ; preds = %99
  %104 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %102, ptr noundef nonnull @.str.149)
          to label %105 unwind label %106

105:                                              ; preds = %103
  call void @exit(i32 noundef 1) #12
  unreachable

106:                                              ; preds = %103, %99, %97, %92, %90, %85, %80
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %183

108:                                              ; preds = %73
  %109 = add nuw nsw i64 %74, 1
  %110 = getelementptr inbounds i32, ptr %5, i64 %109
  %111 = load i32, ptr %110, align 4, !tbaa !95
  %112 = getelementptr inbounds i32, ptr %7, i64 %109
  %113 = load i32, ptr %112, align 4, !tbaa !95
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %115, label %80

115:                                              ; preds = %108
  %116 = add nuw nsw i64 %74, 2
  %117 = getelementptr inbounds i32, ptr %5, i64 %116
  %118 = load i32, ptr %117, align 4, !tbaa !95
  %119 = getelementptr inbounds i32, ptr %7, i64 %116
  %120 = load i32, ptr %119, align 4, !tbaa !95
  %121 = icmp eq i32 %118, %120
  br i1 %121, label %122, label %80

122:                                              ; preds = %115
  %123 = add nuw nsw i64 %74, 3
  %124 = getelementptr inbounds i32, ptr %5, i64 %123
  %125 = load i32, ptr %124, align 4, !tbaa !95
  %126 = getelementptr inbounds i32, ptr %7, i64 %123
  %127 = load i32, ptr %126, align 4, !tbaa !95
  %128 = icmp eq i32 %125, %127
  br i1 %128, label %129, label %80

129:                                              ; preds = %122
  %130 = add nuw nsw i64 %74, 4
  %131 = getelementptr inbounds i32, ptr %5, i64 %130
  %132 = load i32, ptr %131, align 4, !tbaa !95
  %133 = getelementptr inbounds i32, ptr %7, i64 %130
  %134 = load i32, ptr %133, align 4, !tbaa !95
  %135 = icmp eq i32 %132, %134
  br i1 %135, label %136, label %80

136:                                              ; preds = %129
  %137 = add nuw nsw i64 %74, 5
  %138 = icmp eq i64 %137, 10000
  br i1 %138, label %139, label %73, !llvm.loop !372

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %141 = load i8, ptr %140, align 2, !tbaa !23, !range !40, !noundef !41
  %142 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %143 = load i64, ptr %142, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %144 unwind label %153

144:                                              ; preds = %139
  %145 = icmp ne i8 %141, 0
  %146 = icmp eq i64 %143, 0
  %147 = select i1 %145, i1 true, i1 %146
  br i1 %147, label %148, label %155, !prof !42

148:                                              ; preds = %180, %144
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %149 unwind label %153

149:                                              ; preds = %148
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %150 = load ptr, ptr %3, align 8, !tbaa !5
  %151 = icmp eq ptr %150, null
  br i1 %151, label %192, label %152

152:                                              ; preds = %149
  call void @_ZdaPv(ptr noundef nonnull %150) #13
  br label %192

153:                                              ; preds = %148, %139
  %154 = landingpad { ptr, i32 }
          cleanup
  br label %183

155:                                              ; preds = %144, %180
  %156 = phi i64 [ %181, %180 ], [ %143, %144 ]
  %157 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %3, i64 %157) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %158 = load ptr, ptr %3, align 8, !tbaa !5
  br label %159

159:                                              ; preds = %159, %155
  %160 = phi i64 [ 0, %155 ], [ %178, %159 ]
  %161 = getelementptr inbounds i16, ptr %4, i64 %160
  %162 = load <4 x i16>, ptr %161, align 2, !tbaa !13
  %163 = getelementptr inbounds i16, ptr %161, i64 4
  %164 = load <4 x i16>, ptr %163, align 2, !tbaa !13
  %165 = zext <4 x i16> %162 to <4 x i32>
  %166 = zext <4 x i16> %164 to <4 x i32>
  %167 = getelementptr inbounds i32, ptr %158, i64 %160
  store <4 x i32> %165, ptr %167, align 4, !tbaa !95
  %168 = getelementptr inbounds i32, ptr %167, i64 4
  store <4 x i32> %166, ptr %168, align 4, !tbaa !95
  %169 = or i64 %160, 8
  %170 = getelementptr inbounds i16, ptr %4, i64 %169
  %171 = load <4 x i16>, ptr %170, align 2, !tbaa !13
  %172 = getelementptr inbounds i16, ptr %170, i64 4
  %173 = load <4 x i16>, ptr %172, align 2, !tbaa !13
  %174 = zext <4 x i16> %171 to <4 x i32>
  %175 = zext <4 x i16> %173 to <4 x i32>
  %176 = getelementptr inbounds i32, ptr %158, i64 %169
  store <4 x i32> %174, ptr %176, align 4, !tbaa !95
  %177 = getelementptr inbounds i32, ptr %176, i64 4
  store <4 x i32> %175, ptr %177, align 4, !tbaa !95
  %178 = add nuw nsw i64 %160, 16
  %179 = icmp eq i64 %178, 10000
  br i1 %179, label %180, label %159, !llvm.loop !377

180:                                              ; preds = %159
  %181 = add i64 %156, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %148, label %155, !prof !42

183:                                              ; preds = %153, %106, %71
  %184 = phi { ptr, i32 } [ %107, %106 ], [ %154, %153 ], [ %72, %71 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %185 = load ptr, ptr %3, align 8, !tbaa !5
  %186 = icmp eq ptr %185, null
  br i1 %186, label %190, label %187

187:                                              ; preds = %183, %69
  %188 = phi { ptr, i32 } [ %70, %69 ], [ %184, %183 ]
  %189 = phi ptr [ %5, %69 ], [ %185, %183 ]
  call void @_ZdaPv(ptr noundef nonnull %189) #13
  br label %190

190:                                              ; preds = %187, %183, %67
  %191 = phi { ptr, i32 } [ %68, %67 ], [ %184, %183 ], [ %188, %187 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %191

192:                                              ; preds = %149, %152
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::uniform_int_distribution", align 2
  %4 = alloca %"class.std::unique_ptr.44", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %7 unwind label %56

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #11
  store i16 0, ptr %3, align 2, !tbaa !9
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %3, i64 0, i32 1
  store i16 -1, ptr %8, align 2, !tbaa !12
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %3)
          to label %12 unwind label %60

12:                                               ; preds = %9
  %13 = getelementptr inbounds i16, ptr %5, i64 %10
  store i16 %11, ptr %13, align 2, !tbaa !13
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !14

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %17, align 4, !tbaa !94
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %21 unwind label %58

21:                                               ; preds = %18
  %22 = getelementptr inbounds i32, ptr %6, i64 %19
  store i32 %20, ptr %22, align 4, !tbaa !95
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !96

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %177

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %51, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr inbounds i16, ptr %5, i64 9984
  %36 = getelementptr inbounds i16, ptr %5, i64 9985
  %37 = getelementptr inbounds i16, ptr %5, i64 9986
  %38 = getelementptr inbounds i16, ptr %5, i64 9987
  %39 = getelementptr inbounds i16, ptr %5, i64 9988
  %40 = getelementptr inbounds i16, ptr %5, i64 9989
  %41 = getelementptr inbounds i16, ptr %5, i64 9990
  %42 = getelementptr inbounds i16, ptr %5, i64 9991
  %43 = getelementptr inbounds i16, ptr %5, i64 9992
  %44 = getelementptr inbounds i16, ptr %5, i64 9993
  %45 = getelementptr inbounds i16, ptr %5, i64 9994
  %46 = getelementptr inbounds i16, ptr %5, i64 9995
  %47 = getelementptr inbounds i16, ptr %5, i64 9996
  %48 = getelementptr inbounds i16, ptr %5, i64 9997
  %49 = getelementptr inbounds i16, ptr %5, i64 9998
  %50 = getelementptr inbounds i16, ptr %5, i64 9999
  br label %62

51:                                               ; preds = %94, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %52 unwind label %177

52:                                               ; preds = %51
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = icmp eq ptr %53, null
  br i1 %54, label %186, label %55

55:                                               ; preds = %52
  call void @_ZdaPv(ptr noundef nonnull %53) #13
  br label %186

56:                                               ; preds = %1
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %184

58:                                               ; preds = %18
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %181

60:                                               ; preds = %9
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %181

62:                                               ; preds = %34, %94
  %63 = phi i64 [ %175, %94 ], [ %29, %34 ]
  %64 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %4, i64 %64) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %65 = load ptr, ptr %4, align 8, !tbaa !5
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i64 [ 0, %62 ], [ %92, %66 ]
  %68 = getelementptr inbounds i16, ptr %5, i64 %67
  %69 = load <8 x i16>, ptr %68, align 2, !tbaa !13
  %70 = getelementptr inbounds i16, ptr %68, i64 8
  %71 = load <8 x i16>, ptr %70, align 2, !tbaa !13
  %72 = getelementptr inbounds i16, ptr %68, i64 16
  %73 = load <8 x i16>, ptr %72, align 2, !tbaa !13
  %74 = getelementptr inbounds i16, ptr %68, i64 24
  %75 = load <8 x i16>, ptr %74, align 2, !tbaa !13
  %76 = zext <8 x i16> %69 to <8 x i32>
  %77 = zext <8 x i16> %71 to <8 x i32>
  %78 = zext <8 x i16> %73 to <8 x i32>
  %79 = zext <8 x i16> %75 to <8 x i32>
  %80 = getelementptr inbounds i32, ptr %65, i64 %67
  %81 = load <8 x i32>, ptr %80, align 4, !tbaa !95
  %82 = getelementptr inbounds i32, ptr %80, i64 8
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !95
  %84 = getelementptr inbounds i32, ptr %80, i64 16
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !95
  %86 = getelementptr inbounds i32, ptr %80, i64 24
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !95
  %88 = add <8 x i32> %81, %76
  %89 = add <8 x i32> %83, %77
  %90 = add <8 x i32> %85, %78
  %91 = add <8 x i32> %87, %79
  store <8 x i32> %88, ptr %80, align 4, !tbaa !95
  store <8 x i32> %89, ptr %82, align 4, !tbaa !95
  store <8 x i32> %90, ptr %84, align 4, !tbaa !95
  store <8 x i32> %91, ptr %86, align 4, !tbaa !95
  %92 = add nuw i64 %67, 32
  %93 = icmp eq i64 %92, 9984
  br i1 %93, label %94, label %66, !llvm.loop !378

94:                                               ; preds = %66
  %95 = load i16, ptr %35, align 2, !tbaa !13
  %96 = zext i16 %95 to i32
  %97 = getelementptr inbounds i32, ptr %65, i64 9984
  %98 = load i32, ptr %97, align 4, !tbaa !95
  %99 = add i32 %98, %96
  store i32 %99, ptr %97, align 4, !tbaa !95
  %100 = load i16, ptr %36, align 2, !tbaa !13
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds i32, ptr %65, i64 9985
  %103 = load i32, ptr %102, align 4, !tbaa !95
  %104 = add i32 %103, %101
  store i32 %104, ptr %102, align 4, !tbaa !95
  %105 = load i16, ptr %37, align 2, !tbaa !13
  %106 = zext i16 %105 to i32
  %107 = getelementptr inbounds i32, ptr %65, i64 9986
  %108 = load i32, ptr %107, align 4, !tbaa !95
  %109 = add i32 %108, %106
  store i32 %109, ptr %107, align 4, !tbaa !95
  %110 = load i16, ptr %38, align 2, !tbaa !13
  %111 = zext i16 %110 to i32
  %112 = getelementptr inbounds i32, ptr %65, i64 9987
  %113 = load i32, ptr %112, align 4, !tbaa !95
  %114 = add i32 %113, %111
  store i32 %114, ptr %112, align 4, !tbaa !95
  %115 = load i16, ptr %39, align 2, !tbaa !13
  %116 = zext i16 %115 to i32
  %117 = getelementptr inbounds i32, ptr %65, i64 9988
  %118 = load i32, ptr %117, align 4, !tbaa !95
  %119 = add i32 %118, %116
  store i32 %119, ptr %117, align 4, !tbaa !95
  %120 = load i16, ptr %40, align 2, !tbaa !13
  %121 = zext i16 %120 to i32
  %122 = getelementptr inbounds i32, ptr %65, i64 9989
  %123 = load i32, ptr %122, align 4, !tbaa !95
  %124 = add i32 %123, %121
  store i32 %124, ptr %122, align 4, !tbaa !95
  %125 = load i16, ptr %41, align 2, !tbaa !13
  %126 = zext i16 %125 to i32
  %127 = getelementptr inbounds i32, ptr %65, i64 9990
  %128 = load i32, ptr %127, align 4, !tbaa !95
  %129 = add i32 %128, %126
  store i32 %129, ptr %127, align 4, !tbaa !95
  %130 = load i16, ptr %42, align 2, !tbaa !13
  %131 = zext i16 %130 to i32
  %132 = getelementptr inbounds i32, ptr %65, i64 9991
  %133 = load i32, ptr %132, align 4, !tbaa !95
  %134 = add i32 %133, %131
  store i32 %134, ptr %132, align 4, !tbaa !95
  %135 = load i16, ptr %43, align 2, !tbaa !13
  %136 = zext i16 %135 to i32
  %137 = getelementptr inbounds i32, ptr %65, i64 9992
  %138 = load i32, ptr %137, align 4, !tbaa !95
  %139 = add i32 %138, %136
  store i32 %139, ptr %137, align 4, !tbaa !95
  %140 = load i16, ptr %44, align 2, !tbaa !13
  %141 = zext i16 %140 to i32
  %142 = getelementptr inbounds i32, ptr %65, i64 9993
  %143 = load i32, ptr %142, align 4, !tbaa !95
  %144 = add i32 %143, %141
  store i32 %144, ptr %142, align 4, !tbaa !95
  %145 = load i16, ptr %45, align 2, !tbaa !13
  %146 = zext i16 %145 to i32
  %147 = getelementptr inbounds i32, ptr %65, i64 9994
  %148 = load i32, ptr %147, align 4, !tbaa !95
  %149 = add i32 %148, %146
  store i32 %149, ptr %147, align 4, !tbaa !95
  %150 = load i16, ptr %46, align 2, !tbaa !13
  %151 = zext i16 %150 to i32
  %152 = getelementptr inbounds i32, ptr %65, i64 9995
  %153 = load i32, ptr %152, align 4, !tbaa !95
  %154 = add i32 %153, %151
  store i32 %154, ptr %152, align 4, !tbaa !95
  %155 = load i16, ptr %47, align 2, !tbaa !13
  %156 = zext i16 %155 to i32
  %157 = getelementptr inbounds i32, ptr %65, i64 9996
  %158 = load i32, ptr %157, align 4, !tbaa !95
  %159 = add i32 %158, %156
  store i32 %159, ptr %157, align 4, !tbaa !95
  %160 = load i16, ptr %48, align 2, !tbaa !13
  %161 = zext i16 %160 to i32
  %162 = getelementptr inbounds i32, ptr %65, i64 9997
  %163 = load i32, ptr %162, align 4, !tbaa !95
  %164 = add i32 %163, %161
  store i32 %164, ptr %162, align 4, !tbaa !95
  %165 = load i16, ptr %49, align 2, !tbaa !13
  %166 = zext i16 %165 to i32
  %167 = getelementptr inbounds i32, ptr %65, i64 9998
  %168 = load i32, ptr %167, align 4, !tbaa !95
  %169 = add i32 %168, %166
  store i32 %169, ptr %167, align 4, !tbaa !95
  %170 = load i16, ptr %50, align 2, !tbaa !13
  %171 = zext i16 %170 to i32
  %172 = getelementptr inbounds i32, ptr %65, i64 9999
  %173 = load i32, ptr %172, align 4, !tbaa !95
  %174 = add i32 %173, %171
  store i32 %174, ptr %172, align 4, !tbaa !95
  %175 = add i64 %63, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %51, label %62, !prof !42

177:                                              ; preds = %25, %51
  %178 = landingpad { ptr, i32 }
          cleanup
  %179 = load ptr, ptr %4, align 8, !tbaa !5
  %180 = icmp eq ptr %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %60, %58, %177
  %182 = phi { ptr, i32 } [ %178, %177 ], [ %61, %60 ], [ %59, %58 ]
  %183 = phi ptr [ %179, %177 ], [ %6, %60 ], [ %6, %58 ]
  call void @_ZdaPv(ptr noundef nonnull %183) #13
  br label %184

184:                                              ; preds = %181, %177, %56
  %185 = phi { ptr, i32 } [ %57, %56 ], [ %178, %177 ], [ %182, %181 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %185

186:                                              ; preds = %52, %55
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::uniform_int_distribution", align 2
  %4 = alloca %"class.std::unique_ptr.44", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %7 unwind label %56

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #11
  store i16 0, ptr %3, align 2, !tbaa !9
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %3, i64 0, i32 1
  store i16 -1, ptr %8, align 2, !tbaa !12
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %3)
          to label %12 unwind label %60

12:                                               ; preds = %9
  %13 = getelementptr inbounds i16, ptr %5, i64 %10
  store i16 %11, ptr %13, align 2, !tbaa !13
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !14

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %17, align 4, !tbaa !94
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %21 unwind label %58

21:                                               ; preds = %18
  %22 = getelementptr inbounds i32, ptr %6, i64 %19
  store i32 %20, ptr %22, align 4, !tbaa !95
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !96

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %177

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %51, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr inbounds i16, ptr %5, i64 9984
  %36 = getelementptr inbounds i16, ptr %5, i64 9985
  %37 = getelementptr inbounds i16, ptr %5, i64 9986
  %38 = getelementptr inbounds i16, ptr %5, i64 9987
  %39 = getelementptr inbounds i16, ptr %5, i64 9988
  %40 = getelementptr inbounds i16, ptr %5, i64 9989
  %41 = getelementptr inbounds i16, ptr %5, i64 9990
  %42 = getelementptr inbounds i16, ptr %5, i64 9991
  %43 = getelementptr inbounds i16, ptr %5, i64 9992
  %44 = getelementptr inbounds i16, ptr %5, i64 9993
  %45 = getelementptr inbounds i16, ptr %5, i64 9994
  %46 = getelementptr inbounds i16, ptr %5, i64 9995
  %47 = getelementptr inbounds i16, ptr %5, i64 9996
  %48 = getelementptr inbounds i16, ptr %5, i64 9997
  %49 = getelementptr inbounds i16, ptr %5, i64 9998
  %50 = getelementptr inbounds i16, ptr %5, i64 9999
  br label %62

51:                                               ; preds = %94, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %52 unwind label %177

52:                                               ; preds = %51
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = icmp eq ptr %53, null
  br i1 %54, label %186, label %55

55:                                               ; preds = %52
  call void @_ZdaPv(ptr noundef nonnull %53) #13
  br label %186

56:                                               ; preds = %1
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %184

58:                                               ; preds = %18
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %181

60:                                               ; preds = %9
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %181

62:                                               ; preds = %34, %94
  %63 = phi i64 [ %175, %94 ], [ %29, %34 ]
  %64 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %4, i64 %64) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %65 = load ptr, ptr %4, align 8, !tbaa !5
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i64 [ 0, %62 ], [ %92, %66 ]
  %68 = getelementptr inbounds i16, ptr %5, i64 %67
  %69 = load <16 x i16>, ptr %68, align 2, !tbaa !13
  %70 = getelementptr inbounds i16, ptr %68, i64 16
  %71 = load <16 x i16>, ptr %70, align 2, !tbaa !13
  %72 = getelementptr inbounds i16, ptr %68, i64 32
  %73 = load <16 x i16>, ptr %72, align 2, !tbaa !13
  %74 = getelementptr inbounds i16, ptr %68, i64 48
  %75 = load <16 x i16>, ptr %74, align 2, !tbaa !13
  %76 = zext <16 x i16> %69 to <16 x i32>
  %77 = zext <16 x i16> %71 to <16 x i32>
  %78 = zext <16 x i16> %73 to <16 x i32>
  %79 = zext <16 x i16> %75 to <16 x i32>
  %80 = getelementptr inbounds i32, ptr %65, i64 %67
  %81 = load <16 x i32>, ptr %80, align 4, !tbaa !95
  %82 = getelementptr inbounds i32, ptr %80, i64 16
  %83 = load <16 x i32>, ptr %82, align 4, !tbaa !95
  %84 = getelementptr inbounds i32, ptr %80, i64 32
  %85 = load <16 x i32>, ptr %84, align 4, !tbaa !95
  %86 = getelementptr inbounds i32, ptr %80, i64 48
  %87 = load <16 x i32>, ptr %86, align 4, !tbaa !95
  %88 = add <16 x i32> %81, %76
  %89 = add <16 x i32> %83, %77
  %90 = add <16 x i32> %85, %78
  %91 = add <16 x i32> %87, %79
  store <16 x i32> %88, ptr %80, align 4, !tbaa !95
  store <16 x i32> %89, ptr %82, align 4, !tbaa !95
  store <16 x i32> %90, ptr %84, align 4, !tbaa !95
  store <16 x i32> %91, ptr %86, align 4, !tbaa !95
  %92 = add nuw i64 %67, 64
  %93 = icmp eq i64 %92, 9984
  br i1 %93, label %94, label %66, !llvm.loop !379

94:                                               ; preds = %66
  %95 = load i16, ptr %35, align 2, !tbaa !13
  %96 = zext i16 %95 to i32
  %97 = getelementptr inbounds i32, ptr %65, i64 9984
  %98 = load i32, ptr %97, align 4, !tbaa !95
  %99 = add i32 %98, %96
  store i32 %99, ptr %97, align 4, !tbaa !95
  %100 = load i16, ptr %36, align 2, !tbaa !13
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds i32, ptr %65, i64 9985
  %103 = load i32, ptr %102, align 4, !tbaa !95
  %104 = add i32 %103, %101
  store i32 %104, ptr %102, align 4, !tbaa !95
  %105 = load i16, ptr %37, align 2, !tbaa !13
  %106 = zext i16 %105 to i32
  %107 = getelementptr inbounds i32, ptr %65, i64 9986
  %108 = load i32, ptr %107, align 4, !tbaa !95
  %109 = add i32 %108, %106
  store i32 %109, ptr %107, align 4, !tbaa !95
  %110 = load i16, ptr %38, align 2, !tbaa !13
  %111 = zext i16 %110 to i32
  %112 = getelementptr inbounds i32, ptr %65, i64 9987
  %113 = load i32, ptr %112, align 4, !tbaa !95
  %114 = add i32 %113, %111
  store i32 %114, ptr %112, align 4, !tbaa !95
  %115 = load i16, ptr %39, align 2, !tbaa !13
  %116 = zext i16 %115 to i32
  %117 = getelementptr inbounds i32, ptr %65, i64 9988
  %118 = load i32, ptr %117, align 4, !tbaa !95
  %119 = add i32 %118, %116
  store i32 %119, ptr %117, align 4, !tbaa !95
  %120 = load i16, ptr %40, align 2, !tbaa !13
  %121 = zext i16 %120 to i32
  %122 = getelementptr inbounds i32, ptr %65, i64 9989
  %123 = load i32, ptr %122, align 4, !tbaa !95
  %124 = add i32 %123, %121
  store i32 %124, ptr %122, align 4, !tbaa !95
  %125 = load i16, ptr %41, align 2, !tbaa !13
  %126 = zext i16 %125 to i32
  %127 = getelementptr inbounds i32, ptr %65, i64 9990
  %128 = load i32, ptr %127, align 4, !tbaa !95
  %129 = add i32 %128, %126
  store i32 %129, ptr %127, align 4, !tbaa !95
  %130 = load i16, ptr %42, align 2, !tbaa !13
  %131 = zext i16 %130 to i32
  %132 = getelementptr inbounds i32, ptr %65, i64 9991
  %133 = load i32, ptr %132, align 4, !tbaa !95
  %134 = add i32 %133, %131
  store i32 %134, ptr %132, align 4, !tbaa !95
  %135 = load i16, ptr %43, align 2, !tbaa !13
  %136 = zext i16 %135 to i32
  %137 = getelementptr inbounds i32, ptr %65, i64 9992
  %138 = load i32, ptr %137, align 4, !tbaa !95
  %139 = add i32 %138, %136
  store i32 %139, ptr %137, align 4, !tbaa !95
  %140 = load i16, ptr %44, align 2, !tbaa !13
  %141 = zext i16 %140 to i32
  %142 = getelementptr inbounds i32, ptr %65, i64 9993
  %143 = load i32, ptr %142, align 4, !tbaa !95
  %144 = add i32 %143, %141
  store i32 %144, ptr %142, align 4, !tbaa !95
  %145 = load i16, ptr %45, align 2, !tbaa !13
  %146 = zext i16 %145 to i32
  %147 = getelementptr inbounds i32, ptr %65, i64 9994
  %148 = load i32, ptr %147, align 4, !tbaa !95
  %149 = add i32 %148, %146
  store i32 %149, ptr %147, align 4, !tbaa !95
  %150 = load i16, ptr %46, align 2, !tbaa !13
  %151 = zext i16 %150 to i32
  %152 = getelementptr inbounds i32, ptr %65, i64 9995
  %153 = load i32, ptr %152, align 4, !tbaa !95
  %154 = add i32 %153, %151
  store i32 %154, ptr %152, align 4, !tbaa !95
  %155 = load i16, ptr %47, align 2, !tbaa !13
  %156 = zext i16 %155 to i32
  %157 = getelementptr inbounds i32, ptr %65, i64 9996
  %158 = load i32, ptr %157, align 4, !tbaa !95
  %159 = add i32 %158, %156
  store i32 %159, ptr %157, align 4, !tbaa !95
  %160 = load i16, ptr %48, align 2, !tbaa !13
  %161 = zext i16 %160 to i32
  %162 = getelementptr inbounds i32, ptr %65, i64 9997
  %163 = load i32, ptr %162, align 4, !tbaa !95
  %164 = add i32 %163, %161
  store i32 %164, ptr %162, align 4, !tbaa !95
  %165 = load i16, ptr %49, align 2, !tbaa !13
  %166 = zext i16 %165 to i32
  %167 = getelementptr inbounds i32, ptr %65, i64 9998
  %168 = load i32, ptr %167, align 4, !tbaa !95
  %169 = add i32 %168, %166
  store i32 %169, ptr %167, align 4, !tbaa !95
  %170 = load i16, ptr %50, align 2, !tbaa !13
  %171 = zext i16 %170 to i32
  %172 = getelementptr inbounds i32, ptr %65, i64 9999
  %173 = load i32, ptr %172, align 4, !tbaa !95
  %174 = add i32 %173, %171
  store i32 %174, ptr %172, align 4, !tbaa !95
  %175 = add i64 %63, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %51, label %62, !prof !42

177:                                              ; preds = %25, %51
  %178 = landingpad { ptr, i32 }
          cleanup
  %179 = load ptr, ptr %4, align 8, !tbaa !5
  %180 = icmp eq ptr %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %60, %58, %177
  %182 = phi { ptr, i32 } [ %178, %177 ], [ %61, %60 ], [ %59, %58 ]
  %183 = phi ptr [ %179, %177 ], [ %6, %60 ], [ %6, %58 ]
  call void @_ZdaPv(ptr noundef nonnull %183) #13
  br label %184

184:                                              ; preds = %181, %177, %56
  %185 = phi { ptr, i32 } [ %57, %56 ], [ %178, %177 ], [ %182, %181 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %185

186:                                              ; preds = %52, %55
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::uniform_int_distribution", align 2
  %4 = alloca %"class.std::unique_ptr.44", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %7 unwind label %39

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #11
  store i16 0, ptr %3, align 2, !tbaa !9
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %3, i64 0, i32 1
  store i16 -1, ptr %8, align 2, !tbaa !12
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %3)
          to label %12 unwind label %43

12:                                               ; preds = %9
  %13 = getelementptr inbounds i16, ptr %5, i64 %10
  store i16 %11, ptr %13, align 2, !tbaa !13
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !14

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %17, align 4, !tbaa !94
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %21 unwind label %41

21:                                               ; preds = %18
  %22 = getelementptr inbounds i32, ptr %6, i64 %19
  store i32 %20, ptr %22, align 4, !tbaa !95
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !96

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %81

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %34, label %45, !prof !42

34:                                               ; preds = %78, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %35 unwind label %81

35:                                               ; preds = %34
  %36 = load ptr, ptr %4, align 8, !tbaa !5
  %37 = icmp eq ptr %36, null
  br i1 %37, label %90, label %38

38:                                               ; preds = %35
  call void @_ZdaPv(ptr noundef nonnull %36) #13
  br label %90

39:                                               ; preds = %1
  %40 = landingpad { ptr, i32 }
          cleanup
  br label %88

41:                                               ; preds = %18
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %85

43:                                               ; preds = %9
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %85

45:                                               ; preds = %30, %78
  %46 = phi i64 [ %79, %78 ], [ %29, %30 ]
  %47 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %4, i64 %47) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %48 = load ptr, ptr %4, align 8, !tbaa !5
  br label %49

49:                                               ; preds = %49, %45
  %50 = phi i64 [ 0, %45 ], [ %76, %49 ]
  %51 = getelementptr inbounds i16, ptr %5, i64 %50
  %52 = load <4 x i16>, ptr %51, align 2, !tbaa !13
  %53 = getelementptr inbounds i16, ptr %51, i64 4
  %54 = load <4 x i16>, ptr %53, align 2, !tbaa !13
  %55 = zext <4 x i16> %52 to <4 x i32>
  %56 = zext <4 x i16> %54 to <4 x i32>
  %57 = getelementptr inbounds i32, ptr %48, i64 %50
  %58 = load <4 x i32>, ptr %57, align 4, !tbaa !95
  %59 = getelementptr inbounds i32, ptr %57, i64 4
  %60 = load <4 x i32>, ptr %59, align 4, !tbaa !95
  %61 = add <4 x i32> %58, %55
  %62 = add <4 x i32> %60, %56
  store <4 x i32> %61, ptr %57, align 4, !tbaa !95
  store <4 x i32> %62, ptr %59, align 4, !tbaa !95
  %63 = or i64 %50, 8
  %64 = getelementptr inbounds i16, ptr %5, i64 %63
  %65 = load <4 x i16>, ptr %64, align 2, !tbaa !13
  %66 = getelementptr inbounds i16, ptr %64, i64 4
  %67 = load <4 x i16>, ptr %66, align 2, !tbaa !13
  %68 = zext <4 x i16> %65 to <4 x i32>
  %69 = zext <4 x i16> %67 to <4 x i32>
  %70 = getelementptr inbounds i32, ptr %48, i64 %63
  %71 = load <4 x i32>, ptr %70, align 4, !tbaa !95
  %72 = getelementptr inbounds i32, ptr %70, i64 4
  %73 = load <4 x i32>, ptr %72, align 4, !tbaa !95
  %74 = add <4 x i32> %71, %68
  %75 = add <4 x i32> %73, %69
  store <4 x i32> %74, ptr %70, align 4, !tbaa !95
  store <4 x i32> %75, ptr %72, align 4, !tbaa !95
  %76 = add nuw nsw i64 %50, 16
  %77 = icmp eq i64 %76, 10000
  br i1 %77, label %78, label %49, !llvm.loop !380

78:                                               ; preds = %49
  %79 = add i64 %46, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %34, label %45, !prof !42

81:                                               ; preds = %25, %34
  %82 = landingpad { ptr, i32 }
          cleanup
  %83 = load ptr, ptr %4, align 8, !tbaa !5
  %84 = icmp eq ptr %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %43, %41, %81
  %86 = phi { ptr, i32 } [ %82, %81 ], [ %44, %43 ], [ %42, %41 ]
  %87 = phi ptr [ %83, %81 ], [ %6, %43 ], [ %6, %41 ]
  call void @_ZdaPv(ptr noundef nonnull %87) #13
  br label %88

88:                                               ; preds = %85, %81, %39
  %89 = phi { ptr, i32 } [ %40, %39 ], [ %82, %81 ], [ %86, %85 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %89

90:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::unique_ptr.55", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %9, align 2, !tbaa !12
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i16, ptr %4, i64 %11
  store i16 %12, ptr %14, align 2, !tbaa !13
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !14

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i16, ptr %4, i64 %19
  %21 = load i16, ptr %20, align 2, !tbaa !13
  %22 = zext i16 %21 to i64
  %23 = getelementptr inbounds i64, ptr %7, i64 %19
  store i64 %22, ptr %23, align 8, !tbaa !147
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i16, ptr %4, i64 %24
  %26 = load i16, ptr %25, align 2, !tbaa !13
  %27 = zext i16 %26 to i64
  %28 = getelementptr inbounds i64, ptr %7, i64 %24
  store i64 %27, ptr %28, align 8, !tbaa !147
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i16, ptr %4, i64 %29
  %31 = load i16, ptr %30, align 2, !tbaa !13
  %32 = zext i16 %31 to i64
  %33 = getelementptr inbounds i64, ptr %7, i64 %29
  store i64 %32, ptr %33, align 8, !tbaa !147
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i16, ptr %4, i64 %34
  %36 = load i16, ptr %35, align 2, !tbaa !13
  %37 = zext i16 %36 to i64
  %38 = getelementptr inbounds i64, ptr %7, i64 %34
  store i64 %37, ptr %38, align 8, !tbaa !147
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i16, ptr %4, i64 %39
  %41 = load i16, ptr %40, align 2, !tbaa !13
  %42 = zext i16 %41 to i64
  %43 = getelementptr inbounds i64, ptr %7, i64 %39
  store i64 %42, ptr %43, align 8, !tbaa !147
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !381

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i16, ptr %4, i64 %47
  %49 = load <8 x i16>, ptr %48, align 2, !tbaa !13
  %50 = getelementptr inbounds i16, ptr %48, i64 8
  %51 = load <8 x i16>, ptr %50, align 2, !tbaa !13
  %52 = getelementptr inbounds i16, ptr %48, i64 16
  %53 = load <8 x i16>, ptr %52, align 2, !tbaa !13
  %54 = getelementptr inbounds i16, ptr %48, i64 24
  %55 = load <8 x i16>, ptr %54, align 2, !tbaa !13
  %56 = zext <8 x i16> %49 to <8 x i64>
  %57 = zext <8 x i16> %51 to <8 x i64>
  %58 = zext <8 x i16> %53 to <8 x i64>
  %59 = zext <8 x i16> %55 to <8 x i64>
  %60 = getelementptr inbounds i64, ptr %5, i64 %47
  store <8 x i64> %56, ptr %60, align 8, !tbaa !147
  %61 = getelementptr inbounds i64, ptr %60, i64 8
  store <8 x i64> %57, ptr %61, align 8, !tbaa !147
  %62 = getelementptr inbounds i64, ptr %60, i64 16
  store <8 x i64> %58, ptr %62, align 8, !tbaa !147
  %63 = getelementptr inbounds i64, ptr %60, i64 24
  store <8 x i64> %59, ptr %63, align 8, !tbaa !147
  %64 = add nuw i64 %47, 32
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !382

66:                                               ; preds = %46
  %67 = getelementptr inbounds i16, ptr %4, i64 9984
  %68 = load i16, ptr %67, align 2, !tbaa !13
  %69 = zext i16 %68 to i64
  %70 = getelementptr inbounds i64, ptr %5, i64 9984
  store i64 %69, ptr %70, align 8, !tbaa !147
  %71 = getelementptr inbounds i16, ptr %4, i64 9985
  %72 = load i16, ptr %71, align 2, !tbaa !13
  %73 = zext i16 %72 to i64
  %74 = getelementptr inbounds i64, ptr %5, i64 9985
  store i64 %73, ptr %74, align 8, !tbaa !147
  %75 = getelementptr inbounds i16, ptr %4, i64 9986
  %76 = load i16, ptr %75, align 2, !tbaa !13
  %77 = zext i16 %76 to i64
  %78 = getelementptr inbounds i64, ptr %5, i64 9986
  store i64 %77, ptr %78, align 8, !tbaa !147
  %79 = getelementptr inbounds i16, ptr %4, i64 9987
  %80 = load i16, ptr %79, align 2, !tbaa !13
  %81 = zext i16 %80 to i64
  %82 = getelementptr inbounds i64, ptr %5, i64 9987
  store i64 %81, ptr %82, align 8, !tbaa !147
  %83 = getelementptr inbounds i16, ptr %4, i64 9988
  %84 = load i16, ptr %83, align 2, !tbaa !13
  %85 = zext i16 %84 to i64
  %86 = getelementptr inbounds i64, ptr %5, i64 9988
  store i64 %85, ptr %86, align 8, !tbaa !147
  %87 = getelementptr inbounds i16, ptr %4, i64 9989
  %88 = load i16, ptr %87, align 2, !tbaa !13
  %89 = zext i16 %88 to i64
  %90 = getelementptr inbounds i64, ptr %5, i64 9989
  store i64 %89, ptr %90, align 8, !tbaa !147
  %91 = getelementptr inbounds i16, ptr %4, i64 9990
  %92 = load i16, ptr %91, align 2, !tbaa !13
  %93 = zext i16 %92 to i64
  %94 = getelementptr inbounds i64, ptr %5, i64 9990
  store i64 %93, ptr %94, align 8, !tbaa !147
  %95 = getelementptr inbounds i16, ptr %4, i64 9991
  %96 = load i16, ptr %95, align 2, !tbaa !13
  %97 = zext i16 %96 to i64
  %98 = getelementptr inbounds i64, ptr %5, i64 9991
  store i64 %97, ptr %98, align 8, !tbaa !147
  %99 = getelementptr inbounds i16, ptr %4, i64 9992
  %100 = load i16, ptr %99, align 2, !tbaa !13
  %101 = zext i16 %100 to i64
  %102 = getelementptr inbounds i64, ptr %5, i64 9992
  store i64 %101, ptr %102, align 8, !tbaa !147
  %103 = getelementptr inbounds i16, ptr %4, i64 9993
  %104 = load i16, ptr %103, align 2, !tbaa !13
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds i64, ptr %5, i64 9993
  store i64 %105, ptr %106, align 8, !tbaa !147
  %107 = getelementptr inbounds i16, ptr %4, i64 9994
  %108 = load i16, ptr %107, align 2, !tbaa !13
  %109 = zext i16 %108 to i64
  %110 = getelementptr inbounds i64, ptr %5, i64 9994
  store i64 %109, ptr %110, align 8, !tbaa !147
  %111 = getelementptr inbounds i16, ptr %4, i64 9995
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = zext i16 %112 to i64
  %114 = getelementptr inbounds i64, ptr %5, i64 9995
  store i64 %113, ptr %114, align 8, !tbaa !147
  %115 = getelementptr inbounds i16, ptr %4, i64 9996
  %116 = load i16, ptr %115, align 2, !tbaa !13
  %117 = zext i16 %116 to i64
  %118 = getelementptr inbounds i64, ptr %5, i64 9996
  store i64 %117, ptr %118, align 8, !tbaa !147
  %119 = getelementptr inbounds i16, ptr %4, i64 9997
  %120 = load i16, ptr %119, align 2, !tbaa !13
  %121 = zext i16 %120 to i64
  %122 = getelementptr inbounds i64, ptr %5, i64 9997
  store i64 %121, ptr %122, align 8, !tbaa !147
  %123 = getelementptr inbounds i16, ptr %4, i64 9998
  %124 = load i16, ptr %123, align 2, !tbaa !13
  %125 = zext i16 %124 to i64
  %126 = getelementptr inbounds i64, ptr %5, i64 9998
  store i64 %125, ptr %126, align 8, !tbaa !147
  %127 = getelementptr inbounds i16, ptr %4, i64 9999
  %128 = load i16, ptr %127, align 2, !tbaa !13
  %129 = zext i16 %128 to i64
  %130 = getelementptr inbounds i64, ptr %5, i64 9999
  store i64 %129, ptr %130, align 8, !tbaa !147
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %316

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %313

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %309

137:                                              ; preds = %198, %66
  %138 = phi i64 [ 0, %66 ], [ %199, %198 ]
  %139 = getelementptr inbounds i64, ptr %5, i64 %138
  %140 = load i64, ptr %139, align 8, !tbaa !147
  %141 = getelementptr inbounds i64, ptr %7, i64 %138
  %142 = load i64, ptr %141, align 8, !tbaa !147
  %143 = icmp eq i64 %140, %142
  br i1 %143, label %170, label %144

144:                                              ; preds = %191, %184, %177, %170, %137
  %145 = phi i64 [ %138, %137 ], [ %171, %170 ], [ %178, %177 ], [ %185, %184 ], [ %192, %191 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i64, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %168

149:                                              ; preds = %144
  %150 = getelementptr inbounds i16, ptr %4, i64 %146
  %151 = load i16, ptr %150, align 2, !tbaa !13
  %152 = zext i16 %151 to i64
  %153 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %152)
          to label %154 unwind label %168

154:                                              ; preds = %149
  %155 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %153, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %156 unwind label %168

156:                                              ; preds = %154
  %157 = getelementptr inbounds i64, ptr %5, i64 %146
  %158 = load i64, ptr %157, align 8, !tbaa !147
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %153, i64 noundef %158)
          to label %160 unwind label %168

160:                                              ; preds = %156
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %162 unwind label %168

162:                                              ; preds = %160
  %163 = load i64, ptr %147, align 8, !tbaa !147
  %164 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %159, i64 noundef %163)
          to label %165 unwind label %168

165:                                              ; preds = %162
  %166 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %164, ptr noundef nonnull @.str.149)
          to label %167 unwind label %168

167:                                              ; preds = %165
  call void @exit(i32 noundef 1) #12
  unreachable

168:                                              ; preds = %165, %162, %160, %156, %154, %149, %144
  %169 = landingpad { ptr, i32 }
          cleanup
  br label %309

170:                                              ; preds = %137
  %171 = add nuw nsw i64 %138, 1
  %172 = getelementptr inbounds i64, ptr %5, i64 %171
  %173 = load i64, ptr %172, align 8, !tbaa !147
  %174 = getelementptr inbounds i64, ptr %7, i64 %171
  %175 = load i64, ptr %174, align 8, !tbaa !147
  %176 = icmp eq i64 %173, %175
  br i1 %176, label %177, label %144

177:                                              ; preds = %170
  %178 = add nuw nsw i64 %138, 2
  %179 = getelementptr inbounds i64, ptr %5, i64 %178
  %180 = load i64, ptr %179, align 8, !tbaa !147
  %181 = getelementptr inbounds i64, ptr %7, i64 %178
  %182 = load i64, ptr %181, align 8, !tbaa !147
  %183 = icmp eq i64 %180, %182
  br i1 %183, label %184, label %144

184:                                              ; preds = %177
  %185 = add nuw nsw i64 %138, 3
  %186 = getelementptr inbounds i64, ptr %5, i64 %185
  %187 = load i64, ptr %186, align 8, !tbaa !147
  %188 = getelementptr inbounds i64, ptr %7, i64 %185
  %189 = load i64, ptr %188, align 8, !tbaa !147
  %190 = icmp eq i64 %187, %189
  br i1 %190, label %191, label %144

191:                                              ; preds = %184
  %192 = add nuw nsw i64 %138, 4
  %193 = getelementptr inbounds i64, ptr %5, i64 %192
  %194 = load i64, ptr %193, align 8, !tbaa !147
  %195 = getelementptr inbounds i64, ptr %7, i64 %192
  %196 = load i64, ptr %195, align 8, !tbaa !147
  %197 = icmp eq i64 %194, %196
  br i1 %197, label %198, label %144

198:                                              ; preds = %191
  %199 = add nuw nsw i64 %138, 5
  %200 = icmp eq i64 %199, 10000
  br i1 %200, label %201, label %137, !llvm.loop !383

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %203 = load i8, ptr %202, align 2, !tbaa !23, !range !40, !noundef !41
  %204 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %205 = load i64, ptr %204, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %206 unwind label %232

206:                                              ; preds = %201
  %207 = icmp ne i8 %203, 0
  %208 = icmp eq i64 %205, 0
  %209 = select i1 %207, i1 true, i1 %208
  br i1 %209, label %227, label %210, !prof !42

210:                                              ; preds = %206
  %211 = getelementptr inbounds i16, ptr %4, i64 9984
  %212 = getelementptr inbounds i16, ptr %4, i64 9985
  %213 = getelementptr inbounds i16, ptr %4, i64 9986
  %214 = getelementptr inbounds i16, ptr %4, i64 9987
  %215 = getelementptr inbounds i16, ptr %4, i64 9988
  %216 = getelementptr inbounds i16, ptr %4, i64 9989
  %217 = getelementptr inbounds i16, ptr %4, i64 9990
  %218 = getelementptr inbounds i16, ptr %4, i64 9991
  %219 = getelementptr inbounds i16, ptr %4, i64 9992
  %220 = getelementptr inbounds i16, ptr %4, i64 9993
  %221 = getelementptr inbounds i16, ptr %4, i64 9994
  %222 = getelementptr inbounds i16, ptr %4, i64 9995
  %223 = getelementptr inbounds i16, ptr %4, i64 9996
  %224 = getelementptr inbounds i16, ptr %4, i64 9997
  %225 = getelementptr inbounds i16, ptr %4, i64 9998
  %226 = getelementptr inbounds i16, ptr %4, i64 9999
  br label %234

227:                                              ; preds = %258, %206
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %228 unwind label %232

228:                                              ; preds = %227
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %229 = load ptr, ptr %3, align 8, !tbaa !5
  %230 = icmp eq ptr %229, null
  br i1 %230, label %318, label %231

231:                                              ; preds = %228
  call void @_ZdaPv(ptr noundef nonnull %229) #13
  br label %318

232:                                              ; preds = %227, %201
  %233 = landingpad { ptr, i32 }
          cleanup
  br label %309

234:                                              ; preds = %210, %258
  %235 = phi i64 [ %307, %258 ], [ %205, %210 ]
  %236 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %3, i64 %236) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %237 = load ptr, ptr %3, align 8, !tbaa !5
  br label %238

238:                                              ; preds = %238, %234
  %239 = phi i64 [ 0, %234 ], [ %256, %238 ]
  %240 = getelementptr inbounds i16, ptr %4, i64 %239
  %241 = load <8 x i16>, ptr %240, align 2, !tbaa !13
  %242 = getelementptr inbounds i16, ptr %240, i64 8
  %243 = load <8 x i16>, ptr %242, align 2, !tbaa !13
  %244 = getelementptr inbounds i16, ptr %240, i64 16
  %245 = load <8 x i16>, ptr %244, align 2, !tbaa !13
  %246 = getelementptr inbounds i16, ptr %240, i64 24
  %247 = load <8 x i16>, ptr %246, align 2, !tbaa !13
  %248 = zext <8 x i16> %241 to <8 x i64>
  %249 = zext <8 x i16> %243 to <8 x i64>
  %250 = zext <8 x i16> %245 to <8 x i64>
  %251 = zext <8 x i16> %247 to <8 x i64>
  %252 = getelementptr inbounds i64, ptr %237, i64 %239
  store <8 x i64> %248, ptr %252, align 8, !tbaa !147
  %253 = getelementptr inbounds i64, ptr %252, i64 8
  store <8 x i64> %249, ptr %253, align 8, !tbaa !147
  %254 = getelementptr inbounds i64, ptr %252, i64 16
  store <8 x i64> %250, ptr %254, align 8, !tbaa !147
  %255 = getelementptr inbounds i64, ptr %252, i64 24
  store <8 x i64> %251, ptr %255, align 8, !tbaa !147
  %256 = add nuw i64 %239, 32
  %257 = icmp eq i64 %256, 9984
  br i1 %257, label %258, label %238, !llvm.loop !384

258:                                              ; preds = %238
  %259 = load i16, ptr %211, align 2, !tbaa !13
  %260 = zext i16 %259 to i64
  %261 = getelementptr inbounds i64, ptr %237, i64 9984
  store i64 %260, ptr %261, align 8, !tbaa !147
  %262 = load i16, ptr %212, align 2, !tbaa !13
  %263 = zext i16 %262 to i64
  %264 = getelementptr inbounds i64, ptr %237, i64 9985
  store i64 %263, ptr %264, align 8, !tbaa !147
  %265 = load i16, ptr %213, align 2, !tbaa !13
  %266 = zext i16 %265 to i64
  %267 = getelementptr inbounds i64, ptr %237, i64 9986
  store i64 %266, ptr %267, align 8, !tbaa !147
  %268 = load i16, ptr %214, align 2, !tbaa !13
  %269 = zext i16 %268 to i64
  %270 = getelementptr inbounds i64, ptr %237, i64 9987
  store i64 %269, ptr %270, align 8, !tbaa !147
  %271 = load i16, ptr %215, align 2, !tbaa !13
  %272 = zext i16 %271 to i64
  %273 = getelementptr inbounds i64, ptr %237, i64 9988
  store i64 %272, ptr %273, align 8, !tbaa !147
  %274 = load i16, ptr %216, align 2, !tbaa !13
  %275 = zext i16 %274 to i64
  %276 = getelementptr inbounds i64, ptr %237, i64 9989
  store i64 %275, ptr %276, align 8, !tbaa !147
  %277 = load i16, ptr %217, align 2, !tbaa !13
  %278 = zext i16 %277 to i64
  %279 = getelementptr inbounds i64, ptr %237, i64 9990
  store i64 %278, ptr %279, align 8, !tbaa !147
  %280 = load i16, ptr %218, align 2, !tbaa !13
  %281 = zext i16 %280 to i64
  %282 = getelementptr inbounds i64, ptr %237, i64 9991
  store i64 %281, ptr %282, align 8, !tbaa !147
  %283 = load i16, ptr %219, align 2, !tbaa !13
  %284 = zext i16 %283 to i64
  %285 = getelementptr inbounds i64, ptr %237, i64 9992
  store i64 %284, ptr %285, align 8, !tbaa !147
  %286 = load i16, ptr %220, align 2, !tbaa !13
  %287 = zext i16 %286 to i64
  %288 = getelementptr inbounds i64, ptr %237, i64 9993
  store i64 %287, ptr %288, align 8, !tbaa !147
  %289 = load i16, ptr %221, align 2, !tbaa !13
  %290 = zext i16 %289 to i64
  %291 = getelementptr inbounds i64, ptr %237, i64 9994
  store i64 %290, ptr %291, align 8, !tbaa !147
  %292 = load i16, ptr %222, align 2, !tbaa !13
  %293 = zext i16 %292 to i64
  %294 = getelementptr inbounds i64, ptr %237, i64 9995
  store i64 %293, ptr %294, align 8, !tbaa !147
  %295 = load i16, ptr %223, align 2, !tbaa !13
  %296 = zext i16 %295 to i64
  %297 = getelementptr inbounds i64, ptr %237, i64 9996
  store i64 %296, ptr %297, align 8, !tbaa !147
  %298 = load i16, ptr %224, align 2, !tbaa !13
  %299 = zext i16 %298 to i64
  %300 = getelementptr inbounds i64, ptr %237, i64 9997
  store i64 %299, ptr %300, align 8, !tbaa !147
  %301 = load i16, ptr %225, align 2, !tbaa !13
  %302 = zext i16 %301 to i64
  %303 = getelementptr inbounds i64, ptr %237, i64 9998
  store i64 %302, ptr %303, align 8, !tbaa !147
  %304 = load i16, ptr %226, align 2, !tbaa !13
  %305 = zext i16 %304 to i64
  %306 = getelementptr inbounds i64, ptr %237, i64 9999
  store i64 %305, ptr %306, align 8, !tbaa !147
  %307 = add i64 %235, -1
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %227, label %234, !prof !42

309:                                              ; preds = %232, %168, %135
  %310 = phi { ptr, i32 } [ %169, %168 ], [ %233, %232 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %311 = load ptr, ptr %3, align 8, !tbaa !5
  %312 = icmp eq ptr %311, null
  br i1 %312, label %316, label %313

313:                                              ; preds = %309, %133
  %314 = phi { ptr, i32 } [ %134, %133 ], [ %310, %309 ]
  %315 = phi ptr [ %5, %133 ], [ %311, %309 ]
  call void @_ZdaPv(ptr noundef nonnull %315) #13
  br label %316

316:                                              ; preds = %313, %309, %131
  %317 = phi { ptr, i32 } [ %132, %131 ], [ %310, %309 ], [ %314, %313 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %317

318:                                              ; preds = %228, %231
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::unique_ptr.55", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %9, align 2, !tbaa !12
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i16, ptr %4, i64 %11
  store i16 %12, ptr %14, align 2, !tbaa !13
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !14

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i16, ptr %4, i64 %19
  %21 = load i16, ptr %20, align 2, !tbaa !13
  %22 = zext i16 %21 to i64
  %23 = getelementptr inbounds i64, ptr %7, i64 %19
  store i64 %22, ptr %23, align 8, !tbaa !147
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i16, ptr %4, i64 %24
  %26 = load i16, ptr %25, align 2, !tbaa !13
  %27 = zext i16 %26 to i64
  %28 = getelementptr inbounds i64, ptr %7, i64 %24
  store i64 %27, ptr %28, align 8, !tbaa !147
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i16, ptr %4, i64 %29
  %31 = load i16, ptr %30, align 2, !tbaa !13
  %32 = zext i16 %31 to i64
  %33 = getelementptr inbounds i64, ptr %7, i64 %29
  store i64 %32, ptr %33, align 8, !tbaa !147
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i16, ptr %4, i64 %34
  %36 = load i16, ptr %35, align 2, !tbaa !13
  %37 = zext i16 %36 to i64
  %38 = getelementptr inbounds i64, ptr %7, i64 %34
  store i64 %37, ptr %38, align 8, !tbaa !147
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i16, ptr %4, i64 %39
  %41 = load i16, ptr %40, align 2, !tbaa !13
  %42 = zext i16 %41 to i64
  %43 = getelementptr inbounds i64, ptr %7, i64 %39
  store i64 %42, ptr %43, align 8, !tbaa !147
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !381

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i16, ptr %4, i64 %47
  %49 = load <16 x i16>, ptr %48, align 2, !tbaa !13
  %50 = getelementptr inbounds i16, ptr %48, i64 16
  %51 = load <16 x i16>, ptr %50, align 2, !tbaa !13
  %52 = getelementptr inbounds i16, ptr %48, i64 32
  %53 = load <16 x i16>, ptr %52, align 2, !tbaa !13
  %54 = getelementptr inbounds i16, ptr %48, i64 48
  %55 = load <16 x i16>, ptr %54, align 2, !tbaa !13
  %56 = zext <16 x i16> %49 to <16 x i64>
  %57 = zext <16 x i16> %51 to <16 x i64>
  %58 = zext <16 x i16> %53 to <16 x i64>
  %59 = zext <16 x i16> %55 to <16 x i64>
  %60 = getelementptr inbounds i64, ptr %5, i64 %47
  store <16 x i64> %56, ptr %60, align 8, !tbaa !147
  %61 = getelementptr inbounds i64, ptr %60, i64 16
  store <16 x i64> %57, ptr %61, align 8, !tbaa !147
  %62 = getelementptr inbounds i64, ptr %60, i64 32
  store <16 x i64> %58, ptr %62, align 8, !tbaa !147
  %63 = getelementptr inbounds i64, ptr %60, i64 48
  store <16 x i64> %59, ptr %63, align 8, !tbaa !147
  %64 = add nuw i64 %47, 64
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !385

66:                                               ; preds = %46
  %67 = getelementptr inbounds i16, ptr %4, i64 9984
  %68 = load i16, ptr %67, align 2, !tbaa !13
  %69 = zext i16 %68 to i64
  %70 = getelementptr inbounds i64, ptr %5, i64 9984
  store i64 %69, ptr %70, align 8, !tbaa !147
  %71 = getelementptr inbounds i16, ptr %4, i64 9985
  %72 = load i16, ptr %71, align 2, !tbaa !13
  %73 = zext i16 %72 to i64
  %74 = getelementptr inbounds i64, ptr %5, i64 9985
  store i64 %73, ptr %74, align 8, !tbaa !147
  %75 = getelementptr inbounds i16, ptr %4, i64 9986
  %76 = load i16, ptr %75, align 2, !tbaa !13
  %77 = zext i16 %76 to i64
  %78 = getelementptr inbounds i64, ptr %5, i64 9986
  store i64 %77, ptr %78, align 8, !tbaa !147
  %79 = getelementptr inbounds i16, ptr %4, i64 9987
  %80 = load i16, ptr %79, align 2, !tbaa !13
  %81 = zext i16 %80 to i64
  %82 = getelementptr inbounds i64, ptr %5, i64 9987
  store i64 %81, ptr %82, align 8, !tbaa !147
  %83 = getelementptr inbounds i16, ptr %4, i64 9988
  %84 = load i16, ptr %83, align 2, !tbaa !13
  %85 = zext i16 %84 to i64
  %86 = getelementptr inbounds i64, ptr %5, i64 9988
  store i64 %85, ptr %86, align 8, !tbaa !147
  %87 = getelementptr inbounds i16, ptr %4, i64 9989
  %88 = load i16, ptr %87, align 2, !tbaa !13
  %89 = zext i16 %88 to i64
  %90 = getelementptr inbounds i64, ptr %5, i64 9989
  store i64 %89, ptr %90, align 8, !tbaa !147
  %91 = getelementptr inbounds i16, ptr %4, i64 9990
  %92 = load i16, ptr %91, align 2, !tbaa !13
  %93 = zext i16 %92 to i64
  %94 = getelementptr inbounds i64, ptr %5, i64 9990
  store i64 %93, ptr %94, align 8, !tbaa !147
  %95 = getelementptr inbounds i16, ptr %4, i64 9991
  %96 = load i16, ptr %95, align 2, !tbaa !13
  %97 = zext i16 %96 to i64
  %98 = getelementptr inbounds i64, ptr %5, i64 9991
  store i64 %97, ptr %98, align 8, !tbaa !147
  %99 = getelementptr inbounds i16, ptr %4, i64 9992
  %100 = load i16, ptr %99, align 2, !tbaa !13
  %101 = zext i16 %100 to i64
  %102 = getelementptr inbounds i64, ptr %5, i64 9992
  store i64 %101, ptr %102, align 8, !tbaa !147
  %103 = getelementptr inbounds i16, ptr %4, i64 9993
  %104 = load i16, ptr %103, align 2, !tbaa !13
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds i64, ptr %5, i64 9993
  store i64 %105, ptr %106, align 8, !tbaa !147
  %107 = getelementptr inbounds i16, ptr %4, i64 9994
  %108 = load i16, ptr %107, align 2, !tbaa !13
  %109 = zext i16 %108 to i64
  %110 = getelementptr inbounds i64, ptr %5, i64 9994
  store i64 %109, ptr %110, align 8, !tbaa !147
  %111 = getelementptr inbounds i16, ptr %4, i64 9995
  %112 = load i16, ptr %111, align 2, !tbaa !13
  %113 = zext i16 %112 to i64
  %114 = getelementptr inbounds i64, ptr %5, i64 9995
  store i64 %113, ptr %114, align 8, !tbaa !147
  %115 = getelementptr inbounds i16, ptr %4, i64 9996
  %116 = load i16, ptr %115, align 2, !tbaa !13
  %117 = zext i16 %116 to i64
  %118 = getelementptr inbounds i64, ptr %5, i64 9996
  store i64 %117, ptr %118, align 8, !tbaa !147
  %119 = getelementptr inbounds i16, ptr %4, i64 9997
  %120 = load i16, ptr %119, align 2, !tbaa !13
  %121 = zext i16 %120 to i64
  %122 = getelementptr inbounds i64, ptr %5, i64 9997
  store i64 %121, ptr %122, align 8, !tbaa !147
  %123 = getelementptr inbounds i16, ptr %4, i64 9998
  %124 = load i16, ptr %123, align 2, !tbaa !13
  %125 = zext i16 %124 to i64
  %126 = getelementptr inbounds i64, ptr %5, i64 9998
  store i64 %125, ptr %126, align 8, !tbaa !147
  %127 = getelementptr inbounds i16, ptr %4, i64 9999
  %128 = load i16, ptr %127, align 2, !tbaa !13
  %129 = zext i16 %128 to i64
  %130 = getelementptr inbounds i64, ptr %5, i64 9999
  store i64 %129, ptr %130, align 8, !tbaa !147
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %316

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %313

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %309

137:                                              ; preds = %198, %66
  %138 = phi i64 [ 0, %66 ], [ %199, %198 ]
  %139 = getelementptr inbounds i64, ptr %5, i64 %138
  %140 = load i64, ptr %139, align 8, !tbaa !147
  %141 = getelementptr inbounds i64, ptr %7, i64 %138
  %142 = load i64, ptr %141, align 8, !tbaa !147
  %143 = icmp eq i64 %140, %142
  br i1 %143, label %170, label %144

144:                                              ; preds = %191, %184, %177, %170, %137
  %145 = phi i64 [ %138, %137 ], [ %171, %170 ], [ %178, %177 ], [ %185, %184 ], [ %192, %191 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i64, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %168

149:                                              ; preds = %144
  %150 = getelementptr inbounds i16, ptr %4, i64 %146
  %151 = load i16, ptr %150, align 2, !tbaa !13
  %152 = zext i16 %151 to i64
  %153 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %152)
          to label %154 unwind label %168

154:                                              ; preds = %149
  %155 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %153, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %156 unwind label %168

156:                                              ; preds = %154
  %157 = getelementptr inbounds i64, ptr %5, i64 %146
  %158 = load i64, ptr %157, align 8, !tbaa !147
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %153, i64 noundef %158)
          to label %160 unwind label %168

160:                                              ; preds = %156
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %162 unwind label %168

162:                                              ; preds = %160
  %163 = load i64, ptr %147, align 8, !tbaa !147
  %164 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %159, i64 noundef %163)
          to label %165 unwind label %168

165:                                              ; preds = %162
  %166 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %164, ptr noundef nonnull @.str.149)
          to label %167 unwind label %168

167:                                              ; preds = %165
  call void @exit(i32 noundef 1) #12
  unreachable

168:                                              ; preds = %165, %162, %160, %156, %154, %149, %144
  %169 = landingpad { ptr, i32 }
          cleanup
  br label %309

170:                                              ; preds = %137
  %171 = add nuw nsw i64 %138, 1
  %172 = getelementptr inbounds i64, ptr %5, i64 %171
  %173 = load i64, ptr %172, align 8, !tbaa !147
  %174 = getelementptr inbounds i64, ptr %7, i64 %171
  %175 = load i64, ptr %174, align 8, !tbaa !147
  %176 = icmp eq i64 %173, %175
  br i1 %176, label %177, label %144

177:                                              ; preds = %170
  %178 = add nuw nsw i64 %138, 2
  %179 = getelementptr inbounds i64, ptr %5, i64 %178
  %180 = load i64, ptr %179, align 8, !tbaa !147
  %181 = getelementptr inbounds i64, ptr %7, i64 %178
  %182 = load i64, ptr %181, align 8, !tbaa !147
  %183 = icmp eq i64 %180, %182
  br i1 %183, label %184, label %144

184:                                              ; preds = %177
  %185 = add nuw nsw i64 %138, 3
  %186 = getelementptr inbounds i64, ptr %5, i64 %185
  %187 = load i64, ptr %186, align 8, !tbaa !147
  %188 = getelementptr inbounds i64, ptr %7, i64 %185
  %189 = load i64, ptr %188, align 8, !tbaa !147
  %190 = icmp eq i64 %187, %189
  br i1 %190, label %191, label %144

191:                                              ; preds = %184
  %192 = add nuw nsw i64 %138, 4
  %193 = getelementptr inbounds i64, ptr %5, i64 %192
  %194 = load i64, ptr %193, align 8, !tbaa !147
  %195 = getelementptr inbounds i64, ptr %7, i64 %192
  %196 = load i64, ptr %195, align 8, !tbaa !147
  %197 = icmp eq i64 %194, %196
  br i1 %197, label %198, label %144

198:                                              ; preds = %191
  %199 = add nuw nsw i64 %138, 5
  %200 = icmp eq i64 %199, 10000
  br i1 %200, label %201, label %137, !llvm.loop !383

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %203 = load i8, ptr %202, align 2, !tbaa !23, !range !40, !noundef !41
  %204 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %205 = load i64, ptr %204, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %206 unwind label %232

206:                                              ; preds = %201
  %207 = icmp ne i8 %203, 0
  %208 = icmp eq i64 %205, 0
  %209 = select i1 %207, i1 true, i1 %208
  br i1 %209, label %227, label %210, !prof !42

210:                                              ; preds = %206
  %211 = getelementptr inbounds i16, ptr %4, i64 9984
  %212 = getelementptr inbounds i16, ptr %4, i64 9985
  %213 = getelementptr inbounds i16, ptr %4, i64 9986
  %214 = getelementptr inbounds i16, ptr %4, i64 9987
  %215 = getelementptr inbounds i16, ptr %4, i64 9988
  %216 = getelementptr inbounds i16, ptr %4, i64 9989
  %217 = getelementptr inbounds i16, ptr %4, i64 9990
  %218 = getelementptr inbounds i16, ptr %4, i64 9991
  %219 = getelementptr inbounds i16, ptr %4, i64 9992
  %220 = getelementptr inbounds i16, ptr %4, i64 9993
  %221 = getelementptr inbounds i16, ptr %4, i64 9994
  %222 = getelementptr inbounds i16, ptr %4, i64 9995
  %223 = getelementptr inbounds i16, ptr %4, i64 9996
  %224 = getelementptr inbounds i16, ptr %4, i64 9997
  %225 = getelementptr inbounds i16, ptr %4, i64 9998
  %226 = getelementptr inbounds i16, ptr %4, i64 9999
  br label %234

227:                                              ; preds = %258, %206
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %228 unwind label %232

228:                                              ; preds = %227
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %229 = load ptr, ptr %3, align 8, !tbaa !5
  %230 = icmp eq ptr %229, null
  br i1 %230, label %318, label %231

231:                                              ; preds = %228
  call void @_ZdaPv(ptr noundef nonnull %229) #13
  br label %318

232:                                              ; preds = %227, %201
  %233 = landingpad { ptr, i32 }
          cleanup
  br label %309

234:                                              ; preds = %210, %258
  %235 = phi i64 [ %307, %258 ], [ %205, %210 ]
  %236 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %3, i64 %236) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %237 = load ptr, ptr %3, align 8, !tbaa !5
  br label %238

238:                                              ; preds = %238, %234
  %239 = phi i64 [ 0, %234 ], [ %256, %238 ]
  %240 = getelementptr inbounds i16, ptr %4, i64 %239
  %241 = load <16 x i16>, ptr %240, align 2, !tbaa !13
  %242 = getelementptr inbounds i16, ptr %240, i64 16
  %243 = load <16 x i16>, ptr %242, align 2, !tbaa !13
  %244 = getelementptr inbounds i16, ptr %240, i64 32
  %245 = load <16 x i16>, ptr %244, align 2, !tbaa !13
  %246 = getelementptr inbounds i16, ptr %240, i64 48
  %247 = load <16 x i16>, ptr %246, align 2, !tbaa !13
  %248 = zext <16 x i16> %241 to <16 x i64>
  %249 = zext <16 x i16> %243 to <16 x i64>
  %250 = zext <16 x i16> %245 to <16 x i64>
  %251 = zext <16 x i16> %247 to <16 x i64>
  %252 = getelementptr inbounds i64, ptr %237, i64 %239
  store <16 x i64> %248, ptr %252, align 8, !tbaa !147
  %253 = getelementptr inbounds i64, ptr %252, i64 16
  store <16 x i64> %249, ptr %253, align 8, !tbaa !147
  %254 = getelementptr inbounds i64, ptr %252, i64 32
  store <16 x i64> %250, ptr %254, align 8, !tbaa !147
  %255 = getelementptr inbounds i64, ptr %252, i64 48
  store <16 x i64> %251, ptr %255, align 8, !tbaa !147
  %256 = add nuw i64 %239, 64
  %257 = icmp eq i64 %256, 9984
  br i1 %257, label %258, label %238, !llvm.loop !386

258:                                              ; preds = %238
  %259 = load i16, ptr %211, align 2, !tbaa !13
  %260 = zext i16 %259 to i64
  %261 = getelementptr inbounds i64, ptr %237, i64 9984
  store i64 %260, ptr %261, align 8, !tbaa !147
  %262 = load i16, ptr %212, align 2, !tbaa !13
  %263 = zext i16 %262 to i64
  %264 = getelementptr inbounds i64, ptr %237, i64 9985
  store i64 %263, ptr %264, align 8, !tbaa !147
  %265 = load i16, ptr %213, align 2, !tbaa !13
  %266 = zext i16 %265 to i64
  %267 = getelementptr inbounds i64, ptr %237, i64 9986
  store i64 %266, ptr %267, align 8, !tbaa !147
  %268 = load i16, ptr %214, align 2, !tbaa !13
  %269 = zext i16 %268 to i64
  %270 = getelementptr inbounds i64, ptr %237, i64 9987
  store i64 %269, ptr %270, align 8, !tbaa !147
  %271 = load i16, ptr %215, align 2, !tbaa !13
  %272 = zext i16 %271 to i64
  %273 = getelementptr inbounds i64, ptr %237, i64 9988
  store i64 %272, ptr %273, align 8, !tbaa !147
  %274 = load i16, ptr %216, align 2, !tbaa !13
  %275 = zext i16 %274 to i64
  %276 = getelementptr inbounds i64, ptr %237, i64 9989
  store i64 %275, ptr %276, align 8, !tbaa !147
  %277 = load i16, ptr %217, align 2, !tbaa !13
  %278 = zext i16 %277 to i64
  %279 = getelementptr inbounds i64, ptr %237, i64 9990
  store i64 %278, ptr %279, align 8, !tbaa !147
  %280 = load i16, ptr %218, align 2, !tbaa !13
  %281 = zext i16 %280 to i64
  %282 = getelementptr inbounds i64, ptr %237, i64 9991
  store i64 %281, ptr %282, align 8, !tbaa !147
  %283 = load i16, ptr %219, align 2, !tbaa !13
  %284 = zext i16 %283 to i64
  %285 = getelementptr inbounds i64, ptr %237, i64 9992
  store i64 %284, ptr %285, align 8, !tbaa !147
  %286 = load i16, ptr %220, align 2, !tbaa !13
  %287 = zext i16 %286 to i64
  %288 = getelementptr inbounds i64, ptr %237, i64 9993
  store i64 %287, ptr %288, align 8, !tbaa !147
  %289 = load i16, ptr %221, align 2, !tbaa !13
  %290 = zext i16 %289 to i64
  %291 = getelementptr inbounds i64, ptr %237, i64 9994
  store i64 %290, ptr %291, align 8, !tbaa !147
  %292 = load i16, ptr %222, align 2, !tbaa !13
  %293 = zext i16 %292 to i64
  %294 = getelementptr inbounds i64, ptr %237, i64 9995
  store i64 %293, ptr %294, align 8, !tbaa !147
  %295 = load i16, ptr %223, align 2, !tbaa !13
  %296 = zext i16 %295 to i64
  %297 = getelementptr inbounds i64, ptr %237, i64 9996
  store i64 %296, ptr %297, align 8, !tbaa !147
  %298 = load i16, ptr %224, align 2, !tbaa !13
  %299 = zext i16 %298 to i64
  %300 = getelementptr inbounds i64, ptr %237, i64 9997
  store i64 %299, ptr %300, align 8, !tbaa !147
  %301 = load i16, ptr %225, align 2, !tbaa !13
  %302 = zext i16 %301 to i64
  %303 = getelementptr inbounds i64, ptr %237, i64 9998
  store i64 %302, ptr %303, align 8, !tbaa !147
  %304 = load i16, ptr %226, align 2, !tbaa !13
  %305 = zext i16 %304 to i64
  %306 = getelementptr inbounds i64, ptr %237, i64 9999
  store i64 %305, ptr %306, align 8, !tbaa !147
  %307 = add i64 %235, -1
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %227, label %234, !prof !42

309:                                              ; preds = %232, %168, %135
  %310 = phi { ptr, i32 } [ %169, %168 ], [ %233, %232 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %311 = load ptr, ptr %3, align 8, !tbaa !5
  %312 = icmp eq ptr %311, null
  br i1 %312, label %316, label %313

313:                                              ; preds = %309, %133
  %314 = phi { ptr, i32 } [ %134, %133 ], [ %310, %309 ]
  %315 = phi ptr [ %5, %133 ], [ %311, %309 ]
  call void @_ZdaPv(ptr noundef nonnull %315) #13
  br label %316

316:                                              ; preds = %313, %309, %131
  %317 = phi { ptr, i32 } [ %132, %131 ], [ %310, %309 ], [ %314, %313 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %317

318:                                              ; preds = %228, %231
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z54benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution", align 2
  %3 = alloca %"class.std::unique_ptr.55", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %6 unwind label %67

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %8 unwind label %69

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #11
  store i16 0, ptr %2, align 2, !tbaa !9
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  store i16 -1, ptr %9, align 2, !tbaa !12
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %2)
          to label %13 unwind label %71

13:                                               ; preds = %10
  %14 = getelementptr inbounds i16, ptr %4, i64 %11
  store i16 %12, ptr %14, align 2, !tbaa !13
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !14

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i16, ptr %4, i64 %19
  %21 = load i16, ptr %20, align 2, !tbaa !13
  %22 = zext i16 %21 to i64
  %23 = getelementptr inbounds i64, ptr %7, i64 %19
  store i64 %22, ptr %23, align 8, !tbaa !147
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i16, ptr %4, i64 %24
  %26 = load i16, ptr %25, align 2, !tbaa !13
  %27 = zext i16 %26 to i64
  %28 = getelementptr inbounds i64, ptr %7, i64 %24
  store i64 %27, ptr %28, align 8, !tbaa !147
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i16, ptr %4, i64 %29
  %31 = load i16, ptr %30, align 2, !tbaa !13
  %32 = zext i16 %31 to i64
  %33 = getelementptr inbounds i64, ptr %7, i64 %29
  store i64 %32, ptr %33, align 8, !tbaa !147
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i16, ptr %4, i64 %34
  %36 = load i16, ptr %35, align 2, !tbaa !13
  %37 = zext i16 %36 to i64
  %38 = getelementptr inbounds i64, ptr %7, i64 %34
  store i64 %37, ptr %38, align 8, !tbaa !147
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i16, ptr %4, i64 %39
  %41 = load i16, ptr %40, align 2, !tbaa !13
  %42 = zext i16 %41 to i64
  %43 = getelementptr inbounds i64, ptr %7, i64 %39
  store i64 %42, ptr %43, align 8, !tbaa !147
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !381

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %65, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i16, ptr %4, i64 %47
  %49 = load <2 x i16>, ptr %48, align 2, !tbaa !13
  %50 = getelementptr inbounds i16, ptr %48, i64 2
  %51 = load <2 x i16>, ptr %50, align 2, !tbaa !13
  %52 = zext <2 x i16> %49 to <2 x i64>
  %53 = zext <2 x i16> %51 to <2 x i64>
  %54 = getelementptr inbounds i64, ptr %5, i64 %47
  store <2 x i64> %52, ptr %54, align 8, !tbaa !147
  %55 = getelementptr inbounds i64, ptr %54, i64 2
  store <2 x i64> %53, ptr %55, align 8, !tbaa !147
  %56 = or i64 %47, 4
  %57 = getelementptr inbounds i16, ptr %4, i64 %56
  %58 = load <2 x i16>, ptr %57, align 2, !tbaa !13
  %59 = getelementptr inbounds i16, ptr %57, i64 2
  %60 = load <2 x i16>, ptr %59, align 2, !tbaa !13
  %61 = zext <2 x i16> %58 to <2 x i64>
  %62 = zext <2 x i16> %60 to <2 x i64>
  %63 = getelementptr inbounds i64, ptr %5, i64 %56
  store <2 x i64> %61, ptr %63, align 8, !tbaa !147
  %64 = getelementptr inbounds i64, ptr %63, i64 2
  store <2 x i64> %62, ptr %64, align 8, !tbaa !147
  %65 = add nuw nsw i64 %47, 8
  %66 = icmp eq i64 %65, 10000
  br i1 %66, label %73, label %46, !llvm.loop !387

67:                                               ; preds = %1
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %188

69:                                               ; preds = %6
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %185

71:                                               ; preds = %10
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %181

73:                                               ; preds = %46, %134
  %74 = phi i64 [ %135, %134 ], [ 0, %46 ]
  %75 = getelementptr inbounds i64, ptr %5, i64 %74
  %76 = load i64, ptr %75, align 8, !tbaa !147
  %77 = getelementptr inbounds i64, ptr %7, i64 %74
  %78 = load i64, ptr %77, align 8, !tbaa !147
  %79 = icmp eq i64 %76, %78
  br i1 %79, label %106, label %80

80:                                               ; preds = %127, %120, %113, %106, %73
  %81 = phi i64 [ %74, %73 ], [ %107, %106 ], [ %114, %113 ], [ %121, %120 ], [ %128, %127 ]
  %82 = and i64 %81, 4294967295
  %83 = getelementptr inbounds i64, ptr %7, i64 %82
  %84 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %85 unwind label %104

85:                                               ; preds = %80
  %86 = getelementptr inbounds i16, ptr %4, i64 %82
  %87 = load i16, ptr %86, align 2, !tbaa !13
  %88 = zext i16 %87 to i64
  %89 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %88)
          to label %90 unwind label %104

90:                                               ; preds = %85
  %91 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %89, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %92 unwind label %104

92:                                               ; preds = %90
  %93 = getelementptr inbounds i64, ptr %5, i64 %82
  %94 = load i64, ptr %93, align 8, !tbaa !147
  %95 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %89, i64 noundef %94)
          to label %96 unwind label %104

96:                                               ; preds = %92
  %97 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %95, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %98 unwind label %104

98:                                               ; preds = %96
  %99 = load i64, ptr %83, align 8, !tbaa !147
  %100 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %95, i64 noundef %99)
          to label %101 unwind label %104

101:                                              ; preds = %98
  %102 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %100, ptr noundef nonnull @.str.149)
          to label %103 unwind label %104

103:                                              ; preds = %101
  call void @exit(i32 noundef 1) #12
  unreachable

104:                                              ; preds = %101, %98, %96, %92, %90, %85, %80
  %105 = landingpad { ptr, i32 }
          cleanup
  br label %181

106:                                              ; preds = %73
  %107 = add nuw nsw i64 %74, 1
  %108 = getelementptr inbounds i64, ptr %5, i64 %107
  %109 = load i64, ptr %108, align 8, !tbaa !147
  %110 = getelementptr inbounds i64, ptr %7, i64 %107
  %111 = load i64, ptr %110, align 8, !tbaa !147
  %112 = icmp eq i64 %109, %111
  br i1 %112, label %113, label %80

113:                                              ; preds = %106
  %114 = add nuw nsw i64 %74, 2
  %115 = getelementptr inbounds i64, ptr %5, i64 %114
  %116 = load i64, ptr %115, align 8, !tbaa !147
  %117 = getelementptr inbounds i64, ptr %7, i64 %114
  %118 = load i64, ptr %117, align 8, !tbaa !147
  %119 = icmp eq i64 %116, %118
  br i1 %119, label %120, label %80

120:                                              ; preds = %113
  %121 = add nuw nsw i64 %74, 3
  %122 = getelementptr inbounds i64, ptr %5, i64 %121
  %123 = load i64, ptr %122, align 8, !tbaa !147
  %124 = getelementptr inbounds i64, ptr %7, i64 %121
  %125 = load i64, ptr %124, align 8, !tbaa !147
  %126 = icmp eq i64 %123, %125
  br i1 %126, label %127, label %80

127:                                              ; preds = %120
  %128 = add nuw nsw i64 %74, 4
  %129 = getelementptr inbounds i64, ptr %5, i64 %128
  %130 = load i64, ptr %129, align 8, !tbaa !147
  %131 = getelementptr inbounds i64, ptr %7, i64 %128
  %132 = load i64, ptr %131, align 8, !tbaa !147
  %133 = icmp eq i64 %130, %132
  br i1 %133, label %134, label %80

134:                                              ; preds = %127
  %135 = add nuw nsw i64 %74, 5
  %136 = icmp eq i64 %135, 10000
  br i1 %136, label %137, label %73, !llvm.loop !383

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %139 = load i8, ptr %138, align 2, !tbaa !23, !range !40, !noundef !41
  %140 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %141 = load i64, ptr %140, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %142 unwind label %151

142:                                              ; preds = %137
  %143 = icmp ne i8 %139, 0
  %144 = icmp eq i64 %141, 0
  %145 = select i1 %143, i1 true, i1 %144
  br i1 %145, label %146, label %153, !prof !42

146:                                              ; preds = %178, %142
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %147 unwind label %151

147:                                              ; preds = %146
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %148 = load ptr, ptr %3, align 8, !tbaa !5
  %149 = icmp eq ptr %148, null
  br i1 %149, label %190, label %150

150:                                              ; preds = %147
  call void @_ZdaPv(ptr noundef nonnull %148) #13
  br label %190

151:                                              ; preds = %146, %137
  %152 = landingpad { ptr, i32 }
          cleanup
  br label %181

153:                                              ; preds = %142, %178
  %154 = phi i64 [ %179, %178 ], [ %141, %142 ]
  %155 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %3, i64 %155) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %156 = load ptr, ptr %3, align 8, !tbaa !5
  br label %157

157:                                              ; preds = %157, %153
  %158 = phi i64 [ 0, %153 ], [ %176, %157 ]
  %159 = getelementptr inbounds i16, ptr %4, i64 %158
  %160 = load <2 x i16>, ptr %159, align 2, !tbaa !13
  %161 = getelementptr inbounds i16, ptr %159, i64 2
  %162 = load <2 x i16>, ptr %161, align 2, !tbaa !13
  %163 = zext <2 x i16> %160 to <2 x i64>
  %164 = zext <2 x i16> %162 to <2 x i64>
  %165 = getelementptr inbounds i64, ptr %156, i64 %158
  store <2 x i64> %163, ptr %165, align 8, !tbaa !147
  %166 = getelementptr inbounds i64, ptr %165, i64 2
  store <2 x i64> %164, ptr %166, align 8, !tbaa !147
  %167 = or i64 %158, 4
  %168 = getelementptr inbounds i16, ptr %4, i64 %167
  %169 = load <2 x i16>, ptr %168, align 2, !tbaa !13
  %170 = getelementptr inbounds i16, ptr %168, i64 2
  %171 = load <2 x i16>, ptr %170, align 2, !tbaa !13
  %172 = zext <2 x i16> %169 to <2 x i64>
  %173 = zext <2 x i16> %171 to <2 x i64>
  %174 = getelementptr inbounds i64, ptr %156, i64 %167
  store <2 x i64> %172, ptr %174, align 8, !tbaa !147
  %175 = getelementptr inbounds i64, ptr %174, i64 2
  store <2 x i64> %173, ptr %175, align 8, !tbaa !147
  %176 = add nuw nsw i64 %158, 8
  %177 = icmp eq i64 %176, 10000
  br i1 %177, label %178, label %157, !llvm.loop !388

178:                                              ; preds = %157
  %179 = add i64 %154, -1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %146, label %153, !prof !42

181:                                              ; preds = %151, %104, %71
  %182 = phi { ptr, i32 } [ %105, %104 ], [ %152, %151 ], [ %72, %71 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %183 = load ptr, ptr %3, align 8, !tbaa !5
  %184 = icmp eq ptr %183, null
  br i1 %184, label %188, label %185

185:                                              ; preds = %181, %69
  %186 = phi { ptr, i32 } [ %70, %69 ], [ %182, %181 ]
  %187 = phi ptr [ %5, %69 ], [ %183, %181 ]
  call void @_ZdaPv(ptr noundef nonnull %187) #13
  br label %188

188:                                              ; preds = %185, %181, %67
  %189 = phi { ptr, i32 } [ %68, %67 ], [ %182, %181 ], [ %186, %185 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %189

190:                                              ; preds = %147, %150
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::uniform_int_distribution", align 2
  %4 = alloca %"class.std::unique_ptr.55", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %7 unwind label %56

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #11
  store i16 0, ptr %3, align 2, !tbaa !9
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %3, i64 0, i32 1
  store i16 -1, ptr %8, align 2, !tbaa !12
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %3)
          to label %12 unwind label %60

12:                                               ; preds = %9
  %13 = getelementptr inbounds i16, ptr %5, i64 %10
  store i16 %11, ptr %13, align 2, !tbaa !13
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !14

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %17, align 8, !tbaa !146
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %21 unwind label %58

21:                                               ; preds = %18
  %22 = getelementptr inbounds i64, ptr %6, i64 %19
  store i64 %20, ptr %22, align 8, !tbaa !147
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !148

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %177

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %51, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr inbounds i16, ptr %5, i64 9984
  %36 = getelementptr inbounds i16, ptr %5, i64 9985
  %37 = getelementptr inbounds i16, ptr %5, i64 9986
  %38 = getelementptr inbounds i16, ptr %5, i64 9987
  %39 = getelementptr inbounds i16, ptr %5, i64 9988
  %40 = getelementptr inbounds i16, ptr %5, i64 9989
  %41 = getelementptr inbounds i16, ptr %5, i64 9990
  %42 = getelementptr inbounds i16, ptr %5, i64 9991
  %43 = getelementptr inbounds i16, ptr %5, i64 9992
  %44 = getelementptr inbounds i16, ptr %5, i64 9993
  %45 = getelementptr inbounds i16, ptr %5, i64 9994
  %46 = getelementptr inbounds i16, ptr %5, i64 9995
  %47 = getelementptr inbounds i16, ptr %5, i64 9996
  %48 = getelementptr inbounds i16, ptr %5, i64 9997
  %49 = getelementptr inbounds i16, ptr %5, i64 9998
  %50 = getelementptr inbounds i16, ptr %5, i64 9999
  br label %62

51:                                               ; preds = %94, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %52 unwind label %177

52:                                               ; preds = %51
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = icmp eq ptr %53, null
  br i1 %54, label %186, label %55

55:                                               ; preds = %52
  call void @_ZdaPv(ptr noundef nonnull %53) #13
  br label %186

56:                                               ; preds = %1
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %184

58:                                               ; preds = %18
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %181

60:                                               ; preds = %9
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %181

62:                                               ; preds = %34, %94
  %63 = phi i64 [ %175, %94 ], [ %29, %34 ]
  %64 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %4, i64 %64) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %65 = load ptr, ptr %4, align 8, !tbaa !5
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i64 [ 0, %62 ], [ %92, %66 ]
  %68 = getelementptr inbounds i16, ptr %5, i64 %67
  %69 = load <8 x i16>, ptr %68, align 2, !tbaa !13
  %70 = getelementptr inbounds i16, ptr %68, i64 8
  %71 = load <8 x i16>, ptr %70, align 2, !tbaa !13
  %72 = getelementptr inbounds i16, ptr %68, i64 16
  %73 = load <8 x i16>, ptr %72, align 2, !tbaa !13
  %74 = getelementptr inbounds i16, ptr %68, i64 24
  %75 = load <8 x i16>, ptr %74, align 2, !tbaa !13
  %76 = zext <8 x i16> %69 to <8 x i64>
  %77 = zext <8 x i16> %71 to <8 x i64>
  %78 = zext <8 x i16> %73 to <8 x i64>
  %79 = zext <8 x i16> %75 to <8 x i64>
  %80 = getelementptr inbounds i64, ptr %65, i64 %67
  %81 = load <8 x i64>, ptr %80, align 8, !tbaa !147
  %82 = getelementptr inbounds i64, ptr %80, i64 8
  %83 = load <8 x i64>, ptr %82, align 8, !tbaa !147
  %84 = getelementptr inbounds i64, ptr %80, i64 16
  %85 = load <8 x i64>, ptr %84, align 8, !tbaa !147
  %86 = getelementptr inbounds i64, ptr %80, i64 24
  %87 = load <8 x i64>, ptr %86, align 8, !tbaa !147
  %88 = add <8 x i64> %81, %76
  %89 = add <8 x i64> %83, %77
  %90 = add <8 x i64> %85, %78
  %91 = add <8 x i64> %87, %79
  store <8 x i64> %88, ptr %80, align 8, !tbaa !147
  store <8 x i64> %89, ptr %82, align 8, !tbaa !147
  store <8 x i64> %90, ptr %84, align 8, !tbaa !147
  store <8 x i64> %91, ptr %86, align 8, !tbaa !147
  %92 = add nuw i64 %67, 32
  %93 = icmp eq i64 %92, 9984
  br i1 %93, label %94, label %66, !llvm.loop !389

94:                                               ; preds = %66
  %95 = load i16, ptr %35, align 2, !tbaa !13
  %96 = zext i16 %95 to i64
  %97 = getelementptr inbounds i64, ptr %65, i64 9984
  %98 = load i64, ptr %97, align 8, !tbaa !147
  %99 = add i64 %98, %96
  store i64 %99, ptr %97, align 8, !tbaa !147
  %100 = load i16, ptr %36, align 2, !tbaa !13
  %101 = zext i16 %100 to i64
  %102 = getelementptr inbounds i64, ptr %65, i64 9985
  %103 = load i64, ptr %102, align 8, !tbaa !147
  %104 = add i64 %103, %101
  store i64 %104, ptr %102, align 8, !tbaa !147
  %105 = load i16, ptr %37, align 2, !tbaa !13
  %106 = zext i16 %105 to i64
  %107 = getelementptr inbounds i64, ptr %65, i64 9986
  %108 = load i64, ptr %107, align 8, !tbaa !147
  %109 = add i64 %108, %106
  store i64 %109, ptr %107, align 8, !tbaa !147
  %110 = load i16, ptr %38, align 2, !tbaa !13
  %111 = zext i16 %110 to i64
  %112 = getelementptr inbounds i64, ptr %65, i64 9987
  %113 = load i64, ptr %112, align 8, !tbaa !147
  %114 = add i64 %113, %111
  store i64 %114, ptr %112, align 8, !tbaa !147
  %115 = load i16, ptr %39, align 2, !tbaa !13
  %116 = zext i16 %115 to i64
  %117 = getelementptr inbounds i64, ptr %65, i64 9988
  %118 = load i64, ptr %117, align 8, !tbaa !147
  %119 = add i64 %118, %116
  store i64 %119, ptr %117, align 8, !tbaa !147
  %120 = load i16, ptr %40, align 2, !tbaa !13
  %121 = zext i16 %120 to i64
  %122 = getelementptr inbounds i64, ptr %65, i64 9989
  %123 = load i64, ptr %122, align 8, !tbaa !147
  %124 = add i64 %123, %121
  store i64 %124, ptr %122, align 8, !tbaa !147
  %125 = load i16, ptr %41, align 2, !tbaa !13
  %126 = zext i16 %125 to i64
  %127 = getelementptr inbounds i64, ptr %65, i64 9990
  %128 = load i64, ptr %127, align 8, !tbaa !147
  %129 = add i64 %128, %126
  store i64 %129, ptr %127, align 8, !tbaa !147
  %130 = load i16, ptr %42, align 2, !tbaa !13
  %131 = zext i16 %130 to i64
  %132 = getelementptr inbounds i64, ptr %65, i64 9991
  %133 = load i64, ptr %132, align 8, !tbaa !147
  %134 = add i64 %133, %131
  store i64 %134, ptr %132, align 8, !tbaa !147
  %135 = load i16, ptr %43, align 2, !tbaa !13
  %136 = zext i16 %135 to i64
  %137 = getelementptr inbounds i64, ptr %65, i64 9992
  %138 = load i64, ptr %137, align 8, !tbaa !147
  %139 = add i64 %138, %136
  store i64 %139, ptr %137, align 8, !tbaa !147
  %140 = load i16, ptr %44, align 2, !tbaa !13
  %141 = zext i16 %140 to i64
  %142 = getelementptr inbounds i64, ptr %65, i64 9993
  %143 = load i64, ptr %142, align 8, !tbaa !147
  %144 = add i64 %143, %141
  store i64 %144, ptr %142, align 8, !tbaa !147
  %145 = load i16, ptr %45, align 2, !tbaa !13
  %146 = zext i16 %145 to i64
  %147 = getelementptr inbounds i64, ptr %65, i64 9994
  %148 = load i64, ptr %147, align 8, !tbaa !147
  %149 = add i64 %148, %146
  store i64 %149, ptr %147, align 8, !tbaa !147
  %150 = load i16, ptr %46, align 2, !tbaa !13
  %151 = zext i16 %150 to i64
  %152 = getelementptr inbounds i64, ptr %65, i64 9995
  %153 = load i64, ptr %152, align 8, !tbaa !147
  %154 = add i64 %153, %151
  store i64 %154, ptr %152, align 8, !tbaa !147
  %155 = load i16, ptr %47, align 2, !tbaa !13
  %156 = zext i16 %155 to i64
  %157 = getelementptr inbounds i64, ptr %65, i64 9996
  %158 = load i64, ptr %157, align 8, !tbaa !147
  %159 = add i64 %158, %156
  store i64 %159, ptr %157, align 8, !tbaa !147
  %160 = load i16, ptr %48, align 2, !tbaa !13
  %161 = zext i16 %160 to i64
  %162 = getelementptr inbounds i64, ptr %65, i64 9997
  %163 = load i64, ptr %162, align 8, !tbaa !147
  %164 = add i64 %163, %161
  store i64 %164, ptr %162, align 8, !tbaa !147
  %165 = load i16, ptr %49, align 2, !tbaa !13
  %166 = zext i16 %165 to i64
  %167 = getelementptr inbounds i64, ptr %65, i64 9998
  %168 = load i64, ptr %167, align 8, !tbaa !147
  %169 = add i64 %168, %166
  store i64 %169, ptr %167, align 8, !tbaa !147
  %170 = load i16, ptr %50, align 2, !tbaa !13
  %171 = zext i16 %170 to i64
  %172 = getelementptr inbounds i64, ptr %65, i64 9999
  %173 = load i64, ptr %172, align 8, !tbaa !147
  %174 = add i64 %173, %171
  store i64 %174, ptr %172, align 8, !tbaa !147
  %175 = add i64 %63, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %51, label %62, !prof !42

177:                                              ; preds = %25, %51
  %178 = landingpad { ptr, i32 }
          cleanup
  %179 = load ptr, ptr %4, align 8, !tbaa !5
  %180 = icmp eq ptr %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %60, %58, %177
  %182 = phi { ptr, i32 } [ %178, %177 ], [ %61, %60 ], [ %59, %58 ]
  %183 = phi ptr [ %179, %177 ], [ %6, %60 ], [ %6, %58 ]
  call void @_ZdaPv(ptr noundef nonnull %183) #13
  br label %184

184:                                              ; preds = %181, %177, %56
  %185 = phi { ptr, i32 } [ %57, %56 ], [ %178, %177 ], [ %182, %181 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %185

186:                                              ; preds = %52, %55
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::uniform_int_distribution", align 2
  %4 = alloca %"class.std::unique_ptr.55", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %7 unwind label %56

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #11
  store i16 0, ptr %3, align 2, !tbaa !9
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %3, i64 0, i32 1
  store i16 -1, ptr %8, align 2, !tbaa !12
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %3)
          to label %12 unwind label %60

12:                                               ; preds = %9
  %13 = getelementptr inbounds i16, ptr %5, i64 %10
  store i16 %11, ptr %13, align 2, !tbaa !13
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !14

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %17, align 8, !tbaa !146
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %21 unwind label %58

21:                                               ; preds = %18
  %22 = getelementptr inbounds i64, ptr %6, i64 %19
  store i64 %20, ptr %22, align 8, !tbaa !147
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !148

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %177

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %51, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr inbounds i16, ptr %5, i64 9984
  %36 = getelementptr inbounds i16, ptr %5, i64 9985
  %37 = getelementptr inbounds i16, ptr %5, i64 9986
  %38 = getelementptr inbounds i16, ptr %5, i64 9987
  %39 = getelementptr inbounds i16, ptr %5, i64 9988
  %40 = getelementptr inbounds i16, ptr %5, i64 9989
  %41 = getelementptr inbounds i16, ptr %5, i64 9990
  %42 = getelementptr inbounds i16, ptr %5, i64 9991
  %43 = getelementptr inbounds i16, ptr %5, i64 9992
  %44 = getelementptr inbounds i16, ptr %5, i64 9993
  %45 = getelementptr inbounds i16, ptr %5, i64 9994
  %46 = getelementptr inbounds i16, ptr %5, i64 9995
  %47 = getelementptr inbounds i16, ptr %5, i64 9996
  %48 = getelementptr inbounds i16, ptr %5, i64 9997
  %49 = getelementptr inbounds i16, ptr %5, i64 9998
  %50 = getelementptr inbounds i16, ptr %5, i64 9999
  br label %62

51:                                               ; preds = %94, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %52 unwind label %177

52:                                               ; preds = %51
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = icmp eq ptr %53, null
  br i1 %54, label %186, label %55

55:                                               ; preds = %52
  call void @_ZdaPv(ptr noundef nonnull %53) #13
  br label %186

56:                                               ; preds = %1
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %184

58:                                               ; preds = %18
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %181

60:                                               ; preds = %9
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %181

62:                                               ; preds = %34, %94
  %63 = phi i64 [ %175, %94 ], [ %29, %34 ]
  %64 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %4, i64 %64) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %65 = load ptr, ptr %4, align 8, !tbaa !5
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i64 [ 0, %62 ], [ %92, %66 ]
  %68 = getelementptr inbounds i16, ptr %5, i64 %67
  %69 = load <16 x i16>, ptr %68, align 2, !tbaa !13
  %70 = getelementptr inbounds i16, ptr %68, i64 16
  %71 = load <16 x i16>, ptr %70, align 2, !tbaa !13
  %72 = getelementptr inbounds i16, ptr %68, i64 32
  %73 = load <16 x i16>, ptr %72, align 2, !tbaa !13
  %74 = getelementptr inbounds i16, ptr %68, i64 48
  %75 = load <16 x i16>, ptr %74, align 2, !tbaa !13
  %76 = zext <16 x i16> %69 to <16 x i64>
  %77 = zext <16 x i16> %71 to <16 x i64>
  %78 = zext <16 x i16> %73 to <16 x i64>
  %79 = zext <16 x i16> %75 to <16 x i64>
  %80 = getelementptr inbounds i64, ptr %65, i64 %67
  %81 = load <16 x i64>, ptr %80, align 8, !tbaa !147
  %82 = getelementptr inbounds i64, ptr %80, i64 16
  %83 = load <16 x i64>, ptr %82, align 8, !tbaa !147
  %84 = getelementptr inbounds i64, ptr %80, i64 32
  %85 = load <16 x i64>, ptr %84, align 8, !tbaa !147
  %86 = getelementptr inbounds i64, ptr %80, i64 48
  %87 = load <16 x i64>, ptr %86, align 8, !tbaa !147
  %88 = add <16 x i64> %81, %76
  %89 = add <16 x i64> %83, %77
  %90 = add <16 x i64> %85, %78
  %91 = add <16 x i64> %87, %79
  store <16 x i64> %88, ptr %80, align 8, !tbaa !147
  store <16 x i64> %89, ptr %82, align 8, !tbaa !147
  store <16 x i64> %90, ptr %84, align 8, !tbaa !147
  store <16 x i64> %91, ptr %86, align 8, !tbaa !147
  %92 = add nuw i64 %67, 64
  %93 = icmp eq i64 %92, 9984
  br i1 %93, label %94, label %66, !llvm.loop !390

94:                                               ; preds = %66
  %95 = load i16, ptr %35, align 2, !tbaa !13
  %96 = zext i16 %95 to i64
  %97 = getelementptr inbounds i64, ptr %65, i64 9984
  %98 = load i64, ptr %97, align 8, !tbaa !147
  %99 = add i64 %98, %96
  store i64 %99, ptr %97, align 8, !tbaa !147
  %100 = load i16, ptr %36, align 2, !tbaa !13
  %101 = zext i16 %100 to i64
  %102 = getelementptr inbounds i64, ptr %65, i64 9985
  %103 = load i64, ptr %102, align 8, !tbaa !147
  %104 = add i64 %103, %101
  store i64 %104, ptr %102, align 8, !tbaa !147
  %105 = load i16, ptr %37, align 2, !tbaa !13
  %106 = zext i16 %105 to i64
  %107 = getelementptr inbounds i64, ptr %65, i64 9986
  %108 = load i64, ptr %107, align 8, !tbaa !147
  %109 = add i64 %108, %106
  store i64 %109, ptr %107, align 8, !tbaa !147
  %110 = load i16, ptr %38, align 2, !tbaa !13
  %111 = zext i16 %110 to i64
  %112 = getelementptr inbounds i64, ptr %65, i64 9987
  %113 = load i64, ptr %112, align 8, !tbaa !147
  %114 = add i64 %113, %111
  store i64 %114, ptr %112, align 8, !tbaa !147
  %115 = load i16, ptr %39, align 2, !tbaa !13
  %116 = zext i16 %115 to i64
  %117 = getelementptr inbounds i64, ptr %65, i64 9988
  %118 = load i64, ptr %117, align 8, !tbaa !147
  %119 = add i64 %118, %116
  store i64 %119, ptr %117, align 8, !tbaa !147
  %120 = load i16, ptr %40, align 2, !tbaa !13
  %121 = zext i16 %120 to i64
  %122 = getelementptr inbounds i64, ptr %65, i64 9989
  %123 = load i64, ptr %122, align 8, !tbaa !147
  %124 = add i64 %123, %121
  store i64 %124, ptr %122, align 8, !tbaa !147
  %125 = load i16, ptr %41, align 2, !tbaa !13
  %126 = zext i16 %125 to i64
  %127 = getelementptr inbounds i64, ptr %65, i64 9990
  %128 = load i64, ptr %127, align 8, !tbaa !147
  %129 = add i64 %128, %126
  store i64 %129, ptr %127, align 8, !tbaa !147
  %130 = load i16, ptr %42, align 2, !tbaa !13
  %131 = zext i16 %130 to i64
  %132 = getelementptr inbounds i64, ptr %65, i64 9991
  %133 = load i64, ptr %132, align 8, !tbaa !147
  %134 = add i64 %133, %131
  store i64 %134, ptr %132, align 8, !tbaa !147
  %135 = load i16, ptr %43, align 2, !tbaa !13
  %136 = zext i16 %135 to i64
  %137 = getelementptr inbounds i64, ptr %65, i64 9992
  %138 = load i64, ptr %137, align 8, !tbaa !147
  %139 = add i64 %138, %136
  store i64 %139, ptr %137, align 8, !tbaa !147
  %140 = load i16, ptr %44, align 2, !tbaa !13
  %141 = zext i16 %140 to i64
  %142 = getelementptr inbounds i64, ptr %65, i64 9993
  %143 = load i64, ptr %142, align 8, !tbaa !147
  %144 = add i64 %143, %141
  store i64 %144, ptr %142, align 8, !tbaa !147
  %145 = load i16, ptr %45, align 2, !tbaa !13
  %146 = zext i16 %145 to i64
  %147 = getelementptr inbounds i64, ptr %65, i64 9994
  %148 = load i64, ptr %147, align 8, !tbaa !147
  %149 = add i64 %148, %146
  store i64 %149, ptr %147, align 8, !tbaa !147
  %150 = load i16, ptr %46, align 2, !tbaa !13
  %151 = zext i16 %150 to i64
  %152 = getelementptr inbounds i64, ptr %65, i64 9995
  %153 = load i64, ptr %152, align 8, !tbaa !147
  %154 = add i64 %153, %151
  store i64 %154, ptr %152, align 8, !tbaa !147
  %155 = load i16, ptr %47, align 2, !tbaa !13
  %156 = zext i16 %155 to i64
  %157 = getelementptr inbounds i64, ptr %65, i64 9996
  %158 = load i64, ptr %157, align 8, !tbaa !147
  %159 = add i64 %158, %156
  store i64 %159, ptr %157, align 8, !tbaa !147
  %160 = load i16, ptr %48, align 2, !tbaa !13
  %161 = zext i16 %160 to i64
  %162 = getelementptr inbounds i64, ptr %65, i64 9997
  %163 = load i64, ptr %162, align 8, !tbaa !147
  %164 = add i64 %163, %161
  store i64 %164, ptr %162, align 8, !tbaa !147
  %165 = load i16, ptr %49, align 2, !tbaa !13
  %166 = zext i16 %165 to i64
  %167 = getelementptr inbounds i64, ptr %65, i64 9998
  %168 = load i64, ptr %167, align 8, !tbaa !147
  %169 = add i64 %168, %166
  store i64 %169, ptr %167, align 8, !tbaa !147
  %170 = load i16, ptr %50, align 2, !tbaa !13
  %171 = zext i16 %170 to i64
  %172 = getelementptr inbounds i64, ptr %65, i64 9999
  %173 = load i64, ptr %172, align 8, !tbaa !147
  %174 = add i64 %173, %171
  store i64 %174, ptr %172, align 8, !tbaa !147
  %175 = add i64 %63, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %51, label %62, !prof !42

177:                                              ; preds = %25, %51
  %178 = landingpad { ptr, i32 }
          cleanup
  %179 = load ptr, ptr %4, align 8, !tbaa !5
  %180 = icmp eq ptr %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %60, %58, %177
  %182 = phi { ptr, i32 } [ %178, %177 ], [ %61, %60 ], [ %59, %58 ]
  %183 = phi ptr [ %179, %177 ], [ %6, %60 ], [ %6, %58 ]
  call void @_ZdaPv(ptr noundef nonnull %183) #13
  br label %184

184:                                              ; preds = %181, %177, %56
  %185 = phi { ptr, i32 } [ %57, %56 ], [ %178, %177 ], [ %182, %181 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %185

186:                                              ; preds = %52, %55
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::uniform_int_distribution", align 2
  %4 = alloca %"class.std::unique_ptr.55", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %7 unwind label %39

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #11
  store i16 0, ptr %3, align 2, !tbaa !9
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %3, i64 0, i32 1
  store i16 -1, ptr %8, align 2, !tbaa !12
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %3)
          to label %12 unwind label %43

12:                                               ; preds = %9
  %13 = getelementptr inbounds i16, ptr %5, i64 %10
  store i16 %11, ptr %13, align 2, !tbaa !13
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !14

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %17, align 8, !tbaa !146
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %21 unwind label %41

21:                                               ; preds = %18
  %22 = getelementptr inbounds i64, ptr %6, i64 %19
  store i64 %20, ptr %22, align 8, !tbaa !147
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !148

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %81

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %34, label %45, !prof !42

34:                                               ; preds = %78, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %35 unwind label %81

35:                                               ; preds = %34
  %36 = load ptr, ptr %4, align 8, !tbaa !5
  %37 = icmp eq ptr %36, null
  br i1 %37, label %90, label %38

38:                                               ; preds = %35
  call void @_ZdaPv(ptr noundef nonnull %36) #13
  br label %90

39:                                               ; preds = %1
  %40 = landingpad { ptr, i32 }
          cleanup
  br label %88

41:                                               ; preds = %18
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %85

43:                                               ; preds = %9
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %85

45:                                               ; preds = %30, %78
  %46 = phi i64 [ %79, %78 ], [ %29, %30 ]
  %47 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %4, i64 %47) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %48 = load ptr, ptr %4, align 8, !tbaa !5
  br label %49

49:                                               ; preds = %49, %45
  %50 = phi i64 [ 0, %45 ], [ %76, %49 ]
  %51 = getelementptr inbounds i16, ptr %5, i64 %50
  %52 = load <2 x i16>, ptr %51, align 2, !tbaa !13
  %53 = getelementptr inbounds i16, ptr %51, i64 2
  %54 = load <2 x i16>, ptr %53, align 2, !tbaa !13
  %55 = zext <2 x i16> %52 to <2 x i64>
  %56 = zext <2 x i16> %54 to <2 x i64>
  %57 = getelementptr inbounds i64, ptr %48, i64 %50
  %58 = load <2 x i64>, ptr %57, align 8, !tbaa !147
  %59 = getelementptr inbounds i64, ptr %57, i64 2
  %60 = load <2 x i64>, ptr %59, align 8, !tbaa !147
  %61 = add <2 x i64> %58, %55
  %62 = add <2 x i64> %60, %56
  store <2 x i64> %61, ptr %57, align 8, !tbaa !147
  store <2 x i64> %62, ptr %59, align 8, !tbaa !147
  %63 = or i64 %50, 4
  %64 = getelementptr inbounds i16, ptr %5, i64 %63
  %65 = load <2 x i16>, ptr %64, align 2, !tbaa !13
  %66 = getelementptr inbounds i16, ptr %64, i64 2
  %67 = load <2 x i16>, ptr %66, align 2, !tbaa !13
  %68 = zext <2 x i16> %65 to <2 x i64>
  %69 = zext <2 x i16> %67 to <2 x i64>
  %70 = getelementptr inbounds i64, ptr %48, i64 %63
  %71 = load <2 x i64>, ptr %70, align 8, !tbaa !147
  %72 = getelementptr inbounds i64, ptr %70, i64 2
  %73 = load <2 x i64>, ptr %72, align 8, !tbaa !147
  %74 = add <2 x i64> %71, %68
  %75 = add <2 x i64> %73, %69
  store <2 x i64> %74, ptr %70, align 8, !tbaa !147
  store <2 x i64> %75, ptr %72, align 8, !tbaa !147
  %76 = add nuw nsw i64 %50, 8
  %77 = icmp eq i64 %76, 10000
  br i1 %77, label %78, label %49, !llvm.loop !391

78:                                               ; preds = %49
  %79 = add i64 %46, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %34, label %45, !prof !42

81:                                               ; preds = %25, %34
  %82 = landingpad { ptr, i32 }
          cleanup
  %83 = load ptr, ptr %4, align 8, !tbaa !5
  %84 = icmp eq ptr %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %43, %41, %81
  %86 = phi { ptr, i32 } [ %82, %81 ], [ %44, %43 ], [ %42, %41 ]
  %87 = phi ptr [ %83, %81 ], [ %6, %43 ], [ %6, %41 ]
  call void @_ZdaPv(ptr noundef nonnull %87) #13
  br label %88

88:                                               ; preds = %85, %81, %39
  %89 = phi { ptr, i32 } [ %40, %39 ], [ %82, %81 ], [ %86, %85 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %89

90:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::unique_ptr.55", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %9, align 4, !tbaa !94
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i32, ptr %4, i64 %11
  store i32 %12, ptr %14, align 4, !tbaa !95
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !96

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i32, ptr %4, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !95
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i64, ptr %7, i64 %19
  store i64 %22, ptr %23, align 8, !tbaa !147
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i32, ptr %4, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !95
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i64, ptr %7, i64 %24
  store i64 %27, ptr %28, align 8, !tbaa !147
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i32, ptr %4, i64 %29
  %31 = load i32, ptr %30, align 4, !tbaa !95
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i64, ptr %7, i64 %29
  store i64 %32, ptr %33, align 8, !tbaa !147
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i32, ptr %4, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !95
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i64, ptr %7, i64 %34
  store i64 %37, ptr %38, align 8, !tbaa !147
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i32, ptr %4, i64 %39
  %41 = load i32, ptr %40, align 4, !tbaa !95
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i64, ptr %7, i64 %39
  store i64 %42, ptr %43, align 8, !tbaa !147
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !392

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i32, ptr %4, i64 %47
  %49 = load <8 x i32>, ptr %48, align 4, !tbaa !95
  %50 = getelementptr inbounds i32, ptr %48, i64 8
  %51 = load <8 x i32>, ptr %50, align 4, !tbaa !95
  %52 = getelementptr inbounds i32, ptr %48, i64 16
  %53 = load <8 x i32>, ptr %52, align 4, !tbaa !95
  %54 = getelementptr inbounds i32, ptr %48, i64 24
  %55 = load <8 x i32>, ptr %54, align 4, !tbaa !95
  %56 = zext <8 x i32> %49 to <8 x i64>
  %57 = zext <8 x i32> %51 to <8 x i64>
  %58 = zext <8 x i32> %53 to <8 x i64>
  %59 = zext <8 x i32> %55 to <8 x i64>
  %60 = getelementptr inbounds i64, ptr %5, i64 %47
  store <8 x i64> %56, ptr %60, align 8, !tbaa !147
  %61 = getelementptr inbounds i64, ptr %60, i64 8
  store <8 x i64> %57, ptr %61, align 8, !tbaa !147
  %62 = getelementptr inbounds i64, ptr %60, i64 16
  store <8 x i64> %58, ptr %62, align 8, !tbaa !147
  %63 = getelementptr inbounds i64, ptr %60, i64 24
  store <8 x i64> %59, ptr %63, align 8, !tbaa !147
  %64 = add nuw i64 %47, 32
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !393

66:                                               ; preds = %46
  %67 = getelementptr inbounds i32, ptr %4, i64 9984
  %68 = load i32, ptr %67, align 4, !tbaa !95
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i64, ptr %5, i64 9984
  store i64 %69, ptr %70, align 8, !tbaa !147
  %71 = getelementptr inbounds i32, ptr %4, i64 9985
  %72 = load i32, ptr %71, align 4, !tbaa !95
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i64, ptr %5, i64 9985
  store i64 %73, ptr %74, align 8, !tbaa !147
  %75 = getelementptr inbounds i32, ptr %4, i64 9986
  %76 = load i32, ptr %75, align 4, !tbaa !95
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i64, ptr %5, i64 9986
  store i64 %77, ptr %78, align 8, !tbaa !147
  %79 = getelementptr inbounds i32, ptr %4, i64 9987
  %80 = load i32, ptr %79, align 4, !tbaa !95
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i64, ptr %5, i64 9987
  store i64 %81, ptr %82, align 8, !tbaa !147
  %83 = getelementptr inbounds i32, ptr %4, i64 9988
  %84 = load i32, ptr %83, align 4, !tbaa !95
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds i64, ptr %5, i64 9988
  store i64 %85, ptr %86, align 8, !tbaa !147
  %87 = getelementptr inbounds i32, ptr %4, i64 9989
  %88 = load i32, ptr %87, align 4, !tbaa !95
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i64, ptr %5, i64 9989
  store i64 %89, ptr %90, align 8, !tbaa !147
  %91 = getelementptr inbounds i32, ptr %4, i64 9990
  %92 = load i32, ptr %91, align 4, !tbaa !95
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i64, ptr %5, i64 9990
  store i64 %93, ptr %94, align 8, !tbaa !147
  %95 = getelementptr inbounds i32, ptr %4, i64 9991
  %96 = load i32, ptr %95, align 4, !tbaa !95
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds i64, ptr %5, i64 9991
  store i64 %97, ptr %98, align 8, !tbaa !147
  %99 = getelementptr inbounds i32, ptr %4, i64 9992
  %100 = load i32, ptr %99, align 4, !tbaa !95
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds i64, ptr %5, i64 9992
  store i64 %101, ptr %102, align 8, !tbaa !147
  %103 = getelementptr inbounds i32, ptr %4, i64 9993
  %104 = load i32, ptr %103, align 4, !tbaa !95
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i64, ptr %5, i64 9993
  store i64 %105, ptr %106, align 8, !tbaa !147
  %107 = getelementptr inbounds i32, ptr %4, i64 9994
  %108 = load i32, ptr %107, align 4, !tbaa !95
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds i64, ptr %5, i64 9994
  store i64 %109, ptr %110, align 8, !tbaa !147
  %111 = getelementptr inbounds i32, ptr %4, i64 9995
  %112 = load i32, ptr %111, align 4, !tbaa !95
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i64, ptr %5, i64 9995
  store i64 %113, ptr %114, align 8, !tbaa !147
  %115 = getelementptr inbounds i32, ptr %4, i64 9996
  %116 = load i32, ptr %115, align 4, !tbaa !95
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i64, ptr %5, i64 9996
  store i64 %117, ptr %118, align 8, !tbaa !147
  %119 = getelementptr inbounds i32, ptr %4, i64 9997
  %120 = load i32, ptr %119, align 4, !tbaa !95
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i64, ptr %5, i64 9997
  store i64 %121, ptr %122, align 8, !tbaa !147
  %123 = getelementptr inbounds i32, ptr %4, i64 9998
  %124 = load i32, ptr %123, align 4, !tbaa !95
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds i64, ptr %5, i64 9998
  store i64 %125, ptr %126, align 8, !tbaa !147
  %127 = getelementptr inbounds i32, ptr %4, i64 9999
  %128 = load i32, ptr %127, align 4, !tbaa !95
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds i64, ptr %5, i64 9999
  store i64 %129, ptr %130, align 8, !tbaa !147
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %316

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %313

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %309

137:                                              ; preds = %198, %66
  %138 = phi i64 [ 0, %66 ], [ %199, %198 ]
  %139 = getelementptr inbounds i64, ptr %5, i64 %138
  %140 = load i64, ptr %139, align 8, !tbaa !147
  %141 = getelementptr inbounds i64, ptr %7, i64 %138
  %142 = load i64, ptr %141, align 8, !tbaa !147
  %143 = icmp eq i64 %140, %142
  br i1 %143, label %170, label %144

144:                                              ; preds = %191, %184, %177, %170, %137
  %145 = phi i64 [ %138, %137 ], [ %171, %170 ], [ %178, %177 ], [ %185, %184 ], [ %192, %191 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i64, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %168

149:                                              ; preds = %144
  %150 = getelementptr inbounds i32, ptr %4, i64 %146
  %151 = load i32, ptr %150, align 4, !tbaa !95
  %152 = zext i32 %151 to i64
  %153 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %152)
          to label %154 unwind label %168

154:                                              ; preds = %149
  %155 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %153, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %156 unwind label %168

156:                                              ; preds = %154
  %157 = getelementptr inbounds i64, ptr %5, i64 %146
  %158 = load i64, ptr %157, align 8, !tbaa !147
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %153, i64 noundef %158)
          to label %160 unwind label %168

160:                                              ; preds = %156
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %162 unwind label %168

162:                                              ; preds = %160
  %163 = load i64, ptr %147, align 8, !tbaa !147
  %164 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %159, i64 noundef %163)
          to label %165 unwind label %168

165:                                              ; preds = %162
  %166 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %164, ptr noundef nonnull @.str.149)
          to label %167 unwind label %168

167:                                              ; preds = %165
  call void @exit(i32 noundef 1) #12
  unreachable

168:                                              ; preds = %165, %162, %160, %156, %154, %149, %144
  %169 = landingpad { ptr, i32 }
          cleanup
  br label %309

170:                                              ; preds = %137
  %171 = add nuw nsw i64 %138, 1
  %172 = getelementptr inbounds i64, ptr %5, i64 %171
  %173 = load i64, ptr %172, align 8, !tbaa !147
  %174 = getelementptr inbounds i64, ptr %7, i64 %171
  %175 = load i64, ptr %174, align 8, !tbaa !147
  %176 = icmp eq i64 %173, %175
  br i1 %176, label %177, label %144

177:                                              ; preds = %170
  %178 = add nuw nsw i64 %138, 2
  %179 = getelementptr inbounds i64, ptr %5, i64 %178
  %180 = load i64, ptr %179, align 8, !tbaa !147
  %181 = getelementptr inbounds i64, ptr %7, i64 %178
  %182 = load i64, ptr %181, align 8, !tbaa !147
  %183 = icmp eq i64 %180, %182
  br i1 %183, label %184, label %144

184:                                              ; preds = %177
  %185 = add nuw nsw i64 %138, 3
  %186 = getelementptr inbounds i64, ptr %5, i64 %185
  %187 = load i64, ptr %186, align 8, !tbaa !147
  %188 = getelementptr inbounds i64, ptr %7, i64 %185
  %189 = load i64, ptr %188, align 8, !tbaa !147
  %190 = icmp eq i64 %187, %189
  br i1 %190, label %191, label %144

191:                                              ; preds = %184
  %192 = add nuw nsw i64 %138, 4
  %193 = getelementptr inbounds i64, ptr %5, i64 %192
  %194 = load i64, ptr %193, align 8, !tbaa !147
  %195 = getelementptr inbounds i64, ptr %7, i64 %192
  %196 = load i64, ptr %195, align 8, !tbaa !147
  %197 = icmp eq i64 %194, %196
  br i1 %197, label %198, label %144

198:                                              ; preds = %191
  %199 = add nuw nsw i64 %138, 5
  %200 = icmp eq i64 %199, 10000
  br i1 %200, label %201, label %137, !llvm.loop !394

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %203 = load i8, ptr %202, align 2, !tbaa !23, !range !40, !noundef !41
  %204 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %205 = load i64, ptr %204, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %206 unwind label %232

206:                                              ; preds = %201
  %207 = icmp ne i8 %203, 0
  %208 = icmp eq i64 %205, 0
  %209 = select i1 %207, i1 true, i1 %208
  br i1 %209, label %227, label %210, !prof !42

210:                                              ; preds = %206
  %211 = getelementptr inbounds i32, ptr %4, i64 9984
  %212 = getelementptr inbounds i32, ptr %4, i64 9985
  %213 = getelementptr inbounds i32, ptr %4, i64 9986
  %214 = getelementptr inbounds i32, ptr %4, i64 9987
  %215 = getelementptr inbounds i32, ptr %4, i64 9988
  %216 = getelementptr inbounds i32, ptr %4, i64 9989
  %217 = getelementptr inbounds i32, ptr %4, i64 9990
  %218 = getelementptr inbounds i32, ptr %4, i64 9991
  %219 = getelementptr inbounds i32, ptr %4, i64 9992
  %220 = getelementptr inbounds i32, ptr %4, i64 9993
  %221 = getelementptr inbounds i32, ptr %4, i64 9994
  %222 = getelementptr inbounds i32, ptr %4, i64 9995
  %223 = getelementptr inbounds i32, ptr %4, i64 9996
  %224 = getelementptr inbounds i32, ptr %4, i64 9997
  %225 = getelementptr inbounds i32, ptr %4, i64 9998
  %226 = getelementptr inbounds i32, ptr %4, i64 9999
  br label %234

227:                                              ; preds = %258, %206
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %228 unwind label %232

228:                                              ; preds = %227
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %229 = load ptr, ptr %3, align 8, !tbaa !5
  %230 = icmp eq ptr %229, null
  br i1 %230, label %318, label %231

231:                                              ; preds = %228
  call void @_ZdaPv(ptr noundef nonnull %229) #13
  br label %318

232:                                              ; preds = %227, %201
  %233 = landingpad { ptr, i32 }
          cleanup
  br label %309

234:                                              ; preds = %210, %258
  %235 = phi i64 [ %307, %258 ], [ %205, %210 ]
  %236 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %3, i64 %236) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %237 = load ptr, ptr %3, align 8, !tbaa !5
  br label %238

238:                                              ; preds = %238, %234
  %239 = phi i64 [ 0, %234 ], [ %256, %238 ]
  %240 = getelementptr inbounds i32, ptr %4, i64 %239
  %241 = load <8 x i32>, ptr %240, align 4, !tbaa !95
  %242 = getelementptr inbounds i32, ptr %240, i64 8
  %243 = load <8 x i32>, ptr %242, align 4, !tbaa !95
  %244 = getelementptr inbounds i32, ptr %240, i64 16
  %245 = load <8 x i32>, ptr %244, align 4, !tbaa !95
  %246 = getelementptr inbounds i32, ptr %240, i64 24
  %247 = load <8 x i32>, ptr %246, align 4, !tbaa !95
  %248 = zext <8 x i32> %241 to <8 x i64>
  %249 = zext <8 x i32> %243 to <8 x i64>
  %250 = zext <8 x i32> %245 to <8 x i64>
  %251 = zext <8 x i32> %247 to <8 x i64>
  %252 = getelementptr inbounds i64, ptr %237, i64 %239
  store <8 x i64> %248, ptr %252, align 8, !tbaa !147
  %253 = getelementptr inbounds i64, ptr %252, i64 8
  store <8 x i64> %249, ptr %253, align 8, !tbaa !147
  %254 = getelementptr inbounds i64, ptr %252, i64 16
  store <8 x i64> %250, ptr %254, align 8, !tbaa !147
  %255 = getelementptr inbounds i64, ptr %252, i64 24
  store <8 x i64> %251, ptr %255, align 8, !tbaa !147
  %256 = add nuw i64 %239, 32
  %257 = icmp eq i64 %256, 9984
  br i1 %257, label %258, label %238, !llvm.loop !395

258:                                              ; preds = %238
  %259 = load i32, ptr %211, align 4, !tbaa !95
  %260 = zext i32 %259 to i64
  %261 = getelementptr inbounds i64, ptr %237, i64 9984
  store i64 %260, ptr %261, align 8, !tbaa !147
  %262 = load i32, ptr %212, align 4, !tbaa !95
  %263 = zext i32 %262 to i64
  %264 = getelementptr inbounds i64, ptr %237, i64 9985
  store i64 %263, ptr %264, align 8, !tbaa !147
  %265 = load i32, ptr %213, align 4, !tbaa !95
  %266 = zext i32 %265 to i64
  %267 = getelementptr inbounds i64, ptr %237, i64 9986
  store i64 %266, ptr %267, align 8, !tbaa !147
  %268 = load i32, ptr %214, align 4, !tbaa !95
  %269 = zext i32 %268 to i64
  %270 = getelementptr inbounds i64, ptr %237, i64 9987
  store i64 %269, ptr %270, align 8, !tbaa !147
  %271 = load i32, ptr %215, align 4, !tbaa !95
  %272 = zext i32 %271 to i64
  %273 = getelementptr inbounds i64, ptr %237, i64 9988
  store i64 %272, ptr %273, align 8, !tbaa !147
  %274 = load i32, ptr %216, align 4, !tbaa !95
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds i64, ptr %237, i64 9989
  store i64 %275, ptr %276, align 8, !tbaa !147
  %277 = load i32, ptr %217, align 4, !tbaa !95
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds i64, ptr %237, i64 9990
  store i64 %278, ptr %279, align 8, !tbaa !147
  %280 = load i32, ptr %218, align 4, !tbaa !95
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds i64, ptr %237, i64 9991
  store i64 %281, ptr %282, align 8, !tbaa !147
  %283 = load i32, ptr %219, align 4, !tbaa !95
  %284 = zext i32 %283 to i64
  %285 = getelementptr inbounds i64, ptr %237, i64 9992
  store i64 %284, ptr %285, align 8, !tbaa !147
  %286 = load i32, ptr %220, align 4, !tbaa !95
  %287 = zext i32 %286 to i64
  %288 = getelementptr inbounds i64, ptr %237, i64 9993
  store i64 %287, ptr %288, align 8, !tbaa !147
  %289 = load i32, ptr %221, align 4, !tbaa !95
  %290 = zext i32 %289 to i64
  %291 = getelementptr inbounds i64, ptr %237, i64 9994
  store i64 %290, ptr %291, align 8, !tbaa !147
  %292 = load i32, ptr %222, align 4, !tbaa !95
  %293 = zext i32 %292 to i64
  %294 = getelementptr inbounds i64, ptr %237, i64 9995
  store i64 %293, ptr %294, align 8, !tbaa !147
  %295 = load i32, ptr %223, align 4, !tbaa !95
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds i64, ptr %237, i64 9996
  store i64 %296, ptr %297, align 8, !tbaa !147
  %298 = load i32, ptr %224, align 4, !tbaa !95
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds i64, ptr %237, i64 9997
  store i64 %299, ptr %300, align 8, !tbaa !147
  %301 = load i32, ptr %225, align 4, !tbaa !95
  %302 = zext i32 %301 to i64
  %303 = getelementptr inbounds i64, ptr %237, i64 9998
  store i64 %302, ptr %303, align 8, !tbaa !147
  %304 = load i32, ptr %226, align 4, !tbaa !95
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds i64, ptr %237, i64 9999
  store i64 %305, ptr %306, align 8, !tbaa !147
  %307 = add i64 %235, -1
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %227, label %234, !prof !42

309:                                              ; preds = %232, %168, %135
  %310 = phi { ptr, i32 } [ %169, %168 ], [ %233, %232 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %311 = load ptr, ptr %3, align 8, !tbaa !5
  %312 = icmp eq ptr %311, null
  br i1 %312, label %316, label %313

313:                                              ; preds = %309, %133
  %314 = phi { ptr, i32 } [ %134, %133 ], [ %310, %309 ]
  %315 = phi ptr [ %5, %133 ], [ %311, %309 ]
  call void @_ZdaPv(ptr noundef nonnull %315) #13
  br label %316

316:                                              ; preds = %313, %309, %131
  %317 = phi { ptr, i32 } [ %132, %131 ], [ %310, %309 ], [ %314, %313 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %317

318:                                              ; preds = %228, %231
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::unique_ptr.55", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %6 unwind label %131

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %8 unwind label %133

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %9, align 4, !tbaa !94
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %13 unwind label %135

13:                                               ; preds = %10
  %14 = getelementptr inbounds i32, ptr %4, i64 %11
  store i32 %12, ptr %14, align 4, !tbaa !95
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !96

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i32, ptr %4, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !95
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i64, ptr %7, i64 %19
  store i64 %22, ptr %23, align 8, !tbaa !147
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i32, ptr %4, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !95
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i64, ptr %7, i64 %24
  store i64 %27, ptr %28, align 8, !tbaa !147
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i32, ptr %4, i64 %29
  %31 = load i32, ptr %30, align 4, !tbaa !95
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i64, ptr %7, i64 %29
  store i64 %32, ptr %33, align 8, !tbaa !147
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i32, ptr %4, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !95
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i64, ptr %7, i64 %34
  store i64 %37, ptr %38, align 8, !tbaa !147
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i32, ptr %4, i64 %39
  %41 = load i32, ptr %40, align 4, !tbaa !95
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i64, ptr %7, i64 %39
  store i64 %42, ptr %43, align 8, !tbaa !147
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !392

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %64, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i32, ptr %4, i64 %47
  %49 = load <16 x i32>, ptr %48, align 4, !tbaa !95
  %50 = getelementptr inbounds i32, ptr %48, i64 16
  %51 = load <16 x i32>, ptr %50, align 4, !tbaa !95
  %52 = getelementptr inbounds i32, ptr %48, i64 32
  %53 = load <16 x i32>, ptr %52, align 4, !tbaa !95
  %54 = getelementptr inbounds i32, ptr %48, i64 48
  %55 = load <16 x i32>, ptr %54, align 4, !tbaa !95
  %56 = zext <16 x i32> %49 to <16 x i64>
  %57 = zext <16 x i32> %51 to <16 x i64>
  %58 = zext <16 x i32> %53 to <16 x i64>
  %59 = zext <16 x i32> %55 to <16 x i64>
  %60 = getelementptr inbounds i64, ptr %5, i64 %47
  store <16 x i64> %56, ptr %60, align 8, !tbaa !147
  %61 = getelementptr inbounds i64, ptr %60, i64 16
  store <16 x i64> %57, ptr %61, align 8, !tbaa !147
  %62 = getelementptr inbounds i64, ptr %60, i64 32
  store <16 x i64> %58, ptr %62, align 8, !tbaa !147
  %63 = getelementptr inbounds i64, ptr %60, i64 48
  store <16 x i64> %59, ptr %63, align 8, !tbaa !147
  %64 = add nuw i64 %47, 64
  %65 = icmp eq i64 %64, 9984
  br i1 %65, label %66, label %46, !llvm.loop !396

66:                                               ; preds = %46
  %67 = getelementptr inbounds i32, ptr %4, i64 9984
  %68 = load i32, ptr %67, align 4, !tbaa !95
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i64, ptr %5, i64 9984
  store i64 %69, ptr %70, align 8, !tbaa !147
  %71 = getelementptr inbounds i32, ptr %4, i64 9985
  %72 = load i32, ptr %71, align 4, !tbaa !95
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i64, ptr %5, i64 9985
  store i64 %73, ptr %74, align 8, !tbaa !147
  %75 = getelementptr inbounds i32, ptr %4, i64 9986
  %76 = load i32, ptr %75, align 4, !tbaa !95
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i64, ptr %5, i64 9986
  store i64 %77, ptr %78, align 8, !tbaa !147
  %79 = getelementptr inbounds i32, ptr %4, i64 9987
  %80 = load i32, ptr %79, align 4, !tbaa !95
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i64, ptr %5, i64 9987
  store i64 %81, ptr %82, align 8, !tbaa !147
  %83 = getelementptr inbounds i32, ptr %4, i64 9988
  %84 = load i32, ptr %83, align 4, !tbaa !95
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds i64, ptr %5, i64 9988
  store i64 %85, ptr %86, align 8, !tbaa !147
  %87 = getelementptr inbounds i32, ptr %4, i64 9989
  %88 = load i32, ptr %87, align 4, !tbaa !95
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i64, ptr %5, i64 9989
  store i64 %89, ptr %90, align 8, !tbaa !147
  %91 = getelementptr inbounds i32, ptr %4, i64 9990
  %92 = load i32, ptr %91, align 4, !tbaa !95
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i64, ptr %5, i64 9990
  store i64 %93, ptr %94, align 8, !tbaa !147
  %95 = getelementptr inbounds i32, ptr %4, i64 9991
  %96 = load i32, ptr %95, align 4, !tbaa !95
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds i64, ptr %5, i64 9991
  store i64 %97, ptr %98, align 8, !tbaa !147
  %99 = getelementptr inbounds i32, ptr %4, i64 9992
  %100 = load i32, ptr %99, align 4, !tbaa !95
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds i64, ptr %5, i64 9992
  store i64 %101, ptr %102, align 8, !tbaa !147
  %103 = getelementptr inbounds i32, ptr %4, i64 9993
  %104 = load i32, ptr %103, align 4, !tbaa !95
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i64, ptr %5, i64 9993
  store i64 %105, ptr %106, align 8, !tbaa !147
  %107 = getelementptr inbounds i32, ptr %4, i64 9994
  %108 = load i32, ptr %107, align 4, !tbaa !95
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds i64, ptr %5, i64 9994
  store i64 %109, ptr %110, align 8, !tbaa !147
  %111 = getelementptr inbounds i32, ptr %4, i64 9995
  %112 = load i32, ptr %111, align 4, !tbaa !95
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i64, ptr %5, i64 9995
  store i64 %113, ptr %114, align 8, !tbaa !147
  %115 = getelementptr inbounds i32, ptr %4, i64 9996
  %116 = load i32, ptr %115, align 4, !tbaa !95
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i64, ptr %5, i64 9996
  store i64 %117, ptr %118, align 8, !tbaa !147
  %119 = getelementptr inbounds i32, ptr %4, i64 9997
  %120 = load i32, ptr %119, align 4, !tbaa !95
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i64, ptr %5, i64 9997
  store i64 %121, ptr %122, align 8, !tbaa !147
  %123 = getelementptr inbounds i32, ptr %4, i64 9998
  %124 = load i32, ptr %123, align 4, !tbaa !95
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds i64, ptr %5, i64 9998
  store i64 %125, ptr %126, align 8, !tbaa !147
  %127 = getelementptr inbounds i32, ptr %4, i64 9999
  %128 = load i32, ptr %127, align 4, !tbaa !95
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds i64, ptr %5, i64 9999
  store i64 %129, ptr %130, align 8, !tbaa !147
  br label %137

131:                                              ; preds = %1
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %316

133:                                              ; preds = %6
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %313

135:                                              ; preds = %10
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %309

137:                                              ; preds = %198, %66
  %138 = phi i64 [ 0, %66 ], [ %199, %198 ]
  %139 = getelementptr inbounds i64, ptr %5, i64 %138
  %140 = load i64, ptr %139, align 8, !tbaa !147
  %141 = getelementptr inbounds i64, ptr %7, i64 %138
  %142 = load i64, ptr %141, align 8, !tbaa !147
  %143 = icmp eq i64 %140, %142
  br i1 %143, label %170, label %144

144:                                              ; preds = %191, %184, %177, %170, %137
  %145 = phi i64 [ %138, %137 ], [ %171, %170 ], [ %178, %177 ], [ %185, %184 ], [ %192, %191 ]
  %146 = and i64 %145, 4294967295
  %147 = getelementptr inbounds i64, ptr %7, i64 %146
  %148 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %149 unwind label %168

149:                                              ; preds = %144
  %150 = getelementptr inbounds i32, ptr %4, i64 %146
  %151 = load i32, ptr %150, align 4, !tbaa !95
  %152 = zext i32 %151 to i64
  %153 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %152)
          to label %154 unwind label %168

154:                                              ; preds = %149
  %155 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %153, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %156 unwind label %168

156:                                              ; preds = %154
  %157 = getelementptr inbounds i64, ptr %5, i64 %146
  %158 = load i64, ptr %157, align 8, !tbaa !147
  %159 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %153, i64 noundef %158)
          to label %160 unwind label %168

160:                                              ; preds = %156
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %159, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %162 unwind label %168

162:                                              ; preds = %160
  %163 = load i64, ptr %147, align 8, !tbaa !147
  %164 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %159, i64 noundef %163)
          to label %165 unwind label %168

165:                                              ; preds = %162
  %166 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %164, ptr noundef nonnull @.str.149)
          to label %167 unwind label %168

167:                                              ; preds = %165
  call void @exit(i32 noundef 1) #12
  unreachable

168:                                              ; preds = %165, %162, %160, %156, %154, %149, %144
  %169 = landingpad { ptr, i32 }
          cleanup
  br label %309

170:                                              ; preds = %137
  %171 = add nuw nsw i64 %138, 1
  %172 = getelementptr inbounds i64, ptr %5, i64 %171
  %173 = load i64, ptr %172, align 8, !tbaa !147
  %174 = getelementptr inbounds i64, ptr %7, i64 %171
  %175 = load i64, ptr %174, align 8, !tbaa !147
  %176 = icmp eq i64 %173, %175
  br i1 %176, label %177, label %144

177:                                              ; preds = %170
  %178 = add nuw nsw i64 %138, 2
  %179 = getelementptr inbounds i64, ptr %5, i64 %178
  %180 = load i64, ptr %179, align 8, !tbaa !147
  %181 = getelementptr inbounds i64, ptr %7, i64 %178
  %182 = load i64, ptr %181, align 8, !tbaa !147
  %183 = icmp eq i64 %180, %182
  br i1 %183, label %184, label %144

184:                                              ; preds = %177
  %185 = add nuw nsw i64 %138, 3
  %186 = getelementptr inbounds i64, ptr %5, i64 %185
  %187 = load i64, ptr %186, align 8, !tbaa !147
  %188 = getelementptr inbounds i64, ptr %7, i64 %185
  %189 = load i64, ptr %188, align 8, !tbaa !147
  %190 = icmp eq i64 %187, %189
  br i1 %190, label %191, label %144

191:                                              ; preds = %184
  %192 = add nuw nsw i64 %138, 4
  %193 = getelementptr inbounds i64, ptr %5, i64 %192
  %194 = load i64, ptr %193, align 8, !tbaa !147
  %195 = getelementptr inbounds i64, ptr %7, i64 %192
  %196 = load i64, ptr %195, align 8, !tbaa !147
  %197 = icmp eq i64 %194, %196
  br i1 %197, label %198, label %144

198:                                              ; preds = %191
  %199 = add nuw nsw i64 %138, 5
  %200 = icmp eq i64 %199, 10000
  br i1 %200, label %201, label %137, !llvm.loop !394

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %203 = load i8, ptr %202, align 2, !tbaa !23, !range !40, !noundef !41
  %204 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %205 = load i64, ptr %204, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %206 unwind label %232

206:                                              ; preds = %201
  %207 = icmp ne i8 %203, 0
  %208 = icmp eq i64 %205, 0
  %209 = select i1 %207, i1 true, i1 %208
  br i1 %209, label %227, label %210, !prof !42

210:                                              ; preds = %206
  %211 = getelementptr inbounds i32, ptr %4, i64 9984
  %212 = getelementptr inbounds i32, ptr %4, i64 9985
  %213 = getelementptr inbounds i32, ptr %4, i64 9986
  %214 = getelementptr inbounds i32, ptr %4, i64 9987
  %215 = getelementptr inbounds i32, ptr %4, i64 9988
  %216 = getelementptr inbounds i32, ptr %4, i64 9989
  %217 = getelementptr inbounds i32, ptr %4, i64 9990
  %218 = getelementptr inbounds i32, ptr %4, i64 9991
  %219 = getelementptr inbounds i32, ptr %4, i64 9992
  %220 = getelementptr inbounds i32, ptr %4, i64 9993
  %221 = getelementptr inbounds i32, ptr %4, i64 9994
  %222 = getelementptr inbounds i32, ptr %4, i64 9995
  %223 = getelementptr inbounds i32, ptr %4, i64 9996
  %224 = getelementptr inbounds i32, ptr %4, i64 9997
  %225 = getelementptr inbounds i32, ptr %4, i64 9998
  %226 = getelementptr inbounds i32, ptr %4, i64 9999
  br label %234

227:                                              ; preds = %258, %206
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %228 unwind label %232

228:                                              ; preds = %227
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %229 = load ptr, ptr %3, align 8, !tbaa !5
  %230 = icmp eq ptr %229, null
  br i1 %230, label %318, label %231

231:                                              ; preds = %228
  call void @_ZdaPv(ptr noundef nonnull %229) #13
  br label %318

232:                                              ; preds = %227, %201
  %233 = landingpad { ptr, i32 }
          cleanup
  br label %309

234:                                              ; preds = %210, %258
  %235 = phi i64 [ %307, %258 ], [ %205, %210 ]
  %236 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %3, i64 %236) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %237 = load ptr, ptr %3, align 8, !tbaa !5
  br label %238

238:                                              ; preds = %238, %234
  %239 = phi i64 [ 0, %234 ], [ %256, %238 ]
  %240 = getelementptr inbounds i32, ptr %4, i64 %239
  %241 = load <16 x i32>, ptr %240, align 4, !tbaa !95
  %242 = getelementptr inbounds i32, ptr %240, i64 16
  %243 = load <16 x i32>, ptr %242, align 4, !tbaa !95
  %244 = getelementptr inbounds i32, ptr %240, i64 32
  %245 = load <16 x i32>, ptr %244, align 4, !tbaa !95
  %246 = getelementptr inbounds i32, ptr %240, i64 48
  %247 = load <16 x i32>, ptr %246, align 4, !tbaa !95
  %248 = zext <16 x i32> %241 to <16 x i64>
  %249 = zext <16 x i32> %243 to <16 x i64>
  %250 = zext <16 x i32> %245 to <16 x i64>
  %251 = zext <16 x i32> %247 to <16 x i64>
  %252 = getelementptr inbounds i64, ptr %237, i64 %239
  store <16 x i64> %248, ptr %252, align 8, !tbaa !147
  %253 = getelementptr inbounds i64, ptr %252, i64 16
  store <16 x i64> %249, ptr %253, align 8, !tbaa !147
  %254 = getelementptr inbounds i64, ptr %252, i64 32
  store <16 x i64> %250, ptr %254, align 8, !tbaa !147
  %255 = getelementptr inbounds i64, ptr %252, i64 48
  store <16 x i64> %251, ptr %255, align 8, !tbaa !147
  %256 = add nuw i64 %239, 64
  %257 = icmp eq i64 %256, 9984
  br i1 %257, label %258, label %238, !llvm.loop !397

258:                                              ; preds = %238
  %259 = load i32, ptr %211, align 4, !tbaa !95
  %260 = zext i32 %259 to i64
  %261 = getelementptr inbounds i64, ptr %237, i64 9984
  store i64 %260, ptr %261, align 8, !tbaa !147
  %262 = load i32, ptr %212, align 4, !tbaa !95
  %263 = zext i32 %262 to i64
  %264 = getelementptr inbounds i64, ptr %237, i64 9985
  store i64 %263, ptr %264, align 8, !tbaa !147
  %265 = load i32, ptr %213, align 4, !tbaa !95
  %266 = zext i32 %265 to i64
  %267 = getelementptr inbounds i64, ptr %237, i64 9986
  store i64 %266, ptr %267, align 8, !tbaa !147
  %268 = load i32, ptr %214, align 4, !tbaa !95
  %269 = zext i32 %268 to i64
  %270 = getelementptr inbounds i64, ptr %237, i64 9987
  store i64 %269, ptr %270, align 8, !tbaa !147
  %271 = load i32, ptr %215, align 4, !tbaa !95
  %272 = zext i32 %271 to i64
  %273 = getelementptr inbounds i64, ptr %237, i64 9988
  store i64 %272, ptr %273, align 8, !tbaa !147
  %274 = load i32, ptr %216, align 4, !tbaa !95
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds i64, ptr %237, i64 9989
  store i64 %275, ptr %276, align 8, !tbaa !147
  %277 = load i32, ptr %217, align 4, !tbaa !95
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds i64, ptr %237, i64 9990
  store i64 %278, ptr %279, align 8, !tbaa !147
  %280 = load i32, ptr %218, align 4, !tbaa !95
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds i64, ptr %237, i64 9991
  store i64 %281, ptr %282, align 8, !tbaa !147
  %283 = load i32, ptr %219, align 4, !tbaa !95
  %284 = zext i32 %283 to i64
  %285 = getelementptr inbounds i64, ptr %237, i64 9992
  store i64 %284, ptr %285, align 8, !tbaa !147
  %286 = load i32, ptr %220, align 4, !tbaa !95
  %287 = zext i32 %286 to i64
  %288 = getelementptr inbounds i64, ptr %237, i64 9993
  store i64 %287, ptr %288, align 8, !tbaa !147
  %289 = load i32, ptr %221, align 4, !tbaa !95
  %290 = zext i32 %289 to i64
  %291 = getelementptr inbounds i64, ptr %237, i64 9994
  store i64 %290, ptr %291, align 8, !tbaa !147
  %292 = load i32, ptr %222, align 4, !tbaa !95
  %293 = zext i32 %292 to i64
  %294 = getelementptr inbounds i64, ptr %237, i64 9995
  store i64 %293, ptr %294, align 8, !tbaa !147
  %295 = load i32, ptr %223, align 4, !tbaa !95
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds i64, ptr %237, i64 9996
  store i64 %296, ptr %297, align 8, !tbaa !147
  %298 = load i32, ptr %224, align 4, !tbaa !95
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds i64, ptr %237, i64 9997
  store i64 %299, ptr %300, align 8, !tbaa !147
  %301 = load i32, ptr %225, align 4, !tbaa !95
  %302 = zext i32 %301 to i64
  %303 = getelementptr inbounds i64, ptr %237, i64 9998
  store i64 %302, ptr %303, align 8, !tbaa !147
  %304 = load i32, ptr %226, align 4, !tbaa !95
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds i64, ptr %237, i64 9999
  store i64 %305, ptr %306, align 8, !tbaa !147
  %307 = add i64 %235, -1
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %227, label %234, !prof !42

309:                                              ; preds = %232, %168, %135
  %310 = phi { ptr, i32 } [ %169, %168 ], [ %233, %232 ], [ %136, %135 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %311 = load ptr, ptr %3, align 8, !tbaa !5
  %312 = icmp eq ptr %311, null
  br i1 %312, label %316, label %313

313:                                              ; preds = %309, %133
  %314 = phi { ptr, i32 } [ %134, %133 ], [ %310, %309 ]
  %315 = phi ptr [ %5, %133 ], [ %311, %309 ]
  call void @_ZdaPv(ptr noundef nonnull %315) #13
  br label %316

316:                                              ; preds = %313, %309, %131
  %317 = phi { ptr, i32 } [ %132, %131 ], [ %310, %309 ], [ %314, %313 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %317

318:                                              ; preds = %228, %231
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z54benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.54", align 4
  %3 = alloca %"class.std::unique_ptr.55", align 8
  %4 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  %5 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %6 unwind label %67

6:                                                ; preds = %1
  store ptr %5, ptr %3, align 8, !tbaa !5
  %7 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %8 unwind label %69

8:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #11
  store i32 0, ptr %2, align 4, !tbaa !92
  %9 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  store i32 -1, ptr %9, align 4, !tbaa !94
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i64 [ 0, %8 ], [ %15, %13 ]
  %12 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %2)
          to label %13 unwind label %71

13:                                               ; preds = %10
  %14 = getelementptr inbounds i32, ptr %4, i64 %11
  store i32 %12, ptr %14, align 4, !tbaa !95
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 10000
  br i1 %16, label %17, label %10, !llvm.loop !96

17:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #11
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i64 [ 0, %17 ], [ %44, %18 ]
  %20 = getelementptr inbounds i32, ptr %4, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !95
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i64, ptr %7, i64 %19
  store i64 %22, ptr %23, align 8, !tbaa !147
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds i32, ptr %4, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !95
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i64, ptr %7, i64 %24
  store i64 %27, ptr %28, align 8, !tbaa !147
  %29 = add nuw nsw i64 %19, 2
  %30 = getelementptr inbounds i32, ptr %4, i64 %29
  %31 = load i32, ptr %30, align 4, !tbaa !95
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i64, ptr %7, i64 %29
  store i64 %32, ptr %33, align 8, !tbaa !147
  %34 = add nuw nsw i64 %19, 3
  %35 = getelementptr inbounds i32, ptr %4, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !95
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i64, ptr %7, i64 %34
  store i64 %37, ptr %38, align 8, !tbaa !147
  %39 = add nuw nsw i64 %19, 4
  %40 = getelementptr inbounds i32, ptr %4, i64 %39
  %41 = load i32, ptr %40, align 4, !tbaa !95
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i64, ptr %7, i64 %39
  store i64 %42, ptr %43, align 8, !tbaa !147
  %44 = add nuw nsw i64 %19, 5
  %45 = icmp eq i64 %44, 10000
  br i1 %45, label %46, label %18, !llvm.loop !392

46:                                               ; preds = %18, %46
  %47 = phi i64 [ %65, %46 ], [ 0, %18 ]
  %48 = getelementptr inbounds i32, ptr %4, i64 %47
  %49 = load <2 x i32>, ptr %48, align 4, !tbaa !95
  %50 = getelementptr inbounds i32, ptr %48, i64 2
  %51 = load <2 x i32>, ptr %50, align 4, !tbaa !95
  %52 = zext <2 x i32> %49 to <2 x i64>
  %53 = zext <2 x i32> %51 to <2 x i64>
  %54 = getelementptr inbounds i64, ptr %5, i64 %47
  store <2 x i64> %52, ptr %54, align 8, !tbaa !147
  %55 = getelementptr inbounds i64, ptr %54, i64 2
  store <2 x i64> %53, ptr %55, align 8, !tbaa !147
  %56 = or i64 %47, 4
  %57 = getelementptr inbounds i32, ptr %4, i64 %56
  %58 = load <2 x i32>, ptr %57, align 4, !tbaa !95
  %59 = getelementptr inbounds i32, ptr %57, i64 2
  %60 = load <2 x i32>, ptr %59, align 4, !tbaa !95
  %61 = zext <2 x i32> %58 to <2 x i64>
  %62 = zext <2 x i32> %60 to <2 x i64>
  %63 = getelementptr inbounds i64, ptr %5, i64 %56
  store <2 x i64> %61, ptr %63, align 8, !tbaa !147
  %64 = getelementptr inbounds i64, ptr %63, i64 2
  store <2 x i64> %62, ptr %64, align 8, !tbaa !147
  %65 = add nuw nsw i64 %47, 8
  %66 = icmp eq i64 %65, 10000
  br i1 %66, label %73, label %46, !llvm.loop !398

67:                                               ; preds = %1
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %188

69:                                               ; preds = %6
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %185

71:                                               ; preds = %10
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %181

73:                                               ; preds = %46, %134
  %74 = phi i64 [ %135, %134 ], [ 0, %46 ]
  %75 = getelementptr inbounds i64, ptr %5, i64 %74
  %76 = load i64, ptr %75, align 8, !tbaa !147
  %77 = getelementptr inbounds i64, ptr %7, i64 %74
  %78 = load i64, ptr %77, align 8, !tbaa !147
  %79 = icmp eq i64 %76, %78
  br i1 %79, label %106, label %80

80:                                               ; preds = %127, %120, %113, %106, %73
  %81 = phi i64 [ %74, %73 ], [ %107, %106 ], [ %114, %113 ], [ %121, %120 ], [ %128, %127 ]
  %82 = and i64 %81, 4294967295
  %83 = getelementptr inbounds i64, ptr %7, i64 %82
  %84 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %85 unwind label %104

85:                                               ; preds = %80
  %86 = getelementptr inbounds i32, ptr %4, i64 %82
  %87 = load i32, ptr %86, align 4, !tbaa !95
  %88 = zext i32 %87 to i64
  %89 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %88)
          to label %90 unwind label %104

90:                                               ; preds = %85
  %91 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %89, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %92 unwind label %104

92:                                               ; preds = %90
  %93 = getelementptr inbounds i64, ptr %5, i64 %82
  %94 = load i64, ptr %93, align 8, !tbaa !147
  %95 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %89, i64 noundef %94)
          to label %96 unwind label %104

96:                                               ; preds = %92
  %97 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %95, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %98 unwind label %104

98:                                               ; preds = %96
  %99 = load i64, ptr %83, align 8, !tbaa !147
  %100 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %95, i64 noundef %99)
          to label %101 unwind label %104

101:                                              ; preds = %98
  %102 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %100, ptr noundef nonnull @.str.149)
          to label %103 unwind label %104

103:                                              ; preds = %101
  call void @exit(i32 noundef 1) #12
  unreachable

104:                                              ; preds = %101, %98, %96, %92, %90, %85, %80
  %105 = landingpad { ptr, i32 }
          cleanup
  br label %181

106:                                              ; preds = %73
  %107 = add nuw nsw i64 %74, 1
  %108 = getelementptr inbounds i64, ptr %5, i64 %107
  %109 = load i64, ptr %108, align 8, !tbaa !147
  %110 = getelementptr inbounds i64, ptr %7, i64 %107
  %111 = load i64, ptr %110, align 8, !tbaa !147
  %112 = icmp eq i64 %109, %111
  br i1 %112, label %113, label %80

113:                                              ; preds = %106
  %114 = add nuw nsw i64 %74, 2
  %115 = getelementptr inbounds i64, ptr %5, i64 %114
  %116 = load i64, ptr %115, align 8, !tbaa !147
  %117 = getelementptr inbounds i64, ptr %7, i64 %114
  %118 = load i64, ptr %117, align 8, !tbaa !147
  %119 = icmp eq i64 %116, %118
  br i1 %119, label %120, label %80

120:                                              ; preds = %113
  %121 = add nuw nsw i64 %74, 3
  %122 = getelementptr inbounds i64, ptr %5, i64 %121
  %123 = load i64, ptr %122, align 8, !tbaa !147
  %124 = getelementptr inbounds i64, ptr %7, i64 %121
  %125 = load i64, ptr %124, align 8, !tbaa !147
  %126 = icmp eq i64 %123, %125
  br i1 %126, label %127, label %80

127:                                              ; preds = %120
  %128 = add nuw nsw i64 %74, 4
  %129 = getelementptr inbounds i64, ptr %5, i64 %128
  %130 = load i64, ptr %129, align 8, !tbaa !147
  %131 = getelementptr inbounds i64, ptr %7, i64 %128
  %132 = load i64, ptr %131, align 8, !tbaa !147
  %133 = icmp eq i64 %130, %132
  br i1 %133, label %134, label %80

134:                                              ; preds = %127
  %135 = add nuw nsw i64 %74, 5
  %136 = icmp eq i64 %135, 10000
  br i1 %136, label %137, label %73, !llvm.loop !394

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %139 = load i8, ptr %138, align 2, !tbaa !23, !range !40, !noundef !41
  %140 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %141 = load i64, ptr %140, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %142 unwind label %151

142:                                              ; preds = %137
  %143 = icmp ne i8 %139, 0
  %144 = icmp eq i64 %141, 0
  %145 = select i1 %143, i1 true, i1 %144
  br i1 %145, label %146, label %153, !prof !42

146:                                              ; preds = %178, %142
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %147 unwind label %151

147:                                              ; preds = %146
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %148 = load ptr, ptr %3, align 8, !tbaa !5
  %149 = icmp eq ptr %148, null
  br i1 %149, label %190, label %150

150:                                              ; preds = %147
  call void @_ZdaPv(ptr noundef nonnull %148) #13
  br label %190

151:                                              ; preds = %146, %137
  %152 = landingpad { ptr, i32 }
          cleanup
  br label %181

153:                                              ; preds = %142, %178
  %154 = phi i64 [ %179, %178 ], [ %141, %142 ]
  %155 = load i64, ptr %3, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %3, i64 %155) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %156 = load ptr, ptr %3, align 8, !tbaa !5
  br label %157

157:                                              ; preds = %157, %153
  %158 = phi i64 [ 0, %153 ], [ %176, %157 ]
  %159 = getelementptr inbounds i32, ptr %4, i64 %158
  %160 = load <2 x i32>, ptr %159, align 4, !tbaa !95
  %161 = getelementptr inbounds i32, ptr %159, i64 2
  %162 = load <2 x i32>, ptr %161, align 4, !tbaa !95
  %163 = zext <2 x i32> %160 to <2 x i64>
  %164 = zext <2 x i32> %162 to <2 x i64>
  %165 = getelementptr inbounds i64, ptr %156, i64 %158
  store <2 x i64> %163, ptr %165, align 8, !tbaa !147
  %166 = getelementptr inbounds i64, ptr %165, i64 2
  store <2 x i64> %164, ptr %166, align 8, !tbaa !147
  %167 = or i64 %158, 4
  %168 = getelementptr inbounds i32, ptr %4, i64 %167
  %169 = load <2 x i32>, ptr %168, align 4, !tbaa !95
  %170 = getelementptr inbounds i32, ptr %168, i64 2
  %171 = load <2 x i32>, ptr %170, align 4, !tbaa !95
  %172 = zext <2 x i32> %169 to <2 x i64>
  %173 = zext <2 x i32> %171 to <2 x i64>
  %174 = getelementptr inbounds i64, ptr %156, i64 %167
  store <2 x i64> %172, ptr %174, align 8, !tbaa !147
  %175 = getelementptr inbounds i64, ptr %174, i64 2
  store <2 x i64> %173, ptr %175, align 8, !tbaa !147
  %176 = add nuw nsw i64 %158, 8
  %177 = icmp eq i64 %176, 10000
  br i1 %177, label %178, label %157, !llvm.loop !399

178:                                              ; preds = %157
  %179 = add i64 %154, -1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %146, label %153, !prof !42

181:                                              ; preds = %151, %104, %71
  %182 = phi { ptr, i32 } [ %105, %104 ], [ %152, %151 ], [ %72, %71 ]
  call void @_ZdaPv(ptr noundef nonnull %7) #13
  %183 = load ptr, ptr %3, align 8, !tbaa !5
  %184 = icmp eq ptr %183, null
  br i1 %184, label %188, label %185

185:                                              ; preds = %181, %69
  %186 = phi { ptr, i32 } [ %70, %69 ], [ %182, %181 ]
  %187 = phi ptr [ %5, %69 ], [ %183, %181 ]
  call void @_ZdaPv(ptr noundef nonnull %187) #13
  br label %188

188:                                              ; preds = %185, %181, %67
  %189 = phi { ptr, i32 } [ %68, %67 ], [ %182, %181 ], [ %186, %185 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  resume { ptr, i32 } %189

190:                                              ; preds = %147, %150
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @_ZdaPv(ptr noundef nonnull %4) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::uniform_int_distribution.54", align 4
  %4 = alloca %"class.std::unique_ptr.55", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %7 unwind label %56

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  store i32 0, ptr %3, align 4, !tbaa !92
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %3, i64 0, i32 1
  store i32 -1, ptr %8, align 4, !tbaa !94
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %3)
          to label %12 unwind label %60

12:                                               ; preds = %9
  %13 = getelementptr inbounds i32, ptr %5, i64 %10
  store i32 %11, ptr %13, align 4, !tbaa !95
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !96

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %17, align 8, !tbaa !146
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %21 unwind label %58

21:                                               ; preds = %18
  %22 = getelementptr inbounds i64, ptr %6, i64 %19
  store i64 %20, ptr %22, align 8, !tbaa !147
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !148

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %177

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %51, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr inbounds i32, ptr %5, i64 9984
  %36 = getelementptr inbounds i32, ptr %5, i64 9985
  %37 = getelementptr inbounds i32, ptr %5, i64 9986
  %38 = getelementptr inbounds i32, ptr %5, i64 9987
  %39 = getelementptr inbounds i32, ptr %5, i64 9988
  %40 = getelementptr inbounds i32, ptr %5, i64 9989
  %41 = getelementptr inbounds i32, ptr %5, i64 9990
  %42 = getelementptr inbounds i32, ptr %5, i64 9991
  %43 = getelementptr inbounds i32, ptr %5, i64 9992
  %44 = getelementptr inbounds i32, ptr %5, i64 9993
  %45 = getelementptr inbounds i32, ptr %5, i64 9994
  %46 = getelementptr inbounds i32, ptr %5, i64 9995
  %47 = getelementptr inbounds i32, ptr %5, i64 9996
  %48 = getelementptr inbounds i32, ptr %5, i64 9997
  %49 = getelementptr inbounds i32, ptr %5, i64 9998
  %50 = getelementptr inbounds i32, ptr %5, i64 9999
  br label %62

51:                                               ; preds = %94, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %52 unwind label %177

52:                                               ; preds = %51
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = icmp eq ptr %53, null
  br i1 %54, label %186, label %55

55:                                               ; preds = %52
  call void @_ZdaPv(ptr noundef nonnull %53) #13
  br label %186

56:                                               ; preds = %1
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %184

58:                                               ; preds = %18
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %181

60:                                               ; preds = %9
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %181

62:                                               ; preds = %34, %94
  %63 = phi i64 [ %175, %94 ], [ %29, %34 ]
  %64 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %4, i64 %64) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %65 = load ptr, ptr %4, align 8, !tbaa !5
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i64 [ 0, %62 ], [ %92, %66 ]
  %68 = getelementptr inbounds i32, ptr %5, i64 %67
  %69 = load <8 x i32>, ptr %68, align 4, !tbaa !95
  %70 = getelementptr inbounds i32, ptr %68, i64 8
  %71 = load <8 x i32>, ptr %70, align 4, !tbaa !95
  %72 = getelementptr inbounds i32, ptr %68, i64 16
  %73 = load <8 x i32>, ptr %72, align 4, !tbaa !95
  %74 = getelementptr inbounds i32, ptr %68, i64 24
  %75 = load <8 x i32>, ptr %74, align 4, !tbaa !95
  %76 = zext <8 x i32> %69 to <8 x i64>
  %77 = zext <8 x i32> %71 to <8 x i64>
  %78 = zext <8 x i32> %73 to <8 x i64>
  %79 = zext <8 x i32> %75 to <8 x i64>
  %80 = getelementptr inbounds i64, ptr %65, i64 %67
  %81 = load <8 x i64>, ptr %80, align 8, !tbaa !147
  %82 = getelementptr inbounds i64, ptr %80, i64 8
  %83 = load <8 x i64>, ptr %82, align 8, !tbaa !147
  %84 = getelementptr inbounds i64, ptr %80, i64 16
  %85 = load <8 x i64>, ptr %84, align 8, !tbaa !147
  %86 = getelementptr inbounds i64, ptr %80, i64 24
  %87 = load <8 x i64>, ptr %86, align 8, !tbaa !147
  %88 = add <8 x i64> %81, %76
  %89 = add <8 x i64> %83, %77
  %90 = add <8 x i64> %85, %78
  %91 = add <8 x i64> %87, %79
  store <8 x i64> %88, ptr %80, align 8, !tbaa !147
  store <8 x i64> %89, ptr %82, align 8, !tbaa !147
  store <8 x i64> %90, ptr %84, align 8, !tbaa !147
  store <8 x i64> %91, ptr %86, align 8, !tbaa !147
  %92 = add nuw i64 %67, 32
  %93 = icmp eq i64 %92, 9984
  br i1 %93, label %94, label %66, !llvm.loop !400

94:                                               ; preds = %66
  %95 = load i32, ptr %35, align 4, !tbaa !95
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i64, ptr %65, i64 9984
  %98 = load i64, ptr %97, align 8, !tbaa !147
  %99 = add i64 %98, %96
  store i64 %99, ptr %97, align 8, !tbaa !147
  %100 = load i32, ptr %36, align 4, !tbaa !95
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds i64, ptr %65, i64 9985
  %103 = load i64, ptr %102, align 8, !tbaa !147
  %104 = add i64 %103, %101
  store i64 %104, ptr %102, align 8, !tbaa !147
  %105 = load i32, ptr %37, align 4, !tbaa !95
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i64, ptr %65, i64 9986
  %108 = load i64, ptr %107, align 8, !tbaa !147
  %109 = add i64 %108, %106
  store i64 %109, ptr %107, align 8, !tbaa !147
  %110 = load i32, ptr %38, align 4, !tbaa !95
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i64, ptr %65, i64 9987
  %113 = load i64, ptr %112, align 8, !tbaa !147
  %114 = add i64 %113, %111
  store i64 %114, ptr %112, align 8, !tbaa !147
  %115 = load i32, ptr %39, align 4, !tbaa !95
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds i64, ptr %65, i64 9988
  %118 = load i64, ptr %117, align 8, !tbaa !147
  %119 = add i64 %118, %116
  store i64 %119, ptr %117, align 8, !tbaa !147
  %120 = load i32, ptr %40, align 4, !tbaa !95
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i64, ptr %65, i64 9989
  %123 = load i64, ptr %122, align 8, !tbaa !147
  %124 = add i64 %123, %121
  store i64 %124, ptr %122, align 8, !tbaa !147
  %125 = load i32, ptr %41, align 4, !tbaa !95
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i64, ptr %65, i64 9990
  %128 = load i64, ptr %127, align 8, !tbaa !147
  %129 = add i64 %128, %126
  store i64 %129, ptr %127, align 8, !tbaa !147
  %130 = load i32, ptr %42, align 4, !tbaa !95
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds i64, ptr %65, i64 9991
  %133 = load i64, ptr %132, align 8, !tbaa !147
  %134 = add i64 %133, %131
  store i64 %134, ptr %132, align 8, !tbaa !147
  %135 = load i32, ptr %43, align 4, !tbaa !95
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds i64, ptr %65, i64 9992
  %138 = load i64, ptr %137, align 8, !tbaa !147
  %139 = add i64 %138, %136
  store i64 %139, ptr %137, align 8, !tbaa !147
  %140 = load i32, ptr %44, align 4, !tbaa !95
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds i64, ptr %65, i64 9993
  %143 = load i64, ptr %142, align 8, !tbaa !147
  %144 = add i64 %143, %141
  store i64 %144, ptr %142, align 8, !tbaa !147
  %145 = load i32, ptr %45, align 4, !tbaa !95
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds i64, ptr %65, i64 9994
  %148 = load i64, ptr %147, align 8, !tbaa !147
  %149 = add i64 %148, %146
  store i64 %149, ptr %147, align 8, !tbaa !147
  %150 = load i32, ptr %46, align 4, !tbaa !95
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds i64, ptr %65, i64 9995
  %153 = load i64, ptr %152, align 8, !tbaa !147
  %154 = add i64 %153, %151
  store i64 %154, ptr %152, align 8, !tbaa !147
  %155 = load i32, ptr %47, align 4, !tbaa !95
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds i64, ptr %65, i64 9996
  %158 = load i64, ptr %157, align 8, !tbaa !147
  %159 = add i64 %158, %156
  store i64 %159, ptr %157, align 8, !tbaa !147
  %160 = load i32, ptr %48, align 4, !tbaa !95
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds i64, ptr %65, i64 9997
  %163 = load i64, ptr %162, align 8, !tbaa !147
  %164 = add i64 %163, %161
  store i64 %164, ptr %162, align 8, !tbaa !147
  %165 = load i32, ptr %49, align 4, !tbaa !95
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds i64, ptr %65, i64 9998
  %168 = load i64, ptr %167, align 8, !tbaa !147
  %169 = add i64 %168, %166
  store i64 %169, ptr %167, align 8, !tbaa !147
  %170 = load i32, ptr %50, align 4, !tbaa !95
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds i64, ptr %65, i64 9999
  %173 = load i64, ptr %172, align 8, !tbaa !147
  %174 = add i64 %173, %171
  store i64 %174, ptr %172, align 8, !tbaa !147
  %175 = add i64 %63, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %51, label %62, !prof !42

177:                                              ; preds = %25, %51
  %178 = landingpad { ptr, i32 }
          cleanup
  %179 = load ptr, ptr %4, align 8, !tbaa !5
  %180 = icmp eq ptr %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %60, %58, %177
  %182 = phi { ptr, i32 } [ %178, %177 ], [ %61, %60 ], [ %59, %58 ]
  %183 = phi ptr [ %179, %177 ], [ %6, %60 ], [ %6, %58 ]
  call void @_ZdaPv(ptr noundef nonnull %183) #13
  br label %184

184:                                              ; preds = %181, %177, %56
  %185 = phi { ptr, i32 } [ %57, %56 ], [ %178, %177 ], [ %182, %181 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %185

186:                                              ; preds = %52, %55
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::uniform_int_distribution.54", align 4
  %4 = alloca %"class.std::unique_ptr.55", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %7 unwind label %56

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  store i32 0, ptr %3, align 4, !tbaa !92
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %3, i64 0, i32 1
  store i32 -1, ptr %8, align 4, !tbaa !94
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %3)
          to label %12 unwind label %60

12:                                               ; preds = %9
  %13 = getelementptr inbounds i32, ptr %5, i64 %10
  store i32 %11, ptr %13, align 4, !tbaa !95
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !96

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %17, align 8, !tbaa !146
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %21 unwind label %58

21:                                               ; preds = %18
  %22 = getelementptr inbounds i64, ptr %6, i64 %19
  store i64 %20, ptr %22, align 8, !tbaa !147
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !148

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %177

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %51, label %34, !prof !42

34:                                               ; preds = %30
  %35 = getelementptr inbounds i32, ptr %5, i64 9984
  %36 = getelementptr inbounds i32, ptr %5, i64 9985
  %37 = getelementptr inbounds i32, ptr %5, i64 9986
  %38 = getelementptr inbounds i32, ptr %5, i64 9987
  %39 = getelementptr inbounds i32, ptr %5, i64 9988
  %40 = getelementptr inbounds i32, ptr %5, i64 9989
  %41 = getelementptr inbounds i32, ptr %5, i64 9990
  %42 = getelementptr inbounds i32, ptr %5, i64 9991
  %43 = getelementptr inbounds i32, ptr %5, i64 9992
  %44 = getelementptr inbounds i32, ptr %5, i64 9993
  %45 = getelementptr inbounds i32, ptr %5, i64 9994
  %46 = getelementptr inbounds i32, ptr %5, i64 9995
  %47 = getelementptr inbounds i32, ptr %5, i64 9996
  %48 = getelementptr inbounds i32, ptr %5, i64 9997
  %49 = getelementptr inbounds i32, ptr %5, i64 9998
  %50 = getelementptr inbounds i32, ptr %5, i64 9999
  br label %62

51:                                               ; preds = %94, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %52 unwind label %177

52:                                               ; preds = %51
  %53 = load ptr, ptr %4, align 8, !tbaa !5
  %54 = icmp eq ptr %53, null
  br i1 %54, label %186, label %55

55:                                               ; preds = %52
  call void @_ZdaPv(ptr noundef nonnull %53) #13
  br label %186

56:                                               ; preds = %1
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %184

58:                                               ; preds = %18
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %181

60:                                               ; preds = %9
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %181

62:                                               ; preds = %34, %94
  %63 = phi i64 [ %175, %94 ], [ %29, %34 ]
  %64 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %4, i64 %64) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %65 = load ptr, ptr %4, align 8, !tbaa !5
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i64 [ 0, %62 ], [ %92, %66 ]
  %68 = getelementptr inbounds i32, ptr %5, i64 %67
  %69 = load <16 x i32>, ptr %68, align 4, !tbaa !95
  %70 = getelementptr inbounds i32, ptr %68, i64 16
  %71 = load <16 x i32>, ptr %70, align 4, !tbaa !95
  %72 = getelementptr inbounds i32, ptr %68, i64 32
  %73 = load <16 x i32>, ptr %72, align 4, !tbaa !95
  %74 = getelementptr inbounds i32, ptr %68, i64 48
  %75 = load <16 x i32>, ptr %74, align 4, !tbaa !95
  %76 = zext <16 x i32> %69 to <16 x i64>
  %77 = zext <16 x i32> %71 to <16 x i64>
  %78 = zext <16 x i32> %73 to <16 x i64>
  %79 = zext <16 x i32> %75 to <16 x i64>
  %80 = getelementptr inbounds i64, ptr %65, i64 %67
  %81 = load <16 x i64>, ptr %80, align 8, !tbaa !147
  %82 = getelementptr inbounds i64, ptr %80, i64 16
  %83 = load <16 x i64>, ptr %82, align 8, !tbaa !147
  %84 = getelementptr inbounds i64, ptr %80, i64 32
  %85 = load <16 x i64>, ptr %84, align 8, !tbaa !147
  %86 = getelementptr inbounds i64, ptr %80, i64 48
  %87 = load <16 x i64>, ptr %86, align 8, !tbaa !147
  %88 = add <16 x i64> %81, %76
  %89 = add <16 x i64> %83, %77
  %90 = add <16 x i64> %85, %78
  %91 = add <16 x i64> %87, %79
  store <16 x i64> %88, ptr %80, align 8, !tbaa !147
  store <16 x i64> %89, ptr %82, align 8, !tbaa !147
  store <16 x i64> %90, ptr %84, align 8, !tbaa !147
  store <16 x i64> %91, ptr %86, align 8, !tbaa !147
  %92 = add nuw i64 %67, 64
  %93 = icmp eq i64 %92, 9984
  br i1 %93, label %94, label %66, !llvm.loop !401

94:                                               ; preds = %66
  %95 = load i32, ptr %35, align 4, !tbaa !95
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i64, ptr %65, i64 9984
  %98 = load i64, ptr %97, align 8, !tbaa !147
  %99 = add i64 %98, %96
  store i64 %99, ptr %97, align 8, !tbaa !147
  %100 = load i32, ptr %36, align 4, !tbaa !95
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds i64, ptr %65, i64 9985
  %103 = load i64, ptr %102, align 8, !tbaa !147
  %104 = add i64 %103, %101
  store i64 %104, ptr %102, align 8, !tbaa !147
  %105 = load i32, ptr %37, align 4, !tbaa !95
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i64, ptr %65, i64 9986
  %108 = load i64, ptr %107, align 8, !tbaa !147
  %109 = add i64 %108, %106
  store i64 %109, ptr %107, align 8, !tbaa !147
  %110 = load i32, ptr %38, align 4, !tbaa !95
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i64, ptr %65, i64 9987
  %113 = load i64, ptr %112, align 8, !tbaa !147
  %114 = add i64 %113, %111
  store i64 %114, ptr %112, align 8, !tbaa !147
  %115 = load i32, ptr %39, align 4, !tbaa !95
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds i64, ptr %65, i64 9988
  %118 = load i64, ptr %117, align 8, !tbaa !147
  %119 = add i64 %118, %116
  store i64 %119, ptr %117, align 8, !tbaa !147
  %120 = load i32, ptr %40, align 4, !tbaa !95
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i64, ptr %65, i64 9989
  %123 = load i64, ptr %122, align 8, !tbaa !147
  %124 = add i64 %123, %121
  store i64 %124, ptr %122, align 8, !tbaa !147
  %125 = load i32, ptr %41, align 4, !tbaa !95
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i64, ptr %65, i64 9990
  %128 = load i64, ptr %127, align 8, !tbaa !147
  %129 = add i64 %128, %126
  store i64 %129, ptr %127, align 8, !tbaa !147
  %130 = load i32, ptr %42, align 4, !tbaa !95
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds i64, ptr %65, i64 9991
  %133 = load i64, ptr %132, align 8, !tbaa !147
  %134 = add i64 %133, %131
  store i64 %134, ptr %132, align 8, !tbaa !147
  %135 = load i32, ptr %43, align 4, !tbaa !95
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds i64, ptr %65, i64 9992
  %138 = load i64, ptr %137, align 8, !tbaa !147
  %139 = add i64 %138, %136
  store i64 %139, ptr %137, align 8, !tbaa !147
  %140 = load i32, ptr %44, align 4, !tbaa !95
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds i64, ptr %65, i64 9993
  %143 = load i64, ptr %142, align 8, !tbaa !147
  %144 = add i64 %143, %141
  store i64 %144, ptr %142, align 8, !tbaa !147
  %145 = load i32, ptr %45, align 4, !tbaa !95
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds i64, ptr %65, i64 9994
  %148 = load i64, ptr %147, align 8, !tbaa !147
  %149 = add i64 %148, %146
  store i64 %149, ptr %147, align 8, !tbaa !147
  %150 = load i32, ptr %46, align 4, !tbaa !95
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds i64, ptr %65, i64 9995
  %153 = load i64, ptr %152, align 8, !tbaa !147
  %154 = add i64 %153, %151
  store i64 %154, ptr %152, align 8, !tbaa !147
  %155 = load i32, ptr %47, align 4, !tbaa !95
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds i64, ptr %65, i64 9996
  %158 = load i64, ptr %157, align 8, !tbaa !147
  %159 = add i64 %158, %156
  store i64 %159, ptr %157, align 8, !tbaa !147
  %160 = load i32, ptr %48, align 4, !tbaa !95
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds i64, ptr %65, i64 9997
  %163 = load i64, ptr %162, align 8, !tbaa !147
  %164 = add i64 %163, %161
  store i64 %164, ptr %162, align 8, !tbaa !147
  %165 = load i32, ptr %49, align 4, !tbaa !95
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds i64, ptr %65, i64 9998
  %168 = load i64, ptr %167, align 8, !tbaa !147
  %169 = add i64 %168, %166
  store i64 %169, ptr %167, align 8, !tbaa !147
  %170 = load i32, ptr %50, align 4, !tbaa !95
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds i64, ptr %65, i64 9999
  %173 = load i64, ptr %172, align 8, !tbaa !147
  %174 = add i64 %173, %171
  store i64 %174, ptr %172, align 8, !tbaa !147
  %175 = add i64 %63, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %51, label %62, !prof !42

177:                                              ; preds = %25, %51
  %178 = landingpad { ptr, i32 }
          cleanup
  %179 = load ptr, ptr %4, align 8, !tbaa !5
  %180 = icmp eq ptr %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %60, %58, %177
  %182 = phi { ptr, i32 } [ %178, %177 ], [ %61, %60 ], [ %59, %58 ]
  %183 = phi ptr [ %179, %177 ], [ %6, %60 ], [ %6, %58 ]
  call void @_ZdaPv(ptr noundef nonnull %183) #13
  br label %184

184:                                              ; preds = %181, %177, %56
  %185 = phi { ptr, i32 } [ %57, %56 ], [ %178, %177 ], [ %182, %181 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %185

186:                                              ; preds = %52, %55
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %0) #3 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::uniform_int_distribution.65", align 8
  %3 = alloca %"class.std::uniform_int_distribution.54", align 4
  %4 = alloca %"class.std::unique_ptr.55", align 8
  %5 = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  %6 = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %7 unwind label %39

7:                                                ; preds = %1
  store ptr %6, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #11
  store i32 0, ptr %3, align 4, !tbaa !92
  %8 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %3, i64 0, i32 1
  store i32 -1, ptr %8, align 4, !tbaa !94
  br label %9

9:                                                ; preds = %12, %7
  %10 = phi i64 [ 0, %7 ], [ %14, %12 ]
  %11 = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %3, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %3)
          to label %12 unwind label %43

12:                                               ; preds = %9
  %13 = getelementptr inbounds i32, ptr %5, i64 %10
  store i32 %11, ptr %13, align 4, !tbaa !95
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 10000
  br i1 %15, label %16, label %9, !llvm.loop !96

16:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #11
  store i64 0, ptr %2, align 8, !tbaa !144
  %17 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  store i64 -1, ptr %17, align 8, !tbaa !146
  br label %18

18:                                               ; preds = %21, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %21 ]
  %20 = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %2)
          to label %21 unwind label %41

21:                                               ; preds = %18
  %22 = getelementptr inbounds i64, ptr %6, i64 %19
  store i64 %20, ptr %22, align 8, !tbaa !147
  %23 = add nuw nsw i64 %19, 1
  %24 = icmp eq i64 %23, 10000
  br i1 %24, label %25, label %18, !llvm.loop !148

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #11
  %26 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 5
  %27 = load i8, ptr %26, align 2, !tbaa !23, !range !40, !noundef !41
  %28 = getelementptr inbounds %"class.benchmark::State", ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %30 unwind label %81

30:                                               ; preds = %25
  %31 = icmp ne i8 %27, 0
  %32 = icmp eq i64 %29, 0
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %34, label %45, !prof !42

34:                                               ; preds = %78, %30
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %0)
          to label %35 unwind label %81

35:                                               ; preds = %34
  %36 = load ptr, ptr %4, align 8, !tbaa !5
  %37 = icmp eq ptr %36, null
  br i1 %37, label %90, label %38

38:                                               ; preds = %35
  call void @_ZdaPv(ptr noundef nonnull %36) #13
  br label %90

39:                                               ; preds = %1
  %40 = landingpad { ptr, i32 }
          cleanup
  br label %88

41:                                               ; preds = %18
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %85

43:                                               ; preds = %9
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %85

45:                                               ; preds = %30, %78
  %46 = phi i64 [ %79, %78 ], [ %29, %30 ]
  %47 = load i64, ptr %4, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %4, i64 %47) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %48 = load ptr, ptr %4, align 8, !tbaa !5
  br label %49

49:                                               ; preds = %49, %45
  %50 = phi i64 [ 0, %45 ], [ %76, %49 ]
  %51 = getelementptr inbounds i32, ptr %5, i64 %50
  %52 = load <2 x i32>, ptr %51, align 4, !tbaa !95
  %53 = getelementptr inbounds i32, ptr %51, i64 2
  %54 = load <2 x i32>, ptr %53, align 4, !tbaa !95
  %55 = zext <2 x i32> %52 to <2 x i64>
  %56 = zext <2 x i32> %54 to <2 x i64>
  %57 = getelementptr inbounds i64, ptr %48, i64 %50
  %58 = load <2 x i64>, ptr %57, align 8, !tbaa !147
  %59 = getelementptr inbounds i64, ptr %57, i64 2
  %60 = load <2 x i64>, ptr %59, align 8, !tbaa !147
  %61 = add <2 x i64> %58, %55
  %62 = add <2 x i64> %60, %56
  store <2 x i64> %61, ptr %57, align 8, !tbaa !147
  store <2 x i64> %62, ptr %59, align 8, !tbaa !147
  %63 = or i64 %50, 4
  %64 = getelementptr inbounds i32, ptr %5, i64 %63
  %65 = load <2 x i32>, ptr %64, align 4, !tbaa !95
  %66 = getelementptr inbounds i32, ptr %64, i64 2
  %67 = load <2 x i32>, ptr %66, align 4, !tbaa !95
  %68 = zext <2 x i32> %65 to <2 x i64>
  %69 = zext <2 x i32> %67 to <2 x i64>
  %70 = getelementptr inbounds i64, ptr %48, i64 %63
  %71 = load <2 x i64>, ptr %70, align 8, !tbaa !147
  %72 = getelementptr inbounds i64, ptr %70, i64 2
  %73 = load <2 x i64>, ptr %72, align 8, !tbaa !147
  %74 = add <2 x i64> %71, %68
  %75 = add <2 x i64> %73, %69
  store <2 x i64> %74, ptr %70, align 8, !tbaa !147
  store <2 x i64> %75, ptr %72, align 8, !tbaa !147
  %76 = add nuw nsw i64 %50, 8
  %77 = icmp eq i64 %76, 10000
  br i1 %77, label %78, label %49, !llvm.loop !402

78:                                               ; preds = %49
  %79 = add i64 %46, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %34, label %45, !prof !42

81:                                               ; preds = %25, %34
  %82 = landingpad { ptr, i32 }
          cleanup
  %83 = load ptr, ptr %4, align 8, !tbaa !5
  %84 = icmp eq ptr %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %43, %41, %81
  %86 = phi { ptr, i32 } [ %82, %81 ], [ %44, %43 ], [ %42, %41 ]
  %87 = phi ptr [ %83, %81 ], [ %6, %43 ], [ %6, %41 ]
  call void @_ZdaPv(ptr noundef nonnull %87) #13
  br label %88

88:                                               ; preds = %85, %81, %39
  %89 = phi { ptr, i32 } [ %40, %39 ], [ %82, %81 ], [ %86, %85 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  resume { ptr, i32 } %89

90:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  call void @_ZdaPv(ptr noundef nonnull %5) #13
  ret void
}

declare void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216), ptr noundef) unnamed_addr #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znam(i64 noundef) local_unnamed_addr #4

; Function Attrs: inlinehint mustprogress uwtable
declare noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef) local_unnamed_addr #7

; Function Attrs: inlinehint mustprogress uwtable
declare noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8), i8 noundef zeroext) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #8

; Function Attrs: uwtable
define linkonce_odr dso_local noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %0, ptr noundef nonnull align 8 dereferenceable(5000) %1, ptr noundef nonnull align 2 dereferenceable(4) %2) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.std::uniform_int_distribution<unsigned short>::param_type", align 2
  %5 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %2, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !12
  %7 = zext i16 %6 to i64
  %8 = load i16, ptr %2, align 2, !tbaa !9
  %9 = zext i16 %8 to i64
  %10 = sub nsw i64 %7, %9
  %11 = icmp ult i64 %10, 4294967295
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %4, i64 0, i32 1
  br label %34

14:                                               ; preds = %3
  %15 = trunc i64 %10 to i32
  %16 = add nuw nsw i32 %15, 1
  %17 = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %1)
  %18 = zext i32 %16 to i64
  %19 = mul i64 %17, %18
  %20 = trunc i64 %19 to i32
  %21 = icmp ult i32 %15, %20
  br i1 %21, label %31, label %22

22:                                               ; preds = %14
  %23 = xor i32 %15, -1
  %24 = urem i32 %23, %16
  %25 = icmp ugt i32 %24, %20
  br i1 %25, label %26, label %31

26:                                               ; preds = %22, %26
  %27 = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %1)
  %28 = mul i64 %27, %18
  %29 = trunc i64 %28 to i32
  %30 = icmp ugt i32 %24, %29
  br i1 %30, label %26, label %31, !llvm.loop !403

31:                                               ; preds = %26, %14, %22
  %32 = phi i64 [ %19, %14 ], [ %19, %22 ], [ %28, %26 ]
  %33 = lshr i64 %32, 32
  br label %43

34:                                               ; preds = %12, %34
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #11
  store i16 0, ptr %4, align 2, !tbaa !9
  store i16 -1, ptr %13, align 2, !tbaa !12
  %35 = call noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %0, ptr noundef nonnull align 8 dereferenceable(5000) %1, ptr noundef nonnull align 2 dereferenceable(4) %4)
  %36 = zext i16 %35 to i64
  %37 = shl nuw nsw i64 %36, 32
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #11
  %38 = call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %1)
  %39 = add i64 %37, %38
  %40 = icmp ugt i64 %39, %10
  %41 = icmp ult i64 %39, %37
  %42 = or i1 %40, %41
  br i1 %42, label %34, label %43, !llvm.loop !404

43:                                               ; preds = %34, %31
  %44 = phi i64 [ %33, %31 ], [ %39, %34 ]
  %45 = load i16, ptr %2, align 2, !tbaa !9
  %46 = trunc i64 %44 to i16
  %47 = add i16 %45, %46
  ret i16 %47
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %0) local_unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::mersenne_twister_engine", ptr %0, i64 0, i32 1
  %3 = load i64, ptr %2, align 8, !tbaa !405
  %4 = icmp ugt i64 %3, 623
  br i1 %4, label %5, label %86

5:                                                ; preds = %1
  %6 = load i64, ptr %0, align 8, !tbaa !147
  %7 = insertelement <2 x i64> poison, i64 %6, i64 1
  br label %8

8:                                                ; preds = %8, %5
  %9 = phi i64 [ 0, %5 ], [ %28, %8 ]
  %10 = phi <2 x i64> [ %7, %5 ], [ %14, %8 ]
  %11 = getelementptr inbounds [624 x i64], ptr %0, i64 0, i64 %9
  %12 = or i64 %9, 1
  %13 = getelementptr inbounds [624 x i64], ptr %0, i64 0, i64 %12
  %14 = load <2 x i64>, ptr %13, align 8, !tbaa !147
  %15 = shufflevector <2 x i64> %10, <2 x i64> %14, <2 x i32> <i32 1, i32 2>
  %16 = and <2 x i64> %15, <i64 -2147483648, i64 -2147483648>
  %17 = and <2 x i64> %14, <i64 2147483646, i64 2147483646>
  %18 = or <2 x i64> %17, %16
  %19 = add nuw nsw i64 %9, 397
  %20 = getelementptr inbounds [624 x i64], ptr %0, i64 0, i64 %19
  %21 = load <2 x i64>, ptr %20, align 8, !tbaa !147
  %22 = lshr exact <2 x i64> %18, <i64 1, i64 1>
  %23 = xor <2 x i64> %22, %21
  %24 = and <2 x i64> %14, <i64 1, i64 1>
  %25 = icmp eq <2 x i64> %24, zeroinitializer
  %26 = select <2 x i1> %25, <2 x i64> zeroinitializer, <2 x i64> <i64 2567483615, i64 2567483615>
  %27 = xor <2 x i64> %23, %26
  store <2 x i64> %27, ptr %11, align 8, !tbaa !147
  %28 = add nuw i64 %9, 2
  %29 = icmp eq i64 %28, 226
  br i1 %29, label %30, label %8, !llvm.loop !407

30:                                               ; preds = %8
  %31 = extractelement <2 x i64> %14, i64 1
  %32 = getelementptr inbounds [624 x i64], ptr %0, i64 0, i64 226
  %33 = and i64 %31, -2147483648
  %34 = getelementptr inbounds [624 x i64], ptr %0, i64 0, i64 227
  %35 = load i64, ptr %34, align 8, !tbaa !147
  %36 = and i64 %35, 2147483646
  %37 = or i64 %36, %33
  %38 = getelementptr inbounds [624 x i64], ptr %0, i64 0, i64 623
  %39 = load i64, ptr %38, align 8, !tbaa !147
  %40 = lshr exact i64 %37, 1
  %41 = xor i64 %40, %39
  %42 = and i64 %35, 1
  %43 = icmp eq i64 %42, 0
  %44 = select i1 %43, i64 0, i64 2567483615
  %45 = xor i64 %41, %44
  store i64 %45, ptr %32, align 8, !tbaa !147
  %46 = getelementptr inbounds [624 x i64], ptr %0, i64 0, i64 227
  %47 = load i64, ptr %46, align 8, !tbaa !147
  %48 = insertelement <2 x i64> poison, i64 %47, i64 1
  br label %49

49:                                               ; preds = %49, %30
  %50 = phi i64 [ 0, %30 ], [ %69, %49 ]
  %51 = phi <2 x i64> [ %48, %30 ], [ %56, %49 ]
  %52 = add i64 %50, 227
  %53 = getelementptr inbounds [624 x i64], ptr %0, i64 0, i64 %52
  %54 = add i64 %50, 228
  %55 = getelementptr inbounds [624 x i64], ptr %0, i64 0, i64 %54
  %56 = load <2 x i64>, ptr %55, align 8, !tbaa !147
  %57 = shufflevector <2 x i64> %51, <2 x i64> %56, <2 x i32> <i32 1, i32 2>
  %58 = and <2 x i64> %57, <i64 -2147483648, i64 -2147483648>
  %59 = and <2 x i64> %56, <i64 2147483646, i64 2147483646>
  %60 = or <2 x i64> %59, %58
  %61 = getelementptr inbounds [624 x i64], ptr %0, i64 0, i64 %50
  %62 = load <2 x i64>, ptr %61, align 8, !tbaa !147
  %63 = lshr exact <2 x i64> %60, <i64 1, i64 1>
  %64 = xor <2 x i64> %63, %62
  %65 = and <2 x i64> %56, <i64 1, i64 1>
  %66 = icmp eq <2 x i64> %65, zeroinitializer
  %67 = select <2 x i1> %66, <2 x i64> zeroinitializer, <2 x i64> <i64 2567483615, i64 2567483615>
  %68 = xor <2 x i64> %64, %67
  store <2 x i64> %68, ptr %53, align 8, !tbaa !147
  %69 = add nuw i64 %50, 2
  %70 = icmp eq i64 %69, 396
  br i1 %70, label %71, label %49, !llvm.loop !408

71:                                               ; preds = %49
  %72 = getelementptr inbounds [624 x i64], ptr %0, i64 0, i64 623
  %73 = load i64, ptr %72, align 8, !tbaa !147
  %74 = and i64 %73, -2147483648
  %75 = load i64, ptr %0, align 8, !tbaa !147
  %76 = and i64 %75, 2147483646
  %77 = or i64 %76, %74
  %78 = getelementptr inbounds [624 x i64], ptr %0, i64 0, i64 396
  %79 = load i64, ptr %78, align 8, !tbaa !147
  %80 = lshr exact i64 %77, 1
  %81 = xor i64 %80, %79
  %82 = and i64 %75, 1
  %83 = icmp eq i64 %82, 0
  %84 = select i1 %83, i64 0, i64 2567483615
  %85 = xor i64 %81, %84
  store i64 %85, ptr %72, align 8, !tbaa !147
  br label %86

86:                                               ; preds = %71, %1
  %87 = phi i64 [ 0, %71 ], [ %3, %1 ]
  %88 = add nuw nsw i64 %87, 1
  store i64 %88, ptr %2, align 8, !tbaa !405
  %89 = getelementptr inbounds [624 x i64], ptr %0, i64 0, i64 %87
  %90 = load i64, ptr %89, align 8, !tbaa !147
  %91 = lshr i64 %90, 11
  %92 = and i64 %91, 4294967295
  %93 = xor i64 %92, %90
  %94 = shl i64 %93, 7
  %95 = and i64 %94, 2636928640
  %96 = xor i64 %95, %93
  %97 = shl i64 %96, 15
  %98 = and i64 %97, 4022730752
  %99 = xor i64 %98, %96
  %100 = lshr i64 %99, 18
  %101 = xor i64 %100, %99
  ret i64 %101
}

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, i64 noundef) local_unnamed_addr #0

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8), i64 noundef) local_unnamed_addr #0

declare void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144)) local_unnamed_addr #0

declare void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144)) local_unnamed_addr #0

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(ptr noundef) local_unnamed_addr #5

; Function Attrs: uwtable
define linkonce_odr dso_local noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %0, ptr noundef nonnull align 8 dereferenceable(5000) %1, ptr noundef nonnull align 1 dereferenceable(2) %2) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.std::uniform_int_distribution<unsigned char>::param_type", align 1
  %5 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %2, i64 0, i32 1
  %6 = load i8, ptr %5, align 1, !tbaa !69
  %7 = zext i8 %6 to i64
  %8 = load i8, ptr %2, align 1, !tbaa !67
  %9 = zext i8 %8 to i64
  %10 = sub nsw i64 %7, %9
  %11 = icmp ult i64 %10, 4294967295
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %4, i64 0, i32 1
  br label %34

14:                                               ; preds = %3
  %15 = trunc i64 %10 to i32
  %16 = add nuw nsw i32 %15, 1
  %17 = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %1)
  %18 = zext i32 %16 to i64
  %19 = mul i64 %17, %18
  %20 = trunc i64 %19 to i32
  %21 = icmp ult i32 %15, %20
  br i1 %21, label %31, label %22

22:                                               ; preds = %14
  %23 = xor i32 %15, -1
  %24 = urem i32 %23, %16
  %25 = icmp ugt i32 %24, %20
  br i1 %25, label %26, label %31

26:                                               ; preds = %22, %26
  %27 = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %1)
  %28 = mul i64 %27, %18
  %29 = trunc i64 %28 to i32
  %30 = icmp ugt i32 %24, %29
  br i1 %30, label %26, label %31, !llvm.loop !409

31:                                               ; preds = %26, %14, %22
  %32 = phi i64 [ %19, %14 ], [ %19, %22 ], [ %28, %26 ]
  %33 = lshr i64 %32, 32
  br label %43

34:                                               ; preds = %12, %34
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %4) #11
  store i8 0, ptr %4, align 1, !tbaa !67
  store i8 -1, ptr %13, align 1, !tbaa !69
  %35 = call noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %0, ptr noundef nonnull align 8 dereferenceable(5000) %1, ptr noundef nonnull align 1 dereferenceable(2) %4)
  %36 = zext i8 %35 to i64
  %37 = shl nuw nsw i64 %36, 32
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %4) #11
  %38 = call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %1)
  %39 = add i64 %37, %38
  %40 = icmp ugt i64 %39, %10
  %41 = icmp ult i64 %39, %37
  %42 = or i1 %40, %41
  br i1 %42, label %34, label %43, !llvm.loop !410

43:                                               ; preds = %34, %31
  %44 = phi i64 [ %33, %31 ], [ %39, %34 ]
  %45 = load i8, ptr %2, align 1, !tbaa !67
  %46 = trunc i64 %44 to i8
  %47 = add i8 %45, %46
  ret i8 %47
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %0, ptr noundef nonnull align 8 dereferenceable(5000) %1, ptr noundef nonnull align 4 dereferenceable(8) %2) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.std::uniform_int_distribution<unsigned int>::param_type", align 4
  %5 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %2, i64 0, i32 1
  %6 = load i32, ptr %5, align 4, !tbaa !94
  %7 = zext i32 %6 to i64
  %8 = load i32, ptr %2, align 4, !tbaa !92
  %9 = zext i32 %8 to i64
  %10 = sub nsw i64 %7, %9
  %11 = icmp ult i64 %10, 4294967295
  br i1 %11, label %12, label %32

12:                                               ; preds = %3
  %13 = trunc i64 %10 to i32
  %14 = add nuw i32 %13, 1
  %15 = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %1)
  %16 = zext i32 %14 to i64
  %17 = mul i64 %15, %16
  %18 = trunc i64 %17 to i32
  %19 = icmp ult i32 %13, %18
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = xor i32 %13, -1
  %22 = urem i32 %21, %14
  %23 = icmp ugt i32 %22, %18
  br i1 %23, label %24, label %29

24:                                               ; preds = %20, %24
  %25 = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %1)
  %26 = mul i64 %25, %16
  %27 = trunc i64 %26 to i32
  %28 = icmp ugt i32 %22, %27
  br i1 %28, label %24, label %29, !llvm.loop !411

29:                                               ; preds = %24, %12, %20
  %30 = phi i64 [ %17, %12 ], [ %17, %20 ], [ %26, %24 ]
  %31 = lshr i64 %30, 32
  br label %47

32:                                               ; preds = %3
  %33 = icmp eq i64 %10, 4294967295
  br i1 %33, label %45, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %4, i64 0, i32 1
  br label %36

36:                                               ; preds = %34, %36
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #11
  store i32 0, ptr %4, align 4, !tbaa !92
  store i32 -1, ptr %35, align 4, !tbaa !94
  %37 = call noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %0, ptr noundef nonnull align 8 dereferenceable(5000) %1, ptr noundef nonnull align 4 dereferenceable(8) %4)
  %38 = zext i32 %37 to i64
  %39 = shl nuw i64 %38, 32
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #11
  %40 = call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %1)
  %41 = add i64 %39, %40
  %42 = icmp ugt i64 %41, %10
  %43 = icmp ult i64 %41, %39
  %44 = or i1 %42, %43
  br i1 %44, label %36, label %47, !llvm.loop !412

45:                                               ; preds = %32
  %46 = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %1)
  br label %47

47:                                               ; preds = %36, %45, %29
  %48 = phi i64 [ %31, %29 ], [ %46, %45 ], [ %41, %36 ]
  %49 = load i32, ptr %2, align 4, !tbaa !92
  %50 = trunc i64 %48 to i32
  %51 = add i32 %49, %50
  ret i32 %51
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(5000) %1, ptr noundef nonnull align 8 dereferenceable(16) %2) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.std::uniform_int_distribution<unsigned long>::param_type", align 8
  %5 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %2, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !146
  %7 = load i64, ptr %2, align 8, !tbaa !144
  %8 = sub i64 %6, %7
  %9 = icmp ult i64 %8, 4294967295
  br i1 %9, label %10, label %30

10:                                               ; preds = %3
  %11 = trunc i64 %8 to i32
  %12 = add nuw i32 %11, 1
  %13 = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %1)
  %14 = zext i32 %12 to i64
  %15 = mul i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %11, %16
  br i1 %17, label %27, label %18

18:                                               ; preds = %10
  %19 = xor i32 %11, -1
  %20 = urem i32 %19, %12
  %21 = icmp ugt i32 %20, %16
  br i1 %21, label %22, label %27

22:                                               ; preds = %18, %22
  %23 = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %1)
  %24 = mul i64 %23, %14
  %25 = trunc i64 %24 to i32
  %26 = icmp ugt i32 %20, %25
  br i1 %26, label %22, label %27, !llvm.loop !413

27:                                               ; preds = %22, %10, %18
  %28 = phi i64 [ %15, %10 ], [ %15, %18 ], [ %24, %22 ]
  %29 = lshr i64 %28, 32
  br label %45

30:                                               ; preds = %3
  %31 = icmp eq i64 %8, 4294967295
  br i1 %31, label %43, label %32

32:                                               ; preds = %30
  %33 = lshr i64 %8, 32
  %34 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %4, i64 0, i32 1
  br label %35

35:                                               ; preds = %32, %35
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #11
  store i64 0, ptr %4, align 8, !tbaa !144
  store i64 %33, ptr %34, align 8, !tbaa !146
  %36 = call noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(5000) %1, ptr noundef nonnull align 8 dereferenceable(16) %4)
  %37 = shl i64 %36, 32
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #11
  %38 = call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %1)
  %39 = add i64 %38, %37
  %40 = icmp ugt i64 %39, %8
  %41 = icmp ult i64 %39, %37
  %42 = or i1 %40, %41
  br i1 %42, label %35, label %45, !llvm.loop !414

43:                                               ; preds = %30
  %44 = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %1)
  br label %45

45:                                               ; preds = %35, %43, %27
  %46 = phi i64 [ %29, %27 ], [ %44, %43 ], [ %39, %35 ]
  %47 = load i64, ptr %2, align 8, !tbaa !144
  %48 = add i64 %47, %46
  ret i64 %48
}

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_VectorOperations.cpp() #3 section ".text.startup" personality ptr @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt8ios_base4InitD1Ev, ptr nonnull @_ZStL8__ioinit, ptr nonnull @__dso_handle) #11
  %2 = tail call noundef i32 @_ZN9benchmark8internal17InitializeStreamsEv()
  store i64 5489, ptr @_ZL3rng, align 8, !tbaa !147
  br label %3

3:                                                ; preds = %14, %0
  %4 = phi i64 [ 5489, %0 ], [ %19, %14 ]
  %5 = phi i64 [ 1, %0 ], [ %21, %14 ]
  %6 = lshr i64 %4, 30
  %7 = xor i64 %6, %4
  %8 = mul nuw nsw i64 %7, 1812433253
  %9 = add nuw i64 %8, %5
  %10 = and i64 %9, 4294967295
  %11 = getelementptr inbounds [624 x i64], ptr @_ZL3rng, i64 0, i64 %5
  store i64 %10, ptr %11, align 8, !tbaa !147
  %12 = add nuw nsw i64 %5, 1
  %13 = icmp eq i64 %12, 624
  br i1 %13, label %22, label %14, !llvm.loop !415

14:                                               ; preds = %3
  %15 = lshr i64 %10, 30
  %16 = xor i64 %15, %9
  %17 = mul i64 %16, 1812433253
  %18 = add i64 %17, %12
  %19 = and i64 %18, 4294967295
  %20 = getelementptr inbounds [624 x i64], ptr @_ZL3rng, i64 0, i64 %12
  store i64 %19, ptr %20, align 8, !tbaa !147
  %21 = add nuw nsw i64 %5, 2
  br label %3

22:                                               ; preds = %3
  store i64 624, ptr getelementptr inbounds (%"class.std::mersenne_twister_engine", ptr @_ZL3rng, i64 0, i32 1), align 8, !tbaa !405
  %23 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %23, ptr noundef nonnull @.str)
          to label %29 unwind label %27

24:                                               ; preds = %453, %447, %441, %435, %429, %423, %417, %411, %405, %399, %393, %387, %381, %375, %369, %363, %357, %351, %345, %339, %333, %327, %321, %315, %309, %303, %297, %291, %285, %279, %273, %267, %261, %255, %249, %243, %237, %231, %225, %219, %213, %207, %201, %195, %189, %183, %177, %171, %165, %159, %153, %147, %141, %135, %129, %123, %117, %111, %105, %99, %93, %87, %81, %75, %69, %63, %57, %51, %45, %39, %33, %27
  %25 = phi ptr [ %452, %453 ], [ %446, %447 ], [ %440, %441 ], [ %434, %435 ], [ %428, %429 ], [ %422, %423 ], [ %416, %417 ], [ %410, %411 ], [ %404, %405 ], [ %398, %399 ], [ %392, %393 ], [ %386, %387 ], [ %380, %381 ], [ %374, %375 ], [ %368, %369 ], [ %362, %363 ], [ %356, %357 ], [ %350, %351 ], [ %344, %345 ], [ %338, %339 ], [ %332, %333 ], [ %326, %327 ], [ %320, %321 ], [ %314, %315 ], [ %308, %309 ], [ %302, %303 ], [ %296, %297 ], [ %290, %291 ], [ %284, %285 ], [ %278, %279 ], [ %272, %273 ], [ %266, %267 ], [ %260, %261 ], [ %254, %255 ], [ %248, %249 ], [ %242, %243 ], [ %236, %237 ], [ %230, %231 ], [ %224, %225 ], [ %218, %219 ], [ %212, %213 ], [ %206, %207 ], [ %200, %201 ], [ %194, %195 ], [ %188, %189 ], [ %182, %183 ], [ %176, %177 ], [ %170, %171 ], [ %164, %165 ], [ %158, %159 ], [ %152, %153 ], [ %146, %147 ], [ %140, %141 ], [ %134, %135 ], [ %128, %129 ], [ %122, %123 ], [ %116, %117 ], [ %110, %111 ], [ %104, %105 ], [ %98, %99 ], [ %92, %93 ], [ %86, %87 ], [ %80, %81 ], [ %74, %75 ], [ %68, %69 ], [ %62, %63 ], [ %56, %57 ], [ %50, %51 ], [ %44, %45 ], [ %38, %39 ], [ %32, %33 ], [ %23, %27 ]
  %26 = phi { ptr, i32 } [ %454, %453 ], [ %448, %447 ], [ %442, %441 ], [ %436, %435 ], [ %430, %429 ], [ %424, %423 ], [ %418, %417 ], [ %412, %411 ], [ %406, %405 ], [ %400, %399 ], [ %394, %393 ], [ %388, %387 ], [ %382, %381 ], [ %376, %375 ], [ %370, %369 ], [ %364, %363 ], [ %358, %357 ], [ %352, %351 ], [ %346, %345 ], [ %340, %339 ], [ %334, %333 ], [ %328, %327 ], [ %322, %321 ], [ %316, %315 ], [ %310, %309 ], [ %304, %303 ], [ %298, %297 ], [ %292, %291 ], [ %286, %285 ], [ %280, %279 ], [ %274, %273 ], [ %268, %267 ], [ %262, %261 ], [ %256, %255 ], [ %250, %249 ], [ %244, %243 ], [ %238, %237 ], [ %232, %231 ], [ %226, %225 ], [ %220, %219 ], [ %214, %213 ], [ %208, %207 ], [ %202, %201 ], [ %196, %195 ], [ %190, %189 ], [ %184, %183 ], [ %178, %177 ], [ %172, %171 ], [ %166, %165 ], [ %160, %159 ], [ %154, %153 ], [ %148, %147 ], [ %142, %141 ], [ %136, %135 ], [ %130, %129 ], [ %124, %123 ], [ %118, %117 ], [ %112, %111 ], [ %106, %105 ], [ %100, %99 ], [ %94, %93 ], [ %88, %87 ], [ %82, %81 ], [ %76, %75 ], [ %70, %69 ], [ %64, %63 ], [ %58, %57 ], [ %52, %51 ], [ %46, %45 ], [ %40, %39 ], [ %34, %33 ], [ %28, %27 ]
  tail call void @_ZdlPv(ptr noundef nonnull %25) #13
  resume { ptr, i32 } %26

27:                                               ; preds = %22
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %24

29:                                               ; preds = %22
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %23, align 8, !tbaa !416
  %30 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %23, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint8_t_RN9benchmark5StateE, ptr %30, align 8, !tbaa !418
  %31 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %23)
  store ptr %31, ptr @_ZL27benchmark_uniq_2_benchmark_, align 8, !tbaa !5
  %32 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %32, ptr noundef nonnull @.str.5)
          to label %35 unwind label %33

33:                                               ; preds = %29
  %34 = landingpad { ptr, i32 }
          cleanup
  br label %24

35:                                               ; preds = %29
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %32, align 8, !tbaa !416
  %36 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %32, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint8_t_RN9benchmark5StateE, ptr %36, align 8, !tbaa !418
  %37 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %32)
  store ptr %37, ptr @_ZL27benchmark_uniq_3_benchmark_, align 8, !tbaa !5
  %38 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %38, ptr noundef nonnull @.str.7)
          to label %41 unwind label %39

39:                                               ; preds = %35
  %40 = landingpad { ptr, i32 }
          cleanup
  br label %24

41:                                               ; preds = %35
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %38, align 8, !tbaa !416
  %42 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %38, i64 0, i32 1
  store ptr @_Z53benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint8_t_RN9benchmark5StateE, ptr %42, align 8, !tbaa !418
  %43 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %38)
  store ptr %43, ptr @_ZL27benchmark_uniq_4_benchmark_, align 8, !tbaa !5
  %44 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %44, ptr noundef nonnull @.str.9)
          to label %47 unwind label %45

45:                                               ; preds = %41
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %24

47:                                               ; preds = %41
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %44, align 8, !tbaa !416
  %48 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %44, i64 0, i32 1
  store ptr @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint8_t_RN9benchmark5StateE, ptr %48, align 8, !tbaa !418
  %49 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %44)
  store ptr %49, ptr @_ZL27benchmark_uniq_5_benchmark_, align 8, !tbaa !5
  %50 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %50, ptr noundef nonnull @.str.11)
          to label %53 unwind label %51

51:                                               ; preds = %47
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %24

53:                                               ; preds = %47
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %50, align 8, !tbaa !416
  %54 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %50, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint8_t_RN9benchmark5StateE, ptr %54, align 8, !tbaa !418
  %55 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %50)
  store ptr %55, ptr @_ZL27benchmark_uniq_6_benchmark_, align 8, !tbaa !5
  %56 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %56, ptr noundef nonnull @.str.13)
          to label %59 unwind label %57

57:                                               ; preds = %53
  %58 = landingpad { ptr, i32 }
          cleanup
  br label %24

59:                                               ; preds = %53
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %56, align 8, !tbaa !416
  %60 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %56, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint8_t_RN9benchmark5StateE, ptr %60, align 8, !tbaa !418
  %61 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %56)
  store ptr %61, ptr @_ZL27benchmark_uniq_7_benchmark_, align 8, !tbaa !5
  %62 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %62, ptr noundef nonnull @.str.15)
          to label %65 unwind label %63

63:                                               ; preds = %59
  %64 = landingpad { ptr, i32 }
          cleanup
  br label %24

65:                                               ; preds = %59
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %62, align 8, !tbaa !416
  %66 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %62, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint8_t_RN9benchmark5StateE, ptr %66, align 8, !tbaa !418
  %67 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %62)
  store ptr %67, ptr @_ZL27benchmark_uniq_8_benchmark_, align 8, !tbaa !5
  %68 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %68, ptr noundef nonnull @.str.17)
          to label %71 unwind label %69

69:                                               ; preds = %65
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %24

71:                                               ; preds = %65
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %68, align 8, !tbaa !416
  %72 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %68, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint8_t_RN9benchmark5StateE, ptr %72, align 8, !tbaa !418
  %73 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %68)
  store ptr %73, ptr @_ZL27benchmark_uniq_9_benchmark_, align 8, !tbaa !5
  %74 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %74, ptr noundef nonnull @.str.19)
          to label %77 unwind label %75

75:                                               ; preds = %71
  %76 = landingpad { ptr, i32 }
          cleanup
  br label %24

77:                                               ; preds = %71
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %74, align 8, !tbaa !416
  %78 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %74, i64 0, i32 1
  store ptr @_Z53benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint8_t_RN9benchmark5StateE, ptr %78, align 8, !tbaa !418
  %79 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %74)
  store ptr %79, ptr @_ZL28benchmark_uniq_10_benchmark_, align 8, !tbaa !5
  %80 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %80, ptr noundef nonnull @.str.21)
          to label %83 unwind label %81

81:                                               ; preds = %77
  %82 = landingpad { ptr, i32 }
          cleanup
  br label %24

83:                                               ; preds = %77
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %80, align 8, !tbaa !416
  %84 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %80, i64 0, i32 1
  store ptr @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint8_t_RN9benchmark5StateE, ptr %84, align 8, !tbaa !418
  %85 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %80)
  store ptr %85, ptr @_ZL28benchmark_uniq_11_benchmark_, align 8, !tbaa !5
  %86 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %86, ptr noundef nonnull @.str.23)
          to label %89 unwind label %87

87:                                               ; preds = %83
  %88 = landingpad { ptr, i32 }
          cleanup
  br label %24

89:                                               ; preds = %83
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %86, align 8, !tbaa !416
  %90 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %86, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint8_t_RN9benchmark5StateE, ptr %90, align 8, !tbaa !418
  %91 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %86)
  store ptr %91, ptr @_ZL28benchmark_uniq_12_benchmark_, align 8, !tbaa !5
  %92 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %92, ptr noundef nonnull @.str.25)
          to label %95 unwind label %93

93:                                               ; preds = %89
  %94 = landingpad { ptr, i32 }
          cleanup
  br label %24

95:                                               ; preds = %89
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %92, align 8, !tbaa !416
  %96 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %92, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint8_t_RN9benchmark5StateE, ptr %96, align 8, !tbaa !418
  %97 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %92)
  store ptr %97, ptr @_ZL28benchmark_uniq_13_benchmark_, align 8, !tbaa !5
  %98 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %98, ptr noundef nonnull @.str.27)
          to label %101 unwind label %99

99:                                               ; preds = %95
  %100 = landingpad { ptr, i32 }
          cleanup
  br label %24

101:                                              ; preds = %95
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %98, align 8, !tbaa !416
  %102 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %98, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint8_t_RN9benchmark5StateE, ptr %102, align 8, !tbaa !418
  %103 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %98)
  store ptr %103, ptr @_ZL28benchmark_uniq_14_benchmark_, align 8, !tbaa !5
  %104 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %104, ptr noundef nonnull @.str.29)
          to label %107 unwind label %105

105:                                              ; preds = %101
  %106 = landingpad { ptr, i32 }
          cleanup
  br label %24

107:                                              ; preds = %101
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %104, align 8, !tbaa !416
  %108 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %104, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint8_t_RN9benchmark5StateE, ptr %108, align 8, !tbaa !418
  %109 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %104)
  store ptr %109, ptr @_ZL28benchmark_uniq_15_benchmark_, align 8, !tbaa !5
  %110 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %110, ptr noundef nonnull @.str.31)
          to label %113 unwind label %111

111:                                              ; preds = %107
  %112 = landingpad { ptr, i32 }
          cleanup
  br label %24

113:                                              ; preds = %107
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %110, align 8, !tbaa !416
  %114 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %110, i64 0, i32 1
  store ptr @_Z53benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint8_t_RN9benchmark5StateE, ptr %114, align 8, !tbaa !418
  %115 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %110)
  store ptr %115, ptr @_ZL28benchmark_uniq_16_benchmark_, align 8, !tbaa !5
  %116 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %116, ptr noundef nonnull @.str.33)
          to label %119 unwind label %117

117:                                              ; preds = %113
  %118 = landingpad { ptr, i32 }
          cleanup
  br label %24

119:                                              ; preds = %113
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %116, align 8, !tbaa !416
  %120 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %116, i64 0, i32 1
  store ptr @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint8_t_RN9benchmark5StateE, ptr %120, align 8, !tbaa !418
  %121 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %116)
  store ptr %121, ptr @_ZL28benchmark_uniq_17_benchmark_, align 8, !tbaa !5
  %122 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %122, ptr noundef nonnull @.str.35)
          to label %125 unwind label %123

123:                                              ; preds = %119
  %124 = landingpad { ptr, i32 }
          cleanup
  br label %24

125:                                              ; preds = %119
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %122, align 8, !tbaa !416
  %126 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %122, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint8_t_RN9benchmark5StateE, ptr %126, align 8, !tbaa !418
  %127 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %122)
  store ptr %127, ptr @_ZL28benchmark_uniq_18_benchmark_, align 8, !tbaa !5
  %128 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %128, ptr noundef nonnull @.str.37)
          to label %131 unwind label %129

129:                                              ; preds = %125
  %130 = landingpad { ptr, i32 }
          cleanup
  br label %24

131:                                              ; preds = %125
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %128, align 8, !tbaa !416
  %132 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %128, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint8_t_RN9benchmark5StateE, ptr %132, align 8, !tbaa !418
  %133 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %128)
  store ptr %133, ptr @_ZL28benchmark_uniq_19_benchmark_, align 8, !tbaa !5
  %134 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %134, ptr noundef nonnull @.str.39)
          to label %137 unwind label %135

135:                                              ; preds = %131
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %24

137:                                              ; preds = %131
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %134, align 8, !tbaa !416
  %138 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %134, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint16_t_RN9benchmark5StateE, ptr %138, align 8, !tbaa !418
  %139 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %134)
  store ptr %139, ptr @_ZL28benchmark_uniq_20_benchmark_, align 8, !tbaa !5
  %140 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %140, ptr noundef nonnull @.str.41)
          to label %143 unwind label %141

141:                                              ; preds = %137
  %142 = landingpad { ptr, i32 }
          cleanup
  br label %24

143:                                              ; preds = %137
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %140, align 8, !tbaa !416
  %144 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %140, i64 0, i32 1
  store ptr @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint16_t_RN9benchmark5StateE, ptr %144, align 8, !tbaa !418
  %145 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %140)
  store ptr %145, ptr @_ZL28benchmark_uniq_21_benchmark_, align 8, !tbaa !5
  %146 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %146, ptr noundef nonnull @.str.43)
          to label %149 unwind label %147

147:                                              ; preds = %143
  %148 = landingpad { ptr, i32 }
          cleanup
  br label %24

149:                                              ; preds = %143
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %146, align 8, !tbaa !416
  %150 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %146, i64 0, i32 1
  store ptr @_Z54benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint16_t_RN9benchmark5StateE, ptr %150, align 8, !tbaa !418
  %151 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %146)
  store ptr %151, ptr @_ZL28benchmark_uniq_22_benchmark_, align 8, !tbaa !5
  %152 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %152, ptr noundef nonnull @.str.45)
          to label %155 unwind label %153

153:                                              ; preds = %149
  %154 = landingpad { ptr, i32 }
          cleanup
  br label %24

155:                                              ; preds = %149
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %152, align 8, !tbaa !416
  %156 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %152, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint16_t_RN9benchmark5StateE, ptr %156, align 8, !tbaa !418
  %157 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %152)
  store ptr %157, ptr @_ZL28benchmark_uniq_23_benchmark_, align 8, !tbaa !5
  %158 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %158, ptr noundef nonnull @.str.47)
          to label %161 unwind label %159

159:                                              ; preds = %155
  %160 = landingpad { ptr, i32 }
          cleanup
  br label %24

161:                                              ; preds = %155
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %158, align 8, !tbaa !416
  %162 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %158, i64 0, i32 1
  store ptr @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint16_t_RN9benchmark5StateE, ptr %162, align 8, !tbaa !418
  %163 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %158)
  store ptr %163, ptr @_ZL28benchmark_uniq_24_benchmark_, align 8, !tbaa !5
  %164 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %164, ptr noundef nonnull @.str.49)
          to label %167 unwind label %165

165:                                              ; preds = %161
  %166 = landingpad { ptr, i32 }
          cleanup
  br label %24

167:                                              ; preds = %161
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %164, align 8, !tbaa !416
  %168 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %164, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint16_t_RN9benchmark5StateE, ptr %168, align 8, !tbaa !418
  %169 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %164)
  store ptr %169, ptr @_ZL28benchmark_uniq_25_benchmark_, align 8, !tbaa !5
  %170 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %170, ptr noundef nonnull @.str.51)
          to label %173 unwind label %171

171:                                              ; preds = %167
  %172 = landingpad { ptr, i32 }
          cleanup
  br label %24

173:                                              ; preds = %167
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %170, align 8, !tbaa !416
  %174 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %170, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint16_t_RN9benchmark5StateE, ptr %174, align 8, !tbaa !418
  %175 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %170)
  store ptr %175, ptr @_ZL28benchmark_uniq_26_benchmark_, align 8, !tbaa !5
  %176 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %176, ptr noundef nonnull @.str.53)
          to label %179 unwind label %177

177:                                              ; preds = %173
  %178 = landingpad { ptr, i32 }
          cleanup
  br label %24

179:                                              ; preds = %173
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %176, align 8, !tbaa !416
  %180 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %176, i64 0, i32 1
  store ptr @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint16_t_RN9benchmark5StateE, ptr %180, align 8, !tbaa !418
  %181 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %176)
  store ptr %181, ptr @_ZL28benchmark_uniq_27_benchmark_, align 8, !tbaa !5
  %182 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %182, ptr noundef nonnull @.str.55)
          to label %185 unwind label %183

183:                                              ; preds = %179
  %184 = landingpad { ptr, i32 }
          cleanup
  br label %24

185:                                              ; preds = %179
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %182, align 8, !tbaa !416
  %186 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %182, i64 0, i32 1
  store ptr @_Z54benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint16_t_RN9benchmark5StateE, ptr %186, align 8, !tbaa !418
  %187 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %182)
  store ptr %187, ptr @_ZL28benchmark_uniq_28_benchmark_, align 8, !tbaa !5
  %188 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %188, ptr noundef nonnull @.str.57)
          to label %191 unwind label %189

189:                                              ; preds = %185
  %190 = landingpad { ptr, i32 }
          cleanup
  br label %24

191:                                              ; preds = %185
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %188, align 8, !tbaa !416
  %192 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %188, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint16_t_RN9benchmark5StateE, ptr %192, align 8, !tbaa !418
  %193 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %188)
  store ptr %193, ptr @_ZL28benchmark_uniq_29_benchmark_, align 8, !tbaa !5
  %194 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %194, ptr noundef nonnull @.str.59)
          to label %197 unwind label %195

195:                                              ; preds = %191
  %196 = landingpad { ptr, i32 }
          cleanup
  br label %24

197:                                              ; preds = %191
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %194, align 8, !tbaa !416
  %198 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %194, i64 0, i32 1
  store ptr @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint16_t_RN9benchmark5StateE, ptr %198, align 8, !tbaa !418
  %199 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %194)
  store ptr %199, ptr @_ZL28benchmark_uniq_30_benchmark_, align 8, !tbaa !5
  %200 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %200, ptr noundef nonnull @.str.61)
          to label %203 unwind label %201

201:                                              ; preds = %197
  %202 = landingpad { ptr, i32 }
          cleanup
  br label %24

203:                                              ; preds = %197
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %200, align 8, !tbaa !416
  %204 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %200, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint16_t_RN9benchmark5StateE, ptr %204, align 8, !tbaa !418
  %205 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %200)
  store ptr %205, ptr @_ZL28benchmark_uniq_31_benchmark_, align 8, !tbaa !5
  %206 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %206, ptr noundef nonnull @.str.63)
          to label %209 unwind label %207

207:                                              ; preds = %203
  %208 = landingpad { ptr, i32 }
          cleanup
  br label %24

209:                                              ; preds = %203
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %206, align 8, !tbaa !416
  %210 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %206, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint32_t_RN9benchmark5StateE, ptr %210, align 8, !tbaa !418
  %211 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %206)
  store ptr %211, ptr @_ZL28benchmark_uniq_32_benchmark_, align 8, !tbaa !5
  %212 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %212, ptr noundef nonnull @.str.65)
          to label %215 unwind label %213

213:                                              ; preds = %209
  %214 = landingpad { ptr, i32 }
          cleanup
  br label %24

215:                                              ; preds = %209
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %212, align 8, !tbaa !416
  %216 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %212, i64 0, i32 1
  store ptr @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint32_t_RN9benchmark5StateE, ptr %216, align 8, !tbaa !418
  %217 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %212)
  store ptr %217, ptr @_ZL28benchmark_uniq_33_benchmark_, align 8, !tbaa !5
  %218 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %218, ptr noundef nonnull @.str.67)
          to label %221 unwind label %219

219:                                              ; preds = %215
  %220 = landingpad { ptr, i32 }
          cleanup
  br label %24

221:                                              ; preds = %215
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %218, align 8, !tbaa !416
  %222 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %218, i64 0, i32 1
  store ptr @_Z54benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint32_t_RN9benchmark5StateE, ptr %222, align 8, !tbaa !418
  %223 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %218)
  store ptr %223, ptr @_ZL28benchmark_uniq_34_benchmark_, align 8, !tbaa !5
  %224 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %224, ptr noundef nonnull @.str.69)
          to label %227 unwind label %225

225:                                              ; preds = %221
  %226 = landingpad { ptr, i32 }
          cleanup
  br label %24

227:                                              ; preds = %221
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %224, align 8, !tbaa !416
  %228 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %224, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint32_t_RN9benchmark5StateE, ptr %228, align 8, !tbaa !418
  %229 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %224)
  store ptr %229, ptr @_ZL28benchmark_uniq_35_benchmark_, align 8, !tbaa !5
  %230 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %230, ptr noundef nonnull @.str.71)
          to label %233 unwind label %231

231:                                              ; preds = %227
  %232 = landingpad { ptr, i32 }
          cleanup
  br label %24

233:                                              ; preds = %227
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %230, align 8, !tbaa !416
  %234 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %230, i64 0, i32 1
  store ptr @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint32_t_RN9benchmark5StateE, ptr %234, align 8, !tbaa !418
  %235 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %230)
  store ptr %235, ptr @_ZL28benchmark_uniq_36_benchmark_, align 8, !tbaa !5
  %236 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %236, ptr noundef nonnull @.str.73)
          to label %239 unwind label %237

237:                                              ; preds = %233
  %238 = landingpad { ptr, i32 }
          cleanup
  br label %24

239:                                              ; preds = %233
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %236, align 8, !tbaa !416
  %240 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %236, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint32_t_RN9benchmark5StateE, ptr %240, align 8, !tbaa !418
  %241 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %236)
  store ptr %241, ptr @_ZL28benchmark_uniq_37_benchmark_, align 8, !tbaa !5
  %242 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %242, ptr noundef nonnull @.str.75)
          to label %245 unwind label %243

243:                                              ; preds = %239
  %244 = landingpad { ptr, i32 }
          cleanup
  br label %24

245:                                              ; preds = %239
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %242, align 8, !tbaa !416
  %246 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %242, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint16_t_RN9benchmark5StateE, ptr %246, align 8, !tbaa !418
  %247 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %242)
  store ptr %247, ptr @_ZL28benchmark_uniq_38_benchmark_, align 8, !tbaa !5
  %248 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %248, ptr noundef nonnull @.str.77)
          to label %251 unwind label %249

249:                                              ; preds = %245
  %250 = landingpad { ptr, i32 }
          cleanup
  br label %24

251:                                              ; preds = %245
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %248, align 8, !tbaa !416
  %252 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %248, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint16_t_RN9benchmark5StateE, ptr %252, align 8, !tbaa !418
  %253 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %248)
  store ptr %253, ptr @_ZL28benchmark_uniq_39_benchmark_, align 8, !tbaa !5
  %254 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %254, ptr noundef nonnull @.str.79)
          to label %257 unwind label %255

255:                                              ; preds = %251
  %256 = landingpad { ptr, i32 }
          cleanup
  br label %24

257:                                              ; preds = %251
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %254, align 8, !tbaa !416
  %258 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %254, i64 0, i32 1
  store ptr @_Z53benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint16_t_RN9benchmark5StateE, ptr %258, align 8, !tbaa !418
  %259 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %254)
  store ptr %259, ptr @_ZL28benchmark_uniq_40_benchmark_, align 8, !tbaa !5
  %260 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %260, ptr noundef nonnull @.str.81)
          to label %263 unwind label %261

261:                                              ; preds = %257
  %262 = landingpad { ptr, i32 }
          cleanup
  br label %24

263:                                              ; preds = %257
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %260, align 8, !tbaa !416
  %264 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %260, i64 0, i32 1
  store ptr @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint16_t_RN9benchmark5StateE, ptr %264, align 8, !tbaa !418
  %265 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %260)
  store ptr %265, ptr @_ZL28benchmark_uniq_41_benchmark_, align 8, !tbaa !5
  %266 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %266, ptr noundef nonnull @.str.83)
          to label %269 unwind label %267

267:                                              ; preds = %263
  %268 = landingpad { ptr, i32 }
          cleanup
  br label %24

269:                                              ; preds = %263
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %266, align 8, !tbaa !416
  %270 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %266, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint16_t_RN9benchmark5StateE, ptr %270, align 8, !tbaa !418
  %271 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %266)
  store ptr %271, ptr @_ZL28benchmark_uniq_42_benchmark_, align 8, !tbaa !5
  %272 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %272, ptr noundef nonnull @.str.85)
          to label %275 unwind label %273

273:                                              ; preds = %269
  %274 = landingpad { ptr, i32 }
          cleanup
  br label %24

275:                                              ; preds = %269
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %272, align 8, !tbaa !416
  %276 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %272, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint16_t_RN9benchmark5StateE, ptr %276, align 8, !tbaa !418
  %277 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %272)
  store ptr %277, ptr @_ZL28benchmark_uniq_43_benchmark_, align 8, !tbaa !5
  %278 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %278, ptr noundef nonnull @.str.87)
          to label %281 unwind label %279

279:                                              ; preds = %275
  %280 = landingpad { ptr, i32 }
          cleanup
  br label %24

281:                                              ; preds = %275
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %278, align 8, !tbaa !416
  %282 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %278, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint32_t_RN9benchmark5StateE, ptr %282, align 8, !tbaa !418
  %283 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %278)
  store ptr %283, ptr @_ZL28benchmark_uniq_44_benchmark_, align 8, !tbaa !5
  %284 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %284, ptr noundef nonnull @.str.89)
          to label %287 unwind label %285

285:                                              ; preds = %281
  %286 = landingpad { ptr, i32 }
          cleanup
  br label %24

287:                                              ; preds = %281
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %284, align 8, !tbaa !416
  %288 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %284, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint32_t_RN9benchmark5StateE, ptr %288, align 8, !tbaa !418
  %289 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %284)
  store ptr %289, ptr @_ZL28benchmark_uniq_45_benchmark_, align 8, !tbaa !5
  %290 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %290, ptr noundef nonnull @.str.91)
          to label %293 unwind label %291

291:                                              ; preds = %287
  %292 = landingpad { ptr, i32 }
          cleanup
  br label %24

293:                                              ; preds = %287
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %290, align 8, !tbaa !416
  %294 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %290, i64 0, i32 1
  store ptr @_Z53benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint32_t_RN9benchmark5StateE, ptr %294, align 8, !tbaa !418
  %295 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %290)
  store ptr %295, ptr @_ZL28benchmark_uniq_46_benchmark_, align 8, !tbaa !5
  %296 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %296, ptr noundef nonnull @.str.93)
          to label %299 unwind label %297

297:                                              ; preds = %293
  %298 = landingpad { ptr, i32 }
          cleanup
  br label %24

299:                                              ; preds = %293
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %296, align 8, !tbaa !416
  %300 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %296, i64 0, i32 1
  store ptr @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint32_t_RN9benchmark5StateE, ptr %300, align 8, !tbaa !418
  %301 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %296)
  store ptr %301, ptr @_ZL28benchmark_uniq_47_benchmark_, align 8, !tbaa !5
  %302 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %302, ptr noundef nonnull @.str.95)
          to label %305 unwind label %303

303:                                              ; preds = %299
  %304 = landingpad { ptr, i32 }
          cleanup
  br label %24

305:                                              ; preds = %299
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %302, align 8, !tbaa !416
  %306 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %302, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint32_t_RN9benchmark5StateE, ptr %306, align 8, !tbaa !418
  %307 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %302)
  store ptr %307, ptr @_ZL28benchmark_uniq_48_benchmark_, align 8, !tbaa !5
  %308 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %308, ptr noundef nonnull @.str.97)
          to label %311 unwind label %309

309:                                              ; preds = %305
  %310 = landingpad { ptr, i32 }
          cleanup
  br label %24

311:                                              ; preds = %305
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %308, align 8, !tbaa !416
  %312 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %308, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint32_t_RN9benchmark5StateE, ptr %312, align 8, !tbaa !418
  %313 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %308)
  store ptr %313, ptr @_ZL28benchmark_uniq_49_benchmark_, align 8, !tbaa !5
  %314 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %314, ptr noundef nonnull @.str.99)
          to label %317 unwind label %315

315:                                              ; preds = %311
  %316 = landingpad { ptr, i32 }
          cleanup
  br label %24

317:                                              ; preds = %311
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %314, align 8, !tbaa !416
  %318 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %314, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint64_t_RN9benchmark5StateE, ptr %318, align 8, !tbaa !418
  %319 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %314)
  store ptr %319, ptr @_ZL28benchmark_uniq_50_benchmark_, align 8, !tbaa !5
  %320 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %320, ptr noundef nonnull @.str.101)
          to label %323 unwind label %321

321:                                              ; preds = %317
  %322 = landingpad { ptr, i32 }
          cleanup
  br label %24

323:                                              ; preds = %317
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %320, align 8, !tbaa !416
  %324 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %320, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint64_t_RN9benchmark5StateE, ptr %324, align 8, !tbaa !418
  %325 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %320)
  store ptr %325, ptr @_ZL28benchmark_uniq_51_benchmark_, align 8, !tbaa !5
  %326 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %326, ptr noundef nonnull @.str.103)
          to label %329 unwind label %327

327:                                              ; preds = %323
  %328 = landingpad { ptr, i32 }
          cleanup
  br label %24

329:                                              ; preds = %323
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %326, align 8, !tbaa !416
  %330 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %326, i64 0, i32 1
  store ptr @_Z53benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint64_t_RN9benchmark5StateE, ptr %330, align 8, !tbaa !418
  %331 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %326)
  store ptr %331, ptr @_ZL28benchmark_uniq_52_benchmark_, align 8, !tbaa !5
  %332 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %332, ptr noundef nonnull @.str.105)
          to label %335 unwind label %333

333:                                              ; preds = %329
  %334 = landingpad { ptr, i32 }
          cleanup
  br label %24

335:                                              ; preds = %329
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %332, align 8, !tbaa !416
  %336 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %332, i64 0, i32 1
  store ptr @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint64_t_RN9benchmark5StateE, ptr %336, align 8, !tbaa !418
  %337 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %332)
  store ptr %337, ptr @_ZL28benchmark_uniq_53_benchmark_, align 8, !tbaa !5
  %338 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %338, ptr noundef nonnull @.str.107)
          to label %341 unwind label %339

339:                                              ; preds = %335
  %340 = landingpad { ptr, i32 }
          cleanup
  br label %24

341:                                              ; preds = %335
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %338, align 8, !tbaa !416
  %342 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %338, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint64_t_RN9benchmark5StateE, ptr %342, align 8, !tbaa !418
  %343 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %338)
  store ptr %343, ptr @_ZL28benchmark_uniq_54_benchmark_, align 8, !tbaa !5
  %344 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %344, ptr noundef nonnull @.str.109)
          to label %347 unwind label %345

345:                                              ; preds = %341
  %346 = landingpad { ptr, i32 }
          cleanup
  br label %24

347:                                              ; preds = %341
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %344, align 8, !tbaa !416
  %348 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %344, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint64_t_RN9benchmark5StateE, ptr %348, align 8, !tbaa !418
  %349 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %344)
  store ptr %349, ptr @_ZL28benchmark_uniq_55_benchmark_, align 8, !tbaa !5
  %350 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %350, ptr noundef nonnull @.str.111)
          to label %353 unwind label %351

351:                                              ; preds = %347
  %352 = landingpad { ptr, i32 }
          cleanup
  br label %24

353:                                              ; preds = %347
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %350, align 8, !tbaa !416
  %354 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %350, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint32_t_RN9benchmark5StateE, ptr %354, align 8, !tbaa !418
  %355 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %350)
  store ptr %355, ptr @_ZL28benchmark_uniq_56_benchmark_, align 8, !tbaa !5
  %356 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %356, ptr noundef nonnull @.str.113)
          to label %359 unwind label %357

357:                                              ; preds = %353
  %358 = landingpad { ptr, i32 }
          cleanup
  br label %24

359:                                              ; preds = %353
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %356, align 8, !tbaa !416
  %360 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %356, i64 0, i32 1
  store ptr @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint32_t_RN9benchmark5StateE, ptr %360, align 8, !tbaa !418
  %361 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %356)
  store ptr %361, ptr @_ZL28benchmark_uniq_57_benchmark_, align 8, !tbaa !5
  %362 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %362, ptr noundef nonnull @.str.115)
          to label %365 unwind label %363

363:                                              ; preds = %359
  %364 = landingpad { ptr, i32 }
          cleanup
  br label %24

365:                                              ; preds = %359
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %362, align 8, !tbaa !416
  %366 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %362, i64 0, i32 1
  store ptr @_Z54benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint32_t_RN9benchmark5StateE, ptr %366, align 8, !tbaa !418
  %367 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %362)
  store ptr %367, ptr @_ZL28benchmark_uniq_58_benchmark_, align 8, !tbaa !5
  %368 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %368, ptr noundef nonnull @.str.117)
          to label %371 unwind label %369

369:                                              ; preds = %365
  %370 = landingpad { ptr, i32 }
          cleanup
  br label %24

371:                                              ; preds = %365
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %368, align 8, !tbaa !416
  %372 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %368, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint32_t_RN9benchmark5StateE, ptr %372, align 8, !tbaa !418
  %373 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %368)
  store ptr %373, ptr @_ZL28benchmark_uniq_59_benchmark_, align 8, !tbaa !5
  %374 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %374, ptr noundef nonnull @.str.119)
          to label %377 unwind label %375

375:                                              ; preds = %371
  %376 = landingpad { ptr, i32 }
          cleanup
  br label %24

377:                                              ; preds = %371
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %374, align 8, !tbaa !416
  %378 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %374, i64 0, i32 1
  store ptr @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint32_t_RN9benchmark5StateE, ptr %378, align 8, !tbaa !418
  %379 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %374)
  store ptr %379, ptr @_ZL28benchmark_uniq_60_benchmark_, align 8, !tbaa !5
  %380 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %380, ptr noundef nonnull @.str.121)
          to label %383 unwind label %381

381:                                              ; preds = %377
  %382 = landingpad { ptr, i32 }
          cleanup
  br label %24

383:                                              ; preds = %377
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %380, align 8, !tbaa !416
  %384 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %380, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint32_t_RN9benchmark5StateE, ptr %384, align 8, !tbaa !418
  %385 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %380)
  store ptr %385, ptr @_ZL28benchmark_uniq_61_benchmark_, align 8, !tbaa !5
  %386 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %386, ptr noundef nonnull @.str.123)
          to label %389 unwind label %387

387:                                              ; preds = %383
  %388 = landingpad { ptr, i32 }
          cleanup
  br label %24

389:                                              ; preds = %383
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %386, align 8, !tbaa !416
  %390 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %386, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint64_t_RN9benchmark5StateE, ptr %390, align 8, !tbaa !418
  %391 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %386)
  store ptr %391, ptr @_ZL28benchmark_uniq_62_benchmark_, align 8, !tbaa !5
  %392 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %392, ptr noundef nonnull @.str.125)
          to label %395 unwind label %393

393:                                              ; preds = %389
  %394 = landingpad { ptr, i32 }
          cleanup
  br label %24

395:                                              ; preds = %389
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %392, align 8, !tbaa !416
  %396 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %392, i64 0, i32 1
  store ptr @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint64_t_RN9benchmark5StateE, ptr %396, align 8, !tbaa !418
  %397 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %392)
  store ptr %397, ptr @_ZL28benchmark_uniq_63_benchmark_, align 8, !tbaa !5
  %398 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %398, ptr noundef nonnull @.str.127)
          to label %401 unwind label %399

399:                                              ; preds = %395
  %400 = landingpad { ptr, i32 }
          cleanup
  br label %24

401:                                              ; preds = %395
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %398, align 8, !tbaa !416
  %402 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %398, i64 0, i32 1
  store ptr @_Z54benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint64_t_RN9benchmark5StateE, ptr %402, align 8, !tbaa !418
  %403 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %398)
  store ptr %403, ptr @_ZL28benchmark_uniq_64_benchmark_, align 8, !tbaa !5
  %404 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %404, ptr noundef nonnull @.str.129)
          to label %407 unwind label %405

405:                                              ; preds = %401
  %406 = landingpad { ptr, i32 }
          cleanup
  br label %24

407:                                              ; preds = %401
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %404, align 8, !tbaa !416
  %408 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %404, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint64_t_RN9benchmark5StateE, ptr %408, align 8, !tbaa !418
  %409 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %404)
  store ptr %409, ptr @_ZL28benchmark_uniq_65_benchmark_, align 8, !tbaa !5
  %410 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %410, ptr noundef nonnull @.str.131)
          to label %413 unwind label %411

411:                                              ; preds = %407
  %412 = landingpad { ptr, i32 }
          cleanup
  br label %24

413:                                              ; preds = %407
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %410, align 8, !tbaa !416
  %414 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %410, i64 0, i32 1
  store ptr @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint64_t_RN9benchmark5StateE, ptr %414, align 8, !tbaa !418
  %415 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %410)
  store ptr %415, ptr @_ZL28benchmark_uniq_66_benchmark_, align 8, !tbaa !5
  %416 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %416, ptr noundef nonnull @.str.133)
          to label %419 unwind label %417

417:                                              ; preds = %413
  %418 = landingpad { ptr, i32 }
          cleanup
  br label %24

419:                                              ; preds = %413
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %416, align 8, !tbaa !416
  %420 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %416, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint64_t_RN9benchmark5StateE, ptr %420, align 8, !tbaa !418
  %421 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %416)
  store ptr %421, ptr @_ZL28benchmark_uniq_67_benchmark_, align 8, !tbaa !5
  %422 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %422, ptr noundef nonnull @.str.135)
          to label %425 unwind label %423

423:                                              ; preds = %419
  %424 = landingpad { ptr, i32 }
          cleanup
  br label %24

425:                                              ; preds = %419
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %422, align 8, !tbaa !416
  %426 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %422, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint64_t_RN9benchmark5StateE, ptr %426, align 8, !tbaa !418
  %427 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %422)
  store ptr %427, ptr @_ZL28benchmark_uniq_68_benchmark_, align 8, !tbaa !5
  %428 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %428, ptr noundef nonnull @.str.137)
          to label %431 unwind label %429

429:                                              ; preds = %425
  %430 = landingpad { ptr, i32 }
          cleanup
  br label %24

431:                                              ; preds = %425
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %428, align 8, !tbaa !416
  %432 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %428, i64 0, i32 1
  store ptr @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint64_t_RN9benchmark5StateE, ptr %432, align 8, !tbaa !418
  %433 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %428)
  store ptr %433, ptr @_ZL28benchmark_uniq_69_benchmark_, align 8, !tbaa !5
  %434 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %434, ptr noundef nonnull @.str.139)
          to label %437 unwind label %435

435:                                              ; preds = %431
  %436 = landingpad { ptr, i32 }
          cleanup
  br label %24

437:                                              ; preds = %431
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %434, align 8, !tbaa !416
  %438 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %434, i64 0, i32 1
  store ptr @_Z54benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint64_t_RN9benchmark5StateE, ptr %438, align 8, !tbaa !418
  %439 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %434)
  store ptr %439, ptr @_ZL28benchmark_uniq_70_benchmark_, align 8, !tbaa !5
  %440 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %440, ptr noundef nonnull @.str.141)
          to label %443 unwind label %441

441:                                              ; preds = %437
  %442 = landingpad { ptr, i32 }
          cleanup
  br label %24

443:                                              ; preds = %437
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %440, align 8, !tbaa !416
  %444 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %440, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint64_t_RN9benchmark5StateE, ptr %444, align 8, !tbaa !418
  %445 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %440)
  store ptr %445, ptr @_ZL28benchmark_uniq_71_benchmark_, align 8, !tbaa !5
  %446 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %446, ptr noundef nonnull @.str.143)
          to label %449 unwind label %447

447:                                              ; preds = %443
  %448 = landingpad { ptr, i32 }
          cleanup
  br label %24

449:                                              ; preds = %443
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %446, align 8, !tbaa !416
  %450 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %446, i64 0, i32 1
  store ptr @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint64_t_RN9benchmark5StateE, ptr %450, align 8, !tbaa !418
  %451 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %446)
  store ptr %451, ptr @_ZL28benchmark_uniq_72_benchmark_, align 8, !tbaa !5
  %452 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %452, ptr noundef nonnull @.str.145)
          to label %455 unwind label %453

453:                                              ; preds = %449
  %454 = landingpad { ptr, i32 }
          cleanup
  br label %24

455:                                              ; preds = %449
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %452, align 8, !tbaa !416
  %456 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %452, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint64_t_RN9benchmark5StateE, ptr %456, align 8, !tbaa !418
  %457 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %452)
  store ptr %457, ptr @_ZL28benchmark_uniq_73_benchmark_, align 8, !tbaa !5
  ret void
}

attributes #0 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { inlinehint mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { builtin allocsize(0) }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!10, !11, i64 0}
!10 = !{!"_ZTSNSt24uniform_int_distributionItE10param_typeE", !11, i64 0, !11, i64 2}
!11 = !{!"short", !7, i64 0}
!12 = !{!10, !11, i64 2}
!13 = !{!11, !11, i64 0}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.mustprogress"}
!16 = !{!7, !7, i64 0}
!17 = distinct !{!17, !15, !18}
!18 = !{!"llvm.loop.vectorize.width", i32 1}
!19 = distinct !{!19, !15, !20, !21}
!20 = !{!"llvm.loop.isvectorized", i32 1}
!21 = !{!"llvm.loop.unroll.runtime.disable"}
!22 = distinct !{!22, !15}
!23 = !{!24, !26, i64 26}
!24 = !{!"_ZTSN9benchmark5StateE", !25, i64 0, !25, i64 8, !25, i64 16, !26, i64 24, !26, i64 25, !26, i64 26, !27, i64 32, !25, i64 56, !31, i64 64, !39, i64 112, !39, i64 116, !6, i64 120, !6, i64 128, !6, i64 136}
!25 = !{!"long", !7, i64 0}
!26 = !{!"bool", !7, i64 0}
!27 = !{!"_ZTSSt6vectorIlSaIlEE", !28, i64 0}
!28 = !{!"_ZTSSt12_Vector_baseIlSaIlEE", !29, i64 0}
!29 = !{!"_ZTSNSt12_Vector_baseIlSaIlEE12_Vector_implE", !30, i64 0}
!30 = !{!"_ZTSNSt12_Vector_baseIlSaIlEE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!31 = !{!"_ZTSSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEE", !32, i64 0}
!32 = !{!"_ZTSSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE", !33, i64 0}
!33 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE13_Rb_tree_implISE_Lb1EEE", !34, i64 0, !36, i64 8}
!34 = !{!"_ZTSSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE", !35, i64 0}
!35 = !{!"_ZTSSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE"}
!36 = !{!"_ZTSSt15_Rb_tree_header", !37, i64 0, !25, i64 32}
!37 = !{!"_ZTSSt18_Rb_tree_node_base", !38, i64 0, !6, i64 8, !6, i64 16, !6, i64 24}
!38 = !{!"_ZTSSt14_Rb_tree_color", !7, i64 0}
!39 = !{!"int", !7, i64 0}
!40 = !{i8 0, i8 2}
!41 = !{}
!42 = !{!"branch_weights", i32 1, i32 2000}
!43 = !{i64 4200680}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !15, !20, !21}
!50 = distinct !{!50, !15, !20}
!51 = distinct !{!51, !15, !20, !21}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56}
!56 = distinct !{!56, !54}
!57 = distinct !{!57, !15, !20, !21}
!58 = distinct !{!58, !15, !20}
!59 = distinct !{!59, !15, !20, !21}
!60 = !{!61}
!61 = distinct !{!61, !62}
!62 = distinct !{!62, !"LVerDomain"}
!63 = !{!64}
!64 = distinct !{!64, !62}
!65 = distinct !{!65, !15, !20, !21}
!66 = distinct !{!66, !15, !20}
!67 = !{!68, !7, i64 0}
!68 = !{!"_ZTSNSt24uniform_int_distributionIhE10param_typeE", !7, i64 0, !7, i64 1}
!69 = !{!68, !7, i64 1}
!70 = distinct !{!70, !15}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !15, !20, !21}
!77 = distinct !{!77, !15, !20}
!78 = !{!79}
!79 = distinct !{!79, !80}
!80 = distinct !{!80, !"LVerDomain"}
!81 = !{!82}
!82 = distinct !{!82, !80}
!83 = distinct !{!83, !15, !20, !21}
!84 = distinct !{!84, !15, !20}
!85 = !{!86}
!86 = distinct !{!86, !87}
!87 = distinct !{!87, !"LVerDomain"}
!88 = !{!89}
!89 = distinct !{!89, !87}
!90 = distinct !{!90, !15, !20, !21}
!91 = distinct !{!91, !15, !20}
!92 = !{!93, !39, i64 0}
!93 = !{!"_ZTSNSt24uniform_int_distributionIjE10param_typeE", !39, i64 0, !39, i64 4}
!94 = !{!93, !39, i64 4}
!95 = !{!39, !39, i64 0}
!96 = distinct !{!96, !15}
!97 = distinct !{!97, !15, !18}
!98 = distinct !{!98, !15, !20, !21}
!99 = distinct !{!99, !15}
!100 = !{!101}
!101 = distinct !{!101, !102}
!102 = distinct !{!102, !"LVerDomain"}
!103 = !{!104}
!104 = distinct !{!104, !102}
!105 = distinct !{!105, !15, !20, !21}
!106 = distinct !{!106, !15, !20}
!107 = distinct !{!107, !15, !20, !21}
!108 = !{!109}
!109 = distinct !{!109, !110}
!110 = distinct !{!110, !"LVerDomain"}
!111 = !{!112}
!112 = distinct !{!112, !110}
!113 = distinct !{!113, !15, !20, !21}
!114 = distinct !{!114, !15, !20}
!115 = distinct !{!115, !15, !20, !21}
!116 = !{!117}
!117 = distinct !{!117, !118}
!118 = distinct !{!118, !"LVerDomain"}
!119 = !{!120}
!120 = distinct !{!120, !118}
!121 = distinct !{!121, !15, !20, !21}
!122 = distinct !{!122, !15, !20}
!123 = !{!124}
!124 = distinct !{!124, !125}
!125 = distinct !{!125, !"LVerDomain"}
!126 = !{!127}
!127 = distinct !{!127, !125}
!128 = distinct !{!128, !15, !20, !21}
!129 = distinct !{!129, !15, !20}
!130 = !{!131}
!131 = distinct !{!131, !132}
!132 = distinct !{!132, !"LVerDomain"}
!133 = !{!134}
!134 = distinct !{!134, !132}
!135 = distinct !{!135, !15, !20, !21}
!136 = distinct !{!136, !15, !20}
!137 = !{!138}
!138 = distinct !{!138, !139}
!139 = distinct !{!139, !"LVerDomain"}
!140 = !{!141}
!141 = distinct !{!141, !139}
!142 = distinct !{!142, !15, !20, !21}
!143 = distinct !{!143, !15, !20}
!144 = !{!145, !25, i64 0}
!145 = !{!"_ZTSNSt24uniform_int_distributionImE10param_typeE", !25, i64 0, !25, i64 8}
!146 = !{!145, !25, i64 8}
!147 = !{!25, !25, i64 0}
!148 = distinct !{!148, !15}
!149 = distinct !{!149, !15, !18}
!150 = distinct !{!150, !15, !20, !21}
!151 = distinct !{!151, !15}
!152 = !{!153}
!153 = distinct !{!153, !154}
!154 = distinct !{!154, !"LVerDomain"}
!155 = !{!156}
!156 = distinct !{!156, !154}
!157 = distinct !{!157, !15, !20, !21}
!158 = distinct !{!158, !15, !20}
!159 = distinct !{!159, !15, !20, !21}
!160 = !{!161}
!161 = distinct !{!161, !162}
!162 = distinct !{!162, !"LVerDomain"}
!163 = !{!164}
!164 = distinct !{!164, !162}
!165 = distinct !{!165, !15, !20, !21}
!166 = distinct !{!166, !15, !20}
!167 = distinct !{!167, !15, !20, !21}
!168 = !{!169}
!169 = distinct !{!169, !170}
!170 = distinct !{!170, !"LVerDomain"}
!171 = !{!172}
!172 = distinct !{!172, !170}
!173 = distinct !{!173, !15, !20, !21}
!174 = distinct !{!174, !15, !20}
!175 = !{!176}
!176 = distinct !{!176, !177}
!177 = distinct !{!177, !"LVerDomain"}
!178 = !{!179}
!179 = distinct !{!179, !177}
!180 = distinct !{!180, !15, !20, !21}
!181 = distinct !{!181, !15, !20}
!182 = !{!183}
!183 = distinct !{!183, !184}
!184 = distinct !{!184, !"LVerDomain"}
!185 = !{!186}
!186 = distinct !{!186, !184}
!187 = distinct !{!187, !15, !20, !21}
!188 = distinct !{!188, !15, !20}
!189 = !{!190}
!190 = distinct !{!190, !191}
!191 = distinct !{!191, !"LVerDomain"}
!192 = !{!193}
!193 = distinct !{!193, !191}
!194 = distinct !{!194, !15, !20, !21}
!195 = distinct !{!195, !15, !20}
!196 = distinct !{!196, !15, !18}
!197 = distinct !{!197, !15, !20, !21}
!198 = distinct !{!198, !15}
!199 = distinct !{!199, !15, !20, !21}
!200 = distinct !{!200, !15, !20, !21}
!201 = distinct !{!201, !15, !20, !21}
!202 = distinct !{!202, !15, !20, !21}
!203 = distinct !{!203, !15, !20, !21}
!204 = distinct !{!204, !15, !20, !21}
!205 = distinct !{!205, !15, !20, !21}
!206 = distinct !{!206, !15, !20, !21}
!207 = distinct !{!207, !15, !18}
!208 = distinct !{!208, !15, !20, !21}
!209 = distinct !{!209, !15}
!210 = distinct !{!210, !15, !20, !21}
!211 = distinct !{!211, !15, !20, !21}
!212 = distinct !{!212, !15, !20, !21}
!213 = distinct !{!213, !15, !20, !21}
!214 = distinct !{!214, !15, !20, !21}
!215 = distinct !{!215, !15, !20, !21}
!216 = distinct !{!216, !15, !20, !21}
!217 = distinct !{!217, !15, !20, !21}
!218 = distinct !{!218, !15, !18}
!219 = distinct !{!219, !15, !20, !21}
!220 = distinct !{!220, !15}
!221 = distinct !{!221, !15, !20, !21}
!222 = distinct !{!222, !15, !20, !21}
!223 = distinct !{!223, !15, !20, !21}
!224 = distinct !{!224, !15, !20, !21}
!225 = distinct !{!225, !15, !20, !21}
!226 = distinct !{!226, !15, !20, !21}
!227 = distinct !{!227, !15, !20, !21}
!228 = distinct !{!228, !15, !20, !21}
!229 = distinct !{!229, !15, !18}
!230 = distinct !{!230, !15, !20, !21}
!231 = distinct !{!231, !15}
!232 = !{!233}
!233 = distinct !{!233, !234}
!234 = distinct !{!234, !"LVerDomain"}
!235 = !{!236}
!236 = distinct !{!236, !234}
!237 = distinct !{!237, !15, !20, !21}
!238 = distinct !{!238, !15, !20}
!239 = distinct !{!239, !15, !20, !21}
!240 = !{!241}
!241 = distinct !{!241, !242}
!242 = distinct !{!242, !"LVerDomain"}
!243 = !{!244}
!244 = distinct !{!244, !242}
!245 = distinct !{!245, !15, !20, !21}
!246 = distinct !{!246, !15, !20}
!247 = distinct !{!247, !15, !20, !21}
!248 = !{!249}
!249 = distinct !{!249, !250}
!250 = distinct !{!250, !"LVerDomain"}
!251 = !{!252}
!252 = distinct !{!252, !250}
!253 = distinct !{!253, !15, !20, !21}
!254 = distinct !{!254, !15, !20}
!255 = !{!256}
!256 = distinct !{!256, !257}
!257 = distinct !{!257, !"LVerDomain"}
!258 = !{!259}
!259 = distinct !{!259, !257}
!260 = distinct !{!260, !15, !20, !21}
!261 = distinct !{!261, !15, !20}
!262 = !{!263}
!263 = distinct !{!263, !264}
!264 = distinct !{!264, !"LVerDomain"}
!265 = !{!266}
!266 = distinct !{!266, !264}
!267 = distinct !{!267, !15, !20, !21}
!268 = distinct !{!268, !15, !20}
!269 = !{!270}
!270 = distinct !{!270, !271}
!271 = distinct !{!271, !"LVerDomain"}
!272 = !{!273}
!273 = distinct !{!273, !271}
!274 = distinct !{!274, !15, !20, !21}
!275 = distinct !{!275, !15, !20}
!276 = distinct !{!276, !15, !18}
!277 = distinct !{!277, !15, !20, !21}
!278 = distinct !{!278, !15}
!279 = !{!280}
!280 = distinct !{!280, !281}
!281 = distinct !{!281, !"LVerDomain"}
!282 = !{!283}
!283 = distinct !{!283, !281}
!284 = distinct !{!284, !15, !20, !21}
!285 = distinct !{!285, !15, !20}
!286 = distinct !{!286, !15, !20, !21}
!287 = !{!288}
!288 = distinct !{!288, !289}
!289 = distinct !{!289, !"LVerDomain"}
!290 = !{!291}
!291 = distinct !{!291, !289}
!292 = distinct !{!292, !15, !20, !21}
!293 = distinct !{!293, !15, !20}
!294 = distinct !{!294, !15, !20, !21}
!295 = !{!296}
!296 = distinct !{!296, !297}
!297 = distinct !{!297, !"LVerDomain"}
!298 = !{!299}
!299 = distinct !{!299, !297}
!300 = distinct !{!300, !15, !20, !21}
!301 = distinct !{!301, !15, !20}
!302 = !{!303}
!303 = distinct !{!303, !304}
!304 = distinct !{!304, !"LVerDomain"}
!305 = !{!306}
!306 = distinct !{!306, !304}
!307 = distinct !{!307, !15, !20, !21}
!308 = distinct !{!308, !15, !20}
!309 = !{!310}
!310 = distinct !{!310, !311}
!311 = distinct !{!311, !"LVerDomain"}
!312 = !{!313}
!313 = distinct !{!313, !311}
!314 = distinct !{!314, !15, !20, !21}
!315 = distinct !{!315, !15, !20}
!316 = !{!317}
!317 = distinct !{!317, !318}
!318 = distinct !{!318, !"LVerDomain"}
!319 = !{!320}
!320 = distinct !{!320, !318}
!321 = distinct !{!321, !15, !20, !21}
!322 = distinct !{!322, !15, !20}
!323 = distinct !{!323, !15, !18}
!324 = distinct !{!324, !15, !20, !21}
!325 = distinct !{!325, !15}
!326 = !{!327}
!327 = distinct !{!327, !328}
!328 = distinct !{!328, !"LVerDomain"}
!329 = !{!330}
!330 = distinct !{!330, !328}
!331 = distinct !{!331, !15, !20, !21}
!332 = distinct !{!332, !15, !20}
!333 = distinct !{!333, !15, !20, !21}
!334 = !{!335}
!335 = distinct !{!335, !336}
!336 = distinct !{!336, !"LVerDomain"}
!337 = !{!338}
!338 = distinct !{!338, !336}
!339 = distinct !{!339, !15, !20, !21}
!340 = distinct !{!340, !15, !20}
!341 = distinct !{!341, !15, !20, !21}
!342 = !{!343}
!343 = distinct !{!343, !344}
!344 = distinct !{!344, !"LVerDomain"}
!345 = !{!346}
!346 = distinct !{!346, !344}
!347 = distinct !{!347, !15, !20, !21}
!348 = distinct !{!348, !15, !20}
!349 = !{!350}
!350 = distinct !{!350, !351}
!351 = distinct !{!351, !"LVerDomain"}
!352 = !{!353}
!353 = distinct !{!353, !351}
!354 = distinct !{!354, !15, !20, !21}
!355 = distinct !{!355, !15, !20}
!356 = !{!357}
!357 = distinct !{!357, !358}
!358 = distinct !{!358, !"LVerDomain"}
!359 = !{!360}
!360 = distinct !{!360, !358}
!361 = distinct !{!361, !15, !20, !21}
!362 = distinct !{!362, !15, !20}
!363 = !{!364}
!364 = distinct !{!364, !365}
!365 = distinct !{!365, !"LVerDomain"}
!366 = !{!367}
!367 = distinct !{!367, !365}
!368 = distinct !{!368, !15, !20, !21}
!369 = distinct !{!369, !15, !20}
!370 = distinct !{!370, !15, !18}
!371 = distinct !{!371, !15, !20, !21}
!372 = distinct !{!372, !15}
!373 = distinct !{!373, !15, !20, !21}
!374 = distinct !{!374, !15, !20, !21}
!375 = distinct !{!375, !15, !20, !21}
!376 = distinct !{!376, !15, !20, !21}
!377 = distinct !{!377, !15, !20, !21}
!378 = distinct !{!378, !15, !20, !21}
!379 = distinct !{!379, !15, !20, !21}
!380 = distinct !{!380, !15, !20, !21}
!381 = distinct !{!381, !15, !18}
!382 = distinct !{!382, !15, !20, !21}
!383 = distinct !{!383, !15}
!384 = distinct !{!384, !15, !20, !21}
!385 = distinct !{!385, !15, !20, !21}
!386 = distinct !{!386, !15, !20, !21}
!387 = distinct !{!387, !15, !20, !21}
!388 = distinct !{!388, !15, !20, !21}
!389 = distinct !{!389, !15, !20, !21}
!390 = distinct !{!390, !15, !20, !21}
!391 = distinct !{!391, !15, !20, !21}
!392 = distinct !{!392, !15, !18}
!393 = distinct !{!393, !15, !20, !21}
!394 = distinct !{!394, !15}
!395 = distinct !{!395, !15, !20, !21}
!396 = distinct !{!396, !15, !20, !21}
!397 = distinct !{!397, !15, !20, !21}
!398 = distinct !{!398, !15, !20, !21}
!399 = distinct !{!399, !15, !20, !21}
!400 = distinct !{!400, !15, !20, !21}
!401 = distinct !{!401, !15, !20, !21}
!402 = distinct !{!402, !15, !20, !21}
!403 = distinct !{!403, !15}
!404 = distinct !{!404, !15}
!405 = !{!406, !25, i64 4992}
!406 = !{!"_ZTSSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE", !7, i64 0, !25, i64 4992}
!407 = distinct !{!407, !15, !20, !21}
!408 = distinct !{!408, !15, !20, !21}
!409 = distinct !{!409, !15}
!410 = distinct !{!410, !15}
!411 = distinct !{!411, !15}
!412 = distinct !{!412, !15}
!413 = distinct !{!413, !15}
!414 = distinct !{!414, !15}
!415 = distinct !{!415, !15}
!416 = !{!417, !417, i64 0}
!417 = !{!"vtable pointer", !8, i64 0}
!418 = !{!419, !6, i64 216}
!419 = !{!"_ZTSN9benchmark8internal17FunctionBenchmarkE", !420, i64 0, !6, i64 216}
!420 = !{!"_ZTSN9benchmark8internal9BenchmarkE", !421, i64 8, !423, i64 40, !424, i64 48, !428, i64 72, !432, i64 96, !26, i64 100, !39, i64 104, !433, i64 112, !25, i64 120, !39, i64 128, !26, i64 132, !26, i64 133, !26, i64 134, !434, i64 136, !6, i64 144, !435, i64 152, !439, i64 176, !6, i64 200, !6, i64 208}
!421 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !422, i64 0, !25, i64 8, !7, i64 16}
!422 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!423 = !{!"_ZTSN9benchmark8internal21AggregationReportModeE", !7, i64 0}
!424 = !{!"_ZTSSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE", !425, i64 0}
!425 = !{!"_ZTSSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE", !426, i64 0}
!426 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implE", !427, i64 0}
!427 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!428 = !{!"_ZTSSt6vectorIS_IlSaIlEESaIS1_EE", !429, i64 0}
!429 = !{!"_ZTSSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE", !430, i64 0}
!430 = !{!"_ZTSNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE12_Vector_implE", !431, i64 0}
!431 = !{!"_ZTSNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!432 = !{!"_ZTSN9benchmark8TimeUnitE", !7, i64 0}
!433 = !{!"double", !7, i64 0}
!434 = !{!"_ZTSN9benchmark4BigOE", !7, i64 0}
!435 = !{!"_ZTSSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE", !436, i64 0}
!436 = !{!"_ZTSSt12_Vector_baseIN9benchmark8internal10StatisticsESaIS2_EE", !437, i64 0}
!437 = !{!"_ZTSNSt12_Vector_baseIN9benchmark8internal10StatisticsESaIS2_EE12_Vector_implE", !438, i64 0}
!438 = !{!"_ZTSNSt12_Vector_baseIN9benchmark8internal10StatisticsESaIS2_EE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!439 = !{!"_ZTSSt6vectorIiSaIiEE", !440, i64 0}
!440 = !{!"_ZTSSt12_Vector_baseIiSaIiEE", !441, i64 0}
!441 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE12_Vector_implE", !442, i64 0}
!442 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
