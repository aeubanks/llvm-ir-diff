; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MicroBenchmarks/LoopVectorization/VectorOperations.cpp'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MicroBenchmarks/LoopVectorization/VectorOperations.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::mersenne_twister_engine" = type { [624 x i64], i64 }
%"class.std::basic_ostream" = type { ptr, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", ptr, i8, i8, ptr, ptr, ptr, ptr }
%"class.std::ios_base" = type { ptr, i64, i64, i32, i32, i32, ptr, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, ptr, %"class.std::locale" }
%"struct.std::ios_base::_Words" = type { ptr, i64 }
%"class.std::locale" = type { ptr }
%"class.std::uniform_int_distribution" = type { %"struct.std::uniform_int_distribution<unsigned short>::param_type" }
%"struct.std::uniform_int_distribution<unsigned short>::param_type" = type { i16, i16 }
%"class.std::unique_ptr.33" = type { %"struct.std::__uniq_ptr_data.34" }
%"struct.std::__uniq_ptr_data.34" = type { %"class.std::__uniq_ptr_impl.35" }
%"class.std::__uniq_ptr_impl.35" = type { %"class.std::tuple.36" }
%"class.std::tuple.36" = type { %"struct.std::_Tuple_impl.37" }
%"struct.std::_Tuple_impl.37" = type { %"struct.std::_Head_base.40" }
%"struct.std::_Head_base.40" = type { ptr }
%"class.benchmark::State" = type { i64, i64, i64, i8, i8, i8, %"class.std::vector", i64, %"class.std::map", i32, i32, ptr, ptr, ptr }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<long, std::allocator<long>>::_Vector_impl" }
%"struct.std::_Vector_base<long, std::allocator<long>>::_Vector_impl" = type { %"struct.std::_Vector_base<long, std::allocator<long>>::_Vector_impl_data" }
%"struct.std::_Vector_base<long, std::allocator<long>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>>, std::less<std::__cxx11::basic_string<char>>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, benchmark::Counter>>, std::less<std::__cxx11::basic_string<char>>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, ptr, ptr, ptr }
%"class.std::uniform_int_distribution.43" = type { %"struct.std::uniform_int_distribution<unsigned char>::param_type" }
%"struct.std::uniform_int_distribution<unsigned char>::param_type" = type { i8, i8 }
%"class.std::uniform_int_distribution.54" = type { %"struct.std::uniform_int_distribution<unsigned int>::param_type" }
%"struct.std::uniform_int_distribution<unsigned int>::param_type" = type { i32, i32 }
%"class.std::uniform_int_distribution.65" = type { %"struct.std::uniform_int_distribution<unsigned long>::param_type" }
%"struct.std::uniform_int_distribution<unsigned long>::param_type" = type { i64, i64 }
%"class.std::unique_ptr" = type { %"struct.std::__uniq_ptr_data" }
%"struct.std::__uniq_ptr_data" = type { %"class.std::__uniq_ptr_impl" }
%"class.std::__uniq_ptr_impl" = type { %"class.std::tuple" }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base.32" }
%"struct.std::_Head_base.32" = type { ptr }
%"class.std::unique_ptr.44" = type { %"struct.std::__uniq_ptr_data.45" }
%"struct.std::__uniq_ptr_data.45" = type { %"class.std::__uniq_ptr_impl.46" }
%"class.std::__uniq_ptr_impl.46" = type { %"class.std::tuple.47" }
%"class.std::tuple.47" = type { %"struct.std::_Tuple_impl.48" }
%"struct.std::_Tuple_impl.48" = type { %"struct.std::_Head_base.51" }
%"struct.std::_Head_base.51" = type { ptr }
%"class.std::unique_ptr.55" = type { %"struct.std::__uniq_ptr_data.56" }
%"struct.std::__uniq_ptr_data.56" = type { %"class.std::__uniq_ptr_impl.57" }
%"class.std::__uniq_ptr_impl.57" = type { %"class.std::tuple.58" }
%"class.std::tuple.58" = type { %"struct.std::_Tuple_impl.59" }
%"struct.std::_Tuple_impl.59" = type { %"struct.std::_Head_base.62" }
%"struct.std::_Head_base.62" = type { ptr }
%"class.benchmark::internal::FunctionBenchmark" = type { %"class.benchmark::internal::Benchmark", ptr }
%"class.benchmark::internal::Benchmark" = type { ptr, %"class.std::__cxx11::basic_string", i32, %"class.std::vector.6", %"class.std::vector.11", i32, i8, i32, double, i64, i32, i8, i8, i8, i32, ptr, %"class.std::vector.16", %"class.std::vector.26", ptr, ptr }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { ptr }
%union.anon = type { i64, [8 x i8] }
%"class.std::vector.6" = type { %"struct.std::_Vector_base.7" }
%"struct.std::_Vector_base.7" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.11" = type { %"struct.std::_Vector_base.12" }
%"struct.std::_Vector_base.12" = type { %"struct.std::_Vector_base<std::vector<long>, std::allocator<std::vector<long>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<long>, std::allocator<std::vector<long>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<long>, std::allocator<std::vector<long>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<long>, std::allocator<std::vector<long>>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.16" = type { %"struct.std::_Vector_base.17" }
%"struct.std::_Vector_base.17" = type { %"struct.std::_Vector_base<benchmark::internal::Statistics, std::allocator<benchmark::internal::Statistics>>::_Vector_impl" }
%"struct.std::_Vector_base<benchmark::internal::Statistics, std::allocator<benchmark::internal::Statistics>>::_Vector_impl" = type { %"struct.std::_Vector_base<benchmark::internal::Statistics, std::allocator<benchmark::internal::Statistics>>::_Vector_impl_data" }
%"struct.std::_Vector_base<benchmark::internal::Statistics, std::allocator<benchmark::internal::Statistics>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.26" = type { %"struct.std::_Vector_base.27" }
%"struct.std::_Vector_base.27" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { ptr, ptr, ptr }

$_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE = comdat any

$_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv = comdat any

$_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE = comdat any

$_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE = comdat any

$_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZL3rng = internal global %"class.std::mersenne_twister_engine" zeroinitializer, align 8
@_ZL27benchmark_uniq_2_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint8_t_\00", align 1
@_ZL27benchmark_uniq_3_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.5 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint8_t_\00", align 1
@_ZL27benchmark_uniq_4_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.7 = private unnamed_addr constant [54 x i8] c"benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint8_t_\00", align 1
@_ZL27benchmark_uniq_5_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.9 = private unnamed_addr constant [68 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint8_t_\00", align 1
@_ZL27benchmark_uniq_6_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.11 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint8_t_\00", align 1
@_ZL27benchmark_uniq_7_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.13 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint8_t_\00", align 1
@_ZL27benchmark_uniq_8_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.15 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint8_t_\00", align 1
@_ZL27benchmark_uniq_9_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.17 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_10_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.19 = private unnamed_addr constant [54 x i8] c"benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_11_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.21 = private unnamed_addr constant [68 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_12_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.23 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_13_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.25 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_14_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.27 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_15_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.29 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_16_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.31 = private unnamed_addr constant [54 x i8] c"benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_17_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.33 = private unnamed_addr constant [68 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_18_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.35 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_19_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.37 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint8_t_\00", align 1
@_ZL28benchmark_uniq_20_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.39 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_21_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.41 = private unnamed_addr constant [63 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_22_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.43 = private unnamed_addr constant [55 x i8] c"benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_23_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.45 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_24_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.47 = private unnamed_addr constant [70 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_25_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.49 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_26_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.51 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_27_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.53 = private unnamed_addr constant [63 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_28_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.55 = private unnamed_addr constant [55 x i8] c"benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_29_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.57 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_30_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.59 = private unnamed_addr constant [70 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_31_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.61 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_32_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.63 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_33_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.65 = private unnamed_addr constant [63 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_34_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.67 = private unnamed_addr constant [55 x i8] c"benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_35_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.69 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_36_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.71 = private unnamed_addr constant [70 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_37_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.73 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_38_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.75 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_39_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.77 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_40_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.79 = private unnamed_addr constant [54 x i8] c"benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_41_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.81 = private unnamed_addr constant [68 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_42_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.83 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_43_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.85 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint16_t_\00", align 1
@_ZL28benchmark_uniq_44_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.87 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_45_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.89 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_46_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.91 = private unnamed_addr constant [54 x i8] c"benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_47_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.93 = private unnamed_addr constant [68 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_48_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.95 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_49_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.97 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_50_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.99 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_51_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.101 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_52_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.103 = private unnamed_addr constant [54 x i8] c"benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_53_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.105 = private unnamed_addr constant [68 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_54_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.107 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_55_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.109 = private unnamed_addr constant [61 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_56_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.111 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_57_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.113 = private unnamed_addr constant [63 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_58_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.115 = private unnamed_addr constant [55 x i8] c"benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_59_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.117 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_60_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.119 = private unnamed_addr constant [70 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_61_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.121 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint32_t_\00", align 1
@_ZL28benchmark_uniq_62_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.123 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_63_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.125 = private unnamed_addr constant [63 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_64_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.127 = private unnamed_addr constant [55 x i8] c"benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_65_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.129 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_66_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.131 = private unnamed_addr constant [70 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_67_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.133 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_68_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.135 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_69_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.137 = private unnamed_addr constant [63 x i8] c"benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_70_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.139 = private unnamed_addr constant [55 x i8] c"benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_71_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.141 = private unnamed_addr constant [69 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_72_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.143 = private unnamed_addr constant [70 x i8] c"benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint64_t_\00", align 1
@_ZL28benchmark_uniq_73_benchmark_ = internal unnamed_addr global ptr null, align 8
@.str.145 = private unnamed_addr constant [62 x i8] c"benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint64_t_\00", align 1
@_ZTVN9benchmark8internal17FunctionBenchmarkE = external unnamed_addr constant { [5 x ptr] }, align 8
@_ZSt4cerr = external global %"class.std::basic_ostream", align 8
@.str.146 = private unnamed_addr constant [35 x i8] c"ERROR: Trunc or ZExt operation on \00", align 1
@.str.147 = private unnamed_addr constant [20 x i8] c" is showing result \00", align 1
@.str.148 = private unnamed_addr constant [13 x i8] c" instead of \00", align 1
@.str.149 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_VectorOperations.cpp, ptr null }]

declare void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(ptr noundef nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(ptr, ptr, ptr) local_unnamed_addr #2

declare noundef i32 @_ZN9benchmark8internal17InitializeStreamsEv() local_unnamed_addr #0

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont3.i unwind label %ehcleanup76.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i90.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i90.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  br label %for.body.i94.i

for.body.i94.i:                                   ; preds = %for.body.i94.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i91.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i92.i.4, %for.body.i94.i ]
  %arrayidx.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i91.i
  %0 = load i16, ptr %arrayidx.i.i, align 2, !tbaa !13
  %conv.i.i = trunc i16 %0 to i8
  %arrayidx2.i.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i91.i
  store i8 %conv.i.i, ptr %arrayidx2.i.i, align 1, !tbaa !16
  %indvars.iv.next.i92.i = add nuw nsw i64 %indvars.iv.i91.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i92.i
  %1 = load i16, ptr %arrayidx.i.i.1, align 2, !tbaa !13
  %conv.i.i.1 = trunc i16 %1 to i8
  %arrayidx2.i.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i92.i
  store i8 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 1, !tbaa !16
  %indvars.iv.next.i92.i.1 = add nuw nsw i64 %indvars.iv.i91.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i92.i.1
  %2 = load i16, ptr %arrayidx.i.i.2, align 2, !tbaa !13
  %conv.i.i.2 = trunc i16 %2 to i8
  %arrayidx2.i.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i92.i.1
  store i8 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 1, !tbaa !16
  %indvars.iv.next.i92.i.2 = add nuw nsw i64 %indvars.iv.i91.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i92.i.2
  %3 = load i16, ptr %arrayidx.i.i.3, align 2, !tbaa !13
  %conv.i.i.3 = trunc i16 %3 to i8
  %arrayidx2.i.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i92.i.2
  store i8 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 1, !tbaa !16
  %indvars.iv.next.i92.i.3 = add nuw nsw i64 %indvars.iv.i91.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i92.i.3
  %4 = load i16, ptr %arrayidx.i.i.4, align 2, !tbaa !13
  %conv.i.i.4 = trunc i16 %4 to i8
  %arrayidx2.i.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i92.i.3
  store i8 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 1, !tbaa !16
  %indvars.iv.next.i92.i.4 = add nuw nsw i64 %indvars.iv.i91.i, 5
  %exitcond.not.i93.i.4 = icmp eq i64 %indvars.iv.next.i92.i.4, 10000
  br i1 %exitcond.not.i93.i.4, label %vector.body, label %for.body.i94.i, !llvm.loop !17

vector.body:                                      ; preds = %for.body.i94.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i94.i ]
  %5 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <8 x i16>, ptr %5, align 2, !tbaa !13
  %6 = getelementptr inbounds i16, ptr %5, i64 8
  %wide.load27 = load <8 x i16>, ptr %6, align 2, !tbaa !13
  %7 = getelementptr inbounds i16, ptr %5, i64 16
  %wide.load28 = load <8 x i16>, ptr %7, align 2, !tbaa !13
  %8 = getelementptr inbounds i16, ptr %5, i64 24
  %wide.load29 = load <8 x i16>, ptr %8, align 2, !tbaa !13
  %9 = trunc <8 x i16> %wide.load to <8 x i8>
  %10 = trunc <8 x i16> %wide.load27 to <8 x i8>
  %11 = trunc <8 x i16> %wide.load28 to <8 x i8>
  %12 = trunc <8 x i16> %wide.load29 to <8 x i8>
  %13 = getelementptr inbounds i8, ptr %call1.i, i64 %index
  store <8 x i8> %9, ptr %13, align 1, !tbaa !16
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store <8 x i8> %10, ptr %14, align 1, !tbaa !16
  %15 = getelementptr inbounds i8, ptr %13, i64 16
  store <8 x i8> %11, ptr %15, align 1, !tbaa !16
  %16 = getelementptr inbounds i8, ptr %13, i64 24
  store <8 x i8> %12, ptr %16, align 1, !tbaa !16
  %index.next = add nuw i64 %index, 32
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !19

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i16, ptr %call.i, i64 9984
  %18 = load i16, ptr %arrayidx.i, align 2, !tbaa !13
  %conv.i = trunc i16 %18 to i8
  %arrayidx2.i = getelementptr inbounds i8, ptr %call1.i, i64 9984
  store i8 %conv.i, ptr %arrayidx2.i, align 1, !tbaa !16
  %arrayidx.i.1 = getelementptr inbounds i16, ptr %call.i, i64 9985
  %19 = load i16, ptr %arrayidx.i.1, align 2, !tbaa !13
  %conv.i.1 = trunc i16 %19 to i8
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %call1.i, i64 9985
  store i8 %conv.i.1, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %arrayidx.i.2 = getelementptr inbounds i16, ptr %call.i, i64 9986
  %20 = load i16, ptr %arrayidx.i.2, align 2, !tbaa !13
  %conv.i.2 = trunc i16 %20 to i8
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %call1.i, i64 9986
  store i8 %conv.i.2, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %arrayidx.i.3 = getelementptr inbounds i16, ptr %call.i, i64 9987
  %21 = load i16, ptr %arrayidx.i.3, align 2, !tbaa !13
  %conv.i.3 = trunc i16 %21 to i8
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %call1.i, i64 9987
  store i8 %conv.i.3, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %arrayidx.i.4 = getelementptr inbounds i16, ptr %call.i, i64 9988
  %22 = load i16, ptr %arrayidx.i.4, align 2, !tbaa !13
  %conv.i.4 = trunc i16 %22 to i8
  %arrayidx2.i.4 = getelementptr inbounds i8, ptr %call1.i, i64 9988
  store i8 %conv.i.4, ptr %arrayidx2.i.4, align 1, !tbaa !16
  %arrayidx.i.5 = getelementptr inbounds i16, ptr %call.i, i64 9989
  %23 = load i16, ptr %arrayidx.i.5, align 2, !tbaa !13
  %conv.i.5 = trunc i16 %23 to i8
  %arrayidx2.i.5 = getelementptr inbounds i8, ptr %call1.i, i64 9989
  store i8 %conv.i.5, ptr %arrayidx2.i.5, align 1, !tbaa !16
  %arrayidx.i.6 = getelementptr inbounds i16, ptr %call.i, i64 9990
  %24 = load i16, ptr %arrayidx.i.6, align 2, !tbaa !13
  %conv.i.6 = trunc i16 %24 to i8
  %arrayidx2.i.6 = getelementptr inbounds i8, ptr %call1.i, i64 9990
  store i8 %conv.i.6, ptr %arrayidx2.i.6, align 1, !tbaa !16
  %arrayidx.i.7 = getelementptr inbounds i16, ptr %call.i, i64 9991
  %25 = load i16, ptr %arrayidx.i.7, align 2, !tbaa !13
  %conv.i.7 = trunc i16 %25 to i8
  %arrayidx2.i.7 = getelementptr inbounds i8, ptr %call1.i, i64 9991
  store i8 %conv.i.7, ptr %arrayidx2.i.7, align 1, !tbaa !16
  %arrayidx.i.8 = getelementptr inbounds i16, ptr %call.i, i64 9992
  %26 = load i16, ptr %arrayidx.i.8, align 2, !tbaa !13
  %conv.i.8 = trunc i16 %26 to i8
  %arrayidx2.i.8 = getelementptr inbounds i8, ptr %call1.i, i64 9992
  store i8 %conv.i.8, ptr %arrayidx2.i.8, align 1, !tbaa !16
  %arrayidx.i.9 = getelementptr inbounds i16, ptr %call.i, i64 9993
  %27 = load i16, ptr %arrayidx.i.9, align 2, !tbaa !13
  %conv.i.9 = trunc i16 %27 to i8
  %arrayidx2.i.9 = getelementptr inbounds i8, ptr %call1.i, i64 9993
  store i8 %conv.i.9, ptr %arrayidx2.i.9, align 1, !tbaa !16
  %arrayidx.i.10 = getelementptr inbounds i16, ptr %call.i, i64 9994
  %28 = load i16, ptr %arrayidx.i.10, align 2, !tbaa !13
  %conv.i.10 = trunc i16 %28 to i8
  %arrayidx2.i.10 = getelementptr inbounds i8, ptr %call1.i, i64 9994
  store i8 %conv.i.10, ptr %arrayidx2.i.10, align 1, !tbaa !16
  %arrayidx.i.11 = getelementptr inbounds i16, ptr %call.i, i64 9995
  %29 = load i16, ptr %arrayidx.i.11, align 2, !tbaa !13
  %conv.i.11 = trunc i16 %29 to i8
  %arrayidx2.i.11 = getelementptr inbounds i8, ptr %call1.i, i64 9995
  store i8 %conv.i.11, ptr %arrayidx2.i.11, align 1, !tbaa !16
  %arrayidx.i.12 = getelementptr inbounds i16, ptr %call.i, i64 9996
  %30 = load i16, ptr %arrayidx.i.12, align 2, !tbaa !13
  %conv.i.12 = trunc i16 %30 to i8
  %arrayidx2.i.12 = getelementptr inbounds i8, ptr %call1.i, i64 9996
  store i8 %conv.i.12, ptr %arrayidx2.i.12, align 1, !tbaa !16
  %arrayidx.i.13 = getelementptr inbounds i16, ptr %call.i, i64 9997
  %31 = load i16, ptr %arrayidx.i.13, align 2, !tbaa !13
  %conv.i.13 = trunc i16 %31 to i8
  %arrayidx2.i.13 = getelementptr inbounds i8, ptr %call1.i, i64 9997
  store i8 %conv.i.13, ptr %arrayidx2.i.13, align 1, !tbaa !16
  %arrayidx.i.14 = getelementptr inbounds i16, ptr %call.i, i64 9998
  %32 = load i16, ptr %arrayidx.i.14, align 2, !tbaa !13
  %conv.i.14 = trunc i16 %32 to i8
  %arrayidx2.i.14 = getelementptr inbounds i8, ptr %call1.i, i64 9998
  store i8 %conv.i.14, ptr %arrayidx2.i.14, align 1, !tbaa !16
  %arrayidx.i.15 = getelementptr inbounds i16, ptr %call.i, i64 9999
  %33 = load i16, ptr %arrayidx.i.15, align 2, !tbaa !13
  %conv.i.15 = trunc i16 %33 to i8
  %arrayidx2.i.15 = getelementptr inbounds i8, ptr %call1.i, i64 9999
  store i8 %conv.i.15, ptr %arrayidx2.i.15, align 1, !tbaa !16
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i95.i.1 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i8, ptr %arrayidx.i95.i.1, align 1, !tbaa !16
  %arrayidx.i96.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i8, ptr %arrayidx.i96.i.1, align 1, !tbaa !16
  %cmp25.not.i.1 = icmp eq i8 %34, %35
  br i1 %cmp25.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i95.i.2 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i8, ptr %arrayidx.i95.i.2, align 1, !tbaa !16
  %arrayidx.i96.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i8, ptr %arrayidx.i96.i.2, align 1, !tbaa !16
  %cmp25.not.i.2 = icmp eq i8 %36, %37
  br i1 %cmp25.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i95.i.3 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i8, ptr %arrayidx.i95.i.3, align 1, !tbaa !16
  %arrayidx.i96.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i8, ptr %arrayidx.i96.i.3, align 1, !tbaa !16
  %cmp25.not.i.3 = icmp eq i8 %38, %39
  br i1 %cmp25.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i95.i.4 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i8, ptr %arrayidx.i95.i.4, align 1, !tbaa !16
  %arrayidx.i96.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i8, ptr %arrayidx.i96.i.4, align 1, !tbaa !16
  %cmp25.not.i.4 = icmp eq i8 %40, %41
  br i1 %cmp25.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !22

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond55.preheader.i unwind label %lpad52.i

for.cond55.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not155159.i = icmp eq i64 %43, 0
  %cmp.not.i.not155.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not155159.i
  br i1 %cmp.not.i.not155.i, label %if.end.i.i, label %for.body59.i.preheader, !prof !42

for.body59.i.preheader:                           ; preds = %for.cond55.preheader.i
  %scevgep30 = getelementptr i8, ptr %call.i, i64 20000
  br label %for.body59.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup78.i

ehcleanup76.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i126.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup76.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i95.i = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i8, ptr %arrayidx.i95.i, align 1, !tbaa !16
  %arrayidx.i96.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i8, ptr %arrayidx.i96.i, align 1, !tbaa !16
  %cmp25.not.i = icmp eq i8 %46, %47
  br i1 %cmp25.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i8 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i95.i.le = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i98.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont26.i unwind label %lpad17.i

invoke.cont26.i:                                  ; preds = %if.then.i
  %arrayidx.i99.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i16, ptr %arrayidx.i99.i, align 2, !tbaa !13
  %conv.i100.i = zext i16 %48 to i64
  %call.i101.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i100.i)
          to label %invoke.cont31.i unwind label %lpad17.i

invoke.cont31.i:                                  ; preds = %invoke.cont26.i
  %call1.i104.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i101.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont33.i unwind label %lpad17.i

invoke.cont33.i:                                  ; preds = %invoke.cont31.i
  %49 = load i8, ptr %arrayidx.i95.i.le, align 1, !tbaa !16
  %call39.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call.i101.i, i8 noundef zeroext %49)
          to label %invoke.cont38.i unwind label %lpad17.i

invoke.cont38.i:                                  ; preds = %invoke.cont33.i
  %call1.i109.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call39.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont40.i unwind label %lpad17.i

invoke.cont40.i:                                  ; preds = %invoke.cont38.i
  %call46.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call39.i, i8 noundef zeroext %.lcssa)
          to label %invoke.cont45.i unwind label %lpad17.i

invoke.cont45.i:                                  ; preds = %invoke.cont40.i
  %call48.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call46.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont47.i unwind label %lpad17.i

invoke.cont47.i:                                  ; preds = %invoke.cont45.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont45.i, %invoke.cont40.i, %invoke.cont38.i, %invoke.cont33.i, %invoke.cont31.i, %invoke.cont26.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup76.i

if.end.i.i:                                       ; preds = %invoke.cont68.i, %for.cond55.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad52.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i114.i = icmp eq ptr %51, null
  br i1 %cmp.not.i114.i, label %_ZL28benchForTruncOrZextVecInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i115.i

delete.notnull.i.i115.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad52.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup76.i

for.body59.i:                                     ; preds = %for.body59.i.preheader, %invoke.cont68.i
  %__begin1.sroa.0.0156.i = phi i64 [ %dec.i.i, %invoke.cont68.i ], [ %43, %for.body59.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %54, i64 10000
  %bound0 = icmp ult ptr %54, %scevgep30
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13.preheader, label %vector.body36

vector.body36:                                    ; preds = %for.body59.i, %vector.body36
  %index37 = phi i64 [ %index.next42, %vector.body36 ], [ 0, %for.body59.i ]
  %55 = getelementptr inbounds i16, ptr %call.i, i64 %index37
  %wide.load38 = load <8 x i16>, ptr %55, align 2, !tbaa !13, !alias.scope !44
  %56 = getelementptr inbounds i16, ptr %55, i64 8
  %wide.load39 = load <8 x i16>, ptr %56, align 2, !tbaa !13, !alias.scope !44
  %57 = getelementptr inbounds i16, ptr %55, i64 16
  %wide.load40 = load <8 x i16>, ptr %57, align 2, !tbaa !13, !alias.scope !44
  %58 = getelementptr inbounds i16, ptr %55, i64 24
  %wide.load41 = load <8 x i16>, ptr %58, align 2, !tbaa !13, !alias.scope !44
  %59 = trunc <8 x i16> %wide.load38 to <8 x i8>
  %60 = trunc <8 x i16> %wide.load39 to <8 x i8>
  %61 = trunc <8 x i16> %wide.load40 to <8 x i8>
  %62 = trunc <8 x i16> %wide.load41 to <8 x i8>
  %63 = getelementptr inbounds i8, ptr %54, i64 %index37
  store <8 x i8> %59, ptr %63, align 1, !tbaa !16, !alias.scope !47, !noalias !44
  %64 = getelementptr inbounds i8, ptr %63, i64 8
  store <8 x i8> %60, ptr %64, align 1, !tbaa !16, !alias.scope !47, !noalias !44
  %65 = getelementptr inbounds i8, ptr %63, i64 16
  store <8 x i8> %61, ptr %65, align 1, !tbaa !16, !alias.scope !47, !noalias !44
  %66 = getelementptr inbounds i8, ptr %63, i64 24
  store <8 x i8> %62, ptr %66, align 1, !tbaa !16, !alias.scope !47, !noalias !44
  %index.next42 = add nuw i64 %index37, 32
  %67 = icmp eq i64 %index.next42, 9984
  br i1 %67, label %for.body.i13.preheader, label %vector.body36, !llvm.loop !49

for.body.i13.preheader:                           ; preds = %vector.body36, %for.body59.i
  %indvars.iv.i7.ph = phi i64 [ 0, %for.body59.i ], [ 9984, %vector.body36 ]
  br label %for.body.i13

for.body.i13:                                     ; preds = %for.body.i13, %for.body.i13.preheader
  %indvars.iv.i7 = phi i64 [ %indvars.iv.i7.ph, %for.body.i13.preheader ], [ %indvars.iv.next.i11.3, %for.body.i13 ]
  %arrayidx.i8 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i7
  %68 = load i16, ptr %arrayidx.i8, align 2, !tbaa !13
  %conv.i9 = trunc i16 %68 to i8
  %arrayidx2.i10 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.i7
  store i8 %conv.i9, ptr %arrayidx2.i10, align 1, !tbaa !16
  %indvars.iv.next.i11 = or i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i11
  %69 = load i16, ptr %arrayidx.i8.1, align 2, !tbaa !13
  %conv.i9.1 = trunc i16 %69 to i8
  %arrayidx2.i10.1 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11
  store i8 %conv.i9.1, ptr %arrayidx2.i10.1, align 1, !tbaa !16
  %indvars.iv.next.i11.1 = or i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i11.1
  %70 = load i16, ptr %arrayidx.i8.2, align 2, !tbaa !13
  %conv.i9.2 = trunc i16 %70 to i8
  %arrayidx2.i10.2 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11.1
  store i8 %conv.i9.2, ptr %arrayidx2.i10.2, align 1, !tbaa !16
  %indvars.iv.next.i11.2 = or i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i11.2
  %71 = load i16, ptr %arrayidx.i8.3, align 2, !tbaa !13
  %conv.i9.3 = trunc i16 %71 to i8
  %arrayidx2.i10.3 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11.2
  store i8 %conv.i9.3, ptr %arrayidx2.i10.3, align 1, !tbaa !16
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %exitcond.not.i12.3 = icmp eq i64 %indvars.iv.next.i11.3, 10000
  br i1 %exitcond.not.i12.3, label %invoke.cont68.i, label %for.body.i13, !llvm.loop !50

invoke.cont68.i:                                  ; preds = %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0156.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body59.i, !prof !42

ehcleanup76.i:                                    ; preds = %lpad52.i, %lpad17.i, %lpad5.loopexit.i
  %.pn145.i = phi { ptr, i32 } [ %50, %lpad17.i ], [ %52, %lpad52.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i125.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i125.i, label %ehcleanup78.i, label %delete.notnull.i.i126.i

delete.notnull.i.i126.i:                          ; preds = %ehcleanup76.i, %ehcleanup76.thread.i
  %.pn145.pn151.i = phi { ptr, i32 } [ %45, %ehcleanup76.thread.i ], [ %.pn145.i, %ehcleanup76.i ]
  %72 = phi ptr [ %call1.i, %ehcleanup76.thread.i ], [ %.pr.i, %ehcleanup76.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup78.i

ehcleanup78.i:                                    ; preds = %delete.notnull.i.i126.i, %ehcleanup76.i, %lpad.i
  %.pn145.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn145.i, %ehcleanup76.i ], [ %.pn145.pn151.i, %delete.notnull.i.i126.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn145.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i115.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

declare noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef) local_unnamed_addr #0

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #4

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #5

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont3.i unwind label %ehcleanup76.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i90.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i90.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  br label %for.body.i94.i

for.body.i94.i:                                   ; preds = %for.body.i94.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i91.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i92.i.4, %for.body.i94.i ]
  %arrayidx.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i91.i
  %0 = load i16, ptr %arrayidx.i.i, align 2, !tbaa !13
  %conv.i.i = trunc i16 %0 to i8
  %arrayidx2.i.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i91.i
  store i8 %conv.i.i, ptr %arrayidx2.i.i, align 1, !tbaa !16
  %indvars.iv.next.i92.i = add nuw nsw i64 %indvars.iv.i91.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i92.i
  %1 = load i16, ptr %arrayidx.i.i.1, align 2, !tbaa !13
  %conv.i.i.1 = trunc i16 %1 to i8
  %arrayidx2.i.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i92.i
  store i8 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 1, !tbaa !16
  %indvars.iv.next.i92.i.1 = add nuw nsw i64 %indvars.iv.i91.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i92.i.1
  %2 = load i16, ptr %arrayidx.i.i.2, align 2, !tbaa !13
  %conv.i.i.2 = trunc i16 %2 to i8
  %arrayidx2.i.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i92.i.1
  store i8 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 1, !tbaa !16
  %indvars.iv.next.i92.i.2 = add nuw nsw i64 %indvars.iv.i91.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i92.i.2
  %3 = load i16, ptr %arrayidx.i.i.3, align 2, !tbaa !13
  %conv.i.i.3 = trunc i16 %3 to i8
  %arrayidx2.i.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i92.i.2
  store i8 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 1, !tbaa !16
  %indvars.iv.next.i92.i.3 = add nuw nsw i64 %indvars.iv.i91.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i92.i.3
  %4 = load i16, ptr %arrayidx.i.i.4, align 2, !tbaa !13
  %conv.i.i.4 = trunc i16 %4 to i8
  %arrayidx2.i.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i92.i.3
  store i8 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 1, !tbaa !16
  %indvars.iv.next.i92.i.4 = add nuw nsw i64 %indvars.iv.i91.i, 5
  %exitcond.not.i93.i.4 = icmp eq i64 %indvars.iv.next.i92.i.4, 10000
  br i1 %exitcond.not.i93.i.4, label %vector.body, label %for.body.i94.i, !llvm.loop !17

vector.body:                                      ; preds = %for.body.i94.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i94.i ]
  %5 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <16 x i16>, ptr %5, align 2, !tbaa !13
  %6 = getelementptr inbounds i16, ptr %5, i64 16
  %wide.load27 = load <16 x i16>, ptr %6, align 2, !tbaa !13
  %7 = getelementptr inbounds i16, ptr %5, i64 32
  %wide.load28 = load <16 x i16>, ptr %7, align 2, !tbaa !13
  %8 = getelementptr inbounds i16, ptr %5, i64 48
  %wide.load29 = load <16 x i16>, ptr %8, align 2, !tbaa !13
  %9 = trunc <16 x i16> %wide.load to <16 x i8>
  %10 = trunc <16 x i16> %wide.load27 to <16 x i8>
  %11 = trunc <16 x i16> %wide.load28 to <16 x i8>
  %12 = trunc <16 x i16> %wide.load29 to <16 x i8>
  %13 = getelementptr inbounds i8, ptr %call1.i, i64 %index
  store <16 x i8> %9, ptr %13, align 1, !tbaa !16
  %14 = getelementptr inbounds i8, ptr %13, i64 16
  store <16 x i8> %10, ptr %14, align 1, !tbaa !16
  %15 = getelementptr inbounds i8, ptr %13, i64 32
  store <16 x i8> %11, ptr %15, align 1, !tbaa !16
  %16 = getelementptr inbounds i8, ptr %13, i64 48
  store <16 x i8> %12, ptr %16, align 1, !tbaa !16
  %index.next = add nuw i64 %index, 64
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !51

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i16, ptr %call.i, i64 9984
  %18 = load i16, ptr %arrayidx.i, align 2, !tbaa !13
  %conv.i = trunc i16 %18 to i8
  %arrayidx2.i = getelementptr inbounds i8, ptr %call1.i, i64 9984
  store i8 %conv.i, ptr %arrayidx2.i, align 1, !tbaa !16
  %arrayidx.i.1 = getelementptr inbounds i16, ptr %call.i, i64 9985
  %19 = load i16, ptr %arrayidx.i.1, align 2, !tbaa !13
  %conv.i.1 = trunc i16 %19 to i8
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %call1.i, i64 9985
  store i8 %conv.i.1, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %arrayidx.i.2 = getelementptr inbounds i16, ptr %call.i, i64 9986
  %20 = load i16, ptr %arrayidx.i.2, align 2, !tbaa !13
  %conv.i.2 = trunc i16 %20 to i8
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %call1.i, i64 9986
  store i8 %conv.i.2, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %arrayidx.i.3 = getelementptr inbounds i16, ptr %call.i, i64 9987
  %21 = load i16, ptr %arrayidx.i.3, align 2, !tbaa !13
  %conv.i.3 = trunc i16 %21 to i8
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %call1.i, i64 9987
  store i8 %conv.i.3, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %arrayidx.i.4 = getelementptr inbounds i16, ptr %call.i, i64 9988
  %22 = load i16, ptr %arrayidx.i.4, align 2, !tbaa !13
  %conv.i.4 = trunc i16 %22 to i8
  %arrayidx2.i.4 = getelementptr inbounds i8, ptr %call1.i, i64 9988
  store i8 %conv.i.4, ptr %arrayidx2.i.4, align 1, !tbaa !16
  %arrayidx.i.5 = getelementptr inbounds i16, ptr %call.i, i64 9989
  %23 = load i16, ptr %arrayidx.i.5, align 2, !tbaa !13
  %conv.i.5 = trunc i16 %23 to i8
  %arrayidx2.i.5 = getelementptr inbounds i8, ptr %call1.i, i64 9989
  store i8 %conv.i.5, ptr %arrayidx2.i.5, align 1, !tbaa !16
  %arrayidx.i.6 = getelementptr inbounds i16, ptr %call.i, i64 9990
  %24 = load i16, ptr %arrayidx.i.6, align 2, !tbaa !13
  %conv.i.6 = trunc i16 %24 to i8
  %arrayidx2.i.6 = getelementptr inbounds i8, ptr %call1.i, i64 9990
  store i8 %conv.i.6, ptr %arrayidx2.i.6, align 1, !tbaa !16
  %arrayidx.i.7 = getelementptr inbounds i16, ptr %call.i, i64 9991
  %25 = load i16, ptr %arrayidx.i.7, align 2, !tbaa !13
  %conv.i.7 = trunc i16 %25 to i8
  %arrayidx2.i.7 = getelementptr inbounds i8, ptr %call1.i, i64 9991
  store i8 %conv.i.7, ptr %arrayidx2.i.7, align 1, !tbaa !16
  %arrayidx.i.8 = getelementptr inbounds i16, ptr %call.i, i64 9992
  %26 = load i16, ptr %arrayidx.i.8, align 2, !tbaa !13
  %conv.i.8 = trunc i16 %26 to i8
  %arrayidx2.i.8 = getelementptr inbounds i8, ptr %call1.i, i64 9992
  store i8 %conv.i.8, ptr %arrayidx2.i.8, align 1, !tbaa !16
  %arrayidx.i.9 = getelementptr inbounds i16, ptr %call.i, i64 9993
  %27 = load i16, ptr %arrayidx.i.9, align 2, !tbaa !13
  %conv.i.9 = trunc i16 %27 to i8
  %arrayidx2.i.9 = getelementptr inbounds i8, ptr %call1.i, i64 9993
  store i8 %conv.i.9, ptr %arrayidx2.i.9, align 1, !tbaa !16
  %arrayidx.i.10 = getelementptr inbounds i16, ptr %call.i, i64 9994
  %28 = load i16, ptr %arrayidx.i.10, align 2, !tbaa !13
  %conv.i.10 = trunc i16 %28 to i8
  %arrayidx2.i.10 = getelementptr inbounds i8, ptr %call1.i, i64 9994
  store i8 %conv.i.10, ptr %arrayidx2.i.10, align 1, !tbaa !16
  %arrayidx.i.11 = getelementptr inbounds i16, ptr %call.i, i64 9995
  %29 = load i16, ptr %arrayidx.i.11, align 2, !tbaa !13
  %conv.i.11 = trunc i16 %29 to i8
  %arrayidx2.i.11 = getelementptr inbounds i8, ptr %call1.i, i64 9995
  store i8 %conv.i.11, ptr %arrayidx2.i.11, align 1, !tbaa !16
  %arrayidx.i.12 = getelementptr inbounds i16, ptr %call.i, i64 9996
  %30 = load i16, ptr %arrayidx.i.12, align 2, !tbaa !13
  %conv.i.12 = trunc i16 %30 to i8
  %arrayidx2.i.12 = getelementptr inbounds i8, ptr %call1.i, i64 9996
  store i8 %conv.i.12, ptr %arrayidx2.i.12, align 1, !tbaa !16
  %arrayidx.i.13 = getelementptr inbounds i16, ptr %call.i, i64 9997
  %31 = load i16, ptr %arrayidx.i.13, align 2, !tbaa !13
  %conv.i.13 = trunc i16 %31 to i8
  %arrayidx2.i.13 = getelementptr inbounds i8, ptr %call1.i, i64 9997
  store i8 %conv.i.13, ptr %arrayidx2.i.13, align 1, !tbaa !16
  %arrayidx.i.14 = getelementptr inbounds i16, ptr %call.i, i64 9998
  %32 = load i16, ptr %arrayidx.i.14, align 2, !tbaa !13
  %conv.i.14 = trunc i16 %32 to i8
  %arrayidx2.i.14 = getelementptr inbounds i8, ptr %call1.i, i64 9998
  store i8 %conv.i.14, ptr %arrayidx2.i.14, align 1, !tbaa !16
  %arrayidx.i.15 = getelementptr inbounds i16, ptr %call.i, i64 9999
  %33 = load i16, ptr %arrayidx.i.15, align 2, !tbaa !13
  %conv.i.15 = trunc i16 %33 to i8
  %arrayidx2.i.15 = getelementptr inbounds i8, ptr %call1.i, i64 9999
  store i8 %conv.i.15, ptr %arrayidx2.i.15, align 1, !tbaa !16
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i95.i.1 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i8, ptr %arrayidx.i95.i.1, align 1, !tbaa !16
  %arrayidx.i96.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i8, ptr %arrayidx.i96.i.1, align 1, !tbaa !16
  %cmp25.not.i.1 = icmp eq i8 %34, %35
  br i1 %cmp25.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i95.i.2 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i8, ptr %arrayidx.i95.i.2, align 1, !tbaa !16
  %arrayidx.i96.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i8, ptr %arrayidx.i96.i.2, align 1, !tbaa !16
  %cmp25.not.i.2 = icmp eq i8 %36, %37
  br i1 %cmp25.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i95.i.3 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i8, ptr %arrayidx.i95.i.3, align 1, !tbaa !16
  %arrayidx.i96.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i8, ptr %arrayidx.i96.i.3, align 1, !tbaa !16
  %cmp25.not.i.3 = icmp eq i8 %38, %39
  br i1 %cmp25.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i95.i.4 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i8, ptr %arrayidx.i95.i.4, align 1, !tbaa !16
  %arrayidx.i96.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i8, ptr %arrayidx.i96.i.4, align 1, !tbaa !16
  %cmp25.not.i.4 = icmp eq i8 %40, %41
  br i1 %cmp25.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !22

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond55.preheader.i unwind label %lpad52.i

for.cond55.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not155159.i = icmp eq i64 %43, 0
  %cmp.not.i.not155.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not155159.i
  br i1 %cmp.not.i.not155.i, label %if.end.i.i, label %for.body59.i.preheader, !prof !42

for.body59.i.preheader:                           ; preds = %for.cond55.preheader.i
  %scevgep30 = getelementptr i8, ptr %call.i, i64 20000
  br label %for.body59.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup78.i

ehcleanup76.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i126.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup76.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i95.i = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i8, ptr %arrayidx.i95.i, align 1, !tbaa !16
  %arrayidx.i96.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i8, ptr %arrayidx.i96.i, align 1, !tbaa !16
  %cmp25.not.i = icmp eq i8 %46, %47
  br i1 %cmp25.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i8 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i95.i.le = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i98.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont26.i unwind label %lpad17.i

invoke.cont26.i:                                  ; preds = %if.then.i
  %arrayidx.i99.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i16, ptr %arrayidx.i99.i, align 2, !tbaa !13
  %conv.i100.i = zext i16 %48 to i64
  %call.i101.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i100.i)
          to label %invoke.cont31.i unwind label %lpad17.i

invoke.cont31.i:                                  ; preds = %invoke.cont26.i
  %call1.i104.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i101.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont33.i unwind label %lpad17.i

invoke.cont33.i:                                  ; preds = %invoke.cont31.i
  %49 = load i8, ptr %arrayidx.i95.i.le, align 1, !tbaa !16
  %call39.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call.i101.i, i8 noundef zeroext %49)
          to label %invoke.cont38.i unwind label %lpad17.i

invoke.cont38.i:                                  ; preds = %invoke.cont33.i
  %call1.i109.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call39.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont40.i unwind label %lpad17.i

invoke.cont40.i:                                  ; preds = %invoke.cont38.i
  %call46.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call39.i, i8 noundef zeroext %.lcssa)
          to label %invoke.cont45.i unwind label %lpad17.i

invoke.cont45.i:                                  ; preds = %invoke.cont40.i
  %call48.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call46.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont47.i unwind label %lpad17.i

invoke.cont47.i:                                  ; preds = %invoke.cont45.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont45.i, %invoke.cont40.i, %invoke.cont38.i, %invoke.cont33.i, %invoke.cont31.i, %invoke.cont26.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup76.i

if.end.i.i:                                       ; preds = %invoke.cont68.i, %for.cond55.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad52.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i114.i = icmp eq ptr %51, null
  br i1 %cmp.not.i114.i, label %_ZL28benchForTruncOrZextVecInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i115.i

delete.notnull.i.i115.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad52.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup76.i

for.body59.i:                                     ; preds = %for.body59.i.preheader, %invoke.cont68.i
  %__begin1.sroa.0.0156.i = phi i64 [ %dec.i.i, %invoke.cont68.i ], [ %43, %for.body59.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %54, i64 10000
  %bound0 = icmp ult ptr %54, %scevgep30
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13.preheader, label %vector.body36

vector.body36:                                    ; preds = %for.body59.i, %vector.body36
  %index37 = phi i64 [ %index.next42, %vector.body36 ], [ 0, %for.body59.i ]
  %55 = getelementptr inbounds i16, ptr %call.i, i64 %index37
  %wide.load38 = load <16 x i16>, ptr %55, align 2, !tbaa !13, !alias.scope !52
  %56 = getelementptr inbounds i16, ptr %55, i64 16
  %wide.load39 = load <16 x i16>, ptr %56, align 2, !tbaa !13, !alias.scope !52
  %57 = getelementptr inbounds i16, ptr %55, i64 32
  %wide.load40 = load <16 x i16>, ptr %57, align 2, !tbaa !13, !alias.scope !52
  %58 = getelementptr inbounds i16, ptr %55, i64 48
  %wide.load41 = load <16 x i16>, ptr %58, align 2, !tbaa !13, !alias.scope !52
  %59 = trunc <16 x i16> %wide.load38 to <16 x i8>
  %60 = trunc <16 x i16> %wide.load39 to <16 x i8>
  %61 = trunc <16 x i16> %wide.load40 to <16 x i8>
  %62 = trunc <16 x i16> %wide.load41 to <16 x i8>
  %63 = getelementptr inbounds i8, ptr %54, i64 %index37
  store <16 x i8> %59, ptr %63, align 1, !tbaa !16, !alias.scope !55, !noalias !52
  %64 = getelementptr inbounds i8, ptr %63, i64 16
  store <16 x i8> %60, ptr %64, align 1, !tbaa !16, !alias.scope !55, !noalias !52
  %65 = getelementptr inbounds i8, ptr %63, i64 32
  store <16 x i8> %61, ptr %65, align 1, !tbaa !16, !alias.scope !55, !noalias !52
  %66 = getelementptr inbounds i8, ptr %63, i64 48
  store <16 x i8> %62, ptr %66, align 1, !tbaa !16, !alias.scope !55, !noalias !52
  %index.next42 = add nuw i64 %index37, 64
  %67 = icmp eq i64 %index.next42, 9984
  br i1 %67, label %for.body.i13.preheader, label %vector.body36, !llvm.loop !57

for.body.i13.preheader:                           ; preds = %vector.body36, %for.body59.i
  %indvars.iv.i7.ph = phi i64 [ 0, %for.body59.i ], [ 9984, %vector.body36 ]
  br label %for.body.i13

for.body.i13:                                     ; preds = %for.body.i13, %for.body.i13.preheader
  %indvars.iv.i7 = phi i64 [ %indvars.iv.i7.ph, %for.body.i13.preheader ], [ %indvars.iv.next.i11.3, %for.body.i13 ]
  %arrayidx.i8 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i7
  %68 = load i16, ptr %arrayidx.i8, align 2, !tbaa !13
  %conv.i9 = trunc i16 %68 to i8
  %arrayidx2.i10 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.i7
  store i8 %conv.i9, ptr %arrayidx2.i10, align 1, !tbaa !16
  %indvars.iv.next.i11 = or i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i11
  %69 = load i16, ptr %arrayidx.i8.1, align 2, !tbaa !13
  %conv.i9.1 = trunc i16 %69 to i8
  %arrayidx2.i10.1 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11
  store i8 %conv.i9.1, ptr %arrayidx2.i10.1, align 1, !tbaa !16
  %indvars.iv.next.i11.1 = or i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i11.1
  %70 = load i16, ptr %arrayidx.i8.2, align 2, !tbaa !13
  %conv.i9.2 = trunc i16 %70 to i8
  %arrayidx2.i10.2 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11.1
  store i8 %conv.i9.2, ptr %arrayidx2.i10.2, align 1, !tbaa !16
  %indvars.iv.next.i11.2 = or i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i11.2
  %71 = load i16, ptr %arrayidx.i8.3, align 2, !tbaa !13
  %conv.i9.3 = trunc i16 %71 to i8
  %arrayidx2.i10.3 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11.2
  store i8 %conv.i9.3, ptr %arrayidx2.i10.3, align 1, !tbaa !16
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %exitcond.not.i12.3 = icmp eq i64 %indvars.iv.next.i11.3, 10000
  br i1 %exitcond.not.i12.3, label %invoke.cont68.i, label %for.body.i13, !llvm.loop !58

invoke.cont68.i:                                  ; preds = %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0156.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body59.i, !prof !42

ehcleanup76.i:                                    ; preds = %lpad52.i, %lpad17.i, %lpad5.loopexit.i
  %.pn145.i = phi { ptr, i32 } [ %50, %lpad17.i ], [ %52, %lpad52.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i125.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i125.i, label %ehcleanup78.i, label %delete.notnull.i.i126.i

delete.notnull.i.i126.i:                          ; preds = %ehcleanup76.i, %ehcleanup76.thread.i
  %.pn145.pn151.i = phi { ptr, i32 } [ %45, %ehcleanup76.thread.i ], [ %.pn145.i, %ehcleanup76.i ]
  %72 = phi ptr [ %call1.i, %ehcleanup76.thread.i ], [ %.pr.i, %ehcleanup76.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup78.i

ehcleanup78.i:                                    ; preds = %delete.notnull.i.i126.i, %ehcleanup76.i, %lpad.i
  %.pn145.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn145.i, %ehcleanup76.i ], [ %.pn145.pn151.i, %delete.notnull.i.i126.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn145.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i115.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z53benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont3.i unwind label %ehcleanup76.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i90.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i90.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  br label %for.body.i94.i

for.body.i94.i:                                   ; preds = %for.body.i94.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i91.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i92.i.4, %for.body.i94.i ]
  %arrayidx.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i91.i
  %0 = load i16, ptr %arrayidx.i.i, align 2, !tbaa !13
  %conv.i.i = trunc i16 %0 to i8
  %arrayidx2.i.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i91.i
  store i8 %conv.i.i, ptr %arrayidx2.i.i, align 1, !tbaa !16
  %indvars.iv.next.i92.i = add nuw nsw i64 %indvars.iv.i91.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i92.i
  %1 = load i16, ptr %arrayidx.i.i.1, align 2, !tbaa !13
  %conv.i.i.1 = trunc i16 %1 to i8
  %arrayidx2.i.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i92.i
  store i8 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 1, !tbaa !16
  %indvars.iv.next.i92.i.1 = add nuw nsw i64 %indvars.iv.i91.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i92.i.1
  %2 = load i16, ptr %arrayidx.i.i.2, align 2, !tbaa !13
  %conv.i.i.2 = trunc i16 %2 to i8
  %arrayidx2.i.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i92.i.1
  store i8 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 1, !tbaa !16
  %indvars.iv.next.i92.i.2 = add nuw nsw i64 %indvars.iv.i91.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i92.i.2
  %3 = load i16, ptr %arrayidx.i.i.3, align 2, !tbaa !13
  %conv.i.i.3 = trunc i16 %3 to i8
  %arrayidx2.i.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i92.i.2
  store i8 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 1, !tbaa !16
  %indvars.iv.next.i92.i.3 = add nuw nsw i64 %indvars.iv.i91.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i92.i.3
  %4 = load i16, ptr %arrayidx.i.i.4, align 2, !tbaa !13
  %conv.i.i.4 = trunc i16 %4 to i8
  %arrayidx2.i.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i92.i.3
  store i8 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 1, !tbaa !16
  %indvars.iv.next.i92.i.4 = add nuw nsw i64 %indvars.iv.i91.i, 5
  %exitcond.not.i93.i.4 = icmp eq i64 %indvars.iv.next.i92.i.4, 10000
  br i1 %exitcond.not.i93.i.4, label %vector.body, label %for.body.i94.i, !llvm.loop !17

vector.body:                                      ; preds = %for.body.i94.i, %vector.body.1
  %index = phi i64 [ %index.next.1, %vector.body.1 ], [ 0, %for.body.i94.i ]
  %5 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <8 x i16>, ptr %5, align 2, !tbaa !13
  %6 = getelementptr inbounds i16, ptr %5, i64 8
  %wide.load27 = load <8 x i16>, ptr %6, align 2, !tbaa !13
  %7 = trunc <8 x i16> %wide.load to <8 x i8>
  %8 = trunc <8 x i16> %wide.load27 to <8 x i8>
  %9 = getelementptr inbounds i8, ptr %call1.i, i64 %index
  store <8 x i8> %7, ptr %9, align 1, !tbaa !16
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  store <8 x i8> %8, ptr %10, align 1, !tbaa !16
  %index.next = or i64 %index, 16
  %11 = icmp eq i64 %index.next, 10000
  br i1 %11, label %for.body.i, label %vector.body.1, !llvm.loop !59

vector.body.1:                                    ; preds = %vector.body
  %12 = getelementptr inbounds i16, ptr %call.i, i64 %index.next
  %wide.load.1 = load <8 x i16>, ptr %12, align 2, !tbaa !13
  %13 = getelementptr inbounds i16, ptr %12, i64 8
  %wide.load27.1 = load <8 x i16>, ptr %13, align 2, !tbaa !13
  %14 = trunc <8 x i16> %wide.load.1 to <8 x i8>
  %15 = trunc <8 x i16> %wide.load27.1 to <8 x i8>
  %16 = getelementptr inbounds i8, ptr %call1.i, i64 %index.next
  store <8 x i8> %14, ptr %16, align 1, !tbaa !16
  %17 = getelementptr inbounds i8, ptr %16, i64 8
  store <8 x i8> %15, ptr %17, align 1, !tbaa !16
  %index.next.1 = add nuw nsw i64 %index, 32
  br label %vector.body

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i95.i.1 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i
  %18 = load i8, ptr %arrayidx.i95.i.1, align 1, !tbaa !16
  %arrayidx.i96.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i
  %19 = load i8, ptr %arrayidx.i96.i.1, align 1, !tbaa !16
  %cmp25.not.i.1 = icmp eq i8 %18, %19
  br i1 %cmp25.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i95.i.2 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.1
  %20 = load i8, ptr %arrayidx.i95.i.2, align 1, !tbaa !16
  %arrayidx.i96.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.1
  %21 = load i8, ptr %arrayidx.i96.i.2, align 1, !tbaa !16
  %cmp25.not.i.2 = icmp eq i8 %20, %21
  br i1 %cmp25.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i95.i.3 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.2
  %22 = load i8, ptr %arrayidx.i95.i.3, align 1, !tbaa !16
  %arrayidx.i96.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.2
  %23 = load i8, ptr %arrayidx.i96.i.3, align 1, !tbaa !16
  %cmp25.not.i.3 = icmp eq i8 %22, %23
  br i1 %cmp25.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i95.i.4 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.3
  %24 = load i8, ptr %arrayidx.i95.i.4, align 1, !tbaa !16
  %arrayidx.i96.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.3
  %25 = load i8, ptr %arrayidx.i96.i.4, align 1, !tbaa !16
  %cmp25.not.i.4 = icmp eq i8 %24, %25
  br i1 %cmp25.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !22

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %26 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %27 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond55.preheader.i unwind label %lpad52.i

for.cond55.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %26, 0
  %cmp.not.i.not155159.i = icmp eq i64 %27, 0
  %cmp.not.i.not155.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not155159.i
  br i1 %cmp.not.i.not155.i, label %if.end.i.i, label %for.body59.i.preheader, !prof !42

for.body59.i.preheader:                           ; preds = %for.cond55.preheader.i
  %scevgep28 = getelementptr i8, ptr %call.i, i64 20000
  br label %for.body59.i

lpad.i:                                           ; preds = %entry
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup78.i

ehcleanup76.thread.i:                             ; preds = %invoke.cont.i
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i126.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup76.i

for.body.i:                                       ; preds = %vector.body, %for.cond.i.4
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.4, %for.cond.i.4 ], [ 0, %vector.body ]
  %arrayidx.i95.i = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i
  %30 = load i8, ptr %arrayidx.i95.i, align 1, !tbaa !16
  %arrayidx.i96.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i
  %31 = load i8, ptr %arrayidx.i96.i, align 1, !tbaa !16
  %cmp25.not.i = icmp eq i8 %30, %31
  br i1 %cmp25.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i8 [ %31, %for.body.i ], [ %19, %for.cond.i ], [ %21, %for.cond.i.1 ], [ %23, %for.cond.i.2 ], [ %25, %for.cond.i.3 ]
  %arrayidx.i95.i.le = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i98.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont26.i unwind label %lpad17.i

invoke.cont26.i:                                  ; preds = %if.then.i
  %arrayidx.i99.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.lcssa
  %32 = load i16, ptr %arrayidx.i99.i, align 2, !tbaa !13
  %conv.i100.i = zext i16 %32 to i64
  %call.i101.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i100.i)
          to label %invoke.cont31.i unwind label %lpad17.i

invoke.cont31.i:                                  ; preds = %invoke.cont26.i
  %call1.i104.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i101.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont33.i unwind label %lpad17.i

invoke.cont33.i:                                  ; preds = %invoke.cont31.i
  %33 = load i8, ptr %arrayidx.i95.i.le, align 1, !tbaa !16
  %call39.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call.i101.i, i8 noundef zeroext %33)
          to label %invoke.cont38.i unwind label %lpad17.i

invoke.cont38.i:                                  ; preds = %invoke.cont33.i
  %call1.i109.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call39.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont40.i unwind label %lpad17.i

invoke.cont40.i:                                  ; preds = %invoke.cont38.i
  %call46.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call39.i, i8 noundef zeroext %.lcssa)
          to label %invoke.cont45.i unwind label %lpad17.i

invoke.cont45.i:                                  ; preds = %invoke.cont40.i
  %call48.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call46.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont47.i unwind label %lpad17.i

invoke.cont47.i:                                  ; preds = %invoke.cont45.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont45.i, %invoke.cont40.i, %invoke.cont38.i, %invoke.cont33.i, %invoke.cont31.i, %invoke.cont26.i, %if.then.i
  %34 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup76.i

if.end.i.i:                                       ; preds = %invoke.cont68.i, %for.cond55.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad52.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %35 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i114.i = icmp eq ptr %35, null
  br i1 %cmp.not.i114.i, label %_ZL28benchForTruncOrZextVecInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i115.i

delete.notnull.i.i115.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %35) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad52.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup76.i

for.body59.i:                                     ; preds = %for.body59.i.preheader, %invoke.cont68.i
  %__begin1.sroa.0.0156.i = phi i64 [ %dec.i.i, %invoke.cont68.i ], [ %27, %for.body59.i.preheader ]
  %37 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %37) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %38 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %38, i64 10000
  %bound0 = icmp ult ptr %38, %scevgep28
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13, label %vector.body34

vector.body34:                                    ; preds = %for.body59.i, %vector.body34.1
  %index35 = phi i64 [ %index.next38.1, %vector.body34.1 ], [ 0, %for.body59.i ]
  %39 = getelementptr inbounds i16, ptr %call.i, i64 %index35
  %wide.load36 = load <8 x i16>, ptr %39, align 2, !tbaa !13, !alias.scope !60
  %40 = getelementptr inbounds i16, ptr %39, i64 8
  %wide.load37 = load <8 x i16>, ptr %40, align 2, !tbaa !13, !alias.scope !60
  %41 = trunc <8 x i16> %wide.load36 to <8 x i8>
  %42 = trunc <8 x i16> %wide.load37 to <8 x i8>
  %43 = getelementptr inbounds i8, ptr %38, i64 %index35
  store <8 x i8> %41, ptr %43, align 1, !tbaa !16, !alias.scope !63, !noalias !60
  %44 = getelementptr inbounds i8, ptr %43, i64 8
  store <8 x i8> %42, ptr %44, align 1, !tbaa !16, !alias.scope !63, !noalias !60
  %index.next38 = or i64 %index35, 16
  %45 = icmp eq i64 %index.next38, 10000
  br i1 %45, label %invoke.cont68.i, label %vector.body34.1, !llvm.loop !65

vector.body34.1:                                  ; preds = %vector.body34
  %46 = getelementptr inbounds i16, ptr %call.i, i64 %index.next38
  %wide.load36.1 = load <8 x i16>, ptr %46, align 2, !tbaa !13, !alias.scope !60
  %47 = getelementptr inbounds i16, ptr %46, i64 8
  %wide.load37.1 = load <8 x i16>, ptr %47, align 2, !tbaa !13, !alias.scope !60
  %48 = trunc <8 x i16> %wide.load36.1 to <8 x i8>
  %49 = trunc <8 x i16> %wide.load37.1 to <8 x i8>
  %50 = getelementptr inbounds i8, ptr %38, i64 %index.next38
  store <8 x i8> %48, ptr %50, align 1, !tbaa !16, !alias.scope !63, !noalias !60
  %51 = getelementptr inbounds i8, ptr %50, i64 8
  store <8 x i8> %49, ptr %51, align 1, !tbaa !16, !alias.scope !63, !noalias !60
  %index.next38.1 = add nuw nsw i64 %index35, 32
  br label %vector.body34

for.body.i13:                                     ; preds = %for.body59.i, %for.body.i13
  %indvars.iv.i7 = phi i64 [ %indvars.iv.next.i11.4, %for.body.i13 ], [ 0, %for.body59.i ]
  %arrayidx.i8 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i7
  %52 = load i16, ptr %arrayidx.i8, align 2, !tbaa !13
  %conv.i9 = trunc i16 %52 to i8
  %arrayidx2.i10 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.i7
  store i8 %conv.i9, ptr %arrayidx2.i10, align 1, !tbaa !16
  %indvars.iv.next.i11 = add nuw nsw i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i11
  %53 = load i16, ptr %arrayidx.i8.1, align 2, !tbaa !13
  %conv.i9.1 = trunc i16 %53 to i8
  %arrayidx2.i10.1 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.next.i11
  store i8 %conv.i9.1, ptr %arrayidx2.i10.1, align 1, !tbaa !16
  %indvars.iv.next.i11.1 = add nuw nsw i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i11.1
  %54 = load i16, ptr %arrayidx.i8.2, align 2, !tbaa !13
  %conv.i9.2 = trunc i16 %54 to i8
  %arrayidx2.i10.2 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.next.i11.1
  store i8 %conv.i9.2, ptr %arrayidx2.i10.2, align 1, !tbaa !16
  %indvars.iv.next.i11.2 = add nuw nsw i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i11.2
  %55 = load i16, ptr %arrayidx.i8.3, align 2, !tbaa !13
  %conv.i9.3 = trunc i16 %55 to i8
  %arrayidx2.i10.3 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.next.i11.2
  store i8 %conv.i9.3, ptr %arrayidx2.i10.3, align 1, !tbaa !16
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %arrayidx.i8.4 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i11.3
  %56 = load i16, ptr %arrayidx.i8.4, align 2, !tbaa !13
  %conv.i9.4 = trunc i16 %56 to i8
  %arrayidx2.i10.4 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.next.i11.3
  store i8 %conv.i9.4, ptr %arrayidx2.i10.4, align 1, !tbaa !16
  %indvars.iv.next.i11.4 = add nuw nsw i64 %indvars.iv.i7, 5
  %exitcond.not.i12.4 = icmp eq i64 %indvars.iv.next.i11.4, 10000
  br i1 %exitcond.not.i12.4, label %invoke.cont68.i, label %for.body.i13, !llvm.loop !66

invoke.cont68.i:                                  ; preds = %vector.body34, %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0156.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body59.i, !prof !42

ehcleanup76.i:                                    ; preds = %lpad52.i, %lpad17.i, %lpad5.loopexit.i
  %.pn145.i = phi { ptr, i32 } [ %34, %lpad17.i ], [ %36, %lpad52.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i125.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i125.i, label %ehcleanup78.i, label %delete.notnull.i.i126.i

delete.notnull.i.i126.i:                          ; preds = %ehcleanup76.i, %ehcleanup76.thread.i
  %.pn145.pn151.i = phi { ptr, i32 } [ %29, %ehcleanup76.thread.i ], [ %.pn145.i, %ehcleanup76.i ]
  %57 = phi ptr [ %call1.i, %ehcleanup76.thread.i ], [ %.pr.i, %ehcleanup76.i ]
  call void @_ZdaPv(ptr noundef nonnull %57) #13
  br label %ehcleanup78.i

ehcleanup78.i:                                    ; preds = %delete.notnull.i.i126.i, %ehcleanup76.i, %lpad.i
  %.pn145.pn.pn.i = phi { ptr, i32 } [ %28, %lpad.i ], [ %.pn145.i, %ehcleanup76.i ], [ %.pn145.pn151.i, %delete.notnull.i.i126.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn145.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i115.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i31.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  store i8 0, ptr %distrib.i32.i, align 1, !tbaa !67
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i33.i, align 1, !tbaa !69
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %0 = load ptr, ptr %B.i, align 8, !tbaa !5
  %arrayidx.i.i35.i = getelementptr inbounds i8, ptr %0, i64 %indvars.iv.i34.i
  store i8 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 1, !tbaa !16
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %1 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %2 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %lpad11.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %1, 0
  %cmp.not.i.not7173.i = icmp eq i64 %2, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep2 = getelementptr i8, ptr %call.i, i64 20000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i unwind label %lpad11.i

_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %3 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %3, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %3) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %4 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad11.i:                                         ; preds = %if.end.i.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %5 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %2, %for.body.i.preheader ]
  %6 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %6) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %7 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %7, i64 10000
  %bound0 = icmp ult ptr %7, %scevgep2
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1.preheader, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i ]
  %8 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <8 x i16>, ptr %8, align 2, !tbaa !13, !alias.scope !71
  %9 = getelementptr inbounds i16, ptr %8, i64 8
  %wide.load3 = load <8 x i16>, ptr %9, align 2, !tbaa !13, !alias.scope !71
  %10 = getelementptr inbounds i16, ptr %8, i64 16
  %wide.load4 = load <8 x i16>, ptr %10, align 2, !tbaa !13, !alias.scope !71
  %11 = getelementptr inbounds i16, ptr %8, i64 24
  %wide.load5 = load <8 x i16>, ptr %11, align 2, !tbaa !13, !alias.scope !71
  %12 = trunc <8 x i16> %wide.load to <8 x i8>
  %13 = trunc <8 x i16> %wide.load3 to <8 x i8>
  %14 = trunc <8 x i16> %wide.load4 to <8 x i8>
  %15 = trunc <8 x i16> %wide.load5 to <8 x i8>
  %16 = getelementptr inbounds i8, ptr %7, i64 %index
  %wide.load6 = load <8 x i8>, ptr %16, align 1, !tbaa !16, !alias.scope !74, !noalias !71
  %17 = getelementptr inbounds i8, ptr %16, i64 8
  %wide.load7 = load <8 x i8>, ptr %17, align 1, !tbaa !16, !alias.scope !74, !noalias !71
  %18 = getelementptr inbounds i8, ptr %16, i64 16
  %wide.load8 = load <8 x i8>, ptr %18, align 1, !tbaa !16, !alias.scope !74, !noalias !71
  %19 = getelementptr inbounds i8, ptr %16, i64 24
  %wide.load9 = load <8 x i8>, ptr %19, align 1, !tbaa !16, !alias.scope !74, !noalias !71
  %20 = add <8 x i8> %wide.load6, %12
  %21 = add <8 x i8> %wide.load7, %13
  %22 = add <8 x i8> %wide.load8, %14
  %23 = add <8 x i8> %wide.load9, %15
  store <8 x i8> %20, ptr %16, align 1, !tbaa !16, !alias.scope !74, !noalias !71
  store <8 x i8> %21, ptr %17, align 1, !tbaa !16, !alias.scope !74, !noalias !71
  store <8 x i8> %22, ptr %18, align 1, !tbaa !16, !alias.scope !74, !noalias !71
  store <8 x i8> %23, ptr %19, align 1, !tbaa !16, !alias.scope !74, !noalias !71
  %index.next = add nuw i64 %index, 32
  %24 = icmp eq i64 %index.next, 9984
  br i1 %24, label %for.body.i1.preheader, label %vector.body, !llvm.loop !76

for.body.i1.preheader:                            ; preds = %vector.body, %for.body.i
  %indvars.iv.i.ph = phi i64 [ 0, %for.body.i ], [ 9984, %vector.body ]
  br label %for.body.i1

for.body.i1:                                      ; preds = %for.body.i1, %for.body.i1.preheader
  %indvars.iv.i = phi i64 [ %indvars.iv.i.ph, %for.body.i1.preheader ], [ %indvars.iv.next.i.3, %for.body.i1 ]
  %arrayidx.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i
  %25 = load i16, ptr %arrayidx.i, align 2, !tbaa !13
  %conv.i = trunc i16 %25 to i8
  %arrayidx2.i = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.i
  %26 = load i8, ptr %arrayidx2.i, align 1, !tbaa !16
  %add.i = add i8 %26, %conv.i
  store i8 %add.i, ptr %arrayidx2.i, align 1, !tbaa !16
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i
  %27 = load i16, ptr %arrayidx.i.1, align 2, !tbaa !13
  %conv.i.1 = trunc i16 %27 to i8
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i
  %28 = load i8, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %add.i.1 = add i8 %28, %conv.i.1
  store i8 %add.i.1, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i.1
  %29 = load i16, ptr %arrayidx.i.2, align 2, !tbaa !13
  %conv.i.2 = trunc i16 %29 to i8
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.1
  %30 = load i8, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %add.i.2 = add i8 %30, %conv.i.2
  store i8 %add.i.2, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i.2
  %31 = load i16, ptr %arrayidx.i.3, align 2, !tbaa !13
  %conv.i.3 = trunc i16 %31 to i8
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.2
  %32 = load i8, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %add.i.3 = add i8 %32, %conv.i.3
  store i8 %add.i.3, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !77

invoke.cont19.i:                                  ; preds = %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %lpad11.i, %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i
  %.pn.pn.i = phi { ptr, i32 } [ %5, %lpad11.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ]
  %33 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %33, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %ehcleanup24.i
  call void @_ZdaPv(ptr noundef nonnull %33) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %4, %lpad.i ], [ %.pn.pn.i, %ehcleanup24.i ], [ %.pn.pn.i, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i31.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  store i8 0, ptr %distrib.i32.i, align 1, !tbaa !67
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i33.i, align 1, !tbaa !69
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %0 = load ptr, ptr %B.i, align 8, !tbaa !5
  %arrayidx.i.i35.i = getelementptr inbounds i8, ptr %0, i64 %indvars.iv.i34.i
  store i8 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 1, !tbaa !16
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %1 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %2 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %lpad11.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %1, 0
  %cmp.not.i.not7173.i = icmp eq i64 %2, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep2 = getelementptr i8, ptr %call.i, i64 20000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i unwind label %lpad11.i

_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %3 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %3, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %3) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %4 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad11.i:                                         ; preds = %if.end.i.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %5 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %2, %for.body.i.preheader ]
  %6 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %6) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %7 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %7, i64 10000
  %bound0 = icmp ult ptr %7, %scevgep2
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1.preheader, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i ]
  %8 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <16 x i16>, ptr %8, align 2, !tbaa !13, !alias.scope !78
  %9 = getelementptr inbounds i16, ptr %8, i64 16
  %wide.load3 = load <16 x i16>, ptr %9, align 2, !tbaa !13, !alias.scope !78
  %10 = getelementptr inbounds i16, ptr %8, i64 32
  %wide.load4 = load <16 x i16>, ptr %10, align 2, !tbaa !13, !alias.scope !78
  %11 = getelementptr inbounds i16, ptr %8, i64 48
  %wide.load5 = load <16 x i16>, ptr %11, align 2, !tbaa !13, !alias.scope !78
  %12 = trunc <16 x i16> %wide.load to <16 x i8>
  %13 = trunc <16 x i16> %wide.load3 to <16 x i8>
  %14 = trunc <16 x i16> %wide.load4 to <16 x i8>
  %15 = trunc <16 x i16> %wide.load5 to <16 x i8>
  %16 = getelementptr inbounds i8, ptr %7, i64 %index
  %wide.load6 = load <16 x i8>, ptr %16, align 1, !tbaa !16, !alias.scope !81, !noalias !78
  %17 = getelementptr inbounds i8, ptr %16, i64 16
  %wide.load7 = load <16 x i8>, ptr %17, align 1, !tbaa !16, !alias.scope !81, !noalias !78
  %18 = getelementptr inbounds i8, ptr %16, i64 32
  %wide.load8 = load <16 x i8>, ptr %18, align 1, !tbaa !16, !alias.scope !81, !noalias !78
  %19 = getelementptr inbounds i8, ptr %16, i64 48
  %wide.load9 = load <16 x i8>, ptr %19, align 1, !tbaa !16, !alias.scope !81, !noalias !78
  %20 = add <16 x i8> %wide.load6, %12
  %21 = add <16 x i8> %wide.load7, %13
  %22 = add <16 x i8> %wide.load8, %14
  %23 = add <16 x i8> %wide.load9, %15
  store <16 x i8> %20, ptr %16, align 1, !tbaa !16, !alias.scope !81, !noalias !78
  store <16 x i8> %21, ptr %17, align 1, !tbaa !16, !alias.scope !81, !noalias !78
  store <16 x i8> %22, ptr %18, align 1, !tbaa !16, !alias.scope !81, !noalias !78
  store <16 x i8> %23, ptr %19, align 1, !tbaa !16, !alias.scope !81, !noalias !78
  %index.next = add nuw i64 %index, 64
  %24 = icmp eq i64 %index.next, 9984
  br i1 %24, label %for.body.i1.preheader, label %vector.body, !llvm.loop !83

for.body.i1.preheader:                            ; preds = %vector.body, %for.body.i
  %indvars.iv.i.ph = phi i64 [ 0, %for.body.i ], [ 9984, %vector.body ]
  br label %for.body.i1

for.body.i1:                                      ; preds = %for.body.i1, %for.body.i1.preheader
  %indvars.iv.i = phi i64 [ %indvars.iv.i.ph, %for.body.i1.preheader ], [ %indvars.iv.next.i.3, %for.body.i1 ]
  %arrayidx.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i
  %25 = load i16, ptr %arrayidx.i, align 2, !tbaa !13
  %conv.i = trunc i16 %25 to i8
  %arrayidx2.i = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.i
  %26 = load i8, ptr %arrayidx2.i, align 1, !tbaa !16
  %add.i = add i8 %26, %conv.i
  store i8 %add.i, ptr %arrayidx2.i, align 1, !tbaa !16
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i
  %27 = load i16, ptr %arrayidx.i.1, align 2, !tbaa !13
  %conv.i.1 = trunc i16 %27 to i8
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i
  %28 = load i8, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %add.i.1 = add i8 %28, %conv.i.1
  store i8 %add.i.1, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i.1
  %29 = load i16, ptr %arrayidx.i.2, align 2, !tbaa !13
  %conv.i.2 = trunc i16 %29 to i8
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.1
  %30 = load i8, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %add.i.2 = add i8 %30, %conv.i.2
  store i8 %add.i.2, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i.2
  %31 = load i16, ptr %arrayidx.i.3, align 2, !tbaa !13
  %conv.i.3 = trunc i16 %31 to i8
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.2
  %32 = load i8, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %add.i.3 = add i8 %32, %conv.i.3
  store i8 %add.i.3, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !84

invoke.cont19.i:                                  ; preds = %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %lpad11.i, %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i
  %.pn.pn.i = phi { ptr, i32 } [ %5, %lpad11.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ]
  %33 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %33, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %ehcleanup24.i
  call void @_ZdaPv(ptr noundef nonnull %33) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %4, %lpad.i ], [ %.pn.pn.i, %ehcleanup24.i ], [ %.pn.pn.i, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i31.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  store i8 0, ptr %distrib.i32.i, align 1, !tbaa !67
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i33.i, align 1, !tbaa !69
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %0 = load ptr, ptr %B.i, align 8, !tbaa !5
  %arrayidx.i.i35.i = getelementptr inbounds i8, ptr %0, i64 %indvars.iv.i34.i
  store i8 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 1, !tbaa !16
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %1 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %2 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %lpad11.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %1, 0
  %cmp.not.i.not7173.i = icmp eq i64 %2, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep2 = getelementptr i8, ptr %call.i, i64 20000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i unwind label %lpad11.i

_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %3 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %3, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %3) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %4 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad11.i:                                         ; preds = %if.end.i.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %5 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %2, %for.body.i.preheader ]
  %6 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %6) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %7 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %7, i64 10000
  %bound0 = icmp ult ptr %7, %scevgep2
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body.1
  %index = phi i64 [ %index.next.1, %vector.body.1 ], [ 0, %for.body.i ]
  %8 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <8 x i16>, ptr %8, align 2, !tbaa !13, !alias.scope !85
  %9 = getelementptr inbounds i16, ptr %8, i64 8
  %wide.load3 = load <8 x i16>, ptr %9, align 2, !tbaa !13, !alias.scope !85
  %10 = trunc <8 x i16> %wide.load to <8 x i8>
  %11 = trunc <8 x i16> %wide.load3 to <8 x i8>
  %12 = getelementptr inbounds i8, ptr %7, i64 %index
  %wide.load4 = load <8 x i8>, ptr %12, align 1, !tbaa !16, !alias.scope !88, !noalias !85
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  %wide.load5 = load <8 x i8>, ptr %13, align 1, !tbaa !16, !alias.scope !88, !noalias !85
  %14 = add <8 x i8> %wide.load4, %10
  %15 = add <8 x i8> %wide.load5, %11
  store <8 x i8> %14, ptr %12, align 1, !tbaa !16, !alias.scope !88, !noalias !85
  store <8 x i8> %15, ptr %13, align 1, !tbaa !16, !alias.scope !88, !noalias !85
  %index.next = or i64 %index, 16
  %16 = icmp eq i64 %index.next, 10000
  br i1 %16, label %invoke.cont19.i, label %vector.body.1, !llvm.loop !90

vector.body.1:                                    ; preds = %vector.body
  %17 = getelementptr inbounds i16, ptr %call.i, i64 %index.next
  %wide.load.1 = load <8 x i16>, ptr %17, align 2, !tbaa !13, !alias.scope !85
  %18 = getelementptr inbounds i16, ptr %17, i64 8
  %wide.load3.1 = load <8 x i16>, ptr %18, align 2, !tbaa !13, !alias.scope !85
  %19 = trunc <8 x i16> %wide.load.1 to <8 x i8>
  %20 = trunc <8 x i16> %wide.load3.1 to <8 x i8>
  %21 = getelementptr inbounds i8, ptr %7, i64 %index.next
  %wide.load4.1 = load <8 x i8>, ptr %21, align 1, !tbaa !16, !alias.scope !88, !noalias !85
  %22 = getelementptr inbounds i8, ptr %21, i64 8
  %wide.load5.1 = load <8 x i8>, ptr %22, align 1, !tbaa !16, !alias.scope !88, !noalias !85
  %23 = add <8 x i8> %wide.load4.1, %19
  %24 = add <8 x i8> %wide.load5.1, %20
  store <8 x i8> %23, ptr %21, align 1, !tbaa !16, !alias.scope !88, !noalias !85
  store <8 x i8> %24, ptr %22, align 1, !tbaa !16, !alias.scope !88, !noalias !85
  %index.next.1 = add nuw nsw i64 %index, 32
  br label %vector.body

for.body.i1:                                      ; preds = %for.body.i, %for.body.i1
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body.i1 ], [ 0, %for.body.i ]
  %arrayidx.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i
  %25 = load i16, ptr %arrayidx.i, align 2, !tbaa !13
  %conv.i = trunc i16 %25 to i8
  %arrayidx2.i = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.i
  %26 = load i8, ptr %arrayidx2.i, align 1, !tbaa !16
  %add.i = add i8 %26, %conv.i
  store i8 %add.i, ptr %arrayidx2.i, align 1, !tbaa !16
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i
  %27 = load i16, ptr %arrayidx.i.1, align 2, !tbaa !13
  %conv.i.1 = trunc i16 %27 to i8
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i
  %28 = load i8, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %add.i.1 = add i8 %28, %conv.i.1
  store i8 %add.i.1, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i.1
  %29 = load i16, ptr %arrayidx.i.2, align 2, !tbaa !13
  %conv.i.2 = trunc i16 %29 to i8
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.1
  %30 = load i8, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %add.i.2 = add i8 %30, %conv.i.2
  store i8 %add.i.2, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i.2
  %31 = load i16, ptr %arrayidx.i.3, align 2, !tbaa !13
  %conv.i.3 = trunc i16 %31 to i8
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.2
  %32 = load i8, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %add.i.3 = add i8 %32, %conv.i.3
  store i8 %add.i.3, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !91

invoke.cont19.i:                                  ; preds = %vector.body, %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %lpad11.i, %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i
  %.pn.pn.i = phi { ptr, i32 } [ %5, %lpad11.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ]
  %33 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %33, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %ehcleanup24.i
  call void @_ZdaPv(ptr noundef nonnull %33) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %4, %lpad.i ], [ %.pn.pn.i, %ehcleanup24.i ], [ %.pn.pn.i, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIthEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont3.i unwind label %ehcleanup65.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i79.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i79.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  br label %for.body.i83.i

for.body.i83.i:                                   ; preds = %for.body.i83.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i80.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i81.i.4, %for.body.i83.i ]
  %arrayidx.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i80.i
  %0 = load i32, ptr %arrayidx.i.i, align 4, !tbaa !95
  %conv.i.i = trunc i32 %0 to i8
  %arrayidx2.i.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i80.i
  store i8 %conv.i.i, ptr %arrayidx2.i.i, align 1, !tbaa !16
  %indvars.iv.next.i81.i = add nuw nsw i64 %indvars.iv.i80.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i81.i
  %1 = load i32, ptr %arrayidx.i.i.1, align 4, !tbaa !95
  %conv.i.i.1 = trunc i32 %1 to i8
  %arrayidx2.i.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i
  store i8 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 1, !tbaa !16
  %indvars.iv.next.i81.i.1 = add nuw nsw i64 %indvars.iv.i80.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i81.i.1
  %2 = load i32, ptr %arrayidx.i.i.2, align 4, !tbaa !95
  %conv.i.i.2 = trunc i32 %2 to i8
  %arrayidx2.i.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.1
  store i8 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 1, !tbaa !16
  %indvars.iv.next.i81.i.2 = add nuw nsw i64 %indvars.iv.i80.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i81.i.2
  %3 = load i32, ptr %arrayidx.i.i.3, align 4, !tbaa !95
  %conv.i.i.3 = trunc i32 %3 to i8
  %arrayidx2.i.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.2
  store i8 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 1, !tbaa !16
  %indvars.iv.next.i81.i.3 = add nuw nsw i64 %indvars.iv.i80.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i81.i.3
  %4 = load i32, ptr %arrayidx.i.i.4, align 4, !tbaa !95
  %conv.i.i.4 = trunc i32 %4 to i8
  %arrayidx2.i.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.3
  store i8 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 1, !tbaa !16
  %indvars.iv.next.i81.i.4 = add nuw nsw i64 %indvars.iv.i80.i, 5
  %exitcond.not.i82.i.4 = icmp eq i64 %indvars.iv.next.i81.i.4, 10000
  br i1 %exitcond.not.i82.i.4, label %vector.body, label %for.body.i83.i, !llvm.loop !97

vector.body:                                      ; preds = %for.body.i83.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i83.i ]
  %5 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <8 x i32>, ptr %5, align 4, !tbaa !95
  %6 = getelementptr inbounds i32, ptr %5, i64 8
  %wide.load27 = load <8 x i32>, ptr %6, align 4, !tbaa !95
  %7 = getelementptr inbounds i32, ptr %5, i64 16
  %wide.load28 = load <8 x i32>, ptr %7, align 4, !tbaa !95
  %8 = getelementptr inbounds i32, ptr %5, i64 24
  %wide.load29 = load <8 x i32>, ptr %8, align 4, !tbaa !95
  %9 = trunc <8 x i32> %wide.load to <8 x i8>
  %10 = trunc <8 x i32> %wide.load27 to <8 x i8>
  %11 = trunc <8 x i32> %wide.load28 to <8 x i8>
  %12 = trunc <8 x i32> %wide.load29 to <8 x i8>
  %13 = getelementptr inbounds i8, ptr %call1.i, i64 %index
  store <8 x i8> %9, ptr %13, align 1, !tbaa !16
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store <8 x i8> %10, ptr %14, align 1, !tbaa !16
  %15 = getelementptr inbounds i8, ptr %13, i64 16
  store <8 x i8> %11, ptr %15, align 1, !tbaa !16
  %16 = getelementptr inbounds i8, ptr %13, i64 24
  store <8 x i8> %12, ptr %16, align 1, !tbaa !16
  %index.next = add nuw i64 %index, 32
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !98

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i32, ptr %call.i, i64 9984
  %18 = load i32, ptr %arrayidx.i, align 4, !tbaa !95
  %conv.i = trunc i32 %18 to i8
  %arrayidx2.i = getelementptr inbounds i8, ptr %call1.i, i64 9984
  store i8 %conv.i, ptr %arrayidx2.i, align 1, !tbaa !16
  %arrayidx.i.1 = getelementptr inbounds i32, ptr %call.i, i64 9985
  %19 = load i32, ptr %arrayidx.i.1, align 4, !tbaa !95
  %conv.i.1 = trunc i32 %19 to i8
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %call1.i, i64 9985
  store i8 %conv.i.1, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %arrayidx.i.2 = getelementptr inbounds i32, ptr %call.i, i64 9986
  %20 = load i32, ptr %arrayidx.i.2, align 4, !tbaa !95
  %conv.i.2 = trunc i32 %20 to i8
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %call1.i, i64 9986
  store i8 %conv.i.2, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %arrayidx.i.3 = getelementptr inbounds i32, ptr %call.i, i64 9987
  %21 = load i32, ptr %arrayidx.i.3, align 4, !tbaa !95
  %conv.i.3 = trunc i32 %21 to i8
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %call1.i, i64 9987
  store i8 %conv.i.3, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %arrayidx.i.4 = getelementptr inbounds i32, ptr %call.i, i64 9988
  %22 = load i32, ptr %arrayidx.i.4, align 4, !tbaa !95
  %conv.i.4 = trunc i32 %22 to i8
  %arrayidx2.i.4 = getelementptr inbounds i8, ptr %call1.i, i64 9988
  store i8 %conv.i.4, ptr %arrayidx2.i.4, align 1, !tbaa !16
  %arrayidx.i.5 = getelementptr inbounds i32, ptr %call.i, i64 9989
  %23 = load i32, ptr %arrayidx.i.5, align 4, !tbaa !95
  %conv.i.5 = trunc i32 %23 to i8
  %arrayidx2.i.5 = getelementptr inbounds i8, ptr %call1.i, i64 9989
  store i8 %conv.i.5, ptr %arrayidx2.i.5, align 1, !tbaa !16
  %arrayidx.i.6 = getelementptr inbounds i32, ptr %call.i, i64 9990
  %24 = load i32, ptr %arrayidx.i.6, align 4, !tbaa !95
  %conv.i.6 = trunc i32 %24 to i8
  %arrayidx2.i.6 = getelementptr inbounds i8, ptr %call1.i, i64 9990
  store i8 %conv.i.6, ptr %arrayidx2.i.6, align 1, !tbaa !16
  %arrayidx.i.7 = getelementptr inbounds i32, ptr %call.i, i64 9991
  %25 = load i32, ptr %arrayidx.i.7, align 4, !tbaa !95
  %conv.i.7 = trunc i32 %25 to i8
  %arrayidx2.i.7 = getelementptr inbounds i8, ptr %call1.i, i64 9991
  store i8 %conv.i.7, ptr %arrayidx2.i.7, align 1, !tbaa !16
  %arrayidx.i.8 = getelementptr inbounds i32, ptr %call.i, i64 9992
  %26 = load i32, ptr %arrayidx.i.8, align 4, !tbaa !95
  %conv.i.8 = trunc i32 %26 to i8
  %arrayidx2.i.8 = getelementptr inbounds i8, ptr %call1.i, i64 9992
  store i8 %conv.i.8, ptr %arrayidx2.i.8, align 1, !tbaa !16
  %arrayidx.i.9 = getelementptr inbounds i32, ptr %call.i, i64 9993
  %27 = load i32, ptr %arrayidx.i.9, align 4, !tbaa !95
  %conv.i.9 = trunc i32 %27 to i8
  %arrayidx2.i.9 = getelementptr inbounds i8, ptr %call1.i, i64 9993
  store i8 %conv.i.9, ptr %arrayidx2.i.9, align 1, !tbaa !16
  %arrayidx.i.10 = getelementptr inbounds i32, ptr %call.i, i64 9994
  %28 = load i32, ptr %arrayidx.i.10, align 4, !tbaa !95
  %conv.i.10 = trunc i32 %28 to i8
  %arrayidx2.i.10 = getelementptr inbounds i8, ptr %call1.i, i64 9994
  store i8 %conv.i.10, ptr %arrayidx2.i.10, align 1, !tbaa !16
  %arrayidx.i.11 = getelementptr inbounds i32, ptr %call.i, i64 9995
  %29 = load i32, ptr %arrayidx.i.11, align 4, !tbaa !95
  %conv.i.11 = trunc i32 %29 to i8
  %arrayidx2.i.11 = getelementptr inbounds i8, ptr %call1.i, i64 9995
  store i8 %conv.i.11, ptr %arrayidx2.i.11, align 1, !tbaa !16
  %arrayidx.i.12 = getelementptr inbounds i32, ptr %call.i, i64 9996
  %30 = load i32, ptr %arrayidx.i.12, align 4, !tbaa !95
  %conv.i.12 = trunc i32 %30 to i8
  %arrayidx2.i.12 = getelementptr inbounds i8, ptr %call1.i, i64 9996
  store i8 %conv.i.12, ptr %arrayidx2.i.12, align 1, !tbaa !16
  %arrayidx.i.13 = getelementptr inbounds i32, ptr %call.i, i64 9997
  %31 = load i32, ptr %arrayidx.i.13, align 4, !tbaa !95
  %conv.i.13 = trunc i32 %31 to i8
  %arrayidx2.i.13 = getelementptr inbounds i8, ptr %call1.i, i64 9997
  store i8 %conv.i.13, ptr %arrayidx2.i.13, align 1, !tbaa !16
  %arrayidx.i.14 = getelementptr inbounds i32, ptr %call.i, i64 9998
  %32 = load i32, ptr %arrayidx.i.14, align 4, !tbaa !95
  %conv.i.14 = trunc i32 %32 to i8
  %arrayidx2.i.14 = getelementptr inbounds i8, ptr %call1.i, i64 9998
  store i8 %conv.i.14, ptr %arrayidx2.i.14, align 1, !tbaa !16
  %arrayidx.i.15 = getelementptr inbounds i32, ptr %call.i, i64 9999
  %33 = load i32, ptr %arrayidx.i.15, align 4, !tbaa !95
  %conv.i.15 = trunc i32 %33 to i8
  %arrayidx2.i.15 = getelementptr inbounds i8, ptr %call1.i, i64 9999
  store i8 %conv.i.15, ptr %arrayidx2.i.15, align 1, !tbaa !16
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i84.i.1 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i8, ptr %arrayidx.i84.i.1, align 1, !tbaa !16
  %arrayidx.i85.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i8, ptr %arrayidx.i85.i.1, align 1, !tbaa !16
  %cmp20.not.i.1 = icmp eq i8 %34, %35
  br i1 %cmp20.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i84.i.2 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i8, ptr %arrayidx.i84.i.2, align 1, !tbaa !16
  %arrayidx.i85.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i8, ptr %arrayidx.i85.i.2, align 1, !tbaa !16
  %cmp20.not.i.2 = icmp eq i8 %36, %37
  br i1 %cmp20.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i84.i.3 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i8, ptr %arrayidx.i84.i.3, align 1, !tbaa !16
  %arrayidx.i85.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i8, ptr %arrayidx.i85.i.3, align 1, !tbaa !16
  %cmp20.not.i.3 = icmp eq i8 %38, %39
  br i1 %cmp20.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i84.i.4 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i8, ptr %arrayidx.i84.i.4, align 1, !tbaa !16
  %arrayidx.i85.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i8, ptr %arrayidx.i85.i.4, align 1, !tbaa !16
  %cmp20.not.i.4 = icmp eq i8 %40, %41
  br i1 %cmp20.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !99

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond49.preheader.i unwind label %lpad46.i

for.cond49.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not144148.i = icmp eq i64 %43, 0
  %cmp.not.i.not144.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not144148.i
  br i1 %cmp.not.i.not144.i, label %if.end.i.i, label %for.body53.i.preheader, !prof !42

for.body53.i.preheader:                           ; preds = %for.cond49.preheader.i
  %scevgep30 = getelementptr i8, ptr %call.i, i64 40000
  br label %for.body53.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup67.i

ehcleanup65.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i115.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i84.i = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i8, ptr %arrayidx.i84.i, align 1, !tbaa !16
  %arrayidx.i85.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i8, ptr %arrayidx.i85.i, align 1, !tbaa !16
  %cmp20.not.i = icmp eq i8 %46, %47
  br i1 %cmp20.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i8 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i84.i.le = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont22.i unwind label %lpad21.i

invoke.cont22.i:                                  ; preds = %if.then.i
  %arrayidx.i88.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i32, ptr %arrayidx.i88.i, align 4, !tbaa !95
  %conv.i89.i = zext i32 %48 to i64
  %call.i90.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i89.i)
          to label %invoke.cont27.i unwind label %lpad21.i

invoke.cont27.i:                                  ; preds = %invoke.cont22.i
  %call1.i93.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont29.i unwind label %lpad21.i

invoke.cont29.i:                                  ; preds = %invoke.cont27.i
  %49 = load i8, ptr %arrayidx.i84.i.le, align 1, !tbaa !16
  %call34.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, i8 noundef zeroext %49)
          to label %invoke.cont33.i unwind label %lpad21.i

invoke.cont33.i:                                  ; preds = %invoke.cont29.i
  %call1.i98.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call34.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont35.i unwind label %lpad21.i

invoke.cont35.i:                                  ; preds = %invoke.cont33.i
  %call40.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call34.i, i8 noundef zeroext %.lcssa)
          to label %invoke.cont39.i unwind label %lpad21.i

invoke.cont39.i:                                  ; preds = %invoke.cont35.i
  %call42.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call40.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont41.i unwind label %lpad21.i

invoke.cont41.i:                                  ; preds = %invoke.cont39.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad21.i:                                         ; preds = %invoke.cont39.i, %invoke.cont35.i, %invoke.cont33.i, %invoke.cont29.i, %invoke.cont27.i, %invoke.cont22.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

if.end.i.i:                                       ; preds = %invoke.cont58.i, %for.cond49.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad46.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i103.i = icmp eq ptr %51, null
  br i1 %cmp.not.i103.i, label %_ZL28benchForTruncOrZextVecInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i104.i

delete.notnull.i.i104.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad46.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

for.body53.i:                                     ; preds = %for.body53.i.preheader, %invoke.cont58.i
  %__begin1.sroa.0.0145.i = phi i64 [ %dec.i.i, %invoke.cont58.i ], [ %43, %for.body53.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %54, i64 10000
  %bound0 = icmp ult ptr %54, %scevgep30
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13.preheader, label %vector.body36

vector.body36:                                    ; preds = %for.body53.i, %vector.body36
  %index37 = phi i64 [ %index.next42, %vector.body36 ], [ 0, %for.body53.i ]
  %55 = getelementptr inbounds i32, ptr %call.i, i64 %index37
  %wide.load38 = load <8 x i32>, ptr %55, align 4, !tbaa !95, !alias.scope !100
  %56 = getelementptr inbounds i32, ptr %55, i64 8
  %wide.load39 = load <8 x i32>, ptr %56, align 4, !tbaa !95, !alias.scope !100
  %57 = getelementptr inbounds i32, ptr %55, i64 16
  %wide.load40 = load <8 x i32>, ptr %57, align 4, !tbaa !95, !alias.scope !100
  %58 = getelementptr inbounds i32, ptr %55, i64 24
  %wide.load41 = load <8 x i32>, ptr %58, align 4, !tbaa !95, !alias.scope !100
  %59 = trunc <8 x i32> %wide.load38 to <8 x i8>
  %60 = trunc <8 x i32> %wide.load39 to <8 x i8>
  %61 = trunc <8 x i32> %wide.load40 to <8 x i8>
  %62 = trunc <8 x i32> %wide.load41 to <8 x i8>
  %63 = getelementptr inbounds i8, ptr %54, i64 %index37
  store <8 x i8> %59, ptr %63, align 1, !tbaa !16, !alias.scope !103, !noalias !100
  %64 = getelementptr inbounds i8, ptr %63, i64 8
  store <8 x i8> %60, ptr %64, align 1, !tbaa !16, !alias.scope !103, !noalias !100
  %65 = getelementptr inbounds i8, ptr %63, i64 16
  store <8 x i8> %61, ptr %65, align 1, !tbaa !16, !alias.scope !103, !noalias !100
  %66 = getelementptr inbounds i8, ptr %63, i64 24
  store <8 x i8> %62, ptr %66, align 1, !tbaa !16, !alias.scope !103, !noalias !100
  %index.next42 = add nuw i64 %index37, 32
  %67 = icmp eq i64 %index.next42, 9984
  br i1 %67, label %for.body.i13.preheader, label %vector.body36, !llvm.loop !105

for.body.i13.preheader:                           ; preds = %vector.body36, %for.body53.i
  %indvars.iv.i7.ph = phi i64 [ 0, %for.body53.i ], [ 9984, %vector.body36 ]
  br label %for.body.i13

for.body.i13:                                     ; preds = %for.body.i13, %for.body.i13.preheader
  %indvars.iv.i7 = phi i64 [ %indvars.iv.i7.ph, %for.body.i13.preheader ], [ %indvars.iv.next.i11.3, %for.body.i13 ]
  %arrayidx.i8 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i7
  %68 = load i32, ptr %arrayidx.i8, align 4, !tbaa !95
  %conv.i9 = trunc i32 %68 to i8
  %arrayidx2.i10 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.i7
  store i8 %conv.i9, ptr %arrayidx2.i10, align 1, !tbaa !16
  %indvars.iv.next.i11 = or i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i11
  %69 = load i32, ptr %arrayidx.i8.1, align 4, !tbaa !95
  %conv.i9.1 = trunc i32 %69 to i8
  %arrayidx2.i10.1 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11
  store i8 %conv.i9.1, ptr %arrayidx2.i10.1, align 1, !tbaa !16
  %indvars.iv.next.i11.1 = or i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i11.1
  %70 = load i32, ptr %arrayidx.i8.2, align 4, !tbaa !95
  %conv.i9.2 = trunc i32 %70 to i8
  %arrayidx2.i10.2 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11.1
  store i8 %conv.i9.2, ptr %arrayidx2.i10.2, align 1, !tbaa !16
  %indvars.iv.next.i11.2 = or i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i11.2
  %71 = load i32, ptr %arrayidx.i8.3, align 4, !tbaa !95
  %conv.i9.3 = trunc i32 %71 to i8
  %arrayidx2.i10.3 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11.2
  store i8 %conv.i9.3, ptr %arrayidx2.i10.3, align 1, !tbaa !16
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %exitcond.not.i12.3 = icmp eq i64 %indvars.iv.next.i11.3, 10000
  br i1 %exitcond.not.i12.3, label %invoke.cont58.i, label %for.body.i13, !llvm.loop !106

invoke.cont58.i:                                  ; preds = %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0145.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body53.i, !prof !42

ehcleanup65.i:                                    ; preds = %lpad46.i, %lpad21.i, %lpad5.loopexit.i
  %.pn134.i = phi { ptr, i32 } [ %50, %lpad21.i ], [ %52, %lpad46.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i114.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i114.i, label %ehcleanup67.i, label %delete.notnull.i.i115.i

delete.notnull.i.i115.i:                          ; preds = %ehcleanup65.i, %ehcleanup65.thread.i
  %.pn134.pn140.i = phi { ptr, i32 } [ %45, %ehcleanup65.thread.i ], [ %.pn134.i, %ehcleanup65.i ]
  %72 = phi ptr [ %call1.i, %ehcleanup65.thread.i ], [ %.pr.i, %ehcleanup65.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup67.i

ehcleanup67.i:                                    ; preds = %delete.notnull.i.i115.i, %ehcleanup65.i, %lpad.i
  %.pn134.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn134.i, %ehcleanup65.i ], [ %.pn134.pn140.i, %delete.notnull.i.i115.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn134.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i104.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont3.i unwind label %ehcleanup65.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i79.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i79.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  br label %for.body.i83.i

for.body.i83.i:                                   ; preds = %for.body.i83.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i80.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i81.i.4, %for.body.i83.i ]
  %arrayidx.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i80.i
  %0 = load i32, ptr %arrayidx.i.i, align 4, !tbaa !95
  %conv.i.i = trunc i32 %0 to i8
  %arrayidx2.i.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i80.i
  store i8 %conv.i.i, ptr %arrayidx2.i.i, align 1, !tbaa !16
  %indvars.iv.next.i81.i = add nuw nsw i64 %indvars.iv.i80.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i81.i
  %1 = load i32, ptr %arrayidx.i.i.1, align 4, !tbaa !95
  %conv.i.i.1 = trunc i32 %1 to i8
  %arrayidx2.i.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i
  store i8 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 1, !tbaa !16
  %indvars.iv.next.i81.i.1 = add nuw nsw i64 %indvars.iv.i80.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i81.i.1
  %2 = load i32, ptr %arrayidx.i.i.2, align 4, !tbaa !95
  %conv.i.i.2 = trunc i32 %2 to i8
  %arrayidx2.i.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.1
  store i8 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 1, !tbaa !16
  %indvars.iv.next.i81.i.2 = add nuw nsw i64 %indvars.iv.i80.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i81.i.2
  %3 = load i32, ptr %arrayidx.i.i.3, align 4, !tbaa !95
  %conv.i.i.3 = trunc i32 %3 to i8
  %arrayidx2.i.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.2
  store i8 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 1, !tbaa !16
  %indvars.iv.next.i81.i.3 = add nuw nsw i64 %indvars.iv.i80.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i81.i.3
  %4 = load i32, ptr %arrayidx.i.i.4, align 4, !tbaa !95
  %conv.i.i.4 = trunc i32 %4 to i8
  %arrayidx2.i.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.3
  store i8 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 1, !tbaa !16
  %indvars.iv.next.i81.i.4 = add nuw nsw i64 %indvars.iv.i80.i, 5
  %exitcond.not.i82.i.4 = icmp eq i64 %indvars.iv.next.i81.i.4, 10000
  br i1 %exitcond.not.i82.i.4, label %vector.body, label %for.body.i83.i, !llvm.loop !97

vector.body:                                      ; preds = %for.body.i83.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i83.i ]
  %5 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <16 x i32>, ptr %5, align 4, !tbaa !95
  %6 = getelementptr inbounds i32, ptr %5, i64 16
  %wide.load27 = load <16 x i32>, ptr %6, align 4, !tbaa !95
  %7 = getelementptr inbounds i32, ptr %5, i64 32
  %wide.load28 = load <16 x i32>, ptr %7, align 4, !tbaa !95
  %8 = getelementptr inbounds i32, ptr %5, i64 48
  %wide.load29 = load <16 x i32>, ptr %8, align 4, !tbaa !95
  %9 = trunc <16 x i32> %wide.load to <16 x i8>
  %10 = trunc <16 x i32> %wide.load27 to <16 x i8>
  %11 = trunc <16 x i32> %wide.load28 to <16 x i8>
  %12 = trunc <16 x i32> %wide.load29 to <16 x i8>
  %13 = getelementptr inbounds i8, ptr %call1.i, i64 %index
  store <16 x i8> %9, ptr %13, align 1, !tbaa !16
  %14 = getelementptr inbounds i8, ptr %13, i64 16
  store <16 x i8> %10, ptr %14, align 1, !tbaa !16
  %15 = getelementptr inbounds i8, ptr %13, i64 32
  store <16 x i8> %11, ptr %15, align 1, !tbaa !16
  %16 = getelementptr inbounds i8, ptr %13, i64 48
  store <16 x i8> %12, ptr %16, align 1, !tbaa !16
  %index.next = add nuw i64 %index, 64
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !107

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i32, ptr %call.i, i64 9984
  %18 = load i32, ptr %arrayidx.i, align 4, !tbaa !95
  %conv.i = trunc i32 %18 to i8
  %arrayidx2.i = getelementptr inbounds i8, ptr %call1.i, i64 9984
  store i8 %conv.i, ptr %arrayidx2.i, align 1, !tbaa !16
  %arrayidx.i.1 = getelementptr inbounds i32, ptr %call.i, i64 9985
  %19 = load i32, ptr %arrayidx.i.1, align 4, !tbaa !95
  %conv.i.1 = trunc i32 %19 to i8
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %call1.i, i64 9985
  store i8 %conv.i.1, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %arrayidx.i.2 = getelementptr inbounds i32, ptr %call.i, i64 9986
  %20 = load i32, ptr %arrayidx.i.2, align 4, !tbaa !95
  %conv.i.2 = trunc i32 %20 to i8
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %call1.i, i64 9986
  store i8 %conv.i.2, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %arrayidx.i.3 = getelementptr inbounds i32, ptr %call.i, i64 9987
  %21 = load i32, ptr %arrayidx.i.3, align 4, !tbaa !95
  %conv.i.3 = trunc i32 %21 to i8
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %call1.i, i64 9987
  store i8 %conv.i.3, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %arrayidx.i.4 = getelementptr inbounds i32, ptr %call.i, i64 9988
  %22 = load i32, ptr %arrayidx.i.4, align 4, !tbaa !95
  %conv.i.4 = trunc i32 %22 to i8
  %arrayidx2.i.4 = getelementptr inbounds i8, ptr %call1.i, i64 9988
  store i8 %conv.i.4, ptr %arrayidx2.i.4, align 1, !tbaa !16
  %arrayidx.i.5 = getelementptr inbounds i32, ptr %call.i, i64 9989
  %23 = load i32, ptr %arrayidx.i.5, align 4, !tbaa !95
  %conv.i.5 = trunc i32 %23 to i8
  %arrayidx2.i.5 = getelementptr inbounds i8, ptr %call1.i, i64 9989
  store i8 %conv.i.5, ptr %arrayidx2.i.5, align 1, !tbaa !16
  %arrayidx.i.6 = getelementptr inbounds i32, ptr %call.i, i64 9990
  %24 = load i32, ptr %arrayidx.i.6, align 4, !tbaa !95
  %conv.i.6 = trunc i32 %24 to i8
  %arrayidx2.i.6 = getelementptr inbounds i8, ptr %call1.i, i64 9990
  store i8 %conv.i.6, ptr %arrayidx2.i.6, align 1, !tbaa !16
  %arrayidx.i.7 = getelementptr inbounds i32, ptr %call.i, i64 9991
  %25 = load i32, ptr %arrayidx.i.7, align 4, !tbaa !95
  %conv.i.7 = trunc i32 %25 to i8
  %arrayidx2.i.7 = getelementptr inbounds i8, ptr %call1.i, i64 9991
  store i8 %conv.i.7, ptr %arrayidx2.i.7, align 1, !tbaa !16
  %arrayidx.i.8 = getelementptr inbounds i32, ptr %call.i, i64 9992
  %26 = load i32, ptr %arrayidx.i.8, align 4, !tbaa !95
  %conv.i.8 = trunc i32 %26 to i8
  %arrayidx2.i.8 = getelementptr inbounds i8, ptr %call1.i, i64 9992
  store i8 %conv.i.8, ptr %arrayidx2.i.8, align 1, !tbaa !16
  %arrayidx.i.9 = getelementptr inbounds i32, ptr %call.i, i64 9993
  %27 = load i32, ptr %arrayidx.i.9, align 4, !tbaa !95
  %conv.i.9 = trunc i32 %27 to i8
  %arrayidx2.i.9 = getelementptr inbounds i8, ptr %call1.i, i64 9993
  store i8 %conv.i.9, ptr %arrayidx2.i.9, align 1, !tbaa !16
  %arrayidx.i.10 = getelementptr inbounds i32, ptr %call.i, i64 9994
  %28 = load i32, ptr %arrayidx.i.10, align 4, !tbaa !95
  %conv.i.10 = trunc i32 %28 to i8
  %arrayidx2.i.10 = getelementptr inbounds i8, ptr %call1.i, i64 9994
  store i8 %conv.i.10, ptr %arrayidx2.i.10, align 1, !tbaa !16
  %arrayidx.i.11 = getelementptr inbounds i32, ptr %call.i, i64 9995
  %29 = load i32, ptr %arrayidx.i.11, align 4, !tbaa !95
  %conv.i.11 = trunc i32 %29 to i8
  %arrayidx2.i.11 = getelementptr inbounds i8, ptr %call1.i, i64 9995
  store i8 %conv.i.11, ptr %arrayidx2.i.11, align 1, !tbaa !16
  %arrayidx.i.12 = getelementptr inbounds i32, ptr %call.i, i64 9996
  %30 = load i32, ptr %arrayidx.i.12, align 4, !tbaa !95
  %conv.i.12 = trunc i32 %30 to i8
  %arrayidx2.i.12 = getelementptr inbounds i8, ptr %call1.i, i64 9996
  store i8 %conv.i.12, ptr %arrayidx2.i.12, align 1, !tbaa !16
  %arrayidx.i.13 = getelementptr inbounds i32, ptr %call.i, i64 9997
  %31 = load i32, ptr %arrayidx.i.13, align 4, !tbaa !95
  %conv.i.13 = trunc i32 %31 to i8
  %arrayidx2.i.13 = getelementptr inbounds i8, ptr %call1.i, i64 9997
  store i8 %conv.i.13, ptr %arrayidx2.i.13, align 1, !tbaa !16
  %arrayidx.i.14 = getelementptr inbounds i32, ptr %call.i, i64 9998
  %32 = load i32, ptr %arrayidx.i.14, align 4, !tbaa !95
  %conv.i.14 = trunc i32 %32 to i8
  %arrayidx2.i.14 = getelementptr inbounds i8, ptr %call1.i, i64 9998
  store i8 %conv.i.14, ptr %arrayidx2.i.14, align 1, !tbaa !16
  %arrayidx.i.15 = getelementptr inbounds i32, ptr %call.i, i64 9999
  %33 = load i32, ptr %arrayidx.i.15, align 4, !tbaa !95
  %conv.i.15 = trunc i32 %33 to i8
  %arrayidx2.i.15 = getelementptr inbounds i8, ptr %call1.i, i64 9999
  store i8 %conv.i.15, ptr %arrayidx2.i.15, align 1, !tbaa !16
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i84.i.1 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i8, ptr %arrayidx.i84.i.1, align 1, !tbaa !16
  %arrayidx.i85.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i8, ptr %arrayidx.i85.i.1, align 1, !tbaa !16
  %cmp20.not.i.1 = icmp eq i8 %34, %35
  br i1 %cmp20.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i84.i.2 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i8, ptr %arrayidx.i84.i.2, align 1, !tbaa !16
  %arrayidx.i85.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i8, ptr %arrayidx.i85.i.2, align 1, !tbaa !16
  %cmp20.not.i.2 = icmp eq i8 %36, %37
  br i1 %cmp20.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i84.i.3 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i8, ptr %arrayidx.i84.i.3, align 1, !tbaa !16
  %arrayidx.i85.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i8, ptr %arrayidx.i85.i.3, align 1, !tbaa !16
  %cmp20.not.i.3 = icmp eq i8 %38, %39
  br i1 %cmp20.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i84.i.4 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i8, ptr %arrayidx.i84.i.4, align 1, !tbaa !16
  %arrayidx.i85.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i8, ptr %arrayidx.i85.i.4, align 1, !tbaa !16
  %cmp20.not.i.4 = icmp eq i8 %40, %41
  br i1 %cmp20.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !99

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond49.preheader.i unwind label %lpad46.i

for.cond49.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not144148.i = icmp eq i64 %43, 0
  %cmp.not.i.not144.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not144148.i
  br i1 %cmp.not.i.not144.i, label %if.end.i.i, label %for.body53.i.preheader, !prof !42

for.body53.i.preheader:                           ; preds = %for.cond49.preheader.i
  %scevgep30 = getelementptr i8, ptr %call.i, i64 40000
  br label %for.body53.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup67.i

ehcleanup65.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i115.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i84.i = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i8, ptr %arrayidx.i84.i, align 1, !tbaa !16
  %arrayidx.i85.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i8, ptr %arrayidx.i85.i, align 1, !tbaa !16
  %cmp20.not.i = icmp eq i8 %46, %47
  br i1 %cmp20.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i8 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i84.i.le = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont22.i unwind label %lpad21.i

invoke.cont22.i:                                  ; preds = %if.then.i
  %arrayidx.i88.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i32, ptr %arrayidx.i88.i, align 4, !tbaa !95
  %conv.i89.i = zext i32 %48 to i64
  %call.i90.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i89.i)
          to label %invoke.cont27.i unwind label %lpad21.i

invoke.cont27.i:                                  ; preds = %invoke.cont22.i
  %call1.i93.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont29.i unwind label %lpad21.i

invoke.cont29.i:                                  ; preds = %invoke.cont27.i
  %49 = load i8, ptr %arrayidx.i84.i.le, align 1, !tbaa !16
  %call34.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, i8 noundef zeroext %49)
          to label %invoke.cont33.i unwind label %lpad21.i

invoke.cont33.i:                                  ; preds = %invoke.cont29.i
  %call1.i98.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call34.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont35.i unwind label %lpad21.i

invoke.cont35.i:                                  ; preds = %invoke.cont33.i
  %call40.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call34.i, i8 noundef zeroext %.lcssa)
          to label %invoke.cont39.i unwind label %lpad21.i

invoke.cont39.i:                                  ; preds = %invoke.cont35.i
  %call42.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call40.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont41.i unwind label %lpad21.i

invoke.cont41.i:                                  ; preds = %invoke.cont39.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad21.i:                                         ; preds = %invoke.cont39.i, %invoke.cont35.i, %invoke.cont33.i, %invoke.cont29.i, %invoke.cont27.i, %invoke.cont22.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

if.end.i.i:                                       ; preds = %invoke.cont58.i, %for.cond49.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad46.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i103.i = icmp eq ptr %51, null
  br i1 %cmp.not.i103.i, label %_ZL28benchForTruncOrZextVecInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i104.i

delete.notnull.i.i104.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad46.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

for.body53.i:                                     ; preds = %for.body53.i.preheader, %invoke.cont58.i
  %__begin1.sroa.0.0145.i = phi i64 [ %dec.i.i, %invoke.cont58.i ], [ %43, %for.body53.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %54, i64 10000
  %bound0 = icmp ult ptr %54, %scevgep30
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13.preheader, label %vector.body36

vector.body36:                                    ; preds = %for.body53.i, %vector.body36
  %index37 = phi i64 [ %index.next42, %vector.body36 ], [ 0, %for.body53.i ]
  %55 = getelementptr inbounds i32, ptr %call.i, i64 %index37
  %wide.load38 = load <16 x i32>, ptr %55, align 4, !tbaa !95, !alias.scope !108
  %56 = getelementptr inbounds i32, ptr %55, i64 16
  %wide.load39 = load <16 x i32>, ptr %56, align 4, !tbaa !95, !alias.scope !108
  %57 = getelementptr inbounds i32, ptr %55, i64 32
  %wide.load40 = load <16 x i32>, ptr %57, align 4, !tbaa !95, !alias.scope !108
  %58 = getelementptr inbounds i32, ptr %55, i64 48
  %wide.load41 = load <16 x i32>, ptr %58, align 4, !tbaa !95, !alias.scope !108
  %59 = trunc <16 x i32> %wide.load38 to <16 x i8>
  %60 = trunc <16 x i32> %wide.load39 to <16 x i8>
  %61 = trunc <16 x i32> %wide.load40 to <16 x i8>
  %62 = trunc <16 x i32> %wide.load41 to <16 x i8>
  %63 = getelementptr inbounds i8, ptr %54, i64 %index37
  store <16 x i8> %59, ptr %63, align 1, !tbaa !16, !alias.scope !111, !noalias !108
  %64 = getelementptr inbounds i8, ptr %63, i64 16
  store <16 x i8> %60, ptr %64, align 1, !tbaa !16, !alias.scope !111, !noalias !108
  %65 = getelementptr inbounds i8, ptr %63, i64 32
  store <16 x i8> %61, ptr %65, align 1, !tbaa !16, !alias.scope !111, !noalias !108
  %66 = getelementptr inbounds i8, ptr %63, i64 48
  store <16 x i8> %62, ptr %66, align 1, !tbaa !16, !alias.scope !111, !noalias !108
  %index.next42 = add nuw i64 %index37, 64
  %67 = icmp eq i64 %index.next42, 9984
  br i1 %67, label %for.body.i13.preheader, label %vector.body36, !llvm.loop !113

for.body.i13.preheader:                           ; preds = %vector.body36, %for.body53.i
  %indvars.iv.i7.ph = phi i64 [ 0, %for.body53.i ], [ 9984, %vector.body36 ]
  br label %for.body.i13

for.body.i13:                                     ; preds = %for.body.i13, %for.body.i13.preheader
  %indvars.iv.i7 = phi i64 [ %indvars.iv.i7.ph, %for.body.i13.preheader ], [ %indvars.iv.next.i11.3, %for.body.i13 ]
  %arrayidx.i8 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i7
  %68 = load i32, ptr %arrayidx.i8, align 4, !tbaa !95
  %conv.i9 = trunc i32 %68 to i8
  %arrayidx2.i10 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.i7
  store i8 %conv.i9, ptr %arrayidx2.i10, align 1, !tbaa !16
  %indvars.iv.next.i11 = or i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i11
  %69 = load i32, ptr %arrayidx.i8.1, align 4, !tbaa !95
  %conv.i9.1 = trunc i32 %69 to i8
  %arrayidx2.i10.1 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11
  store i8 %conv.i9.1, ptr %arrayidx2.i10.1, align 1, !tbaa !16
  %indvars.iv.next.i11.1 = or i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i11.1
  %70 = load i32, ptr %arrayidx.i8.2, align 4, !tbaa !95
  %conv.i9.2 = trunc i32 %70 to i8
  %arrayidx2.i10.2 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11.1
  store i8 %conv.i9.2, ptr %arrayidx2.i10.2, align 1, !tbaa !16
  %indvars.iv.next.i11.2 = or i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i11.2
  %71 = load i32, ptr %arrayidx.i8.3, align 4, !tbaa !95
  %conv.i9.3 = trunc i32 %71 to i8
  %arrayidx2.i10.3 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11.2
  store i8 %conv.i9.3, ptr %arrayidx2.i10.3, align 1, !tbaa !16
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %exitcond.not.i12.3 = icmp eq i64 %indvars.iv.next.i11.3, 10000
  br i1 %exitcond.not.i12.3, label %invoke.cont58.i, label %for.body.i13, !llvm.loop !114

invoke.cont58.i:                                  ; preds = %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0145.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body53.i, !prof !42

ehcleanup65.i:                                    ; preds = %lpad46.i, %lpad21.i, %lpad5.loopexit.i
  %.pn134.i = phi { ptr, i32 } [ %50, %lpad21.i ], [ %52, %lpad46.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i114.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i114.i, label %ehcleanup67.i, label %delete.notnull.i.i115.i

delete.notnull.i.i115.i:                          ; preds = %ehcleanup65.i, %ehcleanup65.thread.i
  %.pn134.pn140.i = phi { ptr, i32 } [ %45, %ehcleanup65.thread.i ], [ %.pn134.i, %ehcleanup65.i ]
  %72 = phi ptr [ %call1.i, %ehcleanup65.thread.i ], [ %.pr.i, %ehcleanup65.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup67.i

ehcleanup67.i:                                    ; preds = %delete.notnull.i.i115.i, %ehcleanup65.i, %lpad.i
  %.pn134.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn134.i, %ehcleanup65.i ], [ %.pn134.pn140.i, %delete.notnull.i.i115.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn134.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i104.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z53benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont3.i unwind label %ehcleanup65.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i79.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i79.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  br label %for.body.i83.i

for.body.i83.i:                                   ; preds = %for.body.i83.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i80.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i81.i.4, %for.body.i83.i ]
  %arrayidx.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i80.i
  %0 = load i32, ptr %arrayidx.i.i, align 4, !tbaa !95
  %conv.i.i = trunc i32 %0 to i8
  %arrayidx2.i.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i80.i
  store i8 %conv.i.i, ptr %arrayidx2.i.i, align 1, !tbaa !16
  %indvars.iv.next.i81.i = add nuw nsw i64 %indvars.iv.i80.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i81.i
  %1 = load i32, ptr %arrayidx.i.i.1, align 4, !tbaa !95
  %conv.i.i.1 = trunc i32 %1 to i8
  %arrayidx2.i.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i
  store i8 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 1, !tbaa !16
  %indvars.iv.next.i81.i.1 = add nuw nsw i64 %indvars.iv.i80.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i81.i.1
  %2 = load i32, ptr %arrayidx.i.i.2, align 4, !tbaa !95
  %conv.i.i.2 = trunc i32 %2 to i8
  %arrayidx2.i.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.1
  store i8 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 1, !tbaa !16
  %indvars.iv.next.i81.i.2 = add nuw nsw i64 %indvars.iv.i80.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i81.i.2
  %3 = load i32, ptr %arrayidx.i.i.3, align 4, !tbaa !95
  %conv.i.i.3 = trunc i32 %3 to i8
  %arrayidx2.i.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.2
  store i8 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 1, !tbaa !16
  %indvars.iv.next.i81.i.3 = add nuw nsw i64 %indvars.iv.i80.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i81.i.3
  %4 = load i32, ptr %arrayidx.i.i.4, align 4, !tbaa !95
  %conv.i.i.4 = trunc i32 %4 to i8
  %arrayidx2.i.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.3
  store i8 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 1, !tbaa !16
  %indvars.iv.next.i81.i.4 = add nuw nsw i64 %indvars.iv.i80.i, 5
  %exitcond.not.i82.i.4 = icmp eq i64 %indvars.iv.next.i81.i.4, 10000
  br i1 %exitcond.not.i82.i.4, label %vector.body, label %for.body.i83.i, !llvm.loop !97

vector.body:                                      ; preds = %for.body.i83.i, %vector.body
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %for.body.i83.i ]
  %5 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <4 x i32>, ptr %5, align 4, !tbaa !95
  %6 = getelementptr inbounds i32, ptr %5, i64 4
  %wide.load27 = load <4 x i32>, ptr %6, align 4, !tbaa !95
  %7 = trunc <4 x i32> %wide.load to <4 x i8>
  %8 = trunc <4 x i32> %wide.load27 to <4 x i8>
  %9 = getelementptr inbounds i8, ptr %call1.i, i64 %index
  store <4 x i8> %7, ptr %9, align 1, !tbaa !16
  %10 = getelementptr inbounds i8, ptr %9, i64 4
  store <4 x i8> %8, ptr %10, align 1, !tbaa !16
  %index.next = or i64 %index, 8
  %11 = getelementptr inbounds i32, ptr %call.i, i64 %index.next
  %wide.load.1 = load <4 x i32>, ptr %11, align 4, !tbaa !95
  %12 = getelementptr inbounds i32, ptr %11, i64 4
  %wide.load27.1 = load <4 x i32>, ptr %12, align 4, !tbaa !95
  %13 = trunc <4 x i32> %wide.load.1 to <4 x i8>
  %14 = trunc <4 x i32> %wide.load27.1 to <4 x i8>
  %15 = getelementptr inbounds i8, ptr %call1.i, i64 %index.next
  store <4 x i8> %13, ptr %15, align 1, !tbaa !16
  %16 = getelementptr inbounds i8, ptr %15, i64 4
  store <4 x i8> %14, ptr %16, align 1, !tbaa !16
  %index.next.1 = add nuw nsw i64 %index, 16
  %17 = icmp eq i64 %index.next.1, 10000
  br i1 %17, label %for.body.i, label %vector.body, !llvm.loop !115

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i84.i.1 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i
  %18 = load i8, ptr %arrayidx.i84.i.1, align 1, !tbaa !16
  %arrayidx.i85.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i
  %19 = load i8, ptr %arrayidx.i85.i.1, align 1, !tbaa !16
  %cmp20.not.i.1 = icmp eq i8 %18, %19
  br i1 %cmp20.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i84.i.2 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.1
  %20 = load i8, ptr %arrayidx.i84.i.2, align 1, !tbaa !16
  %arrayidx.i85.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.1
  %21 = load i8, ptr %arrayidx.i85.i.2, align 1, !tbaa !16
  %cmp20.not.i.2 = icmp eq i8 %20, %21
  br i1 %cmp20.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i84.i.3 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.2
  %22 = load i8, ptr %arrayidx.i84.i.3, align 1, !tbaa !16
  %arrayidx.i85.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.2
  %23 = load i8, ptr %arrayidx.i85.i.3, align 1, !tbaa !16
  %cmp20.not.i.3 = icmp eq i8 %22, %23
  br i1 %cmp20.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i84.i.4 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.3
  %24 = load i8, ptr %arrayidx.i84.i.4, align 1, !tbaa !16
  %arrayidx.i85.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.3
  %25 = load i8, ptr %arrayidx.i85.i.4, align 1, !tbaa !16
  %cmp20.not.i.4 = icmp eq i8 %24, %25
  br i1 %cmp20.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !99

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %26 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %27 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond49.preheader.i unwind label %lpad46.i

for.cond49.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %26, 0
  %cmp.not.i.not144148.i = icmp eq i64 %27, 0
  %cmp.not.i.not144.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not144148.i
  br i1 %cmp.not.i.not144.i, label %if.end.i.i, label %for.body53.i.preheader, !prof !42

for.body53.i.preheader:                           ; preds = %for.cond49.preheader.i
  %scevgep28 = getelementptr i8, ptr %call.i, i64 40000
  br label %for.body53.i

lpad.i:                                           ; preds = %entry
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup67.i

ehcleanup65.thread.i:                             ; preds = %invoke.cont.i
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i115.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

for.body.i:                                       ; preds = %vector.body, %for.cond.i.4
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.4, %for.cond.i.4 ], [ 0, %vector.body ]
  %arrayidx.i84.i = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i
  %30 = load i8, ptr %arrayidx.i84.i, align 1, !tbaa !16
  %arrayidx.i85.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i
  %31 = load i8, ptr %arrayidx.i85.i, align 1, !tbaa !16
  %cmp20.not.i = icmp eq i8 %30, %31
  br i1 %cmp20.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i8 [ %31, %for.body.i ], [ %19, %for.cond.i ], [ %21, %for.cond.i.1 ], [ %23, %for.cond.i.2 ], [ %25, %for.cond.i.3 ]
  %arrayidx.i84.i.le = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont22.i unwind label %lpad21.i

invoke.cont22.i:                                  ; preds = %if.then.i
  %arrayidx.i88.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.lcssa
  %32 = load i32, ptr %arrayidx.i88.i, align 4, !tbaa !95
  %conv.i89.i = zext i32 %32 to i64
  %call.i90.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i89.i)
          to label %invoke.cont27.i unwind label %lpad21.i

invoke.cont27.i:                                  ; preds = %invoke.cont22.i
  %call1.i93.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont29.i unwind label %lpad21.i

invoke.cont29.i:                                  ; preds = %invoke.cont27.i
  %33 = load i8, ptr %arrayidx.i84.i.le, align 1, !tbaa !16
  %call34.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, i8 noundef zeroext %33)
          to label %invoke.cont33.i unwind label %lpad21.i

invoke.cont33.i:                                  ; preds = %invoke.cont29.i
  %call1.i98.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call34.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont35.i unwind label %lpad21.i

invoke.cont35.i:                                  ; preds = %invoke.cont33.i
  %call40.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call34.i, i8 noundef zeroext %.lcssa)
          to label %invoke.cont39.i unwind label %lpad21.i

invoke.cont39.i:                                  ; preds = %invoke.cont35.i
  %call42.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call40.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont41.i unwind label %lpad21.i

invoke.cont41.i:                                  ; preds = %invoke.cont39.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad21.i:                                         ; preds = %invoke.cont39.i, %invoke.cont35.i, %invoke.cont33.i, %invoke.cont29.i, %invoke.cont27.i, %invoke.cont22.i, %if.then.i
  %34 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

if.end.i.i:                                       ; preds = %invoke.cont58.i, %for.cond49.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad46.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %35 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i103.i = icmp eq ptr %35, null
  br i1 %cmp.not.i103.i, label %_ZL28benchForTruncOrZextVecInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i104.i

delete.notnull.i.i104.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %35) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad46.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

for.body53.i:                                     ; preds = %for.body53.i.preheader, %invoke.cont58.i
  %__begin1.sroa.0.0145.i = phi i64 [ %dec.i.i, %invoke.cont58.i ], [ %27, %for.body53.i.preheader ]
  %37 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %37) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %38 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %38, i64 10000
  %bound0 = icmp ult ptr %38, %scevgep28
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13, label %vector.body34

vector.body34:                                    ; preds = %for.body53.i, %vector.body34
  %index35 = phi i64 [ %index.next38.1, %vector.body34 ], [ 0, %for.body53.i ]
  %39 = getelementptr inbounds i32, ptr %call.i, i64 %index35
  %wide.load36 = load <4 x i32>, ptr %39, align 4, !tbaa !95, !alias.scope !116
  %40 = getelementptr inbounds i32, ptr %39, i64 4
  %wide.load37 = load <4 x i32>, ptr %40, align 4, !tbaa !95, !alias.scope !116
  %41 = trunc <4 x i32> %wide.load36 to <4 x i8>
  %42 = trunc <4 x i32> %wide.load37 to <4 x i8>
  %43 = getelementptr inbounds i8, ptr %38, i64 %index35
  store <4 x i8> %41, ptr %43, align 1, !tbaa !16, !alias.scope !119, !noalias !116
  %44 = getelementptr inbounds i8, ptr %43, i64 4
  store <4 x i8> %42, ptr %44, align 1, !tbaa !16, !alias.scope !119, !noalias !116
  %index.next38 = or i64 %index35, 8
  %45 = getelementptr inbounds i32, ptr %call.i, i64 %index.next38
  %wide.load36.1 = load <4 x i32>, ptr %45, align 4, !tbaa !95, !alias.scope !116
  %46 = getelementptr inbounds i32, ptr %45, i64 4
  %wide.load37.1 = load <4 x i32>, ptr %46, align 4, !tbaa !95, !alias.scope !116
  %47 = trunc <4 x i32> %wide.load36.1 to <4 x i8>
  %48 = trunc <4 x i32> %wide.load37.1 to <4 x i8>
  %49 = getelementptr inbounds i8, ptr %38, i64 %index.next38
  store <4 x i8> %47, ptr %49, align 1, !tbaa !16, !alias.scope !119, !noalias !116
  %50 = getelementptr inbounds i8, ptr %49, i64 4
  store <4 x i8> %48, ptr %50, align 1, !tbaa !16, !alias.scope !119, !noalias !116
  %index.next38.1 = add nuw nsw i64 %index35, 16
  %51 = icmp eq i64 %index.next38.1, 10000
  br i1 %51, label %invoke.cont58.i, label %vector.body34, !llvm.loop !121

for.body.i13:                                     ; preds = %for.body53.i, %for.body.i13
  %indvars.iv.i7 = phi i64 [ %indvars.iv.next.i11.4, %for.body.i13 ], [ 0, %for.body53.i ]
  %arrayidx.i8 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i7
  %52 = load i32, ptr %arrayidx.i8, align 4, !tbaa !95
  %conv.i9 = trunc i32 %52 to i8
  %arrayidx2.i10 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.i7
  store i8 %conv.i9, ptr %arrayidx2.i10, align 1, !tbaa !16
  %indvars.iv.next.i11 = add nuw nsw i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i11
  %53 = load i32, ptr %arrayidx.i8.1, align 4, !tbaa !95
  %conv.i9.1 = trunc i32 %53 to i8
  %arrayidx2.i10.1 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.next.i11
  store i8 %conv.i9.1, ptr %arrayidx2.i10.1, align 1, !tbaa !16
  %indvars.iv.next.i11.1 = add nuw nsw i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i11.1
  %54 = load i32, ptr %arrayidx.i8.2, align 4, !tbaa !95
  %conv.i9.2 = trunc i32 %54 to i8
  %arrayidx2.i10.2 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.next.i11.1
  store i8 %conv.i9.2, ptr %arrayidx2.i10.2, align 1, !tbaa !16
  %indvars.iv.next.i11.2 = add nuw nsw i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i11.2
  %55 = load i32, ptr %arrayidx.i8.3, align 4, !tbaa !95
  %conv.i9.3 = trunc i32 %55 to i8
  %arrayidx2.i10.3 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.next.i11.2
  store i8 %conv.i9.3, ptr %arrayidx2.i10.3, align 1, !tbaa !16
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %arrayidx.i8.4 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i11.3
  %56 = load i32, ptr %arrayidx.i8.4, align 4, !tbaa !95
  %conv.i9.4 = trunc i32 %56 to i8
  %arrayidx2.i10.4 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.next.i11.3
  store i8 %conv.i9.4, ptr %arrayidx2.i10.4, align 1, !tbaa !16
  %indvars.iv.next.i11.4 = add nuw nsw i64 %indvars.iv.i7, 5
  %exitcond.not.i12.4 = icmp eq i64 %indvars.iv.next.i11.4, 10000
  br i1 %exitcond.not.i12.4, label %invoke.cont58.i, label %for.body.i13, !llvm.loop !122

invoke.cont58.i:                                  ; preds = %vector.body34, %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0145.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body53.i, !prof !42

ehcleanup65.i:                                    ; preds = %lpad46.i, %lpad21.i, %lpad5.loopexit.i
  %.pn134.i = phi { ptr, i32 } [ %34, %lpad21.i ], [ %36, %lpad46.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i114.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i114.i, label %ehcleanup67.i, label %delete.notnull.i.i115.i

delete.notnull.i.i115.i:                          ; preds = %ehcleanup65.i, %ehcleanup65.thread.i
  %.pn134.pn140.i = phi { ptr, i32 } [ %29, %ehcleanup65.thread.i ], [ %.pn134.i, %ehcleanup65.i ]
  %57 = phi ptr [ %call1.i, %ehcleanup65.thread.i ], [ %.pr.i, %ehcleanup65.i ]
  call void @_ZdaPv(ptr noundef nonnull %57) #13
  br label %ehcleanup67.i

ehcleanup67.i:                                    ; preds = %delete.notnull.i.i115.i, %ehcleanup65.i, %lpad.i
  %.pn134.pn.pn.i = phi { ptr, i32 } [ %28, %lpad.i ], [ %.pn134.i, %ehcleanup65.i ], [ %.pn134.pn140.i, %delete.notnull.i.i115.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn134.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i104.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i31.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  store i8 0, ptr %distrib.i32.i, align 1, !tbaa !67
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i33.i, align 1, !tbaa !69
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %0 = load ptr, ptr %B.i, align 8, !tbaa !5
  %arrayidx.i.i35.i = getelementptr inbounds i8, ptr %0, i64 %indvars.iv.i34.i
  store i8 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 1, !tbaa !16
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %1 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %2 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %lpad11.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %1, 0
  %cmp.not.i.not7173.i = icmp eq i64 %2, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep2 = getelementptr i8, ptr %call.i, i64 40000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i unwind label %lpad11.i

_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %3 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %3, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %3) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %4 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad11.i:                                         ; preds = %if.end.i.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %5 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %2, %for.body.i.preheader ]
  %6 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %6) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %7 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %7, i64 10000
  %bound0 = icmp ult ptr %7, %scevgep2
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1.preheader, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i ]
  %8 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <8 x i32>, ptr %8, align 4, !tbaa !95, !alias.scope !123
  %9 = getelementptr inbounds i32, ptr %8, i64 8
  %wide.load3 = load <8 x i32>, ptr %9, align 4, !tbaa !95, !alias.scope !123
  %10 = getelementptr inbounds i32, ptr %8, i64 16
  %wide.load4 = load <8 x i32>, ptr %10, align 4, !tbaa !95, !alias.scope !123
  %11 = getelementptr inbounds i32, ptr %8, i64 24
  %wide.load5 = load <8 x i32>, ptr %11, align 4, !tbaa !95, !alias.scope !123
  %12 = getelementptr inbounds i8, ptr %7, i64 %index
  %wide.load6 = load <8 x i8>, ptr %12, align 1, !tbaa !16, !alias.scope !126, !noalias !123
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  %wide.load7 = load <8 x i8>, ptr %13, align 1, !tbaa !16, !alias.scope !126, !noalias !123
  %14 = getelementptr inbounds i8, ptr %12, i64 16
  %wide.load8 = load <8 x i8>, ptr %14, align 1, !tbaa !16, !alias.scope !126, !noalias !123
  %15 = getelementptr inbounds i8, ptr %12, i64 24
  %wide.load9 = load <8 x i8>, ptr %15, align 1, !tbaa !16, !alias.scope !126, !noalias !123
  %16 = trunc <8 x i32> %wide.load to <8 x i8>
  %17 = trunc <8 x i32> %wide.load3 to <8 x i8>
  %18 = trunc <8 x i32> %wide.load4 to <8 x i8>
  %19 = trunc <8 x i32> %wide.load5 to <8 x i8>
  %20 = add <8 x i8> %wide.load6, %16
  %21 = add <8 x i8> %wide.load7, %17
  %22 = add <8 x i8> %wide.load8, %18
  %23 = add <8 x i8> %wide.load9, %19
  store <8 x i8> %20, ptr %12, align 1, !tbaa !16, !alias.scope !126, !noalias !123
  store <8 x i8> %21, ptr %13, align 1, !tbaa !16, !alias.scope !126, !noalias !123
  store <8 x i8> %22, ptr %14, align 1, !tbaa !16, !alias.scope !126, !noalias !123
  store <8 x i8> %23, ptr %15, align 1, !tbaa !16, !alias.scope !126, !noalias !123
  %index.next = add nuw i64 %index, 32
  %24 = icmp eq i64 %index.next, 9984
  br i1 %24, label %for.body.i1.preheader, label %vector.body, !llvm.loop !128

for.body.i1.preheader:                            ; preds = %vector.body, %for.body.i
  %indvars.iv.i.ph = phi i64 [ 0, %for.body.i ], [ 9984, %vector.body ]
  br label %for.body.i1

for.body.i1:                                      ; preds = %for.body.i1, %for.body.i1.preheader
  %indvars.iv.i = phi i64 [ %indvars.iv.i.ph, %for.body.i1.preheader ], [ %indvars.iv.next.i.3, %for.body.i1 ]
  %arrayidx.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i
  %25 = load i32, ptr %arrayidx.i, align 4, !tbaa !95
  %arrayidx2.i = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.i
  %26 = load i8, ptr %arrayidx2.i, align 1, !tbaa !16
  %27 = trunc i32 %25 to i8
  %conv3.i = add i8 %26, %27
  store i8 %conv3.i, ptr %arrayidx2.i, align 1, !tbaa !16
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i
  %28 = load i32, ptr %arrayidx.i.1, align 4, !tbaa !95
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i
  %29 = load i8, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %30 = trunc i32 %28 to i8
  %conv3.i.1 = add i8 %29, %30
  store i8 %conv3.i.1, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i.1
  %31 = load i32, ptr %arrayidx.i.2, align 4, !tbaa !95
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.1
  %32 = load i8, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %33 = trunc i32 %31 to i8
  %conv3.i.2 = add i8 %32, %33
  store i8 %conv3.i.2, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i.2
  %34 = load i32, ptr %arrayidx.i.3, align 4, !tbaa !95
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.2
  %35 = load i8, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %36 = trunc i32 %34 to i8
  %conv3.i.3 = add i8 %35, %36
  store i8 %conv3.i.3, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !129

invoke.cont19.i:                                  ; preds = %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %lpad11.i, %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i
  %.pn.pn.i = phi { ptr, i32 } [ %5, %lpad11.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ]
  %37 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %37, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %ehcleanup24.i
  call void @_ZdaPv(ptr noundef nonnull %37) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %4, %lpad.i ], [ %.pn.pn.i, %ehcleanup24.i ], [ %.pn.pn.i, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i31.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  store i8 0, ptr %distrib.i32.i, align 1, !tbaa !67
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i33.i, align 1, !tbaa !69
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %0 = load ptr, ptr %B.i, align 8, !tbaa !5
  %arrayidx.i.i35.i = getelementptr inbounds i8, ptr %0, i64 %indvars.iv.i34.i
  store i8 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 1, !tbaa !16
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %1 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %2 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %lpad11.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %1, 0
  %cmp.not.i.not7173.i = icmp eq i64 %2, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep2 = getelementptr i8, ptr %call.i, i64 40000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i unwind label %lpad11.i

_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %3 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %3, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %3) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %4 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad11.i:                                         ; preds = %if.end.i.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %5 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %2, %for.body.i.preheader ]
  %6 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %6) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %7 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %7, i64 10000
  %bound0 = icmp ult ptr %7, %scevgep2
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1.preheader, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i ]
  %8 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <16 x i32>, ptr %8, align 4, !tbaa !95, !alias.scope !130
  %9 = getelementptr inbounds i32, ptr %8, i64 16
  %wide.load3 = load <16 x i32>, ptr %9, align 4, !tbaa !95, !alias.scope !130
  %10 = getelementptr inbounds i32, ptr %8, i64 32
  %wide.load4 = load <16 x i32>, ptr %10, align 4, !tbaa !95, !alias.scope !130
  %11 = getelementptr inbounds i32, ptr %8, i64 48
  %wide.load5 = load <16 x i32>, ptr %11, align 4, !tbaa !95, !alias.scope !130
  %12 = getelementptr inbounds i8, ptr %7, i64 %index
  %wide.load6 = load <16 x i8>, ptr %12, align 1, !tbaa !16, !alias.scope !133, !noalias !130
  %13 = getelementptr inbounds i8, ptr %12, i64 16
  %wide.load7 = load <16 x i8>, ptr %13, align 1, !tbaa !16, !alias.scope !133, !noalias !130
  %14 = getelementptr inbounds i8, ptr %12, i64 32
  %wide.load8 = load <16 x i8>, ptr %14, align 1, !tbaa !16, !alias.scope !133, !noalias !130
  %15 = getelementptr inbounds i8, ptr %12, i64 48
  %wide.load9 = load <16 x i8>, ptr %15, align 1, !tbaa !16, !alias.scope !133, !noalias !130
  %16 = trunc <16 x i32> %wide.load to <16 x i8>
  %17 = trunc <16 x i32> %wide.load3 to <16 x i8>
  %18 = trunc <16 x i32> %wide.load4 to <16 x i8>
  %19 = trunc <16 x i32> %wide.load5 to <16 x i8>
  %20 = add <16 x i8> %wide.load6, %16
  %21 = add <16 x i8> %wide.load7, %17
  %22 = add <16 x i8> %wide.load8, %18
  %23 = add <16 x i8> %wide.load9, %19
  store <16 x i8> %20, ptr %12, align 1, !tbaa !16, !alias.scope !133, !noalias !130
  store <16 x i8> %21, ptr %13, align 1, !tbaa !16, !alias.scope !133, !noalias !130
  store <16 x i8> %22, ptr %14, align 1, !tbaa !16, !alias.scope !133, !noalias !130
  store <16 x i8> %23, ptr %15, align 1, !tbaa !16, !alias.scope !133, !noalias !130
  %index.next = add nuw i64 %index, 64
  %24 = icmp eq i64 %index.next, 9984
  br i1 %24, label %for.body.i1.preheader, label %vector.body, !llvm.loop !135

for.body.i1.preheader:                            ; preds = %vector.body, %for.body.i
  %indvars.iv.i.ph = phi i64 [ 0, %for.body.i ], [ 9984, %vector.body ]
  br label %for.body.i1

for.body.i1:                                      ; preds = %for.body.i1, %for.body.i1.preheader
  %indvars.iv.i = phi i64 [ %indvars.iv.i.ph, %for.body.i1.preheader ], [ %indvars.iv.next.i.3, %for.body.i1 ]
  %arrayidx.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i
  %25 = load i32, ptr %arrayidx.i, align 4, !tbaa !95
  %arrayidx2.i = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.i
  %26 = load i8, ptr %arrayidx2.i, align 1, !tbaa !16
  %27 = trunc i32 %25 to i8
  %conv3.i = add i8 %26, %27
  store i8 %conv3.i, ptr %arrayidx2.i, align 1, !tbaa !16
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i
  %28 = load i32, ptr %arrayidx.i.1, align 4, !tbaa !95
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i
  %29 = load i8, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %30 = trunc i32 %28 to i8
  %conv3.i.1 = add i8 %29, %30
  store i8 %conv3.i.1, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i.1
  %31 = load i32, ptr %arrayidx.i.2, align 4, !tbaa !95
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.1
  %32 = load i8, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %33 = trunc i32 %31 to i8
  %conv3.i.2 = add i8 %32, %33
  store i8 %conv3.i.2, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i.2
  %34 = load i32, ptr %arrayidx.i.3, align 4, !tbaa !95
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.2
  %35 = load i8, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %36 = trunc i32 %34 to i8
  %conv3.i.3 = add i8 %35, %36
  store i8 %conv3.i.3, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !136

invoke.cont19.i:                                  ; preds = %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %lpad11.i, %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i
  %.pn.pn.i = phi { ptr, i32 } [ %5, %lpad11.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ]
  %37 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %37, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %ehcleanup24.i
  call void @_ZdaPv(ptr noundef nonnull %37) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %4, %lpad.i ], [ %.pn.pn.i, %ehcleanup24.i ], [ %.pn.pn.i, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i31.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  store i8 0, ptr %distrib.i32.i, align 1, !tbaa !67
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i33.i, align 1, !tbaa !69
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %0 = load ptr, ptr %B.i, align 8, !tbaa !5
  %arrayidx.i.i35.i = getelementptr inbounds i8, ptr %0, i64 %indvars.iv.i34.i
  store i8 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 1, !tbaa !16
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %1 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %2 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %lpad11.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %1, 0
  %cmp.not.i.not7173.i = icmp eq i64 %2, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep2 = getelementptr i8, ptr %call.i, i64 40000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i unwind label %lpad11.i

_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %3 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %3, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %3) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %4 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad11.i:                                         ; preds = %if.end.i.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %5 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %2, %for.body.i.preheader ]
  %6 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %6) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %7 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %7, i64 10000
  %bound0 = icmp ult ptr %7, %scevgep2
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %for.body.i ]
  %8 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <4 x i32>, ptr %8, align 4, !tbaa !95, !alias.scope !137
  %9 = getelementptr inbounds i32, ptr %8, i64 4
  %wide.load3 = load <4 x i32>, ptr %9, align 4, !tbaa !95, !alias.scope !137
  %10 = getelementptr inbounds i8, ptr %7, i64 %index
  %wide.load4 = load <4 x i8>, ptr %10, align 1, !tbaa !16, !alias.scope !140, !noalias !137
  %11 = getelementptr inbounds i8, ptr %10, i64 4
  %wide.load5 = load <4 x i8>, ptr %11, align 1, !tbaa !16, !alias.scope !140, !noalias !137
  %12 = trunc <4 x i32> %wide.load to <4 x i8>
  %13 = trunc <4 x i32> %wide.load3 to <4 x i8>
  %14 = add <4 x i8> %wide.load4, %12
  %15 = add <4 x i8> %wide.load5, %13
  store <4 x i8> %14, ptr %10, align 1, !tbaa !16, !alias.scope !140, !noalias !137
  store <4 x i8> %15, ptr %11, align 1, !tbaa !16, !alias.scope !140, !noalias !137
  %index.next = or i64 %index, 8
  %16 = getelementptr inbounds i32, ptr %call.i, i64 %index.next
  %wide.load.1 = load <4 x i32>, ptr %16, align 4, !tbaa !95, !alias.scope !137
  %17 = getelementptr inbounds i32, ptr %16, i64 4
  %wide.load3.1 = load <4 x i32>, ptr %17, align 4, !tbaa !95, !alias.scope !137
  %18 = getelementptr inbounds i8, ptr %7, i64 %index.next
  %wide.load4.1 = load <4 x i8>, ptr %18, align 1, !tbaa !16, !alias.scope !140, !noalias !137
  %19 = getelementptr inbounds i8, ptr %18, i64 4
  %wide.load5.1 = load <4 x i8>, ptr %19, align 1, !tbaa !16, !alias.scope !140, !noalias !137
  %20 = trunc <4 x i32> %wide.load.1 to <4 x i8>
  %21 = trunc <4 x i32> %wide.load3.1 to <4 x i8>
  %22 = add <4 x i8> %wide.load4.1, %20
  %23 = add <4 x i8> %wide.load5.1, %21
  store <4 x i8> %22, ptr %18, align 1, !tbaa !16, !alias.scope !140, !noalias !137
  store <4 x i8> %23, ptr %19, align 1, !tbaa !16, !alias.scope !140, !noalias !137
  %index.next.1 = add nuw nsw i64 %index, 16
  %24 = icmp eq i64 %index.next.1, 10000
  br i1 %24, label %invoke.cont19.i, label %vector.body, !llvm.loop !142

for.body.i1:                                      ; preds = %for.body.i, %for.body.i1
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body.i1 ], [ 0, %for.body.i ]
  %arrayidx.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i
  %25 = load i32, ptr %arrayidx.i, align 4, !tbaa !95
  %arrayidx2.i = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.i
  %26 = load i8, ptr %arrayidx2.i, align 1, !tbaa !16
  %27 = trunc i32 %25 to i8
  %conv3.i = add i8 %26, %27
  store i8 %conv3.i, ptr %arrayidx2.i, align 1, !tbaa !16
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i
  %28 = load i32, ptr %arrayidx.i.1, align 4, !tbaa !95
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i
  %29 = load i8, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %30 = trunc i32 %28 to i8
  %conv3.i.1 = add i8 %29, %30
  store i8 %conv3.i.1, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i.1
  %31 = load i32, ptr %arrayidx.i.2, align 4, !tbaa !95
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.1
  %32 = load i8, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %33 = trunc i32 %31 to i8
  %conv3.i.2 = add i8 %32, %33
  store i8 %conv3.i.2, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i.2
  %34 = load i32, ptr %arrayidx.i.3, align 4, !tbaa !95
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.2
  %35 = load i8, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %36 = trunc i32 %34 to i8
  %conv3.i.3 = add i8 %35, %36
  store i8 %conv3.i.3, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !143

invoke.cont19.i:                                  ; preds = %vector.body, %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %lpad11.i, %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i
  %.pn.pn.i = phi { ptr, i32 } [ %5, %lpad11.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ]
  %37 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %37, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %ehcleanup24.i
  call void @_ZdaPv(ptr noundef nonnull %37) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %4, %lpad.i ], [ %.pn.pn.i, %ehcleanup24.i ], [ %.pn.pn.i, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIjhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont3.i unwind label %ehcleanup65.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i79.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i79.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  br label %for.body.i83.i

for.body.i83.i:                                   ; preds = %for.body.i83.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i80.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i81.i.4, %for.body.i83.i ]
  %arrayidx.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i80.i
  %0 = load i64, ptr %arrayidx.i.i, align 8, !tbaa !147
  %conv.i.i = trunc i64 %0 to i8
  %arrayidx2.i.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i80.i
  store i8 %conv.i.i, ptr %arrayidx2.i.i, align 1, !tbaa !16
  %indvars.iv.next.i81.i = add nuw nsw i64 %indvars.iv.i80.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i81.i
  %1 = load i64, ptr %arrayidx.i.i.1, align 8, !tbaa !147
  %conv.i.i.1 = trunc i64 %1 to i8
  %arrayidx2.i.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i
  store i8 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 1, !tbaa !16
  %indvars.iv.next.i81.i.1 = add nuw nsw i64 %indvars.iv.i80.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i81.i.1
  %2 = load i64, ptr %arrayidx.i.i.2, align 8, !tbaa !147
  %conv.i.i.2 = trunc i64 %2 to i8
  %arrayidx2.i.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.1
  store i8 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 1, !tbaa !16
  %indvars.iv.next.i81.i.2 = add nuw nsw i64 %indvars.iv.i80.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i81.i.2
  %3 = load i64, ptr %arrayidx.i.i.3, align 8, !tbaa !147
  %conv.i.i.3 = trunc i64 %3 to i8
  %arrayidx2.i.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.2
  store i8 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 1, !tbaa !16
  %indvars.iv.next.i81.i.3 = add nuw nsw i64 %indvars.iv.i80.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i81.i.3
  %4 = load i64, ptr %arrayidx.i.i.4, align 8, !tbaa !147
  %conv.i.i.4 = trunc i64 %4 to i8
  %arrayidx2.i.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.3
  store i8 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 1, !tbaa !16
  %indvars.iv.next.i81.i.4 = add nuw nsw i64 %indvars.iv.i80.i, 5
  %exitcond.not.i82.i.4 = icmp eq i64 %indvars.iv.next.i81.i.4, 10000
  br i1 %exitcond.not.i82.i.4, label %vector.body, label %for.body.i83.i, !llvm.loop !149

vector.body:                                      ; preds = %for.body.i83.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i83.i ]
  %5 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <8 x i64>, ptr %5, align 8, !tbaa !147
  %6 = getelementptr inbounds i64, ptr %5, i64 8
  %wide.load27 = load <8 x i64>, ptr %6, align 8, !tbaa !147
  %7 = getelementptr inbounds i64, ptr %5, i64 16
  %wide.load28 = load <8 x i64>, ptr %7, align 8, !tbaa !147
  %8 = getelementptr inbounds i64, ptr %5, i64 24
  %wide.load29 = load <8 x i64>, ptr %8, align 8, !tbaa !147
  %9 = trunc <8 x i64> %wide.load to <8 x i8>
  %10 = trunc <8 x i64> %wide.load27 to <8 x i8>
  %11 = trunc <8 x i64> %wide.load28 to <8 x i8>
  %12 = trunc <8 x i64> %wide.load29 to <8 x i8>
  %13 = getelementptr inbounds i8, ptr %call1.i, i64 %index
  store <8 x i8> %9, ptr %13, align 1, !tbaa !16
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store <8 x i8> %10, ptr %14, align 1, !tbaa !16
  %15 = getelementptr inbounds i8, ptr %13, i64 16
  store <8 x i8> %11, ptr %15, align 1, !tbaa !16
  %16 = getelementptr inbounds i8, ptr %13, i64 24
  store <8 x i8> %12, ptr %16, align 1, !tbaa !16
  %index.next = add nuw i64 %index, 32
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !150

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i64, ptr %call.i, i64 9984
  %18 = load i64, ptr %arrayidx.i, align 8, !tbaa !147
  %conv.i = trunc i64 %18 to i8
  %arrayidx2.i = getelementptr inbounds i8, ptr %call1.i, i64 9984
  store i8 %conv.i, ptr %arrayidx2.i, align 1, !tbaa !16
  %arrayidx.i.1 = getelementptr inbounds i64, ptr %call.i, i64 9985
  %19 = load i64, ptr %arrayidx.i.1, align 8, !tbaa !147
  %conv.i.1 = trunc i64 %19 to i8
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %call1.i, i64 9985
  store i8 %conv.i.1, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %arrayidx.i.2 = getelementptr inbounds i64, ptr %call.i, i64 9986
  %20 = load i64, ptr %arrayidx.i.2, align 8, !tbaa !147
  %conv.i.2 = trunc i64 %20 to i8
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %call1.i, i64 9986
  store i8 %conv.i.2, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %arrayidx.i.3 = getelementptr inbounds i64, ptr %call.i, i64 9987
  %21 = load i64, ptr %arrayidx.i.3, align 8, !tbaa !147
  %conv.i.3 = trunc i64 %21 to i8
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %call1.i, i64 9987
  store i8 %conv.i.3, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %arrayidx.i.4 = getelementptr inbounds i64, ptr %call.i, i64 9988
  %22 = load i64, ptr %arrayidx.i.4, align 8, !tbaa !147
  %conv.i.4 = trunc i64 %22 to i8
  %arrayidx2.i.4 = getelementptr inbounds i8, ptr %call1.i, i64 9988
  store i8 %conv.i.4, ptr %arrayidx2.i.4, align 1, !tbaa !16
  %arrayidx.i.5 = getelementptr inbounds i64, ptr %call.i, i64 9989
  %23 = load i64, ptr %arrayidx.i.5, align 8, !tbaa !147
  %conv.i.5 = trunc i64 %23 to i8
  %arrayidx2.i.5 = getelementptr inbounds i8, ptr %call1.i, i64 9989
  store i8 %conv.i.5, ptr %arrayidx2.i.5, align 1, !tbaa !16
  %arrayidx.i.6 = getelementptr inbounds i64, ptr %call.i, i64 9990
  %24 = load i64, ptr %arrayidx.i.6, align 8, !tbaa !147
  %conv.i.6 = trunc i64 %24 to i8
  %arrayidx2.i.6 = getelementptr inbounds i8, ptr %call1.i, i64 9990
  store i8 %conv.i.6, ptr %arrayidx2.i.6, align 1, !tbaa !16
  %arrayidx.i.7 = getelementptr inbounds i64, ptr %call.i, i64 9991
  %25 = load i64, ptr %arrayidx.i.7, align 8, !tbaa !147
  %conv.i.7 = trunc i64 %25 to i8
  %arrayidx2.i.7 = getelementptr inbounds i8, ptr %call1.i, i64 9991
  store i8 %conv.i.7, ptr %arrayidx2.i.7, align 1, !tbaa !16
  %arrayidx.i.8 = getelementptr inbounds i64, ptr %call.i, i64 9992
  %26 = load i64, ptr %arrayidx.i.8, align 8, !tbaa !147
  %conv.i.8 = trunc i64 %26 to i8
  %arrayidx2.i.8 = getelementptr inbounds i8, ptr %call1.i, i64 9992
  store i8 %conv.i.8, ptr %arrayidx2.i.8, align 1, !tbaa !16
  %arrayidx.i.9 = getelementptr inbounds i64, ptr %call.i, i64 9993
  %27 = load i64, ptr %arrayidx.i.9, align 8, !tbaa !147
  %conv.i.9 = trunc i64 %27 to i8
  %arrayidx2.i.9 = getelementptr inbounds i8, ptr %call1.i, i64 9993
  store i8 %conv.i.9, ptr %arrayidx2.i.9, align 1, !tbaa !16
  %arrayidx.i.10 = getelementptr inbounds i64, ptr %call.i, i64 9994
  %28 = load i64, ptr %arrayidx.i.10, align 8, !tbaa !147
  %conv.i.10 = trunc i64 %28 to i8
  %arrayidx2.i.10 = getelementptr inbounds i8, ptr %call1.i, i64 9994
  store i8 %conv.i.10, ptr %arrayidx2.i.10, align 1, !tbaa !16
  %arrayidx.i.11 = getelementptr inbounds i64, ptr %call.i, i64 9995
  %29 = load i64, ptr %arrayidx.i.11, align 8, !tbaa !147
  %conv.i.11 = trunc i64 %29 to i8
  %arrayidx2.i.11 = getelementptr inbounds i8, ptr %call1.i, i64 9995
  store i8 %conv.i.11, ptr %arrayidx2.i.11, align 1, !tbaa !16
  %arrayidx.i.12 = getelementptr inbounds i64, ptr %call.i, i64 9996
  %30 = load i64, ptr %arrayidx.i.12, align 8, !tbaa !147
  %conv.i.12 = trunc i64 %30 to i8
  %arrayidx2.i.12 = getelementptr inbounds i8, ptr %call1.i, i64 9996
  store i8 %conv.i.12, ptr %arrayidx2.i.12, align 1, !tbaa !16
  %arrayidx.i.13 = getelementptr inbounds i64, ptr %call.i, i64 9997
  %31 = load i64, ptr %arrayidx.i.13, align 8, !tbaa !147
  %conv.i.13 = trunc i64 %31 to i8
  %arrayidx2.i.13 = getelementptr inbounds i8, ptr %call1.i, i64 9997
  store i8 %conv.i.13, ptr %arrayidx2.i.13, align 1, !tbaa !16
  %arrayidx.i.14 = getelementptr inbounds i64, ptr %call.i, i64 9998
  %32 = load i64, ptr %arrayidx.i.14, align 8, !tbaa !147
  %conv.i.14 = trunc i64 %32 to i8
  %arrayidx2.i.14 = getelementptr inbounds i8, ptr %call1.i, i64 9998
  store i8 %conv.i.14, ptr %arrayidx2.i.14, align 1, !tbaa !16
  %arrayidx.i.15 = getelementptr inbounds i64, ptr %call.i, i64 9999
  %33 = load i64, ptr %arrayidx.i.15, align 8, !tbaa !147
  %conv.i.15 = trunc i64 %33 to i8
  %arrayidx2.i.15 = getelementptr inbounds i8, ptr %call1.i, i64 9999
  store i8 %conv.i.15, ptr %arrayidx2.i.15, align 1, !tbaa !16
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i84.i.1 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i8, ptr %arrayidx.i84.i.1, align 1, !tbaa !16
  %arrayidx.i85.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i8, ptr %arrayidx.i85.i.1, align 1, !tbaa !16
  %cmp20.not.i.1 = icmp eq i8 %34, %35
  br i1 %cmp20.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i84.i.2 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i8, ptr %arrayidx.i84.i.2, align 1, !tbaa !16
  %arrayidx.i85.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i8, ptr %arrayidx.i85.i.2, align 1, !tbaa !16
  %cmp20.not.i.2 = icmp eq i8 %36, %37
  br i1 %cmp20.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i84.i.3 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i8, ptr %arrayidx.i84.i.3, align 1, !tbaa !16
  %arrayidx.i85.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i8, ptr %arrayidx.i85.i.3, align 1, !tbaa !16
  %cmp20.not.i.3 = icmp eq i8 %38, %39
  br i1 %cmp20.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i84.i.4 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i8, ptr %arrayidx.i84.i.4, align 1, !tbaa !16
  %arrayidx.i85.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i8, ptr %arrayidx.i85.i.4, align 1, !tbaa !16
  %cmp20.not.i.4 = icmp eq i8 %40, %41
  br i1 %cmp20.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !151

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond49.preheader.i unwind label %lpad46.i

for.cond49.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not143147.i = icmp eq i64 %43, 0
  %cmp.not.i.not143.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not143147.i
  br i1 %cmp.not.i.not143.i, label %if.end.i.i, label %for.body53.i.preheader, !prof !42

for.body53.i.preheader:                           ; preds = %for.cond49.preheader.i
  %scevgep30 = getelementptr i8, ptr %call.i, i64 80000
  br label %for.body53.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup67.i

ehcleanup65.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i114.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i84.i = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i8, ptr %arrayidx.i84.i, align 1, !tbaa !16
  %arrayidx.i85.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i8, ptr %arrayidx.i85.i, align 1, !tbaa !16
  %cmp20.not.i = icmp eq i8 %46, %47
  br i1 %cmp20.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i8 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i84.i.le = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont22.i unwind label %lpad21.i

invoke.cont22.i:                                  ; preds = %if.then.i
  %arrayidx.i88.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i64, ptr %arrayidx.i88.i, align 8, !tbaa !147
  %call.i89.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %48)
          to label %invoke.cont27.i unwind label %lpad21.i

invoke.cont27.i:                                  ; preds = %invoke.cont22.i
  %call1.i92.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont29.i unwind label %lpad21.i

invoke.cont29.i:                                  ; preds = %invoke.cont27.i
  %49 = load i8, ptr %arrayidx.i84.i.le, align 1, !tbaa !16
  %call34.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, i8 noundef zeroext %49)
          to label %invoke.cont33.i unwind label %lpad21.i

invoke.cont33.i:                                  ; preds = %invoke.cont29.i
  %call1.i97.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call34.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont35.i unwind label %lpad21.i

invoke.cont35.i:                                  ; preds = %invoke.cont33.i
  %call40.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call34.i, i8 noundef zeroext %.lcssa)
          to label %invoke.cont39.i unwind label %lpad21.i

invoke.cont39.i:                                  ; preds = %invoke.cont35.i
  %call42.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call40.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont41.i unwind label %lpad21.i

invoke.cont41.i:                                  ; preds = %invoke.cont39.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad21.i:                                         ; preds = %invoke.cont39.i, %invoke.cont35.i, %invoke.cont33.i, %invoke.cont29.i, %invoke.cont27.i, %invoke.cont22.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

if.end.i.i:                                       ; preds = %invoke.cont58.i, %for.cond49.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad46.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i102.i = icmp eq ptr %51, null
  br i1 %cmp.not.i102.i, label %_ZL28benchForTruncOrZextVecInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i103.i

delete.notnull.i.i103.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad46.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

for.body53.i:                                     ; preds = %for.body53.i.preheader, %invoke.cont58.i
  %__begin1.sroa.0.0144.i = phi i64 [ %dec.i.i, %invoke.cont58.i ], [ %43, %for.body53.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %54, i64 10000
  %bound0 = icmp ult ptr %54, %scevgep30
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13.preheader, label %vector.body36

vector.body36:                                    ; preds = %for.body53.i, %vector.body36
  %index37 = phi i64 [ %index.next42, %vector.body36 ], [ 0, %for.body53.i ]
  %55 = getelementptr inbounds i64, ptr %call.i, i64 %index37
  %wide.load38 = load <8 x i64>, ptr %55, align 8, !tbaa !147, !alias.scope !152
  %56 = getelementptr inbounds i64, ptr %55, i64 8
  %wide.load39 = load <8 x i64>, ptr %56, align 8, !tbaa !147, !alias.scope !152
  %57 = getelementptr inbounds i64, ptr %55, i64 16
  %wide.load40 = load <8 x i64>, ptr %57, align 8, !tbaa !147, !alias.scope !152
  %58 = getelementptr inbounds i64, ptr %55, i64 24
  %wide.load41 = load <8 x i64>, ptr %58, align 8, !tbaa !147, !alias.scope !152
  %59 = trunc <8 x i64> %wide.load38 to <8 x i8>
  %60 = trunc <8 x i64> %wide.load39 to <8 x i8>
  %61 = trunc <8 x i64> %wide.load40 to <8 x i8>
  %62 = trunc <8 x i64> %wide.load41 to <8 x i8>
  %63 = getelementptr inbounds i8, ptr %54, i64 %index37
  store <8 x i8> %59, ptr %63, align 1, !tbaa !16, !alias.scope !155, !noalias !152
  %64 = getelementptr inbounds i8, ptr %63, i64 8
  store <8 x i8> %60, ptr %64, align 1, !tbaa !16, !alias.scope !155, !noalias !152
  %65 = getelementptr inbounds i8, ptr %63, i64 16
  store <8 x i8> %61, ptr %65, align 1, !tbaa !16, !alias.scope !155, !noalias !152
  %66 = getelementptr inbounds i8, ptr %63, i64 24
  store <8 x i8> %62, ptr %66, align 1, !tbaa !16, !alias.scope !155, !noalias !152
  %index.next42 = add nuw i64 %index37, 32
  %67 = icmp eq i64 %index.next42, 9984
  br i1 %67, label %for.body.i13.preheader, label %vector.body36, !llvm.loop !157

for.body.i13.preheader:                           ; preds = %vector.body36, %for.body53.i
  %indvars.iv.i7.ph = phi i64 [ 0, %for.body53.i ], [ 9984, %vector.body36 ]
  br label %for.body.i13

for.body.i13:                                     ; preds = %for.body.i13, %for.body.i13.preheader
  %indvars.iv.i7 = phi i64 [ %indvars.iv.i7.ph, %for.body.i13.preheader ], [ %indvars.iv.next.i11.3, %for.body.i13 ]
  %arrayidx.i8 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i7
  %68 = load i64, ptr %arrayidx.i8, align 8, !tbaa !147
  %conv.i9 = trunc i64 %68 to i8
  %arrayidx2.i10 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.i7
  store i8 %conv.i9, ptr %arrayidx2.i10, align 1, !tbaa !16
  %indvars.iv.next.i11 = or i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i11
  %69 = load i64, ptr %arrayidx.i8.1, align 8, !tbaa !147
  %conv.i9.1 = trunc i64 %69 to i8
  %arrayidx2.i10.1 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11
  store i8 %conv.i9.1, ptr %arrayidx2.i10.1, align 1, !tbaa !16
  %indvars.iv.next.i11.1 = or i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i11.1
  %70 = load i64, ptr %arrayidx.i8.2, align 8, !tbaa !147
  %conv.i9.2 = trunc i64 %70 to i8
  %arrayidx2.i10.2 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11.1
  store i8 %conv.i9.2, ptr %arrayidx2.i10.2, align 1, !tbaa !16
  %indvars.iv.next.i11.2 = or i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i11.2
  %71 = load i64, ptr %arrayidx.i8.3, align 8, !tbaa !147
  %conv.i9.3 = trunc i64 %71 to i8
  %arrayidx2.i10.3 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11.2
  store i8 %conv.i9.3, ptr %arrayidx2.i10.3, align 1, !tbaa !16
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %exitcond.not.i12.3 = icmp eq i64 %indvars.iv.next.i11.3, 10000
  br i1 %exitcond.not.i12.3, label %invoke.cont58.i, label %for.body.i13, !llvm.loop !158

invoke.cont58.i:                                  ; preds = %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0144.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body53.i, !prof !42

ehcleanup65.i:                                    ; preds = %lpad46.i, %lpad21.i, %lpad5.loopexit.i
  %.pn133.i = phi { ptr, i32 } [ %50, %lpad21.i ], [ %52, %lpad46.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i113.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i113.i, label %ehcleanup67.i, label %delete.notnull.i.i114.i

delete.notnull.i.i114.i:                          ; preds = %ehcleanup65.i, %ehcleanup65.thread.i
  %.pn133.pn139.i = phi { ptr, i32 } [ %45, %ehcleanup65.thread.i ], [ %.pn133.i, %ehcleanup65.i ]
  %72 = phi ptr [ %call1.i, %ehcleanup65.thread.i ], [ %.pr.i, %ehcleanup65.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup67.i

ehcleanup67.i:                                    ; preds = %delete.notnull.i.i114.i, %ehcleanup65.i, %lpad.i
  %.pn133.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn133.i, %ehcleanup65.i ], [ %.pn133.pn139.i, %delete.notnull.i.i114.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn133.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i103.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont3.i unwind label %ehcleanup65.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i79.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i79.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  br label %for.body.i83.i

for.body.i83.i:                                   ; preds = %for.body.i83.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i80.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i81.i.4, %for.body.i83.i ]
  %arrayidx.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i80.i
  %0 = load i64, ptr %arrayidx.i.i, align 8, !tbaa !147
  %conv.i.i = trunc i64 %0 to i8
  %arrayidx2.i.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i80.i
  store i8 %conv.i.i, ptr %arrayidx2.i.i, align 1, !tbaa !16
  %indvars.iv.next.i81.i = add nuw nsw i64 %indvars.iv.i80.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i81.i
  %1 = load i64, ptr %arrayidx.i.i.1, align 8, !tbaa !147
  %conv.i.i.1 = trunc i64 %1 to i8
  %arrayidx2.i.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i
  store i8 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 1, !tbaa !16
  %indvars.iv.next.i81.i.1 = add nuw nsw i64 %indvars.iv.i80.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i81.i.1
  %2 = load i64, ptr %arrayidx.i.i.2, align 8, !tbaa !147
  %conv.i.i.2 = trunc i64 %2 to i8
  %arrayidx2.i.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.1
  store i8 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 1, !tbaa !16
  %indvars.iv.next.i81.i.2 = add nuw nsw i64 %indvars.iv.i80.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i81.i.2
  %3 = load i64, ptr %arrayidx.i.i.3, align 8, !tbaa !147
  %conv.i.i.3 = trunc i64 %3 to i8
  %arrayidx2.i.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.2
  store i8 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 1, !tbaa !16
  %indvars.iv.next.i81.i.3 = add nuw nsw i64 %indvars.iv.i80.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i81.i.3
  %4 = load i64, ptr %arrayidx.i.i.4, align 8, !tbaa !147
  %conv.i.i.4 = trunc i64 %4 to i8
  %arrayidx2.i.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.3
  store i8 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 1, !tbaa !16
  %indvars.iv.next.i81.i.4 = add nuw nsw i64 %indvars.iv.i80.i, 5
  %exitcond.not.i82.i.4 = icmp eq i64 %indvars.iv.next.i81.i.4, 10000
  br i1 %exitcond.not.i82.i.4, label %vector.body, label %for.body.i83.i, !llvm.loop !149

vector.body:                                      ; preds = %for.body.i83.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i83.i ]
  %5 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <16 x i64>, ptr %5, align 8, !tbaa !147
  %6 = getelementptr inbounds i64, ptr %5, i64 16
  %wide.load27 = load <16 x i64>, ptr %6, align 8, !tbaa !147
  %7 = getelementptr inbounds i64, ptr %5, i64 32
  %wide.load28 = load <16 x i64>, ptr %7, align 8, !tbaa !147
  %8 = getelementptr inbounds i64, ptr %5, i64 48
  %wide.load29 = load <16 x i64>, ptr %8, align 8, !tbaa !147
  %9 = trunc <16 x i64> %wide.load to <16 x i8>
  %10 = trunc <16 x i64> %wide.load27 to <16 x i8>
  %11 = trunc <16 x i64> %wide.load28 to <16 x i8>
  %12 = trunc <16 x i64> %wide.load29 to <16 x i8>
  %13 = getelementptr inbounds i8, ptr %call1.i, i64 %index
  store <16 x i8> %9, ptr %13, align 1, !tbaa !16
  %14 = getelementptr inbounds i8, ptr %13, i64 16
  store <16 x i8> %10, ptr %14, align 1, !tbaa !16
  %15 = getelementptr inbounds i8, ptr %13, i64 32
  store <16 x i8> %11, ptr %15, align 1, !tbaa !16
  %16 = getelementptr inbounds i8, ptr %13, i64 48
  store <16 x i8> %12, ptr %16, align 1, !tbaa !16
  %index.next = add nuw i64 %index, 64
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !159

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i64, ptr %call.i, i64 9984
  %18 = load i64, ptr %arrayidx.i, align 8, !tbaa !147
  %conv.i = trunc i64 %18 to i8
  %arrayidx2.i = getelementptr inbounds i8, ptr %call1.i, i64 9984
  store i8 %conv.i, ptr %arrayidx2.i, align 1, !tbaa !16
  %arrayidx.i.1 = getelementptr inbounds i64, ptr %call.i, i64 9985
  %19 = load i64, ptr %arrayidx.i.1, align 8, !tbaa !147
  %conv.i.1 = trunc i64 %19 to i8
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %call1.i, i64 9985
  store i8 %conv.i.1, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %arrayidx.i.2 = getelementptr inbounds i64, ptr %call.i, i64 9986
  %20 = load i64, ptr %arrayidx.i.2, align 8, !tbaa !147
  %conv.i.2 = trunc i64 %20 to i8
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %call1.i, i64 9986
  store i8 %conv.i.2, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %arrayidx.i.3 = getelementptr inbounds i64, ptr %call.i, i64 9987
  %21 = load i64, ptr %arrayidx.i.3, align 8, !tbaa !147
  %conv.i.3 = trunc i64 %21 to i8
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %call1.i, i64 9987
  store i8 %conv.i.3, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %arrayidx.i.4 = getelementptr inbounds i64, ptr %call.i, i64 9988
  %22 = load i64, ptr %arrayidx.i.4, align 8, !tbaa !147
  %conv.i.4 = trunc i64 %22 to i8
  %arrayidx2.i.4 = getelementptr inbounds i8, ptr %call1.i, i64 9988
  store i8 %conv.i.4, ptr %arrayidx2.i.4, align 1, !tbaa !16
  %arrayidx.i.5 = getelementptr inbounds i64, ptr %call.i, i64 9989
  %23 = load i64, ptr %arrayidx.i.5, align 8, !tbaa !147
  %conv.i.5 = trunc i64 %23 to i8
  %arrayidx2.i.5 = getelementptr inbounds i8, ptr %call1.i, i64 9989
  store i8 %conv.i.5, ptr %arrayidx2.i.5, align 1, !tbaa !16
  %arrayidx.i.6 = getelementptr inbounds i64, ptr %call.i, i64 9990
  %24 = load i64, ptr %arrayidx.i.6, align 8, !tbaa !147
  %conv.i.6 = trunc i64 %24 to i8
  %arrayidx2.i.6 = getelementptr inbounds i8, ptr %call1.i, i64 9990
  store i8 %conv.i.6, ptr %arrayidx2.i.6, align 1, !tbaa !16
  %arrayidx.i.7 = getelementptr inbounds i64, ptr %call.i, i64 9991
  %25 = load i64, ptr %arrayidx.i.7, align 8, !tbaa !147
  %conv.i.7 = trunc i64 %25 to i8
  %arrayidx2.i.7 = getelementptr inbounds i8, ptr %call1.i, i64 9991
  store i8 %conv.i.7, ptr %arrayidx2.i.7, align 1, !tbaa !16
  %arrayidx.i.8 = getelementptr inbounds i64, ptr %call.i, i64 9992
  %26 = load i64, ptr %arrayidx.i.8, align 8, !tbaa !147
  %conv.i.8 = trunc i64 %26 to i8
  %arrayidx2.i.8 = getelementptr inbounds i8, ptr %call1.i, i64 9992
  store i8 %conv.i.8, ptr %arrayidx2.i.8, align 1, !tbaa !16
  %arrayidx.i.9 = getelementptr inbounds i64, ptr %call.i, i64 9993
  %27 = load i64, ptr %arrayidx.i.9, align 8, !tbaa !147
  %conv.i.9 = trunc i64 %27 to i8
  %arrayidx2.i.9 = getelementptr inbounds i8, ptr %call1.i, i64 9993
  store i8 %conv.i.9, ptr %arrayidx2.i.9, align 1, !tbaa !16
  %arrayidx.i.10 = getelementptr inbounds i64, ptr %call.i, i64 9994
  %28 = load i64, ptr %arrayidx.i.10, align 8, !tbaa !147
  %conv.i.10 = trunc i64 %28 to i8
  %arrayidx2.i.10 = getelementptr inbounds i8, ptr %call1.i, i64 9994
  store i8 %conv.i.10, ptr %arrayidx2.i.10, align 1, !tbaa !16
  %arrayidx.i.11 = getelementptr inbounds i64, ptr %call.i, i64 9995
  %29 = load i64, ptr %arrayidx.i.11, align 8, !tbaa !147
  %conv.i.11 = trunc i64 %29 to i8
  %arrayidx2.i.11 = getelementptr inbounds i8, ptr %call1.i, i64 9995
  store i8 %conv.i.11, ptr %arrayidx2.i.11, align 1, !tbaa !16
  %arrayidx.i.12 = getelementptr inbounds i64, ptr %call.i, i64 9996
  %30 = load i64, ptr %arrayidx.i.12, align 8, !tbaa !147
  %conv.i.12 = trunc i64 %30 to i8
  %arrayidx2.i.12 = getelementptr inbounds i8, ptr %call1.i, i64 9996
  store i8 %conv.i.12, ptr %arrayidx2.i.12, align 1, !tbaa !16
  %arrayidx.i.13 = getelementptr inbounds i64, ptr %call.i, i64 9997
  %31 = load i64, ptr %arrayidx.i.13, align 8, !tbaa !147
  %conv.i.13 = trunc i64 %31 to i8
  %arrayidx2.i.13 = getelementptr inbounds i8, ptr %call1.i, i64 9997
  store i8 %conv.i.13, ptr %arrayidx2.i.13, align 1, !tbaa !16
  %arrayidx.i.14 = getelementptr inbounds i64, ptr %call.i, i64 9998
  %32 = load i64, ptr %arrayidx.i.14, align 8, !tbaa !147
  %conv.i.14 = trunc i64 %32 to i8
  %arrayidx2.i.14 = getelementptr inbounds i8, ptr %call1.i, i64 9998
  store i8 %conv.i.14, ptr %arrayidx2.i.14, align 1, !tbaa !16
  %arrayidx.i.15 = getelementptr inbounds i64, ptr %call.i, i64 9999
  %33 = load i64, ptr %arrayidx.i.15, align 8, !tbaa !147
  %conv.i.15 = trunc i64 %33 to i8
  %arrayidx2.i.15 = getelementptr inbounds i8, ptr %call1.i, i64 9999
  store i8 %conv.i.15, ptr %arrayidx2.i.15, align 1, !tbaa !16
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i84.i.1 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i8, ptr %arrayidx.i84.i.1, align 1, !tbaa !16
  %arrayidx.i85.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i8, ptr %arrayidx.i85.i.1, align 1, !tbaa !16
  %cmp20.not.i.1 = icmp eq i8 %34, %35
  br i1 %cmp20.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i84.i.2 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i8, ptr %arrayidx.i84.i.2, align 1, !tbaa !16
  %arrayidx.i85.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i8, ptr %arrayidx.i85.i.2, align 1, !tbaa !16
  %cmp20.not.i.2 = icmp eq i8 %36, %37
  br i1 %cmp20.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i84.i.3 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i8, ptr %arrayidx.i84.i.3, align 1, !tbaa !16
  %arrayidx.i85.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i8, ptr %arrayidx.i85.i.3, align 1, !tbaa !16
  %cmp20.not.i.3 = icmp eq i8 %38, %39
  br i1 %cmp20.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i84.i.4 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i8, ptr %arrayidx.i84.i.4, align 1, !tbaa !16
  %arrayidx.i85.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i8, ptr %arrayidx.i85.i.4, align 1, !tbaa !16
  %cmp20.not.i.4 = icmp eq i8 %40, %41
  br i1 %cmp20.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !151

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond49.preheader.i unwind label %lpad46.i

for.cond49.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not143147.i = icmp eq i64 %43, 0
  %cmp.not.i.not143.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not143147.i
  br i1 %cmp.not.i.not143.i, label %if.end.i.i, label %for.body53.i.preheader, !prof !42

for.body53.i.preheader:                           ; preds = %for.cond49.preheader.i
  %scevgep30 = getelementptr i8, ptr %call.i, i64 80000
  br label %for.body53.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup67.i

ehcleanup65.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i114.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i84.i = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i8, ptr %arrayidx.i84.i, align 1, !tbaa !16
  %arrayidx.i85.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i8, ptr %arrayidx.i85.i, align 1, !tbaa !16
  %cmp20.not.i = icmp eq i8 %46, %47
  br i1 %cmp20.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i8 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i84.i.le = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont22.i unwind label %lpad21.i

invoke.cont22.i:                                  ; preds = %if.then.i
  %arrayidx.i88.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i64, ptr %arrayidx.i88.i, align 8, !tbaa !147
  %call.i89.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %48)
          to label %invoke.cont27.i unwind label %lpad21.i

invoke.cont27.i:                                  ; preds = %invoke.cont22.i
  %call1.i92.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont29.i unwind label %lpad21.i

invoke.cont29.i:                                  ; preds = %invoke.cont27.i
  %49 = load i8, ptr %arrayidx.i84.i.le, align 1, !tbaa !16
  %call34.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, i8 noundef zeroext %49)
          to label %invoke.cont33.i unwind label %lpad21.i

invoke.cont33.i:                                  ; preds = %invoke.cont29.i
  %call1.i97.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call34.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont35.i unwind label %lpad21.i

invoke.cont35.i:                                  ; preds = %invoke.cont33.i
  %call40.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call34.i, i8 noundef zeroext %.lcssa)
          to label %invoke.cont39.i unwind label %lpad21.i

invoke.cont39.i:                                  ; preds = %invoke.cont35.i
  %call42.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call40.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont41.i unwind label %lpad21.i

invoke.cont41.i:                                  ; preds = %invoke.cont39.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad21.i:                                         ; preds = %invoke.cont39.i, %invoke.cont35.i, %invoke.cont33.i, %invoke.cont29.i, %invoke.cont27.i, %invoke.cont22.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

if.end.i.i:                                       ; preds = %invoke.cont58.i, %for.cond49.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad46.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i102.i = icmp eq ptr %51, null
  br i1 %cmp.not.i102.i, label %_ZL28benchForTruncOrZextVecInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i103.i

delete.notnull.i.i103.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad46.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

for.body53.i:                                     ; preds = %for.body53.i.preheader, %invoke.cont58.i
  %__begin1.sroa.0.0144.i = phi i64 [ %dec.i.i, %invoke.cont58.i ], [ %43, %for.body53.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %54, i64 10000
  %bound0 = icmp ult ptr %54, %scevgep30
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13.preheader, label %vector.body36

vector.body36:                                    ; preds = %for.body53.i, %vector.body36
  %index37 = phi i64 [ %index.next42, %vector.body36 ], [ 0, %for.body53.i ]
  %55 = getelementptr inbounds i64, ptr %call.i, i64 %index37
  %wide.load38 = load <16 x i64>, ptr %55, align 8, !tbaa !147, !alias.scope !160
  %56 = getelementptr inbounds i64, ptr %55, i64 16
  %wide.load39 = load <16 x i64>, ptr %56, align 8, !tbaa !147, !alias.scope !160
  %57 = getelementptr inbounds i64, ptr %55, i64 32
  %wide.load40 = load <16 x i64>, ptr %57, align 8, !tbaa !147, !alias.scope !160
  %58 = getelementptr inbounds i64, ptr %55, i64 48
  %wide.load41 = load <16 x i64>, ptr %58, align 8, !tbaa !147, !alias.scope !160
  %59 = trunc <16 x i64> %wide.load38 to <16 x i8>
  %60 = trunc <16 x i64> %wide.load39 to <16 x i8>
  %61 = trunc <16 x i64> %wide.load40 to <16 x i8>
  %62 = trunc <16 x i64> %wide.load41 to <16 x i8>
  %63 = getelementptr inbounds i8, ptr %54, i64 %index37
  store <16 x i8> %59, ptr %63, align 1, !tbaa !16, !alias.scope !163, !noalias !160
  %64 = getelementptr inbounds i8, ptr %63, i64 16
  store <16 x i8> %60, ptr %64, align 1, !tbaa !16, !alias.scope !163, !noalias !160
  %65 = getelementptr inbounds i8, ptr %63, i64 32
  store <16 x i8> %61, ptr %65, align 1, !tbaa !16, !alias.scope !163, !noalias !160
  %66 = getelementptr inbounds i8, ptr %63, i64 48
  store <16 x i8> %62, ptr %66, align 1, !tbaa !16, !alias.scope !163, !noalias !160
  %index.next42 = add nuw i64 %index37, 64
  %67 = icmp eq i64 %index.next42, 9984
  br i1 %67, label %for.body.i13.preheader, label %vector.body36, !llvm.loop !165

for.body.i13.preheader:                           ; preds = %vector.body36, %for.body53.i
  %indvars.iv.i7.ph = phi i64 [ 0, %for.body53.i ], [ 9984, %vector.body36 ]
  br label %for.body.i13

for.body.i13:                                     ; preds = %for.body.i13, %for.body.i13.preheader
  %indvars.iv.i7 = phi i64 [ %indvars.iv.i7.ph, %for.body.i13.preheader ], [ %indvars.iv.next.i11.3, %for.body.i13 ]
  %arrayidx.i8 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i7
  %68 = load i64, ptr %arrayidx.i8, align 8, !tbaa !147
  %conv.i9 = trunc i64 %68 to i8
  %arrayidx2.i10 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.i7
  store i8 %conv.i9, ptr %arrayidx2.i10, align 1, !tbaa !16
  %indvars.iv.next.i11 = or i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i11
  %69 = load i64, ptr %arrayidx.i8.1, align 8, !tbaa !147
  %conv.i9.1 = trunc i64 %69 to i8
  %arrayidx2.i10.1 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11
  store i8 %conv.i9.1, ptr %arrayidx2.i10.1, align 1, !tbaa !16
  %indvars.iv.next.i11.1 = or i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i11.1
  %70 = load i64, ptr %arrayidx.i8.2, align 8, !tbaa !147
  %conv.i9.2 = trunc i64 %70 to i8
  %arrayidx2.i10.2 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11.1
  store i8 %conv.i9.2, ptr %arrayidx2.i10.2, align 1, !tbaa !16
  %indvars.iv.next.i11.2 = or i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i11.2
  %71 = load i64, ptr %arrayidx.i8.3, align 8, !tbaa !147
  %conv.i9.3 = trunc i64 %71 to i8
  %arrayidx2.i10.3 = getelementptr inbounds i8, ptr %54, i64 %indvars.iv.next.i11.2
  store i8 %conv.i9.3, ptr %arrayidx2.i10.3, align 1, !tbaa !16
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %exitcond.not.i12.3 = icmp eq i64 %indvars.iv.next.i11.3, 10000
  br i1 %exitcond.not.i12.3, label %invoke.cont58.i, label %for.body.i13, !llvm.loop !166

invoke.cont58.i:                                  ; preds = %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0144.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body53.i, !prof !42

ehcleanup65.i:                                    ; preds = %lpad46.i, %lpad21.i, %lpad5.loopexit.i
  %.pn133.i = phi { ptr, i32 } [ %50, %lpad21.i ], [ %52, %lpad46.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i113.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i113.i, label %ehcleanup67.i, label %delete.notnull.i.i114.i

delete.notnull.i.i114.i:                          ; preds = %ehcleanup65.i, %ehcleanup65.thread.i
  %.pn133.pn139.i = phi { ptr, i32 } [ %45, %ehcleanup65.thread.i ], [ %.pn133.i, %ehcleanup65.i ]
  %72 = phi ptr [ %call1.i, %ehcleanup65.thread.i ], [ %.pr.i, %ehcleanup65.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup67.i

ehcleanup67.i:                                    ; preds = %delete.notnull.i.i114.i, %ehcleanup65.i, %lpad.i
  %.pn133.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn133.i, %ehcleanup65.i ], [ %.pn133.pn139.i, %delete.notnull.i.i114.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn133.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i103.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z53benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont3.i unwind label %ehcleanup65.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i79.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i79.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  br label %for.body.i83.i

for.body.i83.i:                                   ; preds = %for.body.i83.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i80.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i81.i.4, %for.body.i83.i ]
  %arrayidx.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i80.i
  %0 = load i64, ptr %arrayidx.i.i, align 8, !tbaa !147
  %conv.i.i = trunc i64 %0 to i8
  %arrayidx2.i.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i80.i
  store i8 %conv.i.i, ptr %arrayidx2.i.i, align 1, !tbaa !16
  %indvars.iv.next.i81.i = add nuw nsw i64 %indvars.iv.i80.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i81.i
  %1 = load i64, ptr %arrayidx.i.i.1, align 8, !tbaa !147
  %conv.i.i.1 = trunc i64 %1 to i8
  %arrayidx2.i.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i
  store i8 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 1, !tbaa !16
  %indvars.iv.next.i81.i.1 = add nuw nsw i64 %indvars.iv.i80.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i81.i.1
  %2 = load i64, ptr %arrayidx.i.i.2, align 8, !tbaa !147
  %conv.i.i.2 = trunc i64 %2 to i8
  %arrayidx2.i.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.1
  store i8 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 1, !tbaa !16
  %indvars.iv.next.i81.i.2 = add nuw nsw i64 %indvars.iv.i80.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i81.i.2
  %3 = load i64, ptr %arrayidx.i.i.3, align 8, !tbaa !147
  %conv.i.i.3 = trunc i64 %3 to i8
  %arrayidx2.i.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.2
  store i8 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 1, !tbaa !16
  %indvars.iv.next.i81.i.3 = add nuw nsw i64 %indvars.iv.i80.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i81.i.3
  %4 = load i64, ptr %arrayidx.i.i.4, align 8, !tbaa !147
  %conv.i.i.4 = trunc i64 %4 to i8
  %arrayidx2.i.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i81.i.3
  store i8 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 1, !tbaa !16
  %indvars.iv.next.i81.i.4 = add nuw nsw i64 %indvars.iv.i80.i, 5
  %exitcond.not.i82.i.4 = icmp eq i64 %indvars.iv.next.i81.i.4, 10000
  br i1 %exitcond.not.i82.i.4, label %vector.body, label %for.body.i83.i, !llvm.loop !149

vector.body:                                      ; preds = %for.body.i83.i, %vector.body
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %for.body.i83.i ]
  %5 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <2 x i64>, ptr %5, align 8, !tbaa !147
  %6 = getelementptr inbounds i64, ptr %5, i64 2
  %wide.load27 = load <2 x i64>, ptr %6, align 8, !tbaa !147
  %7 = trunc <2 x i64> %wide.load to <2 x i8>
  %8 = trunc <2 x i64> %wide.load27 to <2 x i8>
  %9 = getelementptr inbounds i8, ptr %call1.i, i64 %index
  store <2 x i8> %7, ptr %9, align 1, !tbaa !16
  %10 = getelementptr inbounds i8, ptr %9, i64 2
  store <2 x i8> %8, ptr %10, align 1, !tbaa !16
  %index.next = or i64 %index, 4
  %11 = getelementptr inbounds i64, ptr %call.i, i64 %index.next
  %wide.load.1 = load <2 x i64>, ptr %11, align 8, !tbaa !147
  %12 = getelementptr inbounds i64, ptr %11, i64 2
  %wide.load27.1 = load <2 x i64>, ptr %12, align 8, !tbaa !147
  %13 = trunc <2 x i64> %wide.load.1 to <2 x i8>
  %14 = trunc <2 x i64> %wide.load27.1 to <2 x i8>
  %15 = getelementptr inbounds i8, ptr %call1.i, i64 %index.next
  store <2 x i8> %13, ptr %15, align 1, !tbaa !16
  %16 = getelementptr inbounds i8, ptr %15, i64 2
  store <2 x i8> %14, ptr %16, align 1, !tbaa !16
  %index.next.1 = add nuw nsw i64 %index, 8
  %17 = icmp eq i64 %index.next.1, 10000
  br i1 %17, label %for.body.i, label %vector.body, !llvm.loop !167

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i84.i.1 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i
  %18 = load i8, ptr %arrayidx.i84.i.1, align 1, !tbaa !16
  %arrayidx.i85.i.1 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i
  %19 = load i8, ptr %arrayidx.i85.i.1, align 1, !tbaa !16
  %cmp20.not.i.1 = icmp eq i8 %18, %19
  br i1 %cmp20.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i84.i.2 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.1
  %20 = load i8, ptr %arrayidx.i84.i.2, align 1, !tbaa !16
  %arrayidx.i85.i.2 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.1
  %21 = load i8, ptr %arrayidx.i85.i.2, align 1, !tbaa !16
  %cmp20.not.i.2 = icmp eq i8 %20, %21
  br i1 %cmp20.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i84.i.3 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.2
  %22 = load i8, ptr %arrayidx.i84.i.3, align 1, !tbaa !16
  %arrayidx.i85.i.3 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.2
  %23 = load i8, ptr %arrayidx.i85.i.3, align 1, !tbaa !16
  %cmp20.not.i.3 = icmp eq i8 %22, %23
  br i1 %cmp20.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i84.i.4 = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.next.i.3
  %24 = load i8, ptr %arrayidx.i84.i.4, align 1, !tbaa !16
  %arrayidx.i85.i.4 = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.next.i.3
  %25 = load i8, ptr %arrayidx.i85.i.4, align 1, !tbaa !16
  %cmp20.not.i.4 = icmp eq i8 %24, %25
  br i1 %cmp20.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !151

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %26 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %27 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond49.preheader.i unwind label %lpad46.i

for.cond49.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %26, 0
  %cmp.not.i.not143147.i = icmp eq i64 %27, 0
  %cmp.not.i.not143.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not143147.i
  br i1 %cmp.not.i.not143.i, label %if.end.i.i, label %for.body53.i.preheader, !prof !42

for.body53.i.preheader:                           ; preds = %for.cond49.preheader.i
  %scevgep28 = getelementptr i8, ptr %call.i, i64 80000
  br label %for.body53.i

lpad.i:                                           ; preds = %entry
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup67.i

ehcleanup65.thread.i:                             ; preds = %invoke.cont.i
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i114.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

for.body.i:                                       ; preds = %vector.body, %for.cond.i.4
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.4, %for.cond.i.4 ], [ 0, %vector.body ]
  %arrayidx.i84.i = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i
  %30 = load i8, ptr %arrayidx.i84.i, align 1, !tbaa !16
  %arrayidx.i85.i = getelementptr inbounds i8, ptr %call4.i, i64 %indvars.iv.i
  %31 = load i8, ptr %arrayidx.i85.i, align 1, !tbaa !16
  %cmp20.not.i = icmp eq i8 %30, %31
  br i1 %cmp20.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i8 [ %31, %for.body.i ], [ %19, %for.cond.i ], [ %21, %for.cond.i.1 ], [ %23, %for.cond.i.2 ], [ %25, %for.cond.i.3 ]
  %arrayidx.i84.i.le = getelementptr inbounds i8, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont22.i unwind label %lpad21.i

invoke.cont22.i:                                  ; preds = %if.then.i
  %arrayidx.i88.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.lcssa
  %32 = load i64, ptr %arrayidx.i88.i, align 8, !tbaa !147
  %call.i89.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %32)
          to label %invoke.cont27.i unwind label %lpad21.i

invoke.cont27.i:                                  ; preds = %invoke.cont22.i
  %call1.i92.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont29.i unwind label %lpad21.i

invoke.cont29.i:                                  ; preds = %invoke.cont27.i
  %33 = load i8, ptr %arrayidx.i84.i.le, align 1, !tbaa !16
  %call34.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, i8 noundef zeroext %33)
          to label %invoke.cont33.i unwind label %lpad21.i

invoke.cont33.i:                                  ; preds = %invoke.cont29.i
  %call1.i97.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call34.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont35.i unwind label %lpad21.i

invoke.cont35.i:                                  ; preds = %invoke.cont33.i
  %call40.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) %call34.i, i8 noundef zeroext %.lcssa)
          to label %invoke.cont39.i unwind label %lpad21.i

invoke.cont39.i:                                  ; preds = %invoke.cont35.i
  %call42.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call40.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont41.i unwind label %lpad21.i

invoke.cont41.i:                                  ; preds = %invoke.cont39.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad21.i:                                         ; preds = %invoke.cont39.i, %invoke.cont35.i, %invoke.cont33.i, %invoke.cont29.i, %invoke.cont27.i, %invoke.cont22.i, %if.then.i
  %34 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

if.end.i.i:                                       ; preds = %invoke.cont58.i, %for.cond49.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad46.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %35 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i102.i = icmp eq ptr %35, null
  br i1 %cmp.not.i102.i, label %_ZL28benchForTruncOrZextVecInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i103.i

delete.notnull.i.i103.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %35) #13
  br label %_ZL28benchForTruncOrZextVecInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad46.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup65.i

for.body53.i:                                     ; preds = %for.body53.i.preheader, %invoke.cont58.i
  %__begin1.sroa.0.0144.i = phi i64 [ %dec.i.i, %invoke.cont58.i ], [ %27, %for.body53.i.preheader ]
  %37 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %37) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %38 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %38, i64 10000
  %bound0 = icmp ult ptr %38, %scevgep28
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13, label %vector.body34

vector.body34:                                    ; preds = %for.body53.i, %vector.body34
  %index35 = phi i64 [ %index.next38.1, %vector.body34 ], [ 0, %for.body53.i ]
  %39 = getelementptr inbounds i64, ptr %call.i, i64 %index35
  %wide.load36 = load <2 x i64>, ptr %39, align 8, !tbaa !147, !alias.scope !168
  %40 = getelementptr inbounds i64, ptr %39, i64 2
  %wide.load37 = load <2 x i64>, ptr %40, align 8, !tbaa !147, !alias.scope !168
  %41 = trunc <2 x i64> %wide.load36 to <2 x i8>
  %42 = trunc <2 x i64> %wide.load37 to <2 x i8>
  %43 = getelementptr inbounds i8, ptr %38, i64 %index35
  store <2 x i8> %41, ptr %43, align 1, !tbaa !16, !alias.scope !171, !noalias !168
  %44 = getelementptr inbounds i8, ptr %43, i64 2
  store <2 x i8> %42, ptr %44, align 1, !tbaa !16, !alias.scope !171, !noalias !168
  %index.next38 = or i64 %index35, 4
  %45 = getelementptr inbounds i64, ptr %call.i, i64 %index.next38
  %wide.load36.1 = load <2 x i64>, ptr %45, align 8, !tbaa !147, !alias.scope !168
  %46 = getelementptr inbounds i64, ptr %45, i64 2
  %wide.load37.1 = load <2 x i64>, ptr %46, align 8, !tbaa !147, !alias.scope !168
  %47 = trunc <2 x i64> %wide.load36.1 to <2 x i8>
  %48 = trunc <2 x i64> %wide.load37.1 to <2 x i8>
  %49 = getelementptr inbounds i8, ptr %38, i64 %index.next38
  store <2 x i8> %47, ptr %49, align 1, !tbaa !16, !alias.scope !171, !noalias !168
  %50 = getelementptr inbounds i8, ptr %49, i64 2
  store <2 x i8> %48, ptr %50, align 1, !tbaa !16, !alias.scope !171, !noalias !168
  %index.next38.1 = add nuw nsw i64 %index35, 8
  %51 = icmp eq i64 %index.next38.1, 10000
  br i1 %51, label %invoke.cont58.i, label %vector.body34, !llvm.loop !173

for.body.i13:                                     ; preds = %for.body53.i, %for.body.i13
  %indvars.iv.i7 = phi i64 [ %indvars.iv.next.i11.4, %for.body.i13 ], [ 0, %for.body53.i ]
  %arrayidx.i8 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i7
  %52 = load i64, ptr %arrayidx.i8, align 8, !tbaa !147
  %conv.i9 = trunc i64 %52 to i8
  %arrayidx2.i10 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.i7
  store i8 %conv.i9, ptr %arrayidx2.i10, align 1, !tbaa !16
  %indvars.iv.next.i11 = add nuw nsw i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i11
  %53 = load i64, ptr %arrayidx.i8.1, align 8, !tbaa !147
  %conv.i9.1 = trunc i64 %53 to i8
  %arrayidx2.i10.1 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.next.i11
  store i8 %conv.i9.1, ptr %arrayidx2.i10.1, align 1, !tbaa !16
  %indvars.iv.next.i11.1 = add nuw nsw i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i11.1
  %54 = load i64, ptr %arrayidx.i8.2, align 8, !tbaa !147
  %conv.i9.2 = trunc i64 %54 to i8
  %arrayidx2.i10.2 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.next.i11.1
  store i8 %conv.i9.2, ptr %arrayidx2.i10.2, align 1, !tbaa !16
  %indvars.iv.next.i11.2 = add nuw nsw i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i11.2
  %55 = load i64, ptr %arrayidx.i8.3, align 8, !tbaa !147
  %conv.i9.3 = trunc i64 %55 to i8
  %arrayidx2.i10.3 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.next.i11.2
  store i8 %conv.i9.3, ptr %arrayidx2.i10.3, align 1, !tbaa !16
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %arrayidx.i8.4 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i11.3
  %56 = load i64, ptr %arrayidx.i8.4, align 8, !tbaa !147
  %conv.i9.4 = trunc i64 %56 to i8
  %arrayidx2.i10.4 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.next.i11.3
  store i8 %conv.i9.4, ptr %arrayidx2.i10.4, align 1, !tbaa !16
  %indvars.iv.next.i11.4 = add nuw nsw i64 %indvars.iv.i7, 5
  %exitcond.not.i12.4 = icmp eq i64 %indvars.iv.next.i11.4, 10000
  br i1 %exitcond.not.i12.4, label %invoke.cont58.i, label %for.body.i13, !llvm.loop !174

invoke.cont58.i:                                  ; preds = %vector.body34, %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0144.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body53.i, !prof !42

ehcleanup65.i:                                    ; preds = %lpad46.i, %lpad21.i, %lpad5.loopexit.i
  %.pn133.i = phi { ptr, i32 } [ %34, %lpad21.i ], [ %36, %lpad46.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i113.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i113.i, label %ehcleanup67.i, label %delete.notnull.i.i114.i

delete.notnull.i.i114.i:                          ; preds = %ehcleanup65.i, %ehcleanup65.thread.i
  %.pn133.pn139.i = phi { ptr, i32 } [ %29, %ehcleanup65.thread.i ], [ %.pn133.i, %ehcleanup65.i ]
  %57 = phi ptr [ %call1.i, %ehcleanup65.thread.i ], [ %.pr.i, %ehcleanup65.i ]
  call void @_ZdaPv(ptr noundef nonnull %57) #13
  br label %ehcleanup67.i

ehcleanup67.i:                                    ; preds = %delete.notnull.i.i114.i, %ehcleanup65.i, %lpad.i
  %.pn133.pn.pn.i = phi { ptr, i32 } [ %28, %lpad.i ], [ %.pn133.i, %ehcleanup65.i ], [ %.pn133.pn139.i, %delete.notnull.i.i114.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn133.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i103.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i31.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  store i8 0, ptr %distrib.i32.i, align 1, !tbaa !67
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i33.i, align 1, !tbaa !69
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %0 = load ptr, ptr %B.i, align 8, !tbaa !5
  %arrayidx.i.i35.i = getelementptr inbounds i8, ptr %0, i64 %indvars.iv.i34.i
  store i8 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 1, !tbaa !16
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %1 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %2 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %lpad11.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %1, 0
  %cmp.not.i.not7173.i = icmp eq i64 %2, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep2 = getelementptr i8, ptr %call.i, i64 80000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i unwind label %lpad11.i

_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %3 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %3, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %3) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %4 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad11.i:                                         ; preds = %if.end.i.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %5 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %2, %for.body.i.preheader ]
  %6 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %6) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %7 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %7, i64 10000
  %bound0 = icmp ult ptr %7, %scevgep2
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1.preheader, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i ]
  %8 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <8 x i64>, ptr %8, align 8, !tbaa !147, !alias.scope !175
  %9 = getelementptr inbounds i64, ptr %8, i64 8
  %wide.load3 = load <8 x i64>, ptr %9, align 8, !tbaa !147, !alias.scope !175
  %10 = getelementptr inbounds i64, ptr %8, i64 16
  %wide.load4 = load <8 x i64>, ptr %10, align 8, !tbaa !147, !alias.scope !175
  %11 = getelementptr inbounds i64, ptr %8, i64 24
  %wide.load5 = load <8 x i64>, ptr %11, align 8, !tbaa !147, !alias.scope !175
  %12 = getelementptr inbounds i8, ptr %7, i64 %index
  %wide.load6 = load <8 x i8>, ptr %12, align 1, !tbaa !16, !alias.scope !178, !noalias !175
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  %wide.load7 = load <8 x i8>, ptr %13, align 1, !tbaa !16, !alias.scope !178, !noalias !175
  %14 = getelementptr inbounds i8, ptr %12, i64 16
  %wide.load8 = load <8 x i8>, ptr %14, align 1, !tbaa !16, !alias.scope !178, !noalias !175
  %15 = getelementptr inbounds i8, ptr %12, i64 24
  %wide.load9 = load <8 x i8>, ptr %15, align 1, !tbaa !16, !alias.scope !178, !noalias !175
  %16 = trunc <8 x i64> %wide.load to <8 x i8>
  %17 = trunc <8 x i64> %wide.load3 to <8 x i8>
  %18 = trunc <8 x i64> %wide.load4 to <8 x i8>
  %19 = trunc <8 x i64> %wide.load5 to <8 x i8>
  %20 = add <8 x i8> %wide.load6, %16
  %21 = add <8 x i8> %wide.load7, %17
  %22 = add <8 x i8> %wide.load8, %18
  %23 = add <8 x i8> %wide.load9, %19
  store <8 x i8> %20, ptr %12, align 1, !tbaa !16, !alias.scope !178, !noalias !175
  store <8 x i8> %21, ptr %13, align 1, !tbaa !16, !alias.scope !178, !noalias !175
  store <8 x i8> %22, ptr %14, align 1, !tbaa !16, !alias.scope !178, !noalias !175
  store <8 x i8> %23, ptr %15, align 1, !tbaa !16, !alias.scope !178, !noalias !175
  %index.next = add nuw i64 %index, 32
  %24 = icmp eq i64 %index.next, 9984
  br i1 %24, label %for.body.i1.preheader, label %vector.body, !llvm.loop !180

for.body.i1.preheader:                            ; preds = %vector.body, %for.body.i
  %indvars.iv.i.ph = phi i64 [ 0, %for.body.i ], [ 9984, %vector.body ]
  br label %for.body.i1

for.body.i1:                                      ; preds = %for.body.i1, %for.body.i1.preheader
  %indvars.iv.i = phi i64 [ %indvars.iv.i.ph, %for.body.i1.preheader ], [ %indvars.iv.next.i.3, %for.body.i1 ]
  %arrayidx.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i
  %25 = load i64, ptr %arrayidx.i, align 8, !tbaa !147
  %arrayidx2.i = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.i
  %26 = load i8, ptr %arrayidx2.i, align 1, !tbaa !16
  %27 = trunc i64 %25 to i8
  %conv3.i = add i8 %26, %27
  store i8 %conv3.i, ptr %arrayidx2.i, align 1, !tbaa !16
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i
  %28 = load i64, ptr %arrayidx.i.1, align 8, !tbaa !147
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i
  %29 = load i8, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %30 = trunc i64 %28 to i8
  %conv3.i.1 = add i8 %29, %30
  store i8 %conv3.i.1, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i.1
  %31 = load i64, ptr %arrayidx.i.2, align 8, !tbaa !147
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.1
  %32 = load i8, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %33 = trunc i64 %31 to i8
  %conv3.i.2 = add i8 %32, %33
  store i8 %conv3.i.2, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i.2
  %34 = load i64, ptr %arrayidx.i.3, align 8, !tbaa !147
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.2
  %35 = load i8, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %36 = trunc i64 %34 to i8
  %conv3.i.3 = add i8 %35, %36
  store i8 %conv3.i.3, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !181

invoke.cont19.i:                                  ; preds = %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %lpad11.i, %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i
  %.pn.pn.i = phi { ptr, i32 } [ %5, %lpad11.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ]
  %37 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %37, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %ehcleanup24.i
  call void @_ZdaPv(ptr noundef nonnull %37) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %4, %lpad.i ], [ %.pn.pn.i, %ehcleanup24.i ], [ %.pn.pn.i, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i31.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  store i8 0, ptr %distrib.i32.i, align 1, !tbaa !67
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i33.i, align 1, !tbaa !69
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %0 = load ptr, ptr %B.i, align 8, !tbaa !5
  %arrayidx.i.i35.i = getelementptr inbounds i8, ptr %0, i64 %indvars.iv.i34.i
  store i8 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 1, !tbaa !16
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %1 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %2 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %lpad11.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %1, 0
  %cmp.not.i.not7173.i = icmp eq i64 %2, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep2 = getelementptr i8, ptr %call.i, i64 80000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i unwind label %lpad11.i

_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %3 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %3, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %3) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %4 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad11.i:                                         ; preds = %if.end.i.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %5 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %2, %for.body.i.preheader ]
  %6 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %6) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %7 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %7, i64 10000
  %bound0 = icmp ult ptr %7, %scevgep2
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1.preheader, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i ]
  %8 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <16 x i64>, ptr %8, align 8, !tbaa !147, !alias.scope !182
  %9 = getelementptr inbounds i64, ptr %8, i64 16
  %wide.load3 = load <16 x i64>, ptr %9, align 8, !tbaa !147, !alias.scope !182
  %10 = getelementptr inbounds i64, ptr %8, i64 32
  %wide.load4 = load <16 x i64>, ptr %10, align 8, !tbaa !147, !alias.scope !182
  %11 = getelementptr inbounds i64, ptr %8, i64 48
  %wide.load5 = load <16 x i64>, ptr %11, align 8, !tbaa !147, !alias.scope !182
  %12 = getelementptr inbounds i8, ptr %7, i64 %index
  %wide.load6 = load <16 x i8>, ptr %12, align 1, !tbaa !16, !alias.scope !185, !noalias !182
  %13 = getelementptr inbounds i8, ptr %12, i64 16
  %wide.load7 = load <16 x i8>, ptr %13, align 1, !tbaa !16, !alias.scope !185, !noalias !182
  %14 = getelementptr inbounds i8, ptr %12, i64 32
  %wide.load8 = load <16 x i8>, ptr %14, align 1, !tbaa !16, !alias.scope !185, !noalias !182
  %15 = getelementptr inbounds i8, ptr %12, i64 48
  %wide.load9 = load <16 x i8>, ptr %15, align 1, !tbaa !16, !alias.scope !185, !noalias !182
  %16 = trunc <16 x i64> %wide.load to <16 x i8>
  %17 = trunc <16 x i64> %wide.load3 to <16 x i8>
  %18 = trunc <16 x i64> %wide.load4 to <16 x i8>
  %19 = trunc <16 x i64> %wide.load5 to <16 x i8>
  %20 = add <16 x i8> %wide.load6, %16
  %21 = add <16 x i8> %wide.load7, %17
  %22 = add <16 x i8> %wide.load8, %18
  %23 = add <16 x i8> %wide.load9, %19
  store <16 x i8> %20, ptr %12, align 1, !tbaa !16, !alias.scope !185, !noalias !182
  store <16 x i8> %21, ptr %13, align 1, !tbaa !16, !alias.scope !185, !noalias !182
  store <16 x i8> %22, ptr %14, align 1, !tbaa !16, !alias.scope !185, !noalias !182
  store <16 x i8> %23, ptr %15, align 1, !tbaa !16, !alias.scope !185, !noalias !182
  %index.next = add nuw i64 %index, 64
  %24 = icmp eq i64 %index.next, 9984
  br i1 %24, label %for.body.i1.preheader, label %vector.body, !llvm.loop !187

for.body.i1.preheader:                            ; preds = %vector.body, %for.body.i
  %indvars.iv.i.ph = phi i64 [ 0, %for.body.i ], [ 9984, %vector.body ]
  br label %for.body.i1

for.body.i1:                                      ; preds = %for.body.i1, %for.body.i1.preheader
  %indvars.iv.i = phi i64 [ %indvars.iv.i.ph, %for.body.i1.preheader ], [ %indvars.iv.next.i.3, %for.body.i1 ]
  %arrayidx.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i
  %25 = load i64, ptr %arrayidx.i, align 8, !tbaa !147
  %arrayidx2.i = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.i
  %26 = load i8, ptr %arrayidx2.i, align 1, !tbaa !16
  %27 = trunc i64 %25 to i8
  %conv3.i = add i8 %26, %27
  store i8 %conv3.i, ptr %arrayidx2.i, align 1, !tbaa !16
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i
  %28 = load i64, ptr %arrayidx.i.1, align 8, !tbaa !147
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i
  %29 = load i8, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %30 = trunc i64 %28 to i8
  %conv3.i.1 = add i8 %29, %30
  store i8 %conv3.i.1, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i.1
  %31 = load i64, ptr %arrayidx.i.2, align 8, !tbaa !147
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.1
  %32 = load i8, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %33 = trunc i64 %31 to i8
  %conv3.i.2 = add i8 %32, %33
  store i8 %conv3.i.2, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i.2
  %34 = load i64, ptr %arrayidx.i.3, align 8, !tbaa !147
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.2
  %35 = load i8, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %36 = trunc i64 %34 to i8
  %conv3.i.3 = add i8 %35, %36
  store i8 %conv3.i.3, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !188

invoke.cont19.i:                                  ; preds = %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %lpad11.i, %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i
  %.pn.pn.i = phi { ptr, i32 } [ %5, %lpad11.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ]
  %37 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %37, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %ehcleanup24.i
  call void @_ZdaPv(ptr noundef nonnull %37) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %4, %lpad.i ], [ %.pn.pn.i, %ehcleanup24.i ], [ %.pn.pn.i, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint8_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr.33", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i31.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  store i8 0, ptr %distrib.i32.i, align 1, !tbaa !67
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i33.i, align 1, !tbaa !69
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %0 = load ptr, ptr %B.i, align 8, !tbaa !5
  %arrayidx.i.i35.i = getelementptr inbounds i8, ptr %0, i64 %indvars.iv.i34.i
  store i8 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 1, !tbaa !16
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %1 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %2 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %lpad11.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %1, 0
  %cmp.not.i.not7173.i = icmp eq i64 %2, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep2 = getelementptr i8, ptr %call.i, i64 80000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i unwind label %lpad11.i

_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %3 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %3, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %3) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %4 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

lpad11.i:                                         ; preds = %if.end.i.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %5 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup24.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %2, %for.body.i.preheader ]
  %6 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.33") %B.i, i64 %6) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %7 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %7, i64 10000
  %bound0 = icmp ult ptr %7, %scevgep2
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %for.body.i ]
  %8 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <2 x i64>, ptr %8, align 8, !tbaa !147, !alias.scope !189
  %9 = getelementptr inbounds i64, ptr %8, i64 2
  %wide.load3 = load <2 x i64>, ptr %9, align 8, !tbaa !147, !alias.scope !189
  %10 = getelementptr inbounds i8, ptr %7, i64 %index
  %wide.load4 = load <2 x i8>, ptr %10, align 1, !tbaa !16, !alias.scope !192, !noalias !189
  %11 = getelementptr inbounds i8, ptr %10, i64 2
  %wide.load5 = load <2 x i8>, ptr %11, align 1, !tbaa !16, !alias.scope !192, !noalias !189
  %12 = trunc <2 x i64> %wide.load to <2 x i8>
  %13 = trunc <2 x i64> %wide.load3 to <2 x i8>
  %14 = add <2 x i8> %wide.load4, %12
  %15 = add <2 x i8> %wide.load5, %13
  store <2 x i8> %14, ptr %10, align 1, !tbaa !16, !alias.scope !192, !noalias !189
  store <2 x i8> %15, ptr %11, align 1, !tbaa !16, !alias.scope !192, !noalias !189
  %index.next = or i64 %index, 4
  %16 = getelementptr inbounds i64, ptr %call.i, i64 %index.next
  %wide.load.1 = load <2 x i64>, ptr %16, align 8, !tbaa !147, !alias.scope !189
  %17 = getelementptr inbounds i64, ptr %16, i64 2
  %wide.load3.1 = load <2 x i64>, ptr %17, align 8, !tbaa !147, !alias.scope !189
  %18 = getelementptr inbounds i8, ptr %7, i64 %index.next
  %wide.load4.1 = load <2 x i8>, ptr %18, align 1, !tbaa !16, !alias.scope !192, !noalias !189
  %19 = getelementptr inbounds i8, ptr %18, i64 2
  %wide.load5.1 = load <2 x i8>, ptr %19, align 1, !tbaa !16, !alias.scope !192, !noalias !189
  %20 = trunc <2 x i64> %wide.load.1 to <2 x i8>
  %21 = trunc <2 x i64> %wide.load3.1 to <2 x i8>
  %22 = add <2 x i8> %wide.load4.1, %20
  %23 = add <2 x i8> %wide.load5.1, %21
  store <2 x i8> %22, ptr %18, align 1, !tbaa !16, !alias.scope !192, !noalias !189
  store <2 x i8> %23, ptr %19, align 1, !tbaa !16, !alias.scope !192, !noalias !189
  %index.next.1 = add nuw nsw i64 %index, 8
  %24 = icmp eq i64 %index.next.1, 10000
  br i1 %24, label %invoke.cont19.i, label %vector.body, !llvm.loop !194

for.body.i1:                                      ; preds = %for.body.i, %for.body.i1
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body.i1 ], [ 0, %for.body.i ]
  %arrayidx.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i
  %25 = load i64, ptr %arrayidx.i, align 8, !tbaa !147
  %arrayidx2.i = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.i
  %26 = load i8, ptr %arrayidx2.i, align 1, !tbaa !16
  %27 = trunc i64 %25 to i8
  %conv3.i = add i8 %26, %27
  store i8 %conv3.i, ptr %arrayidx2.i, align 1, !tbaa !16
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i
  %28 = load i64, ptr %arrayidx.i.1, align 8, !tbaa !147
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i
  %29 = load i8, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %30 = trunc i64 %28 to i8
  %conv3.i.1 = add i8 %29, %30
  store i8 %conv3.i.1, ptr %arrayidx2.i.1, align 1, !tbaa !16
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i.1
  %31 = load i64, ptr %arrayidx.i.2, align 8, !tbaa !147
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.1
  %32 = load i8, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %33 = trunc i64 %31 to i8
  %conv3.i.2 = add i8 %32, %33
  store i8 %conv3.i.2, ptr %arrayidx2.i.2, align 1, !tbaa !16
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i.2
  %34 = load i64, ptr %arrayidx.i.3, align 8, !tbaa !147
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next.i.2
  %35 = load i8, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %36 = trunc i64 %34 to i8
  %conv3.i.3 = add i8 %35, %36
  store i8 %conv3.i.3, ptr %arrayidx2.i.3, align 1, !tbaa !16
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !195

invoke.cont19.i:                                  ; preds = %vector.body, %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %lpad11.i, %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i
  %.pn.pn.i = phi { ptr, i32 } [ %5, %lpad11.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ]
  %37 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %37, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %ehcleanup24.i
  call void @_ZdaPv(ptr noundef nonnull %37) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %4, %lpad.i ], [ %.pn.pn.i, %ehcleanup24.i ], [ %.pn.pn.i, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopImhEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_hSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont3.i unwind label %ehcleanup62.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i76.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i76.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  br label %for.body.i80.i

for.body.i80.i:                                   ; preds = %for.body.i80.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i77.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i78.i.4, %for.body.i80.i ]
  %arrayidx.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i77.i
  %0 = load i32, ptr %arrayidx.i.i, align 4, !tbaa !95
  %conv.i.i = trunc i32 %0 to i16
  %arrayidx2.i.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i77.i
  store i16 %conv.i.i, ptr %arrayidx2.i.i, align 2, !tbaa !13
  %indvars.iv.next.i78.i = add nuw nsw i64 %indvars.iv.i77.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i78.i
  %1 = load i32, ptr %arrayidx.i.i.1, align 4, !tbaa !95
  %conv.i.i.1 = trunc i32 %1 to i16
  %arrayidx2.i.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i78.i
  store i16 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 2, !tbaa !13
  %indvars.iv.next.i78.i.1 = add nuw nsw i64 %indvars.iv.i77.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i78.i.1
  %2 = load i32, ptr %arrayidx.i.i.2, align 4, !tbaa !95
  %conv.i.i.2 = trunc i32 %2 to i16
  %arrayidx2.i.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i78.i.1
  store i16 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 2, !tbaa !13
  %indvars.iv.next.i78.i.2 = add nuw nsw i64 %indvars.iv.i77.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i78.i.2
  %3 = load i32, ptr %arrayidx.i.i.3, align 4, !tbaa !95
  %conv.i.i.3 = trunc i32 %3 to i16
  %arrayidx2.i.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i78.i.2
  store i16 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 2, !tbaa !13
  %indvars.iv.next.i78.i.3 = add nuw nsw i64 %indvars.iv.i77.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i78.i.3
  %4 = load i32, ptr %arrayidx.i.i.4, align 4, !tbaa !95
  %conv.i.i.4 = trunc i32 %4 to i16
  %arrayidx2.i.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i78.i.3
  store i16 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 2, !tbaa !13
  %indvars.iv.next.i78.i.4 = add nuw nsw i64 %indvars.iv.i77.i, 5
  %exitcond.not.i79.i.4 = icmp eq i64 %indvars.iv.next.i78.i.4, 10000
  br i1 %exitcond.not.i79.i.4, label %vector.body, label %for.body.i80.i, !llvm.loop !196

vector.body:                                      ; preds = %for.body.i80.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i80.i ]
  %5 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <8 x i32>, ptr %5, align 4, !tbaa !95
  %6 = getelementptr inbounds i32, ptr %5, i64 8
  %wide.load27 = load <8 x i32>, ptr %6, align 4, !tbaa !95
  %7 = getelementptr inbounds i32, ptr %5, i64 16
  %wide.load28 = load <8 x i32>, ptr %7, align 4, !tbaa !95
  %8 = getelementptr inbounds i32, ptr %5, i64 24
  %wide.load29 = load <8 x i32>, ptr %8, align 4, !tbaa !95
  %9 = trunc <8 x i32> %wide.load to <8 x i16>
  %10 = trunc <8 x i32> %wide.load27 to <8 x i16>
  %11 = trunc <8 x i32> %wide.load28 to <8 x i16>
  %12 = trunc <8 x i32> %wide.load29 to <8 x i16>
  %13 = getelementptr inbounds i16, ptr %call1.i, i64 %index
  store <8 x i16> %9, ptr %13, align 2, !tbaa !13
  %14 = getelementptr inbounds i16, ptr %13, i64 8
  store <8 x i16> %10, ptr %14, align 2, !tbaa !13
  %15 = getelementptr inbounds i16, ptr %13, i64 16
  store <8 x i16> %11, ptr %15, align 2, !tbaa !13
  %16 = getelementptr inbounds i16, ptr %13, i64 24
  store <8 x i16> %12, ptr %16, align 2, !tbaa !13
  %index.next = add nuw i64 %index, 32
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !197

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i32, ptr %call.i, i64 9984
  %18 = load i32, ptr %arrayidx.i, align 4, !tbaa !95
  %conv.i = trunc i32 %18 to i16
  %arrayidx2.i = getelementptr inbounds i16, ptr %call1.i, i64 9984
  store i16 %conv.i, ptr %arrayidx2.i, align 2, !tbaa !13
  %arrayidx.i.1 = getelementptr inbounds i32, ptr %call.i, i64 9985
  %19 = load i32, ptr %arrayidx.i.1, align 4, !tbaa !95
  %conv.i.1 = trunc i32 %19 to i16
  %arrayidx2.i.1 = getelementptr inbounds i16, ptr %call1.i, i64 9985
  store i16 %conv.i.1, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %arrayidx.i.2 = getelementptr inbounds i32, ptr %call.i, i64 9986
  %20 = load i32, ptr %arrayidx.i.2, align 4, !tbaa !95
  %conv.i.2 = trunc i32 %20 to i16
  %arrayidx2.i.2 = getelementptr inbounds i16, ptr %call1.i, i64 9986
  store i16 %conv.i.2, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %arrayidx.i.3 = getelementptr inbounds i32, ptr %call.i, i64 9987
  %21 = load i32, ptr %arrayidx.i.3, align 4, !tbaa !95
  %conv.i.3 = trunc i32 %21 to i16
  %arrayidx2.i.3 = getelementptr inbounds i16, ptr %call1.i, i64 9987
  store i16 %conv.i.3, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %arrayidx.i.4 = getelementptr inbounds i32, ptr %call.i, i64 9988
  %22 = load i32, ptr %arrayidx.i.4, align 4, !tbaa !95
  %conv.i.4 = trunc i32 %22 to i16
  %arrayidx2.i.4 = getelementptr inbounds i16, ptr %call1.i, i64 9988
  store i16 %conv.i.4, ptr %arrayidx2.i.4, align 2, !tbaa !13
  %arrayidx.i.5 = getelementptr inbounds i32, ptr %call.i, i64 9989
  %23 = load i32, ptr %arrayidx.i.5, align 4, !tbaa !95
  %conv.i.5 = trunc i32 %23 to i16
  %arrayidx2.i.5 = getelementptr inbounds i16, ptr %call1.i, i64 9989
  store i16 %conv.i.5, ptr %arrayidx2.i.5, align 2, !tbaa !13
  %arrayidx.i.6 = getelementptr inbounds i32, ptr %call.i, i64 9990
  %24 = load i32, ptr %arrayidx.i.6, align 4, !tbaa !95
  %conv.i.6 = trunc i32 %24 to i16
  %arrayidx2.i.6 = getelementptr inbounds i16, ptr %call1.i, i64 9990
  store i16 %conv.i.6, ptr %arrayidx2.i.6, align 2, !tbaa !13
  %arrayidx.i.7 = getelementptr inbounds i32, ptr %call.i, i64 9991
  %25 = load i32, ptr %arrayidx.i.7, align 4, !tbaa !95
  %conv.i.7 = trunc i32 %25 to i16
  %arrayidx2.i.7 = getelementptr inbounds i16, ptr %call1.i, i64 9991
  store i16 %conv.i.7, ptr %arrayidx2.i.7, align 2, !tbaa !13
  %arrayidx.i.8 = getelementptr inbounds i32, ptr %call.i, i64 9992
  %26 = load i32, ptr %arrayidx.i.8, align 4, !tbaa !95
  %conv.i.8 = trunc i32 %26 to i16
  %arrayidx2.i.8 = getelementptr inbounds i16, ptr %call1.i, i64 9992
  store i16 %conv.i.8, ptr %arrayidx2.i.8, align 2, !tbaa !13
  %arrayidx.i.9 = getelementptr inbounds i32, ptr %call.i, i64 9993
  %27 = load i32, ptr %arrayidx.i.9, align 4, !tbaa !95
  %conv.i.9 = trunc i32 %27 to i16
  %arrayidx2.i.9 = getelementptr inbounds i16, ptr %call1.i, i64 9993
  store i16 %conv.i.9, ptr %arrayidx2.i.9, align 2, !tbaa !13
  %arrayidx.i.10 = getelementptr inbounds i32, ptr %call.i, i64 9994
  %28 = load i32, ptr %arrayidx.i.10, align 4, !tbaa !95
  %conv.i.10 = trunc i32 %28 to i16
  %arrayidx2.i.10 = getelementptr inbounds i16, ptr %call1.i, i64 9994
  store i16 %conv.i.10, ptr %arrayidx2.i.10, align 2, !tbaa !13
  %arrayidx.i.11 = getelementptr inbounds i32, ptr %call.i, i64 9995
  %29 = load i32, ptr %arrayidx.i.11, align 4, !tbaa !95
  %conv.i.11 = trunc i32 %29 to i16
  %arrayidx2.i.11 = getelementptr inbounds i16, ptr %call1.i, i64 9995
  store i16 %conv.i.11, ptr %arrayidx2.i.11, align 2, !tbaa !13
  %arrayidx.i.12 = getelementptr inbounds i32, ptr %call.i, i64 9996
  %30 = load i32, ptr %arrayidx.i.12, align 4, !tbaa !95
  %conv.i.12 = trunc i32 %30 to i16
  %arrayidx2.i.12 = getelementptr inbounds i16, ptr %call1.i, i64 9996
  store i16 %conv.i.12, ptr %arrayidx2.i.12, align 2, !tbaa !13
  %arrayidx.i.13 = getelementptr inbounds i32, ptr %call.i, i64 9997
  %31 = load i32, ptr %arrayidx.i.13, align 4, !tbaa !95
  %conv.i.13 = trunc i32 %31 to i16
  %arrayidx2.i.13 = getelementptr inbounds i16, ptr %call1.i, i64 9997
  store i16 %conv.i.13, ptr %arrayidx2.i.13, align 2, !tbaa !13
  %arrayidx.i.14 = getelementptr inbounds i32, ptr %call.i, i64 9998
  %32 = load i32, ptr %arrayidx.i.14, align 4, !tbaa !95
  %conv.i.14 = trunc i32 %32 to i16
  %arrayidx2.i.14 = getelementptr inbounds i16, ptr %call1.i, i64 9998
  store i16 %conv.i.14, ptr %arrayidx2.i.14, align 2, !tbaa !13
  %arrayidx.i.15 = getelementptr inbounds i32, ptr %call.i, i64 9999
  %33 = load i32, ptr %arrayidx.i.15, align 4, !tbaa !95
  %conv.i.15 = trunc i32 %33 to i16
  %arrayidx2.i.15 = getelementptr inbounds i16, ptr %call1.i, i64 9999
  store i16 %conv.i.15, ptr %arrayidx2.i.15, align 2, !tbaa !13
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i81.i.1 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i16, ptr %arrayidx.i81.i.1, align 2, !tbaa !13
  %arrayidx.i82.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i16, ptr %arrayidx.i82.i.1, align 2, !tbaa !13
  %cmp18.not.i.1 = icmp eq i16 %34, %35
  br i1 %cmp18.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i81.i.2 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i16, ptr %arrayidx.i81.i.2, align 2, !tbaa !13
  %arrayidx.i82.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i16, ptr %arrayidx.i82.i.2, align 2, !tbaa !13
  %cmp18.not.i.2 = icmp eq i16 %36, %37
  br i1 %cmp18.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i81.i.3 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i16, ptr %arrayidx.i81.i.3, align 2, !tbaa !13
  %arrayidx.i82.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i16, ptr %arrayidx.i82.i.3, align 2, !tbaa !13
  %cmp18.not.i.3 = icmp eq i16 %38, %39
  br i1 %cmp18.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i81.i.4 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i16, ptr %arrayidx.i81.i.4, align 2, !tbaa !13
  %arrayidx.i82.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i16, ptr %arrayidx.i82.i.4, align 2, !tbaa !13
  %cmp18.not.i.4 = icmp eq i16 %40, %41
  br i1 %cmp18.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !198

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond46.preheader.i unwind label %lpad43.i

for.cond46.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not146150.i = icmp eq i64 %43, 0
  %cmp.not.i.not146.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not146150.i
  br i1 %cmp.not.i.not146.i, label %if.end.i.i, label %for.body50.i.preheader, !prof !42

for.body50.i.preheader:                           ; preds = %for.cond46.preheader.i
  %arrayidx.i8 = getelementptr inbounds i32, ptr %call.i, i64 9984
  %arrayidx.i8.1 = getelementptr inbounds i32, ptr %call.i, i64 9985
  %arrayidx.i8.2 = getelementptr inbounds i32, ptr %call.i, i64 9986
  %arrayidx.i8.3 = getelementptr inbounds i32, ptr %call.i, i64 9987
  %arrayidx.i8.4 = getelementptr inbounds i32, ptr %call.i, i64 9988
  %arrayidx.i8.5 = getelementptr inbounds i32, ptr %call.i, i64 9989
  %arrayidx.i8.6 = getelementptr inbounds i32, ptr %call.i, i64 9990
  %arrayidx.i8.7 = getelementptr inbounds i32, ptr %call.i, i64 9991
  %arrayidx.i8.8 = getelementptr inbounds i32, ptr %call.i, i64 9992
  %arrayidx.i8.9 = getelementptr inbounds i32, ptr %call.i, i64 9993
  %arrayidx.i8.10 = getelementptr inbounds i32, ptr %call.i, i64 9994
  %arrayidx.i8.11 = getelementptr inbounds i32, ptr %call.i, i64 9995
  %arrayidx.i8.12 = getelementptr inbounds i32, ptr %call.i, i64 9996
  %arrayidx.i8.13 = getelementptr inbounds i32, ptr %call.i, i64 9997
  %arrayidx.i8.14 = getelementptr inbounds i32, ptr %call.i, i64 9998
  %arrayidx.i8.15 = getelementptr inbounds i32, ptr %call.i, i64 9999
  br label %for.body50.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup64.i

ehcleanup62.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i117.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup62.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i81.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i16, ptr %arrayidx.i81.i, align 2, !tbaa !13
  %arrayidx.i82.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i16, ptr %arrayidx.i82.i, align 2, !tbaa !13
  %cmp18.not.i = icmp eq i16 %46, %47
  br i1 %cmp18.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i16 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i81.i.le = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i84.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont20.i unwind label %lpad19.i

invoke.cont20.i:                                  ; preds = %if.then.i
  %arrayidx.i85.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i32, ptr %arrayidx.i85.i, align 4, !tbaa !95
  %conv.i86.i = zext i32 %48 to i64
  %call.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i86.i)
          to label %invoke.cont24.i unwind label %lpad19.i

invoke.cont24.i:                                  ; preds = %invoke.cont20.i
  %call1.i90.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i87.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont26.i unwind label %lpad19.i

invoke.cont26.i:                                  ; preds = %invoke.cont24.i
  %49 = load i16, ptr %arrayidx.i81.i.le, align 2, !tbaa !13
  %conv.i93.i = zext i16 %49 to i64
  %call.i94.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i87.i, i64 noundef %conv.i93.i)
          to label %invoke.cont30.i unwind label %lpad19.i

invoke.cont30.i:                                  ; preds = %invoke.cont26.i
  %call1.i97.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i94.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont32.i unwind label %lpad19.i

invoke.cont32.i:                                  ; preds = %invoke.cont30.i
  %conv.i100.i = zext i16 %.lcssa to i64
  %call.i101.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i94.i, i64 noundef %conv.i100.i)
          to label %invoke.cont36.i unwind label %lpad19.i

invoke.cont36.i:                                  ; preds = %invoke.cont32.i
  %call39.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i101.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont38.i unwind label %lpad19.i

invoke.cont38.i:                                  ; preds = %invoke.cont36.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad19.i:                                         ; preds = %invoke.cont36.i, %invoke.cont32.i, %invoke.cont30.i, %invoke.cont26.i, %invoke.cont24.i, %invoke.cont20.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup62.i

if.end.i.i:                                       ; preds = %for.body.i13, %for.cond46.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad43.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i105.i = icmp eq ptr %51, null
  br i1 %cmp.not.i105.i, label %_ZL28benchForTruncOrZextVecInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i106.i

delete.notnull.i.i106.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad43.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup62.i

for.body50.i:                                     ; preds = %for.body50.i.preheader, %for.body.i13
  %__begin1.sroa.0.0147.i = phi i64 [ %dec.i.i, %for.body.i13 ], [ %43, %for.body50.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body35

vector.body35:                                    ; preds = %vector.body35, %for.body50.i
  %index36 = phi i64 [ 0, %for.body50.i ], [ %index.next41, %vector.body35 ]
  %55 = getelementptr inbounds i32, ptr %call.i, i64 %index36
  %wide.load37 = load <8 x i32>, ptr %55, align 4, !tbaa !95
  %56 = getelementptr inbounds i32, ptr %55, i64 8
  %wide.load38 = load <8 x i32>, ptr %56, align 4, !tbaa !95
  %57 = getelementptr inbounds i32, ptr %55, i64 16
  %wide.load39 = load <8 x i32>, ptr %57, align 4, !tbaa !95
  %58 = getelementptr inbounds i32, ptr %55, i64 24
  %wide.load40 = load <8 x i32>, ptr %58, align 4, !tbaa !95
  %59 = trunc <8 x i32> %wide.load37 to <8 x i16>
  %60 = trunc <8 x i32> %wide.load38 to <8 x i16>
  %61 = trunc <8 x i32> %wide.load39 to <8 x i16>
  %62 = trunc <8 x i32> %wide.load40 to <8 x i16>
  %63 = getelementptr inbounds i16, ptr %54, i64 %index36
  store <8 x i16> %59, ptr %63, align 2, !tbaa !13
  %64 = getelementptr inbounds i16, ptr %63, i64 8
  store <8 x i16> %60, ptr %64, align 2, !tbaa !13
  %65 = getelementptr inbounds i16, ptr %63, i64 16
  store <8 x i16> %61, ptr %65, align 2, !tbaa !13
  %66 = getelementptr inbounds i16, ptr %63, i64 24
  store <8 x i16> %62, ptr %66, align 2, !tbaa !13
  %index.next41 = add nuw i64 %index36, 32
  %67 = icmp eq i64 %index.next41, 9984
  br i1 %67, label %for.body.i13, label %vector.body35, !llvm.loop !199

for.body.i13:                                     ; preds = %vector.body35
  %68 = load i32, ptr %arrayidx.i8, align 4, !tbaa !95
  %conv.i9 = trunc i32 %68 to i16
  %arrayidx2.i10 = getelementptr inbounds i16, ptr %54, i64 9984
  store i16 %conv.i9, ptr %arrayidx2.i10, align 2, !tbaa !13
  %69 = load i32, ptr %arrayidx.i8.1, align 4, !tbaa !95
  %conv.i9.1 = trunc i32 %69 to i16
  %arrayidx2.i10.1 = getelementptr inbounds i16, ptr %54, i64 9985
  store i16 %conv.i9.1, ptr %arrayidx2.i10.1, align 2, !tbaa !13
  %70 = load i32, ptr %arrayidx.i8.2, align 4, !tbaa !95
  %conv.i9.2 = trunc i32 %70 to i16
  %arrayidx2.i10.2 = getelementptr inbounds i16, ptr %54, i64 9986
  store i16 %conv.i9.2, ptr %arrayidx2.i10.2, align 2, !tbaa !13
  %71 = load i32, ptr %arrayidx.i8.3, align 4, !tbaa !95
  %conv.i9.3 = trunc i32 %71 to i16
  %arrayidx2.i10.3 = getelementptr inbounds i16, ptr %54, i64 9987
  store i16 %conv.i9.3, ptr %arrayidx2.i10.3, align 2, !tbaa !13
  %72 = load i32, ptr %arrayidx.i8.4, align 4, !tbaa !95
  %conv.i9.4 = trunc i32 %72 to i16
  %arrayidx2.i10.4 = getelementptr inbounds i16, ptr %54, i64 9988
  store i16 %conv.i9.4, ptr %arrayidx2.i10.4, align 2, !tbaa !13
  %73 = load i32, ptr %arrayidx.i8.5, align 4, !tbaa !95
  %conv.i9.5 = trunc i32 %73 to i16
  %arrayidx2.i10.5 = getelementptr inbounds i16, ptr %54, i64 9989
  store i16 %conv.i9.5, ptr %arrayidx2.i10.5, align 2, !tbaa !13
  %74 = load i32, ptr %arrayidx.i8.6, align 4, !tbaa !95
  %conv.i9.6 = trunc i32 %74 to i16
  %arrayidx2.i10.6 = getelementptr inbounds i16, ptr %54, i64 9990
  store i16 %conv.i9.6, ptr %arrayidx2.i10.6, align 2, !tbaa !13
  %75 = load i32, ptr %arrayidx.i8.7, align 4, !tbaa !95
  %conv.i9.7 = trunc i32 %75 to i16
  %arrayidx2.i10.7 = getelementptr inbounds i16, ptr %54, i64 9991
  store i16 %conv.i9.7, ptr %arrayidx2.i10.7, align 2, !tbaa !13
  %76 = load i32, ptr %arrayidx.i8.8, align 4, !tbaa !95
  %conv.i9.8 = trunc i32 %76 to i16
  %arrayidx2.i10.8 = getelementptr inbounds i16, ptr %54, i64 9992
  store i16 %conv.i9.8, ptr %arrayidx2.i10.8, align 2, !tbaa !13
  %77 = load i32, ptr %arrayidx.i8.9, align 4, !tbaa !95
  %conv.i9.9 = trunc i32 %77 to i16
  %arrayidx2.i10.9 = getelementptr inbounds i16, ptr %54, i64 9993
  store i16 %conv.i9.9, ptr %arrayidx2.i10.9, align 2, !tbaa !13
  %78 = load i32, ptr %arrayidx.i8.10, align 4, !tbaa !95
  %conv.i9.10 = trunc i32 %78 to i16
  %arrayidx2.i10.10 = getelementptr inbounds i16, ptr %54, i64 9994
  store i16 %conv.i9.10, ptr %arrayidx2.i10.10, align 2, !tbaa !13
  %79 = load i32, ptr %arrayidx.i8.11, align 4, !tbaa !95
  %conv.i9.11 = trunc i32 %79 to i16
  %arrayidx2.i10.11 = getelementptr inbounds i16, ptr %54, i64 9995
  store i16 %conv.i9.11, ptr %arrayidx2.i10.11, align 2, !tbaa !13
  %80 = load i32, ptr %arrayidx.i8.12, align 4, !tbaa !95
  %conv.i9.12 = trunc i32 %80 to i16
  %arrayidx2.i10.12 = getelementptr inbounds i16, ptr %54, i64 9996
  store i16 %conv.i9.12, ptr %arrayidx2.i10.12, align 2, !tbaa !13
  %81 = load i32, ptr %arrayidx.i8.13, align 4, !tbaa !95
  %conv.i9.13 = trunc i32 %81 to i16
  %arrayidx2.i10.13 = getelementptr inbounds i16, ptr %54, i64 9997
  store i16 %conv.i9.13, ptr %arrayidx2.i10.13, align 2, !tbaa !13
  %82 = load i32, ptr %arrayidx.i8.14, align 4, !tbaa !95
  %conv.i9.14 = trunc i32 %82 to i16
  %arrayidx2.i10.14 = getelementptr inbounds i16, ptr %54, i64 9998
  store i16 %conv.i9.14, ptr %arrayidx2.i10.14, align 2, !tbaa !13
  %83 = load i32, ptr %arrayidx.i8.15, align 4, !tbaa !95
  %conv.i9.15 = trunc i32 %83 to i16
  %arrayidx2.i10.15 = getelementptr inbounds i16, ptr %54, i64 9999
  store i16 %conv.i9.15, ptr %arrayidx2.i10.15, align 2, !tbaa !13
  %dec.i.i = add i64 %__begin1.sroa.0.0147.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body50.i, !prof !42

ehcleanup62.i:                                    ; preds = %lpad43.i, %lpad19.i, %lpad5.loopexit.i
  %.pn136.i = phi { ptr, i32 } [ %50, %lpad19.i ], [ %52, %lpad43.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i116.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i116.i, label %ehcleanup64.i, label %delete.notnull.i.i117.i

delete.notnull.i.i117.i:                          ; preds = %ehcleanup62.i, %ehcleanup62.thread.i
  %.pn136.pn142.i = phi { ptr, i32 } [ %45, %ehcleanup62.thread.i ], [ %.pn136.i, %ehcleanup62.i ]
  %84 = phi ptr [ %call1.i, %ehcleanup62.thread.i ], [ %.pr.i, %ehcleanup62.i ]
  call void @_ZdaPv(ptr noundef nonnull %84) #13
  br label %ehcleanup64.i

ehcleanup64.i:                                    ; preds = %delete.notnull.i.i117.i, %ehcleanup62.i, %lpad.i
  %.pn136.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn136.i, %ehcleanup62.i ], [ %.pn136.pn142.i, %delete.notnull.i.i117.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn136.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i106.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont3.i unwind label %ehcleanup62.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i76.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i76.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  br label %for.body.i80.i

for.body.i80.i:                                   ; preds = %for.body.i80.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i77.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i78.i.4, %for.body.i80.i ]
  %arrayidx.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i77.i
  %0 = load i32, ptr %arrayidx.i.i, align 4, !tbaa !95
  %conv.i.i = trunc i32 %0 to i16
  %arrayidx2.i.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i77.i
  store i16 %conv.i.i, ptr %arrayidx2.i.i, align 2, !tbaa !13
  %indvars.iv.next.i78.i = add nuw nsw i64 %indvars.iv.i77.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i78.i
  %1 = load i32, ptr %arrayidx.i.i.1, align 4, !tbaa !95
  %conv.i.i.1 = trunc i32 %1 to i16
  %arrayidx2.i.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i78.i
  store i16 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 2, !tbaa !13
  %indvars.iv.next.i78.i.1 = add nuw nsw i64 %indvars.iv.i77.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i78.i.1
  %2 = load i32, ptr %arrayidx.i.i.2, align 4, !tbaa !95
  %conv.i.i.2 = trunc i32 %2 to i16
  %arrayidx2.i.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i78.i.1
  store i16 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 2, !tbaa !13
  %indvars.iv.next.i78.i.2 = add nuw nsw i64 %indvars.iv.i77.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i78.i.2
  %3 = load i32, ptr %arrayidx.i.i.3, align 4, !tbaa !95
  %conv.i.i.3 = trunc i32 %3 to i16
  %arrayidx2.i.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i78.i.2
  store i16 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 2, !tbaa !13
  %indvars.iv.next.i78.i.3 = add nuw nsw i64 %indvars.iv.i77.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i78.i.3
  %4 = load i32, ptr %arrayidx.i.i.4, align 4, !tbaa !95
  %conv.i.i.4 = trunc i32 %4 to i16
  %arrayidx2.i.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i78.i.3
  store i16 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 2, !tbaa !13
  %indvars.iv.next.i78.i.4 = add nuw nsw i64 %indvars.iv.i77.i, 5
  %exitcond.not.i79.i.4 = icmp eq i64 %indvars.iv.next.i78.i.4, 10000
  br i1 %exitcond.not.i79.i.4, label %vector.body, label %for.body.i80.i, !llvm.loop !196

vector.body:                                      ; preds = %for.body.i80.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i80.i ]
  %5 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <16 x i32>, ptr %5, align 4, !tbaa !95
  %6 = getelementptr inbounds i32, ptr %5, i64 16
  %wide.load27 = load <16 x i32>, ptr %6, align 4, !tbaa !95
  %7 = getelementptr inbounds i32, ptr %5, i64 32
  %wide.load28 = load <16 x i32>, ptr %7, align 4, !tbaa !95
  %8 = getelementptr inbounds i32, ptr %5, i64 48
  %wide.load29 = load <16 x i32>, ptr %8, align 4, !tbaa !95
  %9 = trunc <16 x i32> %wide.load to <16 x i16>
  %10 = trunc <16 x i32> %wide.load27 to <16 x i16>
  %11 = trunc <16 x i32> %wide.load28 to <16 x i16>
  %12 = trunc <16 x i32> %wide.load29 to <16 x i16>
  %13 = getelementptr inbounds i16, ptr %call1.i, i64 %index
  store <16 x i16> %9, ptr %13, align 2, !tbaa !13
  %14 = getelementptr inbounds i16, ptr %13, i64 16
  store <16 x i16> %10, ptr %14, align 2, !tbaa !13
  %15 = getelementptr inbounds i16, ptr %13, i64 32
  store <16 x i16> %11, ptr %15, align 2, !tbaa !13
  %16 = getelementptr inbounds i16, ptr %13, i64 48
  store <16 x i16> %12, ptr %16, align 2, !tbaa !13
  %index.next = add nuw i64 %index, 64
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !200

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i32, ptr %call.i, i64 9984
  %18 = load i32, ptr %arrayidx.i, align 4, !tbaa !95
  %conv.i = trunc i32 %18 to i16
  %arrayidx2.i = getelementptr inbounds i16, ptr %call1.i, i64 9984
  store i16 %conv.i, ptr %arrayidx2.i, align 2, !tbaa !13
  %arrayidx.i.1 = getelementptr inbounds i32, ptr %call.i, i64 9985
  %19 = load i32, ptr %arrayidx.i.1, align 4, !tbaa !95
  %conv.i.1 = trunc i32 %19 to i16
  %arrayidx2.i.1 = getelementptr inbounds i16, ptr %call1.i, i64 9985
  store i16 %conv.i.1, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %arrayidx.i.2 = getelementptr inbounds i32, ptr %call.i, i64 9986
  %20 = load i32, ptr %arrayidx.i.2, align 4, !tbaa !95
  %conv.i.2 = trunc i32 %20 to i16
  %arrayidx2.i.2 = getelementptr inbounds i16, ptr %call1.i, i64 9986
  store i16 %conv.i.2, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %arrayidx.i.3 = getelementptr inbounds i32, ptr %call.i, i64 9987
  %21 = load i32, ptr %arrayidx.i.3, align 4, !tbaa !95
  %conv.i.3 = trunc i32 %21 to i16
  %arrayidx2.i.3 = getelementptr inbounds i16, ptr %call1.i, i64 9987
  store i16 %conv.i.3, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %arrayidx.i.4 = getelementptr inbounds i32, ptr %call.i, i64 9988
  %22 = load i32, ptr %arrayidx.i.4, align 4, !tbaa !95
  %conv.i.4 = trunc i32 %22 to i16
  %arrayidx2.i.4 = getelementptr inbounds i16, ptr %call1.i, i64 9988
  store i16 %conv.i.4, ptr %arrayidx2.i.4, align 2, !tbaa !13
  %arrayidx.i.5 = getelementptr inbounds i32, ptr %call.i, i64 9989
  %23 = load i32, ptr %arrayidx.i.5, align 4, !tbaa !95
  %conv.i.5 = trunc i32 %23 to i16
  %arrayidx2.i.5 = getelementptr inbounds i16, ptr %call1.i, i64 9989
  store i16 %conv.i.5, ptr %arrayidx2.i.5, align 2, !tbaa !13
  %arrayidx.i.6 = getelementptr inbounds i32, ptr %call.i, i64 9990
  %24 = load i32, ptr %arrayidx.i.6, align 4, !tbaa !95
  %conv.i.6 = trunc i32 %24 to i16
  %arrayidx2.i.6 = getelementptr inbounds i16, ptr %call1.i, i64 9990
  store i16 %conv.i.6, ptr %arrayidx2.i.6, align 2, !tbaa !13
  %arrayidx.i.7 = getelementptr inbounds i32, ptr %call.i, i64 9991
  %25 = load i32, ptr %arrayidx.i.7, align 4, !tbaa !95
  %conv.i.7 = trunc i32 %25 to i16
  %arrayidx2.i.7 = getelementptr inbounds i16, ptr %call1.i, i64 9991
  store i16 %conv.i.7, ptr %arrayidx2.i.7, align 2, !tbaa !13
  %arrayidx.i.8 = getelementptr inbounds i32, ptr %call.i, i64 9992
  %26 = load i32, ptr %arrayidx.i.8, align 4, !tbaa !95
  %conv.i.8 = trunc i32 %26 to i16
  %arrayidx2.i.8 = getelementptr inbounds i16, ptr %call1.i, i64 9992
  store i16 %conv.i.8, ptr %arrayidx2.i.8, align 2, !tbaa !13
  %arrayidx.i.9 = getelementptr inbounds i32, ptr %call.i, i64 9993
  %27 = load i32, ptr %arrayidx.i.9, align 4, !tbaa !95
  %conv.i.9 = trunc i32 %27 to i16
  %arrayidx2.i.9 = getelementptr inbounds i16, ptr %call1.i, i64 9993
  store i16 %conv.i.9, ptr %arrayidx2.i.9, align 2, !tbaa !13
  %arrayidx.i.10 = getelementptr inbounds i32, ptr %call.i, i64 9994
  %28 = load i32, ptr %arrayidx.i.10, align 4, !tbaa !95
  %conv.i.10 = trunc i32 %28 to i16
  %arrayidx2.i.10 = getelementptr inbounds i16, ptr %call1.i, i64 9994
  store i16 %conv.i.10, ptr %arrayidx2.i.10, align 2, !tbaa !13
  %arrayidx.i.11 = getelementptr inbounds i32, ptr %call.i, i64 9995
  %29 = load i32, ptr %arrayidx.i.11, align 4, !tbaa !95
  %conv.i.11 = trunc i32 %29 to i16
  %arrayidx2.i.11 = getelementptr inbounds i16, ptr %call1.i, i64 9995
  store i16 %conv.i.11, ptr %arrayidx2.i.11, align 2, !tbaa !13
  %arrayidx.i.12 = getelementptr inbounds i32, ptr %call.i, i64 9996
  %30 = load i32, ptr %arrayidx.i.12, align 4, !tbaa !95
  %conv.i.12 = trunc i32 %30 to i16
  %arrayidx2.i.12 = getelementptr inbounds i16, ptr %call1.i, i64 9996
  store i16 %conv.i.12, ptr %arrayidx2.i.12, align 2, !tbaa !13
  %arrayidx.i.13 = getelementptr inbounds i32, ptr %call.i, i64 9997
  %31 = load i32, ptr %arrayidx.i.13, align 4, !tbaa !95
  %conv.i.13 = trunc i32 %31 to i16
  %arrayidx2.i.13 = getelementptr inbounds i16, ptr %call1.i, i64 9997
  store i16 %conv.i.13, ptr %arrayidx2.i.13, align 2, !tbaa !13
  %arrayidx.i.14 = getelementptr inbounds i32, ptr %call.i, i64 9998
  %32 = load i32, ptr %arrayidx.i.14, align 4, !tbaa !95
  %conv.i.14 = trunc i32 %32 to i16
  %arrayidx2.i.14 = getelementptr inbounds i16, ptr %call1.i, i64 9998
  store i16 %conv.i.14, ptr %arrayidx2.i.14, align 2, !tbaa !13
  %arrayidx.i.15 = getelementptr inbounds i32, ptr %call.i, i64 9999
  %33 = load i32, ptr %arrayidx.i.15, align 4, !tbaa !95
  %conv.i.15 = trunc i32 %33 to i16
  %arrayidx2.i.15 = getelementptr inbounds i16, ptr %call1.i, i64 9999
  store i16 %conv.i.15, ptr %arrayidx2.i.15, align 2, !tbaa !13
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i81.i.1 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i16, ptr %arrayidx.i81.i.1, align 2, !tbaa !13
  %arrayidx.i82.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i16, ptr %arrayidx.i82.i.1, align 2, !tbaa !13
  %cmp18.not.i.1 = icmp eq i16 %34, %35
  br i1 %cmp18.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i81.i.2 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i16, ptr %arrayidx.i81.i.2, align 2, !tbaa !13
  %arrayidx.i82.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i16, ptr %arrayidx.i82.i.2, align 2, !tbaa !13
  %cmp18.not.i.2 = icmp eq i16 %36, %37
  br i1 %cmp18.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i81.i.3 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i16, ptr %arrayidx.i81.i.3, align 2, !tbaa !13
  %arrayidx.i82.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i16, ptr %arrayidx.i82.i.3, align 2, !tbaa !13
  %cmp18.not.i.3 = icmp eq i16 %38, %39
  br i1 %cmp18.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i81.i.4 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i16, ptr %arrayidx.i81.i.4, align 2, !tbaa !13
  %arrayidx.i82.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i16, ptr %arrayidx.i82.i.4, align 2, !tbaa !13
  %cmp18.not.i.4 = icmp eq i16 %40, %41
  br i1 %cmp18.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !198

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond46.preheader.i unwind label %lpad43.i

for.cond46.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not146150.i = icmp eq i64 %43, 0
  %cmp.not.i.not146.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not146150.i
  br i1 %cmp.not.i.not146.i, label %if.end.i.i, label %for.body50.i.preheader, !prof !42

for.body50.i.preheader:                           ; preds = %for.cond46.preheader.i
  %arrayidx.i8 = getelementptr inbounds i32, ptr %call.i, i64 9984
  %arrayidx.i8.1 = getelementptr inbounds i32, ptr %call.i, i64 9985
  %arrayidx.i8.2 = getelementptr inbounds i32, ptr %call.i, i64 9986
  %arrayidx.i8.3 = getelementptr inbounds i32, ptr %call.i, i64 9987
  %arrayidx.i8.4 = getelementptr inbounds i32, ptr %call.i, i64 9988
  %arrayidx.i8.5 = getelementptr inbounds i32, ptr %call.i, i64 9989
  %arrayidx.i8.6 = getelementptr inbounds i32, ptr %call.i, i64 9990
  %arrayidx.i8.7 = getelementptr inbounds i32, ptr %call.i, i64 9991
  %arrayidx.i8.8 = getelementptr inbounds i32, ptr %call.i, i64 9992
  %arrayidx.i8.9 = getelementptr inbounds i32, ptr %call.i, i64 9993
  %arrayidx.i8.10 = getelementptr inbounds i32, ptr %call.i, i64 9994
  %arrayidx.i8.11 = getelementptr inbounds i32, ptr %call.i, i64 9995
  %arrayidx.i8.12 = getelementptr inbounds i32, ptr %call.i, i64 9996
  %arrayidx.i8.13 = getelementptr inbounds i32, ptr %call.i, i64 9997
  %arrayidx.i8.14 = getelementptr inbounds i32, ptr %call.i, i64 9998
  %arrayidx.i8.15 = getelementptr inbounds i32, ptr %call.i, i64 9999
  br label %for.body50.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup64.i

ehcleanup62.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i117.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup62.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i81.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i16, ptr %arrayidx.i81.i, align 2, !tbaa !13
  %arrayidx.i82.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i16, ptr %arrayidx.i82.i, align 2, !tbaa !13
  %cmp18.not.i = icmp eq i16 %46, %47
  br i1 %cmp18.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i16 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i81.i.le = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i84.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont20.i unwind label %lpad19.i

invoke.cont20.i:                                  ; preds = %if.then.i
  %arrayidx.i85.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i32, ptr %arrayidx.i85.i, align 4, !tbaa !95
  %conv.i86.i = zext i32 %48 to i64
  %call.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i86.i)
          to label %invoke.cont24.i unwind label %lpad19.i

invoke.cont24.i:                                  ; preds = %invoke.cont20.i
  %call1.i90.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i87.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont26.i unwind label %lpad19.i

invoke.cont26.i:                                  ; preds = %invoke.cont24.i
  %49 = load i16, ptr %arrayidx.i81.i.le, align 2, !tbaa !13
  %conv.i93.i = zext i16 %49 to i64
  %call.i94.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i87.i, i64 noundef %conv.i93.i)
          to label %invoke.cont30.i unwind label %lpad19.i

invoke.cont30.i:                                  ; preds = %invoke.cont26.i
  %call1.i97.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i94.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont32.i unwind label %lpad19.i

invoke.cont32.i:                                  ; preds = %invoke.cont30.i
  %conv.i100.i = zext i16 %.lcssa to i64
  %call.i101.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i94.i, i64 noundef %conv.i100.i)
          to label %invoke.cont36.i unwind label %lpad19.i

invoke.cont36.i:                                  ; preds = %invoke.cont32.i
  %call39.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i101.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont38.i unwind label %lpad19.i

invoke.cont38.i:                                  ; preds = %invoke.cont36.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad19.i:                                         ; preds = %invoke.cont36.i, %invoke.cont32.i, %invoke.cont30.i, %invoke.cont26.i, %invoke.cont24.i, %invoke.cont20.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup62.i

if.end.i.i:                                       ; preds = %for.body.i13, %for.cond46.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad43.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i105.i = icmp eq ptr %51, null
  br i1 %cmp.not.i105.i, label %_ZL28benchForTruncOrZextVecInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i106.i

delete.notnull.i.i106.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad43.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup62.i

for.body50.i:                                     ; preds = %for.body50.i.preheader, %for.body.i13
  %__begin1.sroa.0.0147.i = phi i64 [ %dec.i.i, %for.body.i13 ], [ %43, %for.body50.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body35

vector.body35:                                    ; preds = %vector.body35, %for.body50.i
  %index36 = phi i64 [ 0, %for.body50.i ], [ %index.next41, %vector.body35 ]
  %55 = getelementptr inbounds i32, ptr %call.i, i64 %index36
  %wide.load37 = load <16 x i32>, ptr %55, align 4, !tbaa !95
  %56 = getelementptr inbounds i32, ptr %55, i64 16
  %wide.load38 = load <16 x i32>, ptr %56, align 4, !tbaa !95
  %57 = getelementptr inbounds i32, ptr %55, i64 32
  %wide.load39 = load <16 x i32>, ptr %57, align 4, !tbaa !95
  %58 = getelementptr inbounds i32, ptr %55, i64 48
  %wide.load40 = load <16 x i32>, ptr %58, align 4, !tbaa !95
  %59 = trunc <16 x i32> %wide.load37 to <16 x i16>
  %60 = trunc <16 x i32> %wide.load38 to <16 x i16>
  %61 = trunc <16 x i32> %wide.load39 to <16 x i16>
  %62 = trunc <16 x i32> %wide.load40 to <16 x i16>
  %63 = getelementptr inbounds i16, ptr %54, i64 %index36
  store <16 x i16> %59, ptr %63, align 2, !tbaa !13
  %64 = getelementptr inbounds i16, ptr %63, i64 16
  store <16 x i16> %60, ptr %64, align 2, !tbaa !13
  %65 = getelementptr inbounds i16, ptr %63, i64 32
  store <16 x i16> %61, ptr %65, align 2, !tbaa !13
  %66 = getelementptr inbounds i16, ptr %63, i64 48
  store <16 x i16> %62, ptr %66, align 2, !tbaa !13
  %index.next41 = add nuw i64 %index36, 64
  %67 = icmp eq i64 %index.next41, 9984
  br i1 %67, label %for.body.i13, label %vector.body35, !llvm.loop !201

for.body.i13:                                     ; preds = %vector.body35
  %68 = load i32, ptr %arrayidx.i8, align 4, !tbaa !95
  %conv.i9 = trunc i32 %68 to i16
  %arrayidx2.i10 = getelementptr inbounds i16, ptr %54, i64 9984
  store i16 %conv.i9, ptr %arrayidx2.i10, align 2, !tbaa !13
  %69 = load i32, ptr %arrayidx.i8.1, align 4, !tbaa !95
  %conv.i9.1 = trunc i32 %69 to i16
  %arrayidx2.i10.1 = getelementptr inbounds i16, ptr %54, i64 9985
  store i16 %conv.i9.1, ptr %arrayidx2.i10.1, align 2, !tbaa !13
  %70 = load i32, ptr %arrayidx.i8.2, align 4, !tbaa !95
  %conv.i9.2 = trunc i32 %70 to i16
  %arrayidx2.i10.2 = getelementptr inbounds i16, ptr %54, i64 9986
  store i16 %conv.i9.2, ptr %arrayidx2.i10.2, align 2, !tbaa !13
  %71 = load i32, ptr %arrayidx.i8.3, align 4, !tbaa !95
  %conv.i9.3 = trunc i32 %71 to i16
  %arrayidx2.i10.3 = getelementptr inbounds i16, ptr %54, i64 9987
  store i16 %conv.i9.3, ptr %arrayidx2.i10.3, align 2, !tbaa !13
  %72 = load i32, ptr %arrayidx.i8.4, align 4, !tbaa !95
  %conv.i9.4 = trunc i32 %72 to i16
  %arrayidx2.i10.4 = getelementptr inbounds i16, ptr %54, i64 9988
  store i16 %conv.i9.4, ptr %arrayidx2.i10.4, align 2, !tbaa !13
  %73 = load i32, ptr %arrayidx.i8.5, align 4, !tbaa !95
  %conv.i9.5 = trunc i32 %73 to i16
  %arrayidx2.i10.5 = getelementptr inbounds i16, ptr %54, i64 9989
  store i16 %conv.i9.5, ptr %arrayidx2.i10.5, align 2, !tbaa !13
  %74 = load i32, ptr %arrayidx.i8.6, align 4, !tbaa !95
  %conv.i9.6 = trunc i32 %74 to i16
  %arrayidx2.i10.6 = getelementptr inbounds i16, ptr %54, i64 9990
  store i16 %conv.i9.6, ptr %arrayidx2.i10.6, align 2, !tbaa !13
  %75 = load i32, ptr %arrayidx.i8.7, align 4, !tbaa !95
  %conv.i9.7 = trunc i32 %75 to i16
  %arrayidx2.i10.7 = getelementptr inbounds i16, ptr %54, i64 9991
  store i16 %conv.i9.7, ptr %arrayidx2.i10.7, align 2, !tbaa !13
  %76 = load i32, ptr %arrayidx.i8.8, align 4, !tbaa !95
  %conv.i9.8 = trunc i32 %76 to i16
  %arrayidx2.i10.8 = getelementptr inbounds i16, ptr %54, i64 9992
  store i16 %conv.i9.8, ptr %arrayidx2.i10.8, align 2, !tbaa !13
  %77 = load i32, ptr %arrayidx.i8.9, align 4, !tbaa !95
  %conv.i9.9 = trunc i32 %77 to i16
  %arrayidx2.i10.9 = getelementptr inbounds i16, ptr %54, i64 9993
  store i16 %conv.i9.9, ptr %arrayidx2.i10.9, align 2, !tbaa !13
  %78 = load i32, ptr %arrayidx.i8.10, align 4, !tbaa !95
  %conv.i9.10 = trunc i32 %78 to i16
  %arrayidx2.i10.10 = getelementptr inbounds i16, ptr %54, i64 9994
  store i16 %conv.i9.10, ptr %arrayidx2.i10.10, align 2, !tbaa !13
  %79 = load i32, ptr %arrayidx.i8.11, align 4, !tbaa !95
  %conv.i9.11 = trunc i32 %79 to i16
  %arrayidx2.i10.11 = getelementptr inbounds i16, ptr %54, i64 9995
  store i16 %conv.i9.11, ptr %arrayidx2.i10.11, align 2, !tbaa !13
  %80 = load i32, ptr %arrayidx.i8.12, align 4, !tbaa !95
  %conv.i9.12 = trunc i32 %80 to i16
  %arrayidx2.i10.12 = getelementptr inbounds i16, ptr %54, i64 9996
  store i16 %conv.i9.12, ptr %arrayidx2.i10.12, align 2, !tbaa !13
  %81 = load i32, ptr %arrayidx.i8.13, align 4, !tbaa !95
  %conv.i9.13 = trunc i32 %81 to i16
  %arrayidx2.i10.13 = getelementptr inbounds i16, ptr %54, i64 9997
  store i16 %conv.i9.13, ptr %arrayidx2.i10.13, align 2, !tbaa !13
  %82 = load i32, ptr %arrayidx.i8.14, align 4, !tbaa !95
  %conv.i9.14 = trunc i32 %82 to i16
  %arrayidx2.i10.14 = getelementptr inbounds i16, ptr %54, i64 9998
  store i16 %conv.i9.14, ptr %arrayidx2.i10.14, align 2, !tbaa !13
  %83 = load i32, ptr %arrayidx.i8.15, align 4, !tbaa !95
  %conv.i9.15 = trunc i32 %83 to i16
  %arrayidx2.i10.15 = getelementptr inbounds i16, ptr %54, i64 9999
  store i16 %conv.i9.15, ptr %arrayidx2.i10.15, align 2, !tbaa !13
  %dec.i.i = add i64 %__begin1.sroa.0.0147.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body50.i, !prof !42

ehcleanup62.i:                                    ; preds = %lpad43.i, %lpad19.i, %lpad5.loopexit.i
  %.pn136.i = phi { ptr, i32 } [ %50, %lpad19.i ], [ %52, %lpad43.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i116.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i116.i, label %ehcleanup64.i, label %delete.notnull.i.i117.i

delete.notnull.i.i117.i:                          ; preds = %ehcleanup62.i, %ehcleanup62.thread.i
  %.pn136.pn142.i = phi { ptr, i32 } [ %45, %ehcleanup62.thread.i ], [ %.pn136.i, %ehcleanup62.i ]
  %84 = phi ptr [ %call1.i, %ehcleanup62.thread.i ], [ %.pr.i, %ehcleanup62.i ]
  call void @_ZdaPv(ptr noundef nonnull %84) #13
  br label %ehcleanup64.i

ehcleanup64.i:                                    ; preds = %delete.notnull.i.i117.i, %ehcleanup62.i, %lpad.i
  %.pn136.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn136.i, %ehcleanup62.i ], [ %.pn136.pn142.i, %delete.notnull.i.i117.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn136.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i106.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z54benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont3.i unwind label %ehcleanup62.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i76.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i76.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  br label %for.body.i80.i

for.body.i80.i:                                   ; preds = %for.body.i80.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i77.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i78.i.4, %for.body.i80.i ]
  %arrayidx.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i77.i
  %0 = load i32, ptr %arrayidx.i.i, align 4, !tbaa !95
  %conv.i.i = trunc i32 %0 to i16
  %arrayidx2.i.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i77.i
  store i16 %conv.i.i, ptr %arrayidx2.i.i, align 2, !tbaa !13
  %indvars.iv.next.i78.i = add nuw nsw i64 %indvars.iv.i77.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i78.i
  %1 = load i32, ptr %arrayidx.i.i.1, align 4, !tbaa !95
  %conv.i.i.1 = trunc i32 %1 to i16
  %arrayidx2.i.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i78.i
  store i16 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 2, !tbaa !13
  %indvars.iv.next.i78.i.1 = add nuw nsw i64 %indvars.iv.i77.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i78.i.1
  %2 = load i32, ptr %arrayidx.i.i.2, align 4, !tbaa !95
  %conv.i.i.2 = trunc i32 %2 to i16
  %arrayidx2.i.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i78.i.1
  store i16 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 2, !tbaa !13
  %indvars.iv.next.i78.i.2 = add nuw nsw i64 %indvars.iv.i77.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i78.i.2
  %3 = load i32, ptr %arrayidx.i.i.3, align 4, !tbaa !95
  %conv.i.i.3 = trunc i32 %3 to i16
  %arrayidx2.i.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i78.i.2
  store i16 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 2, !tbaa !13
  %indvars.iv.next.i78.i.3 = add nuw nsw i64 %indvars.iv.i77.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i78.i.3
  %4 = load i32, ptr %arrayidx.i.i.4, align 4, !tbaa !95
  %conv.i.i.4 = trunc i32 %4 to i16
  %arrayidx2.i.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i78.i.3
  store i16 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 2, !tbaa !13
  %indvars.iv.next.i78.i.4 = add nuw nsw i64 %indvars.iv.i77.i, 5
  %exitcond.not.i79.i.4 = icmp eq i64 %indvars.iv.next.i78.i.4, 10000
  br i1 %exitcond.not.i79.i.4, label %vector.body, label %for.body.i80.i, !llvm.loop !196

vector.body:                                      ; preds = %for.body.i80.i, %vector.body
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %for.body.i80.i ]
  %5 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <4 x i32>, ptr %5, align 4, !tbaa !95
  %6 = getelementptr inbounds i32, ptr %5, i64 4
  %wide.load27 = load <4 x i32>, ptr %6, align 4, !tbaa !95
  %7 = trunc <4 x i32> %wide.load to <4 x i16>
  %8 = trunc <4 x i32> %wide.load27 to <4 x i16>
  %9 = getelementptr inbounds i16, ptr %call1.i, i64 %index
  store <4 x i16> %7, ptr %9, align 2, !tbaa !13
  %10 = getelementptr inbounds i16, ptr %9, i64 4
  store <4 x i16> %8, ptr %10, align 2, !tbaa !13
  %index.next = or i64 %index, 8
  %11 = getelementptr inbounds i32, ptr %call.i, i64 %index.next
  %wide.load.1 = load <4 x i32>, ptr %11, align 4, !tbaa !95
  %12 = getelementptr inbounds i32, ptr %11, i64 4
  %wide.load27.1 = load <4 x i32>, ptr %12, align 4, !tbaa !95
  %13 = trunc <4 x i32> %wide.load.1 to <4 x i16>
  %14 = trunc <4 x i32> %wide.load27.1 to <4 x i16>
  %15 = getelementptr inbounds i16, ptr %call1.i, i64 %index.next
  store <4 x i16> %13, ptr %15, align 2, !tbaa !13
  %16 = getelementptr inbounds i16, ptr %15, i64 4
  store <4 x i16> %14, ptr %16, align 2, !tbaa !13
  %index.next.1 = add nuw nsw i64 %index, 16
  %17 = icmp eq i64 %index.next.1, 10000
  br i1 %17, label %for.body.i, label %vector.body, !llvm.loop !202

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i81.i.1 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i
  %18 = load i16, ptr %arrayidx.i81.i.1, align 2, !tbaa !13
  %arrayidx.i82.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i
  %19 = load i16, ptr %arrayidx.i82.i.1, align 2, !tbaa !13
  %cmp18.not.i.1 = icmp eq i16 %18, %19
  br i1 %cmp18.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i81.i.2 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.1
  %20 = load i16, ptr %arrayidx.i81.i.2, align 2, !tbaa !13
  %arrayidx.i82.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.1
  %21 = load i16, ptr %arrayidx.i82.i.2, align 2, !tbaa !13
  %cmp18.not.i.2 = icmp eq i16 %20, %21
  br i1 %cmp18.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i81.i.3 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.2
  %22 = load i16, ptr %arrayidx.i81.i.3, align 2, !tbaa !13
  %arrayidx.i82.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.2
  %23 = load i16, ptr %arrayidx.i82.i.3, align 2, !tbaa !13
  %cmp18.not.i.3 = icmp eq i16 %22, %23
  br i1 %cmp18.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i81.i.4 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.3
  %24 = load i16, ptr %arrayidx.i81.i.4, align 2, !tbaa !13
  %arrayidx.i82.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.3
  %25 = load i16, ptr %arrayidx.i82.i.4, align 2, !tbaa !13
  %cmp18.not.i.4 = icmp eq i16 %24, %25
  br i1 %cmp18.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !198

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %26 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %27 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond46.preheader.i unwind label %lpad43.i

for.cond46.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %26, 0
  %cmp.not.i.not146150.i = icmp eq i64 %27, 0
  %cmp.not.i.not146.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not146150.i
  br i1 %cmp.not.i.not146.i, label %if.end.i.i, label %for.body50.i, !prof !42

lpad.i:                                           ; preds = %entry
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup64.i

ehcleanup62.thread.i:                             ; preds = %invoke.cont.i
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i117.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup62.i

for.body.i:                                       ; preds = %vector.body, %for.cond.i.4
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.4, %for.cond.i.4 ], [ 0, %vector.body ]
  %arrayidx.i81.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i
  %30 = load i16, ptr %arrayidx.i81.i, align 2, !tbaa !13
  %arrayidx.i82.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i
  %31 = load i16, ptr %arrayidx.i82.i, align 2, !tbaa !13
  %cmp18.not.i = icmp eq i16 %30, %31
  br i1 %cmp18.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i16 [ %31, %for.body.i ], [ %19, %for.cond.i ], [ %21, %for.cond.i.1 ], [ %23, %for.cond.i.2 ], [ %25, %for.cond.i.3 ]
  %arrayidx.i81.i.le = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i84.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont20.i unwind label %lpad19.i

invoke.cont20.i:                                  ; preds = %if.then.i
  %arrayidx.i85.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.lcssa
  %32 = load i32, ptr %arrayidx.i85.i, align 4, !tbaa !95
  %conv.i86.i = zext i32 %32 to i64
  %call.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i86.i)
          to label %invoke.cont24.i unwind label %lpad19.i

invoke.cont24.i:                                  ; preds = %invoke.cont20.i
  %call1.i90.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i87.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont26.i unwind label %lpad19.i

invoke.cont26.i:                                  ; preds = %invoke.cont24.i
  %33 = load i16, ptr %arrayidx.i81.i.le, align 2, !tbaa !13
  %conv.i93.i = zext i16 %33 to i64
  %call.i94.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i87.i, i64 noundef %conv.i93.i)
          to label %invoke.cont30.i unwind label %lpad19.i

invoke.cont30.i:                                  ; preds = %invoke.cont26.i
  %call1.i97.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i94.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont32.i unwind label %lpad19.i

invoke.cont32.i:                                  ; preds = %invoke.cont30.i
  %conv.i100.i = zext i16 %.lcssa to i64
  %call.i101.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i94.i, i64 noundef %conv.i100.i)
          to label %invoke.cont36.i unwind label %lpad19.i

invoke.cont36.i:                                  ; preds = %invoke.cont32.i
  %call39.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i101.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont38.i unwind label %lpad19.i

invoke.cont38.i:                                  ; preds = %invoke.cont36.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad19.i:                                         ; preds = %invoke.cont36.i, %invoke.cont32.i, %invoke.cont30.i, %invoke.cont26.i, %invoke.cont24.i, %invoke.cont20.i, %if.then.i
  %34 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup62.i

if.end.i.i:                                       ; preds = %invoke.cont55.i, %for.cond46.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad43.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %35 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i105.i = icmp eq ptr %35, null
  br i1 %cmp.not.i105.i, label %_ZL28benchForTruncOrZextVecInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i106.i

delete.notnull.i.i106.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %35) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad43.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup62.i

for.body50.i:                                     ; preds = %for.cond46.preheader.i, %invoke.cont55.i
  %__begin1.sroa.0.0147.i = phi i64 [ %dec.i.i, %invoke.cont55.i ], [ %27, %for.cond46.preheader.i ]
  %37 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %37) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %38 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body33

vector.body33:                                    ; preds = %vector.body33, %for.body50.i
  %index34 = phi i64 [ 0, %for.body50.i ], [ %index.next37.1, %vector.body33 ]
  %39 = getelementptr inbounds i32, ptr %call.i, i64 %index34
  %wide.load35 = load <4 x i32>, ptr %39, align 4, !tbaa !95
  %40 = getelementptr inbounds i32, ptr %39, i64 4
  %wide.load36 = load <4 x i32>, ptr %40, align 4, !tbaa !95
  %41 = trunc <4 x i32> %wide.load35 to <4 x i16>
  %42 = trunc <4 x i32> %wide.load36 to <4 x i16>
  %43 = getelementptr inbounds i16, ptr %38, i64 %index34
  store <4 x i16> %41, ptr %43, align 2, !tbaa !13
  %44 = getelementptr inbounds i16, ptr %43, i64 4
  store <4 x i16> %42, ptr %44, align 2, !tbaa !13
  %index.next37 = or i64 %index34, 8
  %45 = getelementptr inbounds i32, ptr %call.i, i64 %index.next37
  %wide.load35.1 = load <4 x i32>, ptr %45, align 4, !tbaa !95
  %46 = getelementptr inbounds i32, ptr %45, i64 4
  %wide.load36.1 = load <4 x i32>, ptr %46, align 4, !tbaa !95
  %47 = trunc <4 x i32> %wide.load35.1 to <4 x i16>
  %48 = trunc <4 x i32> %wide.load36.1 to <4 x i16>
  %49 = getelementptr inbounds i16, ptr %38, i64 %index.next37
  store <4 x i16> %47, ptr %49, align 2, !tbaa !13
  %50 = getelementptr inbounds i16, ptr %49, i64 4
  store <4 x i16> %48, ptr %50, align 2, !tbaa !13
  %index.next37.1 = add nuw nsw i64 %index34, 16
  %51 = icmp eq i64 %index.next37.1, 10000
  br i1 %51, label %invoke.cont55.i, label %vector.body33, !llvm.loop !203

invoke.cont55.i:                                  ; preds = %vector.body33
  %dec.i.i = add i64 %__begin1.sroa.0.0147.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body50.i, !prof !42

ehcleanup62.i:                                    ; preds = %lpad43.i, %lpad19.i, %lpad5.loopexit.i
  %.pn136.i = phi { ptr, i32 } [ %34, %lpad19.i ], [ %36, %lpad43.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i116.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i116.i, label %ehcleanup64.i, label %delete.notnull.i.i117.i

delete.notnull.i.i117.i:                          ; preds = %ehcleanup62.i, %ehcleanup62.thread.i
  %.pn136.pn142.i = phi { ptr, i32 } [ %29, %ehcleanup62.thread.i ], [ %.pn136.i, %ehcleanup62.i ]
  %52 = phi ptr [ %call1.i, %ehcleanup62.thread.i ], [ %.pr.i, %ehcleanup62.i ]
  call void @_ZdaPv(ptr noundef nonnull %52) #13
  br label %ehcleanup64.i

ehcleanup64.i:                                    ; preds = %delete.notnull.i.i117.i, %ehcleanup62.i, %lpad.i
  %.pn136.pn.pn.i = phi { ptr, i32 } [ %28, %lpad.i ], [ %.pn136.i, %ehcleanup62.i ], [ %.pn136.pn142.i, %delete.notnull.i.i117.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn136.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i106.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution", align 2
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i31.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  store i16 0, ptr %distrib.i32.i, align 2, !tbaa !9
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i33.i, align 2, !tbaa !12
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i34.i
  store i16 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 2, !tbaa !13
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %arrayidx.i = getelementptr inbounds i32, ptr %call.i, i64 9984
  %arrayidx.i.1 = getelementptr inbounds i32, ptr %call.i, i64 9985
  %arrayidx.i.2 = getelementptr inbounds i32, ptr %call.i, i64 9986
  %arrayidx.i.3 = getelementptr inbounds i32, ptr %call.i, i64 9987
  %arrayidx.i.4 = getelementptr inbounds i32, ptr %call.i, i64 9988
  %arrayidx.i.5 = getelementptr inbounds i32, ptr %call.i, i64 9989
  %arrayidx.i.6 = getelementptr inbounds i32, ptr %call.i, i64 9990
  %arrayidx.i.7 = getelementptr inbounds i32, ptr %call.i, i64 9991
  %arrayidx.i.8 = getelementptr inbounds i32, ptr %call.i, i64 9992
  %arrayidx.i.9 = getelementptr inbounds i32, ptr %call.i, i64 9993
  %arrayidx.i.10 = getelementptr inbounds i32, ptr %call.i, i64 9994
  %arrayidx.i.11 = getelementptr inbounds i32, ptr %call.i, i64 9995
  %arrayidx.i.12 = getelementptr inbounds i32, ptr %call.i, i64 9996
  %arrayidx.i.13 = getelementptr inbounds i32, ptr %call.i, i64 9997
  %arrayidx.i.14 = getelementptr inbounds i32, ptr %call.i, i64 9998
  %arrayidx.i.15 = getelementptr inbounds i32, ptr %call.i, i64 9999
  br label %for.body.i

if.end.i.i:                                       ; preds = %for.body.i1, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i1
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %for.body.i1 ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next, %vector.body ]
  %6 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <8 x i32>, ptr %6, align 4, !tbaa !95
  %7 = getelementptr inbounds i32, ptr %6, i64 8
  %wide.load5 = load <8 x i32>, ptr %7, align 4, !tbaa !95
  %8 = getelementptr inbounds i32, ptr %6, i64 16
  %wide.load6 = load <8 x i32>, ptr %8, align 4, !tbaa !95
  %9 = getelementptr inbounds i32, ptr %6, i64 24
  %wide.load7 = load <8 x i32>, ptr %9, align 4, !tbaa !95
  %10 = getelementptr inbounds i16, ptr %5, i64 %index
  %wide.load8 = load <8 x i16>, ptr %10, align 2, !tbaa !13
  %11 = getelementptr inbounds i16, ptr %10, i64 8
  %wide.load9 = load <8 x i16>, ptr %11, align 2, !tbaa !13
  %12 = getelementptr inbounds i16, ptr %10, i64 16
  %wide.load10 = load <8 x i16>, ptr %12, align 2, !tbaa !13
  %13 = getelementptr inbounds i16, ptr %10, i64 24
  %wide.load11 = load <8 x i16>, ptr %13, align 2, !tbaa !13
  %14 = trunc <8 x i32> %wide.load to <8 x i16>
  %15 = trunc <8 x i32> %wide.load5 to <8 x i16>
  %16 = trunc <8 x i32> %wide.load6 to <8 x i16>
  %17 = trunc <8 x i32> %wide.load7 to <8 x i16>
  %18 = add <8 x i16> %wide.load8, %14
  %19 = add <8 x i16> %wide.load9, %15
  %20 = add <8 x i16> %wide.load10, %16
  %21 = add <8 x i16> %wide.load11, %17
  store <8 x i16> %18, ptr %10, align 2, !tbaa !13
  store <8 x i16> %19, ptr %11, align 2, !tbaa !13
  store <8 x i16> %20, ptr %12, align 2, !tbaa !13
  store <8 x i16> %21, ptr %13, align 2, !tbaa !13
  %index.next = add nuw i64 %index, 32
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1, label %vector.body, !llvm.loop !204

for.body.i1:                                      ; preds = %vector.body
  %23 = load i32, ptr %arrayidx.i, align 4, !tbaa !95
  %arrayidx2.i = getelementptr inbounds i16, ptr %5, i64 9984
  %24 = load i16, ptr %arrayidx2.i, align 2, !tbaa !13
  %25 = trunc i32 %23 to i16
  %conv3.i = add i16 %24, %25
  store i16 %conv3.i, ptr %arrayidx2.i, align 2, !tbaa !13
  %26 = load i32, ptr %arrayidx.i.1, align 4, !tbaa !95
  %arrayidx2.i.1 = getelementptr inbounds i16, ptr %5, i64 9985
  %27 = load i16, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %28 = trunc i32 %26 to i16
  %conv3.i.1 = add i16 %27, %28
  store i16 %conv3.i.1, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %29 = load i32, ptr %arrayidx.i.2, align 4, !tbaa !95
  %arrayidx2.i.2 = getelementptr inbounds i16, ptr %5, i64 9986
  %30 = load i16, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %31 = trunc i32 %29 to i16
  %conv3.i.2 = add i16 %30, %31
  store i16 %conv3.i.2, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %32 = load i32, ptr %arrayidx.i.3, align 4, !tbaa !95
  %arrayidx2.i.3 = getelementptr inbounds i16, ptr %5, i64 9987
  %33 = load i16, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %34 = trunc i32 %32 to i16
  %conv3.i.3 = add i16 %33, %34
  store i16 %conv3.i.3, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %35 = load i32, ptr %arrayidx.i.4, align 4, !tbaa !95
  %arrayidx2.i.4 = getelementptr inbounds i16, ptr %5, i64 9988
  %36 = load i16, ptr %arrayidx2.i.4, align 2, !tbaa !13
  %37 = trunc i32 %35 to i16
  %conv3.i.4 = add i16 %36, %37
  store i16 %conv3.i.4, ptr %arrayidx2.i.4, align 2, !tbaa !13
  %38 = load i32, ptr %arrayidx.i.5, align 4, !tbaa !95
  %arrayidx2.i.5 = getelementptr inbounds i16, ptr %5, i64 9989
  %39 = load i16, ptr %arrayidx2.i.5, align 2, !tbaa !13
  %40 = trunc i32 %38 to i16
  %conv3.i.5 = add i16 %39, %40
  store i16 %conv3.i.5, ptr %arrayidx2.i.5, align 2, !tbaa !13
  %41 = load i32, ptr %arrayidx.i.6, align 4, !tbaa !95
  %arrayidx2.i.6 = getelementptr inbounds i16, ptr %5, i64 9990
  %42 = load i16, ptr %arrayidx2.i.6, align 2, !tbaa !13
  %43 = trunc i32 %41 to i16
  %conv3.i.6 = add i16 %42, %43
  store i16 %conv3.i.6, ptr %arrayidx2.i.6, align 2, !tbaa !13
  %44 = load i32, ptr %arrayidx.i.7, align 4, !tbaa !95
  %arrayidx2.i.7 = getelementptr inbounds i16, ptr %5, i64 9991
  %45 = load i16, ptr %arrayidx2.i.7, align 2, !tbaa !13
  %46 = trunc i32 %44 to i16
  %conv3.i.7 = add i16 %45, %46
  store i16 %conv3.i.7, ptr %arrayidx2.i.7, align 2, !tbaa !13
  %47 = load i32, ptr %arrayidx.i.8, align 4, !tbaa !95
  %arrayidx2.i.8 = getelementptr inbounds i16, ptr %5, i64 9992
  %48 = load i16, ptr %arrayidx2.i.8, align 2, !tbaa !13
  %49 = trunc i32 %47 to i16
  %conv3.i.8 = add i16 %48, %49
  store i16 %conv3.i.8, ptr %arrayidx2.i.8, align 2, !tbaa !13
  %50 = load i32, ptr %arrayidx.i.9, align 4, !tbaa !95
  %arrayidx2.i.9 = getelementptr inbounds i16, ptr %5, i64 9993
  %51 = load i16, ptr %arrayidx2.i.9, align 2, !tbaa !13
  %52 = trunc i32 %50 to i16
  %conv3.i.9 = add i16 %51, %52
  store i16 %conv3.i.9, ptr %arrayidx2.i.9, align 2, !tbaa !13
  %53 = load i32, ptr %arrayidx.i.10, align 4, !tbaa !95
  %arrayidx2.i.10 = getelementptr inbounds i16, ptr %5, i64 9994
  %54 = load i16, ptr %arrayidx2.i.10, align 2, !tbaa !13
  %55 = trunc i32 %53 to i16
  %conv3.i.10 = add i16 %54, %55
  store i16 %conv3.i.10, ptr %arrayidx2.i.10, align 2, !tbaa !13
  %56 = load i32, ptr %arrayidx.i.11, align 4, !tbaa !95
  %arrayidx2.i.11 = getelementptr inbounds i16, ptr %5, i64 9995
  %57 = load i16, ptr %arrayidx2.i.11, align 2, !tbaa !13
  %58 = trunc i32 %56 to i16
  %conv3.i.11 = add i16 %57, %58
  store i16 %conv3.i.11, ptr %arrayidx2.i.11, align 2, !tbaa !13
  %59 = load i32, ptr %arrayidx.i.12, align 4, !tbaa !95
  %arrayidx2.i.12 = getelementptr inbounds i16, ptr %5, i64 9996
  %60 = load i16, ptr %arrayidx2.i.12, align 2, !tbaa !13
  %61 = trunc i32 %59 to i16
  %conv3.i.12 = add i16 %60, %61
  store i16 %conv3.i.12, ptr %arrayidx2.i.12, align 2, !tbaa !13
  %62 = load i32, ptr %arrayidx.i.13, align 4, !tbaa !95
  %arrayidx2.i.13 = getelementptr inbounds i16, ptr %5, i64 9997
  %63 = load i16, ptr %arrayidx2.i.13, align 2, !tbaa !13
  %64 = trunc i32 %62 to i16
  %conv3.i.13 = add i16 %63, %64
  store i16 %conv3.i.13, ptr %arrayidx2.i.13, align 2, !tbaa !13
  %65 = load i32, ptr %arrayidx.i.14, align 4, !tbaa !95
  %arrayidx2.i.14 = getelementptr inbounds i16, ptr %5, i64 9998
  %66 = load i16, ptr %arrayidx2.i.14, align 2, !tbaa !13
  %67 = trunc i32 %65 to i16
  %conv3.i.14 = add i16 %66, %67
  store i16 %conv3.i.14, ptr %arrayidx2.i.14, align 2, !tbaa !13
  %68 = load i32, ptr %arrayidx.i.15, align 4, !tbaa !95
  %arrayidx2.i.15 = getelementptr inbounds i16, ptr %5, i64 9999
  %69 = load i16, ptr %arrayidx2.i.15, align 2, !tbaa !13
  %70 = trunc i32 %68 to i16
  %conv3.i.15 = add i16 %69, %70
  store i16 %conv3.i.15, ptr %arrayidx2.i.15, align 2, !tbaa !13
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %71 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %71, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %72 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %71, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution", align 2
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i31.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  store i16 0, ptr %distrib.i32.i, align 2, !tbaa !9
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i33.i, align 2, !tbaa !12
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i34.i
  store i16 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 2, !tbaa !13
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %arrayidx.i = getelementptr inbounds i32, ptr %call.i, i64 9984
  %arrayidx.i.1 = getelementptr inbounds i32, ptr %call.i, i64 9985
  %arrayidx.i.2 = getelementptr inbounds i32, ptr %call.i, i64 9986
  %arrayidx.i.3 = getelementptr inbounds i32, ptr %call.i, i64 9987
  %arrayidx.i.4 = getelementptr inbounds i32, ptr %call.i, i64 9988
  %arrayidx.i.5 = getelementptr inbounds i32, ptr %call.i, i64 9989
  %arrayidx.i.6 = getelementptr inbounds i32, ptr %call.i, i64 9990
  %arrayidx.i.7 = getelementptr inbounds i32, ptr %call.i, i64 9991
  %arrayidx.i.8 = getelementptr inbounds i32, ptr %call.i, i64 9992
  %arrayidx.i.9 = getelementptr inbounds i32, ptr %call.i, i64 9993
  %arrayidx.i.10 = getelementptr inbounds i32, ptr %call.i, i64 9994
  %arrayidx.i.11 = getelementptr inbounds i32, ptr %call.i, i64 9995
  %arrayidx.i.12 = getelementptr inbounds i32, ptr %call.i, i64 9996
  %arrayidx.i.13 = getelementptr inbounds i32, ptr %call.i, i64 9997
  %arrayidx.i.14 = getelementptr inbounds i32, ptr %call.i, i64 9998
  %arrayidx.i.15 = getelementptr inbounds i32, ptr %call.i, i64 9999
  br label %for.body.i

if.end.i.i:                                       ; preds = %for.body.i1, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i1
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %for.body.i1 ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next, %vector.body ]
  %6 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <16 x i32>, ptr %6, align 4, !tbaa !95
  %7 = getelementptr inbounds i32, ptr %6, i64 16
  %wide.load5 = load <16 x i32>, ptr %7, align 4, !tbaa !95
  %8 = getelementptr inbounds i32, ptr %6, i64 32
  %wide.load6 = load <16 x i32>, ptr %8, align 4, !tbaa !95
  %9 = getelementptr inbounds i32, ptr %6, i64 48
  %wide.load7 = load <16 x i32>, ptr %9, align 4, !tbaa !95
  %10 = getelementptr inbounds i16, ptr %5, i64 %index
  %wide.load8 = load <16 x i16>, ptr %10, align 2, !tbaa !13
  %11 = getelementptr inbounds i16, ptr %10, i64 16
  %wide.load9 = load <16 x i16>, ptr %11, align 2, !tbaa !13
  %12 = getelementptr inbounds i16, ptr %10, i64 32
  %wide.load10 = load <16 x i16>, ptr %12, align 2, !tbaa !13
  %13 = getelementptr inbounds i16, ptr %10, i64 48
  %wide.load11 = load <16 x i16>, ptr %13, align 2, !tbaa !13
  %14 = trunc <16 x i32> %wide.load to <16 x i16>
  %15 = trunc <16 x i32> %wide.load5 to <16 x i16>
  %16 = trunc <16 x i32> %wide.load6 to <16 x i16>
  %17 = trunc <16 x i32> %wide.load7 to <16 x i16>
  %18 = add <16 x i16> %wide.load8, %14
  %19 = add <16 x i16> %wide.load9, %15
  %20 = add <16 x i16> %wide.load10, %16
  %21 = add <16 x i16> %wide.load11, %17
  store <16 x i16> %18, ptr %10, align 2, !tbaa !13
  store <16 x i16> %19, ptr %11, align 2, !tbaa !13
  store <16 x i16> %20, ptr %12, align 2, !tbaa !13
  store <16 x i16> %21, ptr %13, align 2, !tbaa !13
  %index.next = add nuw i64 %index, 64
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1, label %vector.body, !llvm.loop !205

for.body.i1:                                      ; preds = %vector.body
  %23 = load i32, ptr %arrayidx.i, align 4, !tbaa !95
  %arrayidx2.i = getelementptr inbounds i16, ptr %5, i64 9984
  %24 = load i16, ptr %arrayidx2.i, align 2, !tbaa !13
  %25 = trunc i32 %23 to i16
  %conv3.i = add i16 %24, %25
  store i16 %conv3.i, ptr %arrayidx2.i, align 2, !tbaa !13
  %26 = load i32, ptr %arrayidx.i.1, align 4, !tbaa !95
  %arrayidx2.i.1 = getelementptr inbounds i16, ptr %5, i64 9985
  %27 = load i16, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %28 = trunc i32 %26 to i16
  %conv3.i.1 = add i16 %27, %28
  store i16 %conv3.i.1, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %29 = load i32, ptr %arrayidx.i.2, align 4, !tbaa !95
  %arrayidx2.i.2 = getelementptr inbounds i16, ptr %5, i64 9986
  %30 = load i16, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %31 = trunc i32 %29 to i16
  %conv3.i.2 = add i16 %30, %31
  store i16 %conv3.i.2, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %32 = load i32, ptr %arrayidx.i.3, align 4, !tbaa !95
  %arrayidx2.i.3 = getelementptr inbounds i16, ptr %5, i64 9987
  %33 = load i16, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %34 = trunc i32 %32 to i16
  %conv3.i.3 = add i16 %33, %34
  store i16 %conv3.i.3, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %35 = load i32, ptr %arrayidx.i.4, align 4, !tbaa !95
  %arrayidx2.i.4 = getelementptr inbounds i16, ptr %5, i64 9988
  %36 = load i16, ptr %arrayidx2.i.4, align 2, !tbaa !13
  %37 = trunc i32 %35 to i16
  %conv3.i.4 = add i16 %36, %37
  store i16 %conv3.i.4, ptr %arrayidx2.i.4, align 2, !tbaa !13
  %38 = load i32, ptr %arrayidx.i.5, align 4, !tbaa !95
  %arrayidx2.i.5 = getelementptr inbounds i16, ptr %5, i64 9989
  %39 = load i16, ptr %arrayidx2.i.5, align 2, !tbaa !13
  %40 = trunc i32 %38 to i16
  %conv3.i.5 = add i16 %39, %40
  store i16 %conv3.i.5, ptr %arrayidx2.i.5, align 2, !tbaa !13
  %41 = load i32, ptr %arrayidx.i.6, align 4, !tbaa !95
  %arrayidx2.i.6 = getelementptr inbounds i16, ptr %5, i64 9990
  %42 = load i16, ptr %arrayidx2.i.6, align 2, !tbaa !13
  %43 = trunc i32 %41 to i16
  %conv3.i.6 = add i16 %42, %43
  store i16 %conv3.i.6, ptr %arrayidx2.i.6, align 2, !tbaa !13
  %44 = load i32, ptr %arrayidx.i.7, align 4, !tbaa !95
  %arrayidx2.i.7 = getelementptr inbounds i16, ptr %5, i64 9991
  %45 = load i16, ptr %arrayidx2.i.7, align 2, !tbaa !13
  %46 = trunc i32 %44 to i16
  %conv3.i.7 = add i16 %45, %46
  store i16 %conv3.i.7, ptr %arrayidx2.i.7, align 2, !tbaa !13
  %47 = load i32, ptr %arrayidx.i.8, align 4, !tbaa !95
  %arrayidx2.i.8 = getelementptr inbounds i16, ptr %5, i64 9992
  %48 = load i16, ptr %arrayidx2.i.8, align 2, !tbaa !13
  %49 = trunc i32 %47 to i16
  %conv3.i.8 = add i16 %48, %49
  store i16 %conv3.i.8, ptr %arrayidx2.i.8, align 2, !tbaa !13
  %50 = load i32, ptr %arrayidx.i.9, align 4, !tbaa !95
  %arrayidx2.i.9 = getelementptr inbounds i16, ptr %5, i64 9993
  %51 = load i16, ptr %arrayidx2.i.9, align 2, !tbaa !13
  %52 = trunc i32 %50 to i16
  %conv3.i.9 = add i16 %51, %52
  store i16 %conv3.i.9, ptr %arrayidx2.i.9, align 2, !tbaa !13
  %53 = load i32, ptr %arrayidx.i.10, align 4, !tbaa !95
  %arrayidx2.i.10 = getelementptr inbounds i16, ptr %5, i64 9994
  %54 = load i16, ptr %arrayidx2.i.10, align 2, !tbaa !13
  %55 = trunc i32 %53 to i16
  %conv3.i.10 = add i16 %54, %55
  store i16 %conv3.i.10, ptr %arrayidx2.i.10, align 2, !tbaa !13
  %56 = load i32, ptr %arrayidx.i.11, align 4, !tbaa !95
  %arrayidx2.i.11 = getelementptr inbounds i16, ptr %5, i64 9995
  %57 = load i16, ptr %arrayidx2.i.11, align 2, !tbaa !13
  %58 = trunc i32 %56 to i16
  %conv3.i.11 = add i16 %57, %58
  store i16 %conv3.i.11, ptr %arrayidx2.i.11, align 2, !tbaa !13
  %59 = load i32, ptr %arrayidx.i.12, align 4, !tbaa !95
  %arrayidx2.i.12 = getelementptr inbounds i16, ptr %5, i64 9996
  %60 = load i16, ptr %arrayidx2.i.12, align 2, !tbaa !13
  %61 = trunc i32 %59 to i16
  %conv3.i.12 = add i16 %60, %61
  store i16 %conv3.i.12, ptr %arrayidx2.i.12, align 2, !tbaa !13
  %62 = load i32, ptr %arrayidx.i.13, align 4, !tbaa !95
  %arrayidx2.i.13 = getelementptr inbounds i16, ptr %5, i64 9997
  %63 = load i16, ptr %arrayidx2.i.13, align 2, !tbaa !13
  %64 = trunc i32 %62 to i16
  %conv3.i.13 = add i16 %63, %64
  store i16 %conv3.i.13, ptr %arrayidx2.i.13, align 2, !tbaa !13
  %65 = load i32, ptr %arrayidx.i.14, align 4, !tbaa !95
  %arrayidx2.i.14 = getelementptr inbounds i16, ptr %5, i64 9998
  %66 = load i16, ptr %arrayidx2.i.14, align 2, !tbaa !13
  %67 = trunc i32 %65 to i16
  %conv3.i.14 = add i16 %66, %67
  store i16 %conv3.i.14, ptr %arrayidx2.i.14, align 2, !tbaa !13
  %68 = load i32, ptr %arrayidx.i.15, align 4, !tbaa !95
  %arrayidx2.i.15 = getelementptr inbounds i16, ptr %5, i64 9999
  %69 = load i16, ptr %arrayidx2.i.15, align 2, !tbaa !13
  %70 = trunc i32 %68 to i16
  %conv3.i.15 = add i16 %69, %70
  store i16 %conv3.i.15, ptr %arrayidx2.i.15, align 2, !tbaa !13
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %71 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %71, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %72 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %71, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution", align 2
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i31.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  store i16 0, ptr %distrib.i32.i, align 2, !tbaa !9
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i33.i, align 2, !tbaa !12
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i34.i
  store i16 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 2, !tbaa !13
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i, !prof !42

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.cond.preheader.i, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %1, %for.cond.preheader.i ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next.1, %vector.body ]
  %6 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <4 x i32>, ptr %6, align 4, !tbaa !95
  %7 = getelementptr inbounds i32, ptr %6, i64 4
  %wide.load5 = load <4 x i32>, ptr %7, align 4, !tbaa !95
  %8 = getelementptr inbounds i16, ptr %5, i64 %index
  %wide.load6 = load <4 x i16>, ptr %8, align 2, !tbaa !13
  %9 = getelementptr inbounds i16, ptr %8, i64 4
  %wide.load7 = load <4 x i16>, ptr %9, align 2, !tbaa !13
  %10 = trunc <4 x i32> %wide.load to <4 x i16>
  %11 = trunc <4 x i32> %wide.load5 to <4 x i16>
  %12 = add <4 x i16> %wide.load6, %10
  %13 = add <4 x i16> %wide.load7, %11
  store <4 x i16> %12, ptr %8, align 2, !tbaa !13
  store <4 x i16> %13, ptr %9, align 2, !tbaa !13
  %index.next = or i64 %index, 8
  %14 = getelementptr inbounds i32, ptr %call.i, i64 %index.next
  %wide.load.1 = load <4 x i32>, ptr %14, align 4, !tbaa !95
  %15 = getelementptr inbounds i32, ptr %14, i64 4
  %wide.load5.1 = load <4 x i32>, ptr %15, align 4, !tbaa !95
  %16 = getelementptr inbounds i16, ptr %5, i64 %index.next
  %wide.load6.1 = load <4 x i16>, ptr %16, align 2, !tbaa !13
  %17 = getelementptr inbounds i16, ptr %16, i64 4
  %wide.load7.1 = load <4 x i16>, ptr %17, align 2, !tbaa !13
  %18 = trunc <4 x i32> %wide.load.1 to <4 x i16>
  %19 = trunc <4 x i32> %wide.load5.1 to <4 x i16>
  %20 = add <4 x i16> %wide.load6.1, %18
  %21 = add <4 x i16> %wide.load7.1, %19
  store <4 x i16> %20, ptr %16, align 2, !tbaa !13
  store <4 x i16> %21, ptr %17, align 2, !tbaa !13
  %index.next.1 = add nuw nsw i64 %index, 16
  %22 = icmp eq i64 %index.next.1, 10000
  br i1 %22, label %invoke.cont19.i, label %vector.body, !llvm.loop !206

invoke.cont19.i:                                  ; preds = %vector.body
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %23 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %23, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %24 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %24) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %23, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIjtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont3.i unwind label %ehcleanup61.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i75.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i75.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  br label %for.body.i79.i

for.body.i79.i:                                   ; preds = %for.body.i79.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i76.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i77.i.4, %for.body.i79.i ]
  %arrayidx.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i76.i
  %0 = load i64, ptr %arrayidx.i.i, align 8, !tbaa !147
  %conv.i.i = trunc i64 %0 to i16
  %arrayidx2.i.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i76.i
  store i16 %conv.i.i, ptr %arrayidx2.i.i, align 2, !tbaa !13
  %indvars.iv.next.i77.i = add nuw nsw i64 %indvars.iv.i76.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i77.i
  %1 = load i64, ptr %arrayidx.i.i.1, align 8, !tbaa !147
  %conv.i.i.1 = trunc i64 %1 to i16
  %arrayidx2.i.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i
  store i16 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 2, !tbaa !13
  %indvars.iv.next.i77.i.1 = add nuw nsw i64 %indvars.iv.i76.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i77.i.1
  %2 = load i64, ptr %arrayidx.i.i.2, align 8, !tbaa !147
  %conv.i.i.2 = trunc i64 %2 to i16
  %arrayidx2.i.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.1
  store i16 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 2, !tbaa !13
  %indvars.iv.next.i77.i.2 = add nuw nsw i64 %indvars.iv.i76.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i77.i.2
  %3 = load i64, ptr %arrayidx.i.i.3, align 8, !tbaa !147
  %conv.i.i.3 = trunc i64 %3 to i16
  %arrayidx2.i.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.2
  store i16 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 2, !tbaa !13
  %indvars.iv.next.i77.i.3 = add nuw nsw i64 %indvars.iv.i76.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i77.i.3
  %4 = load i64, ptr %arrayidx.i.i.4, align 8, !tbaa !147
  %conv.i.i.4 = trunc i64 %4 to i16
  %arrayidx2.i.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.3
  store i16 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 2, !tbaa !13
  %indvars.iv.next.i77.i.4 = add nuw nsw i64 %indvars.iv.i76.i, 5
  %exitcond.not.i78.i.4 = icmp eq i64 %indvars.iv.next.i77.i.4, 10000
  br i1 %exitcond.not.i78.i.4, label %vector.body, label %for.body.i79.i, !llvm.loop !207

vector.body:                                      ; preds = %for.body.i79.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i79.i ]
  %5 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <8 x i64>, ptr %5, align 8, !tbaa !147
  %6 = getelementptr inbounds i64, ptr %5, i64 8
  %wide.load27 = load <8 x i64>, ptr %6, align 8, !tbaa !147
  %7 = getelementptr inbounds i64, ptr %5, i64 16
  %wide.load28 = load <8 x i64>, ptr %7, align 8, !tbaa !147
  %8 = getelementptr inbounds i64, ptr %5, i64 24
  %wide.load29 = load <8 x i64>, ptr %8, align 8, !tbaa !147
  %9 = trunc <8 x i64> %wide.load to <8 x i16>
  %10 = trunc <8 x i64> %wide.load27 to <8 x i16>
  %11 = trunc <8 x i64> %wide.load28 to <8 x i16>
  %12 = trunc <8 x i64> %wide.load29 to <8 x i16>
  %13 = getelementptr inbounds i16, ptr %call1.i, i64 %index
  store <8 x i16> %9, ptr %13, align 2, !tbaa !13
  %14 = getelementptr inbounds i16, ptr %13, i64 8
  store <8 x i16> %10, ptr %14, align 2, !tbaa !13
  %15 = getelementptr inbounds i16, ptr %13, i64 16
  store <8 x i16> %11, ptr %15, align 2, !tbaa !13
  %16 = getelementptr inbounds i16, ptr %13, i64 24
  store <8 x i16> %12, ptr %16, align 2, !tbaa !13
  %index.next = add nuw i64 %index, 32
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !208

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i64, ptr %call.i, i64 9984
  %18 = load i64, ptr %arrayidx.i, align 8, !tbaa !147
  %conv.i = trunc i64 %18 to i16
  %arrayidx2.i = getelementptr inbounds i16, ptr %call1.i, i64 9984
  store i16 %conv.i, ptr %arrayidx2.i, align 2, !tbaa !13
  %arrayidx.i.1 = getelementptr inbounds i64, ptr %call.i, i64 9985
  %19 = load i64, ptr %arrayidx.i.1, align 8, !tbaa !147
  %conv.i.1 = trunc i64 %19 to i16
  %arrayidx2.i.1 = getelementptr inbounds i16, ptr %call1.i, i64 9985
  store i16 %conv.i.1, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %arrayidx.i.2 = getelementptr inbounds i64, ptr %call.i, i64 9986
  %20 = load i64, ptr %arrayidx.i.2, align 8, !tbaa !147
  %conv.i.2 = trunc i64 %20 to i16
  %arrayidx2.i.2 = getelementptr inbounds i16, ptr %call1.i, i64 9986
  store i16 %conv.i.2, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %arrayidx.i.3 = getelementptr inbounds i64, ptr %call.i, i64 9987
  %21 = load i64, ptr %arrayidx.i.3, align 8, !tbaa !147
  %conv.i.3 = trunc i64 %21 to i16
  %arrayidx2.i.3 = getelementptr inbounds i16, ptr %call1.i, i64 9987
  store i16 %conv.i.3, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %arrayidx.i.4 = getelementptr inbounds i64, ptr %call.i, i64 9988
  %22 = load i64, ptr %arrayidx.i.4, align 8, !tbaa !147
  %conv.i.4 = trunc i64 %22 to i16
  %arrayidx2.i.4 = getelementptr inbounds i16, ptr %call1.i, i64 9988
  store i16 %conv.i.4, ptr %arrayidx2.i.4, align 2, !tbaa !13
  %arrayidx.i.5 = getelementptr inbounds i64, ptr %call.i, i64 9989
  %23 = load i64, ptr %arrayidx.i.5, align 8, !tbaa !147
  %conv.i.5 = trunc i64 %23 to i16
  %arrayidx2.i.5 = getelementptr inbounds i16, ptr %call1.i, i64 9989
  store i16 %conv.i.5, ptr %arrayidx2.i.5, align 2, !tbaa !13
  %arrayidx.i.6 = getelementptr inbounds i64, ptr %call.i, i64 9990
  %24 = load i64, ptr %arrayidx.i.6, align 8, !tbaa !147
  %conv.i.6 = trunc i64 %24 to i16
  %arrayidx2.i.6 = getelementptr inbounds i16, ptr %call1.i, i64 9990
  store i16 %conv.i.6, ptr %arrayidx2.i.6, align 2, !tbaa !13
  %arrayidx.i.7 = getelementptr inbounds i64, ptr %call.i, i64 9991
  %25 = load i64, ptr %arrayidx.i.7, align 8, !tbaa !147
  %conv.i.7 = trunc i64 %25 to i16
  %arrayidx2.i.7 = getelementptr inbounds i16, ptr %call1.i, i64 9991
  store i16 %conv.i.7, ptr %arrayidx2.i.7, align 2, !tbaa !13
  %arrayidx.i.8 = getelementptr inbounds i64, ptr %call.i, i64 9992
  %26 = load i64, ptr %arrayidx.i.8, align 8, !tbaa !147
  %conv.i.8 = trunc i64 %26 to i16
  %arrayidx2.i.8 = getelementptr inbounds i16, ptr %call1.i, i64 9992
  store i16 %conv.i.8, ptr %arrayidx2.i.8, align 2, !tbaa !13
  %arrayidx.i.9 = getelementptr inbounds i64, ptr %call.i, i64 9993
  %27 = load i64, ptr %arrayidx.i.9, align 8, !tbaa !147
  %conv.i.9 = trunc i64 %27 to i16
  %arrayidx2.i.9 = getelementptr inbounds i16, ptr %call1.i, i64 9993
  store i16 %conv.i.9, ptr %arrayidx2.i.9, align 2, !tbaa !13
  %arrayidx.i.10 = getelementptr inbounds i64, ptr %call.i, i64 9994
  %28 = load i64, ptr %arrayidx.i.10, align 8, !tbaa !147
  %conv.i.10 = trunc i64 %28 to i16
  %arrayidx2.i.10 = getelementptr inbounds i16, ptr %call1.i, i64 9994
  store i16 %conv.i.10, ptr %arrayidx2.i.10, align 2, !tbaa !13
  %arrayidx.i.11 = getelementptr inbounds i64, ptr %call.i, i64 9995
  %29 = load i64, ptr %arrayidx.i.11, align 8, !tbaa !147
  %conv.i.11 = trunc i64 %29 to i16
  %arrayidx2.i.11 = getelementptr inbounds i16, ptr %call1.i, i64 9995
  store i16 %conv.i.11, ptr %arrayidx2.i.11, align 2, !tbaa !13
  %arrayidx.i.12 = getelementptr inbounds i64, ptr %call.i, i64 9996
  %30 = load i64, ptr %arrayidx.i.12, align 8, !tbaa !147
  %conv.i.12 = trunc i64 %30 to i16
  %arrayidx2.i.12 = getelementptr inbounds i16, ptr %call1.i, i64 9996
  store i16 %conv.i.12, ptr %arrayidx2.i.12, align 2, !tbaa !13
  %arrayidx.i.13 = getelementptr inbounds i64, ptr %call.i, i64 9997
  %31 = load i64, ptr %arrayidx.i.13, align 8, !tbaa !147
  %conv.i.13 = trunc i64 %31 to i16
  %arrayidx2.i.13 = getelementptr inbounds i16, ptr %call1.i, i64 9997
  store i16 %conv.i.13, ptr %arrayidx2.i.13, align 2, !tbaa !13
  %arrayidx.i.14 = getelementptr inbounds i64, ptr %call.i, i64 9998
  %32 = load i64, ptr %arrayidx.i.14, align 8, !tbaa !147
  %conv.i.14 = trunc i64 %32 to i16
  %arrayidx2.i.14 = getelementptr inbounds i16, ptr %call1.i, i64 9998
  store i16 %conv.i.14, ptr %arrayidx2.i.14, align 2, !tbaa !13
  %arrayidx.i.15 = getelementptr inbounds i64, ptr %call.i, i64 9999
  %33 = load i64, ptr %arrayidx.i.15, align 8, !tbaa !147
  %conv.i.15 = trunc i64 %33 to i16
  %arrayidx2.i.15 = getelementptr inbounds i16, ptr %call1.i, i64 9999
  store i16 %conv.i.15, ptr %arrayidx2.i.15, align 2, !tbaa !13
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i80.i.1 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i16, ptr %arrayidx.i80.i.1, align 2, !tbaa !13
  %arrayidx.i81.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i16, ptr %arrayidx.i81.i.1, align 2, !tbaa !13
  %cmp18.not.i.1 = icmp eq i16 %34, %35
  br i1 %cmp18.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i80.i.2 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i16, ptr %arrayidx.i80.i.2, align 2, !tbaa !13
  %arrayidx.i81.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i16, ptr %arrayidx.i81.i.2, align 2, !tbaa !13
  %cmp18.not.i.2 = icmp eq i16 %36, %37
  br i1 %cmp18.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i80.i.3 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i16, ptr %arrayidx.i80.i.3, align 2, !tbaa !13
  %arrayidx.i81.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i16, ptr %arrayidx.i81.i.3, align 2, !tbaa !13
  %cmp18.not.i.3 = icmp eq i16 %38, %39
  br i1 %cmp18.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i80.i.4 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i16, ptr %arrayidx.i80.i.4, align 2, !tbaa !13
  %arrayidx.i81.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i16, ptr %arrayidx.i81.i.4, align 2, !tbaa !13
  %cmp18.not.i.4 = icmp eq i16 %40, %41
  br i1 %cmp18.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !209

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond46.preheader.i unwind label %lpad43.i

for.cond46.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not144148.i = icmp eq i64 %43, 0
  %cmp.not.i.not144.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not144148.i
  br i1 %cmp.not.i.not144.i, label %if.end.i.i, label %for.body50.i.preheader, !prof !42

for.body50.i.preheader:                           ; preds = %for.cond46.preheader.i
  %arrayidx.i8 = getelementptr inbounds i64, ptr %call.i, i64 9984
  %arrayidx.i8.1 = getelementptr inbounds i64, ptr %call.i, i64 9985
  %arrayidx.i8.2 = getelementptr inbounds i64, ptr %call.i, i64 9986
  %arrayidx.i8.3 = getelementptr inbounds i64, ptr %call.i, i64 9987
  %arrayidx.i8.4 = getelementptr inbounds i64, ptr %call.i, i64 9988
  %arrayidx.i8.5 = getelementptr inbounds i64, ptr %call.i, i64 9989
  %arrayidx.i8.6 = getelementptr inbounds i64, ptr %call.i, i64 9990
  %arrayidx.i8.7 = getelementptr inbounds i64, ptr %call.i, i64 9991
  %arrayidx.i8.8 = getelementptr inbounds i64, ptr %call.i, i64 9992
  %arrayidx.i8.9 = getelementptr inbounds i64, ptr %call.i, i64 9993
  %arrayidx.i8.10 = getelementptr inbounds i64, ptr %call.i, i64 9994
  %arrayidx.i8.11 = getelementptr inbounds i64, ptr %call.i, i64 9995
  %arrayidx.i8.12 = getelementptr inbounds i64, ptr %call.i, i64 9996
  %arrayidx.i8.13 = getelementptr inbounds i64, ptr %call.i, i64 9997
  %arrayidx.i8.14 = getelementptr inbounds i64, ptr %call.i, i64 9998
  %arrayidx.i8.15 = getelementptr inbounds i64, ptr %call.i, i64 9999
  br label %for.body50.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup63.i

ehcleanup61.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i115.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i80.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i16, ptr %arrayidx.i80.i, align 2, !tbaa !13
  %arrayidx.i81.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i16, ptr %arrayidx.i81.i, align 2, !tbaa !13
  %cmp18.not.i = icmp eq i16 %46, %47
  br i1 %cmp18.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i16 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i80.i.le = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i83.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont20.i unwind label %lpad19.i

invoke.cont20.i:                                  ; preds = %if.then.i
  %arrayidx.i84.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i64, ptr %arrayidx.i84.i, align 8, !tbaa !147
  %call.i85.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %48)
          to label %invoke.cont24.i unwind label %lpad19.i

invoke.cont24.i:                                  ; preds = %invoke.cont20.i
  %call1.i88.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i85.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont26.i unwind label %lpad19.i

invoke.cont26.i:                                  ; preds = %invoke.cont24.i
  %49 = load i16, ptr %arrayidx.i80.i.le, align 2, !tbaa !13
  %conv.i91.i = zext i16 %49 to i64
  %call.i92.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i85.i, i64 noundef %conv.i91.i)
          to label %invoke.cont30.i unwind label %lpad19.i

invoke.cont30.i:                                  ; preds = %invoke.cont26.i
  %call1.i95.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i92.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont32.i unwind label %lpad19.i

invoke.cont32.i:                                  ; preds = %invoke.cont30.i
  %conv.i98.i = zext i16 %.lcssa to i64
  %call.i99.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i92.i, i64 noundef %conv.i98.i)
          to label %invoke.cont36.i unwind label %lpad19.i

invoke.cont36.i:                                  ; preds = %invoke.cont32.i
  %call39.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i99.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont38.i unwind label %lpad19.i

invoke.cont38.i:                                  ; preds = %invoke.cont36.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad19.i:                                         ; preds = %invoke.cont36.i, %invoke.cont32.i, %invoke.cont30.i, %invoke.cont26.i, %invoke.cont24.i, %invoke.cont20.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

if.end.i.i:                                       ; preds = %for.body.i13, %for.cond46.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad43.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i103.i = icmp eq ptr %51, null
  br i1 %cmp.not.i103.i, label %_ZL28benchForTruncOrZextVecInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i104.i

delete.notnull.i.i104.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad43.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

for.body50.i:                                     ; preds = %for.body50.i.preheader, %for.body.i13
  %__begin1.sroa.0.0145.i = phi i64 [ %dec.i.i, %for.body.i13 ], [ %43, %for.body50.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body35

vector.body35:                                    ; preds = %vector.body35, %for.body50.i
  %index36 = phi i64 [ 0, %for.body50.i ], [ %index.next41, %vector.body35 ]
  %55 = getelementptr inbounds i64, ptr %call.i, i64 %index36
  %wide.load37 = load <8 x i64>, ptr %55, align 8, !tbaa !147
  %56 = getelementptr inbounds i64, ptr %55, i64 8
  %wide.load38 = load <8 x i64>, ptr %56, align 8, !tbaa !147
  %57 = getelementptr inbounds i64, ptr %55, i64 16
  %wide.load39 = load <8 x i64>, ptr %57, align 8, !tbaa !147
  %58 = getelementptr inbounds i64, ptr %55, i64 24
  %wide.load40 = load <8 x i64>, ptr %58, align 8, !tbaa !147
  %59 = trunc <8 x i64> %wide.load37 to <8 x i16>
  %60 = trunc <8 x i64> %wide.load38 to <8 x i16>
  %61 = trunc <8 x i64> %wide.load39 to <8 x i16>
  %62 = trunc <8 x i64> %wide.load40 to <8 x i16>
  %63 = getelementptr inbounds i16, ptr %54, i64 %index36
  store <8 x i16> %59, ptr %63, align 2, !tbaa !13
  %64 = getelementptr inbounds i16, ptr %63, i64 8
  store <8 x i16> %60, ptr %64, align 2, !tbaa !13
  %65 = getelementptr inbounds i16, ptr %63, i64 16
  store <8 x i16> %61, ptr %65, align 2, !tbaa !13
  %66 = getelementptr inbounds i16, ptr %63, i64 24
  store <8 x i16> %62, ptr %66, align 2, !tbaa !13
  %index.next41 = add nuw i64 %index36, 32
  %67 = icmp eq i64 %index.next41, 9984
  br i1 %67, label %for.body.i13, label %vector.body35, !llvm.loop !210

for.body.i13:                                     ; preds = %vector.body35
  %68 = load i64, ptr %arrayidx.i8, align 8, !tbaa !147
  %conv.i9 = trunc i64 %68 to i16
  %arrayidx2.i10 = getelementptr inbounds i16, ptr %54, i64 9984
  store i16 %conv.i9, ptr %arrayidx2.i10, align 2, !tbaa !13
  %69 = load i64, ptr %arrayidx.i8.1, align 8, !tbaa !147
  %conv.i9.1 = trunc i64 %69 to i16
  %arrayidx2.i10.1 = getelementptr inbounds i16, ptr %54, i64 9985
  store i16 %conv.i9.1, ptr %arrayidx2.i10.1, align 2, !tbaa !13
  %70 = load i64, ptr %arrayidx.i8.2, align 8, !tbaa !147
  %conv.i9.2 = trunc i64 %70 to i16
  %arrayidx2.i10.2 = getelementptr inbounds i16, ptr %54, i64 9986
  store i16 %conv.i9.2, ptr %arrayidx2.i10.2, align 2, !tbaa !13
  %71 = load i64, ptr %arrayidx.i8.3, align 8, !tbaa !147
  %conv.i9.3 = trunc i64 %71 to i16
  %arrayidx2.i10.3 = getelementptr inbounds i16, ptr %54, i64 9987
  store i16 %conv.i9.3, ptr %arrayidx2.i10.3, align 2, !tbaa !13
  %72 = load i64, ptr %arrayidx.i8.4, align 8, !tbaa !147
  %conv.i9.4 = trunc i64 %72 to i16
  %arrayidx2.i10.4 = getelementptr inbounds i16, ptr %54, i64 9988
  store i16 %conv.i9.4, ptr %arrayidx2.i10.4, align 2, !tbaa !13
  %73 = load i64, ptr %arrayidx.i8.5, align 8, !tbaa !147
  %conv.i9.5 = trunc i64 %73 to i16
  %arrayidx2.i10.5 = getelementptr inbounds i16, ptr %54, i64 9989
  store i16 %conv.i9.5, ptr %arrayidx2.i10.5, align 2, !tbaa !13
  %74 = load i64, ptr %arrayidx.i8.6, align 8, !tbaa !147
  %conv.i9.6 = trunc i64 %74 to i16
  %arrayidx2.i10.6 = getelementptr inbounds i16, ptr %54, i64 9990
  store i16 %conv.i9.6, ptr %arrayidx2.i10.6, align 2, !tbaa !13
  %75 = load i64, ptr %arrayidx.i8.7, align 8, !tbaa !147
  %conv.i9.7 = trunc i64 %75 to i16
  %arrayidx2.i10.7 = getelementptr inbounds i16, ptr %54, i64 9991
  store i16 %conv.i9.7, ptr %arrayidx2.i10.7, align 2, !tbaa !13
  %76 = load i64, ptr %arrayidx.i8.8, align 8, !tbaa !147
  %conv.i9.8 = trunc i64 %76 to i16
  %arrayidx2.i10.8 = getelementptr inbounds i16, ptr %54, i64 9992
  store i16 %conv.i9.8, ptr %arrayidx2.i10.8, align 2, !tbaa !13
  %77 = load i64, ptr %arrayidx.i8.9, align 8, !tbaa !147
  %conv.i9.9 = trunc i64 %77 to i16
  %arrayidx2.i10.9 = getelementptr inbounds i16, ptr %54, i64 9993
  store i16 %conv.i9.9, ptr %arrayidx2.i10.9, align 2, !tbaa !13
  %78 = load i64, ptr %arrayidx.i8.10, align 8, !tbaa !147
  %conv.i9.10 = trunc i64 %78 to i16
  %arrayidx2.i10.10 = getelementptr inbounds i16, ptr %54, i64 9994
  store i16 %conv.i9.10, ptr %arrayidx2.i10.10, align 2, !tbaa !13
  %79 = load i64, ptr %arrayidx.i8.11, align 8, !tbaa !147
  %conv.i9.11 = trunc i64 %79 to i16
  %arrayidx2.i10.11 = getelementptr inbounds i16, ptr %54, i64 9995
  store i16 %conv.i9.11, ptr %arrayidx2.i10.11, align 2, !tbaa !13
  %80 = load i64, ptr %arrayidx.i8.12, align 8, !tbaa !147
  %conv.i9.12 = trunc i64 %80 to i16
  %arrayidx2.i10.12 = getelementptr inbounds i16, ptr %54, i64 9996
  store i16 %conv.i9.12, ptr %arrayidx2.i10.12, align 2, !tbaa !13
  %81 = load i64, ptr %arrayidx.i8.13, align 8, !tbaa !147
  %conv.i9.13 = trunc i64 %81 to i16
  %arrayidx2.i10.13 = getelementptr inbounds i16, ptr %54, i64 9997
  store i16 %conv.i9.13, ptr %arrayidx2.i10.13, align 2, !tbaa !13
  %82 = load i64, ptr %arrayidx.i8.14, align 8, !tbaa !147
  %conv.i9.14 = trunc i64 %82 to i16
  %arrayidx2.i10.14 = getelementptr inbounds i16, ptr %54, i64 9998
  store i16 %conv.i9.14, ptr %arrayidx2.i10.14, align 2, !tbaa !13
  %83 = load i64, ptr %arrayidx.i8.15, align 8, !tbaa !147
  %conv.i9.15 = trunc i64 %83 to i16
  %arrayidx2.i10.15 = getelementptr inbounds i16, ptr %54, i64 9999
  store i16 %conv.i9.15, ptr %arrayidx2.i10.15, align 2, !tbaa !13
  %dec.i.i = add i64 %__begin1.sroa.0.0145.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body50.i, !prof !42

ehcleanup61.i:                                    ; preds = %lpad43.i, %lpad19.i, %lpad5.loopexit.i
  %.pn134.i = phi { ptr, i32 } [ %50, %lpad19.i ], [ %52, %lpad43.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i114.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i114.i, label %ehcleanup63.i, label %delete.notnull.i.i115.i

delete.notnull.i.i115.i:                          ; preds = %ehcleanup61.i, %ehcleanup61.thread.i
  %.pn134.pn140.i = phi { ptr, i32 } [ %45, %ehcleanup61.thread.i ], [ %.pn134.i, %ehcleanup61.i ]
  %84 = phi ptr [ %call1.i, %ehcleanup61.thread.i ], [ %.pr.i, %ehcleanup61.i ]
  call void @_ZdaPv(ptr noundef nonnull %84) #13
  br label %ehcleanup63.i

ehcleanup63.i:                                    ; preds = %delete.notnull.i.i115.i, %ehcleanup61.i, %lpad.i
  %.pn134.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn134.i, %ehcleanup61.i ], [ %.pn134.pn140.i, %delete.notnull.i.i115.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn134.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i104.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont3.i unwind label %ehcleanup61.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i75.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i75.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  br label %for.body.i79.i

for.body.i79.i:                                   ; preds = %for.body.i79.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i76.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i77.i.4, %for.body.i79.i ]
  %arrayidx.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i76.i
  %0 = load i64, ptr %arrayidx.i.i, align 8, !tbaa !147
  %conv.i.i = trunc i64 %0 to i16
  %arrayidx2.i.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i76.i
  store i16 %conv.i.i, ptr %arrayidx2.i.i, align 2, !tbaa !13
  %indvars.iv.next.i77.i = add nuw nsw i64 %indvars.iv.i76.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i77.i
  %1 = load i64, ptr %arrayidx.i.i.1, align 8, !tbaa !147
  %conv.i.i.1 = trunc i64 %1 to i16
  %arrayidx2.i.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i
  store i16 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 2, !tbaa !13
  %indvars.iv.next.i77.i.1 = add nuw nsw i64 %indvars.iv.i76.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i77.i.1
  %2 = load i64, ptr %arrayidx.i.i.2, align 8, !tbaa !147
  %conv.i.i.2 = trunc i64 %2 to i16
  %arrayidx2.i.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.1
  store i16 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 2, !tbaa !13
  %indvars.iv.next.i77.i.2 = add nuw nsw i64 %indvars.iv.i76.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i77.i.2
  %3 = load i64, ptr %arrayidx.i.i.3, align 8, !tbaa !147
  %conv.i.i.3 = trunc i64 %3 to i16
  %arrayidx2.i.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.2
  store i16 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 2, !tbaa !13
  %indvars.iv.next.i77.i.3 = add nuw nsw i64 %indvars.iv.i76.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i77.i.3
  %4 = load i64, ptr %arrayidx.i.i.4, align 8, !tbaa !147
  %conv.i.i.4 = trunc i64 %4 to i16
  %arrayidx2.i.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.3
  store i16 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 2, !tbaa !13
  %indvars.iv.next.i77.i.4 = add nuw nsw i64 %indvars.iv.i76.i, 5
  %exitcond.not.i78.i.4 = icmp eq i64 %indvars.iv.next.i77.i.4, 10000
  br i1 %exitcond.not.i78.i.4, label %vector.body, label %for.body.i79.i, !llvm.loop !207

vector.body:                                      ; preds = %for.body.i79.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i79.i ]
  %5 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <16 x i64>, ptr %5, align 8, !tbaa !147
  %6 = getelementptr inbounds i64, ptr %5, i64 16
  %wide.load27 = load <16 x i64>, ptr %6, align 8, !tbaa !147
  %7 = getelementptr inbounds i64, ptr %5, i64 32
  %wide.load28 = load <16 x i64>, ptr %7, align 8, !tbaa !147
  %8 = getelementptr inbounds i64, ptr %5, i64 48
  %wide.load29 = load <16 x i64>, ptr %8, align 8, !tbaa !147
  %9 = trunc <16 x i64> %wide.load to <16 x i16>
  %10 = trunc <16 x i64> %wide.load27 to <16 x i16>
  %11 = trunc <16 x i64> %wide.load28 to <16 x i16>
  %12 = trunc <16 x i64> %wide.load29 to <16 x i16>
  %13 = getelementptr inbounds i16, ptr %call1.i, i64 %index
  store <16 x i16> %9, ptr %13, align 2, !tbaa !13
  %14 = getelementptr inbounds i16, ptr %13, i64 16
  store <16 x i16> %10, ptr %14, align 2, !tbaa !13
  %15 = getelementptr inbounds i16, ptr %13, i64 32
  store <16 x i16> %11, ptr %15, align 2, !tbaa !13
  %16 = getelementptr inbounds i16, ptr %13, i64 48
  store <16 x i16> %12, ptr %16, align 2, !tbaa !13
  %index.next = add nuw i64 %index, 64
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !211

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i64, ptr %call.i, i64 9984
  %18 = load i64, ptr %arrayidx.i, align 8, !tbaa !147
  %conv.i = trunc i64 %18 to i16
  %arrayidx2.i = getelementptr inbounds i16, ptr %call1.i, i64 9984
  store i16 %conv.i, ptr %arrayidx2.i, align 2, !tbaa !13
  %arrayidx.i.1 = getelementptr inbounds i64, ptr %call.i, i64 9985
  %19 = load i64, ptr %arrayidx.i.1, align 8, !tbaa !147
  %conv.i.1 = trunc i64 %19 to i16
  %arrayidx2.i.1 = getelementptr inbounds i16, ptr %call1.i, i64 9985
  store i16 %conv.i.1, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %arrayidx.i.2 = getelementptr inbounds i64, ptr %call.i, i64 9986
  %20 = load i64, ptr %arrayidx.i.2, align 8, !tbaa !147
  %conv.i.2 = trunc i64 %20 to i16
  %arrayidx2.i.2 = getelementptr inbounds i16, ptr %call1.i, i64 9986
  store i16 %conv.i.2, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %arrayidx.i.3 = getelementptr inbounds i64, ptr %call.i, i64 9987
  %21 = load i64, ptr %arrayidx.i.3, align 8, !tbaa !147
  %conv.i.3 = trunc i64 %21 to i16
  %arrayidx2.i.3 = getelementptr inbounds i16, ptr %call1.i, i64 9987
  store i16 %conv.i.3, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %arrayidx.i.4 = getelementptr inbounds i64, ptr %call.i, i64 9988
  %22 = load i64, ptr %arrayidx.i.4, align 8, !tbaa !147
  %conv.i.4 = trunc i64 %22 to i16
  %arrayidx2.i.4 = getelementptr inbounds i16, ptr %call1.i, i64 9988
  store i16 %conv.i.4, ptr %arrayidx2.i.4, align 2, !tbaa !13
  %arrayidx.i.5 = getelementptr inbounds i64, ptr %call.i, i64 9989
  %23 = load i64, ptr %arrayidx.i.5, align 8, !tbaa !147
  %conv.i.5 = trunc i64 %23 to i16
  %arrayidx2.i.5 = getelementptr inbounds i16, ptr %call1.i, i64 9989
  store i16 %conv.i.5, ptr %arrayidx2.i.5, align 2, !tbaa !13
  %arrayidx.i.6 = getelementptr inbounds i64, ptr %call.i, i64 9990
  %24 = load i64, ptr %arrayidx.i.6, align 8, !tbaa !147
  %conv.i.6 = trunc i64 %24 to i16
  %arrayidx2.i.6 = getelementptr inbounds i16, ptr %call1.i, i64 9990
  store i16 %conv.i.6, ptr %arrayidx2.i.6, align 2, !tbaa !13
  %arrayidx.i.7 = getelementptr inbounds i64, ptr %call.i, i64 9991
  %25 = load i64, ptr %arrayidx.i.7, align 8, !tbaa !147
  %conv.i.7 = trunc i64 %25 to i16
  %arrayidx2.i.7 = getelementptr inbounds i16, ptr %call1.i, i64 9991
  store i16 %conv.i.7, ptr %arrayidx2.i.7, align 2, !tbaa !13
  %arrayidx.i.8 = getelementptr inbounds i64, ptr %call.i, i64 9992
  %26 = load i64, ptr %arrayidx.i.8, align 8, !tbaa !147
  %conv.i.8 = trunc i64 %26 to i16
  %arrayidx2.i.8 = getelementptr inbounds i16, ptr %call1.i, i64 9992
  store i16 %conv.i.8, ptr %arrayidx2.i.8, align 2, !tbaa !13
  %arrayidx.i.9 = getelementptr inbounds i64, ptr %call.i, i64 9993
  %27 = load i64, ptr %arrayidx.i.9, align 8, !tbaa !147
  %conv.i.9 = trunc i64 %27 to i16
  %arrayidx2.i.9 = getelementptr inbounds i16, ptr %call1.i, i64 9993
  store i16 %conv.i.9, ptr %arrayidx2.i.9, align 2, !tbaa !13
  %arrayidx.i.10 = getelementptr inbounds i64, ptr %call.i, i64 9994
  %28 = load i64, ptr %arrayidx.i.10, align 8, !tbaa !147
  %conv.i.10 = trunc i64 %28 to i16
  %arrayidx2.i.10 = getelementptr inbounds i16, ptr %call1.i, i64 9994
  store i16 %conv.i.10, ptr %arrayidx2.i.10, align 2, !tbaa !13
  %arrayidx.i.11 = getelementptr inbounds i64, ptr %call.i, i64 9995
  %29 = load i64, ptr %arrayidx.i.11, align 8, !tbaa !147
  %conv.i.11 = trunc i64 %29 to i16
  %arrayidx2.i.11 = getelementptr inbounds i16, ptr %call1.i, i64 9995
  store i16 %conv.i.11, ptr %arrayidx2.i.11, align 2, !tbaa !13
  %arrayidx.i.12 = getelementptr inbounds i64, ptr %call.i, i64 9996
  %30 = load i64, ptr %arrayidx.i.12, align 8, !tbaa !147
  %conv.i.12 = trunc i64 %30 to i16
  %arrayidx2.i.12 = getelementptr inbounds i16, ptr %call1.i, i64 9996
  store i16 %conv.i.12, ptr %arrayidx2.i.12, align 2, !tbaa !13
  %arrayidx.i.13 = getelementptr inbounds i64, ptr %call.i, i64 9997
  %31 = load i64, ptr %arrayidx.i.13, align 8, !tbaa !147
  %conv.i.13 = trunc i64 %31 to i16
  %arrayidx2.i.13 = getelementptr inbounds i16, ptr %call1.i, i64 9997
  store i16 %conv.i.13, ptr %arrayidx2.i.13, align 2, !tbaa !13
  %arrayidx.i.14 = getelementptr inbounds i64, ptr %call.i, i64 9998
  %32 = load i64, ptr %arrayidx.i.14, align 8, !tbaa !147
  %conv.i.14 = trunc i64 %32 to i16
  %arrayidx2.i.14 = getelementptr inbounds i16, ptr %call1.i, i64 9998
  store i16 %conv.i.14, ptr %arrayidx2.i.14, align 2, !tbaa !13
  %arrayidx.i.15 = getelementptr inbounds i64, ptr %call.i, i64 9999
  %33 = load i64, ptr %arrayidx.i.15, align 8, !tbaa !147
  %conv.i.15 = trunc i64 %33 to i16
  %arrayidx2.i.15 = getelementptr inbounds i16, ptr %call1.i, i64 9999
  store i16 %conv.i.15, ptr %arrayidx2.i.15, align 2, !tbaa !13
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i80.i.1 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i16, ptr %arrayidx.i80.i.1, align 2, !tbaa !13
  %arrayidx.i81.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i16, ptr %arrayidx.i81.i.1, align 2, !tbaa !13
  %cmp18.not.i.1 = icmp eq i16 %34, %35
  br i1 %cmp18.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i80.i.2 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i16, ptr %arrayidx.i80.i.2, align 2, !tbaa !13
  %arrayidx.i81.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i16, ptr %arrayidx.i81.i.2, align 2, !tbaa !13
  %cmp18.not.i.2 = icmp eq i16 %36, %37
  br i1 %cmp18.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i80.i.3 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i16, ptr %arrayidx.i80.i.3, align 2, !tbaa !13
  %arrayidx.i81.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i16, ptr %arrayidx.i81.i.3, align 2, !tbaa !13
  %cmp18.not.i.3 = icmp eq i16 %38, %39
  br i1 %cmp18.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i80.i.4 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i16, ptr %arrayidx.i80.i.4, align 2, !tbaa !13
  %arrayidx.i81.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i16, ptr %arrayidx.i81.i.4, align 2, !tbaa !13
  %cmp18.not.i.4 = icmp eq i16 %40, %41
  br i1 %cmp18.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !209

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond46.preheader.i unwind label %lpad43.i

for.cond46.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not144148.i = icmp eq i64 %43, 0
  %cmp.not.i.not144.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not144148.i
  br i1 %cmp.not.i.not144.i, label %if.end.i.i, label %for.body50.i.preheader, !prof !42

for.body50.i.preheader:                           ; preds = %for.cond46.preheader.i
  %arrayidx.i8 = getelementptr inbounds i64, ptr %call.i, i64 9984
  %arrayidx.i8.1 = getelementptr inbounds i64, ptr %call.i, i64 9985
  %arrayidx.i8.2 = getelementptr inbounds i64, ptr %call.i, i64 9986
  %arrayidx.i8.3 = getelementptr inbounds i64, ptr %call.i, i64 9987
  %arrayidx.i8.4 = getelementptr inbounds i64, ptr %call.i, i64 9988
  %arrayidx.i8.5 = getelementptr inbounds i64, ptr %call.i, i64 9989
  %arrayidx.i8.6 = getelementptr inbounds i64, ptr %call.i, i64 9990
  %arrayidx.i8.7 = getelementptr inbounds i64, ptr %call.i, i64 9991
  %arrayidx.i8.8 = getelementptr inbounds i64, ptr %call.i, i64 9992
  %arrayidx.i8.9 = getelementptr inbounds i64, ptr %call.i, i64 9993
  %arrayidx.i8.10 = getelementptr inbounds i64, ptr %call.i, i64 9994
  %arrayidx.i8.11 = getelementptr inbounds i64, ptr %call.i, i64 9995
  %arrayidx.i8.12 = getelementptr inbounds i64, ptr %call.i, i64 9996
  %arrayidx.i8.13 = getelementptr inbounds i64, ptr %call.i, i64 9997
  %arrayidx.i8.14 = getelementptr inbounds i64, ptr %call.i, i64 9998
  %arrayidx.i8.15 = getelementptr inbounds i64, ptr %call.i, i64 9999
  br label %for.body50.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup63.i

ehcleanup61.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i115.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i80.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i16, ptr %arrayidx.i80.i, align 2, !tbaa !13
  %arrayidx.i81.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i16, ptr %arrayidx.i81.i, align 2, !tbaa !13
  %cmp18.not.i = icmp eq i16 %46, %47
  br i1 %cmp18.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i16 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i80.i.le = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i83.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont20.i unwind label %lpad19.i

invoke.cont20.i:                                  ; preds = %if.then.i
  %arrayidx.i84.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i64, ptr %arrayidx.i84.i, align 8, !tbaa !147
  %call.i85.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %48)
          to label %invoke.cont24.i unwind label %lpad19.i

invoke.cont24.i:                                  ; preds = %invoke.cont20.i
  %call1.i88.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i85.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont26.i unwind label %lpad19.i

invoke.cont26.i:                                  ; preds = %invoke.cont24.i
  %49 = load i16, ptr %arrayidx.i80.i.le, align 2, !tbaa !13
  %conv.i91.i = zext i16 %49 to i64
  %call.i92.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i85.i, i64 noundef %conv.i91.i)
          to label %invoke.cont30.i unwind label %lpad19.i

invoke.cont30.i:                                  ; preds = %invoke.cont26.i
  %call1.i95.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i92.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont32.i unwind label %lpad19.i

invoke.cont32.i:                                  ; preds = %invoke.cont30.i
  %conv.i98.i = zext i16 %.lcssa to i64
  %call.i99.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i92.i, i64 noundef %conv.i98.i)
          to label %invoke.cont36.i unwind label %lpad19.i

invoke.cont36.i:                                  ; preds = %invoke.cont32.i
  %call39.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i99.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont38.i unwind label %lpad19.i

invoke.cont38.i:                                  ; preds = %invoke.cont36.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad19.i:                                         ; preds = %invoke.cont36.i, %invoke.cont32.i, %invoke.cont30.i, %invoke.cont26.i, %invoke.cont24.i, %invoke.cont20.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

if.end.i.i:                                       ; preds = %for.body.i13, %for.cond46.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad43.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i103.i = icmp eq ptr %51, null
  br i1 %cmp.not.i103.i, label %_ZL28benchForTruncOrZextVecInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i104.i

delete.notnull.i.i104.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad43.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

for.body50.i:                                     ; preds = %for.body50.i.preheader, %for.body.i13
  %__begin1.sroa.0.0145.i = phi i64 [ %dec.i.i, %for.body.i13 ], [ %43, %for.body50.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body35

vector.body35:                                    ; preds = %vector.body35, %for.body50.i
  %index36 = phi i64 [ 0, %for.body50.i ], [ %index.next41, %vector.body35 ]
  %55 = getelementptr inbounds i64, ptr %call.i, i64 %index36
  %wide.load37 = load <16 x i64>, ptr %55, align 8, !tbaa !147
  %56 = getelementptr inbounds i64, ptr %55, i64 16
  %wide.load38 = load <16 x i64>, ptr %56, align 8, !tbaa !147
  %57 = getelementptr inbounds i64, ptr %55, i64 32
  %wide.load39 = load <16 x i64>, ptr %57, align 8, !tbaa !147
  %58 = getelementptr inbounds i64, ptr %55, i64 48
  %wide.load40 = load <16 x i64>, ptr %58, align 8, !tbaa !147
  %59 = trunc <16 x i64> %wide.load37 to <16 x i16>
  %60 = trunc <16 x i64> %wide.load38 to <16 x i16>
  %61 = trunc <16 x i64> %wide.load39 to <16 x i16>
  %62 = trunc <16 x i64> %wide.load40 to <16 x i16>
  %63 = getelementptr inbounds i16, ptr %54, i64 %index36
  store <16 x i16> %59, ptr %63, align 2, !tbaa !13
  %64 = getelementptr inbounds i16, ptr %63, i64 16
  store <16 x i16> %60, ptr %64, align 2, !tbaa !13
  %65 = getelementptr inbounds i16, ptr %63, i64 32
  store <16 x i16> %61, ptr %65, align 2, !tbaa !13
  %66 = getelementptr inbounds i16, ptr %63, i64 48
  store <16 x i16> %62, ptr %66, align 2, !tbaa !13
  %index.next41 = add nuw i64 %index36, 64
  %67 = icmp eq i64 %index.next41, 9984
  br i1 %67, label %for.body.i13, label %vector.body35, !llvm.loop !212

for.body.i13:                                     ; preds = %vector.body35
  %68 = load i64, ptr %arrayidx.i8, align 8, !tbaa !147
  %conv.i9 = trunc i64 %68 to i16
  %arrayidx2.i10 = getelementptr inbounds i16, ptr %54, i64 9984
  store i16 %conv.i9, ptr %arrayidx2.i10, align 2, !tbaa !13
  %69 = load i64, ptr %arrayidx.i8.1, align 8, !tbaa !147
  %conv.i9.1 = trunc i64 %69 to i16
  %arrayidx2.i10.1 = getelementptr inbounds i16, ptr %54, i64 9985
  store i16 %conv.i9.1, ptr %arrayidx2.i10.1, align 2, !tbaa !13
  %70 = load i64, ptr %arrayidx.i8.2, align 8, !tbaa !147
  %conv.i9.2 = trunc i64 %70 to i16
  %arrayidx2.i10.2 = getelementptr inbounds i16, ptr %54, i64 9986
  store i16 %conv.i9.2, ptr %arrayidx2.i10.2, align 2, !tbaa !13
  %71 = load i64, ptr %arrayidx.i8.3, align 8, !tbaa !147
  %conv.i9.3 = trunc i64 %71 to i16
  %arrayidx2.i10.3 = getelementptr inbounds i16, ptr %54, i64 9987
  store i16 %conv.i9.3, ptr %arrayidx2.i10.3, align 2, !tbaa !13
  %72 = load i64, ptr %arrayidx.i8.4, align 8, !tbaa !147
  %conv.i9.4 = trunc i64 %72 to i16
  %arrayidx2.i10.4 = getelementptr inbounds i16, ptr %54, i64 9988
  store i16 %conv.i9.4, ptr %arrayidx2.i10.4, align 2, !tbaa !13
  %73 = load i64, ptr %arrayidx.i8.5, align 8, !tbaa !147
  %conv.i9.5 = trunc i64 %73 to i16
  %arrayidx2.i10.5 = getelementptr inbounds i16, ptr %54, i64 9989
  store i16 %conv.i9.5, ptr %arrayidx2.i10.5, align 2, !tbaa !13
  %74 = load i64, ptr %arrayidx.i8.6, align 8, !tbaa !147
  %conv.i9.6 = trunc i64 %74 to i16
  %arrayidx2.i10.6 = getelementptr inbounds i16, ptr %54, i64 9990
  store i16 %conv.i9.6, ptr %arrayidx2.i10.6, align 2, !tbaa !13
  %75 = load i64, ptr %arrayidx.i8.7, align 8, !tbaa !147
  %conv.i9.7 = trunc i64 %75 to i16
  %arrayidx2.i10.7 = getelementptr inbounds i16, ptr %54, i64 9991
  store i16 %conv.i9.7, ptr %arrayidx2.i10.7, align 2, !tbaa !13
  %76 = load i64, ptr %arrayidx.i8.8, align 8, !tbaa !147
  %conv.i9.8 = trunc i64 %76 to i16
  %arrayidx2.i10.8 = getelementptr inbounds i16, ptr %54, i64 9992
  store i16 %conv.i9.8, ptr %arrayidx2.i10.8, align 2, !tbaa !13
  %77 = load i64, ptr %arrayidx.i8.9, align 8, !tbaa !147
  %conv.i9.9 = trunc i64 %77 to i16
  %arrayidx2.i10.9 = getelementptr inbounds i16, ptr %54, i64 9993
  store i16 %conv.i9.9, ptr %arrayidx2.i10.9, align 2, !tbaa !13
  %78 = load i64, ptr %arrayidx.i8.10, align 8, !tbaa !147
  %conv.i9.10 = trunc i64 %78 to i16
  %arrayidx2.i10.10 = getelementptr inbounds i16, ptr %54, i64 9994
  store i16 %conv.i9.10, ptr %arrayidx2.i10.10, align 2, !tbaa !13
  %79 = load i64, ptr %arrayidx.i8.11, align 8, !tbaa !147
  %conv.i9.11 = trunc i64 %79 to i16
  %arrayidx2.i10.11 = getelementptr inbounds i16, ptr %54, i64 9995
  store i16 %conv.i9.11, ptr %arrayidx2.i10.11, align 2, !tbaa !13
  %80 = load i64, ptr %arrayidx.i8.12, align 8, !tbaa !147
  %conv.i9.12 = trunc i64 %80 to i16
  %arrayidx2.i10.12 = getelementptr inbounds i16, ptr %54, i64 9996
  store i16 %conv.i9.12, ptr %arrayidx2.i10.12, align 2, !tbaa !13
  %81 = load i64, ptr %arrayidx.i8.13, align 8, !tbaa !147
  %conv.i9.13 = trunc i64 %81 to i16
  %arrayidx2.i10.13 = getelementptr inbounds i16, ptr %54, i64 9997
  store i16 %conv.i9.13, ptr %arrayidx2.i10.13, align 2, !tbaa !13
  %82 = load i64, ptr %arrayidx.i8.14, align 8, !tbaa !147
  %conv.i9.14 = trunc i64 %82 to i16
  %arrayidx2.i10.14 = getelementptr inbounds i16, ptr %54, i64 9998
  store i16 %conv.i9.14, ptr %arrayidx2.i10.14, align 2, !tbaa !13
  %83 = load i64, ptr %arrayidx.i8.15, align 8, !tbaa !147
  %conv.i9.15 = trunc i64 %83 to i16
  %arrayidx2.i10.15 = getelementptr inbounds i16, ptr %54, i64 9999
  store i16 %conv.i9.15, ptr %arrayidx2.i10.15, align 2, !tbaa !13
  %dec.i.i = add i64 %__begin1.sroa.0.0145.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body50.i, !prof !42

ehcleanup61.i:                                    ; preds = %lpad43.i, %lpad19.i, %lpad5.loopexit.i
  %.pn134.i = phi { ptr, i32 } [ %50, %lpad19.i ], [ %52, %lpad43.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i114.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i114.i, label %ehcleanup63.i, label %delete.notnull.i.i115.i

delete.notnull.i.i115.i:                          ; preds = %ehcleanup61.i, %ehcleanup61.thread.i
  %.pn134.pn140.i = phi { ptr, i32 } [ %45, %ehcleanup61.thread.i ], [ %.pn134.i, %ehcleanup61.i ]
  %84 = phi ptr [ %call1.i, %ehcleanup61.thread.i ], [ %.pr.i, %ehcleanup61.i ]
  call void @_ZdaPv(ptr noundef nonnull %84) #13
  br label %ehcleanup63.i

ehcleanup63.i:                                    ; preds = %delete.notnull.i.i115.i, %ehcleanup61.i, %lpad.i
  %.pn134.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn134.i, %ehcleanup61.i ], [ %.pn134.pn140.i, %delete.notnull.i.i115.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn134.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i104.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z54benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont3.i unwind label %ehcleanup61.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i75.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i75.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  br label %for.body.i79.i

for.body.i79.i:                                   ; preds = %for.body.i79.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i76.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i77.i.4, %for.body.i79.i ]
  %arrayidx.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i76.i
  %0 = load i64, ptr %arrayidx.i.i, align 8, !tbaa !147
  %conv.i.i = trunc i64 %0 to i16
  %arrayidx2.i.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i76.i
  store i16 %conv.i.i, ptr %arrayidx2.i.i, align 2, !tbaa !13
  %indvars.iv.next.i77.i = add nuw nsw i64 %indvars.iv.i76.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i77.i
  %1 = load i64, ptr %arrayidx.i.i.1, align 8, !tbaa !147
  %conv.i.i.1 = trunc i64 %1 to i16
  %arrayidx2.i.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i
  store i16 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 2, !tbaa !13
  %indvars.iv.next.i77.i.1 = add nuw nsw i64 %indvars.iv.i76.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i77.i.1
  %2 = load i64, ptr %arrayidx.i.i.2, align 8, !tbaa !147
  %conv.i.i.2 = trunc i64 %2 to i16
  %arrayidx2.i.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.1
  store i16 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 2, !tbaa !13
  %indvars.iv.next.i77.i.2 = add nuw nsw i64 %indvars.iv.i76.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i77.i.2
  %3 = load i64, ptr %arrayidx.i.i.3, align 8, !tbaa !147
  %conv.i.i.3 = trunc i64 %3 to i16
  %arrayidx2.i.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.2
  store i16 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 2, !tbaa !13
  %indvars.iv.next.i77.i.3 = add nuw nsw i64 %indvars.iv.i76.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i77.i.3
  %4 = load i64, ptr %arrayidx.i.i.4, align 8, !tbaa !147
  %conv.i.i.4 = trunc i64 %4 to i16
  %arrayidx2.i.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.3
  store i16 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 2, !tbaa !13
  %indvars.iv.next.i77.i.4 = add nuw nsw i64 %indvars.iv.i76.i, 5
  %exitcond.not.i78.i.4 = icmp eq i64 %indvars.iv.next.i77.i.4, 10000
  br i1 %exitcond.not.i78.i.4, label %vector.body, label %for.body.i79.i, !llvm.loop !207

vector.body:                                      ; preds = %for.body.i79.i, %vector.body
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %for.body.i79.i ]
  %5 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <2 x i64>, ptr %5, align 8, !tbaa !147
  %6 = getelementptr inbounds i64, ptr %5, i64 2
  %wide.load27 = load <2 x i64>, ptr %6, align 8, !tbaa !147
  %7 = trunc <2 x i64> %wide.load to <2 x i16>
  %8 = trunc <2 x i64> %wide.load27 to <2 x i16>
  %9 = getelementptr inbounds i16, ptr %call1.i, i64 %index
  store <2 x i16> %7, ptr %9, align 2, !tbaa !13
  %10 = getelementptr inbounds i16, ptr %9, i64 2
  store <2 x i16> %8, ptr %10, align 2, !tbaa !13
  %index.next = or i64 %index, 4
  %11 = getelementptr inbounds i64, ptr %call.i, i64 %index.next
  %wide.load.1 = load <2 x i64>, ptr %11, align 8, !tbaa !147
  %12 = getelementptr inbounds i64, ptr %11, i64 2
  %wide.load27.1 = load <2 x i64>, ptr %12, align 8, !tbaa !147
  %13 = trunc <2 x i64> %wide.load.1 to <2 x i16>
  %14 = trunc <2 x i64> %wide.load27.1 to <2 x i16>
  %15 = getelementptr inbounds i16, ptr %call1.i, i64 %index.next
  store <2 x i16> %13, ptr %15, align 2, !tbaa !13
  %16 = getelementptr inbounds i16, ptr %15, i64 2
  store <2 x i16> %14, ptr %16, align 2, !tbaa !13
  %index.next.1 = add nuw nsw i64 %index, 8
  %17 = icmp eq i64 %index.next.1, 10000
  br i1 %17, label %for.body.i, label %vector.body, !llvm.loop !213

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i80.i.1 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i
  %18 = load i16, ptr %arrayidx.i80.i.1, align 2, !tbaa !13
  %arrayidx.i81.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i
  %19 = load i16, ptr %arrayidx.i81.i.1, align 2, !tbaa !13
  %cmp18.not.i.1 = icmp eq i16 %18, %19
  br i1 %cmp18.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i80.i.2 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.1
  %20 = load i16, ptr %arrayidx.i80.i.2, align 2, !tbaa !13
  %arrayidx.i81.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.1
  %21 = load i16, ptr %arrayidx.i81.i.2, align 2, !tbaa !13
  %cmp18.not.i.2 = icmp eq i16 %20, %21
  br i1 %cmp18.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i80.i.3 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.2
  %22 = load i16, ptr %arrayidx.i80.i.3, align 2, !tbaa !13
  %arrayidx.i81.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.2
  %23 = load i16, ptr %arrayidx.i81.i.3, align 2, !tbaa !13
  %cmp18.not.i.3 = icmp eq i16 %22, %23
  br i1 %cmp18.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i80.i.4 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.3
  %24 = load i16, ptr %arrayidx.i80.i.4, align 2, !tbaa !13
  %arrayidx.i81.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.3
  %25 = load i16, ptr %arrayidx.i81.i.4, align 2, !tbaa !13
  %cmp18.not.i.4 = icmp eq i16 %24, %25
  br i1 %cmp18.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !209

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %26 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %27 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond46.preheader.i unwind label %lpad43.i

for.cond46.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %26, 0
  %cmp.not.i.not144148.i = icmp eq i64 %27, 0
  %cmp.not.i.not144.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not144148.i
  br i1 %cmp.not.i.not144.i, label %if.end.i.i, label %for.body50.i, !prof !42

lpad.i:                                           ; preds = %entry
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup63.i

ehcleanup61.thread.i:                             ; preds = %invoke.cont.i
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i115.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

for.body.i:                                       ; preds = %vector.body, %for.cond.i.4
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.4, %for.cond.i.4 ], [ 0, %vector.body ]
  %arrayidx.i80.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i
  %30 = load i16, ptr %arrayidx.i80.i, align 2, !tbaa !13
  %arrayidx.i81.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i
  %31 = load i16, ptr %arrayidx.i81.i, align 2, !tbaa !13
  %cmp18.not.i = icmp eq i16 %30, %31
  br i1 %cmp18.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i16 [ %31, %for.body.i ], [ %19, %for.cond.i ], [ %21, %for.cond.i.1 ], [ %23, %for.cond.i.2 ], [ %25, %for.cond.i.3 ]
  %arrayidx.i80.i.le = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i83.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont20.i unwind label %lpad19.i

invoke.cont20.i:                                  ; preds = %if.then.i
  %arrayidx.i84.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.lcssa
  %32 = load i64, ptr %arrayidx.i84.i, align 8, !tbaa !147
  %call.i85.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %32)
          to label %invoke.cont24.i unwind label %lpad19.i

invoke.cont24.i:                                  ; preds = %invoke.cont20.i
  %call1.i88.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i85.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont26.i unwind label %lpad19.i

invoke.cont26.i:                                  ; preds = %invoke.cont24.i
  %33 = load i16, ptr %arrayidx.i80.i.le, align 2, !tbaa !13
  %conv.i91.i = zext i16 %33 to i64
  %call.i92.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i85.i, i64 noundef %conv.i91.i)
          to label %invoke.cont30.i unwind label %lpad19.i

invoke.cont30.i:                                  ; preds = %invoke.cont26.i
  %call1.i95.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i92.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont32.i unwind label %lpad19.i

invoke.cont32.i:                                  ; preds = %invoke.cont30.i
  %conv.i98.i = zext i16 %.lcssa to i64
  %call.i99.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i92.i, i64 noundef %conv.i98.i)
          to label %invoke.cont36.i unwind label %lpad19.i

invoke.cont36.i:                                  ; preds = %invoke.cont32.i
  %call39.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i99.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont38.i unwind label %lpad19.i

invoke.cont38.i:                                  ; preds = %invoke.cont36.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad19.i:                                         ; preds = %invoke.cont36.i, %invoke.cont32.i, %invoke.cont30.i, %invoke.cont26.i, %invoke.cont24.i, %invoke.cont20.i, %if.then.i
  %34 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

if.end.i.i:                                       ; preds = %invoke.cont54.i, %for.cond46.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad43.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %35 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i103.i = icmp eq ptr %35, null
  br i1 %cmp.not.i103.i, label %_ZL28benchForTruncOrZextVecInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i104.i

delete.notnull.i.i104.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %35) #13
  br label %_ZL28benchForTruncOrZextVecInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad43.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

for.body50.i:                                     ; preds = %for.cond46.preheader.i, %invoke.cont54.i
  %__begin1.sroa.0.0145.i = phi i64 [ %dec.i.i, %invoke.cont54.i ], [ %27, %for.cond46.preheader.i ]
  %37 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %37) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %38 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body33

vector.body33:                                    ; preds = %vector.body33, %for.body50.i
  %index34 = phi i64 [ 0, %for.body50.i ], [ %index.next37.1, %vector.body33 ]
  %39 = getelementptr inbounds i64, ptr %call.i, i64 %index34
  %wide.load35 = load <2 x i64>, ptr %39, align 8, !tbaa !147
  %40 = getelementptr inbounds i64, ptr %39, i64 2
  %wide.load36 = load <2 x i64>, ptr %40, align 8, !tbaa !147
  %41 = trunc <2 x i64> %wide.load35 to <2 x i16>
  %42 = trunc <2 x i64> %wide.load36 to <2 x i16>
  %43 = getelementptr inbounds i16, ptr %38, i64 %index34
  store <2 x i16> %41, ptr %43, align 2, !tbaa !13
  %44 = getelementptr inbounds i16, ptr %43, i64 2
  store <2 x i16> %42, ptr %44, align 2, !tbaa !13
  %index.next37 = or i64 %index34, 4
  %45 = getelementptr inbounds i64, ptr %call.i, i64 %index.next37
  %wide.load35.1 = load <2 x i64>, ptr %45, align 8, !tbaa !147
  %46 = getelementptr inbounds i64, ptr %45, i64 2
  %wide.load36.1 = load <2 x i64>, ptr %46, align 8, !tbaa !147
  %47 = trunc <2 x i64> %wide.load35.1 to <2 x i16>
  %48 = trunc <2 x i64> %wide.load36.1 to <2 x i16>
  %49 = getelementptr inbounds i16, ptr %38, i64 %index.next37
  store <2 x i16> %47, ptr %49, align 2, !tbaa !13
  %50 = getelementptr inbounds i16, ptr %49, i64 2
  store <2 x i16> %48, ptr %50, align 2, !tbaa !13
  %index.next37.1 = add nuw nsw i64 %index34, 8
  %51 = icmp eq i64 %index.next37.1, 10000
  br i1 %51, label %invoke.cont54.i, label %vector.body33, !llvm.loop !214

invoke.cont54.i:                                  ; preds = %vector.body33
  %dec.i.i = add i64 %__begin1.sroa.0.0145.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body50.i, !prof !42

ehcleanup61.i:                                    ; preds = %lpad43.i, %lpad19.i, %lpad5.loopexit.i
  %.pn134.i = phi { ptr, i32 } [ %34, %lpad19.i ], [ %36, %lpad43.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i114.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i114.i, label %ehcleanup63.i, label %delete.notnull.i.i115.i

delete.notnull.i.i115.i:                          ; preds = %ehcleanup61.i, %ehcleanup61.thread.i
  %.pn134.pn140.i = phi { ptr, i32 } [ %29, %ehcleanup61.thread.i ], [ %.pn134.i, %ehcleanup61.i ]
  %52 = phi ptr [ %call1.i, %ehcleanup61.thread.i ], [ %.pr.i, %ehcleanup61.i ]
  call void @_ZdaPv(ptr noundef nonnull %52) #13
  br label %ehcleanup63.i

ehcleanup63.i:                                    ; preds = %delete.notnull.i.i115.i, %ehcleanup61.i, %lpad.i
  %.pn134.pn.pn.i = phi { ptr, i32 } [ %28, %lpad.i ], [ %.pn134.i, %ehcleanup61.i ], [ %.pn134.pn140.i, %delete.notnull.i.i115.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn134.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i104.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution", align 2
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i31.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  store i16 0, ptr %distrib.i32.i, align 2, !tbaa !9
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i33.i, align 2, !tbaa !12
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i34.i
  store i16 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 2, !tbaa !13
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %arrayidx.i = getelementptr inbounds i64, ptr %call.i, i64 9984
  %arrayidx.i.1 = getelementptr inbounds i64, ptr %call.i, i64 9985
  %arrayidx.i.2 = getelementptr inbounds i64, ptr %call.i, i64 9986
  %arrayidx.i.3 = getelementptr inbounds i64, ptr %call.i, i64 9987
  %arrayidx.i.4 = getelementptr inbounds i64, ptr %call.i, i64 9988
  %arrayidx.i.5 = getelementptr inbounds i64, ptr %call.i, i64 9989
  %arrayidx.i.6 = getelementptr inbounds i64, ptr %call.i, i64 9990
  %arrayidx.i.7 = getelementptr inbounds i64, ptr %call.i, i64 9991
  %arrayidx.i.8 = getelementptr inbounds i64, ptr %call.i, i64 9992
  %arrayidx.i.9 = getelementptr inbounds i64, ptr %call.i, i64 9993
  %arrayidx.i.10 = getelementptr inbounds i64, ptr %call.i, i64 9994
  %arrayidx.i.11 = getelementptr inbounds i64, ptr %call.i, i64 9995
  %arrayidx.i.12 = getelementptr inbounds i64, ptr %call.i, i64 9996
  %arrayidx.i.13 = getelementptr inbounds i64, ptr %call.i, i64 9997
  %arrayidx.i.14 = getelementptr inbounds i64, ptr %call.i, i64 9998
  %arrayidx.i.15 = getelementptr inbounds i64, ptr %call.i, i64 9999
  br label %for.body.i

if.end.i.i:                                       ; preds = %for.body.i1, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i1
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %for.body.i1 ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next, %vector.body ]
  %6 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <8 x i64>, ptr %6, align 8, !tbaa !147
  %7 = getelementptr inbounds i64, ptr %6, i64 8
  %wide.load5 = load <8 x i64>, ptr %7, align 8, !tbaa !147
  %8 = getelementptr inbounds i64, ptr %6, i64 16
  %wide.load6 = load <8 x i64>, ptr %8, align 8, !tbaa !147
  %9 = getelementptr inbounds i64, ptr %6, i64 24
  %wide.load7 = load <8 x i64>, ptr %9, align 8, !tbaa !147
  %10 = getelementptr inbounds i16, ptr %5, i64 %index
  %wide.load8 = load <8 x i16>, ptr %10, align 2, !tbaa !13
  %11 = getelementptr inbounds i16, ptr %10, i64 8
  %wide.load9 = load <8 x i16>, ptr %11, align 2, !tbaa !13
  %12 = getelementptr inbounds i16, ptr %10, i64 16
  %wide.load10 = load <8 x i16>, ptr %12, align 2, !tbaa !13
  %13 = getelementptr inbounds i16, ptr %10, i64 24
  %wide.load11 = load <8 x i16>, ptr %13, align 2, !tbaa !13
  %14 = trunc <8 x i64> %wide.load to <8 x i16>
  %15 = trunc <8 x i64> %wide.load5 to <8 x i16>
  %16 = trunc <8 x i64> %wide.load6 to <8 x i16>
  %17 = trunc <8 x i64> %wide.load7 to <8 x i16>
  %18 = add <8 x i16> %wide.load8, %14
  %19 = add <8 x i16> %wide.load9, %15
  %20 = add <8 x i16> %wide.load10, %16
  %21 = add <8 x i16> %wide.load11, %17
  store <8 x i16> %18, ptr %10, align 2, !tbaa !13
  store <8 x i16> %19, ptr %11, align 2, !tbaa !13
  store <8 x i16> %20, ptr %12, align 2, !tbaa !13
  store <8 x i16> %21, ptr %13, align 2, !tbaa !13
  %index.next = add nuw i64 %index, 32
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1, label %vector.body, !llvm.loop !215

for.body.i1:                                      ; preds = %vector.body
  %23 = load i64, ptr %arrayidx.i, align 8, !tbaa !147
  %arrayidx2.i = getelementptr inbounds i16, ptr %5, i64 9984
  %24 = load i16, ptr %arrayidx2.i, align 2, !tbaa !13
  %25 = trunc i64 %23 to i16
  %conv3.i = add i16 %24, %25
  store i16 %conv3.i, ptr %arrayidx2.i, align 2, !tbaa !13
  %26 = load i64, ptr %arrayidx.i.1, align 8, !tbaa !147
  %arrayidx2.i.1 = getelementptr inbounds i16, ptr %5, i64 9985
  %27 = load i16, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %28 = trunc i64 %26 to i16
  %conv3.i.1 = add i16 %27, %28
  store i16 %conv3.i.1, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %29 = load i64, ptr %arrayidx.i.2, align 8, !tbaa !147
  %arrayidx2.i.2 = getelementptr inbounds i16, ptr %5, i64 9986
  %30 = load i16, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %31 = trunc i64 %29 to i16
  %conv3.i.2 = add i16 %30, %31
  store i16 %conv3.i.2, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %32 = load i64, ptr %arrayidx.i.3, align 8, !tbaa !147
  %arrayidx2.i.3 = getelementptr inbounds i16, ptr %5, i64 9987
  %33 = load i16, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %34 = trunc i64 %32 to i16
  %conv3.i.3 = add i16 %33, %34
  store i16 %conv3.i.3, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %35 = load i64, ptr %arrayidx.i.4, align 8, !tbaa !147
  %arrayidx2.i.4 = getelementptr inbounds i16, ptr %5, i64 9988
  %36 = load i16, ptr %arrayidx2.i.4, align 2, !tbaa !13
  %37 = trunc i64 %35 to i16
  %conv3.i.4 = add i16 %36, %37
  store i16 %conv3.i.4, ptr %arrayidx2.i.4, align 2, !tbaa !13
  %38 = load i64, ptr %arrayidx.i.5, align 8, !tbaa !147
  %arrayidx2.i.5 = getelementptr inbounds i16, ptr %5, i64 9989
  %39 = load i16, ptr %arrayidx2.i.5, align 2, !tbaa !13
  %40 = trunc i64 %38 to i16
  %conv3.i.5 = add i16 %39, %40
  store i16 %conv3.i.5, ptr %arrayidx2.i.5, align 2, !tbaa !13
  %41 = load i64, ptr %arrayidx.i.6, align 8, !tbaa !147
  %arrayidx2.i.6 = getelementptr inbounds i16, ptr %5, i64 9990
  %42 = load i16, ptr %arrayidx2.i.6, align 2, !tbaa !13
  %43 = trunc i64 %41 to i16
  %conv3.i.6 = add i16 %42, %43
  store i16 %conv3.i.6, ptr %arrayidx2.i.6, align 2, !tbaa !13
  %44 = load i64, ptr %arrayidx.i.7, align 8, !tbaa !147
  %arrayidx2.i.7 = getelementptr inbounds i16, ptr %5, i64 9991
  %45 = load i16, ptr %arrayidx2.i.7, align 2, !tbaa !13
  %46 = trunc i64 %44 to i16
  %conv3.i.7 = add i16 %45, %46
  store i16 %conv3.i.7, ptr %arrayidx2.i.7, align 2, !tbaa !13
  %47 = load i64, ptr %arrayidx.i.8, align 8, !tbaa !147
  %arrayidx2.i.8 = getelementptr inbounds i16, ptr %5, i64 9992
  %48 = load i16, ptr %arrayidx2.i.8, align 2, !tbaa !13
  %49 = trunc i64 %47 to i16
  %conv3.i.8 = add i16 %48, %49
  store i16 %conv3.i.8, ptr %arrayidx2.i.8, align 2, !tbaa !13
  %50 = load i64, ptr %arrayidx.i.9, align 8, !tbaa !147
  %arrayidx2.i.9 = getelementptr inbounds i16, ptr %5, i64 9993
  %51 = load i16, ptr %arrayidx2.i.9, align 2, !tbaa !13
  %52 = trunc i64 %50 to i16
  %conv3.i.9 = add i16 %51, %52
  store i16 %conv3.i.9, ptr %arrayidx2.i.9, align 2, !tbaa !13
  %53 = load i64, ptr %arrayidx.i.10, align 8, !tbaa !147
  %arrayidx2.i.10 = getelementptr inbounds i16, ptr %5, i64 9994
  %54 = load i16, ptr %arrayidx2.i.10, align 2, !tbaa !13
  %55 = trunc i64 %53 to i16
  %conv3.i.10 = add i16 %54, %55
  store i16 %conv3.i.10, ptr %arrayidx2.i.10, align 2, !tbaa !13
  %56 = load i64, ptr %arrayidx.i.11, align 8, !tbaa !147
  %arrayidx2.i.11 = getelementptr inbounds i16, ptr %5, i64 9995
  %57 = load i16, ptr %arrayidx2.i.11, align 2, !tbaa !13
  %58 = trunc i64 %56 to i16
  %conv3.i.11 = add i16 %57, %58
  store i16 %conv3.i.11, ptr %arrayidx2.i.11, align 2, !tbaa !13
  %59 = load i64, ptr %arrayidx.i.12, align 8, !tbaa !147
  %arrayidx2.i.12 = getelementptr inbounds i16, ptr %5, i64 9996
  %60 = load i16, ptr %arrayidx2.i.12, align 2, !tbaa !13
  %61 = trunc i64 %59 to i16
  %conv3.i.12 = add i16 %60, %61
  store i16 %conv3.i.12, ptr %arrayidx2.i.12, align 2, !tbaa !13
  %62 = load i64, ptr %arrayidx.i.13, align 8, !tbaa !147
  %arrayidx2.i.13 = getelementptr inbounds i16, ptr %5, i64 9997
  %63 = load i16, ptr %arrayidx2.i.13, align 2, !tbaa !13
  %64 = trunc i64 %62 to i16
  %conv3.i.13 = add i16 %63, %64
  store i16 %conv3.i.13, ptr %arrayidx2.i.13, align 2, !tbaa !13
  %65 = load i64, ptr %arrayidx.i.14, align 8, !tbaa !147
  %arrayidx2.i.14 = getelementptr inbounds i16, ptr %5, i64 9998
  %66 = load i16, ptr %arrayidx2.i.14, align 2, !tbaa !13
  %67 = trunc i64 %65 to i16
  %conv3.i.14 = add i16 %66, %67
  store i16 %conv3.i.14, ptr %arrayidx2.i.14, align 2, !tbaa !13
  %68 = load i64, ptr %arrayidx.i.15, align 8, !tbaa !147
  %arrayidx2.i.15 = getelementptr inbounds i16, ptr %5, i64 9999
  %69 = load i16, ptr %arrayidx2.i.15, align 2, !tbaa !13
  %70 = trunc i64 %68 to i16
  %conv3.i.15 = add i16 %69, %70
  store i16 %conv3.i.15, ptr %arrayidx2.i.15, align 2, !tbaa !13
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %71 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %71, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %72 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %71, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution", align 2
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i31.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  store i16 0, ptr %distrib.i32.i, align 2, !tbaa !9
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i33.i, align 2, !tbaa !12
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i34.i
  store i16 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 2, !tbaa !13
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %arrayidx.i = getelementptr inbounds i64, ptr %call.i, i64 9984
  %arrayidx.i.1 = getelementptr inbounds i64, ptr %call.i, i64 9985
  %arrayidx.i.2 = getelementptr inbounds i64, ptr %call.i, i64 9986
  %arrayidx.i.3 = getelementptr inbounds i64, ptr %call.i, i64 9987
  %arrayidx.i.4 = getelementptr inbounds i64, ptr %call.i, i64 9988
  %arrayidx.i.5 = getelementptr inbounds i64, ptr %call.i, i64 9989
  %arrayidx.i.6 = getelementptr inbounds i64, ptr %call.i, i64 9990
  %arrayidx.i.7 = getelementptr inbounds i64, ptr %call.i, i64 9991
  %arrayidx.i.8 = getelementptr inbounds i64, ptr %call.i, i64 9992
  %arrayidx.i.9 = getelementptr inbounds i64, ptr %call.i, i64 9993
  %arrayidx.i.10 = getelementptr inbounds i64, ptr %call.i, i64 9994
  %arrayidx.i.11 = getelementptr inbounds i64, ptr %call.i, i64 9995
  %arrayidx.i.12 = getelementptr inbounds i64, ptr %call.i, i64 9996
  %arrayidx.i.13 = getelementptr inbounds i64, ptr %call.i, i64 9997
  %arrayidx.i.14 = getelementptr inbounds i64, ptr %call.i, i64 9998
  %arrayidx.i.15 = getelementptr inbounds i64, ptr %call.i, i64 9999
  br label %for.body.i

if.end.i.i:                                       ; preds = %for.body.i1, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i1
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %for.body.i1 ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next, %vector.body ]
  %6 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <16 x i64>, ptr %6, align 8, !tbaa !147
  %7 = getelementptr inbounds i64, ptr %6, i64 16
  %wide.load5 = load <16 x i64>, ptr %7, align 8, !tbaa !147
  %8 = getelementptr inbounds i64, ptr %6, i64 32
  %wide.load6 = load <16 x i64>, ptr %8, align 8, !tbaa !147
  %9 = getelementptr inbounds i64, ptr %6, i64 48
  %wide.load7 = load <16 x i64>, ptr %9, align 8, !tbaa !147
  %10 = getelementptr inbounds i16, ptr %5, i64 %index
  %wide.load8 = load <16 x i16>, ptr %10, align 2, !tbaa !13
  %11 = getelementptr inbounds i16, ptr %10, i64 16
  %wide.load9 = load <16 x i16>, ptr %11, align 2, !tbaa !13
  %12 = getelementptr inbounds i16, ptr %10, i64 32
  %wide.load10 = load <16 x i16>, ptr %12, align 2, !tbaa !13
  %13 = getelementptr inbounds i16, ptr %10, i64 48
  %wide.load11 = load <16 x i16>, ptr %13, align 2, !tbaa !13
  %14 = trunc <16 x i64> %wide.load to <16 x i16>
  %15 = trunc <16 x i64> %wide.load5 to <16 x i16>
  %16 = trunc <16 x i64> %wide.load6 to <16 x i16>
  %17 = trunc <16 x i64> %wide.load7 to <16 x i16>
  %18 = add <16 x i16> %wide.load8, %14
  %19 = add <16 x i16> %wide.load9, %15
  %20 = add <16 x i16> %wide.load10, %16
  %21 = add <16 x i16> %wide.load11, %17
  store <16 x i16> %18, ptr %10, align 2, !tbaa !13
  store <16 x i16> %19, ptr %11, align 2, !tbaa !13
  store <16 x i16> %20, ptr %12, align 2, !tbaa !13
  store <16 x i16> %21, ptr %13, align 2, !tbaa !13
  %index.next = add nuw i64 %index, 64
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1, label %vector.body, !llvm.loop !216

for.body.i1:                                      ; preds = %vector.body
  %23 = load i64, ptr %arrayidx.i, align 8, !tbaa !147
  %arrayidx2.i = getelementptr inbounds i16, ptr %5, i64 9984
  %24 = load i16, ptr %arrayidx2.i, align 2, !tbaa !13
  %25 = trunc i64 %23 to i16
  %conv3.i = add i16 %24, %25
  store i16 %conv3.i, ptr %arrayidx2.i, align 2, !tbaa !13
  %26 = load i64, ptr %arrayidx.i.1, align 8, !tbaa !147
  %arrayidx2.i.1 = getelementptr inbounds i16, ptr %5, i64 9985
  %27 = load i16, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %28 = trunc i64 %26 to i16
  %conv3.i.1 = add i16 %27, %28
  store i16 %conv3.i.1, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %29 = load i64, ptr %arrayidx.i.2, align 8, !tbaa !147
  %arrayidx2.i.2 = getelementptr inbounds i16, ptr %5, i64 9986
  %30 = load i16, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %31 = trunc i64 %29 to i16
  %conv3.i.2 = add i16 %30, %31
  store i16 %conv3.i.2, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %32 = load i64, ptr %arrayidx.i.3, align 8, !tbaa !147
  %arrayidx2.i.3 = getelementptr inbounds i16, ptr %5, i64 9987
  %33 = load i16, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %34 = trunc i64 %32 to i16
  %conv3.i.3 = add i16 %33, %34
  store i16 %conv3.i.3, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %35 = load i64, ptr %arrayidx.i.4, align 8, !tbaa !147
  %arrayidx2.i.4 = getelementptr inbounds i16, ptr %5, i64 9988
  %36 = load i16, ptr %arrayidx2.i.4, align 2, !tbaa !13
  %37 = trunc i64 %35 to i16
  %conv3.i.4 = add i16 %36, %37
  store i16 %conv3.i.4, ptr %arrayidx2.i.4, align 2, !tbaa !13
  %38 = load i64, ptr %arrayidx.i.5, align 8, !tbaa !147
  %arrayidx2.i.5 = getelementptr inbounds i16, ptr %5, i64 9989
  %39 = load i16, ptr %arrayidx2.i.5, align 2, !tbaa !13
  %40 = trunc i64 %38 to i16
  %conv3.i.5 = add i16 %39, %40
  store i16 %conv3.i.5, ptr %arrayidx2.i.5, align 2, !tbaa !13
  %41 = load i64, ptr %arrayidx.i.6, align 8, !tbaa !147
  %arrayidx2.i.6 = getelementptr inbounds i16, ptr %5, i64 9990
  %42 = load i16, ptr %arrayidx2.i.6, align 2, !tbaa !13
  %43 = trunc i64 %41 to i16
  %conv3.i.6 = add i16 %42, %43
  store i16 %conv3.i.6, ptr %arrayidx2.i.6, align 2, !tbaa !13
  %44 = load i64, ptr %arrayidx.i.7, align 8, !tbaa !147
  %arrayidx2.i.7 = getelementptr inbounds i16, ptr %5, i64 9991
  %45 = load i16, ptr %arrayidx2.i.7, align 2, !tbaa !13
  %46 = trunc i64 %44 to i16
  %conv3.i.7 = add i16 %45, %46
  store i16 %conv3.i.7, ptr %arrayidx2.i.7, align 2, !tbaa !13
  %47 = load i64, ptr %arrayidx.i.8, align 8, !tbaa !147
  %arrayidx2.i.8 = getelementptr inbounds i16, ptr %5, i64 9992
  %48 = load i16, ptr %arrayidx2.i.8, align 2, !tbaa !13
  %49 = trunc i64 %47 to i16
  %conv3.i.8 = add i16 %48, %49
  store i16 %conv3.i.8, ptr %arrayidx2.i.8, align 2, !tbaa !13
  %50 = load i64, ptr %arrayidx.i.9, align 8, !tbaa !147
  %arrayidx2.i.9 = getelementptr inbounds i16, ptr %5, i64 9993
  %51 = load i16, ptr %arrayidx2.i.9, align 2, !tbaa !13
  %52 = trunc i64 %50 to i16
  %conv3.i.9 = add i16 %51, %52
  store i16 %conv3.i.9, ptr %arrayidx2.i.9, align 2, !tbaa !13
  %53 = load i64, ptr %arrayidx.i.10, align 8, !tbaa !147
  %arrayidx2.i.10 = getelementptr inbounds i16, ptr %5, i64 9994
  %54 = load i16, ptr %arrayidx2.i.10, align 2, !tbaa !13
  %55 = trunc i64 %53 to i16
  %conv3.i.10 = add i16 %54, %55
  store i16 %conv3.i.10, ptr %arrayidx2.i.10, align 2, !tbaa !13
  %56 = load i64, ptr %arrayidx.i.11, align 8, !tbaa !147
  %arrayidx2.i.11 = getelementptr inbounds i16, ptr %5, i64 9995
  %57 = load i16, ptr %arrayidx2.i.11, align 2, !tbaa !13
  %58 = trunc i64 %56 to i16
  %conv3.i.11 = add i16 %57, %58
  store i16 %conv3.i.11, ptr %arrayidx2.i.11, align 2, !tbaa !13
  %59 = load i64, ptr %arrayidx.i.12, align 8, !tbaa !147
  %arrayidx2.i.12 = getelementptr inbounds i16, ptr %5, i64 9996
  %60 = load i16, ptr %arrayidx2.i.12, align 2, !tbaa !13
  %61 = trunc i64 %59 to i16
  %conv3.i.12 = add i16 %60, %61
  store i16 %conv3.i.12, ptr %arrayidx2.i.12, align 2, !tbaa !13
  %62 = load i64, ptr %arrayidx.i.13, align 8, !tbaa !147
  %arrayidx2.i.13 = getelementptr inbounds i16, ptr %5, i64 9997
  %63 = load i16, ptr %arrayidx2.i.13, align 2, !tbaa !13
  %64 = trunc i64 %62 to i16
  %conv3.i.13 = add i16 %63, %64
  store i16 %conv3.i.13, ptr %arrayidx2.i.13, align 2, !tbaa !13
  %65 = load i64, ptr %arrayidx.i.14, align 8, !tbaa !147
  %arrayidx2.i.14 = getelementptr inbounds i16, ptr %5, i64 9998
  %66 = load i16, ptr %arrayidx2.i.14, align 2, !tbaa !13
  %67 = trunc i64 %65 to i16
  %conv3.i.14 = add i16 %66, %67
  store i16 %conv3.i.14, ptr %arrayidx2.i.14, align 2, !tbaa !13
  %68 = load i64, ptr %arrayidx.i.15, align 8, !tbaa !147
  %arrayidx2.i.15 = getelementptr inbounds i16, ptr %5, i64 9999
  %69 = load i16, ptr %arrayidx2.i.15, align 2, !tbaa !13
  %70 = trunc i64 %68 to i16
  %conv3.i.15 = add i16 %69, %70
  store i16 %conv3.i.15, ptr %arrayidx2.i.15, align 2, !tbaa !13
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %71 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %71, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %72 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %71, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution", align 2
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i31.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  store i16 0, ptr %distrib.i32.i, align 2, !tbaa !9
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i33.i, align 2, !tbaa !12
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i34.i
  store i16 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 2, !tbaa !13
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i, !prof !42

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.cond.preheader.i, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %1, %for.cond.preheader.i ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next.1, %vector.body ]
  %6 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <2 x i64>, ptr %6, align 8, !tbaa !147
  %7 = getelementptr inbounds i64, ptr %6, i64 2
  %wide.load5 = load <2 x i64>, ptr %7, align 8, !tbaa !147
  %8 = getelementptr inbounds i16, ptr %5, i64 %index
  %wide.load6 = load <2 x i16>, ptr %8, align 2, !tbaa !13
  %9 = getelementptr inbounds i16, ptr %8, i64 2
  %wide.load7 = load <2 x i16>, ptr %9, align 2, !tbaa !13
  %10 = trunc <2 x i64> %wide.load to <2 x i16>
  %11 = trunc <2 x i64> %wide.load5 to <2 x i16>
  %12 = add <2 x i16> %wide.load6, %10
  %13 = add <2 x i16> %wide.load7, %11
  store <2 x i16> %12, ptr %8, align 2, !tbaa !13
  store <2 x i16> %13, ptr %9, align 2, !tbaa !13
  %index.next = or i64 %index, 4
  %14 = getelementptr inbounds i64, ptr %call.i, i64 %index.next
  %wide.load.1 = load <2 x i64>, ptr %14, align 8, !tbaa !147
  %15 = getelementptr inbounds i64, ptr %14, i64 2
  %wide.load5.1 = load <2 x i64>, ptr %15, align 8, !tbaa !147
  %16 = getelementptr inbounds i16, ptr %5, i64 %index.next
  %wide.load6.1 = load <2 x i16>, ptr %16, align 2, !tbaa !13
  %17 = getelementptr inbounds i16, ptr %16, i64 2
  %wide.load7.1 = load <2 x i16>, ptr %17, align 2, !tbaa !13
  %18 = trunc <2 x i64> %wide.load.1 to <2 x i16>
  %19 = trunc <2 x i64> %wide.load5.1 to <2 x i16>
  %20 = add <2 x i16> %wide.load6.1, %18
  %21 = add <2 x i16> %wide.load7.1, %19
  store <2 x i16> %20, ptr %16, align 2, !tbaa !13
  store <2 x i16> %21, ptr %17, align 2, !tbaa !13
  %index.next.1 = add nuw nsw i64 %index, 8
  %22 = icmp eq i64 %index.next.1, 10000
  br i1 %22, label %invoke.cont19.i, label %vector.body, !llvm.loop !217

invoke.cont19.i:                                  ; preds = %vector.body
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %23 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %23, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %24 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %24) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %23, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopImtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont3.i unwind label %ehcleanup60.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i74.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i74.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  br label %for.body.i78.i

for.body.i78.i:                                   ; preds = %for.body.i78.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i75.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i76.i.4, %for.body.i78.i ]
  %arrayidx.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i75.i
  %0 = load i64, ptr %arrayidx.i.i, align 8, !tbaa !147
  %conv.i.i = trunc i64 %0 to i32
  %arrayidx2.i.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i75.i
  store i32 %conv.i.i, ptr %arrayidx2.i.i, align 4, !tbaa !95
  %indvars.iv.next.i76.i = add nuw nsw i64 %indvars.iv.i75.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i76.i
  %1 = load i64, ptr %arrayidx.i.i.1, align 8, !tbaa !147
  %conv.i.i.1 = trunc i64 %1 to i32
  %arrayidx2.i.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i76.i
  store i32 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 4, !tbaa !95
  %indvars.iv.next.i76.i.1 = add nuw nsw i64 %indvars.iv.i75.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i76.i.1
  %2 = load i64, ptr %arrayidx.i.i.2, align 8, !tbaa !147
  %conv.i.i.2 = trunc i64 %2 to i32
  %arrayidx2.i.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i76.i.1
  store i32 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 4, !tbaa !95
  %indvars.iv.next.i76.i.2 = add nuw nsw i64 %indvars.iv.i75.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i76.i.2
  %3 = load i64, ptr %arrayidx.i.i.3, align 8, !tbaa !147
  %conv.i.i.3 = trunc i64 %3 to i32
  %arrayidx2.i.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i76.i.2
  store i32 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 4, !tbaa !95
  %indvars.iv.next.i76.i.3 = add nuw nsw i64 %indvars.iv.i75.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i76.i.3
  %4 = load i64, ptr %arrayidx.i.i.4, align 8, !tbaa !147
  %conv.i.i.4 = trunc i64 %4 to i32
  %arrayidx2.i.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i76.i.3
  store i32 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 4, !tbaa !95
  %indvars.iv.next.i76.i.4 = add nuw nsw i64 %indvars.iv.i75.i, 5
  %exitcond.not.i77.i.4 = icmp eq i64 %indvars.iv.next.i76.i.4, 10000
  br i1 %exitcond.not.i77.i.4, label %vector.body, label %for.body.i78.i, !llvm.loop !218

vector.body:                                      ; preds = %for.body.i78.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i78.i ]
  %5 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <8 x i64>, ptr %5, align 8, !tbaa !147
  %6 = getelementptr inbounds i64, ptr %5, i64 8
  %wide.load27 = load <8 x i64>, ptr %6, align 8, !tbaa !147
  %7 = getelementptr inbounds i64, ptr %5, i64 16
  %wide.load28 = load <8 x i64>, ptr %7, align 8, !tbaa !147
  %8 = getelementptr inbounds i64, ptr %5, i64 24
  %wide.load29 = load <8 x i64>, ptr %8, align 8, !tbaa !147
  %9 = trunc <8 x i64> %wide.load to <8 x i32>
  %10 = trunc <8 x i64> %wide.load27 to <8 x i32>
  %11 = trunc <8 x i64> %wide.load28 to <8 x i32>
  %12 = trunc <8 x i64> %wide.load29 to <8 x i32>
  %13 = getelementptr inbounds i32, ptr %call1.i, i64 %index
  store <8 x i32> %9, ptr %13, align 4, !tbaa !95
  %14 = getelementptr inbounds i32, ptr %13, i64 8
  store <8 x i32> %10, ptr %14, align 4, !tbaa !95
  %15 = getelementptr inbounds i32, ptr %13, i64 16
  store <8 x i32> %11, ptr %15, align 4, !tbaa !95
  %16 = getelementptr inbounds i32, ptr %13, i64 24
  store <8 x i32> %12, ptr %16, align 4, !tbaa !95
  %index.next = add nuw i64 %index, 32
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !219

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i64, ptr %call.i, i64 9984
  %18 = load i64, ptr %arrayidx.i, align 8, !tbaa !147
  %conv.i = trunc i64 %18 to i32
  %arrayidx2.i = getelementptr inbounds i32, ptr %call1.i, i64 9984
  store i32 %conv.i, ptr %arrayidx2.i, align 4, !tbaa !95
  %arrayidx.i.1 = getelementptr inbounds i64, ptr %call.i, i64 9985
  %19 = load i64, ptr %arrayidx.i.1, align 8, !tbaa !147
  %conv.i.1 = trunc i64 %19 to i32
  %arrayidx2.i.1 = getelementptr inbounds i32, ptr %call1.i, i64 9985
  store i32 %conv.i.1, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %arrayidx.i.2 = getelementptr inbounds i64, ptr %call.i, i64 9986
  %20 = load i64, ptr %arrayidx.i.2, align 8, !tbaa !147
  %conv.i.2 = trunc i64 %20 to i32
  %arrayidx2.i.2 = getelementptr inbounds i32, ptr %call1.i, i64 9986
  store i32 %conv.i.2, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %arrayidx.i.3 = getelementptr inbounds i64, ptr %call.i, i64 9987
  %21 = load i64, ptr %arrayidx.i.3, align 8, !tbaa !147
  %conv.i.3 = trunc i64 %21 to i32
  %arrayidx2.i.3 = getelementptr inbounds i32, ptr %call1.i, i64 9987
  store i32 %conv.i.3, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %arrayidx.i.4 = getelementptr inbounds i64, ptr %call.i, i64 9988
  %22 = load i64, ptr %arrayidx.i.4, align 8, !tbaa !147
  %conv.i.4 = trunc i64 %22 to i32
  %arrayidx2.i.4 = getelementptr inbounds i32, ptr %call1.i, i64 9988
  store i32 %conv.i.4, ptr %arrayidx2.i.4, align 4, !tbaa !95
  %arrayidx.i.5 = getelementptr inbounds i64, ptr %call.i, i64 9989
  %23 = load i64, ptr %arrayidx.i.5, align 8, !tbaa !147
  %conv.i.5 = trunc i64 %23 to i32
  %arrayidx2.i.5 = getelementptr inbounds i32, ptr %call1.i, i64 9989
  store i32 %conv.i.5, ptr %arrayidx2.i.5, align 4, !tbaa !95
  %arrayidx.i.6 = getelementptr inbounds i64, ptr %call.i, i64 9990
  %24 = load i64, ptr %arrayidx.i.6, align 8, !tbaa !147
  %conv.i.6 = trunc i64 %24 to i32
  %arrayidx2.i.6 = getelementptr inbounds i32, ptr %call1.i, i64 9990
  store i32 %conv.i.6, ptr %arrayidx2.i.6, align 4, !tbaa !95
  %arrayidx.i.7 = getelementptr inbounds i64, ptr %call.i, i64 9991
  %25 = load i64, ptr %arrayidx.i.7, align 8, !tbaa !147
  %conv.i.7 = trunc i64 %25 to i32
  %arrayidx2.i.7 = getelementptr inbounds i32, ptr %call1.i, i64 9991
  store i32 %conv.i.7, ptr %arrayidx2.i.7, align 4, !tbaa !95
  %arrayidx.i.8 = getelementptr inbounds i64, ptr %call.i, i64 9992
  %26 = load i64, ptr %arrayidx.i.8, align 8, !tbaa !147
  %conv.i.8 = trunc i64 %26 to i32
  %arrayidx2.i.8 = getelementptr inbounds i32, ptr %call1.i, i64 9992
  store i32 %conv.i.8, ptr %arrayidx2.i.8, align 4, !tbaa !95
  %arrayidx.i.9 = getelementptr inbounds i64, ptr %call.i, i64 9993
  %27 = load i64, ptr %arrayidx.i.9, align 8, !tbaa !147
  %conv.i.9 = trunc i64 %27 to i32
  %arrayidx2.i.9 = getelementptr inbounds i32, ptr %call1.i, i64 9993
  store i32 %conv.i.9, ptr %arrayidx2.i.9, align 4, !tbaa !95
  %arrayidx.i.10 = getelementptr inbounds i64, ptr %call.i, i64 9994
  %28 = load i64, ptr %arrayidx.i.10, align 8, !tbaa !147
  %conv.i.10 = trunc i64 %28 to i32
  %arrayidx2.i.10 = getelementptr inbounds i32, ptr %call1.i, i64 9994
  store i32 %conv.i.10, ptr %arrayidx2.i.10, align 4, !tbaa !95
  %arrayidx.i.11 = getelementptr inbounds i64, ptr %call.i, i64 9995
  %29 = load i64, ptr %arrayidx.i.11, align 8, !tbaa !147
  %conv.i.11 = trunc i64 %29 to i32
  %arrayidx2.i.11 = getelementptr inbounds i32, ptr %call1.i, i64 9995
  store i32 %conv.i.11, ptr %arrayidx2.i.11, align 4, !tbaa !95
  %arrayidx.i.12 = getelementptr inbounds i64, ptr %call.i, i64 9996
  %30 = load i64, ptr %arrayidx.i.12, align 8, !tbaa !147
  %conv.i.12 = trunc i64 %30 to i32
  %arrayidx2.i.12 = getelementptr inbounds i32, ptr %call1.i, i64 9996
  store i32 %conv.i.12, ptr %arrayidx2.i.12, align 4, !tbaa !95
  %arrayidx.i.13 = getelementptr inbounds i64, ptr %call.i, i64 9997
  %31 = load i64, ptr %arrayidx.i.13, align 8, !tbaa !147
  %conv.i.13 = trunc i64 %31 to i32
  %arrayidx2.i.13 = getelementptr inbounds i32, ptr %call1.i, i64 9997
  store i32 %conv.i.13, ptr %arrayidx2.i.13, align 4, !tbaa !95
  %arrayidx.i.14 = getelementptr inbounds i64, ptr %call.i, i64 9998
  %32 = load i64, ptr %arrayidx.i.14, align 8, !tbaa !147
  %conv.i.14 = trunc i64 %32 to i32
  %arrayidx2.i.14 = getelementptr inbounds i32, ptr %call1.i, i64 9998
  store i32 %conv.i.14, ptr %arrayidx2.i.14, align 4, !tbaa !95
  %arrayidx.i.15 = getelementptr inbounds i64, ptr %call.i, i64 9999
  %33 = load i64, ptr %arrayidx.i.15, align 8, !tbaa !147
  %conv.i.15 = trunc i64 %33 to i32
  %arrayidx2.i.15 = getelementptr inbounds i32, ptr %call1.i, i64 9999
  store i32 %conv.i.15, ptr %arrayidx2.i.15, align 4, !tbaa !95
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i79.i.1 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i32, ptr %arrayidx.i79.i.1, align 4, !tbaa !95
  %arrayidx.i80.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i32, ptr %arrayidx.i80.i.1, align 4, !tbaa !95
  %cmp16.not.i.1 = icmp eq i32 %34, %35
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i79.i.2 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i32, ptr %arrayidx.i79.i.2, align 4, !tbaa !95
  %arrayidx.i80.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i32, ptr %arrayidx.i80.i.2, align 4, !tbaa !95
  %cmp16.not.i.2 = icmp eq i32 %36, %37
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i79.i.3 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i32, ptr %arrayidx.i79.i.3, align 4, !tbaa !95
  %arrayidx.i80.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i32, ptr %arrayidx.i80.i.3, align 4, !tbaa !95
  %cmp16.not.i.3 = icmp eq i32 %38, %39
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i79.i.4 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i32, ptr %arrayidx.i79.i.4, align 4, !tbaa !95
  %arrayidx.i80.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i32, ptr %arrayidx.i80.i.4, align 4, !tbaa !95
  %cmp16.not.i.4 = icmp eq i32 %40, %41
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !220

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not143147.i = icmp eq i64 %43, 0
  %cmp.not.i.not143.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not143147.i
  br i1 %cmp.not.i.not143.i, label %if.end.i.i, label %for.body48.i.preheader, !prof !42

for.body48.i.preheader:                           ; preds = %for.cond44.preheader.i
  %arrayidx.i8 = getelementptr inbounds i64, ptr %call.i, i64 9984
  %arrayidx.i8.1 = getelementptr inbounds i64, ptr %call.i, i64 9985
  %arrayidx.i8.2 = getelementptr inbounds i64, ptr %call.i, i64 9986
  %arrayidx.i8.3 = getelementptr inbounds i64, ptr %call.i, i64 9987
  %arrayidx.i8.4 = getelementptr inbounds i64, ptr %call.i, i64 9988
  %arrayidx.i8.5 = getelementptr inbounds i64, ptr %call.i, i64 9989
  %arrayidx.i8.6 = getelementptr inbounds i64, ptr %call.i, i64 9990
  %arrayidx.i8.7 = getelementptr inbounds i64, ptr %call.i, i64 9991
  %arrayidx.i8.8 = getelementptr inbounds i64, ptr %call.i, i64 9992
  %arrayidx.i8.9 = getelementptr inbounds i64, ptr %call.i, i64 9993
  %arrayidx.i8.10 = getelementptr inbounds i64, ptr %call.i, i64 9994
  %arrayidx.i8.11 = getelementptr inbounds i64, ptr %call.i, i64 9995
  %arrayidx.i8.12 = getelementptr inbounds i64, ptr %call.i, i64 9996
  %arrayidx.i8.13 = getelementptr inbounds i64, ptr %call.i, i64 9997
  %arrayidx.i8.14 = getelementptr inbounds i64, ptr %call.i, i64 9998
  %arrayidx.i8.15 = getelementptr inbounds i64, ptr %call.i, i64 9999
  br label %for.body48.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup62.i

ehcleanup60.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i114.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i79.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i32, ptr %arrayidx.i79.i, align 4, !tbaa !95
  %arrayidx.i80.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i32, ptr %arrayidx.i80.i, align 4, !tbaa !95
  %cmp16.not.i = icmp eq i32 %46, %47
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i32 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i79.i.le = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i82.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i83.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i64, ptr %arrayidx.i83.i, align 8, !tbaa !147
  %call.i84.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %48)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %49 = load i32, ptr %arrayidx.i79.i.le, align 4, !tbaa !95
  %conv.i90.i = zext i32 %49 to i64
  %call.i91.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, i64 noundef %conv.i90.i)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i94.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %conv.i97.i = zext i32 %.lcssa to i64
  %call.i98.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, i64 noundef %conv.i97.i)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i98.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

if.end.i.i:                                       ; preds = %for.body.i13, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i102.i = icmp eq ptr %51, null
  br i1 %cmp.not.i102.i, label %_ZL28benchForTruncOrZextVecInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i103.i

delete.notnull.i.i103.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

for.body48.i:                                     ; preds = %for.body48.i.preheader, %for.body.i13
  %__begin1.sroa.0.0144.i = phi i64 [ %dec.i.i, %for.body.i13 ], [ %43, %for.body48.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body35

vector.body35:                                    ; preds = %vector.body35, %for.body48.i
  %index36 = phi i64 [ 0, %for.body48.i ], [ %index.next41, %vector.body35 ]
  %55 = getelementptr inbounds i64, ptr %call.i, i64 %index36
  %wide.load37 = load <8 x i64>, ptr %55, align 8, !tbaa !147
  %56 = getelementptr inbounds i64, ptr %55, i64 8
  %wide.load38 = load <8 x i64>, ptr %56, align 8, !tbaa !147
  %57 = getelementptr inbounds i64, ptr %55, i64 16
  %wide.load39 = load <8 x i64>, ptr %57, align 8, !tbaa !147
  %58 = getelementptr inbounds i64, ptr %55, i64 24
  %wide.load40 = load <8 x i64>, ptr %58, align 8, !tbaa !147
  %59 = trunc <8 x i64> %wide.load37 to <8 x i32>
  %60 = trunc <8 x i64> %wide.load38 to <8 x i32>
  %61 = trunc <8 x i64> %wide.load39 to <8 x i32>
  %62 = trunc <8 x i64> %wide.load40 to <8 x i32>
  %63 = getelementptr inbounds i32, ptr %54, i64 %index36
  store <8 x i32> %59, ptr %63, align 4, !tbaa !95
  %64 = getelementptr inbounds i32, ptr %63, i64 8
  store <8 x i32> %60, ptr %64, align 4, !tbaa !95
  %65 = getelementptr inbounds i32, ptr %63, i64 16
  store <8 x i32> %61, ptr %65, align 4, !tbaa !95
  %66 = getelementptr inbounds i32, ptr %63, i64 24
  store <8 x i32> %62, ptr %66, align 4, !tbaa !95
  %index.next41 = add nuw i64 %index36, 32
  %67 = icmp eq i64 %index.next41, 9984
  br i1 %67, label %for.body.i13, label %vector.body35, !llvm.loop !221

for.body.i13:                                     ; preds = %vector.body35
  %68 = load i64, ptr %arrayidx.i8, align 8, !tbaa !147
  %conv.i9 = trunc i64 %68 to i32
  %arrayidx2.i10 = getelementptr inbounds i32, ptr %54, i64 9984
  store i32 %conv.i9, ptr %arrayidx2.i10, align 4, !tbaa !95
  %69 = load i64, ptr %arrayidx.i8.1, align 8, !tbaa !147
  %conv.i9.1 = trunc i64 %69 to i32
  %arrayidx2.i10.1 = getelementptr inbounds i32, ptr %54, i64 9985
  store i32 %conv.i9.1, ptr %arrayidx2.i10.1, align 4, !tbaa !95
  %70 = load i64, ptr %arrayidx.i8.2, align 8, !tbaa !147
  %conv.i9.2 = trunc i64 %70 to i32
  %arrayidx2.i10.2 = getelementptr inbounds i32, ptr %54, i64 9986
  store i32 %conv.i9.2, ptr %arrayidx2.i10.2, align 4, !tbaa !95
  %71 = load i64, ptr %arrayidx.i8.3, align 8, !tbaa !147
  %conv.i9.3 = trunc i64 %71 to i32
  %arrayidx2.i10.3 = getelementptr inbounds i32, ptr %54, i64 9987
  store i32 %conv.i9.3, ptr %arrayidx2.i10.3, align 4, !tbaa !95
  %72 = load i64, ptr %arrayidx.i8.4, align 8, !tbaa !147
  %conv.i9.4 = trunc i64 %72 to i32
  %arrayidx2.i10.4 = getelementptr inbounds i32, ptr %54, i64 9988
  store i32 %conv.i9.4, ptr %arrayidx2.i10.4, align 4, !tbaa !95
  %73 = load i64, ptr %arrayidx.i8.5, align 8, !tbaa !147
  %conv.i9.5 = trunc i64 %73 to i32
  %arrayidx2.i10.5 = getelementptr inbounds i32, ptr %54, i64 9989
  store i32 %conv.i9.5, ptr %arrayidx2.i10.5, align 4, !tbaa !95
  %74 = load i64, ptr %arrayidx.i8.6, align 8, !tbaa !147
  %conv.i9.6 = trunc i64 %74 to i32
  %arrayidx2.i10.6 = getelementptr inbounds i32, ptr %54, i64 9990
  store i32 %conv.i9.6, ptr %arrayidx2.i10.6, align 4, !tbaa !95
  %75 = load i64, ptr %arrayidx.i8.7, align 8, !tbaa !147
  %conv.i9.7 = trunc i64 %75 to i32
  %arrayidx2.i10.7 = getelementptr inbounds i32, ptr %54, i64 9991
  store i32 %conv.i9.7, ptr %arrayidx2.i10.7, align 4, !tbaa !95
  %76 = load i64, ptr %arrayidx.i8.8, align 8, !tbaa !147
  %conv.i9.8 = trunc i64 %76 to i32
  %arrayidx2.i10.8 = getelementptr inbounds i32, ptr %54, i64 9992
  store i32 %conv.i9.8, ptr %arrayidx2.i10.8, align 4, !tbaa !95
  %77 = load i64, ptr %arrayidx.i8.9, align 8, !tbaa !147
  %conv.i9.9 = trunc i64 %77 to i32
  %arrayidx2.i10.9 = getelementptr inbounds i32, ptr %54, i64 9993
  store i32 %conv.i9.9, ptr %arrayidx2.i10.9, align 4, !tbaa !95
  %78 = load i64, ptr %arrayidx.i8.10, align 8, !tbaa !147
  %conv.i9.10 = trunc i64 %78 to i32
  %arrayidx2.i10.10 = getelementptr inbounds i32, ptr %54, i64 9994
  store i32 %conv.i9.10, ptr %arrayidx2.i10.10, align 4, !tbaa !95
  %79 = load i64, ptr %arrayidx.i8.11, align 8, !tbaa !147
  %conv.i9.11 = trunc i64 %79 to i32
  %arrayidx2.i10.11 = getelementptr inbounds i32, ptr %54, i64 9995
  store i32 %conv.i9.11, ptr %arrayidx2.i10.11, align 4, !tbaa !95
  %80 = load i64, ptr %arrayidx.i8.12, align 8, !tbaa !147
  %conv.i9.12 = trunc i64 %80 to i32
  %arrayidx2.i10.12 = getelementptr inbounds i32, ptr %54, i64 9996
  store i32 %conv.i9.12, ptr %arrayidx2.i10.12, align 4, !tbaa !95
  %81 = load i64, ptr %arrayidx.i8.13, align 8, !tbaa !147
  %conv.i9.13 = trunc i64 %81 to i32
  %arrayidx2.i10.13 = getelementptr inbounds i32, ptr %54, i64 9997
  store i32 %conv.i9.13, ptr %arrayidx2.i10.13, align 4, !tbaa !95
  %82 = load i64, ptr %arrayidx.i8.14, align 8, !tbaa !147
  %conv.i9.14 = trunc i64 %82 to i32
  %arrayidx2.i10.14 = getelementptr inbounds i32, ptr %54, i64 9998
  store i32 %conv.i9.14, ptr %arrayidx2.i10.14, align 4, !tbaa !95
  %83 = load i64, ptr %arrayidx.i8.15, align 8, !tbaa !147
  %conv.i9.15 = trunc i64 %83 to i32
  %arrayidx2.i10.15 = getelementptr inbounds i32, ptr %54, i64 9999
  store i32 %conv.i9.15, ptr %arrayidx2.i10.15, align 4, !tbaa !95
  %dec.i.i = add i64 %__begin1.sroa.0.0144.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup60.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn133.i = phi { ptr, i32 } [ %50, %lpad17.i ], [ %52, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i113.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i113.i, label %ehcleanup62.i, label %delete.notnull.i.i114.i

delete.notnull.i.i114.i:                          ; preds = %ehcleanup60.i, %ehcleanup60.thread.i
  %.pn133.pn139.i = phi { ptr, i32 } [ %45, %ehcleanup60.thread.i ], [ %.pn133.i, %ehcleanup60.i ]
  %84 = phi ptr [ %call1.i, %ehcleanup60.thread.i ], [ %.pr.i, %ehcleanup60.i ]
  call void @_ZdaPv(ptr noundef nonnull %84) #13
  br label %ehcleanup62.i

ehcleanup62.i:                                    ; preds = %delete.notnull.i.i114.i, %ehcleanup60.i, %lpad.i
  %.pn133.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn133.i, %ehcleanup60.i ], [ %.pn133.pn139.i, %delete.notnull.i.i114.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn133.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i103.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont3.i unwind label %ehcleanup60.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i74.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i74.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  br label %for.body.i78.i

for.body.i78.i:                                   ; preds = %for.body.i78.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i75.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i76.i.4, %for.body.i78.i ]
  %arrayidx.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i75.i
  %0 = load i64, ptr %arrayidx.i.i, align 8, !tbaa !147
  %conv.i.i = trunc i64 %0 to i32
  %arrayidx2.i.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i75.i
  store i32 %conv.i.i, ptr %arrayidx2.i.i, align 4, !tbaa !95
  %indvars.iv.next.i76.i = add nuw nsw i64 %indvars.iv.i75.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i76.i
  %1 = load i64, ptr %arrayidx.i.i.1, align 8, !tbaa !147
  %conv.i.i.1 = trunc i64 %1 to i32
  %arrayidx2.i.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i76.i
  store i32 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 4, !tbaa !95
  %indvars.iv.next.i76.i.1 = add nuw nsw i64 %indvars.iv.i75.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i76.i.1
  %2 = load i64, ptr %arrayidx.i.i.2, align 8, !tbaa !147
  %conv.i.i.2 = trunc i64 %2 to i32
  %arrayidx2.i.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i76.i.1
  store i32 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 4, !tbaa !95
  %indvars.iv.next.i76.i.2 = add nuw nsw i64 %indvars.iv.i75.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i76.i.2
  %3 = load i64, ptr %arrayidx.i.i.3, align 8, !tbaa !147
  %conv.i.i.3 = trunc i64 %3 to i32
  %arrayidx2.i.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i76.i.2
  store i32 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 4, !tbaa !95
  %indvars.iv.next.i76.i.3 = add nuw nsw i64 %indvars.iv.i75.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i76.i.3
  %4 = load i64, ptr %arrayidx.i.i.4, align 8, !tbaa !147
  %conv.i.i.4 = trunc i64 %4 to i32
  %arrayidx2.i.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i76.i.3
  store i32 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 4, !tbaa !95
  %indvars.iv.next.i76.i.4 = add nuw nsw i64 %indvars.iv.i75.i, 5
  %exitcond.not.i77.i.4 = icmp eq i64 %indvars.iv.next.i76.i.4, 10000
  br i1 %exitcond.not.i77.i.4, label %vector.body, label %for.body.i78.i, !llvm.loop !218

vector.body:                                      ; preds = %for.body.i78.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i78.i ]
  %5 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <16 x i64>, ptr %5, align 8, !tbaa !147
  %6 = getelementptr inbounds i64, ptr %5, i64 16
  %wide.load27 = load <16 x i64>, ptr %6, align 8, !tbaa !147
  %7 = getelementptr inbounds i64, ptr %5, i64 32
  %wide.load28 = load <16 x i64>, ptr %7, align 8, !tbaa !147
  %8 = getelementptr inbounds i64, ptr %5, i64 48
  %wide.load29 = load <16 x i64>, ptr %8, align 8, !tbaa !147
  %9 = trunc <16 x i64> %wide.load to <16 x i32>
  %10 = trunc <16 x i64> %wide.load27 to <16 x i32>
  %11 = trunc <16 x i64> %wide.load28 to <16 x i32>
  %12 = trunc <16 x i64> %wide.load29 to <16 x i32>
  %13 = getelementptr inbounds i32, ptr %call1.i, i64 %index
  store <16 x i32> %9, ptr %13, align 4, !tbaa !95
  %14 = getelementptr inbounds i32, ptr %13, i64 16
  store <16 x i32> %10, ptr %14, align 4, !tbaa !95
  %15 = getelementptr inbounds i32, ptr %13, i64 32
  store <16 x i32> %11, ptr %15, align 4, !tbaa !95
  %16 = getelementptr inbounds i32, ptr %13, i64 48
  store <16 x i32> %12, ptr %16, align 4, !tbaa !95
  %index.next = add nuw i64 %index, 64
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !222

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i64, ptr %call.i, i64 9984
  %18 = load i64, ptr %arrayidx.i, align 8, !tbaa !147
  %conv.i = trunc i64 %18 to i32
  %arrayidx2.i = getelementptr inbounds i32, ptr %call1.i, i64 9984
  store i32 %conv.i, ptr %arrayidx2.i, align 4, !tbaa !95
  %arrayidx.i.1 = getelementptr inbounds i64, ptr %call.i, i64 9985
  %19 = load i64, ptr %arrayidx.i.1, align 8, !tbaa !147
  %conv.i.1 = trunc i64 %19 to i32
  %arrayidx2.i.1 = getelementptr inbounds i32, ptr %call1.i, i64 9985
  store i32 %conv.i.1, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %arrayidx.i.2 = getelementptr inbounds i64, ptr %call.i, i64 9986
  %20 = load i64, ptr %arrayidx.i.2, align 8, !tbaa !147
  %conv.i.2 = trunc i64 %20 to i32
  %arrayidx2.i.2 = getelementptr inbounds i32, ptr %call1.i, i64 9986
  store i32 %conv.i.2, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %arrayidx.i.3 = getelementptr inbounds i64, ptr %call.i, i64 9987
  %21 = load i64, ptr %arrayidx.i.3, align 8, !tbaa !147
  %conv.i.3 = trunc i64 %21 to i32
  %arrayidx2.i.3 = getelementptr inbounds i32, ptr %call1.i, i64 9987
  store i32 %conv.i.3, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %arrayidx.i.4 = getelementptr inbounds i64, ptr %call.i, i64 9988
  %22 = load i64, ptr %arrayidx.i.4, align 8, !tbaa !147
  %conv.i.4 = trunc i64 %22 to i32
  %arrayidx2.i.4 = getelementptr inbounds i32, ptr %call1.i, i64 9988
  store i32 %conv.i.4, ptr %arrayidx2.i.4, align 4, !tbaa !95
  %arrayidx.i.5 = getelementptr inbounds i64, ptr %call.i, i64 9989
  %23 = load i64, ptr %arrayidx.i.5, align 8, !tbaa !147
  %conv.i.5 = trunc i64 %23 to i32
  %arrayidx2.i.5 = getelementptr inbounds i32, ptr %call1.i, i64 9989
  store i32 %conv.i.5, ptr %arrayidx2.i.5, align 4, !tbaa !95
  %arrayidx.i.6 = getelementptr inbounds i64, ptr %call.i, i64 9990
  %24 = load i64, ptr %arrayidx.i.6, align 8, !tbaa !147
  %conv.i.6 = trunc i64 %24 to i32
  %arrayidx2.i.6 = getelementptr inbounds i32, ptr %call1.i, i64 9990
  store i32 %conv.i.6, ptr %arrayidx2.i.6, align 4, !tbaa !95
  %arrayidx.i.7 = getelementptr inbounds i64, ptr %call.i, i64 9991
  %25 = load i64, ptr %arrayidx.i.7, align 8, !tbaa !147
  %conv.i.7 = trunc i64 %25 to i32
  %arrayidx2.i.7 = getelementptr inbounds i32, ptr %call1.i, i64 9991
  store i32 %conv.i.7, ptr %arrayidx2.i.7, align 4, !tbaa !95
  %arrayidx.i.8 = getelementptr inbounds i64, ptr %call.i, i64 9992
  %26 = load i64, ptr %arrayidx.i.8, align 8, !tbaa !147
  %conv.i.8 = trunc i64 %26 to i32
  %arrayidx2.i.8 = getelementptr inbounds i32, ptr %call1.i, i64 9992
  store i32 %conv.i.8, ptr %arrayidx2.i.8, align 4, !tbaa !95
  %arrayidx.i.9 = getelementptr inbounds i64, ptr %call.i, i64 9993
  %27 = load i64, ptr %arrayidx.i.9, align 8, !tbaa !147
  %conv.i.9 = trunc i64 %27 to i32
  %arrayidx2.i.9 = getelementptr inbounds i32, ptr %call1.i, i64 9993
  store i32 %conv.i.9, ptr %arrayidx2.i.9, align 4, !tbaa !95
  %arrayidx.i.10 = getelementptr inbounds i64, ptr %call.i, i64 9994
  %28 = load i64, ptr %arrayidx.i.10, align 8, !tbaa !147
  %conv.i.10 = trunc i64 %28 to i32
  %arrayidx2.i.10 = getelementptr inbounds i32, ptr %call1.i, i64 9994
  store i32 %conv.i.10, ptr %arrayidx2.i.10, align 4, !tbaa !95
  %arrayidx.i.11 = getelementptr inbounds i64, ptr %call.i, i64 9995
  %29 = load i64, ptr %arrayidx.i.11, align 8, !tbaa !147
  %conv.i.11 = trunc i64 %29 to i32
  %arrayidx2.i.11 = getelementptr inbounds i32, ptr %call1.i, i64 9995
  store i32 %conv.i.11, ptr %arrayidx2.i.11, align 4, !tbaa !95
  %arrayidx.i.12 = getelementptr inbounds i64, ptr %call.i, i64 9996
  %30 = load i64, ptr %arrayidx.i.12, align 8, !tbaa !147
  %conv.i.12 = trunc i64 %30 to i32
  %arrayidx2.i.12 = getelementptr inbounds i32, ptr %call1.i, i64 9996
  store i32 %conv.i.12, ptr %arrayidx2.i.12, align 4, !tbaa !95
  %arrayidx.i.13 = getelementptr inbounds i64, ptr %call.i, i64 9997
  %31 = load i64, ptr %arrayidx.i.13, align 8, !tbaa !147
  %conv.i.13 = trunc i64 %31 to i32
  %arrayidx2.i.13 = getelementptr inbounds i32, ptr %call1.i, i64 9997
  store i32 %conv.i.13, ptr %arrayidx2.i.13, align 4, !tbaa !95
  %arrayidx.i.14 = getelementptr inbounds i64, ptr %call.i, i64 9998
  %32 = load i64, ptr %arrayidx.i.14, align 8, !tbaa !147
  %conv.i.14 = trunc i64 %32 to i32
  %arrayidx2.i.14 = getelementptr inbounds i32, ptr %call1.i, i64 9998
  store i32 %conv.i.14, ptr %arrayidx2.i.14, align 4, !tbaa !95
  %arrayidx.i.15 = getelementptr inbounds i64, ptr %call.i, i64 9999
  %33 = load i64, ptr %arrayidx.i.15, align 8, !tbaa !147
  %conv.i.15 = trunc i64 %33 to i32
  %arrayidx2.i.15 = getelementptr inbounds i32, ptr %call1.i, i64 9999
  store i32 %conv.i.15, ptr %arrayidx2.i.15, align 4, !tbaa !95
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i79.i.1 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i32, ptr %arrayidx.i79.i.1, align 4, !tbaa !95
  %arrayidx.i80.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i32, ptr %arrayidx.i80.i.1, align 4, !tbaa !95
  %cmp16.not.i.1 = icmp eq i32 %34, %35
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i79.i.2 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i32, ptr %arrayidx.i79.i.2, align 4, !tbaa !95
  %arrayidx.i80.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i32, ptr %arrayidx.i80.i.2, align 4, !tbaa !95
  %cmp16.not.i.2 = icmp eq i32 %36, %37
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i79.i.3 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i32, ptr %arrayidx.i79.i.3, align 4, !tbaa !95
  %arrayidx.i80.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i32, ptr %arrayidx.i80.i.3, align 4, !tbaa !95
  %cmp16.not.i.3 = icmp eq i32 %38, %39
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i79.i.4 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i32, ptr %arrayidx.i79.i.4, align 4, !tbaa !95
  %arrayidx.i80.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i32, ptr %arrayidx.i80.i.4, align 4, !tbaa !95
  %cmp16.not.i.4 = icmp eq i32 %40, %41
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !220

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not143147.i = icmp eq i64 %43, 0
  %cmp.not.i.not143.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not143147.i
  br i1 %cmp.not.i.not143.i, label %if.end.i.i, label %for.body48.i.preheader, !prof !42

for.body48.i.preheader:                           ; preds = %for.cond44.preheader.i
  %arrayidx.i8 = getelementptr inbounds i64, ptr %call.i, i64 9984
  %arrayidx.i8.1 = getelementptr inbounds i64, ptr %call.i, i64 9985
  %arrayidx.i8.2 = getelementptr inbounds i64, ptr %call.i, i64 9986
  %arrayidx.i8.3 = getelementptr inbounds i64, ptr %call.i, i64 9987
  %arrayidx.i8.4 = getelementptr inbounds i64, ptr %call.i, i64 9988
  %arrayidx.i8.5 = getelementptr inbounds i64, ptr %call.i, i64 9989
  %arrayidx.i8.6 = getelementptr inbounds i64, ptr %call.i, i64 9990
  %arrayidx.i8.7 = getelementptr inbounds i64, ptr %call.i, i64 9991
  %arrayidx.i8.8 = getelementptr inbounds i64, ptr %call.i, i64 9992
  %arrayidx.i8.9 = getelementptr inbounds i64, ptr %call.i, i64 9993
  %arrayidx.i8.10 = getelementptr inbounds i64, ptr %call.i, i64 9994
  %arrayidx.i8.11 = getelementptr inbounds i64, ptr %call.i, i64 9995
  %arrayidx.i8.12 = getelementptr inbounds i64, ptr %call.i, i64 9996
  %arrayidx.i8.13 = getelementptr inbounds i64, ptr %call.i, i64 9997
  %arrayidx.i8.14 = getelementptr inbounds i64, ptr %call.i, i64 9998
  %arrayidx.i8.15 = getelementptr inbounds i64, ptr %call.i, i64 9999
  br label %for.body48.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup62.i

ehcleanup60.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i114.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i79.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i32, ptr %arrayidx.i79.i, align 4, !tbaa !95
  %arrayidx.i80.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i32, ptr %arrayidx.i80.i, align 4, !tbaa !95
  %cmp16.not.i = icmp eq i32 %46, %47
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i32 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i79.i.le = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i82.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i83.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i64, ptr %arrayidx.i83.i, align 8, !tbaa !147
  %call.i84.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %48)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %49 = load i32, ptr %arrayidx.i79.i.le, align 4, !tbaa !95
  %conv.i90.i = zext i32 %49 to i64
  %call.i91.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, i64 noundef %conv.i90.i)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i94.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %conv.i97.i = zext i32 %.lcssa to i64
  %call.i98.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, i64 noundef %conv.i97.i)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i98.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

if.end.i.i:                                       ; preds = %for.body.i13, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i102.i = icmp eq ptr %51, null
  br i1 %cmp.not.i102.i, label %_ZL28benchForTruncOrZextVecInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i103.i

delete.notnull.i.i103.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

for.body48.i:                                     ; preds = %for.body48.i.preheader, %for.body.i13
  %__begin1.sroa.0.0144.i = phi i64 [ %dec.i.i, %for.body.i13 ], [ %43, %for.body48.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body35

vector.body35:                                    ; preds = %vector.body35, %for.body48.i
  %index36 = phi i64 [ 0, %for.body48.i ], [ %index.next41, %vector.body35 ]
  %55 = getelementptr inbounds i64, ptr %call.i, i64 %index36
  %wide.load37 = load <16 x i64>, ptr %55, align 8, !tbaa !147
  %56 = getelementptr inbounds i64, ptr %55, i64 16
  %wide.load38 = load <16 x i64>, ptr %56, align 8, !tbaa !147
  %57 = getelementptr inbounds i64, ptr %55, i64 32
  %wide.load39 = load <16 x i64>, ptr %57, align 8, !tbaa !147
  %58 = getelementptr inbounds i64, ptr %55, i64 48
  %wide.load40 = load <16 x i64>, ptr %58, align 8, !tbaa !147
  %59 = trunc <16 x i64> %wide.load37 to <16 x i32>
  %60 = trunc <16 x i64> %wide.load38 to <16 x i32>
  %61 = trunc <16 x i64> %wide.load39 to <16 x i32>
  %62 = trunc <16 x i64> %wide.load40 to <16 x i32>
  %63 = getelementptr inbounds i32, ptr %54, i64 %index36
  store <16 x i32> %59, ptr %63, align 4, !tbaa !95
  %64 = getelementptr inbounds i32, ptr %63, i64 16
  store <16 x i32> %60, ptr %64, align 4, !tbaa !95
  %65 = getelementptr inbounds i32, ptr %63, i64 32
  store <16 x i32> %61, ptr %65, align 4, !tbaa !95
  %66 = getelementptr inbounds i32, ptr %63, i64 48
  store <16 x i32> %62, ptr %66, align 4, !tbaa !95
  %index.next41 = add nuw i64 %index36, 64
  %67 = icmp eq i64 %index.next41, 9984
  br i1 %67, label %for.body.i13, label %vector.body35, !llvm.loop !223

for.body.i13:                                     ; preds = %vector.body35
  %68 = load i64, ptr %arrayidx.i8, align 8, !tbaa !147
  %conv.i9 = trunc i64 %68 to i32
  %arrayidx2.i10 = getelementptr inbounds i32, ptr %54, i64 9984
  store i32 %conv.i9, ptr %arrayidx2.i10, align 4, !tbaa !95
  %69 = load i64, ptr %arrayidx.i8.1, align 8, !tbaa !147
  %conv.i9.1 = trunc i64 %69 to i32
  %arrayidx2.i10.1 = getelementptr inbounds i32, ptr %54, i64 9985
  store i32 %conv.i9.1, ptr %arrayidx2.i10.1, align 4, !tbaa !95
  %70 = load i64, ptr %arrayidx.i8.2, align 8, !tbaa !147
  %conv.i9.2 = trunc i64 %70 to i32
  %arrayidx2.i10.2 = getelementptr inbounds i32, ptr %54, i64 9986
  store i32 %conv.i9.2, ptr %arrayidx2.i10.2, align 4, !tbaa !95
  %71 = load i64, ptr %arrayidx.i8.3, align 8, !tbaa !147
  %conv.i9.3 = trunc i64 %71 to i32
  %arrayidx2.i10.3 = getelementptr inbounds i32, ptr %54, i64 9987
  store i32 %conv.i9.3, ptr %arrayidx2.i10.3, align 4, !tbaa !95
  %72 = load i64, ptr %arrayidx.i8.4, align 8, !tbaa !147
  %conv.i9.4 = trunc i64 %72 to i32
  %arrayidx2.i10.4 = getelementptr inbounds i32, ptr %54, i64 9988
  store i32 %conv.i9.4, ptr %arrayidx2.i10.4, align 4, !tbaa !95
  %73 = load i64, ptr %arrayidx.i8.5, align 8, !tbaa !147
  %conv.i9.5 = trunc i64 %73 to i32
  %arrayidx2.i10.5 = getelementptr inbounds i32, ptr %54, i64 9989
  store i32 %conv.i9.5, ptr %arrayidx2.i10.5, align 4, !tbaa !95
  %74 = load i64, ptr %arrayidx.i8.6, align 8, !tbaa !147
  %conv.i9.6 = trunc i64 %74 to i32
  %arrayidx2.i10.6 = getelementptr inbounds i32, ptr %54, i64 9990
  store i32 %conv.i9.6, ptr %arrayidx2.i10.6, align 4, !tbaa !95
  %75 = load i64, ptr %arrayidx.i8.7, align 8, !tbaa !147
  %conv.i9.7 = trunc i64 %75 to i32
  %arrayidx2.i10.7 = getelementptr inbounds i32, ptr %54, i64 9991
  store i32 %conv.i9.7, ptr %arrayidx2.i10.7, align 4, !tbaa !95
  %76 = load i64, ptr %arrayidx.i8.8, align 8, !tbaa !147
  %conv.i9.8 = trunc i64 %76 to i32
  %arrayidx2.i10.8 = getelementptr inbounds i32, ptr %54, i64 9992
  store i32 %conv.i9.8, ptr %arrayidx2.i10.8, align 4, !tbaa !95
  %77 = load i64, ptr %arrayidx.i8.9, align 8, !tbaa !147
  %conv.i9.9 = trunc i64 %77 to i32
  %arrayidx2.i10.9 = getelementptr inbounds i32, ptr %54, i64 9993
  store i32 %conv.i9.9, ptr %arrayidx2.i10.9, align 4, !tbaa !95
  %78 = load i64, ptr %arrayidx.i8.10, align 8, !tbaa !147
  %conv.i9.10 = trunc i64 %78 to i32
  %arrayidx2.i10.10 = getelementptr inbounds i32, ptr %54, i64 9994
  store i32 %conv.i9.10, ptr %arrayidx2.i10.10, align 4, !tbaa !95
  %79 = load i64, ptr %arrayidx.i8.11, align 8, !tbaa !147
  %conv.i9.11 = trunc i64 %79 to i32
  %arrayidx2.i10.11 = getelementptr inbounds i32, ptr %54, i64 9995
  store i32 %conv.i9.11, ptr %arrayidx2.i10.11, align 4, !tbaa !95
  %80 = load i64, ptr %arrayidx.i8.12, align 8, !tbaa !147
  %conv.i9.12 = trunc i64 %80 to i32
  %arrayidx2.i10.12 = getelementptr inbounds i32, ptr %54, i64 9996
  store i32 %conv.i9.12, ptr %arrayidx2.i10.12, align 4, !tbaa !95
  %81 = load i64, ptr %arrayidx.i8.13, align 8, !tbaa !147
  %conv.i9.13 = trunc i64 %81 to i32
  %arrayidx2.i10.13 = getelementptr inbounds i32, ptr %54, i64 9997
  store i32 %conv.i9.13, ptr %arrayidx2.i10.13, align 4, !tbaa !95
  %82 = load i64, ptr %arrayidx.i8.14, align 8, !tbaa !147
  %conv.i9.14 = trunc i64 %82 to i32
  %arrayidx2.i10.14 = getelementptr inbounds i32, ptr %54, i64 9998
  store i32 %conv.i9.14, ptr %arrayidx2.i10.14, align 4, !tbaa !95
  %83 = load i64, ptr %arrayidx.i8.15, align 8, !tbaa !147
  %conv.i9.15 = trunc i64 %83 to i32
  %arrayidx2.i10.15 = getelementptr inbounds i32, ptr %54, i64 9999
  store i32 %conv.i9.15, ptr %arrayidx2.i10.15, align 4, !tbaa !95
  %dec.i.i = add i64 %__begin1.sroa.0.0144.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup60.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn133.i = phi { ptr, i32 } [ %50, %lpad17.i ], [ %52, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i113.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i113.i, label %ehcleanup62.i, label %delete.notnull.i.i114.i

delete.notnull.i.i114.i:                          ; preds = %ehcleanup60.i, %ehcleanup60.thread.i
  %.pn133.pn139.i = phi { ptr, i32 } [ %45, %ehcleanup60.thread.i ], [ %.pn133.i, %ehcleanup60.i ]
  %84 = phi ptr [ %call1.i, %ehcleanup60.thread.i ], [ %.pr.i, %ehcleanup60.i ]
  call void @_ZdaPv(ptr noundef nonnull %84) #13
  br label %ehcleanup62.i

ehcleanup62.i:                                    ; preds = %delete.notnull.i.i114.i, %ehcleanup60.i, %lpad.i
  %.pn133.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn133.i, %ehcleanup60.i ], [ %.pn133.pn139.i, %delete.notnull.i.i114.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn133.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i103.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z54benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont3.i unwind label %ehcleanup60.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i74.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i74.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  br label %for.body.i78.i

for.body.i78.i:                                   ; preds = %for.body.i78.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i75.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i76.i.4, %for.body.i78.i ]
  %arrayidx.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i75.i
  %0 = load i64, ptr %arrayidx.i.i, align 8, !tbaa !147
  %conv.i.i = trunc i64 %0 to i32
  %arrayidx2.i.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i75.i
  store i32 %conv.i.i, ptr %arrayidx2.i.i, align 4, !tbaa !95
  %indvars.iv.next.i76.i = add nuw nsw i64 %indvars.iv.i75.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i76.i
  %1 = load i64, ptr %arrayidx.i.i.1, align 8, !tbaa !147
  %conv.i.i.1 = trunc i64 %1 to i32
  %arrayidx2.i.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i76.i
  store i32 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 4, !tbaa !95
  %indvars.iv.next.i76.i.1 = add nuw nsw i64 %indvars.iv.i75.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i76.i.1
  %2 = load i64, ptr %arrayidx.i.i.2, align 8, !tbaa !147
  %conv.i.i.2 = trunc i64 %2 to i32
  %arrayidx2.i.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i76.i.1
  store i32 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 4, !tbaa !95
  %indvars.iv.next.i76.i.2 = add nuw nsw i64 %indvars.iv.i75.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i76.i.2
  %3 = load i64, ptr %arrayidx.i.i.3, align 8, !tbaa !147
  %conv.i.i.3 = trunc i64 %3 to i32
  %arrayidx2.i.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i76.i.2
  store i32 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 4, !tbaa !95
  %indvars.iv.next.i76.i.3 = add nuw nsw i64 %indvars.iv.i75.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.next.i76.i.3
  %4 = load i64, ptr %arrayidx.i.i.4, align 8, !tbaa !147
  %conv.i.i.4 = trunc i64 %4 to i32
  %arrayidx2.i.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i76.i.3
  store i32 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 4, !tbaa !95
  %indvars.iv.next.i76.i.4 = add nuw nsw i64 %indvars.iv.i75.i, 5
  %exitcond.not.i77.i.4 = icmp eq i64 %indvars.iv.next.i76.i.4, 10000
  br i1 %exitcond.not.i77.i.4, label %vector.body, label %for.body.i78.i, !llvm.loop !218

vector.body:                                      ; preds = %for.body.i78.i, %vector.body
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %for.body.i78.i ]
  %5 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <2 x i64>, ptr %5, align 8, !tbaa !147
  %6 = getelementptr inbounds i64, ptr %5, i64 2
  %wide.load27 = load <2 x i64>, ptr %6, align 8, !tbaa !147
  %7 = trunc <2 x i64> %wide.load to <2 x i32>
  %8 = trunc <2 x i64> %wide.load27 to <2 x i32>
  %9 = getelementptr inbounds i32, ptr %call1.i, i64 %index
  store <2 x i32> %7, ptr %9, align 4, !tbaa !95
  %10 = getelementptr inbounds i32, ptr %9, i64 2
  store <2 x i32> %8, ptr %10, align 4, !tbaa !95
  %index.next = or i64 %index, 4
  %11 = getelementptr inbounds i64, ptr %call.i, i64 %index.next
  %wide.load.1 = load <2 x i64>, ptr %11, align 8, !tbaa !147
  %12 = getelementptr inbounds i64, ptr %11, i64 2
  %wide.load27.1 = load <2 x i64>, ptr %12, align 8, !tbaa !147
  %13 = trunc <2 x i64> %wide.load.1 to <2 x i32>
  %14 = trunc <2 x i64> %wide.load27.1 to <2 x i32>
  %15 = getelementptr inbounds i32, ptr %call1.i, i64 %index.next
  store <2 x i32> %13, ptr %15, align 4, !tbaa !95
  %16 = getelementptr inbounds i32, ptr %15, i64 2
  store <2 x i32> %14, ptr %16, align 4, !tbaa !95
  %index.next.1 = add nuw nsw i64 %index, 8
  %17 = icmp eq i64 %index.next.1, 10000
  br i1 %17, label %for.body.i, label %vector.body, !llvm.loop !224

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i79.i.1 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i
  %18 = load i32, ptr %arrayidx.i79.i.1, align 4, !tbaa !95
  %arrayidx.i80.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i
  %19 = load i32, ptr %arrayidx.i80.i.1, align 4, !tbaa !95
  %cmp16.not.i.1 = icmp eq i32 %18, %19
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i79.i.2 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.1
  %20 = load i32, ptr %arrayidx.i79.i.2, align 4, !tbaa !95
  %arrayidx.i80.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.1
  %21 = load i32, ptr %arrayidx.i80.i.2, align 4, !tbaa !95
  %cmp16.not.i.2 = icmp eq i32 %20, %21
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i79.i.3 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.2
  %22 = load i32, ptr %arrayidx.i79.i.3, align 4, !tbaa !95
  %arrayidx.i80.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.2
  %23 = load i32, ptr %arrayidx.i80.i.3, align 4, !tbaa !95
  %cmp16.not.i.3 = icmp eq i32 %22, %23
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i79.i.4 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.3
  %24 = load i32, ptr %arrayidx.i79.i.4, align 4, !tbaa !95
  %arrayidx.i80.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.3
  %25 = load i32, ptr %arrayidx.i80.i.4, align 4, !tbaa !95
  %cmp16.not.i.4 = icmp eq i32 %24, %25
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !220

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %26 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %27 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %26, 0
  %cmp.not.i.not143147.i = icmp eq i64 %27, 0
  %cmp.not.i.not143.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not143147.i
  br i1 %cmp.not.i.not143.i, label %if.end.i.i, label %for.body48.i, !prof !42

lpad.i:                                           ; preds = %entry
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup62.i

ehcleanup60.thread.i:                             ; preds = %invoke.cont.i
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i114.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

for.body.i:                                       ; preds = %vector.body, %for.cond.i.4
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.4, %for.cond.i.4 ], [ 0, %vector.body ]
  %arrayidx.i79.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i
  %30 = load i32, ptr %arrayidx.i79.i, align 4, !tbaa !95
  %arrayidx.i80.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i
  %31 = load i32, ptr %arrayidx.i80.i, align 4, !tbaa !95
  %cmp16.not.i = icmp eq i32 %30, %31
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i32 [ %31, %for.body.i ], [ %19, %for.cond.i ], [ %21, %for.cond.i.1 ], [ %23, %for.cond.i.2 ], [ %25, %for.cond.i.3 ]
  %arrayidx.i79.i.le = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i82.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i83.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.lcssa
  %32 = load i64, ptr %arrayidx.i83.i, align 8, !tbaa !147
  %call.i84.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %32)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %33 = load i32, ptr %arrayidx.i79.i.le, align 4, !tbaa !95
  %conv.i90.i = zext i32 %33 to i64
  %call.i91.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, i64 noundef %conv.i90.i)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i94.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %conv.i97.i = zext i32 %.lcssa to i64
  %call.i98.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, i64 noundef %conv.i97.i)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i98.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %34 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

if.end.i.i:                                       ; preds = %invoke.cont53.i, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %35 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i102.i = icmp eq ptr %35, null
  br i1 %cmp.not.i102.i, label %_ZL28benchForTruncOrZextVecInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i103.i

delete.notnull.i.i103.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %35) #13
  br label %_ZL28benchForTruncOrZextVecInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

for.body48.i:                                     ; preds = %for.cond44.preheader.i, %invoke.cont53.i
  %__begin1.sroa.0.0144.i = phi i64 [ %dec.i.i, %invoke.cont53.i ], [ %27, %for.cond44.preheader.i ]
  %37 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %37) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %38 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body33

vector.body33:                                    ; preds = %vector.body33, %for.body48.i
  %index34 = phi i64 [ 0, %for.body48.i ], [ %index.next37.1, %vector.body33 ]
  %39 = getelementptr inbounds i64, ptr %call.i, i64 %index34
  %wide.load35 = load <2 x i64>, ptr %39, align 8, !tbaa !147
  %40 = getelementptr inbounds i64, ptr %39, i64 2
  %wide.load36 = load <2 x i64>, ptr %40, align 8, !tbaa !147
  %41 = trunc <2 x i64> %wide.load35 to <2 x i32>
  %42 = trunc <2 x i64> %wide.load36 to <2 x i32>
  %43 = getelementptr inbounds i32, ptr %38, i64 %index34
  store <2 x i32> %41, ptr %43, align 4, !tbaa !95
  %44 = getelementptr inbounds i32, ptr %43, i64 2
  store <2 x i32> %42, ptr %44, align 4, !tbaa !95
  %index.next37 = or i64 %index34, 4
  %45 = getelementptr inbounds i64, ptr %call.i, i64 %index.next37
  %wide.load35.1 = load <2 x i64>, ptr %45, align 8, !tbaa !147
  %46 = getelementptr inbounds i64, ptr %45, i64 2
  %wide.load36.1 = load <2 x i64>, ptr %46, align 8, !tbaa !147
  %47 = trunc <2 x i64> %wide.load35.1 to <2 x i32>
  %48 = trunc <2 x i64> %wide.load36.1 to <2 x i32>
  %49 = getelementptr inbounds i32, ptr %38, i64 %index.next37
  store <2 x i32> %47, ptr %49, align 4, !tbaa !95
  %50 = getelementptr inbounds i32, ptr %49, i64 2
  store <2 x i32> %48, ptr %50, align 4, !tbaa !95
  %index.next37.1 = add nuw nsw i64 %index34, 8
  %51 = icmp eq i64 %index.next37.1, 10000
  br i1 %51, label %invoke.cont53.i, label %vector.body33, !llvm.loop !225

invoke.cont53.i:                                  ; preds = %vector.body33
  %dec.i.i = add i64 %__begin1.sroa.0.0144.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup60.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn133.i = phi { ptr, i32 } [ %34, %lpad17.i ], [ %36, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i113.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i113.i, label %ehcleanup62.i, label %delete.notnull.i.i114.i

delete.notnull.i.i114.i:                          ; preds = %ehcleanup60.i, %ehcleanup60.thread.i
  %.pn133.pn139.i = phi { ptr, i32 } [ %29, %ehcleanup60.thread.i ], [ %.pn133.i, %ehcleanup60.i ]
  %52 = phi ptr [ %call1.i, %ehcleanup60.thread.i ], [ %.pr.i, %ehcleanup60.i ]
  call void @_ZdaPv(ptr noundef nonnull %52) #13
  br label %ehcleanup62.i

ehcleanup62.i:                                    ; preds = %delete.notnull.i.i114.i, %ehcleanup60.i, %lpad.i
  %.pn133.pn.pn.i = phi { ptr, i32 } [ %28, %lpad.i ], [ %.pn133.i, %ehcleanup60.i ], [ %.pn133.pn139.i, %delete.notnull.i.i114.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn133.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i103.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i31.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  store i32 0, ptr %distrib.i32.i, align 4, !tbaa !92
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i33.i, align 4, !tbaa !94
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i34.i
  store i32 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 4, !tbaa !95
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %arrayidx.i = getelementptr inbounds i64, ptr %call.i, i64 9984
  %arrayidx.i.1 = getelementptr inbounds i64, ptr %call.i, i64 9985
  %arrayidx.i.2 = getelementptr inbounds i64, ptr %call.i, i64 9986
  %arrayidx.i.3 = getelementptr inbounds i64, ptr %call.i, i64 9987
  %arrayidx.i.4 = getelementptr inbounds i64, ptr %call.i, i64 9988
  %arrayidx.i.5 = getelementptr inbounds i64, ptr %call.i, i64 9989
  %arrayidx.i.6 = getelementptr inbounds i64, ptr %call.i, i64 9990
  %arrayidx.i.7 = getelementptr inbounds i64, ptr %call.i, i64 9991
  %arrayidx.i.8 = getelementptr inbounds i64, ptr %call.i, i64 9992
  %arrayidx.i.9 = getelementptr inbounds i64, ptr %call.i, i64 9993
  %arrayidx.i.10 = getelementptr inbounds i64, ptr %call.i, i64 9994
  %arrayidx.i.11 = getelementptr inbounds i64, ptr %call.i, i64 9995
  %arrayidx.i.12 = getelementptr inbounds i64, ptr %call.i, i64 9996
  %arrayidx.i.13 = getelementptr inbounds i64, ptr %call.i, i64 9997
  %arrayidx.i.14 = getelementptr inbounds i64, ptr %call.i, i64 9998
  %arrayidx.i.15 = getelementptr inbounds i64, ptr %call.i, i64 9999
  br label %for.body.i

if.end.i.i:                                       ; preds = %for.body.i1, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i1
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %for.body.i1 ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next, %vector.body ]
  %6 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <8 x i64>, ptr %6, align 8, !tbaa !147
  %7 = getelementptr inbounds i64, ptr %6, i64 8
  %wide.load5 = load <8 x i64>, ptr %7, align 8, !tbaa !147
  %8 = getelementptr inbounds i64, ptr %6, i64 16
  %wide.load6 = load <8 x i64>, ptr %8, align 8, !tbaa !147
  %9 = getelementptr inbounds i64, ptr %6, i64 24
  %wide.load7 = load <8 x i64>, ptr %9, align 8, !tbaa !147
  %10 = getelementptr inbounds i32, ptr %5, i64 %index
  %wide.load8 = load <8 x i32>, ptr %10, align 4, !tbaa !95
  %11 = getelementptr inbounds i32, ptr %10, i64 8
  %wide.load9 = load <8 x i32>, ptr %11, align 4, !tbaa !95
  %12 = getelementptr inbounds i32, ptr %10, i64 16
  %wide.load10 = load <8 x i32>, ptr %12, align 4, !tbaa !95
  %13 = getelementptr inbounds i32, ptr %10, i64 24
  %wide.load11 = load <8 x i32>, ptr %13, align 4, !tbaa !95
  %14 = trunc <8 x i64> %wide.load to <8 x i32>
  %15 = trunc <8 x i64> %wide.load5 to <8 x i32>
  %16 = trunc <8 x i64> %wide.load6 to <8 x i32>
  %17 = trunc <8 x i64> %wide.load7 to <8 x i32>
  %18 = add <8 x i32> %wide.load8, %14
  %19 = add <8 x i32> %wide.load9, %15
  %20 = add <8 x i32> %wide.load10, %16
  %21 = add <8 x i32> %wide.load11, %17
  store <8 x i32> %18, ptr %10, align 4, !tbaa !95
  store <8 x i32> %19, ptr %11, align 4, !tbaa !95
  store <8 x i32> %20, ptr %12, align 4, !tbaa !95
  store <8 x i32> %21, ptr %13, align 4, !tbaa !95
  %index.next = add nuw i64 %index, 32
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1, label %vector.body, !llvm.loop !226

for.body.i1:                                      ; preds = %vector.body
  %23 = load i64, ptr %arrayidx.i, align 8, !tbaa !147
  %arrayidx2.i = getelementptr inbounds i32, ptr %5, i64 9984
  %24 = load i32, ptr %arrayidx2.i, align 4, !tbaa !95
  %25 = trunc i64 %23 to i32
  %conv3.i = add i32 %24, %25
  store i32 %conv3.i, ptr %arrayidx2.i, align 4, !tbaa !95
  %26 = load i64, ptr %arrayidx.i.1, align 8, !tbaa !147
  %arrayidx2.i.1 = getelementptr inbounds i32, ptr %5, i64 9985
  %27 = load i32, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %28 = trunc i64 %26 to i32
  %conv3.i.1 = add i32 %27, %28
  store i32 %conv3.i.1, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %29 = load i64, ptr %arrayidx.i.2, align 8, !tbaa !147
  %arrayidx2.i.2 = getelementptr inbounds i32, ptr %5, i64 9986
  %30 = load i32, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %31 = trunc i64 %29 to i32
  %conv3.i.2 = add i32 %30, %31
  store i32 %conv3.i.2, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %32 = load i64, ptr %arrayidx.i.3, align 8, !tbaa !147
  %arrayidx2.i.3 = getelementptr inbounds i32, ptr %5, i64 9987
  %33 = load i32, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %34 = trunc i64 %32 to i32
  %conv3.i.3 = add i32 %33, %34
  store i32 %conv3.i.3, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %35 = load i64, ptr %arrayidx.i.4, align 8, !tbaa !147
  %arrayidx2.i.4 = getelementptr inbounds i32, ptr %5, i64 9988
  %36 = load i32, ptr %arrayidx2.i.4, align 4, !tbaa !95
  %37 = trunc i64 %35 to i32
  %conv3.i.4 = add i32 %36, %37
  store i32 %conv3.i.4, ptr %arrayidx2.i.4, align 4, !tbaa !95
  %38 = load i64, ptr %arrayidx.i.5, align 8, !tbaa !147
  %arrayidx2.i.5 = getelementptr inbounds i32, ptr %5, i64 9989
  %39 = load i32, ptr %arrayidx2.i.5, align 4, !tbaa !95
  %40 = trunc i64 %38 to i32
  %conv3.i.5 = add i32 %39, %40
  store i32 %conv3.i.5, ptr %arrayidx2.i.5, align 4, !tbaa !95
  %41 = load i64, ptr %arrayidx.i.6, align 8, !tbaa !147
  %arrayidx2.i.6 = getelementptr inbounds i32, ptr %5, i64 9990
  %42 = load i32, ptr %arrayidx2.i.6, align 4, !tbaa !95
  %43 = trunc i64 %41 to i32
  %conv3.i.6 = add i32 %42, %43
  store i32 %conv3.i.6, ptr %arrayidx2.i.6, align 4, !tbaa !95
  %44 = load i64, ptr %arrayidx.i.7, align 8, !tbaa !147
  %arrayidx2.i.7 = getelementptr inbounds i32, ptr %5, i64 9991
  %45 = load i32, ptr %arrayidx2.i.7, align 4, !tbaa !95
  %46 = trunc i64 %44 to i32
  %conv3.i.7 = add i32 %45, %46
  store i32 %conv3.i.7, ptr %arrayidx2.i.7, align 4, !tbaa !95
  %47 = load i64, ptr %arrayidx.i.8, align 8, !tbaa !147
  %arrayidx2.i.8 = getelementptr inbounds i32, ptr %5, i64 9992
  %48 = load i32, ptr %arrayidx2.i.8, align 4, !tbaa !95
  %49 = trunc i64 %47 to i32
  %conv3.i.8 = add i32 %48, %49
  store i32 %conv3.i.8, ptr %arrayidx2.i.8, align 4, !tbaa !95
  %50 = load i64, ptr %arrayidx.i.9, align 8, !tbaa !147
  %arrayidx2.i.9 = getelementptr inbounds i32, ptr %5, i64 9993
  %51 = load i32, ptr %arrayidx2.i.9, align 4, !tbaa !95
  %52 = trunc i64 %50 to i32
  %conv3.i.9 = add i32 %51, %52
  store i32 %conv3.i.9, ptr %arrayidx2.i.9, align 4, !tbaa !95
  %53 = load i64, ptr %arrayidx.i.10, align 8, !tbaa !147
  %arrayidx2.i.10 = getelementptr inbounds i32, ptr %5, i64 9994
  %54 = load i32, ptr %arrayidx2.i.10, align 4, !tbaa !95
  %55 = trunc i64 %53 to i32
  %conv3.i.10 = add i32 %54, %55
  store i32 %conv3.i.10, ptr %arrayidx2.i.10, align 4, !tbaa !95
  %56 = load i64, ptr %arrayidx.i.11, align 8, !tbaa !147
  %arrayidx2.i.11 = getelementptr inbounds i32, ptr %5, i64 9995
  %57 = load i32, ptr %arrayidx2.i.11, align 4, !tbaa !95
  %58 = trunc i64 %56 to i32
  %conv3.i.11 = add i32 %57, %58
  store i32 %conv3.i.11, ptr %arrayidx2.i.11, align 4, !tbaa !95
  %59 = load i64, ptr %arrayidx.i.12, align 8, !tbaa !147
  %arrayidx2.i.12 = getelementptr inbounds i32, ptr %5, i64 9996
  %60 = load i32, ptr %arrayidx2.i.12, align 4, !tbaa !95
  %61 = trunc i64 %59 to i32
  %conv3.i.12 = add i32 %60, %61
  store i32 %conv3.i.12, ptr %arrayidx2.i.12, align 4, !tbaa !95
  %62 = load i64, ptr %arrayidx.i.13, align 8, !tbaa !147
  %arrayidx2.i.13 = getelementptr inbounds i32, ptr %5, i64 9997
  %63 = load i32, ptr %arrayidx2.i.13, align 4, !tbaa !95
  %64 = trunc i64 %62 to i32
  %conv3.i.13 = add i32 %63, %64
  store i32 %conv3.i.13, ptr %arrayidx2.i.13, align 4, !tbaa !95
  %65 = load i64, ptr %arrayidx.i.14, align 8, !tbaa !147
  %arrayidx2.i.14 = getelementptr inbounds i32, ptr %5, i64 9998
  %66 = load i32, ptr %arrayidx2.i.14, align 4, !tbaa !95
  %67 = trunc i64 %65 to i32
  %conv3.i.14 = add i32 %66, %67
  store i32 %conv3.i.14, ptr %arrayidx2.i.14, align 4, !tbaa !95
  %68 = load i64, ptr %arrayidx.i.15, align 8, !tbaa !147
  %arrayidx2.i.15 = getelementptr inbounds i32, ptr %5, i64 9999
  %69 = load i32, ptr %arrayidx2.i.15, align 4, !tbaa !95
  %70 = trunc i64 %68 to i32
  %conv3.i.15 = add i32 %69, %70
  store i32 %conv3.i.15, ptr %arrayidx2.i.15, align 4, !tbaa !95
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %71 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %71, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %72 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %71, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i31.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  store i32 0, ptr %distrib.i32.i, align 4, !tbaa !92
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i33.i, align 4, !tbaa !94
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i34.i
  store i32 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 4, !tbaa !95
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %arrayidx.i = getelementptr inbounds i64, ptr %call.i, i64 9984
  %arrayidx.i.1 = getelementptr inbounds i64, ptr %call.i, i64 9985
  %arrayidx.i.2 = getelementptr inbounds i64, ptr %call.i, i64 9986
  %arrayidx.i.3 = getelementptr inbounds i64, ptr %call.i, i64 9987
  %arrayidx.i.4 = getelementptr inbounds i64, ptr %call.i, i64 9988
  %arrayidx.i.5 = getelementptr inbounds i64, ptr %call.i, i64 9989
  %arrayidx.i.6 = getelementptr inbounds i64, ptr %call.i, i64 9990
  %arrayidx.i.7 = getelementptr inbounds i64, ptr %call.i, i64 9991
  %arrayidx.i.8 = getelementptr inbounds i64, ptr %call.i, i64 9992
  %arrayidx.i.9 = getelementptr inbounds i64, ptr %call.i, i64 9993
  %arrayidx.i.10 = getelementptr inbounds i64, ptr %call.i, i64 9994
  %arrayidx.i.11 = getelementptr inbounds i64, ptr %call.i, i64 9995
  %arrayidx.i.12 = getelementptr inbounds i64, ptr %call.i, i64 9996
  %arrayidx.i.13 = getelementptr inbounds i64, ptr %call.i, i64 9997
  %arrayidx.i.14 = getelementptr inbounds i64, ptr %call.i, i64 9998
  %arrayidx.i.15 = getelementptr inbounds i64, ptr %call.i, i64 9999
  br label %for.body.i

if.end.i.i:                                       ; preds = %for.body.i1, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i1
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %for.body.i1 ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next, %vector.body ]
  %6 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <16 x i64>, ptr %6, align 8, !tbaa !147
  %7 = getelementptr inbounds i64, ptr %6, i64 16
  %wide.load5 = load <16 x i64>, ptr %7, align 8, !tbaa !147
  %8 = getelementptr inbounds i64, ptr %6, i64 32
  %wide.load6 = load <16 x i64>, ptr %8, align 8, !tbaa !147
  %9 = getelementptr inbounds i64, ptr %6, i64 48
  %wide.load7 = load <16 x i64>, ptr %9, align 8, !tbaa !147
  %10 = getelementptr inbounds i32, ptr %5, i64 %index
  %wide.load8 = load <16 x i32>, ptr %10, align 4, !tbaa !95
  %11 = getelementptr inbounds i32, ptr %10, i64 16
  %wide.load9 = load <16 x i32>, ptr %11, align 4, !tbaa !95
  %12 = getelementptr inbounds i32, ptr %10, i64 32
  %wide.load10 = load <16 x i32>, ptr %12, align 4, !tbaa !95
  %13 = getelementptr inbounds i32, ptr %10, i64 48
  %wide.load11 = load <16 x i32>, ptr %13, align 4, !tbaa !95
  %14 = trunc <16 x i64> %wide.load to <16 x i32>
  %15 = trunc <16 x i64> %wide.load5 to <16 x i32>
  %16 = trunc <16 x i64> %wide.load6 to <16 x i32>
  %17 = trunc <16 x i64> %wide.load7 to <16 x i32>
  %18 = add <16 x i32> %wide.load8, %14
  %19 = add <16 x i32> %wide.load9, %15
  %20 = add <16 x i32> %wide.load10, %16
  %21 = add <16 x i32> %wide.load11, %17
  store <16 x i32> %18, ptr %10, align 4, !tbaa !95
  store <16 x i32> %19, ptr %11, align 4, !tbaa !95
  store <16 x i32> %20, ptr %12, align 4, !tbaa !95
  store <16 x i32> %21, ptr %13, align 4, !tbaa !95
  %index.next = add nuw i64 %index, 64
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1, label %vector.body, !llvm.loop !227

for.body.i1:                                      ; preds = %vector.body
  %23 = load i64, ptr %arrayidx.i, align 8, !tbaa !147
  %arrayidx2.i = getelementptr inbounds i32, ptr %5, i64 9984
  %24 = load i32, ptr %arrayidx2.i, align 4, !tbaa !95
  %25 = trunc i64 %23 to i32
  %conv3.i = add i32 %24, %25
  store i32 %conv3.i, ptr %arrayidx2.i, align 4, !tbaa !95
  %26 = load i64, ptr %arrayidx.i.1, align 8, !tbaa !147
  %arrayidx2.i.1 = getelementptr inbounds i32, ptr %5, i64 9985
  %27 = load i32, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %28 = trunc i64 %26 to i32
  %conv3.i.1 = add i32 %27, %28
  store i32 %conv3.i.1, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %29 = load i64, ptr %arrayidx.i.2, align 8, !tbaa !147
  %arrayidx2.i.2 = getelementptr inbounds i32, ptr %5, i64 9986
  %30 = load i32, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %31 = trunc i64 %29 to i32
  %conv3.i.2 = add i32 %30, %31
  store i32 %conv3.i.2, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %32 = load i64, ptr %arrayidx.i.3, align 8, !tbaa !147
  %arrayidx2.i.3 = getelementptr inbounds i32, ptr %5, i64 9987
  %33 = load i32, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %34 = trunc i64 %32 to i32
  %conv3.i.3 = add i32 %33, %34
  store i32 %conv3.i.3, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %35 = load i64, ptr %arrayidx.i.4, align 8, !tbaa !147
  %arrayidx2.i.4 = getelementptr inbounds i32, ptr %5, i64 9988
  %36 = load i32, ptr %arrayidx2.i.4, align 4, !tbaa !95
  %37 = trunc i64 %35 to i32
  %conv3.i.4 = add i32 %36, %37
  store i32 %conv3.i.4, ptr %arrayidx2.i.4, align 4, !tbaa !95
  %38 = load i64, ptr %arrayidx.i.5, align 8, !tbaa !147
  %arrayidx2.i.5 = getelementptr inbounds i32, ptr %5, i64 9989
  %39 = load i32, ptr %arrayidx2.i.5, align 4, !tbaa !95
  %40 = trunc i64 %38 to i32
  %conv3.i.5 = add i32 %39, %40
  store i32 %conv3.i.5, ptr %arrayidx2.i.5, align 4, !tbaa !95
  %41 = load i64, ptr %arrayidx.i.6, align 8, !tbaa !147
  %arrayidx2.i.6 = getelementptr inbounds i32, ptr %5, i64 9990
  %42 = load i32, ptr %arrayidx2.i.6, align 4, !tbaa !95
  %43 = trunc i64 %41 to i32
  %conv3.i.6 = add i32 %42, %43
  store i32 %conv3.i.6, ptr %arrayidx2.i.6, align 4, !tbaa !95
  %44 = load i64, ptr %arrayidx.i.7, align 8, !tbaa !147
  %arrayidx2.i.7 = getelementptr inbounds i32, ptr %5, i64 9991
  %45 = load i32, ptr %arrayidx2.i.7, align 4, !tbaa !95
  %46 = trunc i64 %44 to i32
  %conv3.i.7 = add i32 %45, %46
  store i32 %conv3.i.7, ptr %arrayidx2.i.7, align 4, !tbaa !95
  %47 = load i64, ptr %arrayidx.i.8, align 8, !tbaa !147
  %arrayidx2.i.8 = getelementptr inbounds i32, ptr %5, i64 9992
  %48 = load i32, ptr %arrayidx2.i.8, align 4, !tbaa !95
  %49 = trunc i64 %47 to i32
  %conv3.i.8 = add i32 %48, %49
  store i32 %conv3.i.8, ptr %arrayidx2.i.8, align 4, !tbaa !95
  %50 = load i64, ptr %arrayidx.i.9, align 8, !tbaa !147
  %arrayidx2.i.9 = getelementptr inbounds i32, ptr %5, i64 9993
  %51 = load i32, ptr %arrayidx2.i.9, align 4, !tbaa !95
  %52 = trunc i64 %50 to i32
  %conv3.i.9 = add i32 %51, %52
  store i32 %conv3.i.9, ptr %arrayidx2.i.9, align 4, !tbaa !95
  %53 = load i64, ptr %arrayidx.i.10, align 8, !tbaa !147
  %arrayidx2.i.10 = getelementptr inbounds i32, ptr %5, i64 9994
  %54 = load i32, ptr %arrayidx2.i.10, align 4, !tbaa !95
  %55 = trunc i64 %53 to i32
  %conv3.i.10 = add i32 %54, %55
  store i32 %conv3.i.10, ptr %arrayidx2.i.10, align 4, !tbaa !95
  %56 = load i64, ptr %arrayidx.i.11, align 8, !tbaa !147
  %arrayidx2.i.11 = getelementptr inbounds i32, ptr %5, i64 9995
  %57 = load i32, ptr %arrayidx2.i.11, align 4, !tbaa !95
  %58 = trunc i64 %56 to i32
  %conv3.i.11 = add i32 %57, %58
  store i32 %conv3.i.11, ptr %arrayidx2.i.11, align 4, !tbaa !95
  %59 = load i64, ptr %arrayidx.i.12, align 8, !tbaa !147
  %arrayidx2.i.12 = getelementptr inbounds i32, ptr %5, i64 9996
  %60 = load i32, ptr %arrayidx2.i.12, align 4, !tbaa !95
  %61 = trunc i64 %59 to i32
  %conv3.i.12 = add i32 %60, %61
  store i32 %conv3.i.12, ptr %arrayidx2.i.12, align 4, !tbaa !95
  %62 = load i64, ptr %arrayidx.i.13, align 8, !tbaa !147
  %arrayidx2.i.13 = getelementptr inbounds i32, ptr %5, i64 9997
  %63 = load i32, ptr %arrayidx2.i.13, align 4, !tbaa !95
  %64 = trunc i64 %62 to i32
  %conv3.i.13 = add i32 %63, %64
  store i32 %conv3.i.13, ptr %arrayidx2.i.13, align 4, !tbaa !95
  %65 = load i64, ptr %arrayidx.i.14, align 8, !tbaa !147
  %arrayidx2.i.14 = getelementptr inbounds i32, ptr %5, i64 9998
  %66 = load i32, ptr %arrayidx2.i.14, align 4, !tbaa !95
  %67 = trunc i64 %65 to i32
  %conv3.i.14 = add i32 %66, %67
  store i32 %conv3.i.14, ptr %arrayidx2.i.14, align 4, !tbaa !95
  %68 = load i64, ptr %arrayidx.i.15, align 8, !tbaa !147
  %arrayidx2.i.15 = getelementptr inbounds i32, ptr %5, i64 9999
  %69 = load i32, ptr %arrayidx2.i.15, align 4, !tbaa !95
  %70 = trunc i64 %68 to i32
  %conv3.i.15 = add i32 %69, %70
  store i32 %conv3.i.15, ptr %arrayidx2.i.15, align 4, !tbaa !95
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %71 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %71, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %72 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %71, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i.i) #11
  store i64 0, ptr %distrib.i.i, align 8, !tbaa !144
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i.i, align 8, !tbaa !146
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i64, ptr %call.i, i64 %indvars.iv.i.i
  store i64 %call.i.i31.i, ptr %arrayidx.i.i.i, align 8, !tbaa !147
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  store i32 0, ptr %distrib.i32.i, align 4, !tbaa !92
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i33.i, align 4, !tbaa !94
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i34.i
  store i32 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 4, !tbaa !95
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i, !prof !42

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.cond.preheader.i, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %1, %for.cond.preheader.i ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next.1, %vector.body ]
  %6 = getelementptr inbounds i64, ptr %call.i, i64 %index
  %wide.load = load <2 x i64>, ptr %6, align 8, !tbaa !147
  %7 = getelementptr inbounds i64, ptr %6, i64 2
  %wide.load5 = load <2 x i64>, ptr %7, align 8, !tbaa !147
  %8 = getelementptr inbounds i32, ptr %5, i64 %index
  %wide.load6 = load <2 x i32>, ptr %8, align 4, !tbaa !95
  %9 = getelementptr inbounds i32, ptr %8, i64 2
  %wide.load7 = load <2 x i32>, ptr %9, align 4, !tbaa !95
  %10 = trunc <2 x i64> %wide.load to <2 x i32>
  %11 = trunc <2 x i64> %wide.load5 to <2 x i32>
  %12 = add <2 x i32> %wide.load6, %10
  %13 = add <2 x i32> %wide.load7, %11
  store <2 x i32> %12, ptr %8, align 4, !tbaa !95
  store <2 x i32> %13, ptr %9, align 4, !tbaa !95
  %index.next = or i64 %index, 4
  %14 = getelementptr inbounds i64, ptr %call.i, i64 %index.next
  %wide.load.1 = load <2 x i64>, ptr %14, align 8, !tbaa !147
  %15 = getelementptr inbounds i64, ptr %14, i64 2
  %wide.load5.1 = load <2 x i64>, ptr %15, align 8, !tbaa !147
  %16 = getelementptr inbounds i32, ptr %5, i64 %index.next
  %wide.load6.1 = load <2 x i32>, ptr %16, align 4, !tbaa !95
  %17 = getelementptr inbounds i32, ptr %16, i64 2
  %wide.load7.1 = load <2 x i32>, ptr %17, align 4, !tbaa !95
  %18 = trunc <2 x i64> %wide.load.1 to <2 x i32>
  %19 = trunc <2 x i64> %wide.load5.1 to <2 x i32>
  %20 = add <2 x i32> %wide.load6.1, %18
  %21 = add <2 x i32> %wide.load7.1, %19
  store <2 x i32> %20, ptr %16, align 4, !tbaa !95
  store <2 x i32> %21, ptr %17, align 4, !tbaa !95
  %index.next.1 = add nuw nsw i64 %index, 8
  %22 = icmp eq i64 %index.next.1, 10000
  br i1 %22, label %invoke.cont19.i, label %vector.body, !llvm.loop !228

invoke.cont19.i:                                  ; preds = %vector.body
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %23 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %23, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %24 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %24) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %23, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopImjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont3.i unwind label %ehcleanup61.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i75.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i75.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  br label %for.body.i79.i

for.body.i79.i:                                   ; preds = %for.body.i79.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i76.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i77.i.4, %for.body.i79.i ]
  %arrayidx.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i76.i
  %0 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !16
  %conv.i.i = zext i8 %0 to i16
  %arrayidx2.i.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i76.i
  store i16 %conv.i.i, ptr %arrayidx2.i.i, align 2, !tbaa !13
  %indvars.iv.next.i77.i = add nuw nsw i64 %indvars.iv.i76.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i77.i
  %1 = load i8, ptr %arrayidx.i.i.1, align 1, !tbaa !16
  %conv.i.i.1 = zext i8 %1 to i16
  %arrayidx2.i.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i
  store i16 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 2, !tbaa !13
  %indvars.iv.next.i77.i.1 = add nuw nsw i64 %indvars.iv.i76.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i77.i.1
  %2 = load i8, ptr %arrayidx.i.i.2, align 1, !tbaa !16
  %conv.i.i.2 = zext i8 %2 to i16
  %arrayidx2.i.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.1
  store i16 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 2, !tbaa !13
  %indvars.iv.next.i77.i.2 = add nuw nsw i64 %indvars.iv.i76.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i77.i.2
  %3 = load i8, ptr %arrayidx.i.i.3, align 1, !tbaa !16
  %conv.i.i.3 = zext i8 %3 to i16
  %arrayidx2.i.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.2
  store i16 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 2, !tbaa !13
  %indvars.iv.next.i77.i.3 = add nuw nsw i64 %indvars.iv.i76.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i77.i.3
  %4 = load i8, ptr %arrayidx.i.i.4, align 1, !tbaa !16
  %conv.i.i.4 = zext i8 %4 to i16
  %arrayidx2.i.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.3
  store i16 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 2, !tbaa !13
  %indvars.iv.next.i77.i.4 = add nuw nsw i64 %indvars.iv.i76.i, 5
  %exitcond.not.i78.i.4 = icmp eq i64 %indvars.iv.next.i77.i.4, 10000
  br i1 %exitcond.not.i78.i.4, label %vector.body, label %for.body.i79.i, !llvm.loop !229

vector.body:                                      ; preds = %for.body.i79.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i79.i ]
  %5 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <8 x i8>, ptr %5, align 1, !tbaa !16
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  %wide.load27 = load <8 x i8>, ptr %6, align 1, !tbaa !16
  %7 = getelementptr inbounds i8, ptr %5, i64 16
  %wide.load28 = load <8 x i8>, ptr %7, align 1, !tbaa !16
  %8 = getelementptr inbounds i8, ptr %5, i64 24
  %wide.load29 = load <8 x i8>, ptr %8, align 1, !tbaa !16
  %9 = zext <8 x i8> %wide.load to <8 x i16>
  %10 = zext <8 x i8> %wide.load27 to <8 x i16>
  %11 = zext <8 x i8> %wide.load28 to <8 x i16>
  %12 = zext <8 x i8> %wide.load29 to <8 x i16>
  %13 = getelementptr inbounds i16, ptr %call1.i, i64 %index
  store <8 x i16> %9, ptr %13, align 2, !tbaa !13
  %14 = getelementptr inbounds i16, ptr %13, i64 8
  store <8 x i16> %10, ptr %14, align 2, !tbaa !13
  %15 = getelementptr inbounds i16, ptr %13, i64 16
  store <8 x i16> %11, ptr %15, align 2, !tbaa !13
  %16 = getelementptr inbounds i16, ptr %13, i64 24
  store <8 x i16> %12, ptr %16, align 2, !tbaa !13
  %index.next = add nuw i64 %index, 32
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !230

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i, i64 9984
  %18 = load i8, ptr %arrayidx.i, align 1, !tbaa !16
  %conv.i = zext i8 %18 to i16
  %arrayidx2.i = getelementptr inbounds i16, ptr %call1.i, i64 9984
  store i16 %conv.i, ptr %arrayidx2.i, align 2, !tbaa !13
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %call.i, i64 9985
  %19 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !16
  %conv.i.1 = zext i8 %19 to i16
  %arrayidx2.i.1 = getelementptr inbounds i16, ptr %call1.i, i64 9985
  store i16 %conv.i.1, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %call.i, i64 9986
  %20 = load i8, ptr %arrayidx.i.2, align 1, !tbaa !16
  %conv.i.2 = zext i8 %20 to i16
  %arrayidx2.i.2 = getelementptr inbounds i16, ptr %call1.i, i64 9986
  store i16 %conv.i.2, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %call.i, i64 9987
  %21 = load i8, ptr %arrayidx.i.3, align 1, !tbaa !16
  %conv.i.3 = zext i8 %21 to i16
  %arrayidx2.i.3 = getelementptr inbounds i16, ptr %call1.i, i64 9987
  store i16 %conv.i.3, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %arrayidx.i.4 = getelementptr inbounds i8, ptr %call.i, i64 9988
  %22 = load i8, ptr %arrayidx.i.4, align 1, !tbaa !16
  %conv.i.4 = zext i8 %22 to i16
  %arrayidx2.i.4 = getelementptr inbounds i16, ptr %call1.i, i64 9988
  store i16 %conv.i.4, ptr %arrayidx2.i.4, align 2, !tbaa !13
  %arrayidx.i.5 = getelementptr inbounds i8, ptr %call.i, i64 9989
  %23 = load i8, ptr %arrayidx.i.5, align 1, !tbaa !16
  %conv.i.5 = zext i8 %23 to i16
  %arrayidx2.i.5 = getelementptr inbounds i16, ptr %call1.i, i64 9989
  store i16 %conv.i.5, ptr %arrayidx2.i.5, align 2, !tbaa !13
  %arrayidx.i.6 = getelementptr inbounds i8, ptr %call.i, i64 9990
  %24 = load i8, ptr %arrayidx.i.6, align 1, !tbaa !16
  %conv.i.6 = zext i8 %24 to i16
  %arrayidx2.i.6 = getelementptr inbounds i16, ptr %call1.i, i64 9990
  store i16 %conv.i.6, ptr %arrayidx2.i.6, align 2, !tbaa !13
  %arrayidx.i.7 = getelementptr inbounds i8, ptr %call.i, i64 9991
  %25 = load i8, ptr %arrayidx.i.7, align 1, !tbaa !16
  %conv.i.7 = zext i8 %25 to i16
  %arrayidx2.i.7 = getelementptr inbounds i16, ptr %call1.i, i64 9991
  store i16 %conv.i.7, ptr %arrayidx2.i.7, align 2, !tbaa !13
  %arrayidx.i.8 = getelementptr inbounds i8, ptr %call.i, i64 9992
  %26 = load i8, ptr %arrayidx.i.8, align 1, !tbaa !16
  %conv.i.8 = zext i8 %26 to i16
  %arrayidx2.i.8 = getelementptr inbounds i16, ptr %call1.i, i64 9992
  store i16 %conv.i.8, ptr %arrayidx2.i.8, align 2, !tbaa !13
  %arrayidx.i.9 = getelementptr inbounds i8, ptr %call.i, i64 9993
  %27 = load i8, ptr %arrayidx.i.9, align 1, !tbaa !16
  %conv.i.9 = zext i8 %27 to i16
  %arrayidx2.i.9 = getelementptr inbounds i16, ptr %call1.i, i64 9993
  store i16 %conv.i.9, ptr %arrayidx2.i.9, align 2, !tbaa !13
  %arrayidx.i.10 = getelementptr inbounds i8, ptr %call.i, i64 9994
  %28 = load i8, ptr %arrayidx.i.10, align 1, !tbaa !16
  %conv.i.10 = zext i8 %28 to i16
  %arrayidx2.i.10 = getelementptr inbounds i16, ptr %call1.i, i64 9994
  store i16 %conv.i.10, ptr %arrayidx2.i.10, align 2, !tbaa !13
  %arrayidx.i.11 = getelementptr inbounds i8, ptr %call.i, i64 9995
  %29 = load i8, ptr %arrayidx.i.11, align 1, !tbaa !16
  %conv.i.11 = zext i8 %29 to i16
  %arrayidx2.i.11 = getelementptr inbounds i16, ptr %call1.i, i64 9995
  store i16 %conv.i.11, ptr %arrayidx2.i.11, align 2, !tbaa !13
  %arrayidx.i.12 = getelementptr inbounds i8, ptr %call.i, i64 9996
  %30 = load i8, ptr %arrayidx.i.12, align 1, !tbaa !16
  %conv.i.12 = zext i8 %30 to i16
  %arrayidx2.i.12 = getelementptr inbounds i16, ptr %call1.i, i64 9996
  store i16 %conv.i.12, ptr %arrayidx2.i.12, align 2, !tbaa !13
  %arrayidx.i.13 = getelementptr inbounds i8, ptr %call.i, i64 9997
  %31 = load i8, ptr %arrayidx.i.13, align 1, !tbaa !16
  %conv.i.13 = zext i8 %31 to i16
  %arrayidx2.i.13 = getelementptr inbounds i16, ptr %call1.i, i64 9997
  store i16 %conv.i.13, ptr %arrayidx2.i.13, align 2, !tbaa !13
  %arrayidx.i.14 = getelementptr inbounds i8, ptr %call.i, i64 9998
  %32 = load i8, ptr %arrayidx.i.14, align 1, !tbaa !16
  %conv.i.14 = zext i8 %32 to i16
  %arrayidx2.i.14 = getelementptr inbounds i16, ptr %call1.i, i64 9998
  store i16 %conv.i.14, ptr %arrayidx2.i.14, align 2, !tbaa !13
  %arrayidx.i.15 = getelementptr inbounds i8, ptr %call.i, i64 9999
  %33 = load i8, ptr %arrayidx.i.15, align 1, !tbaa !16
  %conv.i.15 = zext i8 %33 to i16
  %arrayidx2.i.15 = getelementptr inbounds i16, ptr %call1.i, i64 9999
  store i16 %conv.i.15, ptr %arrayidx2.i.15, align 2, !tbaa !13
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i80.i.1 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i16, ptr %arrayidx.i80.i.1, align 2, !tbaa !13
  %arrayidx.i81.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i16, ptr %arrayidx.i81.i.1, align 2, !tbaa !13
  %cmp18.not.i.1 = icmp eq i16 %34, %35
  br i1 %cmp18.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i80.i.2 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i16, ptr %arrayidx.i80.i.2, align 2, !tbaa !13
  %arrayidx.i81.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i16, ptr %arrayidx.i81.i.2, align 2, !tbaa !13
  %cmp18.not.i.2 = icmp eq i16 %36, %37
  br i1 %cmp18.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i80.i.3 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i16, ptr %arrayidx.i80.i.3, align 2, !tbaa !13
  %arrayidx.i81.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i16, ptr %arrayidx.i81.i.3, align 2, !tbaa !13
  %cmp18.not.i.3 = icmp eq i16 %38, %39
  br i1 %cmp18.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i80.i.4 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i16, ptr %arrayidx.i80.i.4, align 2, !tbaa !13
  %arrayidx.i81.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i16, ptr %arrayidx.i81.i.4, align 2, !tbaa !13
  %cmp18.not.i.4 = icmp eq i16 %40, %41
  br i1 %cmp18.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !231

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond46.preheader.i unwind label %lpad43.i

for.cond46.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not143147.i = icmp eq i64 %43, 0
  %cmp.not.i.not143.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not143147.i
  br i1 %cmp.not.i.not143.i, label %if.end.i.i, label %for.body50.i.preheader, !prof !42

for.body50.i.preheader:                           ; preds = %for.cond46.preheader.i
  %scevgep30 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body50.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup63.i

ehcleanup61.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i114.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i80.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i16, ptr %arrayidx.i80.i, align 2, !tbaa !13
  %arrayidx.i81.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i16, ptr %arrayidx.i81.i, align 2, !tbaa !13
  %cmp18.not.i = icmp eq i16 %46, %47
  br i1 %cmp18.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i16 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i80.i.le = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i83.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont20.i unwind label %lpad19.i

invoke.cont20.i:                                  ; preds = %if.then.i
  %arrayidx.i84.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i8, ptr %arrayidx.i84.i, align 1, !tbaa !16
  %call25.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %48)
          to label %invoke.cont24.i unwind label %lpad19.i

invoke.cont24.i:                                  ; preds = %invoke.cont20.i
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call25.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont26.i unwind label %lpad19.i

invoke.cont26.i:                                  ; preds = %invoke.cont24.i
  %49 = load i16, ptr %arrayidx.i80.i.le, align 2, !tbaa !13
  %conv.i90.i = zext i16 %49 to i64
  %call.i91.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call25.i, i64 noundef %conv.i90.i)
          to label %invoke.cont30.i unwind label %lpad19.i

invoke.cont30.i:                                  ; preds = %invoke.cont26.i
  %call1.i94.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont32.i unwind label %lpad19.i

invoke.cont32.i:                                  ; preds = %invoke.cont30.i
  %conv.i97.i = zext i16 %.lcssa to i64
  %call.i98.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, i64 noundef %conv.i97.i)
          to label %invoke.cont36.i unwind label %lpad19.i

invoke.cont36.i:                                  ; preds = %invoke.cont32.i
  %call39.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i98.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont38.i unwind label %lpad19.i

invoke.cont38.i:                                  ; preds = %invoke.cont36.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad19.i:                                         ; preds = %invoke.cont36.i, %invoke.cont32.i, %invoke.cont30.i, %invoke.cont26.i, %invoke.cont24.i, %invoke.cont20.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

if.end.i.i:                                       ; preds = %invoke.cont54.i, %for.cond46.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad43.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i102.i = icmp eq ptr %51, null
  br i1 %cmp.not.i102.i, label %_ZL28benchForTruncOrZextVecInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i103.i

delete.notnull.i.i103.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad43.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

for.body50.i:                                     ; preds = %for.body50.i.preheader, %invoke.cont54.i
  %__begin1.sroa.0.0144.i = phi i64 [ %dec.i.i, %invoke.cont54.i ], [ %43, %for.body50.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %54, i64 20000
  %bound0 = icmp ult ptr %54, %scevgep30
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13.preheader, label %vector.body36

vector.body36:                                    ; preds = %for.body50.i, %vector.body36
  %index37 = phi i64 [ %index.next42, %vector.body36 ], [ 0, %for.body50.i ]
  %55 = getelementptr inbounds i8, ptr %call.i, i64 %index37
  %wide.load38 = load <8 x i8>, ptr %55, align 1, !tbaa !16, !alias.scope !232
  %56 = getelementptr inbounds i8, ptr %55, i64 8
  %wide.load39 = load <8 x i8>, ptr %56, align 1, !tbaa !16, !alias.scope !232
  %57 = getelementptr inbounds i8, ptr %55, i64 16
  %wide.load40 = load <8 x i8>, ptr %57, align 1, !tbaa !16, !alias.scope !232
  %58 = getelementptr inbounds i8, ptr %55, i64 24
  %wide.load41 = load <8 x i8>, ptr %58, align 1, !tbaa !16, !alias.scope !232
  %59 = zext <8 x i8> %wide.load38 to <8 x i16>
  %60 = zext <8 x i8> %wide.load39 to <8 x i16>
  %61 = zext <8 x i8> %wide.load40 to <8 x i16>
  %62 = zext <8 x i8> %wide.load41 to <8 x i16>
  %63 = getelementptr inbounds i16, ptr %54, i64 %index37
  store <8 x i16> %59, ptr %63, align 2, !tbaa !13, !alias.scope !235, !noalias !232
  %64 = getelementptr inbounds i16, ptr %63, i64 8
  store <8 x i16> %60, ptr %64, align 2, !tbaa !13, !alias.scope !235, !noalias !232
  %65 = getelementptr inbounds i16, ptr %63, i64 16
  store <8 x i16> %61, ptr %65, align 2, !tbaa !13, !alias.scope !235, !noalias !232
  %66 = getelementptr inbounds i16, ptr %63, i64 24
  store <8 x i16> %62, ptr %66, align 2, !tbaa !13, !alias.scope !235, !noalias !232
  %index.next42 = add nuw i64 %index37, 32
  %67 = icmp eq i64 %index.next42, 9984
  br i1 %67, label %for.body.i13.preheader, label %vector.body36, !llvm.loop !237

for.body.i13.preheader:                           ; preds = %vector.body36, %for.body50.i
  %indvars.iv.i7.ph = phi i64 [ 0, %for.body50.i ], [ 9984, %vector.body36 ]
  br label %for.body.i13

for.body.i13:                                     ; preds = %for.body.i13, %for.body.i13.preheader
  %indvars.iv.i7 = phi i64 [ %indvars.iv.i7.ph, %for.body.i13.preheader ], [ %indvars.iv.next.i11.3, %for.body.i13 ]
  %arrayidx.i8 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i7
  %68 = load i8, ptr %arrayidx.i8, align 1, !tbaa !16
  %conv.i9 = zext i8 %68 to i16
  %arrayidx2.i10 = getelementptr inbounds i16, ptr %54, i64 %indvars.iv.i7
  store i16 %conv.i9, ptr %arrayidx2.i10, align 2, !tbaa !13
  %indvars.iv.next.i11 = or i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11
  %69 = load i8, ptr %arrayidx.i8.1, align 1, !tbaa !16
  %conv.i9.1 = zext i8 %69 to i16
  %arrayidx2.i10.1 = getelementptr inbounds i16, ptr %54, i64 %indvars.iv.next.i11
  store i16 %conv.i9.1, ptr %arrayidx2.i10.1, align 2, !tbaa !13
  %indvars.iv.next.i11.1 = or i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.1
  %70 = load i8, ptr %arrayidx.i8.2, align 1, !tbaa !16
  %conv.i9.2 = zext i8 %70 to i16
  %arrayidx2.i10.2 = getelementptr inbounds i16, ptr %54, i64 %indvars.iv.next.i11.1
  store i16 %conv.i9.2, ptr %arrayidx2.i10.2, align 2, !tbaa !13
  %indvars.iv.next.i11.2 = or i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.2
  %71 = load i8, ptr %arrayidx.i8.3, align 1, !tbaa !16
  %conv.i9.3 = zext i8 %71 to i16
  %arrayidx2.i10.3 = getelementptr inbounds i16, ptr %54, i64 %indvars.iv.next.i11.2
  store i16 %conv.i9.3, ptr %arrayidx2.i10.3, align 2, !tbaa !13
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %exitcond.not.i12.3 = icmp eq i64 %indvars.iv.next.i11.3, 10000
  br i1 %exitcond.not.i12.3, label %invoke.cont54.i, label %for.body.i13, !llvm.loop !238

invoke.cont54.i:                                  ; preds = %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0144.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body50.i, !prof !42

ehcleanup61.i:                                    ; preds = %lpad43.i, %lpad19.i, %lpad5.loopexit.i
  %.pn133.i = phi { ptr, i32 } [ %50, %lpad19.i ], [ %52, %lpad43.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i113.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i113.i, label %ehcleanup63.i, label %delete.notnull.i.i114.i

delete.notnull.i.i114.i:                          ; preds = %ehcleanup61.i, %ehcleanup61.thread.i
  %.pn133.pn139.i = phi { ptr, i32 } [ %45, %ehcleanup61.thread.i ], [ %.pn133.i, %ehcleanup61.i ]
  %72 = phi ptr [ %call1.i, %ehcleanup61.thread.i ], [ %.pr.i, %ehcleanup61.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup63.i

ehcleanup63.i:                                    ; preds = %delete.notnull.i.i114.i, %ehcleanup61.i, %lpad.i
  %.pn133.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn133.i, %ehcleanup61.i ], [ %.pn133.pn139.i, %delete.notnull.i.i114.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn133.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i103.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont3.i unwind label %ehcleanup61.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i75.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i75.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  br label %for.body.i79.i

for.body.i79.i:                                   ; preds = %for.body.i79.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i76.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i77.i.4, %for.body.i79.i ]
  %arrayidx.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i76.i
  %0 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !16
  %conv.i.i = zext i8 %0 to i16
  %arrayidx2.i.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i76.i
  store i16 %conv.i.i, ptr %arrayidx2.i.i, align 2, !tbaa !13
  %indvars.iv.next.i77.i = add nuw nsw i64 %indvars.iv.i76.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i77.i
  %1 = load i8, ptr %arrayidx.i.i.1, align 1, !tbaa !16
  %conv.i.i.1 = zext i8 %1 to i16
  %arrayidx2.i.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i
  store i16 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 2, !tbaa !13
  %indvars.iv.next.i77.i.1 = add nuw nsw i64 %indvars.iv.i76.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i77.i.1
  %2 = load i8, ptr %arrayidx.i.i.2, align 1, !tbaa !16
  %conv.i.i.2 = zext i8 %2 to i16
  %arrayidx2.i.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.1
  store i16 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 2, !tbaa !13
  %indvars.iv.next.i77.i.2 = add nuw nsw i64 %indvars.iv.i76.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i77.i.2
  %3 = load i8, ptr %arrayidx.i.i.3, align 1, !tbaa !16
  %conv.i.i.3 = zext i8 %3 to i16
  %arrayidx2.i.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.2
  store i16 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 2, !tbaa !13
  %indvars.iv.next.i77.i.3 = add nuw nsw i64 %indvars.iv.i76.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i77.i.3
  %4 = load i8, ptr %arrayidx.i.i.4, align 1, !tbaa !16
  %conv.i.i.4 = zext i8 %4 to i16
  %arrayidx2.i.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.3
  store i16 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 2, !tbaa !13
  %indvars.iv.next.i77.i.4 = add nuw nsw i64 %indvars.iv.i76.i, 5
  %exitcond.not.i78.i.4 = icmp eq i64 %indvars.iv.next.i77.i.4, 10000
  br i1 %exitcond.not.i78.i.4, label %vector.body, label %for.body.i79.i, !llvm.loop !229

vector.body:                                      ; preds = %for.body.i79.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i79.i ]
  %5 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <16 x i8>, ptr %5, align 1, !tbaa !16
  %6 = getelementptr inbounds i8, ptr %5, i64 16
  %wide.load27 = load <16 x i8>, ptr %6, align 1, !tbaa !16
  %7 = getelementptr inbounds i8, ptr %5, i64 32
  %wide.load28 = load <16 x i8>, ptr %7, align 1, !tbaa !16
  %8 = getelementptr inbounds i8, ptr %5, i64 48
  %wide.load29 = load <16 x i8>, ptr %8, align 1, !tbaa !16
  %9 = zext <16 x i8> %wide.load to <16 x i16>
  %10 = zext <16 x i8> %wide.load27 to <16 x i16>
  %11 = zext <16 x i8> %wide.load28 to <16 x i16>
  %12 = zext <16 x i8> %wide.load29 to <16 x i16>
  %13 = getelementptr inbounds i16, ptr %call1.i, i64 %index
  store <16 x i16> %9, ptr %13, align 2, !tbaa !13
  %14 = getelementptr inbounds i16, ptr %13, i64 16
  store <16 x i16> %10, ptr %14, align 2, !tbaa !13
  %15 = getelementptr inbounds i16, ptr %13, i64 32
  store <16 x i16> %11, ptr %15, align 2, !tbaa !13
  %16 = getelementptr inbounds i16, ptr %13, i64 48
  store <16 x i16> %12, ptr %16, align 2, !tbaa !13
  %index.next = add nuw i64 %index, 64
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !239

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i, i64 9984
  %18 = load i8, ptr %arrayidx.i, align 1, !tbaa !16
  %conv.i = zext i8 %18 to i16
  %arrayidx2.i = getelementptr inbounds i16, ptr %call1.i, i64 9984
  store i16 %conv.i, ptr %arrayidx2.i, align 2, !tbaa !13
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %call.i, i64 9985
  %19 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !16
  %conv.i.1 = zext i8 %19 to i16
  %arrayidx2.i.1 = getelementptr inbounds i16, ptr %call1.i, i64 9985
  store i16 %conv.i.1, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %call.i, i64 9986
  %20 = load i8, ptr %arrayidx.i.2, align 1, !tbaa !16
  %conv.i.2 = zext i8 %20 to i16
  %arrayidx2.i.2 = getelementptr inbounds i16, ptr %call1.i, i64 9986
  store i16 %conv.i.2, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %call.i, i64 9987
  %21 = load i8, ptr %arrayidx.i.3, align 1, !tbaa !16
  %conv.i.3 = zext i8 %21 to i16
  %arrayidx2.i.3 = getelementptr inbounds i16, ptr %call1.i, i64 9987
  store i16 %conv.i.3, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %arrayidx.i.4 = getelementptr inbounds i8, ptr %call.i, i64 9988
  %22 = load i8, ptr %arrayidx.i.4, align 1, !tbaa !16
  %conv.i.4 = zext i8 %22 to i16
  %arrayidx2.i.4 = getelementptr inbounds i16, ptr %call1.i, i64 9988
  store i16 %conv.i.4, ptr %arrayidx2.i.4, align 2, !tbaa !13
  %arrayidx.i.5 = getelementptr inbounds i8, ptr %call.i, i64 9989
  %23 = load i8, ptr %arrayidx.i.5, align 1, !tbaa !16
  %conv.i.5 = zext i8 %23 to i16
  %arrayidx2.i.5 = getelementptr inbounds i16, ptr %call1.i, i64 9989
  store i16 %conv.i.5, ptr %arrayidx2.i.5, align 2, !tbaa !13
  %arrayidx.i.6 = getelementptr inbounds i8, ptr %call.i, i64 9990
  %24 = load i8, ptr %arrayidx.i.6, align 1, !tbaa !16
  %conv.i.6 = zext i8 %24 to i16
  %arrayidx2.i.6 = getelementptr inbounds i16, ptr %call1.i, i64 9990
  store i16 %conv.i.6, ptr %arrayidx2.i.6, align 2, !tbaa !13
  %arrayidx.i.7 = getelementptr inbounds i8, ptr %call.i, i64 9991
  %25 = load i8, ptr %arrayidx.i.7, align 1, !tbaa !16
  %conv.i.7 = zext i8 %25 to i16
  %arrayidx2.i.7 = getelementptr inbounds i16, ptr %call1.i, i64 9991
  store i16 %conv.i.7, ptr %arrayidx2.i.7, align 2, !tbaa !13
  %arrayidx.i.8 = getelementptr inbounds i8, ptr %call.i, i64 9992
  %26 = load i8, ptr %arrayidx.i.8, align 1, !tbaa !16
  %conv.i.8 = zext i8 %26 to i16
  %arrayidx2.i.8 = getelementptr inbounds i16, ptr %call1.i, i64 9992
  store i16 %conv.i.8, ptr %arrayidx2.i.8, align 2, !tbaa !13
  %arrayidx.i.9 = getelementptr inbounds i8, ptr %call.i, i64 9993
  %27 = load i8, ptr %arrayidx.i.9, align 1, !tbaa !16
  %conv.i.9 = zext i8 %27 to i16
  %arrayidx2.i.9 = getelementptr inbounds i16, ptr %call1.i, i64 9993
  store i16 %conv.i.9, ptr %arrayidx2.i.9, align 2, !tbaa !13
  %arrayidx.i.10 = getelementptr inbounds i8, ptr %call.i, i64 9994
  %28 = load i8, ptr %arrayidx.i.10, align 1, !tbaa !16
  %conv.i.10 = zext i8 %28 to i16
  %arrayidx2.i.10 = getelementptr inbounds i16, ptr %call1.i, i64 9994
  store i16 %conv.i.10, ptr %arrayidx2.i.10, align 2, !tbaa !13
  %arrayidx.i.11 = getelementptr inbounds i8, ptr %call.i, i64 9995
  %29 = load i8, ptr %arrayidx.i.11, align 1, !tbaa !16
  %conv.i.11 = zext i8 %29 to i16
  %arrayidx2.i.11 = getelementptr inbounds i16, ptr %call1.i, i64 9995
  store i16 %conv.i.11, ptr %arrayidx2.i.11, align 2, !tbaa !13
  %arrayidx.i.12 = getelementptr inbounds i8, ptr %call.i, i64 9996
  %30 = load i8, ptr %arrayidx.i.12, align 1, !tbaa !16
  %conv.i.12 = zext i8 %30 to i16
  %arrayidx2.i.12 = getelementptr inbounds i16, ptr %call1.i, i64 9996
  store i16 %conv.i.12, ptr %arrayidx2.i.12, align 2, !tbaa !13
  %arrayidx.i.13 = getelementptr inbounds i8, ptr %call.i, i64 9997
  %31 = load i8, ptr %arrayidx.i.13, align 1, !tbaa !16
  %conv.i.13 = zext i8 %31 to i16
  %arrayidx2.i.13 = getelementptr inbounds i16, ptr %call1.i, i64 9997
  store i16 %conv.i.13, ptr %arrayidx2.i.13, align 2, !tbaa !13
  %arrayidx.i.14 = getelementptr inbounds i8, ptr %call.i, i64 9998
  %32 = load i8, ptr %arrayidx.i.14, align 1, !tbaa !16
  %conv.i.14 = zext i8 %32 to i16
  %arrayidx2.i.14 = getelementptr inbounds i16, ptr %call1.i, i64 9998
  store i16 %conv.i.14, ptr %arrayidx2.i.14, align 2, !tbaa !13
  %arrayidx.i.15 = getelementptr inbounds i8, ptr %call.i, i64 9999
  %33 = load i8, ptr %arrayidx.i.15, align 1, !tbaa !16
  %conv.i.15 = zext i8 %33 to i16
  %arrayidx2.i.15 = getelementptr inbounds i16, ptr %call1.i, i64 9999
  store i16 %conv.i.15, ptr %arrayidx2.i.15, align 2, !tbaa !13
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i80.i.1 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i16, ptr %arrayidx.i80.i.1, align 2, !tbaa !13
  %arrayidx.i81.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i16, ptr %arrayidx.i81.i.1, align 2, !tbaa !13
  %cmp18.not.i.1 = icmp eq i16 %34, %35
  br i1 %cmp18.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i80.i.2 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i16, ptr %arrayidx.i80.i.2, align 2, !tbaa !13
  %arrayidx.i81.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i16, ptr %arrayidx.i81.i.2, align 2, !tbaa !13
  %cmp18.not.i.2 = icmp eq i16 %36, %37
  br i1 %cmp18.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i80.i.3 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i16, ptr %arrayidx.i80.i.3, align 2, !tbaa !13
  %arrayidx.i81.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i16, ptr %arrayidx.i81.i.3, align 2, !tbaa !13
  %cmp18.not.i.3 = icmp eq i16 %38, %39
  br i1 %cmp18.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i80.i.4 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i16, ptr %arrayidx.i80.i.4, align 2, !tbaa !13
  %arrayidx.i81.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i16, ptr %arrayidx.i81.i.4, align 2, !tbaa !13
  %cmp18.not.i.4 = icmp eq i16 %40, %41
  br i1 %cmp18.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !231

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond46.preheader.i unwind label %lpad43.i

for.cond46.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not143147.i = icmp eq i64 %43, 0
  %cmp.not.i.not143.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not143147.i
  br i1 %cmp.not.i.not143.i, label %if.end.i.i, label %for.body50.i.preheader, !prof !42

for.body50.i.preheader:                           ; preds = %for.cond46.preheader.i
  %scevgep30 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body50.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup63.i

ehcleanup61.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i114.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i80.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i16, ptr %arrayidx.i80.i, align 2, !tbaa !13
  %arrayidx.i81.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i16, ptr %arrayidx.i81.i, align 2, !tbaa !13
  %cmp18.not.i = icmp eq i16 %46, %47
  br i1 %cmp18.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i16 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i80.i.le = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i83.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont20.i unwind label %lpad19.i

invoke.cont20.i:                                  ; preds = %if.then.i
  %arrayidx.i84.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i8, ptr %arrayidx.i84.i, align 1, !tbaa !16
  %call25.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %48)
          to label %invoke.cont24.i unwind label %lpad19.i

invoke.cont24.i:                                  ; preds = %invoke.cont20.i
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call25.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont26.i unwind label %lpad19.i

invoke.cont26.i:                                  ; preds = %invoke.cont24.i
  %49 = load i16, ptr %arrayidx.i80.i.le, align 2, !tbaa !13
  %conv.i90.i = zext i16 %49 to i64
  %call.i91.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call25.i, i64 noundef %conv.i90.i)
          to label %invoke.cont30.i unwind label %lpad19.i

invoke.cont30.i:                                  ; preds = %invoke.cont26.i
  %call1.i94.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont32.i unwind label %lpad19.i

invoke.cont32.i:                                  ; preds = %invoke.cont30.i
  %conv.i97.i = zext i16 %.lcssa to i64
  %call.i98.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, i64 noundef %conv.i97.i)
          to label %invoke.cont36.i unwind label %lpad19.i

invoke.cont36.i:                                  ; preds = %invoke.cont32.i
  %call39.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i98.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont38.i unwind label %lpad19.i

invoke.cont38.i:                                  ; preds = %invoke.cont36.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad19.i:                                         ; preds = %invoke.cont36.i, %invoke.cont32.i, %invoke.cont30.i, %invoke.cont26.i, %invoke.cont24.i, %invoke.cont20.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

if.end.i.i:                                       ; preds = %invoke.cont54.i, %for.cond46.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad43.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i102.i = icmp eq ptr %51, null
  br i1 %cmp.not.i102.i, label %_ZL28benchForTruncOrZextVecInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i103.i

delete.notnull.i.i103.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad43.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

for.body50.i:                                     ; preds = %for.body50.i.preheader, %invoke.cont54.i
  %__begin1.sroa.0.0144.i = phi i64 [ %dec.i.i, %invoke.cont54.i ], [ %43, %for.body50.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %54, i64 20000
  %bound0 = icmp ult ptr %54, %scevgep30
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13.preheader, label %vector.body36

vector.body36:                                    ; preds = %for.body50.i, %vector.body36
  %index37 = phi i64 [ %index.next42, %vector.body36 ], [ 0, %for.body50.i ]
  %55 = getelementptr inbounds i8, ptr %call.i, i64 %index37
  %wide.load38 = load <16 x i8>, ptr %55, align 1, !tbaa !16, !alias.scope !240
  %56 = getelementptr inbounds i8, ptr %55, i64 16
  %wide.load39 = load <16 x i8>, ptr %56, align 1, !tbaa !16, !alias.scope !240
  %57 = getelementptr inbounds i8, ptr %55, i64 32
  %wide.load40 = load <16 x i8>, ptr %57, align 1, !tbaa !16, !alias.scope !240
  %58 = getelementptr inbounds i8, ptr %55, i64 48
  %wide.load41 = load <16 x i8>, ptr %58, align 1, !tbaa !16, !alias.scope !240
  %59 = zext <16 x i8> %wide.load38 to <16 x i16>
  %60 = zext <16 x i8> %wide.load39 to <16 x i16>
  %61 = zext <16 x i8> %wide.load40 to <16 x i16>
  %62 = zext <16 x i8> %wide.load41 to <16 x i16>
  %63 = getelementptr inbounds i16, ptr %54, i64 %index37
  store <16 x i16> %59, ptr %63, align 2, !tbaa !13, !alias.scope !243, !noalias !240
  %64 = getelementptr inbounds i16, ptr %63, i64 16
  store <16 x i16> %60, ptr %64, align 2, !tbaa !13, !alias.scope !243, !noalias !240
  %65 = getelementptr inbounds i16, ptr %63, i64 32
  store <16 x i16> %61, ptr %65, align 2, !tbaa !13, !alias.scope !243, !noalias !240
  %66 = getelementptr inbounds i16, ptr %63, i64 48
  store <16 x i16> %62, ptr %66, align 2, !tbaa !13, !alias.scope !243, !noalias !240
  %index.next42 = add nuw i64 %index37, 64
  %67 = icmp eq i64 %index.next42, 9984
  br i1 %67, label %for.body.i13.preheader, label %vector.body36, !llvm.loop !245

for.body.i13.preheader:                           ; preds = %vector.body36, %for.body50.i
  %indvars.iv.i7.ph = phi i64 [ 0, %for.body50.i ], [ 9984, %vector.body36 ]
  br label %for.body.i13

for.body.i13:                                     ; preds = %for.body.i13, %for.body.i13.preheader
  %indvars.iv.i7 = phi i64 [ %indvars.iv.i7.ph, %for.body.i13.preheader ], [ %indvars.iv.next.i11.3, %for.body.i13 ]
  %arrayidx.i8 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i7
  %68 = load i8, ptr %arrayidx.i8, align 1, !tbaa !16
  %conv.i9 = zext i8 %68 to i16
  %arrayidx2.i10 = getelementptr inbounds i16, ptr %54, i64 %indvars.iv.i7
  store i16 %conv.i9, ptr %arrayidx2.i10, align 2, !tbaa !13
  %indvars.iv.next.i11 = or i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11
  %69 = load i8, ptr %arrayidx.i8.1, align 1, !tbaa !16
  %conv.i9.1 = zext i8 %69 to i16
  %arrayidx2.i10.1 = getelementptr inbounds i16, ptr %54, i64 %indvars.iv.next.i11
  store i16 %conv.i9.1, ptr %arrayidx2.i10.1, align 2, !tbaa !13
  %indvars.iv.next.i11.1 = or i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.1
  %70 = load i8, ptr %arrayidx.i8.2, align 1, !tbaa !16
  %conv.i9.2 = zext i8 %70 to i16
  %arrayidx2.i10.2 = getelementptr inbounds i16, ptr %54, i64 %indvars.iv.next.i11.1
  store i16 %conv.i9.2, ptr %arrayidx2.i10.2, align 2, !tbaa !13
  %indvars.iv.next.i11.2 = or i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.2
  %71 = load i8, ptr %arrayidx.i8.3, align 1, !tbaa !16
  %conv.i9.3 = zext i8 %71 to i16
  %arrayidx2.i10.3 = getelementptr inbounds i16, ptr %54, i64 %indvars.iv.next.i11.2
  store i16 %conv.i9.3, ptr %arrayidx2.i10.3, align 2, !tbaa !13
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %exitcond.not.i12.3 = icmp eq i64 %indvars.iv.next.i11.3, 10000
  br i1 %exitcond.not.i12.3, label %invoke.cont54.i, label %for.body.i13, !llvm.loop !246

invoke.cont54.i:                                  ; preds = %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0144.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body50.i, !prof !42

ehcleanup61.i:                                    ; preds = %lpad43.i, %lpad19.i, %lpad5.loopexit.i
  %.pn133.i = phi { ptr, i32 } [ %50, %lpad19.i ], [ %52, %lpad43.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i113.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i113.i, label %ehcleanup63.i, label %delete.notnull.i.i114.i

delete.notnull.i.i114.i:                          ; preds = %ehcleanup61.i, %ehcleanup61.thread.i
  %.pn133.pn139.i = phi { ptr, i32 } [ %45, %ehcleanup61.thread.i ], [ %.pn133.i, %ehcleanup61.i ]
  %72 = phi ptr [ %call1.i, %ehcleanup61.thread.i ], [ %.pr.i, %ehcleanup61.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup63.i

ehcleanup63.i:                                    ; preds = %delete.notnull.i.i114.i, %ehcleanup61.i, %lpad.i
  %.pn133.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn133.i, %ehcleanup61.i ], [ %.pn133.pn139.i, %delete.notnull.i.i114.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn133.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i103.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z53benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont3.i unwind label %ehcleanup61.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i75.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i75.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  br label %for.body.i79.i

for.body.i79.i:                                   ; preds = %for.body.i79.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i76.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i77.i.4, %for.body.i79.i ]
  %arrayidx.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i76.i
  %0 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !16
  %conv.i.i = zext i8 %0 to i16
  %arrayidx2.i.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i76.i
  store i16 %conv.i.i, ptr %arrayidx2.i.i, align 2, !tbaa !13
  %indvars.iv.next.i77.i = add nuw nsw i64 %indvars.iv.i76.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i77.i
  %1 = load i8, ptr %arrayidx.i.i.1, align 1, !tbaa !16
  %conv.i.i.1 = zext i8 %1 to i16
  %arrayidx2.i.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i
  store i16 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 2, !tbaa !13
  %indvars.iv.next.i77.i.1 = add nuw nsw i64 %indvars.iv.i76.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i77.i.1
  %2 = load i8, ptr %arrayidx.i.i.2, align 1, !tbaa !16
  %conv.i.i.2 = zext i8 %2 to i16
  %arrayidx2.i.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.1
  store i16 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 2, !tbaa !13
  %indvars.iv.next.i77.i.2 = add nuw nsw i64 %indvars.iv.i76.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i77.i.2
  %3 = load i8, ptr %arrayidx.i.i.3, align 1, !tbaa !16
  %conv.i.i.3 = zext i8 %3 to i16
  %arrayidx2.i.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.2
  store i16 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 2, !tbaa !13
  %indvars.iv.next.i77.i.3 = add nuw nsw i64 %indvars.iv.i76.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i77.i.3
  %4 = load i8, ptr %arrayidx.i.i.4, align 1, !tbaa !16
  %conv.i.i.4 = zext i8 %4 to i16
  %arrayidx2.i.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i77.i.3
  store i16 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 2, !tbaa !13
  %indvars.iv.next.i77.i.4 = add nuw nsw i64 %indvars.iv.i76.i, 5
  %exitcond.not.i78.i.4 = icmp eq i64 %indvars.iv.next.i77.i.4, 10000
  br i1 %exitcond.not.i78.i.4, label %vector.body, label %for.body.i79.i, !llvm.loop !229

vector.body:                                      ; preds = %for.body.i79.i, %vector.body.1
  %index = phi i64 [ %index.next.1, %vector.body.1 ], [ 0, %for.body.i79.i ]
  %5 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <8 x i8>, ptr %5, align 1, !tbaa !16
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  %wide.load27 = load <8 x i8>, ptr %6, align 1, !tbaa !16
  %7 = zext <8 x i8> %wide.load to <8 x i16>
  %8 = zext <8 x i8> %wide.load27 to <8 x i16>
  %9 = getelementptr inbounds i16, ptr %call1.i, i64 %index
  store <8 x i16> %7, ptr %9, align 2, !tbaa !13
  %10 = getelementptr inbounds i16, ptr %9, i64 8
  store <8 x i16> %8, ptr %10, align 2, !tbaa !13
  %index.next = or i64 %index, 16
  %11 = icmp eq i64 %index.next, 10000
  br i1 %11, label %for.body.i, label %vector.body.1, !llvm.loop !247

vector.body.1:                                    ; preds = %vector.body
  %12 = getelementptr inbounds i8, ptr %call.i, i64 %index.next
  %wide.load.1 = load <8 x i8>, ptr %12, align 1, !tbaa !16
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  %wide.load27.1 = load <8 x i8>, ptr %13, align 1, !tbaa !16
  %14 = zext <8 x i8> %wide.load.1 to <8 x i16>
  %15 = zext <8 x i8> %wide.load27.1 to <8 x i16>
  %16 = getelementptr inbounds i16, ptr %call1.i, i64 %index.next
  store <8 x i16> %14, ptr %16, align 2, !tbaa !13
  %17 = getelementptr inbounds i16, ptr %16, i64 8
  store <8 x i16> %15, ptr %17, align 2, !tbaa !13
  %index.next.1 = add nuw nsw i64 %index, 32
  br label %vector.body

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i80.i.1 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i
  %18 = load i16, ptr %arrayidx.i80.i.1, align 2, !tbaa !13
  %arrayidx.i81.i.1 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i
  %19 = load i16, ptr %arrayidx.i81.i.1, align 2, !tbaa !13
  %cmp18.not.i.1 = icmp eq i16 %18, %19
  br i1 %cmp18.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i80.i.2 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.1
  %20 = load i16, ptr %arrayidx.i80.i.2, align 2, !tbaa !13
  %arrayidx.i81.i.2 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.1
  %21 = load i16, ptr %arrayidx.i81.i.2, align 2, !tbaa !13
  %cmp18.not.i.2 = icmp eq i16 %20, %21
  br i1 %cmp18.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i80.i.3 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.2
  %22 = load i16, ptr %arrayidx.i80.i.3, align 2, !tbaa !13
  %arrayidx.i81.i.3 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.2
  %23 = load i16, ptr %arrayidx.i81.i.3, align 2, !tbaa !13
  %cmp18.not.i.3 = icmp eq i16 %22, %23
  br i1 %cmp18.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i80.i.4 = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.next.i.3
  %24 = load i16, ptr %arrayidx.i80.i.4, align 2, !tbaa !13
  %arrayidx.i81.i.4 = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.next.i.3
  %25 = load i16, ptr %arrayidx.i81.i.4, align 2, !tbaa !13
  %cmp18.not.i.4 = icmp eq i16 %24, %25
  br i1 %cmp18.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !231

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %26 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %27 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond46.preheader.i unwind label %lpad43.i

for.cond46.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %26, 0
  %cmp.not.i.not143147.i = icmp eq i64 %27, 0
  %cmp.not.i.not143.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not143147.i
  br i1 %cmp.not.i.not143.i, label %if.end.i.i, label %for.body50.i.preheader, !prof !42

for.body50.i.preheader:                           ; preds = %for.cond46.preheader.i
  %scevgep28 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body50.i

lpad.i:                                           ; preds = %entry
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup63.i

ehcleanup61.thread.i:                             ; preds = %invoke.cont.i
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i114.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

for.body.i:                                       ; preds = %vector.body, %for.cond.i.4
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.4, %for.cond.i.4 ], [ 0, %vector.body ]
  %arrayidx.i80.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i
  %30 = load i16, ptr %arrayidx.i80.i, align 2, !tbaa !13
  %arrayidx.i81.i = getelementptr inbounds i16, ptr %call4.i, i64 %indvars.iv.i
  %31 = load i16, ptr %arrayidx.i81.i, align 2, !tbaa !13
  %cmp18.not.i = icmp eq i16 %30, %31
  br i1 %cmp18.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i16 [ %31, %for.body.i ], [ %19, %for.cond.i ], [ %21, %for.cond.i.1 ], [ %23, %for.cond.i.2 ], [ %25, %for.cond.i.3 ]
  %arrayidx.i80.i.le = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i83.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont20.i unwind label %lpad19.i

invoke.cont20.i:                                  ; preds = %if.then.i
  %arrayidx.i84.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.lcssa
  %32 = load i8, ptr %arrayidx.i84.i, align 1, !tbaa !16
  %call25.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %32)
          to label %invoke.cont24.i unwind label %lpad19.i

invoke.cont24.i:                                  ; preds = %invoke.cont20.i
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call25.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont26.i unwind label %lpad19.i

invoke.cont26.i:                                  ; preds = %invoke.cont24.i
  %33 = load i16, ptr %arrayidx.i80.i.le, align 2, !tbaa !13
  %conv.i90.i = zext i16 %33 to i64
  %call.i91.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call25.i, i64 noundef %conv.i90.i)
          to label %invoke.cont30.i unwind label %lpad19.i

invoke.cont30.i:                                  ; preds = %invoke.cont26.i
  %call1.i94.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont32.i unwind label %lpad19.i

invoke.cont32.i:                                  ; preds = %invoke.cont30.i
  %conv.i97.i = zext i16 %.lcssa to i64
  %call.i98.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, i64 noundef %conv.i97.i)
          to label %invoke.cont36.i unwind label %lpad19.i

invoke.cont36.i:                                  ; preds = %invoke.cont32.i
  %call39.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i98.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont38.i unwind label %lpad19.i

invoke.cont38.i:                                  ; preds = %invoke.cont36.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad19.i:                                         ; preds = %invoke.cont36.i, %invoke.cont32.i, %invoke.cont30.i, %invoke.cont26.i, %invoke.cont24.i, %invoke.cont20.i, %if.then.i
  %34 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

if.end.i.i:                                       ; preds = %invoke.cont54.i, %for.cond46.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad43.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %35 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i102.i = icmp eq ptr %35, null
  br i1 %cmp.not.i102.i, label %_ZL28benchForTruncOrZextVecInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i103.i

delete.notnull.i.i103.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %35) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad43.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

for.body50.i:                                     ; preds = %for.body50.i.preheader, %invoke.cont54.i
  %__begin1.sroa.0.0144.i = phi i64 [ %dec.i.i, %invoke.cont54.i ], [ %27, %for.body50.i.preheader ]
  %37 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %37) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %38 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %38, i64 20000
  %bound0 = icmp ult ptr %38, %scevgep28
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13, label %vector.body34

vector.body34:                                    ; preds = %for.body50.i, %vector.body34.1
  %index35 = phi i64 [ %index.next38.1, %vector.body34.1 ], [ 0, %for.body50.i ]
  %39 = getelementptr inbounds i8, ptr %call.i, i64 %index35
  %wide.load36 = load <8 x i8>, ptr %39, align 1, !tbaa !16, !alias.scope !248
  %40 = getelementptr inbounds i8, ptr %39, i64 8
  %wide.load37 = load <8 x i8>, ptr %40, align 1, !tbaa !16, !alias.scope !248
  %41 = zext <8 x i8> %wide.load36 to <8 x i16>
  %42 = zext <8 x i8> %wide.load37 to <8 x i16>
  %43 = getelementptr inbounds i16, ptr %38, i64 %index35
  store <8 x i16> %41, ptr %43, align 2, !tbaa !13, !alias.scope !251, !noalias !248
  %44 = getelementptr inbounds i16, ptr %43, i64 8
  store <8 x i16> %42, ptr %44, align 2, !tbaa !13, !alias.scope !251, !noalias !248
  %index.next38 = or i64 %index35, 16
  %45 = icmp eq i64 %index.next38, 10000
  br i1 %45, label %invoke.cont54.i, label %vector.body34.1, !llvm.loop !253

vector.body34.1:                                  ; preds = %vector.body34
  %46 = getelementptr inbounds i8, ptr %call.i, i64 %index.next38
  %wide.load36.1 = load <8 x i8>, ptr %46, align 1, !tbaa !16, !alias.scope !248
  %47 = getelementptr inbounds i8, ptr %46, i64 8
  %wide.load37.1 = load <8 x i8>, ptr %47, align 1, !tbaa !16, !alias.scope !248
  %48 = zext <8 x i8> %wide.load36.1 to <8 x i16>
  %49 = zext <8 x i8> %wide.load37.1 to <8 x i16>
  %50 = getelementptr inbounds i16, ptr %38, i64 %index.next38
  store <8 x i16> %48, ptr %50, align 2, !tbaa !13, !alias.scope !251, !noalias !248
  %51 = getelementptr inbounds i16, ptr %50, i64 8
  store <8 x i16> %49, ptr %51, align 2, !tbaa !13, !alias.scope !251, !noalias !248
  %index.next38.1 = add nuw nsw i64 %index35, 32
  br label %vector.body34

for.body.i13:                                     ; preds = %for.body50.i, %for.body.i13
  %indvars.iv.i7 = phi i64 [ %indvars.iv.next.i11.4, %for.body.i13 ], [ 0, %for.body50.i ]
  %arrayidx.i8 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i7
  %52 = load i8, ptr %arrayidx.i8, align 1, !tbaa !16
  %conv.i9 = zext i8 %52 to i16
  %arrayidx2.i10 = getelementptr inbounds i16, ptr %38, i64 %indvars.iv.i7
  store i16 %conv.i9, ptr %arrayidx2.i10, align 2, !tbaa !13
  %indvars.iv.next.i11 = add nuw nsw i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11
  %53 = load i8, ptr %arrayidx.i8.1, align 1, !tbaa !16
  %conv.i9.1 = zext i8 %53 to i16
  %arrayidx2.i10.1 = getelementptr inbounds i16, ptr %38, i64 %indvars.iv.next.i11
  store i16 %conv.i9.1, ptr %arrayidx2.i10.1, align 2, !tbaa !13
  %indvars.iv.next.i11.1 = add nuw nsw i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.1
  %54 = load i8, ptr %arrayidx.i8.2, align 1, !tbaa !16
  %conv.i9.2 = zext i8 %54 to i16
  %arrayidx2.i10.2 = getelementptr inbounds i16, ptr %38, i64 %indvars.iv.next.i11.1
  store i16 %conv.i9.2, ptr %arrayidx2.i10.2, align 2, !tbaa !13
  %indvars.iv.next.i11.2 = add nuw nsw i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.2
  %55 = load i8, ptr %arrayidx.i8.3, align 1, !tbaa !16
  %conv.i9.3 = zext i8 %55 to i16
  %arrayidx2.i10.3 = getelementptr inbounds i16, ptr %38, i64 %indvars.iv.next.i11.2
  store i16 %conv.i9.3, ptr %arrayidx2.i10.3, align 2, !tbaa !13
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %arrayidx.i8.4 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.3
  %56 = load i8, ptr %arrayidx.i8.4, align 1, !tbaa !16
  %conv.i9.4 = zext i8 %56 to i16
  %arrayidx2.i10.4 = getelementptr inbounds i16, ptr %38, i64 %indvars.iv.next.i11.3
  store i16 %conv.i9.4, ptr %arrayidx2.i10.4, align 2, !tbaa !13
  %indvars.iv.next.i11.4 = add nuw nsw i64 %indvars.iv.i7, 5
  %exitcond.not.i12.4 = icmp eq i64 %indvars.iv.next.i11.4, 10000
  br i1 %exitcond.not.i12.4, label %invoke.cont54.i, label %for.body.i13, !llvm.loop !254

invoke.cont54.i:                                  ; preds = %vector.body34, %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0144.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body50.i, !prof !42

ehcleanup61.i:                                    ; preds = %lpad43.i, %lpad19.i, %lpad5.loopexit.i
  %.pn133.i = phi { ptr, i32 } [ %34, %lpad19.i ], [ %36, %lpad43.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i113.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i113.i, label %ehcleanup63.i, label %delete.notnull.i.i114.i

delete.notnull.i.i114.i:                          ; preds = %ehcleanup61.i, %ehcleanup61.thread.i
  %.pn133.pn139.i = phi { ptr, i32 } [ %29, %ehcleanup61.thread.i ], [ %.pn133.i, %ehcleanup61.i ]
  %57 = phi ptr [ %call1.i, %ehcleanup61.thread.i ], [ %.pr.i, %ehcleanup61.i ]
  call void @_ZdaPv(ptr noundef nonnull %57) #13
  br label %ehcleanup63.i

ehcleanup63.i:                                    ; preds = %delete.notnull.i.i114.i, %ehcleanup61.i, %lpad.i
  %.pn133.pn.pn.i = phi { ptr, i32 } [ %28, %lpad.i ], [ %.pn133.i, %ehcleanup61.i ], [ %.pn133.pn139.i, %delete.notnull.i.i114.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn133.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i103.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution", align 2
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i31.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  store i16 0, ptr %distrib.i32.i, align 2, !tbaa !9
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i33.i, align 2, !tbaa !12
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i34.i
  store i16 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 2, !tbaa !13
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep5 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %5, i64 20000
  %bound0 = icmp ult ptr %5, %scevgep5
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1.preheader, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i ]
  %6 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <8 x i8>, ptr %6, align 1, !tbaa !16, !alias.scope !255
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  %wide.load6 = load <8 x i8>, ptr %7, align 1, !tbaa !16, !alias.scope !255
  %8 = getelementptr inbounds i8, ptr %6, i64 16
  %wide.load7 = load <8 x i8>, ptr %8, align 1, !tbaa !16, !alias.scope !255
  %9 = getelementptr inbounds i8, ptr %6, i64 24
  %wide.load8 = load <8 x i8>, ptr %9, align 1, !tbaa !16, !alias.scope !255
  %10 = zext <8 x i8> %wide.load to <8 x i16>
  %11 = zext <8 x i8> %wide.load6 to <8 x i16>
  %12 = zext <8 x i8> %wide.load7 to <8 x i16>
  %13 = zext <8 x i8> %wide.load8 to <8 x i16>
  %14 = getelementptr inbounds i16, ptr %5, i64 %index
  %wide.load9 = load <8 x i16>, ptr %14, align 2, !tbaa !13, !alias.scope !258, !noalias !255
  %15 = getelementptr inbounds i16, ptr %14, i64 8
  %wide.load10 = load <8 x i16>, ptr %15, align 2, !tbaa !13, !alias.scope !258, !noalias !255
  %16 = getelementptr inbounds i16, ptr %14, i64 16
  %wide.load11 = load <8 x i16>, ptr %16, align 2, !tbaa !13, !alias.scope !258, !noalias !255
  %17 = getelementptr inbounds i16, ptr %14, i64 24
  %wide.load12 = load <8 x i16>, ptr %17, align 2, !tbaa !13, !alias.scope !258, !noalias !255
  %18 = add <8 x i16> %wide.load9, %10
  %19 = add <8 x i16> %wide.load10, %11
  %20 = add <8 x i16> %wide.load11, %12
  %21 = add <8 x i16> %wide.load12, %13
  store <8 x i16> %18, ptr %14, align 2, !tbaa !13, !alias.scope !258, !noalias !255
  store <8 x i16> %19, ptr %15, align 2, !tbaa !13, !alias.scope !258, !noalias !255
  store <8 x i16> %20, ptr %16, align 2, !tbaa !13, !alias.scope !258, !noalias !255
  store <8 x i16> %21, ptr %17, align 2, !tbaa !13, !alias.scope !258, !noalias !255
  %index.next = add nuw i64 %index, 32
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1.preheader, label %vector.body, !llvm.loop !260

for.body.i1.preheader:                            ; preds = %vector.body, %for.body.i
  %indvars.iv.i.ph = phi i64 [ 0, %for.body.i ], [ 9984, %vector.body ]
  br label %for.body.i1

for.body.i1:                                      ; preds = %for.body.i1, %for.body.i1.preheader
  %indvars.iv.i = phi i64 [ %indvars.iv.i.ph, %for.body.i1.preheader ], [ %indvars.iv.next.i.3, %for.body.i1 ]
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i
  %23 = load i8, ptr %arrayidx.i, align 1, !tbaa !16
  %conv.i = zext i8 %23 to i16
  %arrayidx2.i = getelementptr inbounds i16, ptr %5, i64 %indvars.iv.i
  %24 = load i16, ptr %arrayidx2.i, align 2, !tbaa !13
  %add.i = add i16 %24, %conv.i
  store i16 %add.i, ptr %arrayidx2.i, align 2, !tbaa !13
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i
  %25 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !16
  %conv.i.1 = zext i8 %25 to i16
  %arrayidx2.i.1 = getelementptr inbounds i16, ptr %5, i64 %indvars.iv.next.i
  %26 = load i16, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %add.i.1 = add i16 %26, %conv.i.1
  store i16 %add.i.1, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.1
  %27 = load i8, ptr %arrayidx.i.2, align 1, !tbaa !16
  %conv.i.2 = zext i8 %27 to i16
  %arrayidx2.i.2 = getelementptr inbounds i16, ptr %5, i64 %indvars.iv.next.i.1
  %28 = load i16, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %add.i.2 = add i16 %28, %conv.i.2
  store i16 %add.i.2, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.2
  %29 = load i8, ptr %arrayidx.i.3, align 1, !tbaa !16
  %conv.i.3 = zext i8 %29 to i16
  %arrayidx2.i.3 = getelementptr inbounds i16, ptr %5, i64 %indvars.iv.next.i.2
  %30 = load i16, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %add.i.3 = add i16 %30, %conv.i.3
  store i16 %add.i.3, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !261

invoke.cont19.i:                                  ; preds = %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %31 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %31, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %32 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %32) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %31, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution", align 2
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i31.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  store i16 0, ptr %distrib.i32.i, align 2, !tbaa !9
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i33.i, align 2, !tbaa !12
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i34.i
  store i16 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 2, !tbaa !13
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep5 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %5, i64 20000
  %bound0 = icmp ult ptr %5, %scevgep5
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1.preheader, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i ]
  %6 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <16 x i8>, ptr %6, align 1, !tbaa !16, !alias.scope !262
  %7 = getelementptr inbounds i8, ptr %6, i64 16
  %wide.load6 = load <16 x i8>, ptr %7, align 1, !tbaa !16, !alias.scope !262
  %8 = getelementptr inbounds i8, ptr %6, i64 32
  %wide.load7 = load <16 x i8>, ptr %8, align 1, !tbaa !16, !alias.scope !262
  %9 = getelementptr inbounds i8, ptr %6, i64 48
  %wide.load8 = load <16 x i8>, ptr %9, align 1, !tbaa !16, !alias.scope !262
  %10 = zext <16 x i8> %wide.load to <16 x i16>
  %11 = zext <16 x i8> %wide.load6 to <16 x i16>
  %12 = zext <16 x i8> %wide.load7 to <16 x i16>
  %13 = zext <16 x i8> %wide.load8 to <16 x i16>
  %14 = getelementptr inbounds i16, ptr %5, i64 %index
  %wide.load9 = load <16 x i16>, ptr %14, align 2, !tbaa !13, !alias.scope !265, !noalias !262
  %15 = getelementptr inbounds i16, ptr %14, i64 16
  %wide.load10 = load <16 x i16>, ptr %15, align 2, !tbaa !13, !alias.scope !265, !noalias !262
  %16 = getelementptr inbounds i16, ptr %14, i64 32
  %wide.load11 = load <16 x i16>, ptr %16, align 2, !tbaa !13, !alias.scope !265, !noalias !262
  %17 = getelementptr inbounds i16, ptr %14, i64 48
  %wide.load12 = load <16 x i16>, ptr %17, align 2, !tbaa !13, !alias.scope !265, !noalias !262
  %18 = add <16 x i16> %wide.load9, %10
  %19 = add <16 x i16> %wide.load10, %11
  %20 = add <16 x i16> %wide.load11, %12
  %21 = add <16 x i16> %wide.load12, %13
  store <16 x i16> %18, ptr %14, align 2, !tbaa !13, !alias.scope !265, !noalias !262
  store <16 x i16> %19, ptr %15, align 2, !tbaa !13, !alias.scope !265, !noalias !262
  store <16 x i16> %20, ptr %16, align 2, !tbaa !13, !alias.scope !265, !noalias !262
  store <16 x i16> %21, ptr %17, align 2, !tbaa !13, !alias.scope !265, !noalias !262
  %index.next = add nuw i64 %index, 64
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1.preheader, label %vector.body, !llvm.loop !267

for.body.i1.preheader:                            ; preds = %vector.body, %for.body.i
  %indvars.iv.i.ph = phi i64 [ 0, %for.body.i ], [ 9984, %vector.body ]
  br label %for.body.i1

for.body.i1:                                      ; preds = %for.body.i1, %for.body.i1.preheader
  %indvars.iv.i = phi i64 [ %indvars.iv.i.ph, %for.body.i1.preheader ], [ %indvars.iv.next.i.3, %for.body.i1 ]
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i
  %23 = load i8, ptr %arrayidx.i, align 1, !tbaa !16
  %conv.i = zext i8 %23 to i16
  %arrayidx2.i = getelementptr inbounds i16, ptr %5, i64 %indvars.iv.i
  %24 = load i16, ptr %arrayidx2.i, align 2, !tbaa !13
  %add.i = add i16 %24, %conv.i
  store i16 %add.i, ptr %arrayidx2.i, align 2, !tbaa !13
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i
  %25 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !16
  %conv.i.1 = zext i8 %25 to i16
  %arrayidx2.i.1 = getelementptr inbounds i16, ptr %5, i64 %indvars.iv.next.i
  %26 = load i16, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %add.i.1 = add i16 %26, %conv.i.1
  store i16 %add.i.1, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.1
  %27 = load i8, ptr %arrayidx.i.2, align 1, !tbaa !16
  %conv.i.2 = zext i8 %27 to i16
  %arrayidx2.i.2 = getelementptr inbounds i16, ptr %5, i64 %indvars.iv.next.i.1
  %28 = load i16, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %add.i.2 = add i16 %28, %conv.i.2
  store i16 %add.i.2, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.2
  %29 = load i8, ptr %arrayidx.i.3, align 1, !tbaa !16
  %conv.i.3 = zext i8 %29 to i16
  %arrayidx2.i.3 = getelementptr inbounds i16, ptr %5, i64 %indvars.iv.next.i.2
  %30 = load i16, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %add.i.3 = add i16 %30, %conv.i.3
  store i16 %add.i.3, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !268

invoke.cont19.i:                                  ; preds = %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %31 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %31, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %32 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %32) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %31, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint16_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution", align 2
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i31.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  store i16 0, ptr %distrib.i32.i, align 2, !tbaa !9
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i33.i, align 2, !tbaa !12
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i16, ptr %call1.i, i64 %indvars.iv.i34.i
  store i16 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 2, !tbaa !13
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep5 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %5, i64 20000
  %bound0 = icmp ult ptr %5, %scevgep5
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body.1
  %index = phi i64 [ %index.next.1, %vector.body.1 ], [ 0, %for.body.i ]
  %6 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <8 x i8>, ptr %6, align 1, !tbaa !16, !alias.scope !269
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  %wide.load6 = load <8 x i8>, ptr %7, align 1, !tbaa !16, !alias.scope !269
  %8 = zext <8 x i8> %wide.load to <8 x i16>
  %9 = zext <8 x i8> %wide.load6 to <8 x i16>
  %10 = getelementptr inbounds i16, ptr %5, i64 %index
  %wide.load7 = load <8 x i16>, ptr %10, align 2, !tbaa !13, !alias.scope !272, !noalias !269
  %11 = getelementptr inbounds i16, ptr %10, i64 8
  %wide.load8 = load <8 x i16>, ptr %11, align 2, !tbaa !13, !alias.scope !272, !noalias !269
  %12 = add <8 x i16> %wide.load7, %8
  %13 = add <8 x i16> %wide.load8, %9
  store <8 x i16> %12, ptr %10, align 2, !tbaa !13, !alias.scope !272, !noalias !269
  store <8 x i16> %13, ptr %11, align 2, !tbaa !13, !alias.scope !272, !noalias !269
  %index.next = or i64 %index, 16
  %14 = icmp eq i64 %index.next, 10000
  br i1 %14, label %invoke.cont19.i, label %vector.body.1, !llvm.loop !274

vector.body.1:                                    ; preds = %vector.body
  %15 = getelementptr inbounds i8, ptr %call.i, i64 %index.next
  %wide.load.1 = load <8 x i8>, ptr %15, align 1, !tbaa !16, !alias.scope !269
  %16 = getelementptr inbounds i8, ptr %15, i64 8
  %wide.load6.1 = load <8 x i8>, ptr %16, align 1, !tbaa !16, !alias.scope !269
  %17 = zext <8 x i8> %wide.load.1 to <8 x i16>
  %18 = zext <8 x i8> %wide.load6.1 to <8 x i16>
  %19 = getelementptr inbounds i16, ptr %5, i64 %index.next
  %wide.load7.1 = load <8 x i16>, ptr %19, align 2, !tbaa !13, !alias.scope !272, !noalias !269
  %20 = getelementptr inbounds i16, ptr %19, i64 8
  %wide.load8.1 = load <8 x i16>, ptr %20, align 2, !tbaa !13, !alias.scope !272, !noalias !269
  %21 = add <8 x i16> %wide.load7.1, %17
  %22 = add <8 x i16> %wide.load8.1, %18
  store <8 x i16> %21, ptr %19, align 2, !tbaa !13, !alias.scope !272, !noalias !269
  store <8 x i16> %22, ptr %20, align 2, !tbaa !13, !alias.scope !272, !noalias !269
  %index.next.1 = add nuw nsw i64 %index, 32
  br label %vector.body

for.body.i1:                                      ; preds = %for.body.i, %for.body.i1
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body.i1 ], [ 0, %for.body.i ]
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i
  %23 = load i8, ptr %arrayidx.i, align 1, !tbaa !16
  %conv.i = zext i8 %23 to i16
  %arrayidx2.i = getelementptr inbounds i16, ptr %5, i64 %indvars.iv.i
  %24 = load i16, ptr %arrayidx2.i, align 2, !tbaa !13
  %add.i = add i16 %24, %conv.i
  store i16 %add.i, ptr %arrayidx2.i, align 2, !tbaa !13
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i
  %25 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !16
  %conv.i.1 = zext i8 %25 to i16
  %arrayidx2.i.1 = getelementptr inbounds i16, ptr %5, i64 %indvars.iv.next.i
  %26 = load i16, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %add.i.1 = add i16 %26, %conv.i.1
  store i16 %add.i.1, ptr %arrayidx2.i.1, align 2, !tbaa !13
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.1
  %27 = load i8, ptr %arrayidx.i.2, align 1, !tbaa !16
  %conv.i.2 = zext i8 %27 to i16
  %arrayidx2.i.2 = getelementptr inbounds i16, ptr %5, i64 %indvars.iv.next.i.1
  %28 = load i16, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %add.i.2 = add i16 %28, %conv.i.2
  store i16 %add.i.2, ptr %arrayidx2.i.2, align 2, !tbaa !13
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.2
  %29 = load i8, ptr %arrayidx.i.3, align 1, !tbaa !16
  %conv.i.3 = zext i8 %29 to i16
  %arrayidx2.i.3 = getelementptr inbounds i16, ptr %5, i64 %indvars.iv.next.i.2
  %30 = load i16, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %add.i.3 = add i16 %30, %conv.i.3
  store i16 %add.i.3, ptr %arrayidx2.i.3, align 2, !tbaa !13
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !275

invoke.cont19.i:                                  ; preds = %vector.body, %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %31 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %31, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %32 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %32) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %31, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIhtEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_tSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont3.i unwind label %ehcleanup59.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i73.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i73.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  br label %for.body.i77.i

for.body.i77.i:                                   ; preds = %for.body.i77.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i74.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i75.i.4, %for.body.i77.i ]
  %arrayidx.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i74.i
  %0 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !16
  %conv.i.i = zext i8 %0 to i32
  %arrayidx2.i.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i74.i
  store i32 %conv.i.i, ptr %arrayidx2.i.i, align 4, !tbaa !95
  %indvars.iv.next.i75.i = add nuw nsw i64 %indvars.iv.i74.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i75.i
  %1 = load i8, ptr %arrayidx.i.i.1, align 1, !tbaa !16
  %conv.i.i.1 = zext i8 %1 to i32
  %arrayidx2.i.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i
  store i32 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 4, !tbaa !95
  %indvars.iv.next.i75.i.1 = add nuw nsw i64 %indvars.iv.i74.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i75.i.1
  %2 = load i8, ptr %arrayidx.i.i.2, align 1, !tbaa !16
  %conv.i.i.2 = zext i8 %2 to i32
  %arrayidx2.i.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.1
  store i32 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 4, !tbaa !95
  %indvars.iv.next.i75.i.2 = add nuw nsw i64 %indvars.iv.i74.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i75.i.2
  %3 = load i8, ptr %arrayidx.i.i.3, align 1, !tbaa !16
  %conv.i.i.3 = zext i8 %3 to i32
  %arrayidx2.i.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.2
  store i32 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 4, !tbaa !95
  %indvars.iv.next.i75.i.3 = add nuw nsw i64 %indvars.iv.i74.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i75.i.3
  %4 = load i8, ptr %arrayidx.i.i.4, align 1, !tbaa !16
  %conv.i.i.4 = zext i8 %4 to i32
  %arrayidx2.i.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.3
  store i32 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 4, !tbaa !95
  %indvars.iv.next.i75.i.4 = add nuw nsw i64 %indvars.iv.i74.i, 5
  %exitcond.not.i76.i.4 = icmp eq i64 %indvars.iv.next.i75.i.4, 10000
  br i1 %exitcond.not.i76.i.4, label %vector.body, label %for.body.i77.i, !llvm.loop !276

vector.body:                                      ; preds = %for.body.i77.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i77.i ]
  %5 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <8 x i8>, ptr %5, align 1, !tbaa !16
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  %wide.load27 = load <8 x i8>, ptr %6, align 1, !tbaa !16
  %7 = getelementptr inbounds i8, ptr %5, i64 16
  %wide.load28 = load <8 x i8>, ptr %7, align 1, !tbaa !16
  %8 = getelementptr inbounds i8, ptr %5, i64 24
  %wide.load29 = load <8 x i8>, ptr %8, align 1, !tbaa !16
  %9 = zext <8 x i8> %wide.load to <8 x i32>
  %10 = zext <8 x i8> %wide.load27 to <8 x i32>
  %11 = zext <8 x i8> %wide.load28 to <8 x i32>
  %12 = zext <8 x i8> %wide.load29 to <8 x i32>
  %13 = getelementptr inbounds i32, ptr %call1.i, i64 %index
  store <8 x i32> %9, ptr %13, align 4, !tbaa !95
  %14 = getelementptr inbounds i32, ptr %13, i64 8
  store <8 x i32> %10, ptr %14, align 4, !tbaa !95
  %15 = getelementptr inbounds i32, ptr %13, i64 16
  store <8 x i32> %11, ptr %15, align 4, !tbaa !95
  %16 = getelementptr inbounds i32, ptr %13, i64 24
  store <8 x i32> %12, ptr %16, align 4, !tbaa !95
  %index.next = add nuw i64 %index, 32
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !277

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i, i64 9984
  %18 = load i8, ptr %arrayidx.i, align 1, !tbaa !16
  %conv.i = zext i8 %18 to i32
  %arrayidx2.i = getelementptr inbounds i32, ptr %call1.i, i64 9984
  store i32 %conv.i, ptr %arrayidx2.i, align 4, !tbaa !95
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %call.i, i64 9985
  %19 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !16
  %conv.i.1 = zext i8 %19 to i32
  %arrayidx2.i.1 = getelementptr inbounds i32, ptr %call1.i, i64 9985
  store i32 %conv.i.1, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %call.i, i64 9986
  %20 = load i8, ptr %arrayidx.i.2, align 1, !tbaa !16
  %conv.i.2 = zext i8 %20 to i32
  %arrayidx2.i.2 = getelementptr inbounds i32, ptr %call1.i, i64 9986
  store i32 %conv.i.2, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %call.i, i64 9987
  %21 = load i8, ptr %arrayidx.i.3, align 1, !tbaa !16
  %conv.i.3 = zext i8 %21 to i32
  %arrayidx2.i.3 = getelementptr inbounds i32, ptr %call1.i, i64 9987
  store i32 %conv.i.3, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %arrayidx.i.4 = getelementptr inbounds i8, ptr %call.i, i64 9988
  %22 = load i8, ptr %arrayidx.i.4, align 1, !tbaa !16
  %conv.i.4 = zext i8 %22 to i32
  %arrayidx2.i.4 = getelementptr inbounds i32, ptr %call1.i, i64 9988
  store i32 %conv.i.4, ptr %arrayidx2.i.4, align 4, !tbaa !95
  %arrayidx.i.5 = getelementptr inbounds i8, ptr %call.i, i64 9989
  %23 = load i8, ptr %arrayidx.i.5, align 1, !tbaa !16
  %conv.i.5 = zext i8 %23 to i32
  %arrayidx2.i.5 = getelementptr inbounds i32, ptr %call1.i, i64 9989
  store i32 %conv.i.5, ptr %arrayidx2.i.5, align 4, !tbaa !95
  %arrayidx.i.6 = getelementptr inbounds i8, ptr %call.i, i64 9990
  %24 = load i8, ptr %arrayidx.i.6, align 1, !tbaa !16
  %conv.i.6 = zext i8 %24 to i32
  %arrayidx2.i.6 = getelementptr inbounds i32, ptr %call1.i, i64 9990
  store i32 %conv.i.6, ptr %arrayidx2.i.6, align 4, !tbaa !95
  %arrayidx.i.7 = getelementptr inbounds i8, ptr %call.i, i64 9991
  %25 = load i8, ptr %arrayidx.i.7, align 1, !tbaa !16
  %conv.i.7 = zext i8 %25 to i32
  %arrayidx2.i.7 = getelementptr inbounds i32, ptr %call1.i, i64 9991
  store i32 %conv.i.7, ptr %arrayidx2.i.7, align 4, !tbaa !95
  %arrayidx.i.8 = getelementptr inbounds i8, ptr %call.i, i64 9992
  %26 = load i8, ptr %arrayidx.i.8, align 1, !tbaa !16
  %conv.i.8 = zext i8 %26 to i32
  %arrayidx2.i.8 = getelementptr inbounds i32, ptr %call1.i, i64 9992
  store i32 %conv.i.8, ptr %arrayidx2.i.8, align 4, !tbaa !95
  %arrayidx.i.9 = getelementptr inbounds i8, ptr %call.i, i64 9993
  %27 = load i8, ptr %arrayidx.i.9, align 1, !tbaa !16
  %conv.i.9 = zext i8 %27 to i32
  %arrayidx2.i.9 = getelementptr inbounds i32, ptr %call1.i, i64 9993
  store i32 %conv.i.9, ptr %arrayidx2.i.9, align 4, !tbaa !95
  %arrayidx.i.10 = getelementptr inbounds i8, ptr %call.i, i64 9994
  %28 = load i8, ptr %arrayidx.i.10, align 1, !tbaa !16
  %conv.i.10 = zext i8 %28 to i32
  %arrayidx2.i.10 = getelementptr inbounds i32, ptr %call1.i, i64 9994
  store i32 %conv.i.10, ptr %arrayidx2.i.10, align 4, !tbaa !95
  %arrayidx.i.11 = getelementptr inbounds i8, ptr %call.i, i64 9995
  %29 = load i8, ptr %arrayidx.i.11, align 1, !tbaa !16
  %conv.i.11 = zext i8 %29 to i32
  %arrayidx2.i.11 = getelementptr inbounds i32, ptr %call1.i, i64 9995
  store i32 %conv.i.11, ptr %arrayidx2.i.11, align 4, !tbaa !95
  %arrayidx.i.12 = getelementptr inbounds i8, ptr %call.i, i64 9996
  %30 = load i8, ptr %arrayidx.i.12, align 1, !tbaa !16
  %conv.i.12 = zext i8 %30 to i32
  %arrayidx2.i.12 = getelementptr inbounds i32, ptr %call1.i, i64 9996
  store i32 %conv.i.12, ptr %arrayidx2.i.12, align 4, !tbaa !95
  %arrayidx.i.13 = getelementptr inbounds i8, ptr %call.i, i64 9997
  %31 = load i8, ptr %arrayidx.i.13, align 1, !tbaa !16
  %conv.i.13 = zext i8 %31 to i32
  %arrayidx2.i.13 = getelementptr inbounds i32, ptr %call1.i, i64 9997
  store i32 %conv.i.13, ptr %arrayidx2.i.13, align 4, !tbaa !95
  %arrayidx.i.14 = getelementptr inbounds i8, ptr %call.i, i64 9998
  %32 = load i8, ptr %arrayidx.i.14, align 1, !tbaa !16
  %conv.i.14 = zext i8 %32 to i32
  %arrayidx2.i.14 = getelementptr inbounds i32, ptr %call1.i, i64 9998
  store i32 %conv.i.14, ptr %arrayidx2.i.14, align 4, !tbaa !95
  %arrayidx.i.15 = getelementptr inbounds i8, ptr %call.i, i64 9999
  %33 = load i8, ptr %arrayidx.i.15, align 1, !tbaa !16
  %conv.i.15 = zext i8 %33 to i32
  %arrayidx2.i.15 = getelementptr inbounds i32, ptr %call1.i, i64 9999
  store i32 %conv.i.15, ptr %arrayidx2.i.15, align 4, !tbaa !95
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i78.i.1 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i32, ptr %arrayidx.i78.i.1, align 4, !tbaa !95
  %arrayidx.i79.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i32, ptr %arrayidx.i79.i.1, align 4, !tbaa !95
  %cmp16.not.i.1 = icmp eq i32 %34, %35
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i78.i.2 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i32, ptr %arrayidx.i78.i.2, align 4, !tbaa !95
  %arrayidx.i79.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i32, ptr %arrayidx.i79.i.2, align 4, !tbaa !95
  %cmp16.not.i.2 = icmp eq i32 %36, %37
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i78.i.3 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i32, ptr %arrayidx.i78.i.3, align 4, !tbaa !95
  %arrayidx.i79.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i32, ptr %arrayidx.i79.i.3, align 4, !tbaa !95
  %cmp16.not.i.3 = icmp eq i32 %38, %39
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i78.i.4 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i32, ptr %arrayidx.i78.i.4, align 4, !tbaa !95
  %arrayidx.i79.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i32, ptr %arrayidx.i79.i.4, align 4, !tbaa !95
  %cmp16.not.i.4 = icmp eq i32 %40, %41
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !278

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not141145.i = icmp eq i64 %43, 0
  %cmp.not.i.not141.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not141145.i
  br i1 %cmp.not.i.not141.i, label %if.end.i.i, label %for.body48.i.preheader, !prof !42

for.body48.i.preheader:                           ; preds = %for.cond44.preheader.i
  %scevgep30 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body48.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

ehcleanup59.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i112.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i78.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i32, ptr %arrayidx.i78.i, align 4, !tbaa !95
  %arrayidx.i79.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i32, ptr %arrayidx.i79.i, align 4, !tbaa !95
  %cmp16.not.i = icmp eq i32 %46, %47
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i32 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i78.i.le = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i81.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i82.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i8, ptr %arrayidx.i82.i, align 1, !tbaa !16
  %call23.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %48)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i85.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call23.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %49 = load i32, ptr %arrayidx.i78.i.le, align 4, !tbaa !95
  %conv.i88.i = zext i32 %49 to i64
  %call.i89.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call23.i, i64 noundef %conv.i88.i)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i92.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %conv.i95.i = zext i32 %.lcssa to i64
  %call.i96.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, i64 noundef %conv.i95.i)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i96.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

if.end.i.i:                                       ; preds = %invoke.cont52.i, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i100.i = icmp eq ptr %51, null
  br i1 %cmp.not.i100.i, label %_ZL28benchForTruncOrZextVecInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i101.i

delete.notnull.i.i101.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body48.i:                                     ; preds = %for.body48.i.preheader, %invoke.cont52.i
  %__begin1.sroa.0.0142.i = phi i64 [ %dec.i.i, %invoke.cont52.i ], [ %43, %for.body48.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %54, i64 40000
  %bound0 = icmp ult ptr %54, %scevgep30
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13.preheader, label %vector.body36

vector.body36:                                    ; preds = %for.body48.i, %vector.body36
  %index37 = phi i64 [ %index.next42, %vector.body36 ], [ 0, %for.body48.i ]
  %55 = getelementptr inbounds i8, ptr %call.i, i64 %index37
  %wide.load38 = load <8 x i8>, ptr %55, align 1, !tbaa !16, !alias.scope !279
  %56 = getelementptr inbounds i8, ptr %55, i64 8
  %wide.load39 = load <8 x i8>, ptr %56, align 1, !tbaa !16, !alias.scope !279
  %57 = getelementptr inbounds i8, ptr %55, i64 16
  %wide.load40 = load <8 x i8>, ptr %57, align 1, !tbaa !16, !alias.scope !279
  %58 = getelementptr inbounds i8, ptr %55, i64 24
  %wide.load41 = load <8 x i8>, ptr %58, align 1, !tbaa !16, !alias.scope !279
  %59 = zext <8 x i8> %wide.load38 to <8 x i32>
  %60 = zext <8 x i8> %wide.load39 to <8 x i32>
  %61 = zext <8 x i8> %wide.load40 to <8 x i32>
  %62 = zext <8 x i8> %wide.load41 to <8 x i32>
  %63 = getelementptr inbounds i32, ptr %54, i64 %index37
  store <8 x i32> %59, ptr %63, align 4, !tbaa !95, !alias.scope !282, !noalias !279
  %64 = getelementptr inbounds i32, ptr %63, i64 8
  store <8 x i32> %60, ptr %64, align 4, !tbaa !95, !alias.scope !282, !noalias !279
  %65 = getelementptr inbounds i32, ptr %63, i64 16
  store <8 x i32> %61, ptr %65, align 4, !tbaa !95, !alias.scope !282, !noalias !279
  %66 = getelementptr inbounds i32, ptr %63, i64 24
  store <8 x i32> %62, ptr %66, align 4, !tbaa !95, !alias.scope !282, !noalias !279
  %index.next42 = add nuw i64 %index37, 32
  %67 = icmp eq i64 %index.next42, 9984
  br i1 %67, label %for.body.i13.preheader, label %vector.body36, !llvm.loop !284

for.body.i13.preheader:                           ; preds = %vector.body36, %for.body48.i
  %indvars.iv.i7.ph = phi i64 [ 0, %for.body48.i ], [ 9984, %vector.body36 ]
  br label %for.body.i13

for.body.i13:                                     ; preds = %for.body.i13, %for.body.i13.preheader
  %indvars.iv.i7 = phi i64 [ %indvars.iv.i7.ph, %for.body.i13.preheader ], [ %indvars.iv.next.i11.3, %for.body.i13 ]
  %arrayidx.i8 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i7
  %68 = load i8, ptr %arrayidx.i8, align 1, !tbaa !16
  %conv.i9 = zext i8 %68 to i32
  %arrayidx2.i10 = getelementptr inbounds i32, ptr %54, i64 %indvars.iv.i7
  store i32 %conv.i9, ptr %arrayidx2.i10, align 4, !tbaa !95
  %indvars.iv.next.i11 = or i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11
  %69 = load i8, ptr %arrayidx.i8.1, align 1, !tbaa !16
  %conv.i9.1 = zext i8 %69 to i32
  %arrayidx2.i10.1 = getelementptr inbounds i32, ptr %54, i64 %indvars.iv.next.i11
  store i32 %conv.i9.1, ptr %arrayidx2.i10.1, align 4, !tbaa !95
  %indvars.iv.next.i11.1 = or i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.1
  %70 = load i8, ptr %arrayidx.i8.2, align 1, !tbaa !16
  %conv.i9.2 = zext i8 %70 to i32
  %arrayidx2.i10.2 = getelementptr inbounds i32, ptr %54, i64 %indvars.iv.next.i11.1
  store i32 %conv.i9.2, ptr %arrayidx2.i10.2, align 4, !tbaa !95
  %indvars.iv.next.i11.2 = or i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.2
  %71 = load i8, ptr %arrayidx.i8.3, align 1, !tbaa !16
  %conv.i9.3 = zext i8 %71 to i32
  %arrayidx2.i10.3 = getelementptr inbounds i32, ptr %54, i64 %indvars.iv.next.i11.2
  store i32 %conv.i9.3, ptr %arrayidx2.i10.3, align 4, !tbaa !95
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %exitcond.not.i12.3 = icmp eq i64 %indvars.iv.next.i11.3, 10000
  br i1 %exitcond.not.i12.3, label %invoke.cont52.i, label %for.body.i13, !llvm.loop !285

invoke.cont52.i:                                  ; preds = %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0142.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup59.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn131.i = phi { ptr, i32 } [ %50, %lpad17.i ], [ %52, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i111.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i111.i, label %ehcleanup61.i, label %delete.notnull.i.i112.i

delete.notnull.i.i112.i:                          ; preds = %ehcleanup59.i, %ehcleanup59.thread.i
  %.pn131.pn137.i = phi { ptr, i32 } [ %45, %ehcleanup59.thread.i ], [ %.pn131.i, %ehcleanup59.i ]
  %72 = phi ptr [ %call1.i, %ehcleanup59.thread.i ], [ %.pr.i, %ehcleanup59.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup61.i

ehcleanup61.i:                                    ; preds = %delete.notnull.i.i112.i, %ehcleanup59.i, %lpad.i
  %.pn131.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn131.i, %ehcleanup59.i ], [ %.pn131.pn137.i, %delete.notnull.i.i112.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn131.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i101.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont3.i unwind label %ehcleanup59.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i73.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i73.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  br label %for.body.i77.i

for.body.i77.i:                                   ; preds = %for.body.i77.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i74.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i75.i.4, %for.body.i77.i ]
  %arrayidx.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i74.i
  %0 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !16
  %conv.i.i = zext i8 %0 to i32
  %arrayidx2.i.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i74.i
  store i32 %conv.i.i, ptr %arrayidx2.i.i, align 4, !tbaa !95
  %indvars.iv.next.i75.i = add nuw nsw i64 %indvars.iv.i74.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i75.i
  %1 = load i8, ptr %arrayidx.i.i.1, align 1, !tbaa !16
  %conv.i.i.1 = zext i8 %1 to i32
  %arrayidx2.i.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i
  store i32 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 4, !tbaa !95
  %indvars.iv.next.i75.i.1 = add nuw nsw i64 %indvars.iv.i74.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i75.i.1
  %2 = load i8, ptr %arrayidx.i.i.2, align 1, !tbaa !16
  %conv.i.i.2 = zext i8 %2 to i32
  %arrayidx2.i.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.1
  store i32 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 4, !tbaa !95
  %indvars.iv.next.i75.i.2 = add nuw nsw i64 %indvars.iv.i74.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i75.i.2
  %3 = load i8, ptr %arrayidx.i.i.3, align 1, !tbaa !16
  %conv.i.i.3 = zext i8 %3 to i32
  %arrayidx2.i.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.2
  store i32 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 4, !tbaa !95
  %indvars.iv.next.i75.i.3 = add nuw nsw i64 %indvars.iv.i74.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i75.i.3
  %4 = load i8, ptr %arrayidx.i.i.4, align 1, !tbaa !16
  %conv.i.i.4 = zext i8 %4 to i32
  %arrayidx2.i.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.3
  store i32 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 4, !tbaa !95
  %indvars.iv.next.i75.i.4 = add nuw nsw i64 %indvars.iv.i74.i, 5
  %exitcond.not.i76.i.4 = icmp eq i64 %indvars.iv.next.i75.i.4, 10000
  br i1 %exitcond.not.i76.i.4, label %vector.body, label %for.body.i77.i, !llvm.loop !276

vector.body:                                      ; preds = %for.body.i77.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i77.i ]
  %5 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <16 x i8>, ptr %5, align 1, !tbaa !16
  %6 = getelementptr inbounds i8, ptr %5, i64 16
  %wide.load27 = load <16 x i8>, ptr %6, align 1, !tbaa !16
  %7 = getelementptr inbounds i8, ptr %5, i64 32
  %wide.load28 = load <16 x i8>, ptr %7, align 1, !tbaa !16
  %8 = getelementptr inbounds i8, ptr %5, i64 48
  %wide.load29 = load <16 x i8>, ptr %8, align 1, !tbaa !16
  %9 = zext <16 x i8> %wide.load to <16 x i32>
  %10 = zext <16 x i8> %wide.load27 to <16 x i32>
  %11 = zext <16 x i8> %wide.load28 to <16 x i32>
  %12 = zext <16 x i8> %wide.load29 to <16 x i32>
  %13 = getelementptr inbounds i32, ptr %call1.i, i64 %index
  store <16 x i32> %9, ptr %13, align 4, !tbaa !95
  %14 = getelementptr inbounds i32, ptr %13, i64 16
  store <16 x i32> %10, ptr %14, align 4, !tbaa !95
  %15 = getelementptr inbounds i32, ptr %13, i64 32
  store <16 x i32> %11, ptr %15, align 4, !tbaa !95
  %16 = getelementptr inbounds i32, ptr %13, i64 48
  store <16 x i32> %12, ptr %16, align 4, !tbaa !95
  %index.next = add nuw i64 %index, 64
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !286

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i, i64 9984
  %18 = load i8, ptr %arrayidx.i, align 1, !tbaa !16
  %conv.i = zext i8 %18 to i32
  %arrayidx2.i = getelementptr inbounds i32, ptr %call1.i, i64 9984
  store i32 %conv.i, ptr %arrayidx2.i, align 4, !tbaa !95
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %call.i, i64 9985
  %19 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !16
  %conv.i.1 = zext i8 %19 to i32
  %arrayidx2.i.1 = getelementptr inbounds i32, ptr %call1.i, i64 9985
  store i32 %conv.i.1, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %call.i, i64 9986
  %20 = load i8, ptr %arrayidx.i.2, align 1, !tbaa !16
  %conv.i.2 = zext i8 %20 to i32
  %arrayidx2.i.2 = getelementptr inbounds i32, ptr %call1.i, i64 9986
  store i32 %conv.i.2, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %call.i, i64 9987
  %21 = load i8, ptr %arrayidx.i.3, align 1, !tbaa !16
  %conv.i.3 = zext i8 %21 to i32
  %arrayidx2.i.3 = getelementptr inbounds i32, ptr %call1.i, i64 9987
  store i32 %conv.i.3, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %arrayidx.i.4 = getelementptr inbounds i8, ptr %call.i, i64 9988
  %22 = load i8, ptr %arrayidx.i.4, align 1, !tbaa !16
  %conv.i.4 = zext i8 %22 to i32
  %arrayidx2.i.4 = getelementptr inbounds i32, ptr %call1.i, i64 9988
  store i32 %conv.i.4, ptr %arrayidx2.i.4, align 4, !tbaa !95
  %arrayidx.i.5 = getelementptr inbounds i8, ptr %call.i, i64 9989
  %23 = load i8, ptr %arrayidx.i.5, align 1, !tbaa !16
  %conv.i.5 = zext i8 %23 to i32
  %arrayidx2.i.5 = getelementptr inbounds i32, ptr %call1.i, i64 9989
  store i32 %conv.i.5, ptr %arrayidx2.i.5, align 4, !tbaa !95
  %arrayidx.i.6 = getelementptr inbounds i8, ptr %call.i, i64 9990
  %24 = load i8, ptr %arrayidx.i.6, align 1, !tbaa !16
  %conv.i.6 = zext i8 %24 to i32
  %arrayidx2.i.6 = getelementptr inbounds i32, ptr %call1.i, i64 9990
  store i32 %conv.i.6, ptr %arrayidx2.i.6, align 4, !tbaa !95
  %arrayidx.i.7 = getelementptr inbounds i8, ptr %call.i, i64 9991
  %25 = load i8, ptr %arrayidx.i.7, align 1, !tbaa !16
  %conv.i.7 = zext i8 %25 to i32
  %arrayidx2.i.7 = getelementptr inbounds i32, ptr %call1.i, i64 9991
  store i32 %conv.i.7, ptr %arrayidx2.i.7, align 4, !tbaa !95
  %arrayidx.i.8 = getelementptr inbounds i8, ptr %call.i, i64 9992
  %26 = load i8, ptr %arrayidx.i.8, align 1, !tbaa !16
  %conv.i.8 = zext i8 %26 to i32
  %arrayidx2.i.8 = getelementptr inbounds i32, ptr %call1.i, i64 9992
  store i32 %conv.i.8, ptr %arrayidx2.i.8, align 4, !tbaa !95
  %arrayidx.i.9 = getelementptr inbounds i8, ptr %call.i, i64 9993
  %27 = load i8, ptr %arrayidx.i.9, align 1, !tbaa !16
  %conv.i.9 = zext i8 %27 to i32
  %arrayidx2.i.9 = getelementptr inbounds i32, ptr %call1.i, i64 9993
  store i32 %conv.i.9, ptr %arrayidx2.i.9, align 4, !tbaa !95
  %arrayidx.i.10 = getelementptr inbounds i8, ptr %call.i, i64 9994
  %28 = load i8, ptr %arrayidx.i.10, align 1, !tbaa !16
  %conv.i.10 = zext i8 %28 to i32
  %arrayidx2.i.10 = getelementptr inbounds i32, ptr %call1.i, i64 9994
  store i32 %conv.i.10, ptr %arrayidx2.i.10, align 4, !tbaa !95
  %arrayidx.i.11 = getelementptr inbounds i8, ptr %call.i, i64 9995
  %29 = load i8, ptr %arrayidx.i.11, align 1, !tbaa !16
  %conv.i.11 = zext i8 %29 to i32
  %arrayidx2.i.11 = getelementptr inbounds i32, ptr %call1.i, i64 9995
  store i32 %conv.i.11, ptr %arrayidx2.i.11, align 4, !tbaa !95
  %arrayidx.i.12 = getelementptr inbounds i8, ptr %call.i, i64 9996
  %30 = load i8, ptr %arrayidx.i.12, align 1, !tbaa !16
  %conv.i.12 = zext i8 %30 to i32
  %arrayidx2.i.12 = getelementptr inbounds i32, ptr %call1.i, i64 9996
  store i32 %conv.i.12, ptr %arrayidx2.i.12, align 4, !tbaa !95
  %arrayidx.i.13 = getelementptr inbounds i8, ptr %call.i, i64 9997
  %31 = load i8, ptr %arrayidx.i.13, align 1, !tbaa !16
  %conv.i.13 = zext i8 %31 to i32
  %arrayidx2.i.13 = getelementptr inbounds i32, ptr %call1.i, i64 9997
  store i32 %conv.i.13, ptr %arrayidx2.i.13, align 4, !tbaa !95
  %arrayidx.i.14 = getelementptr inbounds i8, ptr %call.i, i64 9998
  %32 = load i8, ptr %arrayidx.i.14, align 1, !tbaa !16
  %conv.i.14 = zext i8 %32 to i32
  %arrayidx2.i.14 = getelementptr inbounds i32, ptr %call1.i, i64 9998
  store i32 %conv.i.14, ptr %arrayidx2.i.14, align 4, !tbaa !95
  %arrayidx.i.15 = getelementptr inbounds i8, ptr %call.i, i64 9999
  %33 = load i8, ptr %arrayidx.i.15, align 1, !tbaa !16
  %conv.i.15 = zext i8 %33 to i32
  %arrayidx2.i.15 = getelementptr inbounds i32, ptr %call1.i, i64 9999
  store i32 %conv.i.15, ptr %arrayidx2.i.15, align 4, !tbaa !95
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i78.i.1 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i32, ptr %arrayidx.i78.i.1, align 4, !tbaa !95
  %arrayidx.i79.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i32, ptr %arrayidx.i79.i.1, align 4, !tbaa !95
  %cmp16.not.i.1 = icmp eq i32 %34, %35
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i78.i.2 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i32, ptr %arrayidx.i78.i.2, align 4, !tbaa !95
  %arrayidx.i79.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i32, ptr %arrayidx.i79.i.2, align 4, !tbaa !95
  %cmp16.not.i.2 = icmp eq i32 %36, %37
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i78.i.3 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i32, ptr %arrayidx.i78.i.3, align 4, !tbaa !95
  %arrayidx.i79.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i32, ptr %arrayidx.i79.i.3, align 4, !tbaa !95
  %cmp16.not.i.3 = icmp eq i32 %38, %39
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i78.i.4 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i32, ptr %arrayidx.i78.i.4, align 4, !tbaa !95
  %arrayidx.i79.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i32, ptr %arrayidx.i79.i.4, align 4, !tbaa !95
  %cmp16.not.i.4 = icmp eq i32 %40, %41
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !278

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not141145.i = icmp eq i64 %43, 0
  %cmp.not.i.not141.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not141145.i
  br i1 %cmp.not.i.not141.i, label %if.end.i.i, label %for.body48.i.preheader, !prof !42

for.body48.i.preheader:                           ; preds = %for.cond44.preheader.i
  %scevgep30 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body48.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

ehcleanup59.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i112.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i78.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i32, ptr %arrayidx.i78.i, align 4, !tbaa !95
  %arrayidx.i79.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i32, ptr %arrayidx.i79.i, align 4, !tbaa !95
  %cmp16.not.i = icmp eq i32 %46, %47
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i32 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i78.i.le = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i81.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i82.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i8, ptr %arrayidx.i82.i, align 1, !tbaa !16
  %call23.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %48)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i85.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call23.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %49 = load i32, ptr %arrayidx.i78.i.le, align 4, !tbaa !95
  %conv.i88.i = zext i32 %49 to i64
  %call.i89.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call23.i, i64 noundef %conv.i88.i)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i92.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %conv.i95.i = zext i32 %.lcssa to i64
  %call.i96.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, i64 noundef %conv.i95.i)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i96.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

if.end.i.i:                                       ; preds = %invoke.cont52.i, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i100.i = icmp eq ptr %51, null
  br i1 %cmp.not.i100.i, label %_ZL28benchForTruncOrZextVecInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i101.i

delete.notnull.i.i101.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body48.i:                                     ; preds = %for.body48.i.preheader, %invoke.cont52.i
  %__begin1.sroa.0.0142.i = phi i64 [ %dec.i.i, %invoke.cont52.i ], [ %43, %for.body48.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %54, i64 40000
  %bound0 = icmp ult ptr %54, %scevgep30
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13.preheader, label %vector.body36

vector.body36:                                    ; preds = %for.body48.i, %vector.body36
  %index37 = phi i64 [ %index.next42, %vector.body36 ], [ 0, %for.body48.i ]
  %55 = getelementptr inbounds i8, ptr %call.i, i64 %index37
  %wide.load38 = load <16 x i8>, ptr %55, align 1, !tbaa !16, !alias.scope !287
  %56 = getelementptr inbounds i8, ptr %55, i64 16
  %wide.load39 = load <16 x i8>, ptr %56, align 1, !tbaa !16, !alias.scope !287
  %57 = getelementptr inbounds i8, ptr %55, i64 32
  %wide.load40 = load <16 x i8>, ptr %57, align 1, !tbaa !16, !alias.scope !287
  %58 = getelementptr inbounds i8, ptr %55, i64 48
  %wide.load41 = load <16 x i8>, ptr %58, align 1, !tbaa !16, !alias.scope !287
  %59 = zext <16 x i8> %wide.load38 to <16 x i32>
  %60 = zext <16 x i8> %wide.load39 to <16 x i32>
  %61 = zext <16 x i8> %wide.load40 to <16 x i32>
  %62 = zext <16 x i8> %wide.load41 to <16 x i32>
  %63 = getelementptr inbounds i32, ptr %54, i64 %index37
  store <16 x i32> %59, ptr %63, align 4, !tbaa !95, !alias.scope !290, !noalias !287
  %64 = getelementptr inbounds i32, ptr %63, i64 16
  store <16 x i32> %60, ptr %64, align 4, !tbaa !95, !alias.scope !290, !noalias !287
  %65 = getelementptr inbounds i32, ptr %63, i64 32
  store <16 x i32> %61, ptr %65, align 4, !tbaa !95, !alias.scope !290, !noalias !287
  %66 = getelementptr inbounds i32, ptr %63, i64 48
  store <16 x i32> %62, ptr %66, align 4, !tbaa !95, !alias.scope !290, !noalias !287
  %index.next42 = add nuw i64 %index37, 64
  %67 = icmp eq i64 %index.next42, 9984
  br i1 %67, label %for.body.i13.preheader, label %vector.body36, !llvm.loop !292

for.body.i13.preheader:                           ; preds = %vector.body36, %for.body48.i
  %indvars.iv.i7.ph = phi i64 [ 0, %for.body48.i ], [ 9984, %vector.body36 ]
  br label %for.body.i13

for.body.i13:                                     ; preds = %for.body.i13, %for.body.i13.preheader
  %indvars.iv.i7 = phi i64 [ %indvars.iv.i7.ph, %for.body.i13.preheader ], [ %indvars.iv.next.i11.3, %for.body.i13 ]
  %arrayidx.i8 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i7
  %68 = load i8, ptr %arrayidx.i8, align 1, !tbaa !16
  %conv.i9 = zext i8 %68 to i32
  %arrayidx2.i10 = getelementptr inbounds i32, ptr %54, i64 %indvars.iv.i7
  store i32 %conv.i9, ptr %arrayidx2.i10, align 4, !tbaa !95
  %indvars.iv.next.i11 = or i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11
  %69 = load i8, ptr %arrayidx.i8.1, align 1, !tbaa !16
  %conv.i9.1 = zext i8 %69 to i32
  %arrayidx2.i10.1 = getelementptr inbounds i32, ptr %54, i64 %indvars.iv.next.i11
  store i32 %conv.i9.1, ptr %arrayidx2.i10.1, align 4, !tbaa !95
  %indvars.iv.next.i11.1 = or i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.1
  %70 = load i8, ptr %arrayidx.i8.2, align 1, !tbaa !16
  %conv.i9.2 = zext i8 %70 to i32
  %arrayidx2.i10.2 = getelementptr inbounds i32, ptr %54, i64 %indvars.iv.next.i11.1
  store i32 %conv.i9.2, ptr %arrayidx2.i10.2, align 4, !tbaa !95
  %indvars.iv.next.i11.2 = or i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.2
  %71 = load i8, ptr %arrayidx.i8.3, align 1, !tbaa !16
  %conv.i9.3 = zext i8 %71 to i32
  %arrayidx2.i10.3 = getelementptr inbounds i32, ptr %54, i64 %indvars.iv.next.i11.2
  store i32 %conv.i9.3, ptr %arrayidx2.i10.3, align 4, !tbaa !95
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %exitcond.not.i12.3 = icmp eq i64 %indvars.iv.next.i11.3, 10000
  br i1 %exitcond.not.i12.3, label %invoke.cont52.i, label %for.body.i13, !llvm.loop !293

invoke.cont52.i:                                  ; preds = %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0142.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup59.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn131.i = phi { ptr, i32 } [ %50, %lpad17.i ], [ %52, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i111.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i111.i, label %ehcleanup61.i, label %delete.notnull.i.i112.i

delete.notnull.i.i112.i:                          ; preds = %ehcleanup59.i, %ehcleanup59.thread.i
  %.pn131.pn137.i = phi { ptr, i32 } [ %45, %ehcleanup59.thread.i ], [ %.pn131.i, %ehcleanup59.i ]
  %72 = phi ptr [ %call1.i, %ehcleanup59.thread.i ], [ %.pr.i, %ehcleanup59.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup61.i

ehcleanup61.i:                                    ; preds = %delete.notnull.i.i112.i, %ehcleanup59.i, %lpad.i
  %.pn131.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn131.i, %ehcleanup59.i ], [ %.pn131.pn137.i, %delete.notnull.i.i112.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn131.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i101.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z53benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont3.i unwind label %ehcleanup59.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i73.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i73.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  br label %for.body.i77.i

for.body.i77.i:                                   ; preds = %for.body.i77.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i74.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i75.i.4, %for.body.i77.i ]
  %arrayidx.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i74.i
  %0 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !16
  %conv.i.i = zext i8 %0 to i32
  %arrayidx2.i.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i74.i
  store i32 %conv.i.i, ptr %arrayidx2.i.i, align 4, !tbaa !95
  %indvars.iv.next.i75.i = add nuw nsw i64 %indvars.iv.i74.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i75.i
  %1 = load i8, ptr %arrayidx.i.i.1, align 1, !tbaa !16
  %conv.i.i.1 = zext i8 %1 to i32
  %arrayidx2.i.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i
  store i32 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 4, !tbaa !95
  %indvars.iv.next.i75.i.1 = add nuw nsw i64 %indvars.iv.i74.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i75.i.1
  %2 = load i8, ptr %arrayidx.i.i.2, align 1, !tbaa !16
  %conv.i.i.2 = zext i8 %2 to i32
  %arrayidx2.i.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.1
  store i32 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 4, !tbaa !95
  %indvars.iv.next.i75.i.2 = add nuw nsw i64 %indvars.iv.i74.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i75.i.2
  %3 = load i8, ptr %arrayidx.i.i.3, align 1, !tbaa !16
  %conv.i.i.3 = zext i8 %3 to i32
  %arrayidx2.i.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.2
  store i32 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 4, !tbaa !95
  %indvars.iv.next.i75.i.3 = add nuw nsw i64 %indvars.iv.i74.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i75.i.3
  %4 = load i8, ptr %arrayidx.i.i.4, align 1, !tbaa !16
  %conv.i.i.4 = zext i8 %4 to i32
  %arrayidx2.i.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.3
  store i32 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 4, !tbaa !95
  %indvars.iv.next.i75.i.4 = add nuw nsw i64 %indvars.iv.i74.i, 5
  %exitcond.not.i76.i.4 = icmp eq i64 %indvars.iv.next.i75.i.4, 10000
  br i1 %exitcond.not.i76.i.4, label %vector.body, label %for.body.i77.i, !llvm.loop !276

vector.body:                                      ; preds = %for.body.i77.i, %vector.body
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %for.body.i77.i ]
  %5 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <4 x i8>, ptr %5, align 1, !tbaa !16
  %6 = getelementptr inbounds i8, ptr %5, i64 4
  %wide.load27 = load <4 x i8>, ptr %6, align 1, !tbaa !16
  %7 = zext <4 x i8> %wide.load to <4 x i32>
  %8 = zext <4 x i8> %wide.load27 to <4 x i32>
  %9 = getelementptr inbounds i32, ptr %call1.i, i64 %index
  store <4 x i32> %7, ptr %9, align 4, !tbaa !95
  %10 = getelementptr inbounds i32, ptr %9, i64 4
  store <4 x i32> %8, ptr %10, align 4, !tbaa !95
  %index.next = or i64 %index, 8
  %11 = getelementptr inbounds i8, ptr %call.i, i64 %index.next
  %wide.load.1 = load <4 x i8>, ptr %11, align 1, !tbaa !16
  %12 = getelementptr inbounds i8, ptr %11, i64 4
  %wide.load27.1 = load <4 x i8>, ptr %12, align 1, !tbaa !16
  %13 = zext <4 x i8> %wide.load.1 to <4 x i32>
  %14 = zext <4 x i8> %wide.load27.1 to <4 x i32>
  %15 = getelementptr inbounds i32, ptr %call1.i, i64 %index.next
  store <4 x i32> %13, ptr %15, align 4, !tbaa !95
  %16 = getelementptr inbounds i32, ptr %15, i64 4
  store <4 x i32> %14, ptr %16, align 4, !tbaa !95
  %index.next.1 = add nuw nsw i64 %index, 16
  %17 = icmp eq i64 %index.next.1, 10000
  br i1 %17, label %for.body.i, label %vector.body, !llvm.loop !294

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i78.i.1 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i
  %18 = load i32, ptr %arrayidx.i78.i.1, align 4, !tbaa !95
  %arrayidx.i79.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i
  %19 = load i32, ptr %arrayidx.i79.i.1, align 4, !tbaa !95
  %cmp16.not.i.1 = icmp eq i32 %18, %19
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i78.i.2 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.1
  %20 = load i32, ptr %arrayidx.i78.i.2, align 4, !tbaa !95
  %arrayidx.i79.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.1
  %21 = load i32, ptr %arrayidx.i79.i.2, align 4, !tbaa !95
  %cmp16.not.i.2 = icmp eq i32 %20, %21
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i78.i.3 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.2
  %22 = load i32, ptr %arrayidx.i78.i.3, align 4, !tbaa !95
  %arrayidx.i79.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.2
  %23 = load i32, ptr %arrayidx.i79.i.3, align 4, !tbaa !95
  %cmp16.not.i.3 = icmp eq i32 %22, %23
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i78.i.4 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.3
  %24 = load i32, ptr %arrayidx.i78.i.4, align 4, !tbaa !95
  %arrayidx.i79.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.3
  %25 = load i32, ptr %arrayidx.i79.i.4, align 4, !tbaa !95
  %cmp16.not.i.4 = icmp eq i32 %24, %25
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !278

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %26 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %27 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %26, 0
  %cmp.not.i.not141145.i = icmp eq i64 %27, 0
  %cmp.not.i.not141.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not141145.i
  br i1 %cmp.not.i.not141.i, label %if.end.i.i, label %for.body48.i.preheader, !prof !42

for.body48.i.preheader:                           ; preds = %for.cond44.preheader.i
  %scevgep28 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body48.i

lpad.i:                                           ; preds = %entry
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

ehcleanup59.thread.i:                             ; preds = %invoke.cont.i
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i112.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body.i:                                       ; preds = %vector.body, %for.cond.i.4
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.4, %for.cond.i.4 ], [ 0, %vector.body ]
  %arrayidx.i78.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i
  %30 = load i32, ptr %arrayidx.i78.i, align 4, !tbaa !95
  %arrayidx.i79.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i
  %31 = load i32, ptr %arrayidx.i79.i, align 4, !tbaa !95
  %cmp16.not.i = icmp eq i32 %30, %31
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i32 [ %31, %for.body.i ], [ %19, %for.cond.i ], [ %21, %for.cond.i.1 ], [ %23, %for.cond.i.2 ], [ %25, %for.cond.i.3 ]
  %arrayidx.i78.i.le = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i81.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i82.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.lcssa
  %32 = load i8, ptr %arrayidx.i82.i, align 1, !tbaa !16
  %call23.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %32)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i85.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call23.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %33 = load i32, ptr %arrayidx.i78.i.le, align 4, !tbaa !95
  %conv.i88.i = zext i32 %33 to i64
  %call.i89.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call23.i, i64 noundef %conv.i88.i)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i92.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %conv.i95.i = zext i32 %.lcssa to i64
  %call.i96.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, i64 noundef %conv.i95.i)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i96.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %34 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

if.end.i.i:                                       ; preds = %invoke.cont52.i, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %35 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i100.i = icmp eq ptr %35, null
  br i1 %cmp.not.i100.i, label %_ZL28benchForTruncOrZextVecInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i101.i

delete.notnull.i.i101.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %35) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body48.i:                                     ; preds = %for.body48.i.preheader, %invoke.cont52.i
  %__begin1.sroa.0.0142.i = phi i64 [ %dec.i.i, %invoke.cont52.i ], [ %27, %for.body48.i.preheader ]
  %37 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %37) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %38 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %38, i64 40000
  %bound0 = icmp ult ptr %38, %scevgep28
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13, label %vector.body34

vector.body34:                                    ; preds = %for.body48.i, %vector.body34
  %index35 = phi i64 [ %index.next38.1, %vector.body34 ], [ 0, %for.body48.i ]
  %39 = getelementptr inbounds i8, ptr %call.i, i64 %index35
  %wide.load36 = load <4 x i8>, ptr %39, align 1, !tbaa !16, !alias.scope !295
  %40 = getelementptr inbounds i8, ptr %39, i64 4
  %wide.load37 = load <4 x i8>, ptr %40, align 1, !tbaa !16, !alias.scope !295
  %41 = zext <4 x i8> %wide.load36 to <4 x i32>
  %42 = zext <4 x i8> %wide.load37 to <4 x i32>
  %43 = getelementptr inbounds i32, ptr %38, i64 %index35
  store <4 x i32> %41, ptr %43, align 4, !tbaa !95, !alias.scope !298, !noalias !295
  %44 = getelementptr inbounds i32, ptr %43, i64 4
  store <4 x i32> %42, ptr %44, align 4, !tbaa !95, !alias.scope !298, !noalias !295
  %index.next38 = or i64 %index35, 8
  %45 = getelementptr inbounds i8, ptr %call.i, i64 %index.next38
  %wide.load36.1 = load <4 x i8>, ptr %45, align 1, !tbaa !16, !alias.scope !295
  %46 = getelementptr inbounds i8, ptr %45, i64 4
  %wide.load37.1 = load <4 x i8>, ptr %46, align 1, !tbaa !16, !alias.scope !295
  %47 = zext <4 x i8> %wide.load36.1 to <4 x i32>
  %48 = zext <4 x i8> %wide.load37.1 to <4 x i32>
  %49 = getelementptr inbounds i32, ptr %38, i64 %index.next38
  store <4 x i32> %47, ptr %49, align 4, !tbaa !95, !alias.scope !298, !noalias !295
  %50 = getelementptr inbounds i32, ptr %49, i64 4
  store <4 x i32> %48, ptr %50, align 4, !tbaa !95, !alias.scope !298, !noalias !295
  %index.next38.1 = add nuw nsw i64 %index35, 16
  %51 = icmp eq i64 %index.next38.1, 10000
  br i1 %51, label %invoke.cont52.i, label %vector.body34, !llvm.loop !300

for.body.i13:                                     ; preds = %for.body48.i, %for.body.i13
  %indvars.iv.i7 = phi i64 [ %indvars.iv.next.i11.4, %for.body.i13 ], [ 0, %for.body48.i ]
  %arrayidx.i8 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i7
  %52 = load i8, ptr %arrayidx.i8, align 1, !tbaa !16
  %conv.i9 = zext i8 %52 to i32
  %arrayidx2.i10 = getelementptr inbounds i32, ptr %38, i64 %indvars.iv.i7
  store i32 %conv.i9, ptr %arrayidx2.i10, align 4, !tbaa !95
  %indvars.iv.next.i11 = add nuw nsw i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11
  %53 = load i8, ptr %arrayidx.i8.1, align 1, !tbaa !16
  %conv.i9.1 = zext i8 %53 to i32
  %arrayidx2.i10.1 = getelementptr inbounds i32, ptr %38, i64 %indvars.iv.next.i11
  store i32 %conv.i9.1, ptr %arrayidx2.i10.1, align 4, !tbaa !95
  %indvars.iv.next.i11.1 = add nuw nsw i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.1
  %54 = load i8, ptr %arrayidx.i8.2, align 1, !tbaa !16
  %conv.i9.2 = zext i8 %54 to i32
  %arrayidx2.i10.2 = getelementptr inbounds i32, ptr %38, i64 %indvars.iv.next.i11.1
  store i32 %conv.i9.2, ptr %arrayidx2.i10.2, align 4, !tbaa !95
  %indvars.iv.next.i11.2 = add nuw nsw i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.2
  %55 = load i8, ptr %arrayidx.i8.3, align 1, !tbaa !16
  %conv.i9.3 = zext i8 %55 to i32
  %arrayidx2.i10.3 = getelementptr inbounds i32, ptr %38, i64 %indvars.iv.next.i11.2
  store i32 %conv.i9.3, ptr %arrayidx2.i10.3, align 4, !tbaa !95
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %arrayidx.i8.4 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.3
  %56 = load i8, ptr %arrayidx.i8.4, align 1, !tbaa !16
  %conv.i9.4 = zext i8 %56 to i32
  %arrayidx2.i10.4 = getelementptr inbounds i32, ptr %38, i64 %indvars.iv.next.i11.3
  store i32 %conv.i9.4, ptr %arrayidx2.i10.4, align 4, !tbaa !95
  %indvars.iv.next.i11.4 = add nuw nsw i64 %indvars.iv.i7, 5
  %exitcond.not.i12.4 = icmp eq i64 %indvars.iv.next.i11.4, 10000
  br i1 %exitcond.not.i12.4, label %invoke.cont52.i, label %for.body.i13, !llvm.loop !301

invoke.cont52.i:                                  ; preds = %vector.body34, %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0142.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup59.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn131.i = phi { ptr, i32 } [ %34, %lpad17.i ], [ %36, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i111.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i111.i, label %ehcleanup61.i, label %delete.notnull.i.i112.i

delete.notnull.i.i112.i:                          ; preds = %ehcleanup59.i, %ehcleanup59.thread.i
  %.pn131.pn137.i = phi { ptr, i32 } [ %29, %ehcleanup59.thread.i ], [ %.pn131.i, %ehcleanup59.i ]
  %57 = phi ptr [ %call1.i, %ehcleanup59.thread.i ], [ %.pr.i, %ehcleanup59.i ]
  call void @_ZdaPv(ptr noundef nonnull %57) #13
  br label %ehcleanup61.i

ehcleanup61.i:                                    ; preds = %delete.notnull.i.i112.i, %ehcleanup59.i, %lpad.i
  %.pn131.pn.pn.i = phi { ptr, i32 } [ %28, %lpad.i ], [ %.pn131.i, %ehcleanup59.i ], [ %.pn131.pn137.i, %delete.notnull.i.i112.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn131.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i101.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i31.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  store i32 0, ptr %distrib.i32.i, align 4, !tbaa !92
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i33.i, align 4, !tbaa !94
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i34.i
  store i32 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 4, !tbaa !95
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep5 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %5, i64 40000
  %bound0 = icmp ult ptr %5, %scevgep5
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1.preheader, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i ]
  %6 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <8 x i8>, ptr %6, align 1, !tbaa !16, !alias.scope !302
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  %wide.load6 = load <8 x i8>, ptr %7, align 1, !tbaa !16, !alias.scope !302
  %8 = getelementptr inbounds i8, ptr %6, i64 16
  %wide.load7 = load <8 x i8>, ptr %8, align 1, !tbaa !16, !alias.scope !302
  %9 = getelementptr inbounds i8, ptr %6, i64 24
  %wide.load8 = load <8 x i8>, ptr %9, align 1, !tbaa !16, !alias.scope !302
  %10 = zext <8 x i8> %wide.load to <8 x i32>
  %11 = zext <8 x i8> %wide.load6 to <8 x i32>
  %12 = zext <8 x i8> %wide.load7 to <8 x i32>
  %13 = zext <8 x i8> %wide.load8 to <8 x i32>
  %14 = getelementptr inbounds i32, ptr %5, i64 %index
  %wide.load9 = load <8 x i32>, ptr %14, align 4, !tbaa !95, !alias.scope !305, !noalias !302
  %15 = getelementptr inbounds i32, ptr %14, i64 8
  %wide.load10 = load <8 x i32>, ptr %15, align 4, !tbaa !95, !alias.scope !305, !noalias !302
  %16 = getelementptr inbounds i32, ptr %14, i64 16
  %wide.load11 = load <8 x i32>, ptr %16, align 4, !tbaa !95, !alias.scope !305, !noalias !302
  %17 = getelementptr inbounds i32, ptr %14, i64 24
  %wide.load12 = load <8 x i32>, ptr %17, align 4, !tbaa !95, !alias.scope !305, !noalias !302
  %18 = add <8 x i32> %wide.load9, %10
  %19 = add <8 x i32> %wide.load10, %11
  %20 = add <8 x i32> %wide.load11, %12
  %21 = add <8 x i32> %wide.load12, %13
  store <8 x i32> %18, ptr %14, align 4, !tbaa !95, !alias.scope !305, !noalias !302
  store <8 x i32> %19, ptr %15, align 4, !tbaa !95, !alias.scope !305, !noalias !302
  store <8 x i32> %20, ptr %16, align 4, !tbaa !95, !alias.scope !305, !noalias !302
  store <8 x i32> %21, ptr %17, align 4, !tbaa !95, !alias.scope !305, !noalias !302
  %index.next = add nuw i64 %index, 32
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1.preheader, label %vector.body, !llvm.loop !307

for.body.i1.preheader:                            ; preds = %vector.body, %for.body.i
  %indvars.iv.i.ph = phi i64 [ 0, %for.body.i ], [ 9984, %vector.body ]
  br label %for.body.i1

for.body.i1:                                      ; preds = %for.body.i1, %for.body.i1.preheader
  %indvars.iv.i = phi i64 [ %indvars.iv.i.ph, %for.body.i1.preheader ], [ %indvars.iv.next.i.3, %for.body.i1 ]
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i
  %23 = load i8, ptr %arrayidx.i, align 1, !tbaa !16
  %conv.i = zext i8 %23 to i32
  %arrayidx2.i = getelementptr inbounds i32, ptr %5, i64 %indvars.iv.i
  %24 = load i32, ptr %arrayidx2.i, align 4, !tbaa !95
  %add.i = add i32 %24, %conv.i
  store i32 %add.i, ptr %arrayidx2.i, align 4, !tbaa !95
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i
  %25 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !16
  %conv.i.1 = zext i8 %25 to i32
  %arrayidx2.i.1 = getelementptr inbounds i32, ptr %5, i64 %indvars.iv.next.i
  %26 = load i32, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %add.i.1 = add i32 %26, %conv.i.1
  store i32 %add.i.1, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.1
  %27 = load i8, ptr %arrayidx.i.2, align 1, !tbaa !16
  %conv.i.2 = zext i8 %27 to i32
  %arrayidx2.i.2 = getelementptr inbounds i32, ptr %5, i64 %indvars.iv.next.i.1
  %28 = load i32, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %add.i.2 = add i32 %28, %conv.i.2
  store i32 %add.i.2, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.2
  %29 = load i8, ptr %arrayidx.i.3, align 1, !tbaa !16
  %conv.i.3 = zext i8 %29 to i32
  %arrayidx2.i.3 = getelementptr inbounds i32, ptr %5, i64 %indvars.iv.next.i.2
  %30 = load i32, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %add.i.3 = add i32 %30, %conv.i.3
  store i32 %add.i.3, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !308

invoke.cont19.i:                                  ; preds = %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %31 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %31, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %32 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %32) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %31, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i31.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  store i32 0, ptr %distrib.i32.i, align 4, !tbaa !92
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i33.i, align 4, !tbaa !94
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i34.i
  store i32 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 4, !tbaa !95
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep5 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %5, i64 40000
  %bound0 = icmp ult ptr %5, %scevgep5
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1.preheader, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i ]
  %6 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <16 x i8>, ptr %6, align 1, !tbaa !16, !alias.scope !309
  %7 = getelementptr inbounds i8, ptr %6, i64 16
  %wide.load6 = load <16 x i8>, ptr %7, align 1, !tbaa !16, !alias.scope !309
  %8 = getelementptr inbounds i8, ptr %6, i64 32
  %wide.load7 = load <16 x i8>, ptr %8, align 1, !tbaa !16, !alias.scope !309
  %9 = getelementptr inbounds i8, ptr %6, i64 48
  %wide.load8 = load <16 x i8>, ptr %9, align 1, !tbaa !16, !alias.scope !309
  %10 = zext <16 x i8> %wide.load to <16 x i32>
  %11 = zext <16 x i8> %wide.load6 to <16 x i32>
  %12 = zext <16 x i8> %wide.load7 to <16 x i32>
  %13 = zext <16 x i8> %wide.load8 to <16 x i32>
  %14 = getelementptr inbounds i32, ptr %5, i64 %index
  %wide.load9 = load <16 x i32>, ptr %14, align 4, !tbaa !95, !alias.scope !312, !noalias !309
  %15 = getelementptr inbounds i32, ptr %14, i64 16
  %wide.load10 = load <16 x i32>, ptr %15, align 4, !tbaa !95, !alias.scope !312, !noalias !309
  %16 = getelementptr inbounds i32, ptr %14, i64 32
  %wide.load11 = load <16 x i32>, ptr %16, align 4, !tbaa !95, !alias.scope !312, !noalias !309
  %17 = getelementptr inbounds i32, ptr %14, i64 48
  %wide.load12 = load <16 x i32>, ptr %17, align 4, !tbaa !95, !alias.scope !312, !noalias !309
  %18 = add <16 x i32> %wide.load9, %10
  %19 = add <16 x i32> %wide.load10, %11
  %20 = add <16 x i32> %wide.load11, %12
  %21 = add <16 x i32> %wide.load12, %13
  store <16 x i32> %18, ptr %14, align 4, !tbaa !95, !alias.scope !312, !noalias !309
  store <16 x i32> %19, ptr %15, align 4, !tbaa !95, !alias.scope !312, !noalias !309
  store <16 x i32> %20, ptr %16, align 4, !tbaa !95, !alias.scope !312, !noalias !309
  store <16 x i32> %21, ptr %17, align 4, !tbaa !95, !alias.scope !312, !noalias !309
  %index.next = add nuw i64 %index, 64
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1.preheader, label %vector.body, !llvm.loop !314

for.body.i1.preheader:                            ; preds = %vector.body, %for.body.i
  %indvars.iv.i.ph = phi i64 [ 0, %for.body.i ], [ 9984, %vector.body ]
  br label %for.body.i1

for.body.i1:                                      ; preds = %for.body.i1, %for.body.i1.preheader
  %indvars.iv.i = phi i64 [ %indvars.iv.i.ph, %for.body.i1.preheader ], [ %indvars.iv.next.i.3, %for.body.i1 ]
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i
  %23 = load i8, ptr %arrayidx.i, align 1, !tbaa !16
  %conv.i = zext i8 %23 to i32
  %arrayidx2.i = getelementptr inbounds i32, ptr %5, i64 %indvars.iv.i
  %24 = load i32, ptr %arrayidx2.i, align 4, !tbaa !95
  %add.i = add i32 %24, %conv.i
  store i32 %add.i, ptr %arrayidx2.i, align 4, !tbaa !95
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i
  %25 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !16
  %conv.i.1 = zext i8 %25 to i32
  %arrayidx2.i.1 = getelementptr inbounds i32, ptr %5, i64 %indvars.iv.next.i
  %26 = load i32, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %add.i.1 = add i32 %26, %conv.i.1
  store i32 %add.i.1, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.1
  %27 = load i8, ptr %arrayidx.i.2, align 1, !tbaa !16
  %conv.i.2 = zext i8 %27 to i32
  %arrayidx2.i.2 = getelementptr inbounds i32, ptr %5, i64 %indvars.iv.next.i.1
  %28 = load i32, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %add.i.2 = add i32 %28, %conv.i.2
  store i32 %add.i.2, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.2
  %29 = load i8, ptr %arrayidx.i.3, align 1, !tbaa !16
  %conv.i.3 = zext i8 %29 to i32
  %arrayidx2.i.3 = getelementptr inbounds i32, ptr %5, i64 %indvars.iv.next.i.2
  %30 = load i32, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %add.i.3 = add i32 %30, %conv.i.3
  store i32 %add.i.3, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !315

invoke.cont19.i:                                  ; preds = %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %31 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %31, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %32 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %32) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %31, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i31.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  store i32 0, ptr %distrib.i32.i, align 4, !tbaa !92
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i33.i, align 4, !tbaa !94
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i34.i
  store i32 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 4, !tbaa !95
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep5 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %5, i64 40000
  %bound0 = icmp ult ptr %5, %scevgep5
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %for.body.i ]
  %6 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <4 x i8>, ptr %6, align 1, !tbaa !16, !alias.scope !316
  %7 = getelementptr inbounds i8, ptr %6, i64 4
  %wide.load6 = load <4 x i8>, ptr %7, align 1, !tbaa !16, !alias.scope !316
  %8 = zext <4 x i8> %wide.load to <4 x i32>
  %9 = zext <4 x i8> %wide.load6 to <4 x i32>
  %10 = getelementptr inbounds i32, ptr %5, i64 %index
  %wide.load7 = load <4 x i32>, ptr %10, align 4, !tbaa !95, !alias.scope !319, !noalias !316
  %11 = getelementptr inbounds i32, ptr %10, i64 4
  %wide.load8 = load <4 x i32>, ptr %11, align 4, !tbaa !95, !alias.scope !319, !noalias !316
  %12 = add <4 x i32> %wide.load7, %8
  %13 = add <4 x i32> %wide.load8, %9
  store <4 x i32> %12, ptr %10, align 4, !tbaa !95, !alias.scope !319, !noalias !316
  store <4 x i32> %13, ptr %11, align 4, !tbaa !95, !alias.scope !319, !noalias !316
  %index.next = or i64 %index, 8
  %14 = getelementptr inbounds i8, ptr %call.i, i64 %index.next
  %wide.load.1 = load <4 x i8>, ptr %14, align 1, !tbaa !16, !alias.scope !316
  %15 = getelementptr inbounds i8, ptr %14, i64 4
  %wide.load6.1 = load <4 x i8>, ptr %15, align 1, !tbaa !16, !alias.scope !316
  %16 = zext <4 x i8> %wide.load.1 to <4 x i32>
  %17 = zext <4 x i8> %wide.load6.1 to <4 x i32>
  %18 = getelementptr inbounds i32, ptr %5, i64 %index.next
  %wide.load7.1 = load <4 x i32>, ptr %18, align 4, !tbaa !95, !alias.scope !319, !noalias !316
  %19 = getelementptr inbounds i32, ptr %18, i64 4
  %wide.load8.1 = load <4 x i32>, ptr %19, align 4, !tbaa !95, !alias.scope !319, !noalias !316
  %20 = add <4 x i32> %wide.load7.1, %16
  %21 = add <4 x i32> %wide.load8.1, %17
  store <4 x i32> %20, ptr %18, align 4, !tbaa !95, !alias.scope !319, !noalias !316
  store <4 x i32> %21, ptr %19, align 4, !tbaa !95, !alias.scope !319, !noalias !316
  %index.next.1 = add nuw nsw i64 %index, 16
  %22 = icmp eq i64 %index.next.1, 10000
  br i1 %22, label %invoke.cont19.i, label %vector.body, !llvm.loop !321

for.body.i1:                                      ; preds = %for.body.i, %for.body.i1
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body.i1 ], [ 0, %for.body.i ]
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i
  %23 = load i8, ptr %arrayidx.i, align 1, !tbaa !16
  %conv.i = zext i8 %23 to i32
  %arrayidx2.i = getelementptr inbounds i32, ptr %5, i64 %indvars.iv.i
  %24 = load i32, ptr %arrayidx2.i, align 4, !tbaa !95
  %add.i = add i32 %24, %conv.i
  store i32 %add.i, ptr %arrayidx2.i, align 4, !tbaa !95
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i
  %25 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !16
  %conv.i.1 = zext i8 %25 to i32
  %arrayidx2.i.1 = getelementptr inbounds i32, ptr %5, i64 %indvars.iv.next.i
  %26 = load i32, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %add.i.1 = add i32 %26, %conv.i.1
  store i32 %add.i.1, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.1
  %27 = load i8, ptr %arrayidx.i.2, align 1, !tbaa !16
  %conv.i.2 = zext i8 %27 to i32
  %arrayidx2.i.2 = getelementptr inbounds i32, ptr %5, i64 %indvars.iv.next.i.1
  %28 = load i32, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %add.i.2 = add i32 %28, %conv.i.2
  store i32 %add.i.2, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.2
  %29 = load i8, ptr %arrayidx.i.3, align 1, !tbaa !16
  %conv.i.3 = zext i8 %29 to i32
  %arrayidx2.i.3 = getelementptr inbounds i32, ptr %5, i64 %indvars.iv.next.i.2
  %30 = load i32, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %add.i.3 = add i32 %30, %conv.i.3
  store i32 %add.i.3, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !322

invoke.cont19.i:                                  ; preds = %vector.body, %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %31 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %31, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %32 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %32) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %31, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIhjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont3.i unwind label %ehcleanup60.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i74.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i74.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  br label %for.body.i78.i

for.body.i78.i:                                   ; preds = %for.body.i78.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i75.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i76.i.4, %for.body.i78.i ]
  %arrayidx.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i75.i
  %0 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !16
  %conv.i.i = zext i8 %0 to i64
  %arrayidx2.i.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i75.i
  store i64 %conv.i.i, ptr %arrayidx2.i.i, align 8, !tbaa !147
  %indvars.iv.next.i76.i = add nuw nsw i64 %indvars.iv.i75.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i76.i
  %1 = load i8, ptr %arrayidx.i.i.1, align 1, !tbaa !16
  %conv.i.i.1 = zext i8 %1 to i64
  %arrayidx2.i.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i76.i
  store i64 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 8, !tbaa !147
  %indvars.iv.next.i76.i.1 = add nuw nsw i64 %indvars.iv.i75.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i76.i.1
  %2 = load i8, ptr %arrayidx.i.i.2, align 1, !tbaa !16
  %conv.i.i.2 = zext i8 %2 to i64
  %arrayidx2.i.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i76.i.1
  store i64 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 8, !tbaa !147
  %indvars.iv.next.i76.i.2 = add nuw nsw i64 %indvars.iv.i75.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i76.i.2
  %3 = load i8, ptr %arrayidx.i.i.3, align 1, !tbaa !16
  %conv.i.i.3 = zext i8 %3 to i64
  %arrayidx2.i.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i76.i.2
  store i64 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 8, !tbaa !147
  %indvars.iv.next.i76.i.3 = add nuw nsw i64 %indvars.iv.i75.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i76.i.3
  %4 = load i8, ptr %arrayidx.i.i.4, align 1, !tbaa !16
  %conv.i.i.4 = zext i8 %4 to i64
  %arrayidx2.i.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i76.i.3
  store i64 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 8, !tbaa !147
  %indvars.iv.next.i76.i.4 = add nuw nsw i64 %indvars.iv.i75.i, 5
  %exitcond.not.i77.i.4 = icmp eq i64 %indvars.iv.next.i76.i.4, 10000
  br i1 %exitcond.not.i77.i.4, label %vector.body, label %for.body.i78.i, !llvm.loop !323

vector.body:                                      ; preds = %for.body.i78.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i78.i ]
  %5 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <8 x i8>, ptr %5, align 1, !tbaa !16
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  %wide.load27 = load <8 x i8>, ptr %6, align 1, !tbaa !16
  %7 = getelementptr inbounds i8, ptr %5, i64 16
  %wide.load28 = load <8 x i8>, ptr %7, align 1, !tbaa !16
  %8 = getelementptr inbounds i8, ptr %5, i64 24
  %wide.load29 = load <8 x i8>, ptr %8, align 1, !tbaa !16
  %9 = zext <8 x i8> %wide.load to <8 x i64>
  %10 = zext <8 x i8> %wide.load27 to <8 x i64>
  %11 = zext <8 x i8> %wide.load28 to <8 x i64>
  %12 = zext <8 x i8> %wide.load29 to <8 x i64>
  %13 = getelementptr inbounds i64, ptr %call1.i, i64 %index
  store <8 x i64> %9, ptr %13, align 8, !tbaa !147
  %14 = getelementptr inbounds i64, ptr %13, i64 8
  store <8 x i64> %10, ptr %14, align 8, !tbaa !147
  %15 = getelementptr inbounds i64, ptr %13, i64 16
  store <8 x i64> %11, ptr %15, align 8, !tbaa !147
  %16 = getelementptr inbounds i64, ptr %13, i64 24
  store <8 x i64> %12, ptr %16, align 8, !tbaa !147
  %index.next = add nuw i64 %index, 32
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !324

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i, i64 9984
  %18 = load i8, ptr %arrayidx.i, align 1, !tbaa !16
  %conv.i = zext i8 %18 to i64
  %arrayidx2.i = getelementptr inbounds i64, ptr %call1.i, i64 9984
  store i64 %conv.i, ptr %arrayidx2.i, align 8, !tbaa !147
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %call.i, i64 9985
  %19 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !16
  %conv.i.1 = zext i8 %19 to i64
  %arrayidx2.i.1 = getelementptr inbounds i64, ptr %call1.i, i64 9985
  store i64 %conv.i.1, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %call.i, i64 9986
  %20 = load i8, ptr %arrayidx.i.2, align 1, !tbaa !16
  %conv.i.2 = zext i8 %20 to i64
  %arrayidx2.i.2 = getelementptr inbounds i64, ptr %call1.i, i64 9986
  store i64 %conv.i.2, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %call.i, i64 9987
  %21 = load i8, ptr %arrayidx.i.3, align 1, !tbaa !16
  %conv.i.3 = zext i8 %21 to i64
  %arrayidx2.i.3 = getelementptr inbounds i64, ptr %call1.i, i64 9987
  store i64 %conv.i.3, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %arrayidx.i.4 = getelementptr inbounds i8, ptr %call.i, i64 9988
  %22 = load i8, ptr %arrayidx.i.4, align 1, !tbaa !16
  %conv.i.4 = zext i8 %22 to i64
  %arrayidx2.i.4 = getelementptr inbounds i64, ptr %call1.i, i64 9988
  store i64 %conv.i.4, ptr %arrayidx2.i.4, align 8, !tbaa !147
  %arrayidx.i.5 = getelementptr inbounds i8, ptr %call.i, i64 9989
  %23 = load i8, ptr %arrayidx.i.5, align 1, !tbaa !16
  %conv.i.5 = zext i8 %23 to i64
  %arrayidx2.i.5 = getelementptr inbounds i64, ptr %call1.i, i64 9989
  store i64 %conv.i.5, ptr %arrayidx2.i.5, align 8, !tbaa !147
  %arrayidx.i.6 = getelementptr inbounds i8, ptr %call.i, i64 9990
  %24 = load i8, ptr %arrayidx.i.6, align 1, !tbaa !16
  %conv.i.6 = zext i8 %24 to i64
  %arrayidx2.i.6 = getelementptr inbounds i64, ptr %call1.i, i64 9990
  store i64 %conv.i.6, ptr %arrayidx2.i.6, align 8, !tbaa !147
  %arrayidx.i.7 = getelementptr inbounds i8, ptr %call.i, i64 9991
  %25 = load i8, ptr %arrayidx.i.7, align 1, !tbaa !16
  %conv.i.7 = zext i8 %25 to i64
  %arrayidx2.i.7 = getelementptr inbounds i64, ptr %call1.i, i64 9991
  store i64 %conv.i.7, ptr %arrayidx2.i.7, align 8, !tbaa !147
  %arrayidx.i.8 = getelementptr inbounds i8, ptr %call.i, i64 9992
  %26 = load i8, ptr %arrayidx.i.8, align 1, !tbaa !16
  %conv.i.8 = zext i8 %26 to i64
  %arrayidx2.i.8 = getelementptr inbounds i64, ptr %call1.i, i64 9992
  store i64 %conv.i.8, ptr %arrayidx2.i.8, align 8, !tbaa !147
  %arrayidx.i.9 = getelementptr inbounds i8, ptr %call.i, i64 9993
  %27 = load i8, ptr %arrayidx.i.9, align 1, !tbaa !16
  %conv.i.9 = zext i8 %27 to i64
  %arrayidx2.i.9 = getelementptr inbounds i64, ptr %call1.i, i64 9993
  store i64 %conv.i.9, ptr %arrayidx2.i.9, align 8, !tbaa !147
  %arrayidx.i.10 = getelementptr inbounds i8, ptr %call.i, i64 9994
  %28 = load i8, ptr %arrayidx.i.10, align 1, !tbaa !16
  %conv.i.10 = zext i8 %28 to i64
  %arrayidx2.i.10 = getelementptr inbounds i64, ptr %call1.i, i64 9994
  store i64 %conv.i.10, ptr %arrayidx2.i.10, align 8, !tbaa !147
  %arrayidx.i.11 = getelementptr inbounds i8, ptr %call.i, i64 9995
  %29 = load i8, ptr %arrayidx.i.11, align 1, !tbaa !16
  %conv.i.11 = zext i8 %29 to i64
  %arrayidx2.i.11 = getelementptr inbounds i64, ptr %call1.i, i64 9995
  store i64 %conv.i.11, ptr %arrayidx2.i.11, align 8, !tbaa !147
  %arrayidx.i.12 = getelementptr inbounds i8, ptr %call.i, i64 9996
  %30 = load i8, ptr %arrayidx.i.12, align 1, !tbaa !16
  %conv.i.12 = zext i8 %30 to i64
  %arrayidx2.i.12 = getelementptr inbounds i64, ptr %call1.i, i64 9996
  store i64 %conv.i.12, ptr %arrayidx2.i.12, align 8, !tbaa !147
  %arrayidx.i.13 = getelementptr inbounds i8, ptr %call.i, i64 9997
  %31 = load i8, ptr %arrayidx.i.13, align 1, !tbaa !16
  %conv.i.13 = zext i8 %31 to i64
  %arrayidx2.i.13 = getelementptr inbounds i64, ptr %call1.i, i64 9997
  store i64 %conv.i.13, ptr %arrayidx2.i.13, align 8, !tbaa !147
  %arrayidx.i.14 = getelementptr inbounds i8, ptr %call.i, i64 9998
  %32 = load i8, ptr %arrayidx.i.14, align 1, !tbaa !16
  %conv.i.14 = zext i8 %32 to i64
  %arrayidx2.i.14 = getelementptr inbounds i64, ptr %call1.i, i64 9998
  store i64 %conv.i.14, ptr %arrayidx2.i.14, align 8, !tbaa !147
  %arrayidx.i.15 = getelementptr inbounds i8, ptr %call.i, i64 9999
  %33 = load i8, ptr %arrayidx.i.15, align 1, !tbaa !16
  %conv.i.15 = zext i8 %33 to i64
  %arrayidx2.i.15 = getelementptr inbounds i64, ptr %call1.i, i64 9999
  store i64 %conv.i.15, ptr %arrayidx2.i.15, align 8, !tbaa !147
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i79.i.1 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i64, ptr %arrayidx.i79.i.1, align 8, !tbaa !147
  %arrayidx.i80.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i64, ptr %arrayidx.i80.i.1, align 8, !tbaa !147
  %cmp16.not.i.1 = icmp eq i64 %34, %35
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i79.i.2 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i64, ptr %arrayidx.i79.i.2, align 8, !tbaa !147
  %arrayidx.i80.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i64, ptr %arrayidx.i80.i.2, align 8, !tbaa !147
  %cmp16.not.i.2 = icmp eq i64 %36, %37
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i79.i.3 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i64, ptr %arrayidx.i79.i.3, align 8, !tbaa !147
  %arrayidx.i80.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i64, ptr %arrayidx.i80.i.3, align 8, !tbaa !147
  %cmp16.not.i.3 = icmp eq i64 %38, %39
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i79.i.4 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i64, ptr %arrayidx.i79.i.4, align 8, !tbaa !147
  %arrayidx.i80.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i64, ptr %arrayidx.i80.i.4, align 8, !tbaa !147
  %cmp16.not.i.4 = icmp eq i64 %40, %41
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !325

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not140144.i = icmp eq i64 %43, 0
  %cmp.not.i.not140.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not140144.i
  br i1 %cmp.not.i.not140.i, label %if.end.i.i, label %for.body48.i.preheader, !prof !42

for.body48.i.preheader:                           ; preds = %for.cond44.preheader.i
  %scevgep30 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body48.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup62.i

ehcleanup60.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i111.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i79.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i64, ptr %arrayidx.i79.i, align 8, !tbaa !147
  %arrayidx.i80.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i64, ptr %arrayidx.i80.i, align 8, !tbaa !147
  %cmp16.not.i = icmp eq i64 %46, %47
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i64 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i79.i.le = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i82.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i83.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i8, ptr %arrayidx.i83.i, align 1, !tbaa !16
  %call23.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %48)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i86.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call23.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %49 = load i64, ptr %arrayidx.i79.i.le, align 8, !tbaa !147
  %call.i89.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call23.i, i64 noundef %49)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i92.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %call.i95.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, i64 noundef %.lcssa)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i95.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

if.end.i.i:                                       ; preds = %invoke.cont53.i, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i99.i = icmp eq ptr %51, null
  br i1 %cmp.not.i99.i, label %_ZL28benchForTruncOrZextVecInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i100.i

delete.notnull.i.i100.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

for.body48.i:                                     ; preds = %for.body48.i.preheader, %invoke.cont53.i
  %__begin1.sroa.0.0141.i = phi i64 [ %dec.i.i, %invoke.cont53.i ], [ %43, %for.body48.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %54, i64 80000
  %bound0 = icmp ult ptr %54, %scevgep30
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13.preheader, label %vector.body36

vector.body36:                                    ; preds = %for.body48.i, %vector.body36
  %index37 = phi i64 [ %index.next42, %vector.body36 ], [ 0, %for.body48.i ]
  %55 = getelementptr inbounds i8, ptr %call.i, i64 %index37
  %wide.load38 = load <8 x i8>, ptr %55, align 1, !tbaa !16, !alias.scope !326
  %56 = getelementptr inbounds i8, ptr %55, i64 8
  %wide.load39 = load <8 x i8>, ptr %56, align 1, !tbaa !16, !alias.scope !326
  %57 = getelementptr inbounds i8, ptr %55, i64 16
  %wide.load40 = load <8 x i8>, ptr %57, align 1, !tbaa !16, !alias.scope !326
  %58 = getelementptr inbounds i8, ptr %55, i64 24
  %wide.load41 = load <8 x i8>, ptr %58, align 1, !tbaa !16, !alias.scope !326
  %59 = zext <8 x i8> %wide.load38 to <8 x i64>
  %60 = zext <8 x i8> %wide.load39 to <8 x i64>
  %61 = zext <8 x i8> %wide.load40 to <8 x i64>
  %62 = zext <8 x i8> %wide.load41 to <8 x i64>
  %63 = getelementptr inbounds i64, ptr %54, i64 %index37
  store <8 x i64> %59, ptr %63, align 8, !tbaa !147, !alias.scope !329, !noalias !326
  %64 = getelementptr inbounds i64, ptr %63, i64 8
  store <8 x i64> %60, ptr %64, align 8, !tbaa !147, !alias.scope !329, !noalias !326
  %65 = getelementptr inbounds i64, ptr %63, i64 16
  store <8 x i64> %61, ptr %65, align 8, !tbaa !147, !alias.scope !329, !noalias !326
  %66 = getelementptr inbounds i64, ptr %63, i64 24
  store <8 x i64> %62, ptr %66, align 8, !tbaa !147, !alias.scope !329, !noalias !326
  %index.next42 = add nuw i64 %index37, 32
  %67 = icmp eq i64 %index.next42, 9984
  br i1 %67, label %for.body.i13.preheader, label %vector.body36, !llvm.loop !331

for.body.i13.preheader:                           ; preds = %vector.body36, %for.body48.i
  %indvars.iv.i7.ph = phi i64 [ 0, %for.body48.i ], [ 9984, %vector.body36 ]
  br label %for.body.i13

for.body.i13:                                     ; preds = %for.body.i13, %for.body.i13.preheader
  %indvars.iv.i7 = phi i64 [ %indvars.iv.i7.ph, %for.body.i13.preheader ], [ %indvars.iv.next.i11.3, %for.body.i13 ]
  %arrayidx.i8 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i7
  %68 = load i8, ptr %arrayidx.i8, align 1, !tbaa !16
  %conv.i9 = zext i8 %68 to i64
  %arrayidx2.i10 = getelementptr inbounds i64, ptr %54, i64 %indvars.iv.i7
  store i64 %conv.i9, ptr %arrayidx2.i10, align 8, !tbaa !147
  %indvars.iv.next.i11 = or i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11
  %69 = load i8, ptr %arrayidx.i8.1, align 1, !tbaa !16
  %conv.i9.1 = zext i8 %69 to i64
  %arrayidx2.i10.1 = getelementptr inbounds i64, ptr %54, i64 %indvars.iv.next.i11
  store i64 %conv.i9.1, ptr %arrayidx2.i10.1, align 8, !tbaa !147
  %indvars.iv.next.i11.1 = or i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.1
  %70 = load i8, ptr %arrayidx.i8.2, align 1, !tbaa !16
  %conv.i9.2 = zext i8 %70 to i64
  %arrayidx2.i10.2 = getelementptr inbounds i64, ptr %54, i64 %indvars.iv.next.i11.1
  store i64 %conv.i9.2, ptr %arrayidx2.i10.2, align 8, !tbaa !147
  %indvars.iv.next.i11.2 = or i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.2
  %71 = load i8, ptr %arrayidx.i8.3, align 1, !tbaa !16
  %conv.i9.3 = zext i8 %71 to i64
  %arrayidx2.i10.3 = getelementptr inbounds i64, ptr %54, i64 %indvars.iv.next.i11.2
  store i64 %conv.i9.3, ptr %arrayidx2.i10.3, align 8, !tbaa !147
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %exitcond.not.i12.3 = icmp eq i64 %indvars.iv.next.i11.3, 10000
  br i1 %exitcond.not.i12.3, label %invoke.cont53.i, label %for.body.i13, !llvm.loop !332

invoke.cont53.i:                                  ; preds = %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0141.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup60.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn130.i = phi { ptr, i32 } [ %50, %lpad17.i ], [ %52, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i110.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i110.i, label %ehcleanup62.i, label %delete.notnull.i.i111.i

delete.notnull.i.i111.i:                          ; preds = %ehcleanup60.i, %ehcleanup60.thread.i
  %.pn130.pn136.i = phi { ptr, i32 } [ %45, %ehcleanup60.thread.i ], [ %.pn130.i, %ehcleanup60.i ]
  %72 = phi ptr [ %call1.i, %ehcleanup60.thread.i ], [ %.pr.i, %ehcleanup60.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup62.i

ehcleanup62.i:                                    ; preds = %delete.notnull.i.i111.i, %ehcleanup60.i, %lpad.i
  %.pn130.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn130.i, %ehcleanup60.i ], [ %.pn130.pn136.i, %delete.notnull.i.i111.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn130.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i100.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont3.i unwind label %ehcleanup60.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i74.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i74.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  br label %for.body.i78.i

for.body.i78.i:                                   ; preds = %for.body.i78.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i75.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i76.i.4, %for.body.i78.i ]
  %arrayidx.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i75.i
  %0 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !16
  %conv.i.i = zext i8 %0 to i64
  %arrayidx2.i.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i75.i
  store i64 %conv.i.i, ptr %arrayidx2.i.i, align 8, !tbaa !147
  %indvars.iv.next.i76.i = add nuw nsw i64 %indvars.iv.i75.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i76.i
  %1 = load i8, ptr %arrayidx.i.i.1, align 1, !tbaa !16
  %conv.i.i.1 = zext i8 %1 to i64
  %arrayidx2.i.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i76.i
  store i64 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 8, !tbaa !147
  %indvars.iv.next.i76.i.1 = add nuw nsw i64 %indvars.iv.i75.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i76.i.1
  %2 = load i8, ptr %arrayidx.i.i.2, align 1, !tbaa !16
  %conv.i.i.2 = zext i8 %2 to i64
  %arrayidx2.i.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i76.i.1
  store i64 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 8, !tbaa !147
  %indvars.iv.next.i76.i.2 = add nuw nsw i64 %indvars.iv.i75.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i76.i.2
  %3 = load i8, ptr %arrayidx.i.i.3, align 1, !tbaa !16
  %conv.i.i.3 = zext i8 %3 to i64
  %arrayidx2.i.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i76.i.2
  store i64 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 8, !tbaa !147
  %indvars.iv.next.i76.i.3 = add nuw nsw i64 %indvars.iv.i75.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i76.i.3
  %4 = load i8, ptr %arrayidx.i.i.4, align 1, !tbaa !16
  %conv.i.i.4 = zext i8 %4 to i64
  %arrayidx2.i.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i76.i.3
  store i64 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 8, !tbaa !147
  %indvars.iv.next.i76.i.4 = add nuw nsw i64 %indvars.iv.i75.i, 5
  %exitcond.not.i77.i.4 = icmp eq i64 %indvars.iv.next.i76.i.4, 10000
  br i1 %exitcond.not.i77.i.4, label %vector.body, label %for.body.i78.i, !llvm.loop !323

vector.body:                                      ; preds = %for.body.i78.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i78.i ]
  %5 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <16 x i8>, ptr %5, align 1, !tbaa !16
  %6 = getelementptr inbounds i8, ptr %5, i64 16
  %wide.load27 = load <16 x i8>, ptr %6, align 1, !tbaa !16
  %7 = getelementptr inbounds i8, ptr %5, i64 32
  %wide.load28 = load <16 x i8>, ptr %7, align 1, !tbaa !16
  %8 = getelementptr inbounds i8, ptr %5, i64 48
  %wide.load29 = load <16 x i8>, ptr %8, align 1, !tbaa !16
  %9 = zext <16 x i8> %wide.load to <16 x i64>
  %10 = zext <16 x i8> %wide.load27 to <16 x i64>
  %11 = zext <16 x i8> %wide.load28 to <16 x i64>
  %12 = zext <16 x i8> %wide.load29 to <16 x i64>
  %13 = getelementptr inbounds i64, ptr %call1.i, i64 %index
  store <16 x i64> %9, ptr %13, align 8, !tbaa !147
  %14 = getelementptr inbounds i64, ptr %13, i64 16
  store <16 x i64> %10, ptr %14, align 8, !tbaa !147
  %15 = getelementptr inbounds i64, ptr %13, i64 32
  store <16 x i64> %11, ptr %15, align 8, !tbaa !147
  %16 = getelementptr inbounds i64, ptr %13, i64 48
  store <16 x i64> %12, ptr %16, align 8, !tbaa !147
  %index.next = add nuw i64 %index, 64
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !333

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i, i64 9984
  %18 = load i8, ptr %arrayidx.i, align 1, !tbaa !16
  %conv.i = zext i8 %18 to i64
  %arrayidx2.i = getelementptr inbounds i64, ptr %call1.i, i64 9984
  store i64 %conv.i, ptr %arrayidx2.i, align 8, !tbaa !147
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %call.i, i64 9985
  %19 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !16
  %conv.i.1 = zext i8 %19 to i64
  %arrayidx2.i.1 = getelementptr inbounds i64, ptr %call1.i, i64 9985
  store i64 %conv.i.1, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %call.i, i64 9986
  %20 = load i8, ptr %arrayidx.i.2, align 1, !tbaa !16
  %conv.i.2 = zext i8 %20 to i64
  %arrayidx2.i.2 = getelementptr inbounds i64, ptr %call1.i, i64 9986
  store i64 %conv.i.2, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %call.i, i64 9987
  %21 = load i8, ptr %arrayidx.i.3, align 1, !tbaa !16
  %conv.i.3 = zext i8 %21 to i64
  %arrayidx2.i.3 = getelementptr inbounds i64, ptr %call1.i, i64 9987
  store i64 %conv.i.3, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %arrayidx.i.4 = getelementptr inbounds i8, ptr %call.i, i64 9988
  %22 = load i8, ptr %arrayidx.i.4, align 1, !tbaa !16
  %conv.i.4 = zext i8 %22 to i64
  %arrayidx2.i.4 = getelementptr inbounds i64, ptr %call1.i, i64 9988
  store i64 %conv.i.4, ptr %arrayidx2.i.4, align 8, !tbaa !147
  %arrayidx.i.5 = getelementptr inbounds i8, ptr %call.i, i64 9989
  %23 = load i8, ptr %arrayidx.i.5, align 1, !tbaa !16
  %conv.i.5 = zext i8 %23 to i64
  %arrayidx2.i.5 = getelementptr inbounds i64, ptr %call1.i, i64 9989
  store i64 %conv.i.5, ptr %arrayidx2.i.5, align 8, !tbaa !147
  %arrayidx.i.6 = getelementptr inbounds i8, ptr %call.i, i64 9990
  %24 = load i8, ptr %arrayidx.i.6, align 1, !tbaa !16
  %conv.i.6 = zext i8 %24 to i64
  %arrayidx2.i.6 = getelementptr inbounds i64, ptr %call1.i, i64 9990
  store i64 %conv.i.6, ptr %arrayidx2.i.6, align 8, !tbaa !147
  %arrayidx.i.7 = getelementptr inbounds i8, ptr %call.i, i64 9991
  %25 = load i8, ptr %arrayidx.i.7, align 1, !tbaa !16
  %conv.i.7 = zext i8 %25 to i64
  %arrayidx2.i.7 = getelementptr inbounds i64, ptr %call1.i, i64 9991
  store i64 %conv.i.7, ptr %arrayidx2.i.7, align 8, !tbaa !147
  %arrayidx.i.8 = getelementptr inbounds i8, ptr %call.i, i64 9992
  %26 = load i8, ptr %arrayidx.i.8, align 1, !tbaa !16
  %conv.i.8 = zext i8 %26 to i64
  %arrayidx2.i.8 = getelementptr inbounds i64, ptr %call1.i, i64 9992
  store i64 %conv.i.8, ptr %arrayidx2.i.8, align 8, !tbaa !147
  %arrayidx.i.9 = getelementptr inbounds i8, ptr %call.i, i64 9993
  %27 = load i8, ptr %arrayidx.i.9, align 1, !tbaa !16
  %conv.i.9 = zext i8 %27 to i64
  %arrayidx2.i.9 = getelementptr inbounds i64, ptr %call1.i, i64 9993
  store i64 %conv.i.9, ptr %arrayidx2.i.9, align 8, !tbaa !147
  %arrayidx.i.10 = getelementptr inbounds i8, ptr %call.i, i64 9994
  %28 = load i8, ptr %arrayidx.i.10, align 1, !tbaa !16
  %conv.i.10 = zext i8 %28 to i64
  %arrayidx2.i.10 = getelementptr inbounds i64, ptr %call1.i, i64 9994
  store i64 %conv.i.10, ptr %arrayidx2.i.10, align 8, !tbaa !147
  %arrayidx.i.11 = getelementptr inbounds i8, ptr %call.i, i64 9995
  %29 = load i8, ptr %arrayidx.i.11, align 1, !tbaa !16
  %conv.i.11 = zext i8 %29 to i64
  %arrayidx2.i.11 = getelementptr inbounds i64, ptr %call1.i, i64 9995
  store i64 %conv.i.11, ptr %arrayidx2.i.11, align 8, !tbaa !147
  %arrayidx.i.12 = getelementptr inbounds i8, ptr %call.i, i64 9996
  %30 = load i8, ptr %arrayidx.i.12, align 1, !tbaa !16
  %conv.i.12 = zext i8 %30 to i64
  %arrayidx2.i.12 = getelementptr inbounds i64, ptr %call1.i, i64 9996
  store i64 %conv.i.12, ptr %arrayidx2.i.12, align 8, !tbaa !147
  %arrayidx.i.13 = getelementptr inbounds i8, ptr %call.i, i64 9997
  %31 = load i8, ptr %arrayidx.i.13, align 1, !tbaa !16
  %conv.i.13 = zext i8 %31 to i64
  %arrayidx2.i.13 = getelementptr inbounds i64, ptr %call1.i, i64 9997
  store i64 %conv.i.13, ptr %arrayidx2.i.13, align 8, !tbaa !147
  %arrayidx.i.14 = getelementptr inbounds i8, ptr %call.i, i64 9998
  %32 = load i8, ptr %arrayidx.i.14, align 1, !tbaa !16
  %conv.i.14 = zext i8 %32 to i64
  %arrayidx2.i.14 = getelementptr inbounds i64, ptr %call1.i, i64 9998
  store i64 %conv.i.14, ptr %arrayidx2.i.14, align 8, !tbaa !147
  %arrayidx.i.15 = getelementptr inbounds i8, ptr %call.i, i64 9999
  %33 = load i8, ptr %arrayidx.i.15, align 1, !tbaa !16
  %conv.i.15 = zext i8 %33 to i64
  %arrayidx2.i.15 = getelementptr inbounds i64, ptr %call1.i, i64 9999
  store i64 %conv.i.15, ptr %arrayidx2.i.15, align 8, !tbaa !147
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i79.i.1 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i64, ptr %arrayidx.i79.i.1, align 8, !tbaa !147
  %arrayidx.i80.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i64, ptr %arrayidx.i80.i.1, align 8, !tbaa !147
  %cmp16.not.i.1 = icmp eq i64 %34, %35
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i79.i.2 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i64, ptr %arrayidx.i79.i.2, align 8, !tbaa !147
  %arrayidx.i80.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i64, ptr %arrayidx.i80.i.2, align 8, !tbaa !147
  %cmp16.not.i.2 = icmp eq i64 %36, %37
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i79.i.3 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i64, ptr %arrayidx.i79.i.3, align 8, !tbaa !147
  %arrayidx.i80.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i64, ptr %arrayidx.i80.i.3, align 8, !tbaa !147
  %cmp16.not.i.3 = icmp eq i64 %38, %39
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i79.i.4 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i64, ptr %arrayidx.i79.i.4, align 8, !tbaa !147
  %arrayidx.i80.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i64, ptr %arrayidx.i80.i.4, align 8, !tbaa !147
  %cmp16.not.i.4 = icmp eq i64 %40, %41
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !325

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not140144.i = icmp eq i64 %43, 0
  %cmp.not.i.not140.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not140144.i
  br i1 %cmp.not.i.not140.i, label %if.end.i.i, label %for.body48.i.preheader, !prof !42

for.body48.i.preheader:                           ; preds = %for.cond44.preheader.i
  %scevgep30 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body48.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup62.i

ehcleanup60.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i111.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i79.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i64, ptr %arrayidx.i79.i, align 8, !tbaa !147
  %arrayidx.i80.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i64, ptr %arrayidx.i80.i, align 8, !tbaa !147
  %cmp16.not.i = icmp eq i64 %46, %47
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i64 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i79.i.le = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i82.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i83.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i8, ptr %arrayidx.i83.i, align 1, !tbaa !16
  %call23.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %48)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i86.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call23.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %49 = load i64, ptr %arrayidx.i79.i.le, align 8, !tbaa !147
  %call.i89.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call23.i, i64 noundef %49)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i92.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %call.i95.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, i64 noundef %.lcssa)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i95.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

if.end.i.i:                                       ; preds = %invoke.cont53.i, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i99.i = icmp eq ptr %51, null
  br i1 %cmp.not.i99.i, label %_ZL28benchForTruncOrZextVecInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i100.i

delete.notnull.i.i100.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

for.body48.i:                                     ; preds = %for.body48.i.preheader, %invoke.cont53.i
  %__begin1.sroa.0.0141.i = phi i64 [ %dec.i.i, %invoke.cont53.i ], [ %43, %for.body48.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %54, i64 80000
  %bound0 = icmp ult ptr %54, %scevgep30
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13.preheader, label %vector.body36

vector.body36:                                    ; preds = %for.body48.i, %vector.body36
  %index37 = phi i64 [ %index.next42, %vector.body36 ], [ 0, %for.body48.i ]
  %55 = getelementptr inbounds i8, ptr %call.i, i64 %index37
  %wide.load38 = load <16 x i8>, ptr %55, align 1, !tbaa !16, !alias.scope !334
  %56 = getelementptr inbounds i8, ptr %55, i64 16
  %wide.load39 = load <16 x i8>, ptr %56, align 1, !tbaa !16, !alias.scope !334
  %57 = getelementptr inbounds i8, ptr %55, i64 32
  %wide.load40 = load <16 x i8>, ptr %57, align 1, !tbaa !16, !alias.scope !334
  %58 = getelementptr inbounds i8, ptr %55, i64 48
  %wide.load41 = load <16 x i8>, ptr %58, align 1, !tbaa !16, !alias.scope !334
  %59 = zext <16 x i8> %wide.load38 to <16 x i64>
  %60 = zext <16 x i8> %wide.load39 to <16 x i64>
  %61 = zext <16 x i8> %wide.load40 to <16 x i64>
  %62 = zext <16 x i8> %wide.load41 to <16 x i64>
  %63 = getelementptr inbounds i64, ptr %54, i64 %index37
  store <16 x i64> %59, ptr %63, align 8, !tbaa !147, !alias.scope !337, !noalias !334
  %64 = getelementptr inbounds i64, ptr %63, i64 16
  store <16 x i64> %60, ptr %64, align 8, !tbaa !147, !alias.scope !337, !noalias !334
  %65 = getelementptr inbounds i64, ptr %63, i64 32
  store <16 x i64> %61, ptr %65, align 8, !tbaa !147, !alias.scope !337, !noalias !334
  %66 = getelementptr inbounds i64, ptr %63, i64 48
  store <16 x i64> %62, ptr %66, align 8, !tbaa !147, !alias.scope !337, !noalias !334
  %index.next42 = add nuw i64 %index37, 64
  %67 = icmp eq i64 %index.next42, 9984
  br i1 %67, label %for.body.i13.preheader, label %vector.body36, !llvm.loop !339

for.body.i13.preheader:                           ; preds = %vector.body36, %for.body48.i
  %indvars.iv.i7.ph = phi i64 [ 0, %for.body48.i ], [ 9984, %vector.body36 ]
  br label %for.body.i13

for.body.i13:                                     ; preds = %for.body.i13, %for.body.i13.preheader
  %indvars.iv.i7 = phi i64 [ %indvars.iv.i7.ph, %for.body.i13.preheader ], [ %indvars.iv.next.i11.3, %for.body.i13 ]
  %arrayidx.i8 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i7
  %68 = load i8, ptr %arrayidx.i8, align 1, !tbaa !16
  %conv.i9 = zext i8 %68 to i64
  %arrayidx2.i10 = getelementptr inbounds i64, ptr %54, i64 %indvars.iv.i7
  store i64 %conv.i9, ptr %arrayidx2.i10, align 8, !tbaa !147
  %indvars.iv.next.i11 = or i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11
  %69 = load i8, ptr %arrayidx.i8.1, align 1, !tbaa !16
  %conv.i9.1 = zext i8 %69 to i64
  %arrayidx2.i10.1 = getelementptr inbounds i64, ptr %54, i64 %indvars.iv.next.i11
  store i64 %conv.i9.1, ptr %arrayidx2.i10.1, align 8, !tbaa !147
  %indvars.iv.next.i11.1 = or i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.1
  %70 = load i8, ptr %arrayidx.i8.2, align 1, !tbaa !16
  %conv.i9.2 = zext i8 %70 to i64
  %arrayidx2.i10.2 = getelementptr inbounds i64, ptr %54, i64 %indvars.iv.next.i11.1
  store i64 %conv.i9.2, ptr %arrayidx2.i10.2, align 8, !tbaa !147
  %indvars.iv.next.i11.2 = or i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.2
  %71 = load i8, ptr %arrayidx.i8.3, align 1, !tbaa !16
  %conv.i9.3 = zext i8 %71 to i64
  %arrayidx2.i10.3 = getelementptr inbounds i64, ptr %54, i64 %indvars.iv.next.i11.2
  store i64 %conv.i9.3, ptr %arrayidx2.i10.3, align 8, !tbaa !147
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %exitcond.not.i12.3 = icmp eq i64 %indvars.iv.next.i11.3, 10000
  br i1 %exitcond.not.i12.3, label %invoke.cont53.i, label %for.body.i13, !llvm.loop !340

invoke.cont53.i:                                  ; preds = %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0141.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup60.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn130.i = phi { ptr, i32 } [ %50, %lpad17.i ], [ %52, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i110.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i110.i, label %ehcleanup62.i, label %delete.notnull.i.i111.i

delete.notnull.i.i111.i:                          ; preds = %ehcleanup60.i, %ehcleanup60.thread.i
  %.pn130.pn136.i = phi { ptr, i32 } [ %45, %ehcleanup60.thread.i ], [ %.pn130.i, %ehcleanup60.i ]
  %72 = phi ptr [ %call1.i, %ehcleanup60.thread.i ], [ %.pr.i, %ehcleanup60.i ]
  call void @_ZdaPv(ptr noundef nonnull %72) #13
  br label %ehcleanup62.i

ehcleanup62.i:                                    ; preds = %delete.notnull.i.i111.i, %ehcleanup60.i, %lpad.i
  %.pn130.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn130.i, %ehcleanup60.i ], [ %.pn130.pn136.i, %delete.notnull.i.i111.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn130.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i100.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z53benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont3.i unwind label %ehcleanup60.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i74.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i74.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  br label %for.body.i78.i

for.body.i78.i:                                   ; preds = %for.body.i78.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i75.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i76.i.4, %for.body.i78.i ]
  %arrayidx.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i75.i
  %0 = load i8, ptr %arrayidx.i.i, align 1, !tbaa !16
  %conv.i.i = zext i8 %0 to i64
  %arrayidx2.i.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i75.i
  store i64 %conv.i.i, ptr %arrayidx2.i.i, align 8, !tbaa !147
  %indvars.iv.next.i76.i = add nuw nsw i64 %indvars.iv.i75.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i76.i
  %1 = load i8, ptr %arrayidx.i.i.1, align 1, !tbaa !16
  %conv.i.i.1 = zext i8 %1 to i64
  %arrayidx2.i.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i76.i
  store i64 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 8, !tbaa !147
  %indvars.iv.next.i76.i.1 = add nuw nsw i64 %indvars.iv.i75.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i76.i.1
  %2 = load i8, ptr %arrayidx.i.i.2, align 1, !tbaa !16
  %conv.i.i.2 = zext i8 %2 to i64
  %arrayidx2.i.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i76.i.1
  store i64 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 8, !tbaa !147
  %indvars.iv.next.i76.i.2 = add nuw nsw i64 %indvars.iv.i75.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i76.i.2
  %3 = load i8, ptr %arrayidx.i.i.3, align 1, !tbaa !16
  %conv.i.i.3 = zext i8 %3 to i64
  %arrayidx2.i.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i76.i.2
  store i64 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 8, !tbaa !147
  %indvars.iv.next.i76.i.3 = add nuw nsw i64 %indvars.iv.i75.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i76.i.3
  %4 = load i8, ptr %arrayidx.i.i.4, align 1, !tbaa !16
  %conv.i.i.4 = zext i8 %4 to i64
  %arrayidx2.i.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i76.i.3
  store i64 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 8, !tbaa !147
  %indvars.iv.next.i76.i.4 = add nuw nsw i64 %indvars.iv.i75.i, 5
  %exitcond.not.i77.i.4 = icmp eq i64 %indvars.iv.next.i76.i.4, 10000
  br i1 %exitcond.not.i77.i.4, label %vector.body, label %for.body.i78.i, !llvm.loop !323

vector.body:                                      ; preds = %for.body.i78.i, %vector.body
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %for.body.i78.i ]
  %5 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <2 x i8>, ptr %5, align 1, !tbaa !16
  %6 = getelementptr inbounds i8, ptr %5, i64 2
  %wide.load27 = load <2 x i8>, ptr %6, align 1, !tbaa !16
  %7 = zext <2 x i8> %wide.load to <2 x i64>
  %8 = zext <2 x i8> %wide.load27 to <2 x i64>
  %9 = getelementptr inbounds i64, ptr %call1.i, i64 %index
  store <2 x i64> %7, ptr %9, align 8, !tbaa !147
  %10 = getelementptr inbounds i64, ptr %9, i64 2
  store <2 x i64> %8, ptr %10, align 8, !tbaa !147
  %index.next = or i64 %index, 4
  %11 = getelementptr inbounds i8, ptr %call.i, i64 %index.next
  %wide.load.1 = load <2 x i8>, ptr %11, align 1, !tbaa !16
  %12 = getelementptr inbounds i8, ptr %11, i64 2
  %wide.load27.1 = load <2 x i8>, ptr %12, align 1, !tbaa !16
  %13 = zext <2 x i8> %wide.load.1 to <2 x i64>
  %14 = zext <2 x i8> %wide.load27.1 to <2 x i64>
  %15 = getelementptr inbounds i64, ptr %call1.i, i64 %index.next
  store <2 x i64> %13, ptr %15, align 8, !tbaa !147
  %16 = getelementptr inbounds i64, ptr %15, i64 2
  store <2 x i64> %14, ptr %16, align 8, !tbaa !147
  %index.next.1 = add nuw nsw i64 %index, 8
  %17 = icmp eq i64 %index.next.1, 10000
  br i1 %17, label %for.body.i, label %vector.body, !llvm.loop !341

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i79.i.1 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i
  %18 = load i64, ptr %arrayidx.i79.i.1, align 8, !tbaa !147
  %arrayidx.i80.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i
  %19 = load i64, ptr %arrayidx.i80.i.1, align 8, !tbaa !147
  %cmp16.not.i.1 = icmp eq i64 %18, %19
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i79.i.2 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.1
  %20 = load i64, ptr %arrayidx.i79.i.2, align 8, !tbaa !147
  %arrayidx.i80.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.1
  %21 = load i64, ptr %arrayidx.i80.i.2, align 8, !tbaa !147
  %cmp16.not.i.2 = icmp eq i64 %20, %21
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i79.i.3 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.2
  %22 = load i64, ptr %arrayidx.i79.i.3, align 8, !tbaa !147
  %arrayidx.i80.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.2
  %23 = load i64, ptr %arrayidx.i80.i.3, align 8, !tbaa !147
  %cmp16.not.i.3 = icmp eq i64 %22, %23
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i79.i.4 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.3
  %24 = load i64, ptr %arrayidx.i79.i.4, align 8, !tbaa !147
  %arrayidx.i80.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.3
  %25 = load i64, ptr %arrayidx.i80.i.4, align 8, !tbaa !147
  %cmp16.not.i.4 = icmp eq i64 %24, %25
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !325

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %26 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %27 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %26, 0
  %cmp.not.i.not140144.i = icmp eq i64 %27, 0
  %cmp.not.i.not140.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not140144.i
  br i1 %cmp.not.i.not140.i, label %if.end.i.i, label %for.body48.i.preheader, !prof !42

for.body48.i.preheader:                           ; preds = %for.cond44.preheader.i
  %scevgep28 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body48.i

lpad.i:                                           ; preds = %entry
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup62.i

ehcleanup60.thread.i:                             ; preds = %invoke.cont.i
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i111.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

for.body.i:                                       ; preds = %vector.body, %for.cond.i.4
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.4, %for.cond.i.4 ], [ 0, %vector.body ]
  %arrayidx.i79.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i
  %30 = load i64, ptr %arrayidx.i79.i, align 8, !tbaa !147
  %arrayidx.i80.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i
  %31 = load i64, ptr %arrayidx.i80.i, align 8, !tbaa !147
  %cmp16.not.i = icmp eq i64 %30, %31
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i64 [ %31, %for.body.i ], [ %19, %for.cond.i ], [ %21, %for.cond.i.1 ], [ %23, %for.cond.i.2 ], [ %25, %for.cond.i.3 ]
  %arrayidx.i79.i.le = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i82.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i83.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.lcssa
  %32 = load i8, ptr %arrayidx.i83.i, align 1, !tbaa !16
  %call23.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %32)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i86.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call23.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %33 = load i64, ptr %arrayidx.i79.i.le, align 8, !tbaa !147
  %call.i89.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call23.i, i64 noundef %33)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i92.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %call.i95.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i89.i, i64 noundef %.lcssa)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i95.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %34 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

if.end.i.i:                                       ; preds = %invoke.cont53.i, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %35 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i99.i = icmp eq ptr %35, null
  br i1 %cmp.not.i99.i, label %_ZL28benchForTruncOrZextVecInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i100.i

delete.notnull.i.i100.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %35) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup60.i

for.body48.i:                                     ; preds = %for.body48.i.preheader, %invoke.cont53.i
  %__begin1.sroa.0.0141.i = phi i64 [ %dec.i.i, %invoke.cont53.i ], [ %27, %for.body48.i.preheader ]
  %37 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %37) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %38 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %38, i64 80000
  %bound0 = icmp ult ptr %38, %scevgep28
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i13, label %vector.body34

vector.body34:                                    ; preds = %for.body48.i, %vector.body34
  %index35 = phi i64 [ %index.next38.1, %vector.body34 ], [ 0, %for.body48.i ]
  %39 = getelementptr inbounds i8, ptr %call.i, i64 %index35
  %wide.load36 = load <2 x i8>, ptr %39, align 1, !tbaa !16, !alias.scope !342
  %40 = getelementptr inbounds i8, ptr %39, i64 2
  %wide.load37 = load <2 x i8>, ptr %40, align 1, !tbaa !16, !alias.scope !342
  %41 = zext <2 x i8> %wide.load36 to <2 x i64>
  %42 = zext <2 x i8> %wide.load37 to <2 x i64>
  %43 = getelementptr inbounds i64, ptr %38, i64 %index35
  store <2 x i64> %41, ptr %43, align 8, !tbaa !147, !alias.scope !345, !noalias !342
  %44 = getelementptr inbounds i64, ptr %43, i64 2
  store <2 x i64> %42, ptr %44, align 8, !tbaa !147, !alias.scope !345, !noalias !342
  %index.next38 = or i64 %index35, 4
  %45 = getelementptr inbounds i8, ptr %call.i, i64 %index.next38
  %wide.load36.1 = load <2 x i8>, ptr %45, align 1, !tbaa !16, !alias.scope !342
  %46 = getelementptr inbounds i8, ptr %45, i64 2
  %wide.load37.1 = load <2 x i8>, ptr %46, align 1, !tbaa !16, !alias.scope !342
  %47 = zext <2 x i8> %wide.load36.1 to <2 x i64>
  %48 = zext <2 x i8> %wide.load37.1 to <2 x i64>
  %49 = getelementptr inbounds i64, ptr %38, i64 %index.next38
  store <2 x i64> %47, ptr %49, align 8, !tbaa !147, !alias.scope !345, !noalias !342
  %50 = getelementptr inbounds i64, ptr %49, i64 2
  store <2 x i64> %48, ptr %50, align 8, !tbaa !147, !alias.scope !345, !noalias !342
  %index.next38.1 = add nuw nsw i64 %index35, 8
  %51 = icmp eq i64 %index.next38.1, 10000
  br i1 %51, label %invoke.cont53.i, label %vector.body34, !llvm.loop !347

for.body.i13:                                     ; preds = %for.body48.i, %for.body.i13
  %indvars.iv.i7 = phi i64 [ %indvars.iv.next.i11.4, %for.body.i13 ], [ 0, %for.body48.i ]
  %arrayidx.i8 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i7
  %52 = load i8, ptr %arrayidx.i8, align 1, !tbaa !16
  %conv.i9 = zext i8 %52 to i64
  %arrayidx2.i10 = getelementptr inbounds i64, ptr %38, i64 %indvars.iv.i7
  store i64 %conv.i9, ptr %arrayidx2.i10, align 8, !tbaa !147
  %indvars.iv.next.i11 = add nuw nsw i64 %indvars.iv.i7, 1
  %arrayidx.i8.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11
  %53 = load i8, ptr %arrayidx.i8.1, align 1, !tbaa !16
  %conv.i9.1 = zext i8 %53 to i64
  %arrayidx2.i10.1 = getelementptr inbounds i64, ptr %38, i64 %indvars.iv.next.i11
  store i64 %conv.i9.1, ptr %arrayidx2.i10.1, align 8, !tbaa !147
  %indvars.iv.next.i11.1 = add nuw nsw i64 %indvars.iv.i7, 2
  %arrayidx.i8.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.1
  %54 = load i8, ptr %arrayidx.i8.2, align 1, !tbaa !16
  %conv.i9.2 = zext i8 %54 to i64
  %arrayidx2.i10.2 = getelementptr inbounds i64, ptr %38, i64 %indvars.iv.next.i11.1
  store i64 %conv.i9.2, ptr %arrayidx2.i10.2, align 8, !tbaa !147
  %indvars.iv.next.i11.2 = add nuw nsw i64 %indvars.iv.i7, 3
  %arrayidx.i8.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.2
  %55 = load i8, ptr %arrayidx.i8.3, align 1, !tbaa !16
  %conv.i9.3 = zext i8 %55 to i64
  %arrayidx2.i10.3 = getelementptr inbounds i64, ptr %38, i64 %indvars.iv.next.i11.2
  store i64 %conv.i9.3, ptr %arrayidx2.i10.3, align 8, !tbaa !147
  %indvars.iv.next.i11.3 = add nuw nsw i64 %indvars.iv.i7, 4
  %arrayidx.i8.4 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i11.3
  %56 = load i8, ptr %arrayidx.i8.4, align 1, !tbaa !16
  %conv.i9.4 = zext i8 %56 to i64
  %arrayidx2.i10.4 = getelementptr inbounds i64, ptr %38, i64 %indvars.iv.next.i11.3
  store i64 %conv.i9.4, ptr %arrayidx2.i10.4, align 8, !tbaa !147
  %indvars.iv.next.i11.4 = add nuw nsw i64 %indvars.iv.i7, 5
  %exitcond.not.i12.4 = icmp eq i64 %indvars.iv.next.i11.4, 10000
  br i1 %exitcond.not.i12.4, label %invoke.cont53.i, label %for.body.i13, !llvm.loop !348

invoke.cont53.i:                                  ; preds = %vector.body34, %for.body.i13
  %dec.i.i = add i64 %__begin1.sroa.0.0141.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup60.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn130.i = phi { ptr, i32 } [ %34, %lpad17.i ], [ %36, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i110.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i110.i, label %ehcleanup62.i, label %delete.notnull.i.i111.i

delete.notnull.i.i111.i:                          ; preds = %ehcleanup60.i, %ehcleanup60.thread.i
  %.pn130.pn136.i = phi { ptr, i32 } [ %29, %ehcleanup60.thread.i ], [ %.pn130.i, %ehcleanup60.i ]
  %57 = phi ptr [ %call1.i, %ehcleanup60.thread.i ], [ %.pr.i, %ehcleanup60.i ]
  call void @_ZdaPv(ptr noundef nonnull %57) #13
  br label %ehcleanup62.i

ehcleanup62.i:                                    ; preds = %delete.notnull.i.i111.i, %ehcleanup60.i, %lpad.i
  %.pn130.pn.pn.i = phi { ptr, i32 } [ %28, %lpad.i ], [ %.pn130.i, %ehcleanup60.i ], [ %.pn130.pn136.i, %delete.notnull.i.i111.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn130.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i100.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i31.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  store i64 0, ptr %distrib.i32.i, align 8, !tbaa !144
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i33.i, align 8, !tbaa !146
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i34.i
  store i64 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 8, !tbaa !147
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep5 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %5, i64 80000
  %bound0 = icmp ult ptr %5, %scevgep5
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1.preheader, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i ]
  %6 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <8 x i8>, ptr %6, align 1, !tbaa !16, !alias.scope !349
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  %wide.load6 = load <8 x i8>, ptr %7, align 1, !tbaa !16, !alias.scope !349
  %8 = getelementptr inbounds i8, ptr %6, i64 16
  %wide.load7 = load <8 x i8>, ptr %8, align 1, !tbaa !16, !alias.scope !349
  %9 = getelementptr inbounds i8, ptr %6, i64 24
  %wide.load8 = load <8 x i8>, ptr %9, align 1, !tbaa !16, !alias.scope !349
  %10 = zext <8 x i8> %wide.load to <8 x i64>
  %11 = zext <8 x i8> %wide.load6 to <8 x i64>
  %12 = zext <8 x i8> %wide.load7 to <8 x i64>
  %13 = zext <8 x i8> %wide.load8 to <8 x i64>
  %14 = getelementptr inbounds i64, ptr %5, i64 %index
  %wide.load9 = load <8 x i64>, ptr %14, align 8, !tbaa !147, !alias.scope !352, !noalias !349
  %15 = getelementptr inbounds i64, ptr %14, i64 8
  %wide.load10 = load <8 x i64>, ptr %15, align 8, !tbaa !147, !alias.scope !352, !noalias !349
  %16 = getelementptr inbounds i64, ptr %14, i64 16
  %wide.load11 = load <8 x i64>, ptr %16, align 8, !tbaa !147, !alias.scope !352, !noalias !349
  %17 = getelementptr inbounds i64, ptr %14, i64 24
  %wide.load12 = load <8 x i64>, ptr %17, align 8, !tbaa !147, !alias.scope !352, !noalias !349
  %18 = add <8 x i64> %wide.load9, %10
  %19 = add <8 x i64> %wide.load10, %11
  %20 = add <8 x i64> %wide.load11, %12
  %21 = add <8 x i64> %wide.load12, %13
  store <8 x i64> %18, ptr %14, align 8, !tbaa !147, !alias.scope !352, !noalias !349
  store <8 x i64> %19, ptr %15, align 8, !tbaa !147, !alias.scope !352, !noalias !349
  store <8 x i64> %20, ptr %16, align 8, !tbaa !147, !alias.scope !352, !noalias !349
  store <8 x i64> %21, ptr %17, align 8, !tbaa !147, !alias.scope !352, !noalias !349
  %index.next = add nuw i64 %index, 32
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1.preheader, label %vector.body, !llvm.loop !354

for.body.i1.preheader:                            ; preds = %vector.body, %for.body.i
  %indvars.iv.i.ph = phi i64 [ 0, %for.body.i ], [ 9984, %vector.body ]
  br label %for.body.i1

for.body.i1:                                      ; preds = %for.body.i1, %for.body.i1.preheader
  %indvars.iv.i = phi i64 [ %indvars.iv.i.ph, %for.body.i1.preheader ], [ %indvars.iv.next.i.3, %for.body.i1 ]
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i
  %23 = load i8, ptr %arrayidx.i, align 1, !tbaa !16
  %conv.i = zext i8 %23 to i64
  %arrayidx2.i = getelementptr inbounds i64, ptr %5, i64 %indvars.iv.i
  %24 = load i64, ptr %arrayidx2.i, align 8, !tbaa !147
  %add.i = add i64 %24, %conv.i
  store i64 %add.i, ptr %arrayidx2.i, align 8, !tbaa !147
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i
  %25 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !16
  %conv.i.1 = zext i8 %25 to i64
  %arrayidx2.i.1 = getelementptr inbounds i64, ptr %5, i64 %indvars.iv.next.i
  %26 = load i64, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %add.i.1 = add i64 %26, %conv.i.1
  store i64 %add.i.1, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.1
  %27 = load i8, ptr %arrayidx.i.2, align 1, !tbaa !16
  %conv.i.2 = zext i8 %27 to i64
  %arrayidx2.i.2 = getelementptr inbounds i64, ptr %5, i64 %indvars.iv.next.i.1
  %28 = load i64, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %add.i.2 = add i64 %28, %conv.i.2
  store i64 %add.i.2, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.2
  %29 = load i8, ptr %arrayidx.i.3, align 1, !tbaa !16
  %conv.i.3 = zext i8 %29 to i64
  %arrayidx2.i.3 = getelementptr inbounds i64, ptr %5, i64 %indvars.iv.next.i.2
  %30 = load i64, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %add.i.3 = add i64 %30, %conv.i.3
  store i64 %add.i.3, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !355

invoke.cont19.i:                                  ; preds = %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %31 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %31, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %32 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %32) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %31, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i31.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  store i64 0, ptr %distrib.i32.i, align 8, !tbaa !144
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i33.i, align 8, !tbaa !146
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i34.i
  store i64 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 8, !tbaa !147
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep5 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %5, i64 80000
  %bound0 = icmp ult ptr %5, %scevgep5
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1.preheader, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i ]
  %6 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <16 x i8>, ptr %6, align 1, !tbaa !16, !alias.scope !356
  %7 = getelementptr inbounds i8, ptr %6, i64 16
  %wide.load6 = load <16 x i8>, ptr %7, align 1, !tbaa !16, !alias.scope !356
  %8 = getelementptr inbounds i8, ptr %6, i64 32
  %wide.load7 = load <16 x i8>, ptr %8, align 1, !tbaa !16, !alias.scope !356
  %9 = getelementptr inbounds i8, ptr %6, i64 48
  %wide.load8 = load <16 x i8>, ptr %9, align 1, !tbaa !16, !alias.scope !356
  %10 = zext <16 x i8> %wide.load to <16 x i64>
  %11 = zext <16 x i8> %wide.load6 to <16 x i64>
  %12 = zext <16 x i8> %wide.load7 to <16 x i64>
  %13 = zext <16 x i8> %wide.load8 to <16 x i64>
  %14 = getelementptr inbounds i64, ptr %5, i64 %index
  %wide.load9 = load <16 x i64>, ptr %14, align 8, !tbaa !147, !alias.scope !359, !noalias !356
  %15 = getelementptr inbounds i64, ptr %14, i64 16
  %wide.load10 = load <16 x i64>, ptr %15, align 8, !tbaa !147, !alias.scope !359, !noalias !356
  %16 = getelementptr inbounds i64, ptr %14, i64 32
  %wide.load11 = load <16 x i64>, ptr %16, align 8, !tbaa !147, !alias.scope !359, !noalias !356
  %17 = getelementptr inbounds i64, ptr %14, i64 48
  %wide.load12 = load <16 x i64>, ptr %17, align 8, !tbaa !147, !alias.scope !359, !noalias !356
  %18 = add <16 x i64> %wide.load9, %10
  %19 = add <16 x i64> %wide.load10, %11
  %20 = add <16 x i64> %wide.load11, %12
  %21 = add <16 x i64> %wide.load12, %13
  store <16 x i64> %18, ptr %14, align 8, !tbaa !147, !alias.scope !359, !noalias !356
  store <16 x i64> %19, ptr %15, align 8, !tbaa !147, !alias.scope !359, !noalias !356
  store <16 x i64> %20, ptr %16, align 8, !tbaa !147, !alias.scope !359, !noalias !356
  store <16 x i64> %21, ptr %17, align 8, !tbaa !147, !alias.scope !359, !noalias !356
  %index.next = add nuw i64 %index, 64
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1.preheader, label %vector.body, !llvm.loop !361

for.body.i1.preheader:                            ; preds = %vector.body, %for.body.i
  %indvars.iv.i.ph = phi i64 [ 0, %for.body.i ], [ 9984, %vector.body ]
  br label %for.body.i1

for.body.i1:                                      ; preds = %for.body.i1, %for.body.i1.preheader
  %indvars.iv.i = phi i64 [ %indvars.iv.i.ph, %for.body.i1.preheader ], [ %indvars.iv.next.i.3, %for.body.i1 ]
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i
  %23 = load i8, ptr %arrayidx.i, align 1, !tbaa !16
  %conv.i = zext i8 %23 to i64
  %arrayidx2.i = getelementptr inbounds i64, ptr %5, i64 %indvars.iv.i
  %24 = load i64, ptr %arrayidx2.i, align 8, !tbaa !147
  %add.i = add i64 %24, %conv.i
  store i64 %add.i, ptr %arrayidx2.i, align 8, !tbaa !147
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i
  %25 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !16
  %conv.i.1 = zext i8 %25 to i64
  %arrayidx2.i.1 = getelementptr inbounds i64, ptr %5, i64 %indvars.iv.next.i
  %26 = load i64, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %add.i.1 = add i64 %26, %conv.i.1
  store i64 %add.i.1, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.1
  %27 = load i8, ptr %arrayidx.i.2, align 1, !tbaa !16
  %conv.i.2 = zext i8 %27 to i64
  %arrayidx2.i.2 = getelementptr inbounds i64, ptr %5, i64 %indvars.iv.next.i.1
  %28 = load i64, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %add.i.2 = add i64 %28, %conv.i.2
  store i64 %add.i.2, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.2
  %29 = load i8, ptr %arrayidx.i.3, align 1, !tbaa !16
  %conv.i.3 = zext i8 %29 to i64
  %arrayidx2.i.3 = getelementptr inbounds i64, ptr %5, i64 %indvars.iv.next.i.2
  %30 = load i64, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %add.i.3 = add i64 %30, %conv.i.3
  store i64 %add.i.3, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !362

invoke.cont19.i:                                  ; preds = %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %31 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %31, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %32 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %32) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %31, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.43", align 1
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(10000) ptr @_Znam(i64 noundef 10000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %distrib.i.i) #11
  store i8 0, ptr %distrib.i.i, align 1, !tbaa !67
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i8 -1, ptr %_M_b.i.i.i.i, align 1, !tbaa !69
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 1 dereferenceable(2) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i.i
  store i8 %call.i.i31.i, ptr %arrayidx.i.i.i, align 1, !tbaa !16
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !70

_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  store i64 0, ptr %distrib.i32.i, align 8, !tbaa !144
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i33.i, align 8, !tbaa !146
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIhEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i34.i
  store i64 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 8, !tbaa !147
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %scevgep5 = getelementptr i8, ptr %call.i, i64 10000
  br label %for.body.i

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  %scevgep = getelementptr i8, ptr %5, i64 80000
  %bound0 = icmp ult ptr %5, %scevgep5
  %bound1 = icmp ult ptr %call.i, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i1, label %vector.body

vector.body:                                      ; preds = %for.body.i, %vector.body
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %for.body.i ]
  %6 = getelementptr inbounds i8, ptr %call.i, i64 %index
  %wide.load = load <2 x i8>, ptr %6, align 1, !tbaa !16, !alias.scope !363
  %7 = getelementptr inbounds i8, ptr %6, i64 2
  %wide.load6 = load <2 x i8>, ptr %7, align 1, !tbaa !16, !alias.scope !363
  %8 = zext <2 x i8> %wide.load to <2 x i64>
  %9 = zext <2 x i8> %wide.load6 to <2 x i64>
  %10 = getelementptr inbounds i64, ptr %5, i64 %index
  %wide.load7 = load <2 x i64>, ptr %10, align 8, !tbaa !147, !alias.scope !366, !noalias !363
  %11 = getelementptr inbounds i64, ptr %10, i64 2
  %wide.load8 = load <2 x i64>, ptr %11, align 8, !tbaa !147, !alias.scope !366, !noalias !363
  %12 = add <2 x i64> %wide.load7, %8
  %13 = add <2 x i64> %wide.load8, %9
  store <2 x i64> %12, ptr %10, align 8, !tbaa !147, !alias.scope !366, !noalias !363
  store <2 x i64> %13, ptr %11, align 8, !tbaa !147, !alias.scope !366, !noalias !363
  %index.next = or i64 %index, 4
  %14 = getelementptr inbounds i8, ptr %call.i, i64 %index.next
  %wide.load.1 = load <2 x i8>, ptr %14, align 1, !tbaa !16, !alias.scope !363
  %15 = getelementptr inbounds i8, ptr %14, i64 2
  %wide.load6.1 = load <2 x i8>, ptr %15, align 1, !tbaa !16, !alias.scope !363
  %16 = zext <2 x i8> %wide.load.1 to <2 x i64>
  %17 = zext <2 x i8> %wide.load6.1 to <2 x i64>
  %18 = getelementptr inbounds i64, ptr %5, i64 %index.next
  %wide.load7.1 = load <2 x i64>, ptr %18, align 8, !tbaa !147, !alias.scope !366, !noalias !363
  %19 = getelementptr inbounds i64, ptr %18, i64 2
  %wide.load8.1 = load <2 x i64>, ptr %19, align 8, !tbaa !147, !alias.scope !366, !noalias !363
  %20 = add <2 x i64> %wide.load7.1, %16
  %21 = add <2 x i64> %wide.load8.1, %17
  store <2 x i64> %20, ptr %18, align 8, !tbaa !147, !alias.scope !366, !noalias !363
  store <2 x i64> %21, ptr %19, align 8, !tbaa !147, !alias.scope !366, !noalias !363
  %index.next.1 = add nuw nsw i64 %index, 8
  %22 = icmp eq i64 %index.next.1, 10000
  br i1 %22, label %invoke.cont19.i, label %vector.body, !llvm.loop !368

for.body.i1:                                      ; preds = %for.body.i, %for.body.i1
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body.i1 ], [ 0, %for.body.i ]
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.i
  %23 = load i8, ptr %arrayidx.i, align 1, !tbaa !16
  %conv.i = zext i8 %23 to i64
  %arrayidx2.i = getelementptr inbounds i64, ptr %5, i64 %indvars.iv.i
  %24 = load i64, ptr %arrayidx2.i, align 8, !tbaa !147
  %add.i = add i64 %24, %conv.i
  store i64 %add.i, ptr %arrayidx2.i, align 8, !tbaa !147
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i
  %25 = load i8, ptr %arrayidx.i.1, align 1, !tbaa !16
  %conv.i.1 = zext i8 %25 to i64
  %arrayidx2.i.1 = getelementptr inbounds i64, ptr %5, i64 %indvars.iv.next.i
  %26 = load i64, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %add.i.1 = add i64 %26, %conv.i.1
  store i64 %add.i.1, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.2 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.1
  %27 = load i8, ptr %arrayidx.i.2, align 1, !tbaa !16
  %conv.i.2 = zext i8 %27 to i64
  %arrayidx2.i.2 = getelementptr inbounds i64, ptr %5, i64 %indvars.iv.next.i.1
  %28 = load i64, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %add.i.2 = add i64 %28, %conv.i.2
  store i64 %add.i.2, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.3 = getelementptr inbounds i8, ptr %call.i, i64 %indvars.iv.next.i.2
  %29 = load i8, ptr %arrayidx.i.3, align 1, !tbaa !16
  %conv.i.3 = zext i8 %29 to i64
  %arrayidx2.i.3 = getelementptr inbounds i64, ptr %5, i64 %indvars.iv.next.i.2
  %30 = load i64, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %add.i.3 = add i64 %30, %conv.i.3
  store i64 %add.i.3, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, 10000
  br i1 %exitcond.not.i.3, label %invoke.cont19.i, label %for.body.i1, !llvm.loop !369

invoke.cont19.i:                                  ; preds = %vector.body, %for.body.i1
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %31 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %31, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %32 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %32) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %31, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIhmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont3.i unwind label %ehcleanup59.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i73.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i73.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  br label %for.body.i77.i

for.body.i77.i:                                   ; preds = %for.body.i77.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i74.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i75.i.4, %for.body.i77.i ]
  %arrayidx.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i74.i
  %0 = load i16, ptr %arrayidx.i.i, align 2, !tbaa !13
  %conv.i.i = zext i16 %0 to i32
  %arrayidx2.i.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i74.i
  store i32 %conv.i.i, ptr %arrayidx2.i.i, align 4, !tbaa !95
  %indvars.iv.next.i75.i = add nuw nsw i64 %indvars.iv.i74.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i
  %1 = load i16, ptr %arrayidx.i.i.1, align 2, !tbaa !13
  %conv.i.i.1 = zext i16 %1 to i32
  %arrayidx2.i.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i
  store i32 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 4, !tbaa !95
  %indvars.iv.next.i75.i.1 = add nuw nsw i64 %indvars.iv.i74.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.1
  %2 = load i16, ptr %arrayidx.i.i.2, align 2, !tbaa !13
  %conv.i.i.2 = zext i16 %2 to i32
  %arrayidx2.i.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.1
  store i32 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 4, !tbaa !95
  %indvars.iv.next.i75.i.2 = add nuw nsw i64 %indvars.iv.i74.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.2
  %3 = load i16, ptr %arrayidx.i.i.3, align 2, !tbaa !13
  %conv.i.i.3 = zext i16 %3 to i32
  %arrayidx2.i.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.2
  store i32 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 4, !tbaa !95
  %indvars.iv.next.i75.i.3 = add nuw nsw i64 %indvars.iv.i74.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.3
  %4 = load i16, ptr %arrayidx.i.i.4, align 2, !tbaa !13
  %conv.i.i.4 = zext i16 %4 to i32
  %arrayidx2.i.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.3
  store i32 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 4, !tbaa !95
  %indvars.iv.next.i75.i.4 = add nuw nsw i64 %indvars.iv.i74.i, 5
  %exitcond.not.i76.i.4 = icmp eq i64 %indvars.iv.next.i75.i.4, 10000
  br i1 %exitcond.not.i76.i.4, label %vector.body, label %for.body.i77.i, !llvm.loop !370

vector.body:                                      ; preds = %for.body.i77.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i77.i ]
  %5 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <8 x i16>, ptr %5, align 2, !tbaa !13
  %6 = getelementptr inbounds i16, ptr %5, i64 8
  %wide.load27 = load <8 x i16>, ptr %6, align 2, !tbaa !13
  %7 = getelementptr inbounds i16, ptr %5, i64 16
  %wide.load28 = load <8 x i16>, ptr %7, align 2, !tbaa !13
  %8 = getelementptr inbounds i16, ptr %5, i64 24
  %wide.load29 = load <8 x i16>, ptr %8, align 2, !tbaa !13
  %9 = zext <8 x i16> %wide.load to <8 x i32>
  %10 = zext <8 x i16> %wide.load27 to <8 x i32>
  %11 = zext <8 x i16> %wide.load28 to <8 x i32>
  %12 = zext <8 x i16> %wide.load29 to <8 x i32>
  %13 = getelementptr inbounds i32, ptr %call1.i, i64 %index
  store <8 x i32> %9, ptr %13, align 4, !tbaa !95
  %14 = getelementptr inbounds i32, ptr %13, i64 8
  store <8 x i32> %10, ptr %14, align 4, !tbaa !95
  %15 = getelementptr inbounds i32, ptr %13, i64 16
  store <8 x i32> %11, ptr %15, align 4, !tbaa !95
  %16 = getelementptr inbounds i32, ptr %13, i64 24
  store <8 x i32> %12, ptr %16, align 4, !tbaa !95
  %index.next = add nuw i64 %index, 32
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !371

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i16, ptr %call.i, i64 9984
  %18 = load i16, ptr %arrayidx.i, align 2, !tbaa !13
  %conv.i = zext i16 %18 to i32
  %arrayidx2.i = getelementptr inbounds i32, ptr %call1.i, i64 9984
  store i32 %conv.i, ptr %arrayidx2.i, align 4, !tbaa !95
  %arrayidx.i.1 = getelementptr inbounds i16, ptr %call.i, i64 9985
  %19 = load i16, ptr %arrayidx.i.1, align 2, !tbaa !13
  %conv.i.1 = zext i16 %19 to i32
  %arrayidx2.i.1 = getelementptr inbounds i32, ptr %call1.i, i64 9985
  store i32 %conv.i.1, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %arrayidx.i.2 = getelementptr inbounds i16, ptr %call.i, i64 9986
  %20 = load i16, ptr %arrayidx.i.2, align 2, !tbaa !13
  %conv.i.2 = zext i16 %20 to i32
  %arrayidx2.i.2 = getelementptr inbounds i32, ptr %call1.i, i64 9986
  store i32 %conv.i.2, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %arrayidx.i.3 = getelementptr inbounds i16, ptr %call.i, i64 9987
  %21 = load i16, ptr %arrayidx.i.3, align 2, !tbaa !13
  %conv.i.3 = zext i16 %21 to i32
  %arrayidx2.i.3 = getelementptr inbounds i32, ptr %call1.i, i64 9987
  store i32 %conv.i.3, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %arrayidx.i.4 = getelementptr inbounds i16, ptr %call.i, i64 9988
  %22 = load i16, ptr %arrayidx.i.4, align 2, !tbaa !13
  %conv.i.4 = zext i16 %22 to i32
  %arrayidx2.i.4 = getelementptr inbounds i32, ptr %call1.i, i64 9988
  store i32 %conv.i.4, ptr %arrayidx2.i.4, align 4, !tbaa !95
  %arrayidx.i.5 = getelementptr inbounds i16, ptr %call.i, i64 9989
  %23 = load i16, ptr %arrayidx.i.5, align 2, !tbaa !13
  %conv.i.5 = zext i16 %23 to i32
  %arrayidx2.i.5 = getelementptr inbounds i32, ptr %call1.i, i64 9989
  store i32 %conv.i.5, ptr %arrayidx2.i.5, align 4, !tbaa !95
  %arrayidx.i.6 = getelementptr inbounds i16, ptr %call.i, i64 9990
  %24 = load i16, ptr %arrayidx.i.6, align 2, !tbaa !13
  %conv.i.6 = zext i16 %24 to i32
  %arrayidx2.i.6 = getelementptr inbounds i32, ptr %call1.i, i64 9990
  store i32 %conv.i.6, ptr %arrayidx2.i.6, align 4, !tbaa !95
  %arrayidx.i.7 = getelementptr inbounds i16, ptr %call.i, i64 9991
  %25 = load i16, ptr %arrayidx.i.7, align 2, !tbaa !13
  %conv.i.7 = zext i16 %25 to i32
  %arrayidx2.i.7 = getelementptr inbounds i32, ptr %call1.i, i64 9991
  store i32 %conv.i.7, ptr %arrayidx2.i.7, align 4, !tbaa !95
  %arrayidx.i.8 = getelementptr inbounds i16, ptr %call.i, i64 9992
  %26 = load i16, ptr %arrayidx.i.8, align 2, !tbaa !13
  %conv.i.8 = zext i16 %26 to i32
  %arrayidx2.i.8 = getelementptr inbounds i32, ptr %call1.i, i64 9992
  store i32 %conv.i.8, ptr %arrayidx2.i.8, align 4, !tbaa !95
  %arrayidx.i.9 = getelementptr inbounds i16, ptr %call.i, i64 9993
  %27 = load i16, ptr %arrayidx.i.9, align 2, !tbaa !13
  %conv.i.9 = zext i16 %27 to i32
  %arrayidx2.i.9 = getelementptr inbounds i32, ptr %call1.i, i64 9993
  store i32 %conv.i.9, ptr %arrayidx2.i.9, align 4, !tbaa !95
  %arrayidx.i.10 = getelementptr inbounds i16, ptr %call.i, i64 9994
  %28 = load i16, ptr %arrayidx.i.10, align 2, !tbaa !13
  %conv.i.10 = zext i16 %28 to i32
  %arrayidx2.i.10 = getelementptr inbounds i32, ptr %call1.i, i64 9994
  store i32 %conv.i.10, ptr %arrayidx2.i.10, align 4, !tbaa !95
  %arrayidx.i.11 = getelementptr inbounds i16, ptr %call.i, i64 9995
  %29 = load i16, ptr %arrayidx.i.11, align 2, !tbaa !13
  %conv.i.11 = zext i16 %29 to i32
  %arrayidx2.i.11 = getelementptr inbounds i32, ptr %call1.i, i64 9995
  store i32 %conv.i.11, ptr %arrayidx2.i.11, align 4, !tbaa !95
  %arrayidx.i.12 = getelementptr inbounds i16, ptr %call.i, i64 9996
  %30 = load i16, ptr %arrayidx.i.12, align 2, !tbaa !13
  %conv.i.12 = zext i16 %30 to i32
  %arrayidx2.i.12 = getelementptr inbounds i32, ptr %call1.i, i64 9996
  store i32 %conv.i.12, ptr %arrayidx2.i.12, align 4, !tbaa !95
  %arrayidx.i.13 = getelementptr inbounds i16, ptr %call.i, i64 9997
  %31 = load i16, ptr %arrayidx.i.13, align 2, !tbaa !13
  %conv.i.13 = zext i16 %31 to i32
  %arrayidx2.i.13 = getelementptr inbounds i32, ptr %call1.i, i64 9997
  store i32 %conv.i.13, ptr %arrayidx2.i.13, align 4, !tbaa !95
  %arrayidx.i.14 = getelementptr inbounds i16, ptr %call.i, i64 9998
  %32 = load i16, ptr %arrayidx.i.14, align 2, !tbaa !13
  %conv.i.14 = zext i16 %32 to i32
  %arrayidx2.i.14 = getelementptr inbounds i32, ptr %call1.i, i64 9998
  store i32 %conv.i.14, ptr %arrayidx2.i.14, align 4, !tbaa !95
  %arrayidx.i.15 = getelementptr inbounds i16, ptr %call.i, i64 9999
  %33 = load i16, ptr %arrayidx.i.15, align 2, !tbaa !13
  %conv.i.15 = zext i16 %33 to i32
  %arrayidx2.i.15 = getelementptr inbounds i32, ptr %call1.i, i64 9999
  store i32 %conv.i.15, ptr %arrayidx2.i.15, align 4, !tbaa !95
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i78.i.1 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i32, ptr %arrayidx.i78.i.1, align 4, !tbaa !95
  %arrayidx.i79.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i32, ptr %arrayidx.i79.i.1, align 4, !tbaa !95
  %cmp16.not.i.1 = icmp eq i32 %34, %35
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i78.i.2 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i32, ptr %arrayidx.i78.i.2, align 4, !tbaa !95
  %arrayidx.i79.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i32, ptr %arrayidx.i79.i.2, align 4, !tbaa !95
  %cmp16.not.i.2 = icmp eq i32 %36, %37
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i78.i.3 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i32, ptr %arrayidx.i78.i.3, align 4, !tbaa !95
  %arrayidx.i79.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i32, ptr %arrayidx.i79.i.3, align 4, !tbaa !95
  %cmp16.not.i.3 = icmp eq i32 %38, %39
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i78.i.4 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i32, ptr %arrayidx.i78.i.4, align 4, !tbaa !95
  %arrayidx.i79.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i32, ptr %arrayidx.i79.i.4, align 4, !tbaa !95
  %cmp16.not.i.4 = icmp eq i32 %40, %41
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !372

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not143147.i = icmp eq i64 %43, 0
  %cmp.not.i.not143.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not143147.i
  br i1 %cmp.not.i.not143.i, label %if.end.i.i, label %for.body48.i.preheader, !prof !42

for.body48.i.preheader:                           ; preds = %for.cond44.preheader.i
  %arrayidx.i8 = getelementptr inbounds i16, ptr %call.i, i64 9984
  %arrayidx.i8.1 = getelementptr inbounds i16, ptr %call.i, i64 9985
  %arrayidx.i8.2 = getelementptr inbounds i16, ptr %call.i, i64 9986
  %arrayidx.i8.3 = getelementptr inbounds i16, ptr %call.i, i64 9987
  %arrayidx.i8.4 = getelementptr inbounds i16, ptr %call.i, i64 9988
  %arrayidx.i8.5 = getelementptr inbounds i16, ptr %call.i, i64 9989
  %arrayidx.i8.6 = getelementptr inbounds i16, ptr %call.i, i64 9990
  %arrayidx.i8.7 = getelementptr inbounds i16, ptr %call.i, i64 9991
  %arrayidx.i8.8 = getelementptr inbounds i16, ptr %call.i, i64 9992
  %arrayidx.i8.9 = getelementptr inbounds i16, ptr %call.i, i64 9993
  %arrayidx.i8.10 = getelementptr inbounds i16, ptr %call.i, i64 9994
  %arrayidx.i8.11 = getelementptr inbounds i16, ptr %call.i, i64 9995
  %arrayidx.i8.12 = getelementptr inbounds i16, ptr %call.i, i64 9996
  %arrayidx.i8.13 = getelementptr inbounds i16, ptr %call.i, i64 9997
  %arrayidx.i8.14 = getelementptr inbounds i16, ptr %call.i, i64 9998
  %arrayidx.i8.15 = getelementptr inbounds i16, ptr %call.i, i64 9999
  br label %for.body48.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

ehcleanup59.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i114.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i78.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i32, ptr %arrayidx.i78.i, align 4, !tbaa !95
  %arrayidx.i79.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i32, ptr %arrayidx.i79.i, align 4, !tbaa !95
  %cmp16.not.i = icmp eq i32 %46, %47
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i32 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i78.i.le = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i81.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i82.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i16, ptr %arrayidx.i82.i, align 2, !tbaa !13
  %conv.i83.i = zext i16 %48 to i64
  %call.i84.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i83.i)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %49 = load i32, ptr %arrayidx.i78.i.le, align 4, !tbaa !95
  %conv.i90.i = zext i32 %49 to i64
  %call.i91.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, i64 noundef %conv.i90.i)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i94.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %conv.i97.i = zext i32 %.lcssa to i64
  %call.i98.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, i64 noundef %conv.i97.i)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i98.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

if.end.i.i:                                       ; preds = %for.body.i13, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i102.i = icmp eq ptr %51, null
  br i1 %cmp.not.i102.i, label %_ZL28benchForTruncOrZextVecInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i103.i

delete.notnull.i.i103.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body48.i:                                     ; preds = %for.body48.i.preheader, %for.body.i13
  %__begin1.sroa.0.0144.i = phi i64 [ %dec.i.i, %for.body.i13 ], [ %43, %for.body48.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body35

vector.body35:                                    ; preds = %vector.body35, %for.body48.i
  %index36 = phi i64 [ 0, %for.body48.i ], [ %index.next41, %vector.body35 ]
  %55 = getelementptr inbounds i16, ptr %call.i, i64 %index36
  %wide.load37 = load <8 x i16>, ptr %55, align 2, !tbaa !13
  %56 = getelementptr inbounds i16, ptr %55, i64 8
  %wide.load38 = load <8 x i16>, ptr %56, align 2, !tbaa !13
  %57 = getelementptr inbounds i16, ptr %55, i64 16
  %wide.load39 = load <8 x i16>, ptr %57, align 2, !tbaa !13
  %58 = getelementptr inbounds i16, ptr %55, i64 24
  %wide.load40 = load <8 x i16>, ptr %58, align 2, !tbaa !13
  %59 = zext <8 x i16> %wide.load37 to <8 x i32>
  %60 = zext <8 x i16> %wide.load38 to <8 x i32>
  %61 = zext <8 x i16> %wide.load39 to <8 x i32>
  %62 = zext <8 x i16> %wide.load40 to <8 x i32>
  %63 = getelementptr inbounds i32, ptr %54, i64 %index36
  store <8 x i32> %59, ptr %63, align 4, !tbaa !95
  %64 = getelementptr inbounds i32, ptr %63, i64 8
  store <8 x i32> %60, ptr %64, align 4, !tbaa !95
  %65 = getelementptr inbounds i32, ptr %63, i64 16
  store <8 x i32> %61, ptr %65, align 4, !tbaa !95
  %66 = getelementptr inbounds i32, ptr %63, i64 24
  store <8 x i32> %62, ptr %66, align 4, !tbaa !95
  %index.next41 = add nuw i64 %index36, 32
  %67 = icmp eq i64 %index.next41, 9984
  br i1 %67, label %for.body.i13, label %vector.body35, !llvm.loop !373

for.body.i13:                                     ; preds = %vector.body35
  %68 = load i16, ptr %arrayidx.i8, align 2, !tbaa !13
  %conv.i9 = zext i16 %68 to i32
  %arrayidx2.i10 = getelementptr inbounds i32, ptr %54, i64 9984
  store i32 %conv.i9, ptr %arrayidx2.i10, align 4, !tbaa !95
  %69 = load i16, ptr %arrayidx.i8.1, align 2, !tbaa !13
  %conv.i9.1 = zext i16 %69 to i32
  %arrayidx2.i10.1 = getelementptr inbounds i32, ptr %54, i64 9985
  store i32 %conv.i9.1, ptr %arrayidx2.i10.1, align 4, !tbaa !95
  %70 = load i16, ptr %arrayidx.i8.2, align 2, !tbaa !13
  %conv.i9.2 = zext i16 %70 to i32
  %arrayidx2.i10.2 = getelementptr inbounds i32, ptr %54, i64 9986
  store i32 %conv.i9.2, ptr %arrayidx2.i10.2, align 4, !tbaa !95
  %71 = load i16, ptr %arrayidx.i8.3, align 2, !tbaa !13
  %conv.i9.3 = zext i16 %71 to i32
  %arrayidx2.i10.3 = getelementptr inbounds i32, ptr %54, i64 9987
  store i32 %conv.i9.3, ptr %arrayidx2.i10.3, align 4, !tbaa !95
  %72 = load i16, ptr %arrayidx.i8.4, align 2, !tbaa !13
  %conv.i9.4 = zext i16 %72 to i32
  %arrayidx2.i10.4 = getelementptr inbounds i32, ptr %54, i64 9988
  store i32 %conv.i9.4, ptr %arrayidx2.i10.4, align 4, !tbaa !95
  %73 = load i16, ptr %arrayidx.i8.5, align 2, !tbaa !13
  %conv.i9.5 = zext i16 %73 to i32
  %arrayidx2.i10.5 = getelementptr inbounds i32, ptr %54, i64 9989
  store i32 %conv.i9.5, ptr %arrayidx2.i10.5, align 4, !tbaa !95
  %74 = load i16, ptr %arrayidx.i8.6, align 2, !tbaa !13
  %conv.i9.6 = zext i16 %74 to i32
  %arrayidx2.i10.6 = getelementptr inbounds i32, ptr %54, i64 9990
  store i32 %conv.i9.6, ptr %arrayidx2.i10.6, align 4, !tbaa !95
  %75 = load i16, ptr %arrayidx.i8.7, align 2, !tbaa !13
  %conv.i9.7 = zext i16 %75 to i32
  %arrayidx2.i10.7 = getelementptr inbounds i32, ptr %54, i64 9991
  store i32 %conv.i9.7, ptr %arrayidx2.i10.7, align 4, !tbaa !95
  %76 = load i16, ptr %arrayidx.i8.8, align 2, !tbaa !13
  %conv.i9.8 = zext i16 %76 to i32
  %arrayidx2.i10.8 = getelementptr inbounds i32, ptr %54, i64 9992
  store i32 %conv.i9.8, ptr %arrayidx2.i10.8, align 4, !tbaa !95
  %77 = load i16, ptr %arrayidx.i8.9, align 2, !tbaa !13
  %conv.i9.9 = zext i16 %77 to i32
  %arrayidx2.i10.9 = getelementptr inbounds i32, ptr %54, i64 9993
  store i32 %conv.i9.9, ptr %arrayidx2.i10.9, align 4, !tbaa !95
  %78 = load i16, ptr %arrayidx.i8.10, align 2, !tbaa !13
  %conv.i9.10 = zext i16 %78 to i32
  %arrayidx2.i10.10 = getelementptr inbounds i32, ptr %54, i64 9994
  store i32 %conv.i9.10, ptr %arrayidx2.i10.10, align 4, !tbaa !95
  %79 = load i16, ptr %arrayidx.i8.11, align 2, !tbaa !13
  %conv.i9.11 = zext i16 %79 to i32
  %arrayidx2.i10.11 = getelementptr inbounds i32, ptr %54, i64 9995
  store i32 %conv.i9.11, ptr %arrayidx2.i10.11, align 4, !tbaa !95
  %80 = load i16, ptr %arrayidx.i8.12, align 2, !tbaa !13
  %conv.i9.12 = zext i16 %80 to i32
  %arrayidx2.i10.12 = getelementptr inbounds i32, ptr %54, i64 9996
  store i32 %conv.i9.12, ptr %arrayidx2.i10.12, align 4, !tbaa !95
  %81 = load i16, ptr %arrayidx.i8.13, align 2, !tbaa !13
  %conv.i9.13 = zext i16 %81 to i32
  %arrayidx2.i10.13 = getelementptr inbounds i32, ptr %54, i64 9997
  store i32 %conv.i9.13, ptr %arrayidx2.i10.13, align 4, !tbaa !95
  %82 = load i16, ptr %arrayidx.i8.14, align 2, !tbaa !13
  %conv.i9.14 = zext i16 %82 to i32
  %arrayidx2.i10.14 = getelementptr inbounds i32, ptr %54, i64 9998
  store i32 %conv.i9.14, ptr %arrayidx2.i10.14, align 4, !tbaa !95
  %83 = load i16, ptr %arrayidx.i8.15, align 2, !tbaa !13
  %conv.i9.15 = zext i16 %83 to i32
  %arrayidx2.i10.15 = getelementptr inbounds i32, ptr %54, i64 9999
  store i32 %conv.i9.15, ptr %arrayidx2.i10.15, align 4, !tbaa !95
  %dec.i.i = add i64 %__begin1.sroa.0.0144.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup59.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn133.i = phi { ptr, i32 } [ %50, %lpad17.i ], [ %52, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i113.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i113.i, label %ehcleanup61.i, label %delete.notnull.i.i114.i

delete.notnull.i.i114.i:                          ; preds = %ehcleanup59.i, %ehcleanup59.thread.i
  %.pn133.pn139.i = phi { ptr, i32 } [ %45, %ehcleanup59.thread.i ], [ %.pn133.i, %ehcleanup59.i ]
  %84 = phi ptr [ %call1.i, %ehcleanup59.thread.i ], [ %.pr.i, %ehcleanup59.i ]
  call void @_ZdaPv(ptr noundef nonnull %84) #13
  br label %ehcleanup61.i

ehcleanup61.i:                                    ; preds = %delete.notnull.i.i114.i, %ehcleanup59.i, %lpad.i
  %.pn133.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn133.i, %ehcleanup59.i ], [ %.pn133.pn139.i, %delete.notnull.i.i114.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn133.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i103.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont3.i unwind label %ehcleanup59.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i73.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i73.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  br label %for.body.i77.i

for.body.i77.i:                                   ; preds = %for.body.i77.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i74.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i75.i.4, %for.body.i77.i ]
  %arrayidx.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i74.i
  %0 = load i16, ptr %arrayidx.i.i, align 2, !tbaa !13
  %conv.i.i = zext i16 %0 to i32
  %arrayidx2.i.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i74.i
  store i32 %conv.i.i, ptr %arrayidx2.i.i, align 4, !tbaa !95
  %indvars.iv.next.i75.i = add nuw nsw i64 %indvars.iv.i74.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i
  %1 = load i16, ptr %arrayidx.i.i.1, align 2, !tbaa !13
  %conv.i.i.1 = zext i16 %1 to i32
  %arrayidx2.i.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i
  store i32 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 4, !tbaa !95
  %indvars.iv.next.i75.i.1 = add nuw nsw i64 %indvars.iv.i74.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.1
  %2 = load i16, ptr %arrayidx.i.i.2, align 2, !tbaa !13
  %conv.i.i.2 = zext i16 %2 to i32
  %arrayidx2.i.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.1
  store i32 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 4, !tbaa !95
  %indvars.iv.next.i75.i.2 = add nuw nsw i64 %indvars.iv.i74.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.2
  %3 = load i16, ptr %arrayidx.i.i.3, align 2, !tbaa !13
  %conv.i.i.3 = zext i16 %3 to i32
  %arrayidx2.i.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.2
  store i32 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 4, !tbaa !95
  %indvars.iv.next.i75.i.3 = add nuw nsw i64 %indvars.iv.i74.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.3
  %4 = load i16, ptr %arrayidx.i.i.4, align 2, !tbaa !13
  %conv.i.i.4 = zext i16 %4 to i32
  %arrayidx2.i.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.3
  store i32 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 4, !tbaa !95
  %indvars.iv.next.i75.i.4 = add nuw nsw i64 %indvars.iv.i74.i, 5
  %exitcond.not.i76.i.4 = icmp eq i64 %indvars.iv.next.i75.i.4, 10000
  br i1 %exitcond.not.i76.i.4, label %vector.body, label %for.body.i77.i, !llvm.loop !370

vector.body:                                      ; preds = %for.body.i77.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i77.i ]
  %5 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <16 x i16>, ptr %5, align 2, !tbaa !13
  %6 = getelementptr inbounds i16, ptr %5, i64 16
  %wide.load27 = load <16 x i16>, ptr %6, align 2, !tbaa !13
  %7 = getelementptr inbounds i16, ptr %5, i64 32
  %wide.load28 = load <16 x i16>, ptr %7, align 2, !tbaa !13
  %8 = getelementptr inbounds i16, ptr %5, i64 48
  %wide.load29 = load <16 x i16>, ptr %8, align 2, !tbaa !13
  %9 = zext <16 x i16> %wide.load to <16 x i32>
  %10 = zext <16 x i16> %wide.load27 to <16 x i32>
  %11 = zext <16 x i16> %wide.load28 to <16 x i32>
  %12 = zext <16 x i16> %wide.load29 to <16 x i32>
  %13 = getelementptr inbounds i32, ptr %call1.i, i64 %index
  store <16 x i32> %9, ptr %13, align 4, !tbaa !95
  %14 = getelementptr inbounds i32, ptr %13, i64 16
  store <16 x i32> %10, ptr %14, align 4, !tbaa !95
  %15 = getelementptr inbounds i32, ptr %13, i64 32
  store <16 x i32> %11, ptr %15, align 4, !tbaa !95
  %16 = getelementptr inbounds i32, ptr %13, i64 48
  store <16 x i32> %12, ptr %16, align 4, !tbaa !95
  %index.next = add nuw i64 %index, 64
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !374

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i16, ptr %call.i, i64 9984
  %18 = load i16, ptr %arrayidx.i, align 2, !tbaa !13
  %conv.i = zext i16 %18 to i32
  %arrayidx2.i = getelementptr inbounds i32, ptr %call1.i, i64 9984
  store i32 %conv.i, ptr %arrayidx2.i, align 4, !tbaa !95
  %arrayidx.i.1 = getelementptr inbounds i16, ptr %call.i, i64 9985
  %19 = load i16, ptr %arrayidx.i.1, align 2, !tbaa !13
  %conv.i.1 = zext i16 %19 to i32
  %arrayidx2.i.1 = getelementptr inbounds i32, ptr %call1.i, i64 9985
  store i32 %conv.i.1, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %arrayidx.i.2 = getelementptr inbounds i16, ptr %call.i, i64 9986
  %20 = load i16, ptr %arrayidx.i.2, align 2, !tbaa !13
  %conv.i.2 = zext i16 %20 to i32
  %arrayidx2.i.2 = getelementptr inbounds i32, ptr %call1.i, i64 9986
  store i32 %conv.i.2, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %arrayidx.i.3 = getelementptr inbounds i16, ptr %call.i, i64 9987
  %21 = load i16, ptr %arrayidx.i.3, align 2, !tbaa !13
  %conv.i.3 = zext i16 %21 to i32
  %arrayidx2.i.3 = getelementptr inbounds i32, ptr %call1.i, i64 9987
  store i32 %conv.i.3, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %arrayidx.i.4 = getelementptr inbounds i16, ptr %call.i, i64 9988
  %22 = load i16, ptr %arrayidx.i.4, align 2, !tbaa !13
  %conv.i.4 = zext i16 %22 to i32
  %arrayidx2.i.4 = getelementptr inbounds i32, ptr %call1.i, i64 9988
  store i32 %conv.i.4, ptr %arrayidx2.i.4, align 4, !tbaa !95
  %arrayidx.i.5 = getelementptr inbounds i16, ptr %call.i, i64 9989
  %23 = load i16, ptr %arrayidx.i.5, align 2, !tbaa !13
  %conv.i.5 = zext i16 %23 to i32
  %arrayidx2.i.5 = getelementptr inbounds i32, ptr %call1.i, i64 9989
  store i32 %conv.i.5, ptr %arrayidx2.i.5, align 4, !tbaa !95
  %arrayidx.i.6 = getelementptr inbounds i16, ptr %call.i, i64 9990
  %24 = load i16, ptr %arrayidx.i.6, align 2, !tbaa !13
  %conv.i.6 = zext i16 %24 to i32
  %arrayidx2.i.6 = getelementptr inbounds i32, ptr %call1.i, i64 9990
  store i32 %conv.i.6, ptr %arrayidx2.i.6, align 4, !tbaa !95
  %arrayidx.i.7 = getelementptr inbounds i16, ptr %call.i, i64 9991
  %25 = load i16, ptr %arrayidx.i.7, align 2, !tbaa !13
  %conv.i.7 = zext i16 %25 to i32
  %arrayidx2.i.7 = getelementptr inbounds i32, ptr %call1.i, i64 9991
  store i32 %conv.i.7, ptr %arrayidx2.i.7, align 4, !tbaa !95
  %arrayidx.i.8 = getelementptr inbounds i16, ptr %call.i, i64 9992
  %26 = load i16, ptr %arrayidx.i.8, align 2, !tbaa !13
  %conv.i.8 = zext i16 %26 to i32
  %arrayidx2.i.8 = getelementptr inbounds i32, ptr %call1.i, i64 9992
  store i32 %conv.i.8, ptr %arrayidx2.i.8, align 4, !tbaa !95
  %arrayidx.i.9 = getelementptr inbounds i16, ptr %call.i, i64 9993
  %27 = load i16, ptr %arrayidx.i.9, align 2, !tbaa !13
  %conv.i.9 = zext i16 %27 to i32
  %arrayidx2.i.9 = getelementptr inbounds i32, ptr %call1.i, i64 9993
  store i32 %conv.i.9, ptr %arrayidx2.i.9, align 4, !tbaa !95
  %arrayidx.i.10 = getelementptr inbounds i16, ptr %call.i, i64 9994
  %28 = load i16, ptr %arrayidx.i.10, align 2, !tbaa !13
  %conv.i.10 = zext i16 %28 to i32
  %arrayidx2.i.10 = getelementptr inbounds i32, ptr %call1.i, i64 9994
  store i32 %conv.i.10, ptr %arrayidx2.i.10, align 4, !tbaa !95
  %arrayidx.i.11 = getelementptr inbounds i16, ptr %call.i, i64 9995
  %29 = load i16, ptr %arrayidx.i.11, align 2, !tbaa !13
  %conv.i.11 = zext i16 %29 to i32
  %arrayidx2.i.11 = getelementptr inbounds i32, ptr %call1.i, i64 9995
  store i32 %conv.i.11, ptr %arrayidx2.i.11, align 4, !tbaa !95
  %arrayidx.i.12 = getelementptr inbounds i16, ptr %call.i, i64 9996
  %30 = load i16, ptr %arrayidx.i.12, align 2, !tbaa !13
  %conv.i.12 = zext i16 %30 to i32
  %arrayidx2.i.12 = getelementptr inbounds i32, ptr %call1.i, i64 9996
  store i32 %conv.i.12, ptr %arrayidx2.i.12, align 4, !tbaa !95
  %arrayidx.i.13 = getelementptr inbounds i16, ptr %call.i, i64 9997
  %31 = load i16, ptr %arrayidx.i.13, align 2, !tbaa !13
  %conv.i.13 = zext i16 %31 to i32
  %arrayidx2.i.13 = getelementptr inbounds i32, ptr %call1.i, i64 9997
  store i32 %conv.i.13, ptr %arrayidx2.i.13, align 4, !tbaa !95
  %arrayidx.i.14 = getelementptr inbounds i16, ptr %call.i, i64 9998
  %32 = load i16, ptr %arrayidx.i.14, align 2, !tbaa !13
  %conv.i.14 = zext i16 %32 to i32
  %arrayidx2.i.14 = getelementptr inbounds i32, ptr %call1.i, i64 9998
  store i32 %conv.i.14, ptr %arrayidx2.i.14, align 4, !tbaa !95
  %arrayidx.i.15 = getelementptr inbounds i16, ptr %call.i, i64 9999
  %33 = load i16, ptr %arrayidx.i.15, align 2, !tbaa !13
  %conv.i.15 = zext i16 %33 to i32
  %arrayidx2.i.15 = getelementptr inbounds i32, ptr %call1.i, i64 9999
  store i32 %conv.i.15, ptr %arrayidx2.i.15, align 4, !tbaa !95
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i78.i.1 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i32, ptr %arrayidx.i78.i.1, align 4, !tbaa !95
  %arrayidx.i79.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i32, ptr %arrayidx.i79.i.1, align 4, !tbaa !95
  %cmp16.not.i.1 = icmp eq i32 %34, %35
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i78.i.2 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i32, ptr %arrayidx.i78.i.2, align 4, !tbaa !95
  %arrayidx.i79.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i32, ptr %arrayidx.i79.i.2, align 4, !tbaa !95
  %cmp16.not.i.2 = icmp eq i32 %36, %37
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i78.i.3 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i32, ptr %arrayidx.i78.i.3, align 4, !tbaa !95
  %arrayidx.i79.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i32, ptr %arrayidx.i79.i.3, align 4, !tbaa !95
  %cmp16.not.i.3 = icmp eq i32 %38, %39
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i78.i.4 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i32, ptr %arrayidx.i78.i.4, align 4, !tbaa !95
  %arrayidx.i79.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i32, ptr %arrayidx.i79.i.4, align 4, !tbaa !95
  %cmp16.not.i.4 = icmp eq i32 %40, %41
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !372

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not143147.i = icmp eq i64 %43, 0
  %cmp.not.i.not143.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not143147.i
  br i1 %cmp.not.i.not143.i, label %if.end.i.i, label %for.body48.i.preheader, !prof !42

for.body48.i.preheader:                           ; preds = %for.cond44.preheader.i
  %arrayidx.i8 = getelementptr inbounds i16, ptr %call.i, i64 9984
  %arrayidx.i8.1 = getelementptr inbounds i16, ptr %call.i, i64 9985
  %arrayidx.i8.2 = getelementptr inbounds i16, ptr %call.i, i64 9986
  %arrayidx.i8.3 = getelementptr inbounds i16, ptr %call.i, i64 9987
  %arrayidx.i8.4 = getelementptr inbounds i16, ptr %call.i, i64 9988
  %arrayidx.i8.5 = getelementptr inbounds i16, ptr %call.i, i64 9989
  %arrayidx.i8.6 = getelementptr inbounds i16, ptr %call.i, i64 9990
  %arrayidx.i8.7 = getelementptr inbounds i16, ptr %call.i, i64 9991
  %arrayidx.i8.8 = getelementptr inbounds i16, ptr %call.i, i64 9992
  %arrayidx.i8.9 = getelementptr inbounds i16, ptr %call.i, i64 9993
  %arrayidx.i8.10 = getelementptr inbounds i16, ptr %call.i, i64 9994
  %arrayidx.i8.11 = getelementptr inbounds i16, ptr %call.i, i64 9995
  %arrayidx.i8.12 = getelementptr inbounds i16, ptr %call.i, i64 9996
  %arrayidx.i8.13 = getelementptr inbounds i16, ptr %call.i, i64 9997
  %arrayidx.i8.14 = getelementptr inbounds i16, ptr %call.i, i64 9998
  %arrayidx.i8.15 = getelementptr inbounds i16, ptr %call.i, i64 9999
  br label %for.body48.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

ehcleanup59.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i114.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i78.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i32, ptr %arrayidx.i78.i, align 4, !tbaa !95
  %arrayidx.i79.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i32, ptr %arrayidx.i79.i, align 4, !tbaa !95
  %cmp16.not.i = icmp eq i32 %46, %47
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i32 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i78.i.le = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i81.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i82.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i16, ptr %arrayidx.i82.i, align 2, !tbaa !13
  %conv.i83.i = zext i16 %48 to i64
  %call.i84.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i83.i)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %49 = load i32, ptr %arrayidx.i78.i.le, align 4, !tbaa !95
  %conv.i90.i = zext i32 %49 to i64
  %call.i91.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, i64 noundef %conv.i90.i)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i94.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %conv.i97.i = zext i32 %.lcssa to i64
  %call.i98.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, i64 noundef %conv.i97.i)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i98.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

if.end.i.i:                                       ; preds = %for.body.i13, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i102.i = icmp eq ptr %51, null
  br i1 %cmp.not.i102.i, label %_ZL28benchForTruncOrZextVecInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i103.i

delete.notnull.i.i103.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body48.i:                                     ; preds = %for.body48.i.preheader, %for.body.i13
  %__begin1.sroa.0.0144.i = phi i64 [ %dec.i.i, %for.body.i13 ], [ %43, %for.body48.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body35

vector.body35:                                    ; preds = %vector.body35, %for.body48.i
  %index36 = phi i64 [ 0, %for.body48.i ], [ %index.next41, %vector.body35 ]
  %55 = getelementptr inbounds i16, ptr %call.i, i64 %index36
  %wide.load37 = load <16 x i16>, ptr %55, align 2, !tbaa !13
  %56 = getelementptr inbounds i16, ptr %55, i64 16
  %wide.load38 = load <16 x i16>, ptr %56, align 2, !tbaa !13
  %57 = getelementptr inbounds i16, ptr %55, i64 32
  %wide.load39 = load <16 x i16>, ptr %57, align 2, !tbaa !13
  %58 = getelementptr inbounds i16, ptr %55, i64 48
  %wide.load40 = load <16 x i16>, ptr %58, align 2, !tbaa !13
  %59 = zext <16 x i16> %wide.load37 to <16 x i32>
  %60 = zext <16 x i16> %wide.load38 to <16 x i32>
  %61 = zext <16 x i16> %wide.load39 to <16 x i32>
  %62 = zext <16 x i16> %wide.load40 to <16 x i32>
  %63 = getelementptr inbounds i32, ptr %54, i64 %index36
  store <16 x i32> %59, ptr %63, align 4, !tbaa !95
  %64 = getelementptr inbounds i32, ptr %63, i64 16
  store <16 x i32> %60, ptr %64, align 4, !tbaa !95
  %65 = getelementptr inbounds i32, ptr %63, i64 32
  store <16 x i32> %61, ptr %65, align 4, !tbaa !95
  %66 = getelementptr inbounds i32, ptr %63, i64 48
  store <16 x i32> %62, ptr %66, align 4, !tbaa !95
  %index.next41 = add nuw i64 %index36, 64
  %67 = icmp eq i64 %index.next41, 9984
  br i1 %67, label %for.body.i13, label %vector.body35, !llvm.loop !375

for.body.i13:                                     ; preds = %vector.body35
  %68 = load i16, ptr %arrayidx.i8, align 2, !tbaa !13
  %conv.i9 = zext i16 %68 to i32
  %arrayidx2.i10 = getelementptr inbounds i32, ptr %54, i64 9984
  store i32 %conv.i9, ptr %arrayidx2.i10, align 4, !tbaa !95
  %69 = load i16, ptr %arrayidx.i8.1, align 2, !tbaa !13
  %conv.i9.1 = zext i16 %69 to i32
  %arrayidx2.i10.1 = getelementptr inbounds i32, ptr %54, i64 9985
  store i32 %conv.i9.1, ptr %arrayidx2.i10.1, align 4, !tbaa !95
  %70 = load i16, ptr %arrayidx.i8.2, align 2, !tbaa !13
  %conv.i9.2 = zext i16 %70 to i32
  %arrayidx2.i10.2 = getelementptr inbounds i32, ptr %54, i64 9986
  store i32 %conv.i9.2, ptr %arrayidx2.i10.2, align 4, !tbaa !95
  %71 = load i16, ptr %arrayidx.i8.3, align 2, !tbaa !13
  %conv.i9.3 = zext i16 %71 to i32
  %arrayidx2.i10.3 = getelementptr inbounds i32, ptr %54, i64 9987
  store i32 %conv.i9.3, ptr %arrayidx2.i10.3, align 4, !tbaa !95
  %72 = load i16, ptr %arrayidx.i8.4, align 2, !tbaa !13
  %conv.i9.4 = zext i16 %72 to i32
  %arrayidx2.i10.4 = getelementptr inbounds i32, ptr %54, i64 9988
  store i32 %conv.i9.4, ptr %arrayidx2.i10.4, align 4, !tbaa !95
  %73 = load i16, ptr %arrayidx.i8.5, align 2, !tbaa !13
  %conv.i9.5 = zext i16 %73 to i32
  %arrayidx2.i10.5 = getelementptr inbounds i32, ptr %54, i64 9989
  store i32 %conv.i9.5, ptr %arrayidx2.i10.5, align 4, !tbaa !95
  %74 = load i16, ptr %arrayidx.i8.6, align 2, !tbaa !13
  %conv.i9.6 = zext i16 %74 to i32
  %arrayidx2.i10.6 = getelementptr inbounds i32, ptr %54, i64 9990
  store i32 %conv.i9.6, ptr %arrayidx2.i10.6, align 4, !tbaa !95
  %75 = load i16, ptr %arrayidx.i8.7, align 2, !tbaa !13
  %conv.i9.7 = zext i16 %75 to i32
  %arrayidx2.i10.7 = getelementptr inbounds i32, ptr %54, i64 9991
  store i32 %conv.i9.7, ptr %arrayidx2.i10.7, align 4, !tbaa !95
  %76 = load i16, ptr %arrayidx.i8.8, align 2, !tbaa !13
  %conv.i9.8 = zext i16 %76 to i32
  %arrayidx2.i10.8 = getelementptr inbounds i32, ptr %54, i64 9992
  store i32 %conv.i9.8, ptr %arrayidx2.i10.8, align 4, !tbaa !95
  %77 = load i16, ptr %arrayidx.i8.9, align 2, !tbaa !13
  %conv.i9.9 = zext i16 %77 to i32
  %arrayidx2.i10.9 = getelementptr inbounds i32, ptr %54, i64 9993
  store i32 %conv.i9.9, ptr %arrayidx2.i10.9, align 4, !tbaa !95
  %78 = load i16, ptr %arrayidx.i8.10, align 2, !tbaa !13
  %conv.i9.10 = zext i16 %78 to i32
  %arrayidx2.i10.10 = getelementptr inbounds i32, ptr %54, i64 9994
  store i32 %conv.i9.10, ptr %arrayidx2.i10.10, align 4, !tbaa !95
  %79 = load i16, ptr %arrayidx.i8.11, align 2, !tbaa !13
  %conv.i9.11 = zext i16 %79 to i32
  %arrayidx2.i10.11 = getelementptr inbounds i32, ptr %54, i64 9995
  store i32 %conv.i9.11, ptr %arrayidx2.i10.11, align 4, !tbaa !95
  %80 = load i16, ptr %arrayidx.i8.12, align 2, !tbaa !13
  %conv.i9.12 = zext i16 %80 to i32
  %arrayidx2.i10.12 = getelementptr inbounds i32, ptr %54, i64 9996
  store i32 %conv.i9.12, ptr %arrayidx2.i10.12, align 4, !tbaa !95
  %81 = load i16, ptr %arrayidx.i8.13, align 2, !tbaa !13
  %conv.i9.13 = zext i16 %81 to i32
  %arrayidx2.i10.13 = getelementptr inbounds i32, ptr %54, i64 9997
  store i32 %conv.i9.13, ptr %arrayidx2.i10.13, align 4, !tbaa !95
  %82 = load i16, ptr %arrayidx.i8.14, align 2, !tbaa !13
  %conv.i9.14 = zext i16 %82 to i32
  %arrayidx2.i10.14 = getelementptr inbounds i32, ptr %54, i64 9998
  store i32 %conv.i9.14, ptr %arrayidx2.i10.14, align 4, !tbaa !95
  %83 = load i16, ptr %arrayidx.i8.15, align 2, !tbaa !13
  %conv.i9.15 = zext i16 %83 to i32
  %arrayidx2.i10.15 = getelementptr inbounds i32, ptr %54, i64 9999
  store i32 %conv.i9.15, ptr %arrayidx2.i10.15, align 4, !tbaa !95
  %dec.i.i = add i64 %__begin1.sroa.0.0144.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup59.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn133.i = phi { ptr, i32 } [ %50, %lpad17.i ], [ %52, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i113.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i113.i, label %ehcleanup61.i, label %delete.notnull.i.i114.i

delete.notnull.i.i114.i:                          ; preds = %ehcleanup59.i, %ehcleanup59.thread.i
  %.pn133.pn139.i = phi { ptr, i32 } [ %45, %ehcleanup59.thread.i ], [ %.pn133.i, %ehcleanup59.i ]
  %84 = phi ptr [ %call1.i, %ehcleanup59.thread.i ], [ %.pr.i, %ehcleanup59.i ]
  call void @_ZdaPv(ptr noundef nonnull %84) #13
  br label %ehcleanup61.i

ehcleanup61.i:                                    ; preds = %delete.notnull.i.i114.i, %ehcleanup59.i, %lpad.i
  %.pn133.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn133.i, %ehcleanup59.i ], [ %.pn133.pn139.i, %delete.notnull.i.i114.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn133.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i103.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z54benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont3.i unwind label %ehcleanup59.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i73.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i73.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  br label %for.body.i77.i

for.body.i77.i:                                   ; preds = %for.body.i77.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i74.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i75.i.4, %for.body.i77.i ]
  %arrayidx.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i74.i
  %0 = load i16, ptr %arrayidx.i.i, align 2, !tbaa !13
  %conv.i.i = zext i16 %0 to i32
  %arrayidx2.i.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i74.i
  store i32 %conv.i.i, ptr %arrayidx2.i.i, align 4, !tbaa !95
  %indvars.iv.next.i75.i = add nuw nsw i64 %indvars.iv.i74.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i
  %1 = load i16, ptr %arrayidx.i.i.1, align 2, !tbaa !13
  %conv.i.i.1 = zext i16 %1 to i32
  %arrayidx2.i.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i
  store i32 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 4, !tbaa !95
  %indvars.iv.next.i75.i.1 = add nuw nsw i64 %indvars.iv.i74.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.1
  %2 = load i16, ptr %arrayidx.i.i.2, align 2, !tbaa !13
  %conv.i.i.2 = zext i16 %2 to i32
  %arrayidx2.i.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.1
  store i32 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 4, !tbaa !95
  %indvars.iv.next.i75.i.2 = add nuw nsw i64 %indvars.iv.i74.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.2
  %3 = load i16, ptr %arrayidx.i.i.3, align 2, !tbaa !13
  %conv.i.i.3 = zext i16 %3 to i32
  %arrayidx2.i.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.2
  store i32 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 4, !tbaa !95
  %indvars.iv.next.i75.i.3 = add nuw nsw i64 %indvars.iv.i74.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.3
  %4 = load i16, ptr %arrayidx.i.i.4, align 2, !tbaa !13
  %conv.i.i.4 = zext i16 %4 to i32
  %arrayidx2.i.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i75.i.3
  store i32 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 4, !tbaa !95
  %indvars.iv.next.i75.i.4 = add nuw nsw i64 %indvars.iv.i74.i, 5
  %exitcond.not.i76.i.4 = icmp eq i64 %indvars.iv.next.i75.i.4, 10000
  br i1 %exitcond.not.i76.i.4, label %vector.body, label %for.body.i77.i, !llvm.loop !370

vector.body:                                      ; preds = %for.body.i77.i, %vector.body
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %for.body.i77.i ]
  %5 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <4 x i16>, ptr %5, align 2, !tbaa !13
  %6 = getelementptr inbounds i16, ptr %5, i64 4
  %wide.load27 = load <4 x i16>, ptr %6, align 2, !tbaa !13
  %7 = zext <4 x i16> %wide.load to <4 x i32>
  %8 = zext <4 x i16> %wide.load27 to <4 x i32>
  %9 = getelementptr inbounds i32, ptr %call1.i, i64 %index
  store <4 x i32> %7, ptr %9, align 4, !tbaa !95
  %10 = getelementptr inbounds i32, ptr %9, i64 4
  store <4 x i32> %8, ptr %10, align 4, !tbaa !95
  %index.next = or i64 %index, 8
  %11 = getelementptr inbounds i16, ptr %call.i, i64 %index.next
  %wide.load.1 = load <4 x i16>, ptr %11, align 2, !tbaa !13
  %12 = getelementptr inbounds i16, ptr %11, i64 4
  %wide.load27.1 = load <4 x i16>, ptr %12, align 2, !tbaa !13
  %13 = zext <4 x i16> %wide.load.1 to <4 x i32>
  %14 = zext <4 x i16> %wide.load27.1 to <4 x i32>
  %15 = getelementptr inbounds i32, ptr %call1.i, i64 %index.next
  store <4 x i32> %13, ptr %15, align 4, !tbaa !95
  %16 = getelementptr inbounds i32, ptr %15, i64 4
  store <4 x i32> %14, ptr %16, align 4, !tbaa !95
  %index.next.1 = add nuw nsw i64 %index, 16
  %17 = icmp eq i64 %index.next.1, 10000
  br i1 %17, label %for.body.i, label %vector.body, !llvm.loop !376

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i78.i.1 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i
  %18 = load i32, ptr %arrayidx.i78.i.1, align 4, !tbaa !95
  %arrayidx.i79.i.1 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i
  %19 = load i32, ptr %arrayidx.i79.i.1, align 4, !tbaa !95
  %cmp16.not.i.1 = icmp eq i32 %18, %19
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i78.i.2 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.1
  %20 = load i32, ptr %arrayidx.i78.i.2, align 4, !tbaa !95
  %arrayidx.i79.i.2 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.1
  %21 = load i32, ptr %arrayidx.i79.i.2, align 4, !tbaa !95
  %cmp16.not.i.2 = icmp eq i32 %20, %21
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i78.i.3 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.2
  %22 = load i32, ptr %arrayidx.i78.i.3, align 4, !tbaa !95
  %arrayidx.i79.i.3 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.2
  %23 = load i32, ptr %arrayidx.i79.i.3, align 4, !tbaa !95
  %cmp16.not.i.3 = icmp eq i32 %22, %23
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i78.i.4 = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.next.i.3
  %24 = load i32, ptr %arrayidx.i78.i.4, align 4, !tbaa !95
  %arrayidx.i79.i.4 = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.next.i.3
  %25 = load i32, ptr %arrayidx.i79.i.4, align 4, !tbaa !95
  %cmp16.not.i.4 = icmp eq i32 %24, %25
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !372

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %26 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %27 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %26, 0
  %cmp.not.i.not143147.i = icmp eq i64 %27, 0
  %cmp.not.i.not143.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not143147.i
  br i1 %cmp.not.i.not143.i, label %if.end.i.i, label %for.body48.i, !prof !42

lpad.i:                                           ; preds = %entry
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

ehcleanup59.thread.i:                             ; preds = %invoke.cont.i
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i114.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body.i:                                       ; preds = %vector.body, %for.cond.i.4
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.4, %for.cond.i.4 ], [ 0, %vector.body ]
  %arrayidx.i78.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i
  %30 = load i32, ptr %arrayidx.i78.i, align 4, !tbaa !95
  %arrayidx.i79.i = getelementptr inbounds i32, ptr %call4.i, i64 %indvars.iv.i
  %31 = load i32, ptr %arrayidx.i79.i, align 4, !tbaa !95
  %cmp16.not.i = icmp eq i32 %30, %31
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i32 [ %31, %for.body.i ], [ %19, %for.cond.i ], [ %21, %for.cond.i.1 ], [ %23, %for.cond.i.2 ], [ %25, %for.cond.i.3 ]
  %arrayidx.i78.i.le = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i81.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i82.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.lcssa
  %32 = load i16, ptr %arrayidx.i82.i, align 2, !tbaa !13
  %conv.i83.i = zext i16 %32 to i64
  %call.i84.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i83.i)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %33 = load i32, ptr %arrayidx.i78.i.le, align 4, !tbaa !95
  %conv.i90.i = zext i32 %33 to i64
  %call.i91.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, i64 noundef %conv.i90.i)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i94.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %conv.i97.i = zext i32 %.lcssa to i64
  %call.i98.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i91.i, i64 noundef %conv.i97.i)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i98.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %34 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

if.end.i.i:                                       ; preds = %invoke.cont52.i, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %35 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i102.i = icmp eq ptr %35, null
  br i1 %cmp.not.i102.i, label %_ZL28benchForTruncOrZextVecInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i103.i

delete.notnull.i.i103.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %35) #13
  br label %_ZL28benchForTruncOrZextVecInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body48.i:                                     ; preds = %for.cond44.preheader.i, %invoke.cont52.i
  %__begin1.sroa.0.0144.i = phi i64 [ %dec.i.i, %invoke.cont52.i ], [ %27, %for.cond44.preheader.i ]
  %37 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %37) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %38 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body33

vector.body33:                                    ; preds = %vector.body33, %for.body48.i
  %index34 = phi i64 [ 0, %for.body48.i ], [ %index.next37.1, %vector.body33 ]
  %39 = getelementptr inbounds i16, ptr %call.i, i64 %index34
  %wide.load35 = load <4 x i16>, ptr %39, align 2, !tbaa !13
  %40 = getelementptr inbounds i16, ptr %39, i64 4
  %wide.load36 = load <4 x i16>, ptr %40, align 2, !tbaa !13
  %41 = zext <4 x i16> %wide.load35 to <4 x i32>
  %42 = zext <4 x i16> %wide.load36 to <4 x i32>
  %43 = getelementptr inbounds i32, ptr %38, i64 %index34
  store <4 x i32> %41, ptr %43, align 4, !tbaa !95
  %44 = getelementptr inbounds i32, ptr %43, i64 4
  store <4 x i32> %42, ptr %44, align 4, !tbaa !95
  %index.next37 = or i64 %index34, 8
  %45 = getelementptr inbounds i16, ptr %call.i, i64 %index.next37
  %wide.load35.1 = load <4 x i16>, ptr %45, align 2, !tbaa !13
  %46 = getelementptr inbounds i16, ptr %45, i64 4
  %wide.load36.1 = load <4 x i16>, ptr %46, align 2, !tbaa !13
  %47 = zext <4 x i16> %wide.load35.1 to <4 x i32>
  %48 = zext <4 x i16> %wide.load36.1 to <4 x i32>
  %49 = getelementptr inbounds i32, ptr %38, i64 %index.next37
  store <4 x i32> %47, ptr %49, align 4, !tbaa !95
  %50 = getelementptr inbounds i32, ptr %49, i64 4
  store <4 x i32> %48, ptr %50, align 4, !tbaa !95
  %index.next37.1 = add nuw nsw i64 %index34, 16
  %51 = icmp eq i64 %index.next37.1, 10000
  br i1 %51, label %invoke.cont52.i, label %vector.body33, !llvm.loop !377

invoke.cont52.i:                                  ; preds = %vector.body33
  %dec.i.i = add i64 %__begin1.sroa.0.0144.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup59.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn133.i = phi { ptr, i32 } [ %34, %lpad17.i ], [ %36, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i113.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i113.i, label %ehcleanup61.i, label %delete.notnull.i.i114.i

delete.notnull.i.i114.i:                          ; preds = %ehcleanup59.i, %ehcleanup59.thread.i
  %.pn133.pn139.i = phi { ptr, i32 } [ %29, %ehcleanup59.thread.i ], [ %.pn133.i, %ehcleanup59.i ]
  %52 = phi ptr [ %call1.i, %ehcleanup59.thread.i ], [ %.pr.i, %ehcleanup59.i ]
  call void @_ZdaPv(ptr noundef nonnull %52) #13
  br label %ehcleanup61.i

ehcleanup61.i:                                    ; preds = %delete.notnull.i.i114.i, %ehcleanup59.i, %lpad.i
  %.pn133.pn.pn.i = phi { ptr, i32 } [ %28, %lpad.i ], [ %.pn133.i, %ehcleanup59.i ], [ %.pn133.pn139.i, %delete.notnull.i.i114.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn133.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i103.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i31.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  store i32 0, ptr %distrib.i32.i, align 4, !tbaa !92
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i33.i, align 4, !tbaa !94
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i34.i
  store i32 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 4, !tbaa !95
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %arrayidx.i = getelementptr inbounds i16, ptr %call.i, i64 9984
  %arrayidx.i.1 = getelementptr inbounds i16, ptr %call.i, i64 9985
  %arrayidx.i.2 = getelementptr inbounds i16, ptr %call.i, i64 9986
  %arrayidx.i.3 = getelementptr inbounds i16, ptr %call.i, i64 9987
  %arrayidx.i.4 = getelementptr inbounds i16, ptr %call.i, i64 9988
  %arrayidx.i.5 = getelementptr inbounds i16, ptr %call.i, i64 9989
  %arrayidx.i.6 = getelementptr inbounds i16, ptr %call.i, i64 9990
  %arrayidx.i.7 = getelementptr inbounds i16, ptr %call.i, i64 9991
  %arrayidx.i.8 = getelementptr inbounds i16, ptr %call.i, i64 9992
  %arrayidx.i.9 = getelementptr inbounds i16, ptr %call.i, i64 9993
  %arrayidx.i.10 = getelementptr inbounds i16, ptr %call.i, i64 9994
  %arrayidx.i.11 = getelementptr inbounds i16, ptr %call.i, i64 9995
  %arrayidx.i.12 = getelementptr inbounds i16, ptr %call.i, i64 9996
  %arrayidx.i.13 = getelementptr inbounds i16, ptr %call.i, i64 9997
  %arrayidx.i.14 = getelementptr inbounds i16, ptr %call.i, i64 9998
  %arrayidx.i.15 = getelementptr inbounds i16, ptr %call.i, i64 9999
  br label %for.body.i

if.end.i.i:                                       ; preds = %for.body.i1, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i1
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %for.body.i1 ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next, %vector.body ]
  %6 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <8 x i16>, ptr %6, align 2, !tbaa !13
  %7 = getelementptr inbounds i16, ptr %6, i64 8
  %wide.load5 = load <8 x i16>, ptr %7, align 2, !tbaa !13
  %8 = getelementptr inbounds i16, ptr %6, i64 16
  %wide.load6 = load <8 x i16>, ptr %8, align 2, !tbaa !13
  %9 = getelementptr inbounds i16, ptr %6, i64 24
  %wide.load7 = load <8 x i16>, ptr %9, align 2, !tbaa !13
  %10 = zext <8 x i16> %wide.load to <8 x i32>
  %11 = zext <8 x i16> %wide.load5 to <8 x i32>
  %12 = zext <8 x i16> %wide.load6 to <8 x i32>
  %13 = zext <8 x i16> %wide.load7 to <8 x i32>
  %14 = getelementptr inbounds i32, ptr %5, i64 %index
  %wide.load8 = load <8 x i32>, ptr %14, align 4, !tbaa !95
  %15 = getelementptr inbounds i32, ptr %14, i64 8
  %wide.load9 = load <8 x i32>, ptr %15, align 4, !tbaa !95
  %16 = getelementptr inbounds i32, ptr %14, i64 16
  %wide.load10 = load <8 x i32>, ptr %16, align 4, !tbaa !95
  %17 = getelementptr inbounds i32, ptr %14, i64 24
  %wide.load11 = load <8 x i32>, ptr %17, align 4, !tbaa !95
  %18 = add <8 x i32> %wide.load8, %10
  %19 = add <8 x i32> %wide.load9, %11
  %20 = add <8 x i32> %wide.load10, %12
  %21 = add <8 x i32> %wide.load11, %13
  store <8 x i32> %18, ptr %14, align 4, !tbaa !95
  store <8 x i32> %19, ptr %15, align 4, !tbaa !95
  store <8 x i32> %20, ptr %16, align 4, !tbaa !95
  store <8 x i32> %21, ptr %17, align 4, !tbaa !95
  %index.next = add nuw i64 %index, 32
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1, label %vector.body, !llvm.loop !378

for.body.i1:                                      ; preds = %vector.body
  %23 = load i16, ptr %arrayidx.i, align 2, !tbaa !13
  %conv.i = zext i16 %23 to i32
  %arrayidx2.i = getelementptr inbounds i32, ptr %5, i64 9984
  %24 = load i32, ptr %arrayidx2.i, align 4, !tbaa !95
  %add.i = add i32 %24, %conv.i
  store i32 %add.i, ptr %arrayidx2.i, align 4, !tbaa !95
  %25 = load i16, ptr %arrayidx.i.1, align 2, !tbaa !13
  %conv.i.1 = zext i16 %25 to i32
  %arrayidx2.i.1 = getelementptr inbounds i32, ptr %5, i64 9985
  %26 = load i32, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %add.i.1 = add i32 %26, %conv.i.1
  store i32 %add.i.1, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %27 = load i16, ptr %arrayidx.i.2, align 2, !tbaa !13
  %conv.i.2 = zext i16 %27 to i32
  %arrayidx2.i.2 = getelementptr inbounds i32, ptr %5, i64 9986
  %28 = load i32, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %add.i.2 = add i32 %28, %conv.i.2
  store i32 %add.i.2, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %29 = load i16, ptr %arrayidx.i.3, align 2, !tbaa !13
  %conv.i.3 = zext i16 %29 to i32
  %arrayidx2.i.3 = getelementptr inbounds i32, ptr %5, i64 9987
  %30 = load i32, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %add.i.3 = add i32 %30, %conv.i.3
  store i32 %add.i.3, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %31 = load i16, ptr %arrayidx.i.4, align 2, !tbaa !13
  %conv.i.4 = zext i16 %31 to i32
  %arrayidx2.i.4 = getelementptr inbounds i32, ptr %5, i64 9988
  %32 = load i32, ptr %arrayidx2.i.4, align 4, !tbaa !95
  %add.i.4 = add i32 %32, %conv.i.4
  store i32 %add.i.4, ptr %arrayidx2.i.4, align 4, !tbaa !95
  %33 = load i16, ptr %arrayidx.i.5, align 2, !tbaa !13
  %conv.i.5 = zext i16 %33 to i32
  %arrayidx2.i.5 = getelementptr inbounds i32, ptr %5, i64 9989
  %34 = load i32, ptr %arrayidx2.i.5, align 4, !tbaa !95
  %add.i.5 = add i32 %34, %conv.i.5
  store i32 %add.i.5, ptr %arrayidx2.i.5, align 4, !tbaa !95
  %35 = load i16, ptr %arrayidx.i.6, align 2, !tbaa !13
  %conv.i.6 = zext i16 %35 to i32
  %arrayidx2.i.6 = getelementptr inbounds i32, ptr %5, i64 9990
  %36 = load i32, ptr %arrayidx2.i.6, align 4, !tbaa !95
  %add.i.6 = add i32 %36, %conv.i.6
  store i32 %add.i.6, ptr %arrayidx2.i.6, align 4, !tbaa !95
  %37 = load i16, ptr %arrayidx.i.7, align 2, !tbaa !13
  %conv.i.7 = zext i16 %37 to i32
  %arrayidx2.i.7 = getelementptr inbounds i32, ptr %5, i64 9991
  %38 = load i32, ptr %arrayidx2.i.7, align 4, !tbaa !95
  %add.i.7 = add i32 %38, %conv.i.7
  store i32 %add.i.7, ptr %arrayidx2.i.7, align 4, !tbaa !95
  %39 = load i16, ptr %arrayidx.i.8, align 2, !tbaa !13
  %conv.i.8 = zext i16 %39 to i32
  %arrayidx2.i.8 = getelementptr inbounds i32, ptr %5, i64 9992
  %40 = load i32, ptr %arrayidx2.i.8, align 4, !tbaa !95
  %add.i.8 = add i32 %40, %conv.i.8
  store i32 %add.i.8, ptr %arrayidx2.i.8, align 4, !tbaa !95
  %41 = load i16, ptr %arrayidx.i.9, align 2, !tbaa !13
  %conv.i.9 = zext i16 %41 to i32
  %arrayidx2.i.9 = getelementptr inbounds i32, ptr %5, i64 9993
  %42 = load i32, ptr %arrayidx2.i.9, align 4, !tbaa !95
  %add.i.9 = add i32 %42, %conv.i.9
  store i32 %add.i.9, ptr %arrayidx2.i.9, align 4, !tbaa !95
  %43 = load i16, ptr %arrayidx.i.10, align 2, !tbaa !13
  %conv.i.10 = zext i16 %43 to i32
  %arrayidx2.i.10 = getelementptr inbounds i32, ptr %5, i64 9994
  %44 = load i32, ptr %arrayidx2.i.10, align 4, !tbaa !95
  %add.i.10 = add i32 %44, %conv.i.10
  store i32 %add.i.10, ptr %arrayidx2.i.10, align 4, !tbaa !95
  %45 = load i16, ptr %arrayidx.i.11, align 2, !tbaa !13
  %conv.i.11 = zext i16 %45 to i32
  %arrayidx2.i.11 = getelementptr inbounds i32, ptr %5, i64 9995
  %46 = load i32, ptr %arrayidx2.i.11, align 4, !tbaa !95
  %add.i.11 = add i32 %46, %conv.i.11
  store i32 %add.i.11, ptr %arrayidx2.i.11, align 4, !tbaa !95
  %47 = load i16, ptr %arrayidx.i.12, align 2, !tbaa !13
  %conv.i.12 = zext i16 %47 to i32
  %arrayidx2.i.12 = getelementptr inbounds i32, ptr %5, i64 9996
  %48 = load i32, ptr %arrayidx2.i.12, align 4, !tbaa !95
  %add.i.12 = add i32 %48, %conv.i.12
  store i32 %add.i.12, ptr %arrayidx2.i.12, align 4, !tbaa !95
  %49 = load i16, ptr %arrayidx.i.13, align 2, !tbaa !13
  %conv.i.13 = zext i16 %49 to i32
  %arrayidx2.i.13 = getelementptr inbounds i32, ptr %5, i64 9997
  %50 = load i32, ptr %arrayidx2.i.13, align 4, !tbaa !95
  %add.i.13 = add i32 %50, %conv.i.13
  store i32 %add.i.13, ptr %arrayidx2.i.13, align 4, !tbaa !95
  %51 = load i16, ptr %arrayidx.i.14, align 2, !tbaa !13
  %conv.i.14 = zext i16 %51 to i32
  %arrayidx2.i.14 = getelementptr inbounds i32, ptr %5, i64 9998
  %52 = load i32, ptr %arrayidx2.i.14, align 4, !tbaa !95
  %add.i.14 = add i32 %52, %conv.i.14
  store i32 %add.i.14, ptr %arrayidx2.i.14, align 4, !tbaa !95
  %53 = load i16, ptr %arrayidx.i.15, align 2, !tbaa !13
  %conv.i.15 = zext i16 %53 to i32
  %arrayidx2.i.15 = getelementptr inbounds i32, ptr %5, i64 9999
  %54 = load i32, ptr %arrayidx2.i.15, align 4, !tbaa !95
  %add.i.15 = add i32 %54, %conv.i.15
  store i32 %add.i.15, ptr %arrayidx2.i.15, align 4, !tbaa !95
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %55 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %55, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %56 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %56) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %55, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i31.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  store i32 0, ptr %distrib.i32.i, align 4, !tbaa !92
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i33.i, align 4, !tbaa !94
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i34.i
  store i32 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 4, !tbaa !95
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %arrayidx.i = getelementptr inbounds i16, ptr %call.i, i64 9984
  %arrayidx.i.1 = getelementptr inbounds i16, ptr %call.i, i64 9985
  %arrayidx.i.2 = getelementptr inbounds i16, ptr %call.i, i64 9986
  %arrayidx.i.3 = getelementptr inbounds i16, ptr %call.i, i64 9987
  %arrayidx.i.4 = getelementptr inbounds i16, ptr %call.i, i64 9988
  %arrayidx.i.5 = getelementptr inbounds i16, ptr %call.i, i64 9989
  %arrayidx.i.6 = getelementptr inbounds i16, ptr %call.i, i64 9990
  %arrayidx.i.7 = getelementptr inbounds i16, ptr %call.i, i64 9991
  %arrayidx.i.8 = getelementptr inbounds i16, ptr %call.i, i64 9992
  %arrayidx.i.9 = getelementptr inbounds i16, ptr %call.i, i64 9993
  %arrayidx.i.10 = getelementptr inbounds i16, ptr %call.i, i64 9994
  %arrayidx.i.11 = getelementptr inbounds i16, ptr %call.i, i64 9995
  %arrayidx.i.12 = getelementptr inbounds i16, ptr %call.i, i64 9996
  %arrayidx.i.13 = getelementptr inbounds i16, ptr %call.i, i64 9997
  %arrayidx.i.14 = getelementptr inbounds i16, ptr %call.i, i64 9998
  %arrayidx.i.15 = getelementptr inbounds i16, ptr %call.i, i64 9999
  br label %for.body.i

if.end.i.i:                                       ; preds = %for.body.i1, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i1
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %for.body.i1 ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next, %vector.body ]
  %6 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <16 x i16>, ptr %6, align 2, !tbaa !13
  %7 = getelementptr inbounds i16, ptr %6, i64 16
  %wide.load5 = load <16 x i16>, ptr %7, align 2, !tbaa !13
  %8 = getelementptr inbounds i16, ptr %6, i64 32
  %wide.load6 = load <16 x i16>, ptr %8, align 2, !tbaa !13
  %9 = getelementptr inbounds i16, ptr %6, i64 48
  %wide.load7 = load <16 x i16>, ptr %9, align 2, !tbaa !13
  %10 = zext <16 x i16> %wide.load to <16 x i32>
  %11 = zext <16 x i16> %wide.load5 to <16 x i32>
  %12 = zext <16 x i16> %wide.load6 to <16 x i32>
  %13 = zext <16 x i16> %wide.load7 to <16 x i32>
  %14 = getelementptr inbounds i32, ptr %5, i64 %index
  %wide.load8 = load <16 x i32>, ptr %14, align 4, !tbaa !95
  %15 = getelementptr inbounds i32, ptr %14, i64 16
  %wide.load9 = load <16 x i32>, ptr %15, align 4, !tbaa !95
  %16 = getelementptr inbounds i32, ptr %14, i64 32
  %wide.load10 = load <16 x i32>, ptr %16, align 4, !tbaa !95
  %17 = getelementptr inbounds i32, ptr %14, i64 48
  %wide.load11 = load <16 x i32>, ptr %17, align 4, !tbaa !95
  %18 = add <16 x i32> %wide.load8, %10
  %19 = add <16 x i32> %wide.load9, %11
  %20 = add <16 x i32> %wide.load10, %12
  %21 = add <16 x i32> %wide.load11, %13
  store <16 x i32> %18, ptr %14, align 4, !tbaa !95
  store <16 x i32> %19, ptr %15, align 4, !tbaa !95
  store <16 x i32> %20, ptr %16, align 4, !tbaa !95
  store <16 x i32> %21, ptr %17, align 4, !tbaa !95
  %index.next = add nuw i64 %index, 64
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1, label %vector.body, !llvm.loop !379

for.body.i1:                                      ; preds = %vector.body
  %23 = load i16, ptr %arrayidx.i, align 2, !tbaa !13
  %conv.i = zext i16 %23 to i32
  %arrayidx2.i = getelementptr inbounds i32, ptr %5, i64 9984
  %24 = load i32, ptr %arrayidx2.i, align 4, !tbaa !95
  %add.i = add i32 %24, %conv.i
  store i32 %add.i, ptr %arrayidx2.i, align 4, !tbaa !95
  %25 = load i16, ptr %arrayidx.i.1, align 2, !tbaa !13
  %conv.i.1 = zext i16 %25 to i32
  %arrayidx2.i.1 = getelementptr inbounds i32, ptr %5, i64 9985
  %26 = load i32, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %add.i.1 = add i32 %26, %conv.i.1
  store i32 %add.i.1, ptr %arrayidx2.i.1, align 4, !tbaa !95
  %27 = load i16, ptr %arrayidx.i.2, align 2, !tbaa !13
  %conv.i.2 = zext i16 %27 to i32
  %arrayidx2.i.2 = getelementptr inbounds i32, ptr %5, i64 9986
  %28 = load i32, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %add.i.2 = add i32 %28, %conv.i.2
  store i32 %add.i.2, ptr %arrayidx2.i.2, align 4, !tbaa !95
  %29 = load i16, ptr %arrayidx.i.3, align 2, !tbaa !13
  %conv.i.3 = zext i16 %29 to i32
  %arrayidx2.i.3 = getelementptr inbounds i32, ptr %5, i64 9987
  %30 = load i32, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %add.i.3 = add i32 %30, %conv.i.3
  store i32 %add.i.3, ptr %arrayidx2.i.3, align 4, !tbaa !95
  %31 = load i16, ptr %arrayidx.i.4, align 2, !tbaa !13
  %conv.i.4 = zext i16 %31 to i32
  %arrayidx2.i.4 = getelementptr inbounds i32, ptr %5, i64 9988
  %32 = load i32, ptr %arrayidx2.i.4, align 4, !tbaa !95
  %add.i.4 = add i32 %32, %conv.i.4
  store i32 %add.i.4, ptr %arrayidx2.i.4, align 4, !tbaa !95
  %33 = load i16, ptr %arrayidx.i.5, align 2, !tbaa !13
  %conv.i.5 = zext i16 %33 to i32
  %arrayidx2.i.5 = getelementptr inbounds i32, ptr %5, i64 9989
  %34 = load i32, ptr %arrayidx2.i.5, align 4, !tbaa !95
  %add.i.5 = add i32 %34, %conv.i.5
  store i32 %add.i.5, ptr %arrayidx2.i.5, align 4, !tbaa !95
  %35 = load i16, ptr %arrayidx.i.6, align 2, !tbaa !13
  %conv.i.6 = zext i16 %35 to i32
  %arrayidx2.i.6 = getelementptr inbounds i32, ptr %5, i64 9990
  %36 = load i32, ptr %arrayidx2.i.6, align 4, !tbaa !95
  %add.i.6 = add i32 %36, %conv.i.6
  store i32 %add.i.6, ptr %arrayidx2.i.6, align 4, !tbaa !95
  %37 = load i16, ptr %arrayidx.i.7, align 2, !tbaa !13
  %conv.i.7 = zext i16 %37 to i32
  %arrayidx2.i.7 = getelementptr inbounds i32, ptr %5, i64 9991
  %38 = load i32, ptr %arrayidx2.i.7, align 4, !tbaa !95
  %add.i.7 = add i32 %38, %conv.i.7
  store i32 %add.i.7, ptr %arrayidx2.i.7, align 4, !tbaa !95
  %39 = load i16, ptr %arrayidx.i.8, align 2, !tbaa !13
  %conv.i.8 = zext i16 %39 to i32
  %arrayidx2.i.8 = getelementptr inbounds i32, ptr %5, i64 9992
  %40 = load i32, ptr %arrayidx2.i.8, align 4, !tbaa !95
  %add.i.8 = add i32 %40, %conv.i.8
  store i32 %add.i.8, ptr %arrayidx2.i.8, align 4, !tbaa !95
  %41 = load i16, ptr %arrayidx.i.9, align 2, !tbaa !13
  %conv.i.9 = zext i16 %41 to i32
  %arrayidx2.i.9 = getelementptr inbounds i32, ptr %5, i64 9993
  %42 = load i32, ptr %arrayidx2.i.9, align 4, !tbaa !95
  %add.i.9 = add i32 %42, %conv.i.9
  store i32 %add.i.9, ptr %arrayidx2.i.9, align 4, !tbaa !95
  %43 = load i16, ptr %arrayidx.i.10, align 2, !tbaa !13
  %conv.i.10 = zext i16 %43 to i32
  %arrayidx2.i.10 = getelementptr inbounds i32, ptr %5, i64 9994
  %44 = load i32, ptr %arrayidx2.i.10, align 4, !tbaa !95
  %add.i.10 = add i32 %44, %conv.i.10
  store i32 %add.i.10, ptr %arrayidx2.i.10, align 4, !tbaa !95
  %45 = load i16, ptr %arrayidx.i.11, align 2, !tbaa !13
  %conv.i.11 = zext i16 %45 to i32
  %arrayidx2.i.11 = getelementptr inbounds i32, ptr %5, i64 9995
  %46 = load i32, ptr %arrayidx2.i.11, align 4, !tbaa !95
  %add.i.11 = add i32 %46, %conv.i.11
  store i32 %add.i.11, ptr %arrayidx2.i.11, align 4, !tbaa !95
  %47 = load i16, ptr %arrayidx.i.12, align 2, !tbaa !13
  %conv.i.12 = zext i16 %47 to i32
  %arrayidx2.i.12 = getelementptr inbounds i32, ptr %5, i64 9996
  %48 = load i32, ptr %arrayidx2.i.12, align 4, !tbaa !95
  %add.i.12 = add i32 %48, %conv.i.12
  store i32 %add.i.12, ptr %arrayidx2.i.12, align 4, !tbaa !95
  %49 = load i16, ptr %arrayidx.i.13, align 2, !tbaa !13
  %conv.i.13 = zext i16 %49 to i32
  %arrayidx2.i.13 = getelementptr inbounds i32, ptr %5, i64 9997
  %50 = load i32, ptr %arrayidx2.i.13, align 4, !tbaa !95
  %add.i.13 = add i32 %50, %conv.i.13
  store i32 %add.i.13, ptr %arrayidx2.i.13, align 4, !tbaa !95
  %51 = load i16, ptr %arrayidx.i.14, align 2, !tbaa !13
  %conv.i.14 = zext i16 %51 to i32
  %arrayidx2.i.14 = getelementptr inbounds i32, ptr %5, i64 9998
  %52 = load i32, ptr %arrayidx2.i.14, align 4, !tbaa !95
  %add.i.14 = add i32 %52, %conv.i.14
  store i32 %add.i.14, ptr %arrayidx2.i.14, align 4, !tbaa !95
  %53 = load i16, ptr %arrayidx.i.15, align 2, !tbaa !13
  %conv.i.15 = zext i16 %53 to i32
  %arrayidx2.i.15 = getelementptr inbounds i32, ptr %5, i64 9999
  %54 = load i32, ptr %arrayidx2.i.15, align 4, !tbaa !95
  %add.i.15 = add i32 %54, %conv.i.15
  store i32 %add.i.15, ptr %arrayidx2.i.15, align 4, !tbaa !95
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %55 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %55, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %56 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %56) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %55, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint32_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.44", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i31.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  store i32 0, ptr %distrib.i32.i, align 4, !tbaa !92
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i33.i, align 4, !tbaa !94
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i32, ptr %call1.i, i64 %indvars.iv.i34.i
  store i32 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 4, !tbaa !95
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i, !prof !42

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.cond.preheader.i, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %1, %for.cond.preheader.i ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.44") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next.1, %vector.body ]
  %6 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <4 x i16>, ptr %6, align 2, !tbaa !13
  %7 = getelementptr inbounds i16, ptr %6, i64 4
  %wide.load5 = load <4 x i16>, ptr %7, align 2, !tbaa !13
  %8 = zext <4 x i16> %wide.load to <4 x i32>
  %9 = zext <4 x i16> %wide.load5 to <4 x i32>
  %10 = getelementptr inbounds i32, ptr %5, i64 %index
  %wide.load6 = load <4 x i32>, ptr %10, align 4, !tbaa !95
  %11 = getelementptr inbounds i32, ptr %10, i64 4
  %wide.load7 = load <4 x i32>, ptr %11, align 4, !tbaa !95
  %12 = add <4 x i32> %wide.load6, %8
  %13 = add <4 x i32> %wide.load7, %9
  store <4 x i32> %12, ptr %10, align 4, !tbaa !95
  store <4 x i32> %13, ptr %11, align 4, !tbaa !95
  %index.next = or i64 %index, 8
  %14 = getelementptr inbounds i16, ptr %call.i, i64 %index.next
  %wide.load.1 = load <4 x i16>, ptr %14, align 2, !tbaa !13
  %15 = getelementptr inbounds i16, ptr %14, i64 4
  %wide.load5.1 = load <4 x i16>, ptr %15, align 2, !tbaa !13
  %16 = zext <4 x i16> %wide.load.1 to <4 x i32>
  %17 = zext <4 x i16> %wide.load5.1 to <4 x i32>
  %18 = getelementptr inbounds i32, ptr %5, i64 %index.next
  %wide.load6.1 = load <4 x i32>, ptr %18, align 4, !tbaa !95
  %19 = getelementptr inbounds i32, ptr %18, i64 4
  %wide.load7.1 = load <4 x i32>, ptr %19, align 4, !tbaa !95
  %20 = add <4 x i32> %wide.load6.1, %16
  %21 = add <4 x i32> %wide.load7.1, %17
  store <4 x i32> %20, ptr %18, align 4, !tbaa !95
  store <4 x i32> %21, ptr %19, align 4, !tbaa !95
  %index.next.1 = add nuw nsw i64 %index, 16
  %22 = icmp eq i64 %index.next.1, 10000
  br i1 %22, label %invoke.cont19.i, label %vector.body, !llvm.loop !380

invoke.cont19.i:                                  ; preds = %vector.body
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %23 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %23, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %24 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %24) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %23, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopItjEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_jSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont3.i unwind label %ehcleanup59.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i73.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i73.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  br label %for.body.i77.i

for.body.i77.i:                                   ; preds = %for.body.i77.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i74.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i75.i.4, %for.body.i77.i ]
  %arrayidx.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i74.i
  %0 = load i16, ptr %arrayidx.i.i, align 2, !tbaa !13
  %conv.i.i = zext i16 %0 to i64
  %arrayidx2.i.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i74.i
  store i64 %conv.i.i, ptr %arrayidx2.i.i, align 8, !tbaa !147
  %indvars.iv.next.i75.i = add nuw nsw i64 %indvars.iv.i74.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i
  %1 = load i16, ptr %arrayidx.i.i.1, align 2, !tbaa !13
  %conv.i.i.1 = zext i16 %1 to i64
  %arrayidx2.i.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i
  store i64 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 8, !tbaa !147
  %indvars.iv.next.i75.i.1 = add nuw nsw i64 %indvars.iv.i74.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.1
  %2 = load i16, ptr %arrayidx.i.i.2, align 2, !tbaa !13
  %conv.i.i.2 = zext i16 %2 to i64
  %arrayidx2.i.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.1
  store i64 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 8, !tbaa !147
  %indvars.iv.next.i75.i.2 = add nuw nsw i64 %indvars.iv.i74.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.2
  %3 = load i16, ptr %arrayidx.i.i.3, align 2, !tbaa !13
  %conv.i.i.3 = zext i16 %3 to i64
  %arrayidx2.i.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.2
  store i64 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 8, !tbaa !147
  %indvars.iv.next.i75.i.3 = add nuw nsw i64 %indvars.iv.i74.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.3
  %4 = load i16, ptr %arrayidx.i.i.4, align 2, !tbaa !13
  %conv.i.i.4 = zext i16 %4 to i64
  %arrayidx2.i.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.3
  store i64 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 8, !tbaa !147
  %indvars.iv.next.i75.i.4 = add nuw nsw i64 %indvars.iv.i74.i, 5
  %exitcond.not.i76.i.4 = icmp eq i64 %indvars.iv.next.i75.i.4, 10000
  br i1 %exitcond.not.i76.i.4, label %vector.body, label %for.body.i77.i, !llvm.loop !381

vector.body:                                      ; preds = %for.body.i77.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i77.i ]
  %5 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <8 x i16>, ptr %5, align 2, !tbaa !13
  %6 = getelementptr inbounds i16, ptr %5, i64 8
  %wide.load27 = load <8 x i16>, ptr %6, align 2, !tbaa !13
  %7 = getelementptr inbounds i16, ptr %5, i64 16
  %wide.load28 = load <8 x i16>, ptr %7, align 2, !tbaa !13
  %8 = getelementptr inbounds i16, ptr %5, i64 24
  %wide.load29 = load <8 x i16>, ptr %8, align 2, !tbaa !13
  %9 = zext <8 x i16> %wide.load to <8 x i64>
  %10 = zext <8 x i16> %wide.load27 to <8 x i64>
  %11 = zext <8 x i16> %wide.load28 to <8 x i64>
  %12 = zext <8 x i16> %wide.load29 to <8 x i64>
  %13 = getelementptr inbounds i64, ptr %call1.i, i64 %index
  store <8 x i64> %9, ptr %13, align 8, !tbaa !147
  %14 = getelementptr inbounds i64, ptr %13, i64 8
  store <8 x i64> %10, ptr %14, align 8, !tbaa !147
  %15 = getelementptr inbounds i64, ptr %13, i64 16
  store <8 x i64> %11, ptr %15, align 8, !tbaa !147
  %16 = getelementptr inbounds i64, ptr %13, i64 24
  store <8 x i64> %12, ptr %16, align 8, !tbaa !147
  %index.next = add nuw i64 %index, 32
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !382

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i16, ptr %call.i, i64 9984
  %18 = load i16, ptr %arrayidx.i, align 2, !tbaa !13
  %conv.i = zext i16 %18 to i64
  %arrayidx2.i = getelementptr inbounds i64, ptr %call1.i, i64 9984
  store i64 %conv.i, ptr %arrayidx2.i, align 8, !tbaa !147
  %arrayidx.i.1 = getelementptr inbounds i16, ptr %call.i, i64 9985
  %19 = load i16, ptr %arrayidx.i.1, align 2, !tbaa !13
  %conv.i.1 = zext i16 %19 to i64
  %arrayidx2.i.1 = getelementptr inbounds i64, ptr %call1.i, i64 9985
  store i64 %conv.i.1, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %arrayidx.i.2 = getelementptr inbounds i16, ptr %call.i, i64 9986
  %20 = load i16, ptr %arrayidx.i.2, align 2, !tbaa !13
  %conv.i.2 = zext i16 %20 to i64
  %arrayidx2.i.2 = getelementptr inbounds i64, ptr %call1.i, i64 9986
  store i64 %conv.i.2, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %arrayidx.i.3 = getelementptr inbounds i16, ptr %call.i, i64 9987
  %21 = load i16, ptr %arrayidx.i.3, align 2, !tbaa !13
  %conv.i.3 = zext i16 %21 to i64
  %arrayidx2.i.3 = getelementptr inbounds i64, ptr %call1.i, i64 9987
  store i64 %conv.i.3, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %arrayidx.i.4 = getelementptr inbounds i16, ptr %call.i, i64 9988
  %22 = load i16, ptr %arrayidx.i.4, align 2, !tbaa !13
  %conv.i.4 = zext i16 %22 to i64
  %arrayidx2.i.4 = getelementptr inbounds i64, ptr %call1.i, i64 9988
  store i64 %conv.i.4, ptr %arrayidx2.i.4, align 8, !tbaa !147
  %arrayidx.i.5 = getelementptr inbounds i16, ptr %call.i, i64 9989
  %23 = load i16, ptr %arrayidx.i.5, align 2, !tbaa !13
  %conv.i.5 = zext i16 %23 to i64
  %arrayidx2.i.5 = getelementptr inbounds i64, ptr %call1.i, i64 9989
  store i64 %conv.i.5, ptr %arrayidx2.i.5, align 8, !tbaa !147
  %arrayidx.i.6 = getelementptr inbounds i16, ptr %call.i, i64 9990
  %24 = load i16, ptr %arrayidx.i.6, align 2, !tbaa !13
  %conv.i.6 = zext i16 %24 to i64
  %arrayidx2.i.6 = getelementptr inbounds i64, ptr %call1.i, i64 9990
  store i64 %conv.i.6, ptr %arrayidx2.i.6, align 8, !tbaa !147
  %arrayidx.i.7 = getelementptr inbounds i16, ptr %call.i, i64 9991
  %25 = load i16, ptr %arrayidx.i.7, align 2, !tbaa !13
  %conv.i.7 = zext i16 %25 to i64
  %arrayidx2.i.7 = getelementptr inbounds i64, ptr %call1.i, i64 9991
  store i64 %conv.i.7, ptr %arrayidx2.i.7, align 8, !tbaa !147
  %arrayidx.i.8 = getelementptr inbounds i16, ptr %call.i, i64 9992
  %26 = load i16, ptr %arrayidx.i.8, align 2, !tbaa !13
  %conv.i.8 = zext i16 %26 to i64
  %arrayidx2.i.8 = getelementptr inbounds i64, ptr %call1.i, i64 9992
  store i64 %conv.i.8, ptr %arrayidx2.i.8, align 8, !tbaa !147
  %arrayidx.i.9 = getelementptr inbounds i16, ptr %call.i, i64 9993
  %27 = load i16, ptr %arrayidx.i.9, align 2, !tbaa !13
  %conv.i.9 = zext i16 %27 to i64
  %arrayidx2.i.9 = getelementptr inbounds i64, ptr %call1.i, i64 9993
  store i64 %conv.i.9, ptr %arrayidx2.i.9, align 8, !tbaa !147
  %arrayidx.i.10 = getelementptr inbounds i16, ptr %call.i, i64 9994
  %28 = load i16, ptr %arrayidx.i.10, align 2, !tbaa !13
  %conv.i.10 = zext i16 %28 to i64
  %arrayidx2.i.10 = getelementptr inbounds i64, ptr %call1.i, i64 9994
  store i64 %conv.i.10, ptr %arrayidx2.i.10, align 8, !tbaa !147
  %arrayidx.i.11 = getelementptr inbounds i16, ptr %call.i, i64 9995
  %29 = load i16, ptr %arrayidx.i.11, align 2, !tbaa !13
  %conv.i.11 = zext i16 %29 to i64
  %arrayidx2.i.11 = getelementptr inbounds i64, ptr %call1.i, i64 9995
  store i64 %conv.i.11, ptr %arrayidx2.i.11, align 8, !tbaa !147
  %arrayidx.i.12 = getelementptr inbounds i16, ptr %call.i, i64 9996
  %30 = load i16, ptr %arrayidx.i.12, align 2, !tbaa !13
  %conv.i.12 = zext i16 %30 to i64
  %arrayidx2.i.12 = getelementptr inbounds i64, ptr %call1.i, i64 9996
  store i64 %conv.i.12, ptr %arrayidx2.i.12, align 8, !tbaa !147
  %arrayidx.i.13 = getelementptr inbounds i16, ptr %call.i, i64 9997
  %31 = load i16, ptr %arrayidx.i.13, align 2, !tbaa !13
  %conv.i.13 = zext i16 %31 to i64
  %arrayidx2.i.13 = getelementptr inbounds i64, ptr %call1.i, i64 9997
  store i64 %conv.i.13, ptr %arrayidx2.i.13, align 8, !tbaa !147
  %arrayidx.i.14 = getelementptr inbounds i16, ptr %call.i, i64 9998
  %32 = load i16, ptr %arrayidx.i.14, align 2, !tbaa !13
  %conv.i.14 = zext i16 %32 to i64
  %arrayidx2.i.14 = getelementptr inbounds i64, ptr %call1.i, i64 9998
  store i64 %conv.i.14, ptr %arrayidx2.i.14, align 8, !tbaa !147
  %arrayidx.i.15 = getelementptr inbounds i16, ptr %call.i, i64 9999
  %33 = load i16, ptr %arrayidx.i.15, align 2, !tbaa !13
  %conv.i.15 = zext i16 %33 to i64
  %arrayidx2.i.15 = getelementptr inbounds i64, ptr %call1.i, i64 9999
  store i64 %conv.i.15, ptr %arrayidx2.i.15, align 8, !tbaa !147
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i78.i.1 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i64, ptr %arrayidx.i78.i.1, align 8, !tbaa !147
  %arrayidx.i79.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i64, ptr %arrayidx.i79.i.1, align 8, !tbaa !147
  %cmp16.not.i.1 = icmp eq i64 %34, %35
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i78.i.2 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i64, ptr %arrayidx.i78.i.2, align 8, !tbaa !147
  %arrayidx.i79.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i64, ptr %arrayidx.i79.i.2, align 8, !tbaa !147
  %cmp16.not.i.2 = icmp eq i64 %36, %37
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i78.i.3 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i64, ptr %arrayidx.i78.i.3, align 8, !tbaa !147
  %arrayidx.i79.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i64, ptr %arrayidx.i79.i.3, align 8, !tbaa !147
  %cmp16.not.i.3 = icmp eq i64 %38, %39
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i78.i.4 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i64, ptr %arrayidx.i78.i.4, align 8, !tbaa !147
  %arrayidx.i79.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i64, ptr %arrayidx.i79.i.4, align 8, !tbaa !147
  %cmp16.not.i.4 = icmp eq i64 %40, %41
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !383

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not141145.i = icmp eq i64 %43, 0
  %cmp.not.i.not141.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not141145.i
  br i1 %cmp.not.i.not141.i, label %if.end.i.i, label %for.body48.i.preheader, !prof !42

for.body48.i.preheader:                           ; preds = %for.cond44.preheader.i
  %arrayidx.i8 = getelementptr inbounds i16, ptr %call.i, i64 9984
  %arrayidx.i8.1 = getelementptr inbounds i16, ptr %call.i, i64 9985
  %arrayidx.i8.2 = getelementptr inbounds i16, ptr %call.i, i64 9986
  %arrayidx.i8.3 = getelementptr inbounds i16, ptr %call.i, i64 9987
  %arrayidx.i8.4 = getelementptr inbounds i16, ptr %call.i, i64 9988
  %arrayidx.i8.5 = getelementptr inbounds i16, ptr %call.i, i64 9989
  %arrayidx.i8.6 = getelementptr inbounds i16, ptr %call.i, i64 9990
  %arrayidx.i8.7 = getelementptr inbounds i16, ptr %call.i, i64 9991
  %arrayidx.i8.8 = getelementptr inbounds i16, ptr %call.i, i64 9992
  %arrayidx.i8.9 = getelementptr inbounds i16, ptr %call.i, i64 9993
  %arrayidx.i8.10 = getelementptr inbounds i16, ptr %call.i, i64 9994
  %arrayidx.i8.11 = getelementptr inbounds i16, ptr %call.i, i64 9995
  %arrayidx.i8.12 = getelementptr inbounds i16, ptr %call.i, i64 9996
  %arrayidx.i8.13 = getelementptr inbounds i16, ptr %call.i, i64 9997
  %arrayidx.i8.14 = getelementptr inbounds i16, ptr %call.i, i64 9998
  %arrayidx.i8.15 = getelementptr inbounds i16, ptr %call.i, i64 9999
  br label %for.body48.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

ehcleanup59.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i112.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i78.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i64, ptr %arrayidx.i78.i, align 8, !tbaa !147
  %arrayidx.i79.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i64, ptr %arrayidx.i79.i, align 8, !tbaa !147
  %cmp16.not.i = icmp eq i64 %46, %47
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i64 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i78.i.le = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i81.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i82.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i16, ptr %arrayidx.i82.i, align 2, !tbaa !13
  %conv.i83.i = zext i16 %48 to i64
  %call.i84.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i83.i)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %49 = load i64, ptr %arrayidx.i78.i.le, align 8, !tbaa !147
  %call.i90.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, i64 noundef %49)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i93.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %call.i96.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, i64 noundef %.lcssa)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i96.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

if.end.i.i:                                       ; preds = %for.body.i13, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i100.i = icmp eq ptr %51, null
  br i1 %cmp.not.i100.i, label %_ZL28benchForTruncOrZextVecInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i101.i

delete.notnull.i.i101.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body48.i:                                     ; preds = %for.body48.i.preheader, %for.body.i13
  %__begin1.sroa.0.0142.i = phi i64 [ %dec.i.i, %for.body.i13 ], [ %43, %for.body48.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body35

vector.body35:                                    ; preds = %vector.body35, %for.body48.i
  %index36 = phi i64 [ 0, %for.body48.i ], [ %index.next41, %vector.body35 ]
  %55 = getelementptr inbounds i16, ptr %call.i, i64 %index36
  %wide.load37 = load <8 x i16>, ptr %55, align 2, !tbaa !13
  %56 = getelementptr inbounds i16, ptr %55, i64 8
  %wide.load38 = load <8 x i16>, ptr %56, align 2, !tbaa !13
  %57 = getelementptr inbounds i16, ptr %55, i64 16
  %wide.load39 = load <8 x i16>, ptr %57, align 2, !tbaa !13
  %58 = getelementptr inbounds i16, ptr %55, i64 24
  %wide.load40 = load <8 x i16>, ptr %58, align 2, !tbaa !13
  %59 = zext <8 x i16> %wide.load37 to <8 x i64>
  %60 = zext <8 x i16> %wide.load38 to <8 x i64>
  %61 = zext <8 x i16> %wide.load39 to <8 x i64>
  %62 = zext <8 x i16> %wide.load40 to <8 x i64>
  %63 = getelementptr inbounds i64, ptr %54, i64 %index36
  store <8 x i64> %59, ptr %63, align 8, !tbaa !147
  %64 = getelementptr inbounds i64, ptr %63, i64 8
  store <8 x i64> %60, ptr %64, align 8, !tbaa !147
  %65 = getelementptr inbounds i64, ptr %63, i64 16
  store <8 x i64> %61, ptr %65, align 8, !tbaa !147
  %66 = getelementptr inbounds i64, ptr %63, i64 24
  store <8 x i64> %62, ptr %66, align 8, !tbaa !147
  %index.next41 = add nuw i64 %index36, 32
  %67 = icmp eq i64 %index.next41, 9984
  br i1 %67, label %for.body.i13, label %vector.body35, !llvm.loop !384

for.body.i13:                                     ; preds = %vector.body35
  %68 = load i16, ptr %arrayidx.i8, align 2, !tbaa !13
  %conv.i9 = zext i16 %68 to i64
  %arrayidx2.i10 = getelementptr inbounds i64, ptr %54, i64 9984
  store i64 %conv.i9, ptr %arrayidx2.i10, align 8, !tbaa !147
  %69 = load i16, ptr %arrayidx.i8.1, align 2, !tbaa !13
  %conv.i9.1 = zext i16 %69 to i64
  %arrayidx2.i10.1 = getelementptr inbounds i64, ptr %54, i64 9985
  store i64 %conv.i9.1, ptr %arrayidx2.i10.1, align 8, !tbaa !147
  %70 = load i16, ptr %arrayidx.i8.2, align 2, !tbaa !13
  %conv.i9.2 = zext i16 %70 to i64
  %arrayidx2.i10.2 = getelementptr inbounds i64, ptr %54, i64 9986
  store i64 %conv.i9.2, ptr %arrayidx2.i10.2, align 8, !tbaa !147
  %71 = load i16, ptr %arrayidx.i8.3, align 2, !tbaa !13
  %conv.i9.3 = zext i16 %71 to i64
  %arrayidx2.i10.3 = getelementptr inbounds i64, ptr %54, i64 9987
  store i64 %conv.i9.3, ptr %arrayidx2.i10.3, align 8, !tbaa !147
  %72 = load i16, ptr %arrayidx.i8.4, align 2, !tbaa !13
  %conv.i9.4 = zext i16 %72 to i64
  %arrayidx2.i10.4 = getelementptr inbounds i64, ptr %54, i64 9988
  store i64 %conv.i9.4, ptr %arrayidx2.i10.4, align 8, !tbaa !147
  %73 = load i16, ptr %arrayidx.i8.5, align 2, !tbaa !13
  %conv.i9.5 = zext i16 %73 to i64
  %arrayidx2.i10.5 = getelementptr inbounds i64, ptr %54, i64 9989
  store i64 %conv.i9.5, ptr %arrayidx2.i10.5, align 8, !tbaa !147
  %74 = load i16, ptr %arrayidx.i8.6, align 2, !tbaa !13
  %conv.i9.6 = zext i16 %74 to i64
  %arrayidx2.i10.6 = getelementptr inbounds i64, ptr %54, i64 9990
  store i64 %conv.i9.6, ptr %arrayidx2.i10.6, align 8, !tbaa !147
  %75 = load i16, ptr %arrayidx.i8.7, align 2, !tbaa !13
  %conv.i9.7 = zext i16 %75 to i64
  %arrayidx2.i10.7 = getelementptr inbounds i64, ptr %54, i64 9991
  store i64 %conv.i9.7, ptr %arrayidx2.i10.7, align 8, !tbaa !147
  %76 = load i16, ptr %arrayidx.i8.8, align 2, !tbaa !13
  %conv.i9.8 = zext i16 %76 to i64
  %arrayidx2.i10.8 = getelementptr inbounds i64, ptr %54, i64 9992
  store i64 %conv.i9.8, ptr %arrayidx2.i10.8, align 8, !tbaa !147
  %77 = load i16, ptr %arrayidx.i8.9, align 2, !tbaa !13
  %conv.i9.9 = zext i16 %77 to i64
  %arrayidx2.i10.9 = getelementptr inbounds i64, ptr %54, i64 9993
  store i64 %conv.i9.9, ptr %arrayidx2.i10.9, align 8, !tbaa !147
  %78 = load i16, ptr %arrayidx.i8.10, align 2, !tbaa !13
  %conv.i9.10 = zext i16 %78 to i64
  %arrayidx2.i10.10 = getelementptr inbounds i64, ptr %54, i64 9994
  store i64 %conv.i9.10, ptr %arrayidx2.i10.10, align 8, !tbaa !147
  %79 = load i16, ptr %arrayidx.i8.11, align 2, !tbaa !13
  %conv.i9.11 = zext i16 %79 to i64
  %arrayidx2.i10.11 = getelementptr inbounds i64, ptr %54, i64 9995
  store i64 %conv.i9.11, ptr %arrayidx2.i10.11, align 8, !tbaa !147
  %80 = load i16, ptr %arrayidx.i8.12, align 2, !tbaa !13
  %conv.i9.12 = zext i16 %80 to i64
  %arrayidx2.i10.12 = getelementptr inbounds i64, ptr %54, i64 9996
  store i64 %conv.i9.12, ptr %arrayidx2.i10.12, align 8, !tbaa !147
  %81 = load i16, ptr %arrayidx.i8.13, align 2, !tbaa !13
  %conv.i9.13 = zext i16 %81 to i64
  %arrayidx2.i10.13 = getelementptr inbounds i64, ptr %54, i64 9997
  store i64 %conv.i9.13, ptr %arrayidx2.i10.13, align 8, !tbaa !147
  %82 = load i16, ptr %arrayidx.i8.14, align 2, !tbaa !13
  %conv.i9.14 = zext i16 %82 to i64
  %arrayidx2.i10.14 = getelementptr inbounds i64, ptr %54, i64 9998
  store i64 %conv.i9.14, ptr %arrayidx2.i10.14, align 8, !tbaa !147
  %83 = load i16, ptr %arrayidx.i8.15, align 2, !tbaa !13
  %conv.i9.15 = zext i16 %83 to i64
  %arrayidx2.i10.15 = getelementptr inbounds i64, ptr %54, i64 9999
  store i64 %conv.i9.15, ptr %arrayidx2.i10.15, align 8, !tbaa !147
  %dec.i.i = add i64 %__begin1.sroa.0.0142.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup59.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn131.i = phi { ptr, i32 } [ %50, %lpad17.i ], [ %52, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i111.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i111.i, label %ehcleanup61.i, label %delete.notnull.i.i112.i

delete.notnull.i.i112.i:                          ; preds = %ehcleanup59.i, %ehcleanup59.thread.i
  %.pn131.pn137.i = phi { ptr, i32 } [ %45, %ehcleanup59.thread.i ], [ %.pn131.i, %ehcleanup59.i ]
  %84 = phi ptr [ %call1.i, %ehcleanup59.thread.i ], [ %.pr.i, %ehcleanup59.i ]
  call void @_ZdaPv(ptr noundef nonnull %84) #13
  br label %ehcleanup61.i

ehcleanup61.i:                                    ; preds = %delete.notnull.i.i112.i, %ehcleanup59.i, %lpad.i
  %.pn131.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn131.i, %ehcleanup59.i ], [ %.pn131.pn137.i, %delete.notnull.i.i112.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn131.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i101.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont3.i unwind label %ehcleanup59.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i73.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i73.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  br label %for.body.i77.i

for.body.i77.i:                                   ; preds = %for.body.i77.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i74.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i75.i.4, %for.body.i77.i ]
  %arrayidx.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i74.i
  %0 = load i16, ptr %arrayidx.i.i, align 2, !tbaa !13
  %conv.i.i = zext i16 %0 to i64
  %arrayidx2.i.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i74.i
  store i64 %conv.i.i, ptr %arrayidx2.i.i, align 8, !tbaa !147
  %indvars.iv.next.i75.i = add nuw nsw i64 %indvars.iv.i74.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i
  %1 = load i16, ptr %arrayidx.i.i.1, align 2, !tbaa !13
  %conv.i.i.1 = zext i16 %1 to i64
  %arrayidx2.i.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i
  store i64 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 8, !tbaa !147
  %indvars.iv.next.i75.i.1 = add nuw nsw i64 %indvars.iv.i74.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.1
  %2 = load i16, ptr %arrayidx.i.i.2, align 2, !tbaa !13
  %conv.i.i.2 = zext i16 %2 to i64
  %arrayidx2.i.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.1
  store i64 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 8, !tbaa !147
  %indvars.iv.next.i75.i.2 = add nuw nsw i64 %indvars.iv.i74.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.2
  %3 = load i16, ptr %arrayidx.i.i.3, align 2, !tbaa !13
  %conv.i.i.3 = zext i16 %3 to i64
  %arrayidx2.i.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.2
  store i64 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 8, !tbaa !147
  %indvars.iv.next.i75.i.3 = add nuw nsw i64 %indvars.iv.i74.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.3
  %4 = load i16, ptr %arrayidx.i.i.4, align 2, !tbaa !13
  %conv.i.i.4 = zext i16 %4 to i64
  %arrayidx2.i.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.3
  store i64 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 8, !tbaa !147
  %indvars.iv.next.i75.i.4 = add nuw nsw i64 %indvars.iv.i74.i, 5
  %exitcond.not.i76.i.4 = icmp eq i64 %indvars.iv.next.i75.i.4, 10000
  br i1 %exitcond.not.i76.i.4, label %vector.body, label %for.body.i77.i, !llvm.loop !381

vector.body:                                      ; preds = %for.body.i77.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i77.i ]
  %5 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <16 x i16>, ptr %5, align 2, !tbaa !13
  %6 = getelementptr inbounds i16, ptr %5, i64 16
  %wide.load27 = load <16 x i16>, ptr %6, align 2, !tbaa !13
  %7 = getelementptr inbounds i16, ptr %5, i64 32
  %wide.load28 = load <16 x i16>, ptr %7, align 2, !tbaa !13
  %8 = getelementptr inbounds i16, ptr %5, i64 48
  %wide.load29 = load <16 x i16>, ptr %8, align 2, !tbaa !13
  %9 = zext <16 x i16> %wide.load to <16 x i64>
  %10 = zext <16 x i16> %wide.load27 to <16 x i64>
  %11 = zext <16 x i16> %wide.load28 to <16 x i64>
  %12 = zext <16 x i16> %wide.load29 to <16 x i64>
  %13 = getelementptr inbounds i64, ptr %call1.i, i64 %index
  store <16 x i64> %9, ptr %13, align 8, !tbaa !147
  %14 = getelementptr inbounds i64, ptr %13, i64 16
  store <16 x i64> %10, ptr %14, align 8, !tbaa !147
  %15 = getelementptr inbounds i64, ptr %13, i64 32
  store <16 x i64> %11, ptr %15, align 8, !tbaa !147
  %16 = getelementptr inbounds i64, ptr %13, i64 48
  store <16 x i64> %12, ptr %16, align 8, !tbaa !147
  %index.next = add nuw i64 %index, 64
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !385

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i16, ptr %call.i, i64 9984
  %18 = load i16, ptr %arrayidx.i, align 2, !tbaa !13
  %conv.i = zext i16 %18 to i64
  %arrayidx2.i = getelementptr inbounds i64, ptr %call1.i, i64 9984
  store i64 %conv.i, ptr %arrayidx2.i, align 8, !tbaa !147
  %arrayidx.i.1 = getelementptr inbounds i16, ptr %call.i, i64 9985
  %19 = load i16, ptr %arrayidx.i.1, align 2, !tbaa !13
  %conv.i.1 = zext i16 %19 to i64
  %arrayidx2.i.1 = getelementptr inbounds i64, ptr %call1.i, i64 9985
  store i64 %conv.i.1, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %arrayidx.i.2 = getelementptr inbounds i16, ptr %call.i, i64 9986
  %20 = load i16, ptr %arrayidx.i.2, align 2, !tbaa !13
  %conv.i.2 = zext i16 %20 to i64
  %arrayidx2.i.2 = getelementptr inbounds i64, ptr %call1.i, i64 9986
  store i64 %conv.i.2, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %arrayidx.i.3 = getelementptr inbounds i16, ptr %call.i, i64 9987
  %21 = load i16, ptr %arrayidx.i.3, align 2, !tbaa !13
  %conv.i.3 = zext i16 %21 to i64
  %arrayidx2.i.3 = getelementptr inbounds i64, ptr %call1.i, i64 9987
  store i64 %conv.i.3, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %arrayidx.i.4 = getelementptr inbounds i16, ptr %call.i, i64 9988
  %22 = load i16, ptr %arrayidx.i.4, align 2, !tbaa !13
  %conv.i.4 = zext i16 %22 to i64
  %arrayidx2.i.4 = getelementptr inbounds i64, ptr %call1.i, i64 9988
  store i64 %conv.i.4, ptr %arrayidx2.i.4, align 8, !tbaa !147
  %arrayidx.i.5 = getelementptr inbounds i16, ptr %call.i, i64 9989
  %23 = load i16, ptr %arrayidx.i.5, align 2, !tbaa !13
  %conv.i.5 = zext i16 %23 to i64
  %arrayidx2.i.5 = getelementptr inbounds i64, ptr %call1.i, i64 9989
  store i64 %conv.i.5, ptr %arrayidx2.i.5, align 8, !tbaa !147
  %arrayidx.i.6 = getelementptr inbounds i16, ptr %call.i, i64 9990
  %24 = load i16, ptr %arrayidx.i.6, align 2, !tbaa !13
  %conv.i.6 = zext i16 %24 to i64
  %arrayidx2.i.6 = getelementptr inbounds i64, ptr %call1.i, i64 9990
  store i64 %conv.i.6, ptr %arrayidx2.i.6, align 8, !tbaa !147
  %arrayidx.i.7 = getelementptr inbounds i16, ptr %call.i, i64 9991
  %25 = load i16, ptr %arrayidx.i.7, align 2, !tbaa !13
  %conv.i.7 = zext i16 %25 to i64
  %arrayidx2.i.7 = getelementptr inbounds i64, ptr %call1.i, i64 9991
  store i64 %conv.i.7, ptr %arrayidx2.i.7, align 8, !tbaa !147
  %arrayidx.i.8 = getelementptr inbounds i16, ptr %call.i, i64 9992
  %26 = load i16, ptr %arrayidx.i.8, align 2, !tbaa !13
  %conv.i.8 = zext i16 %26 to i64
  %arrayidx2.i.8 = getelementptr inbounds i64, ptr %call1.i, i64 9992
  store i64 %conv.i.8, ptr %arrayidx2.i.8, align 8, !tbaa !147
  %arrayidx.i.9 = getelementptr inbounds i16, ptr %call.i, i64 9993
  %27 = load i16, ptr %arrayidx.i.9, align 2, !tbaa !13
  %conv.i.9 = zext i16 %27 to i64
  %arrayidx2.i.9 = getelementptr inbounds i64, ptr %call1.i, i64 9993
  store i64 %conv.i.9, ptr %arrayidx2.i.9, align 8, !tbaa !147
  %arrayidx.i.10 = getelementptr inbounds i16, ptr %call.i, i64 9994
  %28 = load i16, ptr %arrayidx.i.10, align 2, !tbaa !13
  %conv.i.10 = zext i16 %28 to i64
  %arrayidx2.i.10 = getelementptr inbounds i64, ptr %call1.i, i64 9994
  store i64 %conv.i.10, ptr %arrayidx2.i.10, align 8, !tbaa !147
  %arrayidx.i.11 = getelementptr inbounds i16, ptr %call.i, i64 9995
  %29 = load i16, ptr %arrayidx.i.11, align 2, !tbaa !13
  %conv.i.11 = zext i16 %29 to i64
  %arrayidx2.i.11 = getelementptr inbounds i64, ptr %call1.i, i64 9995
  store i64 %conv.i.11, ptr %arrayidx2.i.11, align 8, !tbaa !147
  %arrayidx.i.12 = getelementptr inbounds i16, ptr %call.i, i64 9996
  %30 = load i16, ptr %arrayidx.i.12, align 2, !tbaa !13
  %conv.i.12 = zext i16 %30 to i64
  %arrayidx2.i.12 = getelementptr inbounds i64, ptr %call1.i, i64 9996
  store i64 %conv.i.12, ptr %arrayidx2.i.12, align 8, !tbaa !147
  %arrayidx.i.13 = getelementptr inbounds i16, ptr %call.i, i64 9997
  %31 = load i16, ptr %arrayidx.i.13, align 2, !tbaa !13
  %conv.i.13 = zext i16 %31 to i64
  %arrayidx2.i.13 = getelementptr inbounds i64, ptr %call1.i, i64 9997
  store i64 %conv.i.13, ptr %arrayidx2.i.13, align 8, !tbaa !147
  %arrayidx.i.14 = getelementptr inbounds i16, ptr %call.i, i64 9998
  %32 = load i16, ptr %arrayidx.i.14, align 2, !tbaa !13
  %conv.i.14 = zext i16 %32 to i64
  %arrayidx2.i.14 = getelementptr inbounds i64, ptr %call1.i, i64 9998
  store i64 %conv.i.14, ptr %arrayidx2.i.14, align 8, !tbaa !147
  %arrayidx.i.15 = getelementptr inbounds i16, ptr %call.i, i64 9999
  %33 = load i16, ptr %arrayidx.i.15, align 2, !tbaa !13
  %conv.i.15 = zext i16 %33 to i64
  %arrayidx2.i.15 = getelementptr inbounds i64, ptr %call1.i, i64 9999
  store i64 %conv.i.15, ptr %arrayidx2.i.15, align 8, !tbaa !147
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i78.i.1 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i64, ptr %arrayidx.i78.i.1, align 8, !tbaa !147
  %arrayidx.i79.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i64, ptr %arrayidx.i79.i.1, align 8, !tbaa !147
  %cmp16.not.i.1 = icmp eq i64 %34, %35
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i78.i.2 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i64, ptr %arrayidx.i78.i.2, align 8, !tbaa !147
  %arrayidx.i79.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i64, ptr %arrayidx.i79.i.2, align 8, !tbaa !147
  %cmp16.not.i.2 = icmp eq i64 %36, %37
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i78.i.3 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i64, ptr %arrayidx.i78.i.3, align 8, !tbaa !147
  %arrayidx.i79.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i64, ptr %arrayidx.i79.i.3, align 8, !tbaa !147
  %cmp16.not.i.3 = icmp eq i64 %38, %39
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i78.i.4 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i64, ptr %arrayidx.i78.i.4, align 8, !tbaa !147
  %arrayidx.i79.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i64, ptr %arrayidx.i79.i.4, align 8, !tbaa !147
  %cmp16.not.i.4 = icmp eq i64 %40, %41
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !383

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not141145.i = icmp eq i64 %43, 0
  %cmp.not.i.not141.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not141145.i
  br i1 %cmp.not.i.not141.i, label %if.end.i.i, label %for.body48.i.preheader, !prof !42

for.body48.i.preheader:                           ; preds = %for.cond44.preheader.i
  %arrayidx.i8 = getelementptr inbounds i16, ptr %call.i, i64 9984
  %arrayidx.i8.1 = getelementptr inbounds i16, ptr %call.i, i64 9985
  %arrayidx.i8.2 = getelementptr inbounds i16, ptr %call.i, i64 9986
  %arrayidx.i8.3 = getelementptr inbounds i16, ptr %call.i, i64 9987
  %arrayidx.i8.4 = getelementptr inbounds i16, ptr %call.i, i64 9988
  %arrayidx.i8.5 = getelementptr inbounds i16, ptr %call.i, i64 9989
  %arrayidx.i8.6 = getelementptr inbounds i16, ptr %call.i, i64 9990
  %arrayidx.i8.7 = getelementptr inbounds i16, ptr %call.i, i64 9991
  %arrayidx.i8.8 = getelementptr inbounds i16, ptr %call.i, i64 9992
  %arrayidx.i8.9 = getelementptr inbounds i16, ptr %call.i, i64 9993
  %arrayidx.i8.10 = getelementptr inbounds i16, ptr %call.i, i64 9994
  %arrayidx.i8.11 = getelementptr inbounds i16, ptr %call.i, i64 9995
  %arrayidx.i8.12 = getelementptr inbounds i16, ptr %call.i, i64 9996
  %arrayidx.i8.13 = getelementptr inbounds i16, ptr %call.i, i64 9997
  %arrayidx.i8.14 = getelementptr inbounds i16, ptr %call.i, i64 9998
  %arrayidx.i8.15 = getelementptr inbounds i16, ptr %call.i, i64 9999
  br label %for.body48.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

ehcleanup59.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i112.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i78.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i64, ptr %arrayidx.i78.i, align 8, !tbaa !147
  %arrayidx.i79.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i64, ptr %arrayidx.i79.i, align 8, !tbaa !147
  %cmp16.not.i = icmp eq i64 %46, %47
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i64 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i78.i.le = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i81.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i82.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i16, ptr %arrayidx.i82.i, align 2, !tbaa !13
  %conv.i83.i = zext i16 %48 to i64
  %call.i84.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i83.i)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %49 = load i64, ptr %arrayidx.i78.i.le, align 8, !tbaa !147
  %call.i90.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, i64 noundef %49)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i93.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %call.i96.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, i64 noundef %.lcssa)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i96.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

if.end.i.i:                                       ; preds = %for.body.i13, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i100.i = icmp eq ptr %51, null
  br i1 %cmp.not.i100.i, label %_ZL28benchForTruncOrZextVecInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i101.i

delete.notnull.i.i101.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body48.i:                                     ; preds = %for.body48.i.preheader, %for.body.i13
  %__begin1.sroa.0.0142.i = phi i64 [ %dec.i.i, %for.body.i13 ], [ %43, %for.body48.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body35

vector.body35:                                    ; preds = %vector.body35, %for.body48.i
  %index36 = phi i64 [ 0, %for.body48.i ], [ %index.next41, %vector.body35 ]
  %55 = getelementptr inbounds i16, ptr %call.i, i64 %index36
  %wide.load37 = load <16 x i16>, ptr %55, align 2, !tbaa !13
  %56 = getelementptr inbounds i16, ptr %55, i64 16
  %wide.load38 = load <16 x i16>, ptr %56, align 2, !tbaa !13
  %57 = getelementptr inbounds i16, ptr %55, i64 32
  %wide.load39 = load <16 x i16>, ptr %57, align 2, !tbaa !13
  %58 = getelementptr inbounds i16, ptr %55, i64 48
  %wide.load40 = load <16 x i16>, ptr %58, align 2, !tbaa !13
  %59 = zext <16 x i16> %wide.load37 to <16 x i64>
  %60 = zext <16 x i16> %wide.load38 to <16 x i64>
  %61 = zext <16 x i16> %wide.load39 to <16 x i64>
  %62 = zext <16 x i16> %wide.load40 to <16 x i64>
  %63 = getelementptr inbounds i64, ptr %54, i64 %index36
  store <16 x i64> %59, ptr %63, align 8, !tbaa !147
  %64 = getelementptr inbounds i64, ptr %63, i64 16
  store <16 x i64> %60, ptr %64, align 8, !tbaa !147
  %65 = getelementptr inbounds i64, ptr %63, i64 32
  store <16 x i64> %61, ptr %65, align 8, !tbaa !147
  %66 = getelementptr inbounds i64, ptr %63, i64 48
  store <16 x i64> %62, ptr %66, align 8, !tbaa !147
  %index.next41 = add nuw i64 %index36, 64
  %67 = icmp eq i64 %index.next41, 9984
  br i1 %67, label %for.body.i13, label %vector.body35, !llvm.loop !386

for.body.i13:                                     ; preds = %vector.body35
  %68 = load i16, ptr %arrayidx.i8, align 2, !tbaa !13
  %conv.i9 = zext i16 %68 to i64
  %arrayidx2.i10 = getelementptr inbounds i64, ptr %54, i64 9984
  store i64 %conv.i9, ptr %arrayidx2.i10, align 8, !tbaa !147
  %69 = load i16, ptr %arrayidx.i8.1, align 2, !tbaa !13
  %conv.i9.1 = zext i16 %69 to i64
  %arrayidx2.i10.1 = getelementptr inbounds i64, ptr %54, i64 9985
  store i64 %conv.i9.1, ptr %arrayidx2.i10.1, align 8, !tbaa !147
  %70 = load i16, ptr %arrayidx.i8.2, align 2, !tbaa !13
  %conv.i9.2 = zext i16 %70 to i64
  %arrayidx2.i10.2 = getelementptr inbounds i64, ptr %54, i64 9986
  store i64 %conv.i9.2, ptr %arrayidx2.i10.2, align 8, !tbaa !147
  %71 = load i16, ptr %arrayidx.i8.3, align 2, !tbaa !13
  %conv.i9.3 = zext i16 %71 to i64
  %arrayidx2.i10.3 = getelementptr inbounds i64, ptr %54, i64 9987
  store i64 %conv.i9.3, ptr %arrayidx2.i10.3, align 8, !tbaa !147
  %72 = load i16, ptr %arrayidx.i8.4, align 2, !tbaa !13
  %conv.i9.4 = zext i16 %72 to i64
  %arrayidx2.i10.4 = getelementptr inbounds i64, ptr %54, i64 9988
  store i64 %conv.i9.4, ptr %arrayidx2.i10.4, align 8, !tbaa !147
  %73 = load i16, ptr %arrayidx.i8.5, align 2, !tbaa !13
  %conv.i9.5 = zext i16 %73 to i64
  %arrayidx2.i10.5 = getelementptr inbounds i64, ptr %54, i64 9989
  store i64 %conv.i9.5, ptr %arrayidx2.i10.5, align 8, !tbaa !147
  %74 = load i16, ptr %arrayidx.i8.6, align 2, !tbaa !13
  %conv.i9.6 = zext i16 %74 to i64
  %arrayidx2.i10.6 = getelementptr inbounds i64, ptr %54, i64 9990
  store i64 %conv.i9.6, ptr %arrayidx2.i10.6, align 8, !tbaa !147
  %75 = load i16, ptr %arrayidx.i8.7, align 2, !tbaa !13
  %conv.i9.7 = zext i16 %75 to i64
  %arrayidx2.i10.7 = getelementptr inbounds i64, ptr %54, i64 9991
  store i64 %conv.i9.7, ptr %arrayidx2.i10.7, align 8, !tbaa !147
  %76 = load i16, ptr %arrayidx.i8.8, align 2, !tbaa !13
  %conv.i9.8 = zext i16 %76 to i64
  %arrayidx2.i10.8 = getelementptr inbounds i64, ptr %54, i64 9992
  store i64 %conv.i9.8, ptr %arrayidx2.i10.8, align 8, !tbaa !147
  %77 = load i16, ptr %arrayidx.i8.9, align 2, !tbaa !13
  %conv.i9.9 = zext i16 %77 to i64
  %arrayidx2.i10.9 = getelementptr inbounds i64, ptr %54, i64 9993
  store i64 %conv.i9.9, ptr %arrayidx2.i10.9, align 8, !tbaa !147
  %78 = load i16, ptr %arrayidx.i8.10, align 2, !tbaa !13
  %conv.i9.10 = zext i16 %78 to i64
  %arrayidx2.i10.10 = getelementptr inbounds i64, ptr %54, i64 9994
  store i64 %conv.i9.10, ptr %arrayidx2.i10.10, align 8, !tbaa !147
  %79 = load i16, ptr %arrayidx.i8.11, align 2, !tbaa !13
  %conv.i9.11 = zext i16 %79 to i64
  %arrayidx2.i10.11 = getelementptr inbounds i64, ptr %54, i64 9995
  store i64 %conv.i9.11, ptr %arrayidx2.i10.11, align 8, !tbaa !147
  %80 = load i16, ptr %arrayidx.i8.12, align 2, !tbaa !13
  %conv.i9.12 = zext i16 %80 to i64
  %arrayidx2.i10.12 = getelementptr inbounds i64, ptr %54, i64 9996
  store i64 %conv.i9.12, ptr %arrayidx2.i10.12, align 8, !tbaa !147
  %81 = load i16, ptr %arrayidx.i8.13, align 2, !tbaa !13
  %conv.i9.13 = zext i16 %81 to i64
  %arrayidx2.i10.13 = getelementptr inbounds i64, ptr %54, i64 9997
  store i64 %conv.i9.13, ptr %arrayidx2.i10.13, align 8, !tbaa !147
  %82 = load i16, ptr %arrayidx.i8.14, align 2, !tbaa !13
  %conv.i9.14 = zext i16 %82 to i64
  %arrayidx2.i10.14 = getelementptr inbounds i64, ptr %54, i64 9998
  store i64 %conv.i9.14, ptr %arrayidx2.i10.14, align 8, !tbaa !147
  %83 = load i16, ptr %arrayidx.i8.15, align 2, !tbaa !13
  %conv.i9.15 = zext i16 %83 to i64
  %arrayidx2.i10.15 = getelementptr inbounds i64, ptr %54, i64 9999
  store i64 %conv.i9.15, ptr %arrayidx2.i10.15, align 8, !tbaa !147
  %dec.i.i = add i64 %__begin1.sroa.0.0142.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup59.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn131.i = phi { ptr, i32 } [ %50, %lpad17.i ], [ %52, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i111.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i111.i, label %ehcleanup61.i, label %delete.notnull.i.i112.i

delete.notnull.i.i112.i:                          ; preds = %ehcleanup59.i, %ehcleanup59.thread.i
  %.pn131.pn137.i = phi { ptr, i32 } [ %45, %ehcleanup59.thread.i ], [ %.pn131.i, %ehcleanup59.i ]
  %84 = phi ptr [ %call1.i, %ehcleanup59.thread.i ], [ %.pr.i, %ehcleanup59.i ]
  call void @_ZdaPv(ptr noundef nonnull %84) #13
  br label %ehcleanup61.i

ehcleanup61.i:                                    ; preds = %delete.notnull.i.i112.i, %ehcleanup59.i, %lpad.i
  %.pn131.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn131.i, %ehcleanup59.i ], [ %.pn131.pn137.i, %delete.notnull.i.i112.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn131.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i101.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z54benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont3.i unwind label %ehcleanup59.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i73.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i73.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  br label %for.body.i77.i

for.body.i77.i:                                   ; preds = %for.body.i77.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i74.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i75.i.4, %for.body.i77.i ]
  %arrayidx.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i74.i
  %0 = load i16, ptr %arrayidx.i.i, align 2, !tbaa !13
  %conv.i.i = zext i16 %0 to i64
  %arrayidx2.i.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i74.i
  store i64 %conv.i.i, ptr %arrayidx2.i.i, align 8, !tbaa !147
  %indvars.iv.next.i75.i = add nuw nsw i64 %indvars.iv.i74.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i
  %1 = load i16, ptr %arrayidx.i.i.1, align 2, !tbaa !13
  %conv.i.i.1 = zext i16 %1 to i64
  %arrayidx2.i.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i
  store i64 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 8, !tbaa !147
  %indvars.iv.next.i75.i.1 = add nuw nsw i64 %indvars.iv.i74.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.1
  %2 = load i16, ptr %arrayidx.i.i.2, align 2, !tbaa !13
  %conv.i.i.2 = zext i16 %2 to i64
  %arrayidx2.i.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.1
  store i64 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 8, !tbaa !147
  %indvars.iv.next.i75.i.2 = add nuw nsw i64 %indvars.iv.i74.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.2
  %3 = load i16, ptr %arrayidx.i.i.3, align 2, !tbaa !13
  %conv.i.i.3 = zext i16 %3 to i64
  %arrayidx2.i.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.2
  store i64 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 8, !tbaa !147
  %indvars.iv.next.i75.i.3 = add nuw nsw i64 %indvars.iv.i74.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.next.i75.i.3
  %4 = load i16, ptr %arrayidx.i.i.4, align 2, !tbaa !13
  %conv.i.i.4 = zext i16 %4 to i64
  %arrayidx2.i.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.3
  store i64 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 8, !tbaa !147
  %indvars.iv.next.i75.i.4 = add nuw nsw i64 %indvars.iv.i74.i, 5
  %exitcond.not.i76.i.4 = icmp eq i64 %indvars.iv.next.i75.i.4, 10000
  br i1 %exitcond.not.i76.i.4, label %vector.body, label %for.body.i77.i, !llvm.loop !381

vector.body:                                      ; preds = %for.body.i77.i, %vector.body
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %for.body.i77.i ]
  %5 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <2 x i16>, ptr %5, align 2, !tbaa !13
  %6 = getelementptr inbounds i16, ptr %5, i64 2
  %wide.load27 = load <2 x i16>, ptr %6, align 2, !tbaa !13
  %7 = zext <2 x i16> %wide.load to <2 x i64>
  %8 = zext <2 x i16> %wide.load27 to <2 x i64>
  %9 = getelementptr inbounds i64, ptr %call1.i, i64 %index
  store <2 x i64> %7, ptr %9, align 8, !tbaa !147
  %10 = getelementptr inbounds i64, ptr %9, i64 2
  store <2 x i64> %8, ptr %10, align 8, !tbaa !147
  %index.next = or i64 %index, 4
  %11 = getelementptr inbounds i16, ptr %call.i, i64 %index.next
  %wide.load.1 = load <2 x i16>, ptr %11, align 2, !tbaa !13
  %12 = getelementptr inbounds i16, ptr %11, i64 2
  %wide.load27.1 = load <2 x i16>, ptr %12, align 2, !tbaa !13
  %13 = zext <2 x i16> %wide.load.1 to <2 x i64>
  %14 = zext <2 x i16> %wide.load27.1 to <2 x i64>
  %15 = getelementptr inbounds i64, ptr %call1.i, i64 %index.next
  store <2 x i64> %13, ptr %15, align 8, !tbaa !147
  %16 = getelementptr inbounds i64, ptr %15, i64 2
  store <2 x i64> %14, ptr %16, align 8, !tbaa !147
  %index.next.1 = add nuw nsw i64 %index, 8
  %17 = icmp eq i64 %index.next.1, 10000
  br i1 %17, label %for.body.i, label %vector.body, !llvm.loop !387

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i78.i.1 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i
  %18 = load i64, ptr %arrayidx.i78.i.1, align 8, !tbaa !147
  %arrayidx.i79.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i
  %19 = load i64, ptr %arrayidx.i79.i.1, align 8, !tbaa !147
  %cmp16.not.i.1 = icmp eq i64 %18, %19
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i78.i.2 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.1
  %20 = load i64, ptr %arrayidx.i78.i.2, align 8, !tbaa !147
  %arrayidx.i79.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.1
  %21 = load i64, ptr %arrayidx.i79.i.2, align 8, !tbaa !147
  %cmp16.not.i.2 = icmp eq i64 %20, %21
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i78.i.3 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.2
  %22 = load i64, ptr %arrayidx.i78.i.3, align 8, !tbaa !147
  %arrayidx.i79.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.2
  %23 = load i64, ptr %arrayidx.i79.i.3, align 8, !tbaa !147
  %cmp16.not.i.3 = icmp eq i64 %22, %23
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i78.i.4 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.3
  %24 = load i64, ptr %arrayidx.i78.i.4, align 8, !tbaa !147
  %arrayidx.i79.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.3
  %25 = load i64, ptr %arrayidx.i79.i.4, align 8, !tbaa !147
  %cmp16.not.i.4 = icmp eq i64 %24, %25
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !383

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %26 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %27 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %26, 0
  %cmp.not.i.not141145.i = icmp eq i64 %27, 0
  %cmp.not.i.not141.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not141145.i
  br i1 %cmp.not.i.not141.i, label %if.end.i.i, label %for.body48.i, !prof !42

lpad.i:                                           ; preds = %entry
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

ehcleanup59.thread.i:                             ; preds = %invoke.cont.i
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i112.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body.i:                                       ; preds = %vector.body, %for.cond.i.4
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.4, %for.cond.i.4 ], [ 0, %vector.body ]
  %arrayidx.i78.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i
  %30 = load i64, ptr %arrayidx.i78.i, align 8, !tbaa !147
  %arrayidx.i79.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i
  %31 = load i64, ptr %arrayidx.i79.i, align 8, !tbaa !147
  %cmp16.not.i = icmp eq i64 %30, %31
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i64 [ %31, %for.body.i ], [ %19, %for.cond.i ], [ %21, %for.cond.i.1 ], [ %23, %for.cond.i.2 ], [ %25, %for.cond.i.3 ]
  %arrayidx.i78.i.le = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i81.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i82.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.lcssa
  %32 = load i16, ptr %arrayidx.i82.i, align 2, !tbaa !13
  %conv.i83.i = zext i16 %32 to i64
  %call.i84.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i83.i)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %33 = load i64, ptr %arrayidx.i78.i.le, align 8, !tbaa !147
  %call.i90.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, i64 noundef %33)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i93.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %call.i96.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, i64 noundef %.lcssa)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i96.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %34 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

if.end.i.i:                                       ; preds = %invoke.cont52.i, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %35 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i100.i = icmp eq ptr %35, null
  br i1 %cmp.not.i100.i, label %_ZL28benchForTruncOrZextVecInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i101.i

delete.notnull.i.i101.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %35) #13
  br label %_ZL28benchForTruncOrZextVecInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body48.i:                                     ; preds = %for.cond44.preheader.i, %invoke.cont52.i
  %__begin1.sroa.0.0142.i = phi i64 [ %dec.i.i, %invoke.cont52.i ], [ %27, %for.cond44.preheader.i ]
  %37 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %37) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %38 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body33

vector.body33:                                    ; preds = %vector.body33, %for.body48.i
  %index34 = phi i64 [ 0, %for.body48.i ], [ %index.next37.1, %vector.body33 ]
  %39 = getelementptr inbounds i16, ptr %call.i, i64 %index34
  %wide.load35 = load <2 x i16>, ptr %39, align 2, !tbaa !13
  %40 = getelementptr inbounds i16, ptr %39, i64 2
  %wide.load36 = load <2 x i16>, ptr %40, align 2, !tbaa !13
  %41 = zext <2 x i16> %wide.load35 to <2 x i64>
  %42 = zext <2 x i16> %wide.load36 to <2 x i64>
  %43 = getelementptr inbounds i64, ptr %38, i64 %index34
  store <2 x i64> %41, ptr %43, align 8, !tbaa !147
  %44 = getelementptr inbounds i64, ptr %43, i64 2
  store <2 x i64> %42, ptr %44, align 8, !tbaa !147
  %index.next37 = or i64 %index34, 4
  %45 = getelementptr inbounds i16, ptr %call.i, i64 %index.next37
  %wide.load35.1 = load <2 x i16>, ptr %45, align 2, !tbaa !13
  %46 = getelementptr inbounds i16, ptr %45, i64 2
  %wide.load36.1 = load <2 x i16>, ptr %46, align 2, !tbaa !13
  %47 = zext <2 x i16> %wide.load35.1 to <2 x i64>
  %48 = zext <2 x i16> %wide.load36.1 to <2 x i64>
  %49 = getelementptr inbounds i64, ptr %38, i64 %index.next37
  store <2 x i64> %47, ptr %49, align 8, !tbaa !147
  %50 = getelementptr inbounds i64, ptr %49, i64 2
  store <2 x i64> %48, ptr %50, align 8, !tbaa !147
  %index.next37.1 = add nuw nsw i64 %index34, 8
  %51 = icmp eq i64 %index.next37.1, 10000
  br i1 %51, label %invoke.cont52.i, label %vector.body33, !llvm.loop !388

invoke.cont52.i:                                  ; preds = %vector.body33
  %dec.i.i = add i64 %__begin1.sroa.0.0142.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup59.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn131.i = phi { ptr, i32 } [ %34, %lpad17.i ], [ %36, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i111.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i111.i, label %ehcleanup61.i, label %delete.notnull.i.i112.i

delete.notnull.i.i112.i:                          ; preds = %ehcleanup59.i, %ehcleanup59.thread.i
  %.pn131.pn137.i = phi { ptr, i32 } [ %29, %ehcleanup59.thread.i ], [ %.pn131.i, %ehcleanup59.i ]
  %52 = phi ptr [ %call1.i, %ehcleanup59.thread.i ], [ %.pr.i, %ehcleanup59.i ]
  call void @_ZdaPv(ptr noundef nonnull %52) #13
  br label %ehcleanup61.i

ehcleanup61.i:                                    ; preds = %delete.notnull.i.i112.i, %ehcleanup59.i, %lpad.i
  %.pn131.pn.pn.i = phi { ptr, i32 } [ %28, %lpad.i ], [ %.pn131.i, %ehcleanup59.i ], [ %.pn131.pn137.i, %delete.notnull.i.i112.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn131.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i101.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i31.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  store i64 0, ptr %distrib.i32.i, align 8, !tbaa !144
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i33.i, align 8, !tbaa !146
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i34.i
  store i64 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 8, !tbaa !147
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %arrayidx.i = getelementptr inbounds i16, ptr %call.i, i64 9984
  %arrayidx.i.1 = getelementptr inbounds i16, ptr %call.i, i64 9985
  %arrayidx.i.2 = getelementptr inbounds i16, ptr %call.i, i64 9986
  %arrayidx.i.3 = getelementptr inbounds i16, ptr %call.i, i64 9987
  %arrayidx.i.4 = getelementptr inbounds i16, ptr %call.i, i64 9988
  %arrayidx.i.5 = getelementptr inbounds i16, ptr %call.i, i64 9989
  %arrayidx.i.6 = getelementptr inbounds i16, ptr %call.i, i64 9990
  %arrayidx.i.7 = getelementptr inbounds i16, ptr %call.i, i64 9991
  %arrayidx.i.8 = getelementptr inbounds i16, ptr %call.i, i64 9992
  %arrayidx.i.9 = getelementptr inbounds i16, ptr %call.i, i64 9993
  %arrayidx.i.10 = getelementptr inbounds i16, ptr %call.i, i64 9994
  %arrayidx.i.11 = getelementptr inbounds i16, ptr %call.i, i64 9995
  %arrayidx.i.12 = getelementptr inbounds i16, ptr %call.i, i64 9996
  %arrayidx.i.13 = getelementptr inbounds i16, ptr %call.i, i64 9997
  %arrayidx.i.14 = getelementptr inbounds i16, ptr %call.i, i64 9998
  %arrayidx.i.15 = getelementptr inbounds i16, ptr %call.i, i64 9999
  br label %for.body.i

if.end.i.i:                                       ; preds = %for.body.i1, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i1
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %for.body.i1 ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next, %vector.body ]
  %6 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <8 x i16>, ptr %6, align 2, !tbaa !13
  %7 = getelementptr inbounds i16, ptr %6, i64 8
  %wide.load5 = load <8 x i16>, ptr %7, align 2, !tbaa !13
  %8 = getelementptr inbounds i16, ptr %6, i64 16
  %wide.load6 = load <8 x i16>, ptr %8, align 2, !tbaa !13
  %9 = getelementptr inbounds i16, ptr %6, i64 24
  %wide.load7 = load <8 x i16>, ptr %9, align 2, !tbaa !13
  %10 = zext <8 x i16> %wide.load to <8 x i64>
  %11 = zext <8 x i16> %wide.load5 to <8 x i64>
  %12 = zext <8 x i16> %wide.load6 to <8 x i64>
  %13 = zext <8 x i16> %wide.load7 to <8 x i64>
  %14 = getelementptr inbounds i64, ptr %5, i64 %index
  %wide.load8 = load <8 x i64>, ptr %14, align 8, !tbaa !147
  %15 = getelementptr inbounds i64, ptr %14, i64 8
  %wide.load9 = load <8 x i64>, ptr %15, align 8, !tbaa !147
  %16 = getelementptr inbounds i64, ptr %14, i64 16
  %wide.load10 = load <8 x i64>, ptr %16, align 8, !tbaa !147
  %17 = getelementptr inbounds i64, ptr %14, i64 24
  %wide.load11 = load <8 x i64>, ptr %17, align 8, !tbaa !147
  %18 = add <8 x i64> %wide.load8, %10
  %19 = add <8 x i64> %wide.load9, %11
  %20 = add <8 x i64> %wide.load10, %12
  %21 = add <8 x i64> %wide.load11, %13
  store <8 x i64> %18, ptr %14, align 8, !tbaa !147
  store <8 x i64> %19, ptr %15, align 8, !tbaa !147
  store <8 x i64> %20, ptr %16, align 8, !tbaa !147
  store <8 x i64> %21, ptr %17, align 8, !tbaa !147
  %index.next = add nuw i64 %index, 32
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1, label %vector.body, !llvm.loop !389

for.body.i1:                                      ; preds = %vector.body
  %23 = load i16, ptr %arrayidx.i, align 2, !tbaa !13
  %conv.i = zext i16 %23 to i64
  %arrayidx2.i = getelementptr inbounds i64, ptr %5, i64 9984
  %24 = load i64, ptr %arrayidx2.i, align 8, !tbaa !147
  %add.i = add i64 %24, %conv.i
  store i64 %add.i, ptr %arrayidx2.i, align 8, !tbaa !147
  %25 = load i16, ptr %arrayidx.i.1, align 2, !tbaa !13
  %conv.i.1 = zext i16 %25 to i64
  %arrayidx2.i.1 = getelementptr inbounds i64, ptr %5, i64 9985
  %26 = load i64, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %add.i.1 = add i64 %26, %conv.i.1
  store i64 %add.i.1, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %27 = load i16, ptr %arrayidx.i.2, align 2, !tbaa !13
  %conv.i.2 = zext i16 %27 to i64
  %arrayidx2.i.2 = getelementptr inbounds i64, ptr %5, i64 9986
  %28 = load i64, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %add.i.2 = add i64 %28, %conv.i.2
  store i64 %add.i.2, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %29 = load i16, ptr %arrayidx.i.3, align 2, !tbaa !13
  %conv.i.3 = zext i16 %29 to i64
  %arrayidx2.i.3 = getelementptr inbounds i64, ptr %5, i64 9987
  %30 = load i64, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %add.i.3 = add i64 %30, %conv.i.3
  store i64 %add.i.3, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %31 = load i16, ptr %arrayidx.i.4, align 2, !tbaa !13
  %conv.i.4 = zext i16 %31 to i64
  %arrayidx2.i.4 = getelementptr inbounds i64, ptr %5, i64 9988
  %32 = load i64, ptr %arrayidx2.i.4, align 8, !tbaa !147
  %add.i.4 = add i64 %32, %conv.i.4
  store i64 %add.i.4, ptr %arrayidx2.i.4, align 8, !tbaa !147
  %33 = load i16, ptr %arrayidx.i.5, align 2, !tbaa !13
  %conv.i.5 = zext i16 %33 to i64
  %arrayidx2.i.5 = getelementptr inbounds i64, ptr %5, i64 9989
  %34 = load i64, ptr %arrayidx2.i.5, align 8, !tbaa !147
  %add.i.5 = add i64 %34, %conv.i.5
  store i64 %add.i.5, ptr %arrayidx2.i.5, align 8, !tbaa !147
  %35 = load i16, ptr %arrayidx.i.6, align 2, !tbaa !13
  %conv.i.6 = zext i16 %35 to i64
  %arrayidx2.i.6 = getelementptr inbounds i64, ptr %5, i64 9990
  %36 = load i64, ptr %arrayidx2.i.6, align 8, !tbaa !147
  %add.i.6 = add i64 %36, %conv.i.6
  store i64 %add.i.6, ptr %arrayidx2.i.6, align 8, !tbaa !147
  %37 = load i16, ptr %arrayidx.i.7, align 2, !tbaa !13
  %conv.i.7 = zext i16 %37 to i64
  %arrayidx2.i.7 = getelementptr inbounds i64, ptr %5, i64 9991
  %38 = load i64, ptr %arrayidx2.i.7, align 8, !tbaa !147
  %add.i.7 = add i64 %38, %conv.i.7
  store i64 %add.i.7, ptr %arrayidx2.i.7, align 8, !tbaa !147
  %39 = load i16, ptr %arrayidx.i.8, align 2, !tbaa !13
  %conv.i.8 = zext i16 %39 to i64
  %arrayidx2.i.8 = getelementptr inbounds i64, ptr %5, i64 9992
  %40 = load i64, ptr %arrayidx2.i.8, align 8, !tbaa !147
  %add.i.8 = add i64 %40, %conv.i.8
  store i64 %add.i.8, ptr %arrayidx2.i.8, align 8, !tbaa !147
  %41 = load i16, ptr %arrayidx.i.9, align 2, !tbaa !13
  %conv.i.9 = zext i16 %41 to i64
  %arrayidx2.i.9 = getelementptr inbounds i64, ptr %5, i64 9993
  %42 = load i64, ptr %arrayidx2.i.9, align 8, !tbaa !147
  %add.i.9 = add i64 %42, %conv.i.9
  store i64 %add.i.9, ptr %arrayidx2.i.9, align 8, !tbaa !147
  %43 = load i16, ptr %arrayidx.i.10, align 2, !tbaa !13
  %conv.i.10 = zext i16 %43 to i64
  %arrayidx2.i.10 = getelementptr inbounds i64, ptr %5, i64 9994
  %44 = load i64, ptr %arrayidx2.i.10, align 8, !tbaa !147
  %add.i.10 = add i64 %44, %conv.i.10
  store i64 %add.i.10, ptr %arrayidx2.i.10, align 8, !tbaa !147
  %45 = load i16, ptr %arrayidx.i.11, align 2, !tbaa !13
  %conv.i.11 = zext i16 %45 to i64
  %arrayidx2.i.11 = getelementptr inbounds i64, ptr %5, i64 9995
  %46 = load i64, ptr %arrayidx2.i.11, align 8, !tbaa !147
  %add.i.11 = add i64 %46, %conv.i.11
  store i64 %add.i.11, ptr %arrayidx2.i.11, align 8, !tbaa !147
  %47 = load i16, ptr %arrayidx.i.12, align 2, !tbaa !13
  %conv.i.12 = zext i16 %47 to i64
  %arrayidx2.i.12 = getelementptr inbounds i64, ptr %5, i64 9996
  %48 = load i64, ptr %arrayidx2.i.12, align 8, !tbaa !147
  %add.i.12 = add i64 %48, %conv.i.12
  store i64 %add.i.12, ptr %arrayidx2.i.12, align 8, !tbaa !147
  %49 = load i16, ptr %arrayidx.i.13, align 2, !tbaa !13
  %conv.i.13 = zext i16 %49 to i64
  %arrayidx2.i.13 = getelementptr inbounds i64, ptr %5, i64 9997
  %50 = load i64, ptr %arrayidx2.i.13, align 8, !tbaa !147
  %add.i.13 = add i64 %50, %conv.i.13
  store i64 %add.i.13, ptr %arrayidx2.i.13, align 8, !tbaa !147
  %51 = load i16, ptr %arrayidx.i.14, align 2, !tbaa !13
  %conv.i.14 = zext i16 %51 to i64
  %arrayidx2.i.14 = getelementptr inbounds i64, ptr %5, i64 9998
  %52 = load i64, ptr %arrayidx2.i.14, align 8, !tbaa !147
  %add.i.14 = add i64 %52, %conv.i.14
  store i64 %add.i.14, ptr %arrayidx2.i.14, align 8, !tbaa !147
  %53 = load i16, ptr %arrayidx.i.15, align 2, !tbaa !13
  %conv.i.15 = zext i16 %53 to i64
  %arrayidx2.i.15 = getelementptr inbounds i64, ptr %5, i64 9999
  %54 = load i64, ptr %arrayidx2.i.15, align 8, !tbaa !147
  %add.i.15 = add i64 %54, %conv.i.15
  store i64 %add.i.15, ptr %arrayidx2.i.15, align 8, !tbaa !147
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %55 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %55, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %56 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %56) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %55, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i31.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  store i64 0, ptr %distrib.i32.i, align 8, !tbaa !144
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i33.i, align 8, !tbaa !146
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i34.i
  store i64 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 8, !tbaa !147
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %arrayidx.i = getelementptr inbounds i16, ptr %call.i, i64 9984
  %arrayidx.i.1 = getelementptr inbounds i16, ptr %call.i, i64 9985
  %arrayidx.i.2 = getelementptr inbounds i16, ptr %call.i, i64 9986
  %arrayidx.i.3 = getelementptr inbounds i16, ptr %call.i, i64 9987
  %arrayidx.i.4 = getelementptr inbounds i16, ptr %call.i, i64 9988
  %arrayidx.i.5 = getelementptr inbounds i16, ptr %call.i, i64 9989
  %arrayidx.i.6 = getelementptr inbounds i16, ptr %call.i, i64 9990
  %arrayidx.i.7 = getelementptr inbounds i16, ptr %call.i, i64 9991
  %arrayidx.i.8 = getelementptr inbounds i16, ptr %call.i, i64 9992
  %arrayidx.i.9 = getelementptr inbounds i16, ptr %call.i, i64 9993
  %arrayidx.i.10 = getelementptr inbounds i16, ptr %call.i, i64 9994
  %arrayidx.i.11 = getelementptr inbounds i16, ptr %call.i, i64 9995
  %arrayidx.i.12 = getelementptr inbounds i16, ptr %call.i, i64 9996
  %arrayidx.i.13 = getelementptr inbounds i16, ptr %call.i, i64 9997
  %arrayidx.i.14 = getelementptr inbounds i16, ptr %call.i, i64 9998
  %arrayidx.i.15 = getelementptr inbounds i16, ptr %call.i, i64 9999
  br label %for.body.i

if.end.i.i:                                       ; preds = %for.body.i1, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i1
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %for.body.i1 ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next, %vector.body ]
  %6 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <16 x i16>, ptr %6, align 2, !tbaa !13
  %7 = getelementptr inbounds i16, ptr %6, i64 16
  %wide.load5 = load <16 x i16>, ptr %7, align 2, !tbaa !13
  %8 = getelementptr inbounds i16, ptr %6, i64 32
  %wide.load6 = load <16 x i16>, ptr %8, align 2, !tbaa !13
  %9 = getelementptr inbounds i16, ptr %6, i64 48
  %wide.load7 = load <16 x i16>, ptr %9, align 2, !tbaa !13
  %10 = zext <16 x i16> %wide.load to <16 x i64>
  %11 = zext <16 x i16> %wide.load5 to <16 x i64>
  %12 = zext <16 x i16> %wide.load6 to <16 x i64>
  %13 = zext <16 x i16> %wide.load7 to <16 x i64>
  %14 = getelementptr inbounds i64, ptr %5, i64 %index
  %wide.load8 = load <16 x i64>, ptr %14, align 8, !tbaa !147
  %15 = getelementptr inbounds i64, ptr %14, i64 16
  %wide.load9 = load <16 x i64>, ptr %15, align 8, !tbaa !147
  %16 = getelementptr inbounds i64, ptr %14, i64 32
  %wide.load10 = load <16 x i64>, ptr %16, align 8, !tbaa !147
  %17 = getelementptr inbounds i64, ptr %14, i64 48
  %wide.load11 = load <16 x i64>, ptr %17, align 8, !tbaa !147
  %18 = add <16 x i64> %wide.load8, %10
  %19 = add <16 x i64> %wide.load9, %11
  %20 = add <16 x i64> %wide.load10, %12
  %21 = add <16 x i64> %wide.load11, %13
  store <16 x i64> %18, ptr %14, align 8, !tbaa !147
  store <16 x i64> %19, ptr %15, align 8, !tbaa !147
  store <16 x i64> %20, ptr %16, align 8, !tbaa !147
  store <16 x i64> %21, ptr %17, align 8, !tbaa !147
  %index.next = add nuw i64 %index, 64
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1, label %vector.body, !llvm.loop !390

for.body.i1:                                      ; preds = %vector.body
  %23 = load i16, ptr %arrayidx.i, align 2, !tbaa !13
  %conv.i = zext i16 %23 to i64
  %arrayidx2.i = getelementptr inbounds i64, ptr %5, i64 9984
  %24 = load i64, ptr %arrayidx2.i, align 8, !tbaa !147
  %add.i = add i64 %24, %conv.i
  store i64 %add.i, ptr %arrayidx2.i, align 8, !tbaa !147
  %25 = load i16, ptr %arrayidx.i.1, align 2, !tbaa !13
  %conv.i.1 = zext i16 %25 to i64
  %arrayidx2.i.1 = getelementptr inbounds i64, ptr %5, i64 9985
  %26 = load i64, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %add.i.1 = add i64 %26, %conv.i.1
  store i64 %add.i.1, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %27 = load i16, ptr %arrayidx.i.2, align 2, !tbaa !13
  %conv.i.2 = zext i16 %27 to i64
  %arrayidx2.i.2 = getelementptr inbounds i64, ptr %5, i64 9986
  %28 = load i64, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %add.i.2 = add i64 %28, %conv.i.2
  store i64 %add.i.2, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %29 = load i16, ptr %arrayidx.i.3, align 2, !tbaa !13
  %conv.i.3 = zext i16 %29 to i64
  %arrayidx2.i.3 = getelementptr inbounds i64, ptr %5, i64 9987
  %30 = load i64, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %add.i.3 = add i64 %30, %conv.i.3
  store i64 %add.i.3, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %31 = load i16, ptr %arrayidx.i.4, align 2, !tbaa !13
  %conv.i.4 = zext i16 %31 to i64
  %arrayidx2.i.4 = getelementptr inbounds i64, ptr %5, i64 9988
  %32 = load i64, ptr %arrayidx2.i.4, align 8, !tbaa !147
  %add.i.4 = add i64 %32, %conv.i.4
  store i64 %add.i.4, ptr %arrayidx2.i.4, align 8, !tbaa !147
  %33 = load i16, ptr %arrayidx.i.5, align 2, !tbaa !13
  %conv.i.5 = zext i16 %33 to i64
  %arrayidx2.i.5 = getelementptr inbounds i64, ptr %5, i64 9989
  %34 = load i64, ptr %arrayidx2.i.5, align 8, !tbaa !147
  %add.i.5 = add i64 %34, %conv.i.5
  store i64 %add.i.5, ptr %arrayidx2.i.5, align 8, !tbaa !147
  %35 = load i16, ptr %arrayidx.i.6, align 2, !tbaa !13
  %conv.i.6 = zext i16 %35 to i64
  %arrayidx2.i.6 = getelementptr inbounds i64, ptr %5, i64 9990
  %36 = load i64, ptr %arrayidx2.i.6, align 8, !tbaa !147
  %add.i.6 = add i64 %36, %conv.i.6
  store i64 %add.i.6, ptr %arrayidx2.i.6, align 8, !tbaa !147
  %37 = load i16, ptr %arrayidx.i.7, align 2, !tbaa !13
  %conv.i.7 = zext i16 %37 to i64
  %arrayidx2.i.7 = getelementptr inbounds i64, ptr %5, i64 9991
  %38 = load i64, ptr %arrayidx2.i.7, align 8, !tbaa !147
  %add.i.7 = add i64 %38, %conv.i.7
  store i64 %add.i.7, ptr %arrayidx2.i.7, align 8, !tbaa !147
  %39 = load i16, ptr %arrayidx.i.8, align 2, !tbaa !13
  %conv.i.8 = zext i16 %39 to i64
  %arrayidx2.i.8 = getelementptr inbounds i64, ptr %5, i64 9992
  %40 = load i64, ptr %arrayidx2.i.8, align 8, !tbaa !147
  %add.i.8 = add i64 %40, %conv.i.8
  store i64 %add.i.8, ptr %arrayidx2.i.8, align 8, !tbaa !147
  %41 = load i16, ptr %arrayidx.i.9, align 2, !tbaa !13
  %conv.i.9 = zext i16 %41 to i64
  %arrayidx2.i.9 = getelementptr inbounds i64, ptr %5, i64 9993
  %42 = load i64, ptr %arrayidx2.i.9, align 8, !tbaa !147
  %add.i.9 = add i64 %42, %conv.i.9
  store i64 %add.i.9, ptr %arrayidx2.i.9, align 8, !tbaa !147
  %43 = load i16, ptr %arrayidx.i.10, align 2, !tbaa !13
  %conv.i.10 = zext i16 %43 to i64
  %arrayidx2.i.10 = getelementptr inbounds i64, ptr %5, i64 9994
  %44 = load i64, ptr %arrayidx2.i.10, align 8, !tbaa !147
  %add.i.10 = add i64 %44, %conv.i.10
  store i64 %add.i.10, ptr %arrayidx2.i.10, align 8, !tbaa !147
  %45 = load i16, ptr %arrayidx.i.11, align 2, !tbaa !13
  %conv.i.11 = zext i16 %45 to i64
  %arrayidx2.i.11 = getelementptr inbounds i64, ptr %5, i64 9995
  %46 = load i64, ptr %arrayidx2.i.11, align 8, !tbaa !147
  %add.i.11 = add i64 %46, %conv.i.11
  store i64 %add.i.11, ptr %arrayidx2.i.11, align 8, !tbaa !147
  %47 = load i16, ptr %arrayidx.i.12, align 2, !tbaa !13
  %conv.i.12 = zext i16 %47 to i64
  %arrayidx2.i.12 = getelementptr inbounds i64, ptr %5, i64 9996
  %48 = load i64, ptr %arrayidx2.i.12, align 8, !tbaa !147
  %add.i.12 = add i64 %48, %conv.i.12
  store i64 %add.i.12, ptr %arrayidx2.i.12, align 8, !tbaa !147
  %49 = load i16, ptr %arrayidx.i.13, align 2, !tbaa !13
  %conv.i.13 = zext i16 %49 to i64
  %arrayidx2.i.13 = getelementptr inbounds i64, ptr %5, i64 9997
  %50 = load i64, ptr %arrayidx2.i.13, align 8, !tbaa !147
  %add.i.13 = add i64 %50, %conv.i.13
  store i64 %add.i.13, ptr %arrayidx2.i.13, align 8, !tbaa !147
  %51 = load i16, ptr %arrayidx.i.14, align 2, !tbaa !13
  %conv.i.14 = zext i16 %51 to i64
  %arrayidx2.i.14 = getelementptr inbounds i64, ptr %5, i64 9998
  %52 = load i64, ptr %arrayidx2.i.14, align 8, !tbaa !147
  %add.i.14 = add i64 %52, %conv.i.14
  store i64 %add.i.14, ptr %arrayidx2.i.14, align 8, !tbaa !147
  %53 = load i16, ptr %arrayidx.i.15, align 2, !tbaa !13
  %conv.i.15 = zext i16 %53 to i64
  %arrayidx2.i.15 = getelementptr inbounds i64, ptr %5, i64 9999
  %54 = load i64, ptr %arrayidx2.i.15, align 8, !tbaa !147
  %add.i.15 = add i64 %54, %conv.i.15
  store i64 %add.i.15, ptr %arrayidx2.i.15, align 8, !tbaa !147
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %55 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %55, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %56 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %56) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %55, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %distrib.i.i = alloca %"class.std::uniform_int_distribution", align 2
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(20000) ptr @_Znam(i64 noundef 20000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %distrib.i.i) #11
  store i16 0, ptr %distrib.i.i, align 2, !tbaa !9
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i16 -1, ptr %_M_b.i.i.i.i, align 2, !tbaa !12
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 2 dereferenceable(4) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i16, ptr %call.i, i64 %indvars.iv.i.i
  store i16 %call.i.i31.i, ptr %arrayidx.i.i.i, align 2, !tbaa !13
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !14

_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  store i64 0, ptr %distrib.i32.i, align 8, !tbaa !144
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i33.i, align 8, !tbaa !146
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataItEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i34.i
  store i64 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 8, !tbaa !147
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i, !prof !42

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.cond.preheader.i, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %1, %for.cond.preheader.i ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next.1, %vector.body ]
  %6 = getelementptr inbounds i16, ptr %call.i, i64 %index
  %wide.load = load <2 x i16>, ptr %6, align 2, !tbaa !13
  %7 = getelementptr inbounds i16, ptr %6, i64 2
  %wide.load5 = load <2 x i16>, ptr %7, align 2, !tbaa !13
  %8 = zext <2 x i16> %wide.load to <2 x i64>
  %9 = zext <2 x i16> %wide.load5 to <2 x i64>
  %10 = getelementptr inbounds i64, ptr %5, i64 %index
  %wide.load6 = load <2 x i64>, ptr %10, align 8, !tbaa !147
  %11 = getelementptr inbounds i64, ptr %10, i64 2
  %wide.load7 = load <2 x i64>, ptr %11, align 8, !tbaa !147
  %12 = add <2 x i64> %wide.load6, %8
  %13 = add <2 x i64> %wide.load7, %9
  store <2 x i64> %12, ptr %10, align 8, !tbaa !147
  store <2 x i64> %13, ptr %11, align 8, !tbaa !147
  %index.next = or i64 %index, 4
  %14 = getelementptr inbounds i16, ptr %call.i, i64 %index.next
  %wide.load.1 = load <2 x i16>, ptr %14, align 2, !tbaa !13
  %15 = getelementptr inbounds i16, ptr %14, i64 2
  %wide.load5.1 = load <2 x i16>, ptr %15, align 2, !tbaa !13
  %16 = zext <2 x i16> %wide.load.1 to <2 x i64>
  %17 = zext <2 x i16> %wide.load5.1 to <2 x i64>
  %18 = getelementptr inbounds i64, ptr %5, i64 %index.next
  %wide.load6.1 = load <2 x i64>, ptr %18, align 8, !tbaa !147
  %19 = getelementptr inbounds i64, ptr %18, i64 2
  %wide.load7.1 = load <2 x i64>, ptr %19, align 8, !tbaa !147
  %20 = add <2 x i64> %wide.load6.1, %16
  %21 = add <2 x i64> %wide.load7.1, %17
  store <2 x i64> %20, ptr %18, align 8, !tbaa !147
  store <2 x i64> %21, ptr %19, align 8, !tbaa !147
  %index.next.1 = add nuw nsw i64 %index, 8
  %22 = icmp eq i64 %index.next.1, 10000
  br i1 %22, label %invoke.cont19.i, label %vector.body, !llvm.loop !391

invoke.cont19.i:                                  ; preds = %vector.body
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %23 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %23, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %24 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %24) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %23, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopItmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont3.i unwind label %ehcleanup59.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i73.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i73.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  br label %for.body.i77.i

for.body.i77.i:                                   ; preds = %for.body.i77.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i74.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i75.i.4, %for.body.i77.i ]
  %arrayidx.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i74.i
  %0 = load i32, ptr %arrayidx.i.i, align 4, !tbaa !95
  %conv.i.i = zext i32 %0 to i64
  %arrayidx2.i.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i74.i
  store i64 %conv.i.i, ptr %arrayidx2.i.i, align 8, !tbaa !147
  %indvars.iv.next.i75.i = add nuw nsw i64 %indvars.iv.i74.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i75.i
  %1 = load i32, ptr %arrayidx.i.i.1, align 4, !tbaa !95
  %conv.i.i.1 = zext i32 %1 to i64
  %arrayidx2.i.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i
  store i64 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 8, !tbaa !147
  %indvars.iv.next.i75.i.1 = add nuw nsw i64 %indvars.iv.i74.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i75.i.1
  %2 = load i32, ptr %arrayidx.i.i.2, align 4, !tbaa !95
  %conv.i.i.2 = zext i32 %2 to i64
  %arrayidx2.i.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.1
  store i64 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 8, !tbaa !147
  %indvars.iv.next.i75.i.2 = add nuw nsw i64 %indvars.iv.i74.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i75.i.2
  %3 = load i32, ptr %arrayidx.i.i.3, align 4, !tbaa !95
  %conv.i.i.3 = zext i32 %3 to i64
  %arrayidx2.i.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.2
  store i64 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 8, !tbaa !147
  %indvars.iv.next.i75.i.3 = add nuw nsw i64 %indvars.iv.i74.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i75.i.3
  %4 = load i32, ptr %arrayidx.i.i.4, align 4, !tbaa !95
  %conv.i.i.4 = zext i32 %4 to i64
  %arrayidx2.i.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.3
  store i64 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 8, !tbaa !147
  %indvars.iv.next.i75.i.4 = add nuw nsw i64 %indvars.iv.i74.i, 5
  %exitcond.not.i76.i.4 = icmp eq i64 %indvars.iv.next.i75.i.4, 10000
  br i1 %exitcond.not.i76.i.4, label %vector.body, label %for.body.i77.i, !llvm.loop !392

vector.body:                                      ; preds = %for.body.i77.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i77.i ]
  %5 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <8 x i32>, ptr %5, align 4, !tbaa !95
  %6 = getelementptr inbounds i32, ptr %5, i64 8
  %wide.load27 = load <8 x i32>, ptr %6, align 4, !tbaa !95
  %7 = getelementptr inbounds i32, ptr %5, i64 16
  %wide.load28 = load <8 x i32>, ptr %7, align 4, !tbaa !95
  %8 = getelementptr inbounds i32, ptr %5, i64 24
  %wide.load29 = load <8 x i32>, ptr %8, align 4, !tbaa !95
  %9 = zext <8 x i32> %wide.load to <8 x i64>
  %10 = zext <8 x i32> %wide.load27 to <8 x i64>
  %11 = zext <8 x i32> %wide.load28 to <8 x i64>
  %12 = zext <8 x i32> %wide.load29 to <8 x i64>
  %13 = getelementptr inbounds i64, ptr %call1.i, i64 %index
  store <8 x i64> %9, ptr %13, align 8, !tbaa !147
  %14 = getelementptr inbounds i64, ptr %13, i64 8
  store <8 x i64> %10, ptr %14, align 8, !tbaa !147
  %15 = getelementptr inbounds i64, ptr %13, i64 16
  store <8 x i64> %11, ptr %15, align 8, !tbaa !147
  %16 = getelementptr inbounds i64, ptr %13, i64 24
  store <8 x i64> %12, ptr %16, align 8, !tbaa !147
  %index.next = add nuw i64 %index, 32
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !393

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i32, ptr %call.i, i64 9984
  %18 = load i32, ptr %arrayidx.i, align 4, !tbaa !95
  %conv.i = zext i32 %18 to i64
  %arrayidx2.i = getelementptr inbounds i64, ptr %call1.i, i64 9984
  store i64 %conv.i, ptr %arrayidx2.i, align 8, !tbaa !147
  %arrayidx.i.1 = getelementptr inbounds i32, ptr %call.i, i64 9985
  %19 = load i32, ptr %arrayidx.i.1, align 4, !tbaa !95
  %conv.i.1 = zext i32 %19 to i64
  %arrayidx2.i.1 = getelementptr inbounds i64, ptr %call1.i, i64 9985
  store i64 %conv.i.1, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %arrayidx.i.2 = getelementptr inbounds i32, ptr %call.i, i64 9986
  %20 = load i32, ptr %arrayidx.i.2, align 4, !tbaa !95
  %conv.i.2 = zext i32 %20 to i64
  %arrayidx2.i.2 = getelementptr inbounds i64, ptr %call1.i, i64 9986
  store i64 %conv.i.2, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %arrayidx.i.3 = getelementptr inbounds i32, ptr %call.i, i64 9987
  %21 = load i32, ptr %arrayidx.i.3, align 4, !tbaa !95
  %conv.i.3 = zext i32 %21 to i64
  %arrayidx2.i.3 = getelementptr inbounds i64, ptr %call1.i, i64 9987
  store i64 %conv.i.3, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %arrayidx.i.4 = getelementptr inbounds i32, ptr %call.i, i64 9988
  %22 = load i32, ptr %arrayidx.i.4, align 4, !tbaa !95
  %conv.i.4 = zext i32 %22 to i64
  %arrayidx2.i.4 = getelementptr inbounds i64, ptr %call1.i, i64 9988
  store i64 %conv.i.4, ptr %arrayidx2.i.4, align 8, !tbaa !147
  %arrayidx.i.5 = getelementptr inbounds i32, ptr %call.i, i64 9989
  %23 = load i32, ptr %arrayidx.i.5, align 4, !tbaa !95
  %conv.i.5 = zext i32 %23 to i64
  %arrayidx2.i.5 = getelementptr inbounds i64, ptr %call1.i, i64 9989
  store i64 %conv.i.5, ptr %arrayidx2.i.5, align 8, !tbaa !147
  %arrayidx.i.6 = getelementptr inbounds i32, ptr %call.i, i64 9990
  %24 = load i32, ptr %arrayidx.i.6, align 4, !tbaa !95
  %conv.i.6 = zext i32 %24 to i64
  %arrayidx2.i.6 = getelementptr inbounds i64, ptr %call1.i, i64 9990
  store i64 %conv.i.6, ptr %arrayidx2.i.6, align 8, !tbaa !147
  %arrayidx.i.7 = getelementptr inbounds i32, ptr %call.i, i64 9991
  %25 = load i32, ptr %arrayidx.i.7, align 4, !tbaa !95
  %conv.i.7 = zext i32 %25 to i64
  %arrayidx2.i.7 = getelementptr inbounds i64, ptr %call1.i, i64 9991
  store i64 %conv.i.7, ptr %arrayidx2.i.7, align 8, !tbaa !147
  %arrayidx.i.8 = getelementptr inbounds i32, ptr %call.i, i64 9992
  %26 = load i32, ptr %arrayidx.i.8, align 4, !tbaa !95
  %conv.i.8 = zext i32 %26 to i64
  %arrayidx2.i.8 = getelementptr inbounds i64, ptr %call1.i, i64 9992
  store i64 %conv.i.8, ptr %arrayidx2.i.8, align 8, !tbaa !147
  %arrayidx.i.9 = getelementptr inbounds i32, ptr %call.i, i64 9993
  %27 = load i32, ptr %arrayidx.i.9, align 4, !tbaa !95
  %conv.i.9 = zext i32 %27 to i64
  %arrayidx2.i.9 = getelementptr inbounds i64, ptr %call1.i, i64 9993
  store i64 %conv.i.9, ptr %arrayidx2.i.9, align 8, !tbaa !147
  %arrayidx.i.10 = getelementptr inbounds i32, ptr %call.i, i64 9994
  %28 = load i32, ptr %arrayidx.i.10, align 4, !tbaa !95
  %conv.i.10 = zext i32 %28 to i64
  %arrayidx2.i.10 = getelementptr inbounds i64, ptr %call1.i, i64 9994
  store i64 %conv.i.10, ptr %arrayidx2.i.10, align 8, !tbaa !147
  %arrayidx.i.11 = getelementptr inbounds i32, ptr %call.i, i64 9995
  %29 = load i32, ptr %arrayidx.i.11, align 4, !tbaa !95
  %conv.i.11 = zext i32 %29 to i64
  %arrayidx2.i.11 = getelementptr inbounds i64, ptr %call1.i, i64 9995
  store i64 %conv.i.11, ptr %arrayidx2.i.11, align 8, !tbaa !147
  %arrayidx.i.12 = getelementptr inbounds i32, ptr %call.i, i64 9996
  %30 = load i32, ptr %arrayidx.i.12, align 4, !tbaa !95
  %conv.i.12 = zext i32 %30 to i64
  %arrayidx2.i.12 = getelementptr inbounds i64, ptr %call1.i, i64 9996
  store i64 %conv.i.12, ptr %arrayidx2.i.12, align 8, !tbaa !147
  %arrayidx.i.13 = getelementptr inbounds i32, ptr %call.i, i64 9997
  %31 = load i32, ptr %arrayidx.i.13, align 4, !tbaa !95
  %conv.i.13 = zext i32 %31 to i64
  %arrayidx2.i.13 = getelementptr inbounds i64, ptr %call1.i, i64 9997
  store i64 %conv.i.13, ptr %arrayidx2.i.13, align 8, !tbaa !147
  %arrayidx.i.14 = getelementptr inbounds i32, ptr %call.i, i64 9998
  %32 = load i32, ptr %arrayidx.i.14, align 4, !tbaa !95
  %conv.i.14 = zext i32 %32 to i64
  %arrayidx2.i.14 = getelementptr inbounds i64, ptr %call1.i, i64 9998
  store i64 %conv.i.14, ptr %arrayidx2.i.14, align 8, !tbaa !147
  %arrayidx.i.15 = getelementptr inbounds i32, ptr %call.i, i64 9999
  %33 = load i32, ptr %arrayidx.i.15, align 4, !tbaa !95
  %conv.i.15 = zext i32 %33 to i64
  %arrayidx2.i.15 = getelementptr inbounds i64, ptr %call1.i, i64 9999
  store i64 %conv.i.15, ptr %arrayidx2.i.15, align 8, !tbaa !147
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i78.i.1 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i64, ptr %arrayidx.i78.i.1, align 8, !tbaa !147
  %arrayidx.i79.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i64, ptr %arrayidx.i79.i.1, align 8, !tbaa !147
  %cmp16.not.i.1 = icmp eq i64 %34, %35
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i78.i.2 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i64, ptr %arrayidx.i78.i.2, align 8, !tbaa !147
  %arrayidx.i79.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i64, ptr %arrayidx.i79.i.2, align 8, !tbaa !147
  %cmp16.not.i.2 = icmp eq i64 %36, %37
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i78.i.3 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i64, ptr %arrayidx.i78.i.3, align 8, !tbaa !147
  %arrayidx.i79.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i64, ptr %arrayidx.i79.i.3, align 8, !tbaa !147
  %cmp16.not.i.3 = icmp eq i64 %38, %39
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i78.i.4 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i64, ptr %arrayidx.i78.i.4, align 8, !tbaa !147
  %arrayidx.i79.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i64, ptr %arrayidx.i79.i.4, align 8, !tbaa !147
  %cmp16.not.i.4 = icmp eq i64 %40, %41
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !394

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not141145.i = icmp eq i64 %43, 0
  %cmp.not.i.not141.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not141145.i
  br i1 %cmp.not.i.not141.i, label %if.end.i.i, label %for.body48.i.preheader, !prof !42

for.body48.i.preheader:                           ; preds = %for.cond44.preheader.i
  %arrayidx.i8 = getelementptr inbounds i32, ptr %call.i, i64 9984
  %arrayidx.i8.1 = getelementptr inbounds i32, ptr %call.i, i64 9985
  %arrayidx.i8.2 = getelementptr inbounds i32, ptr %call.i, i64 9986
  %arrayidx.i8.3 = getelementptr inbounds i32, ptr %call.i, i64 9987
  %arrayidx.i8.4 = getelementptr inbounds i32, ptr %call.i, i64 9988
  %arrayidx.i8.5 = getelementptr inbounds i32, ptr %call.i, i64 9989
  %arrayidx.i8.6 = getelementptr inbounds i32, ptr %call.i, i64 9990
  %arrayidx.i8.7 = getelementptr inbounds i32, ptr %call.i, i64 9991
  %arrayidx.i8.8 = getelementptr inbounds i32, ptr %call.i, i64 9992
  %arrayidx.i8.9 = getelementptr inbounds i32, ptr %call.i, i64 9993
  %arrayidx.i8.10 = getelementptr inbounds i32, ptr %call.i, i64 9994
  %arrayidx.i8.11 = getelementptr inbounds i32, ptr %call.i, i64 9995
  %arrayidx.i8.12 = getelementptr inbounds i32, ptr %call.i, i64 9996
  %arrayidx.i8.13 = getelementptr inbounds i32, ptr %call.i, i64 9997
  %arrayidx.i8.14 = getelementptr inbounds i32, ptr %call.i, i64 9998
  %arrayidx.i8.15 = getelementptr inbounds i32, ptr %call.i, i64 9999
  br label %for.body48.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

ehcleanup59.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i112.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i78.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i64, ptr %arrayidx.i78.i, align 8, !tbaa !147
  %arrayidx.i79.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i64, ptr %arrayidx.i79.i, align 8, !tbaa !147
  %cmp16.not.i = icmp eq i64 %46, %47
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i64 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i78.i.le = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i81.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i82.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i32, ptr %arrayidx.i82.i, align 4, !tbaa !95
  %conv.i83.i = zext i32 %48 to i64
  %call.i84.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i83.i)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %49 = load i64, ptr %arrayidx.i78.i.le, align 8, !tbaa !147
  %call.i90.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, i64 noundef %49)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i93.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %call.i96.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, i64 noundef %.lcssa)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i96.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

if.end.i.i:                                       ; preds = %for.body.i13, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i100.i = icmp eq ptr %51, null
  br i1 %cmp.not.i100.i, label %_ZL28benchForTruncOrZextVecInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i101.i

delete.notnull.i.i101.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body48.i:                                     ; preds = %for.body48.i.preheader, %for.body.i13
  %__begin1.sroa.0.0142.i = phi i64 [ %dec.i.i, %for.body.i13 ], [ %43, %for.body48.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body35

vector.body35:                                    ; preds = %vector.body35, %for.body48.i
  %index36 = phi i64 [ 0, %for.body48.i ], [ %index.next41, %vector.body35 ]
  %55 = getelementptr inbounds i32, ptr %call.i, i64 %index36
  %wide.load37 = load <8 x i32>, ptr %55, align 4, !tbaa !95
  %56 = getelementptr inbounds i32, ptr %55, i64 8
  %wide.load38 = load <8 x i32>, ptr %56, align 4, !tbaa !95
  %57 = getelementptr inbounds i32, ptr %55, i64 16
  %wide.load39 = load <8 x i32>, ptr %57, align 4, !tbaa !95
  %58 = getelementptr inbounds i32, ptr %55, i64 24
  %wide.load40 = load <8 x i32>, ptr %58, align 4, !tbaa !95
  %59 = zext <8 x i32> %wide.load37 to <8 x i64>
  %60 = zext <8 x i32> %wide.load38 to <8 x i64>
  %61 = zext <8 x i32> %wide.load39 to <8 x i64>
  %62 = zext <8 x i32> %wide.load40 to <8 x i64>
  %63 = getelementptr inbounds i64, ptr %54, i64 %index36
  store <8 x i64> %59, ptr %63, align 8, !tbaa !147
  %64 = getelementptr inbounds i64, ptr %63, i64 8
  store <8 x i64> %60, ptr %64, align 8, !tbaa !147
  %65 = getelementptr inbounds i64, ptr %63, i64 16
  store <8 x i64> %61, ptr %65, align 8, !tbaa !147
  %66 = getelementptr inbounds i64, ptr %63, i64 24
  store <8 x i64> %62, ptr %66, align 8, !tbaa !147
  %index.next41 = add nuw i64 %index36, 32
  %67 = icmp eq i64 %index.next41, 9984
  br i1 %67, label %for.body.i13, label %vector.body35, !llvm.loop !395

for.body.i13:                                     ; preds = %vector.body35
  %68 = load i32, ptr %arrayidx.i8, align 4, !tbaa !95
  %conv.i9 = zext i32 %68 to i64
  %arrayidx2.i10 = getelementptr inbounds i64, ptr %54, i64 9984
  store i64 %conv.i9, ptr %arrayidx2.i10, align 8, !tbaa !147
  %69 = load i32, ptr %arrayidx.i8.1, align 4, !tbaa !95
  %conv.i9.1 = zext i32 %69 to i64
  %arrayidx2.i10.1 = getelementptr inbounds i64, ptr %54, i64 9985
  store i64 %conv.i9.1, ptr %arrayidx2.i10.1, align 8, !tbaa !147
  %70 = load i32, ptr %arrayidx.i8.2, align 4, !tbaa !95
  %conv.i9.2 = zext i32 %70 to i64
  %arrayidx2.i10.2 = getelementptr inbounds i64, ptr %54, i64 9986
  store i64 %conv.i9.2, ptr %arrayidx2.i10.2, align 8, !tbaa !147
  %71 = load i32, ptr %arrayidx.i8.3, align 4, !tbaa !95
  %conv.i9.3 = zext i32 %71 to i64
  %arrayidx2.i10.3 = getelementptr inbounds i64, ptr %54, i64 9987
  store i64 %conv.i9.3, ptr %arrayidx2.i10.3, align 8, !tbaa !147
  %72 = load i32, ptr %arrayidx.i8.4, align 4, !tbaa !95
  %conv.i9.4 = zext i32 %72 to i64
  %arrayidx2.i10.4 = getelementptr inbounds i64, ptr %54, i64 9988
  store i64 %conv.i9.4, ptr %arrayidx2.i10.4, align 8, !tbaa !147
  %73 = load i32, ptr %arrayidx.i8.5, align 4, !tbaa !95
  %conv.i9.5 = zext i32 %73 to i64
  %arrayidx2.i10.5 = getelementptr inbounds i64, ptr %54, i64 9989
  store i64 %conv.i9.5, ptr %arrayidx2.i10.5, align 8, !tbaa !147
  %74 = load i32, ptr %arrayidx.i8.6, align 4, !tbaa !95
  %conv.i9.6 = zext i32 %74 to i64
  %arrayidx2.i10.6 = getelementptr inbounds i64, ptr %54, i64 9990
  store i64 %conv.i9.6, ptr %arrayidx2.i10.6, align 8, !tbaa !147
  %75 = load i32, ptr %arrayidx.i8.7, align 4, !tbaa !95
  %conv.i9.7 = zext i32 %75 to i64
  %arrayidx2.i10.7 = getelementptr inbounds i64, ptr %54, i64 9991
  store i64 %conv.i9.7, ptr %arrayidx2.i10.7, align 8, !tbaa !147
  %76 = load i32, ptr %arrayidx.i8.8, align 4, !tbaa !95
  %conv.i9.8 = zext i32 %76 to i64
  %arrayidx2.i10.8 = getelementptr inbounds i64, ptr %54, i64 9992
  store i64 %conv.i9.8, ptr %arrayidx2.i10.8, align 8, !tbaa !147
  %77 = load i32, ptr %arrayidx.i8.9, align 4, !tbaa !95
  %conv.i9.9 = zext i32 %77 to i64
  %arrayidx2.i10.9 = getelementptr inbounds i64, ptr %54, i64 9993
  store i64 %conv.i9.9, ptr %arrayidx2.i10.9, align 8, !tbaa !147
  %78 = load i32, ptr %arrayidx.i8.10, align 4, !tbaa !95
  %conv.i9.10 = zext i32 %78 to i64
  %arrayidx2.i10.10 = getelementptr inbounds i64, ptr %54, i64 9994
  store i64 %conv.i9.10, ptr %arrayidx2.i10.10, align 8, !tbaa !147
  %79 = load i32, ptr %arrayidx.i8.11, align 4, !tbaa !95
  %conv.i9.11 = zext i32 %79 to i64
  %arrayidx2.i10.11 = getelementptr inbounds i64, ptr %54, i64 9995
  store i64 %conv.i9.11, ptr %arrayidx2.i10.11, align 8, !tbaa !147
  %80 = load i32, ptr %arrayidx.i8.12, align 4, !tbaa !95
  %conv.i9.12 = zext i32 %80 to i64
  %arrayidx2.i10.12 = getelementptr inbounds i64, ptr %54, i64 9996
  store i64 %conv.i9.12, ptr %arrayidx2.i10.12, align 8, !tbaa !147
  %81 = load i32, ptr %arrayidx.i8.13, align 4, !tbaa !95
  %conv.i9.13 = zext i32 %81 to i64
  %arrayidx2.i10.13 = getelementptr inbounds i64, ptr %54, i64 9997
  store i64 %conv.i9.13, ptr %arrayidx2.i10.13, align 8, !tbaa !147
  %82 = load i32, ptr %arrayidx.i8.14, align 4, !tbaa !95
  %conv.i9.14 = zext i32 %82 to i64
  %arrayidx2.i10.14 = getelementptr inbounds i64, ptr %54, i64 9998
  store i64 %conv.i9.14, ptr %arrayidx2.i10.14, align 8, !tbaa !147
  %83 = load i32, ptr %arrayidx.i8.15, align 4, !tbaa !95
  %conv.i9.15 = zext i32 %83 to i64
  %arrayidx2.i10.15 = getelementptr inbounds i64, ptr %54, i64 9999
  store i64 %conv.i9.15, ptr %arrayidx2.i10.15, align 8, !tbaa !147
  %dec.i.i = add i64 %__begin1.sroa.0.0142.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup59.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn131.i = phi { ptr, i32 } [ %50, %lpad17.i ], [ %52, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i111.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i111.i, label %ehcleanup61.i, label %delete.notnull.i.i112.i

delete.notnull.i.i112.i:                          ; preds = %ehcleanup59.i, %ehcleanup59.thread.i
  %.pn131.pn137.i = phi { ptr, i32 } [ %45, %ehcleanup59.thread.i ], [ %.pn131.i, %ehcleanup59.i ]
  %84 = phi ptr [ %call1.i, %ehcleanup59.thread.i ], [ %.pr.i, %ehcleanup59.i ]
  call void @_ZdaPv(ptr noundef nonnull %84) #13
  br label %ehcleanup61.i

ehcleanup61.i:                                    ; preds = %delete.notnull.i.i112.i, %ehcleanup59.i, %lpad.i
  %.pn131.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn131.i, %ehcleanup59.i ], [ %.pn131.pn137.i, %delete.notnull.i.i112.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn131.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i101.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont3.i unwind label %ehcleanup59.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i73.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i73.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  br label %for.body.i77.i

for.body.i77.i:                                   ; preds = %for.body.i77.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i74.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i75.i.4, %for.body.i77.i ]
  %arrayidx.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i74.i
  %0 = load i32, ptr %arrayidx.i.i, align 4, !tbaa !95
  %conv.i.i = zext i32 %0 to i64
  %arrayidx2.i.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i74.i
  store i64 %conv.i.i, ptr %arrayidx2.i.i, align 8, !tbaa !147
  %indvars.iv.next.i75.i = add nuw nsw i64 %indvars.iv.i74.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i75.i
  %1 = load i32, ptr %arrayidx.i.i.1, align 4, !tbaa !95
  %conv.i.i.1 = zext i32 %1 to i64
  %arrayidx2.i.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i
  store i64 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 8, !tbaa !147
  %indvars.iv.next.i75.i.1 = add nuw nsw i64 %indvars.iv.i74.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i75.i.1
  %2 = load i32, ptr %arrayidx.i.i.2, align 4, !tbaa !95
  %conv.i.i.2 = zext i32 %2 to i64
  %arrayidx2.i.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.1
  store i64 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 8, !tbaa !147
  %indvars.iv.next.i75.i.2 = add nuw nsw i64 %indvars.iv.i74.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i75.i.2
  %3 = load i32, ptr %arrayidx.i.i.3, align 4, !tbaa !95
  %conv.i.i.3 = zext i32 %3 to i64
  %arrayidx2.i.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.2
  store i64 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 8, !tbaa !147
  %indvars.iv.next.i75.i.3 = add nuw nsw i64 %indvars.iv.i74.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i75.i.3
  %4 = load i32, ptr %arrayidx.i.i.4, align 4, !tbaa !95
  %conv.i.i.4 = zext i32 %4 to i64
  %arrayidx2.i.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.3
  store i64 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 8, !tbaa !147
  %indvars.iv.next.i75.i.4 = add nuw nsw i64 %indvars.iv.i74.i, 5
  %exitcond.not.i76.i.4 = icmp eq i64 %indvars.iv.next.i75.i.4, 10000
  br i1 %exitcond.not.i76.i.4, label %vector.body, label %for.body.i77.i, !llvm.loop !392

vector.body:                                      ; preds = %for.body.i77.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.i77.i ]
  %5 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <16 x i32>, ptr %5, align 4, !tbaa !95
  %6 = getelementptr inbounds i32, ptr %5, i64 16
  %wide.load27 = load <16 x i32>, ptr %6, align 4, !tbaa !95
  %7 = getelementptr inbounds i32, ptr %5, i64 32
  %wide.load28 = load <16 x i32>, ptr %7, align 4, !tbaa !95
  %8 = getelementptr inbounds i32, ptr %5, i64 48
  %wide.load29 = load <16 x i32>, ptr %8, align 4, !tbaa !95
  %9 = zext <16 x i32> %wide.load to <16 x i64>
  %10 = zext <16 x i32> %wide.load27 to <16 x i64>
  %11 = zext <16 x i32> %wide.load28 to <16 x i64>
  %12 = zext <16 x i32> %wide.load29 to <16 x i64>
  %13 = getelementptr inbounds i64, ptr %call1.i, i64 %index
  store <16 x i64> %9, ptr %13, align 8, !tbaa !147
  %14 = getelementptr inbounds i64, ptr %13, i64 16
  store <16 x i64> %10, ptr %14, align 8, !tbaa !147
  %15 = getelementptr inbounds i64, ptr %13, i64 32
  store <16 x i64> %11, ptr %15, align 8, !tbaa !147
  %16 = getelementptr inbounds i64, ptr %13, i64 48
  store <16 x i64> %12, ptr %16, align 8, !tbaa !147
  %index.next = add nuw i64 %index, 64
  %17 = icmp eq i64 %index.next, 9984
  br i1 %17, label %for.body.i5, label %vector.body, !llvm.loop !396

for.body.i5:                                      ; preds = %vector.body
  %arrayidx.i = getelementptr inbounds i32, ptr %call.i, i64 9984
  %18 = load i32, ptr %arrayidx.i, align 4, !tbaa !95
  %conv.i = zext i32 %18 to i64
  %arrayidx2.i = getelementptr inbounds i64, ptr %call1.i, i64 9984
  store i64 %conv.i, ptr %arrayidx2.i, align 8, !tbaa !147
  %arrayidx.i.1 = getelementptr inbounds i32, ptr %call.i, i64 9985
  %19 = load i32, ptr %arrayidx.i.1, align 4, !tbaa !95
  %conv.i.1 = zext i32 %19 to i64
  %arrayidx2.i.1 = getelementptr inbounds i64, ptr %call1.i, i64 9985
  store i64 %conv.i.1, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %arrayidx.i.2 = getelementptr inbounds i32, ptr %call.i, i64 9986
  %20 = load i32, ptr %arrayidx.i.2, align 4, !tbaa !95
  %conv.i.2 = zext i32 %20 to i64
  %arrayidx2.i.2 = getelementptr inbounds i64, ptr %call1.i, i64 9986
  store i64 %conv.i.2, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %arrayidx.i.3 = getelementptr inbounds i32, ptr %call.i, i64 9987
  %21 = load i32, ptr %arrayidx.i.3, align 4, !tbaa !95
  %conv.i.3 = zext i32 %21 to i64
  %arrayidx2.i.3 = getelementptr inbounds i64, ptr %call1.i, i64 9987
  store i64 %conv.i.3, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %arrayidx.i.4 = getelementptr inbounds i32, ptr %call.i, i64 9988
  %22 = load i32, ptr %arrayidx.i.4, align 4, !tbaa !95
  %conv.i.4 = zext i32 %22 to i64
  %arrayidx2.i.4 = getelementptr inbounds i64, ptr %call1.i, i64 9988
  store i64 %conv.i.4, ptr %arrayidx2.i.4, align 8, !tbaa !147
  %arrayidx.i.5 = getelementptr inbounds i32, ptr %call.i, i64 9989
  %23 = load i32, ptr %arrayidx.i.5, align 4, !tbaa !95
  %conv.i.5 = zext i32 %23 to i64
  %arrayidx2.i.5 = getelementptr inbounds i64, ptr %call1.i, i64 9989
  store i64 %conv.i.5, ptr %arrayidx2.i.5, align 8, !tbaa !147
  %arrayidx.i.6 = getelementptr inbounds i32, ptr %call.i, i64 9990
  %24 = load i32, ptr %arrayidx.i.6, align 4, !tbaa !95
  %conv.i.6 = zext i32 %24 to i64
  %arrayidx2.i.6 = getelementptr inbounds i64, ptr %call1.i, i64 9990
  store i64 %conv.i.6, ptr %arrayidx2.i.6, align 8, !tbaa !147
  %arrayidx.i.7 = getelementptr inbounds i32, ptr %call.i, i64 9991
  %25 = load i32, ptr %arrayidx.i.7, align 4, !tbaa !95
  %conv.i.7 = zext i32 %25 to i64
  %arrayidx2.i.7 = getelementptr inbounds i64, ptr %call1.i, i64 9991
  store i64 %conv.i.7, ptr %arrayidx2.i.7, align 8, !tbaa !147
  %arrayidx.i.8 = getelementptr inbounds i32, ptr %call.i, i64 9992
  %26 = load i32, ptr %arrayidx.i.8, align 4, !tbaa !95
  %conv.i.8 = zext i32 %26 to i64
  %arrayidx2.i.8 = getelementptr inbounds i64, ptr %call1.i, i64 9992
  store i64 %conv.i.8, ptr %arrayidx2.i.8, align 8, !tbaa !147
  %arrayidx.i.9 = getelementptr inbounds i32, ptr %call.i, i64 9993
  %27 = load i32, ptr %arrayidx.i.9, align 4, !tbaa !95
  %conv.i.9 = zext i32 %27 to i64
  %arrayidx2.i.9 = getelementptr inbounds i64, ptr %call1.i, i64 9993
  store i64 %conv.i.9, ptr %arrayidx2.i.9, align 8, !tbaa !147
  %arrayidx.i.10 = getelementptr inbounds i32, ptr %call.i, i64 9994
  %28 = load i32, ptr %arrayidx.i.10, align 4, !tbaa !95
  %conv.i.10 = zext i32 %28 to i64
  %arrayidx2.i.10 = getelementptr inbounds i64, ptr %call1.i, i64 9994
  store i64 %conv.i.10, ptr %arrayidx2.i.10, align 8, !tbaa !147
  %arrayidx.i.11 = getelementptr inbounds i32, ptr %call.i, i64 9995
  %29 = load i32, ptr %arrayidx.i.11, align 4, !tbaa !95
  %conv.i.11 = zext i32 %29 to i64
  %arrayidx2.i.11 = getelementptr inbounds i64, ptr %call1.i, i64 9995
  store i64 %conv.i.11, ptr %arrayidx2.i.11, align 8, !tbaa !147
  %arrayidx.i.12 = getelementptr inbounds i32, ptr %call.i, i64 9996
  %30 = load i32, ptr %arrayidx.i.12, align 4, !tbaa !95
  %conv.i.12 = zext i32 %30 to i64
  %arrayidx2.i.12 = getelementptr inbounds i64, ptr %call1.i, i64 9996
  store i64 %conv.i.12, ptr %arrayidx2.i.12, align 8, !tbaa !147
  %arrayidx.i.13 = getelementptr inbounds i32, ptr %call.i, i64 9997
  %31 = load i32, ptr %arrayidx.i.13, align 4, !tbaa !95
  %conv.i.13 = zext i32 %31 to i64
  %arrayidx2.i.13 = getelementptr inbounds i64, ptr %call1.i, i64 9997
  store i64 %conv.i.13, ptr %arrayidx2.i.13, align 8, !tbaa !147
  %arrayidx.i.14 = getelementptr inbounds i32, ptr %call.i, i64 9998
  %32 = load i32, ptr %arrayidx.i.14, align 4, !tbaa !95
  %conv.i.14 = zext i32 %32 to i64
  %arrayidx2.i.14 = getelementptr inbounds i64, ptr %call1.i, i64 9998
  store i64 %conv.i.14, ptr %arrayidx2.i.14, align 8, !tbaa !147
  %arrayidx.i.15 = getelementptr inbounds i32, ptr %call.i, i64 9999
  %33 = load i32, ptr %arrayidx.i.15, align 4, !tbaa !95
  %conv.i.15 = zext i32 %33 to i64
  %arrayidx2.i.15 = getelementptr inbounds i64, ptr %call1.i, i64 9999
  store i64 %conv.i.15, ptr %arrayidx2.i.15, align 8, !tbaa !147
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i78.i.1 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i
  %34 = load i64, ptr %arrayidx.i78.i.1, align 8, !tbaa !147
  %arrayidx.i79.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i
  %35 = load i64, ptr %arrayidx.i79.i.1, align 8, !tbaa !147
  %cmp16.not.i.1 = icmp eq i64 %34, %35
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i78.i.2 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.1
  %36 = load i64, ptr %arrayidx.i78.i.2, align 8, !tbaa !147
  %arrayidx.i79.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.1
  %37 = load i64, ptr %arrayidx.i79.i.2, align 8, !tbaa !147
  %cmp16.not.i.2 = icmp eq i64 %36, %37
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i78.i.3 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.2
  %38 = load i64, ptr %arrayidx.i78.i.3, align 8, !tbaa !147
  %arrayidx.i79.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.2
  %39 = load i64, ptr %arrayidx.i79.i.3, align 8, !tbaa !147
  %cmp16.not.i.3 = icmp eq i64 %38, %39
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i78.i.4 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.3
  %40 = load i64, ptr %arrayidx.i78.i.4, align 8, !tbaa !147
  %arrayidx.i79.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.3
  %41 = load i64, ptr %arrayidx.i79.i.4, align 8, !tbaa !147
  %cmp16.not.i.4 = icmp eq i64 %40, %41
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !394

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %42 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %43 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %42, 0
  %cmp.not.i.not141145.i = icmp eq i64 %43, 0
  %cmp.not.i.not141.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not141145.i
  br i1 %cmp.not.i.not141.i, label %if.end.i.i, label %for.body48.i.preheader, !prof !42

for.body48.i.preheader:                           ; preds = %for.cond44.preheader.i
  %arrayidx.i8 = getelementptr inbounds i32, ptr %call.i, i64 9984
  %arrayidx.i8.1 = getelementptr inbounds i32, ptr %call.i, i64 9985
  %arrayidx.i8.2 = getelementptr inbounds i32, ptr %call.i, i64 9986
  %arrayidx.i8.3 = getelementptr inbounds i32, ptr %call.i, i64 9987
  %arrayidx.i8.4 = getelementptr inbounds i32, ptr %call.i, i64 9988
  %arrayidx.i8.5 = getelementptr inbounds i32, ptr %call.i, i64 9989
  %arrayidx.i8.6 = getelementptr inbounds i32, ptr %call.i, i64 9990
  %arrayidx.i8.7 = getelementptr inbounds i32, ptr %call.i, i64 9991
  %arrayidx.i8.8 = getelementptr inbounds i32, ptr %call.i, i64 9992
  %arrayidx.i8.9 = getelementptr inbounds i32, ptr %call.i, i64 9993
  %arrayidx.i8.10 = getelementptr inbounds i32, ptr %call.i, i64 9994
  %arrayidx.i8.11 = getelementptr inbounds i32, ptr %call.i, i64 9995
  %arrayidx.i8.12 = getelementptr inbounds i32, ptr %call.i, i64 9996
  %arrayidx.i8.13 = getelementptr inbounds i32, ptr %call.i, i64 9997
  %arrayidx.i8.14 = getelementptr inbounds i32, ptr %call.i, i64 9998
  %arrayidx.i8.15 = getelementptr inbounds i32, ptr %call.i, i64 9999
  br label %for.body48.i

lpad.i:                                           ; preds = %entry
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

ehcleanup59.thread.i:                             ; preds = %invoke.cont.i
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i112.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body.i:                                       ; preds = %for.cond.i.4, %for.body.i5
  %indvars.iv.i = phi i64 [ 0, %for.body.i5 ], [ %indvars.iv.next.i.4, %for.cond.i.4 ]
  %arrayidx.i78.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i
  %46 = load i64, ptr %arrayidx.i78.i, align 8, !tbaa !147
  %arrayidx.i79.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i
  %47 = load i64, ptr %arrayidx.i79.i, align 8, !tbaa !147
  %cmp16.not.i = icmp eq i64 %46, %47
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i64 [ %47, %for.body.i ], [ %35, %for.cond.i ], [ %37, %for.cond.i.1 ], [ %39, %for.cond.i.2 ], [ %41, %for.cond.i.3 ]
  %arrayidx.i78.i.le = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i81.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i82.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.lcssa
  %48 = load i32, ptr %arrayidx.i82.i, align 4, !tbaa !95
  %conv.i83.i = zext i32 %48 to i64
  %call.i84.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i83.i)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %49 = load i64, ptr %arrayidx.i78.i.le, align 8, !tbaa !147
  %call.i90.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, i64 noundef %49)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i93.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %call.i96.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, i64 noundef %.lcssa)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i96.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

if.end.i.i:                                       ; preds = %for.body.i13, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %51 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i100.i = icmp eq ptr %51, null
  br i1 %cmp.not.i100.i, label %_ZL28benchForTruncOrZextVecInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i101.i

delete.notnull.i.i101.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %51) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body48.i:                                     ; preds = %for.body48.i.preheader, %for.body.i13
  %__begin1.sroa.0.0142.i = phi i64 [ %dec.i.i, %for.body.i13 ], [ %43, %for.body48.i.preheader ]
  %53 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %53) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %54 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body35

vector.body35:                                    ; preds = %vector.body35, %for.body48.i
  %index36 = phi i64 [ 0, %for.body48.i ], [ %index.next41, %vector.body35 ]
  %55 = getelementptr inbounds i32, ptr %call.i, i64 %index36
  %wide.load37 = load <16 x i32>, ptr %55, align 4, !tbaa !95
  %56 = getelementptr inbounds i32, ptr %55, i64 16
  %wide.load38 = load <16 x i32>, ptr %56, align 4, !tbaa !95
  %57 = getelementptr inbounds i32, ptr %55, i64 32
  %wide.load39 = load <16 x i32>, ptr %57, align 4, !tbaa !95
  %58 = getelementptr inbounds i32, ptr %55, i64 48
  %wide.load40 = load <16 x i32>, ptr %58, align 4, !tbaa !95
  %59 = zext <16 x i32> %wide.load37 to <16 x i64>
  %60 = zext <16 x i32> %wide.load38 to <16 x i64>
  %61 = zext <16 x i32> %wide.load39 to <16 x i64>
  %62 = zext <16 x i32> %wide.load40 to <16 x i64>
  %63 = getelementptr inbounds i64, ptr %54, i64 %index36
  store <16 x i64> %59, ptr %63, align 8, !tbaa !147
  %64 = getelementptr inbounds i64, ptr %63, i64 16
  store <16 x i64> %60, ptr %64, align 8, !tbaa !147
  %65 = getelementptr inbounds i64, ptr %63, i64 32
  store <16 x i64> %61, ptr %65, align 8, !tbaa !147
  %66 = getelementptr inbounds i64, ptr %63, i64 48
  store <16 x i64> %62, ptr %66, align 8, !tbaa !147
  %index.next41 = add nuw i64 %index36, 64
  %67 = icmp eq i64 %index.next41, 9984
  br i1 %67, label %for.body.i13, label %vector.body35, !llvm.loop !397

for.body.i13:                                     ; preds = %vector.body35
  %68 = load i32, ptr %arrayidx.i8, align 4, !tbaa !95
  %conv.i9 = zext i32 %68 to i64
  %arrayidx2.i10 = getelementptr inbounds i64, ptr %54, i64 9984
  store i64 %conv.i9, ptr %arrayidx2.i10, align 8, !tbaa !147
  %69 = load i32, ptr %arrayidx.i8.1, align 4, !tbaa !95
  %conv.i9.1 = zext i32 %69 to i64
  %arrayidx2.i10.1 = getelementptr inbounds i64, ptr %54, i64 9985
  store i64 %conv.i9.1, ptr %arrayidx2.i10.1, align 8, !tbaa !147
  %70 = load i32, ptr %arrayidx.i8.2, align 4, !tbaa !95
  %conv.i9.2 = zext i32 %70 to i64
  %arrayidx2.i10.2 = getelementptr inbounds i64, ptr %54, i64 9986
  store i64 %conv.i9.2, ptr %arrayidx2.i10.2, align 8, !tbaa !147
  %71 = load i32, ptr %arrayidx.i8.3, align 4, !tbaa !95
  %conv.i9.3 = zext i32 %71 to i64
  %arrayidx2.i10.3 = getelementptr inbounds i64, ptr %54, i64 9987
  store i64 %conv.i9.3, ptr %arrayidx2.i10.3, align 8, !tbaa !147
  %72 = load i32, ptr %arrayidx.i8.4, align 4, !tbaa !95
  %conv.i9.4 = zext i32 %72 to i64
  %arrayidx2.i10.4 = getelementptr inbounds i64, ptr %54, i64 9988
  store i64 %conv.i9.4, ptr %arrayidx2.i10.4, align 8, !tbaa !147
  %73 = load i32, ptr %arrayidx.i8.5, align 4, !tbaa !95
  %conv.i9.5 = zext i32 %73 to i64
  %arrayidx2.i10.5 = getelementptr inbounds i64, ptr %54, i64 9989
  store i64 %conv.i9.5, ptr %arrayidx2.i10.5, align 8, !tbaa !147
  %74 = load i32, ptr %arrayidx.i8.6, align 4, !tbaa !95
  %conv.i9.6 = zext i32 %74 to i64
  %arrayidx2.i10.6 = getelementptr inbounds i64, ptr %54, i64 9990
  store i64 %conv.i9.6, ptr %arrayidx2.i10.6, align 8, !tbaa !147
  %75 = load i32, ptr %arrayidx.i8.7, align 4, !tbaa !95
  %conv.i9.7 = zext i32 %75 to i64
  %arrayidx2.i10.7 = getelementptr inbounds i64, ptr %54, i64 9991
  store i64 %conv.i9.7, ptr %arrayidx2.i10.7, align 8, !tbaa !147
  %76 = load i32, ptr %arrayidx.i8.8, align 4, !tbaa !95
  %conv.i9.8 = zext i32 %76 to i64
  %arrayidx2.i10.8 = getelementptr inbounds i64, ptr %54, i64 9992
  store i64 %conv.i9.8, ptr %arrayidx2.i10.8, align 8, !tbaa !147
  %77 = load i32, ptr %arrayidx.i8.9, align 4, !tbaa !95
  %conv.i9.9 = zext i32 %77 to i64
  %arrayidx2.i10.9 = getelementptr inbounds i64, ptr %54, i64 9993
  store i64 %conv.i9.9, ptr %arrayidx2.i10.9, align 8, !tbaa !147
  %78 = load i32, ptr %arrayidx.i8.10, align 4, !tbaa !95
  %conv.i9.10 = zext i32 %78 to i64
  %arrayidx2.i10.10 = getelementptr inbounds i64, ptr %54, i64 9994
  store i64 %conv.i9.10, ptr %arrayidx2.i10.10, align 8, !tbaa !147
  %79 = load i32, ptr %arrayidx.i8.11, align 4, !tbaa !95
  %conv.i9.11 = zext i32 %79 to i64
  %arrayidx2.i10.11 = getelementptr inbounds i64, ptr %54, i64 9995
  store i64 %conv.i9.11, ptr %arrayidx2.i10.11, align 8, !tbaa !147
  %80 = load i32, ptr %arrayidx.i8.12, align 4, !tbaa !95
  %conv.i9.12 = zext i32 %80 to i64
  %arrayidx2.i10.12 = getelementptr inbounds i64, ptr %54, i64 9996
  store i64 %conv.i9.12, ptr %arrayidx2.i10.12, align 8, !tbaa !147
  %81 = load i32, ptr %arrayidx.i8.13, align 4, !tbaa !95
  %conv.i9.13 = zext i32 %81 to i64
  %arrayidx2.i10.13 = getelementptr inbounds i64, ptr %54, i64 9997
  store i64 %conv.i9.13, ptr %arrayidx2.i10.13, align 8, !tbaa !147
  %82 = load i32, ptr %arrayidx.i8.14, align 4, !tbaa !95
  %conv.i9.14 = zext i32 %82 to i64
  %arrayidx2.i10.14 = getelementptr inbounds i64, ptr %54, i64 9998
  store i64 %conv.i9.14, ptr %arrayidx2.i10.14, align 8, !tbaa !147
  %83 = load i32, ptr %arrayidx.i8.15, align 4, !tbaa !95
  %conv.i9.15 = zext i32 %83 to i64
  %arrayidx2.i10.15 = getelementptr inbounds i64, ptr %54, i64 9999
  store i64 %conv.i9.15, ptr %arrayidx2.i10.15, align 8, !tbaa !147
  %dec.i.i = add i64 %__begin1.sroa.0.0142.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup59.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn131.i = phi { ptr, i32 } [ %50, %lpad17.i ], [ %52, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i111.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i111.i, label %ehcleanup61.i, label %delete.notnull.i.i112.i

delete.notnull.i.i112.i:                          ; preds = %ehcleanup59.i, %ehcleanup59.thread.i
  %.pn131.pn137.i = phi { ptr, i32 } [ %45, %ehcleanup59.thread.i ], [ %.pn131.i, %ehcleanup59.i ]
  %84 = phi ptr [ %call1.i, %ehcleanup59.thread.i ], [ %.pr.i, %ehcleanup59.i ]
  call void @_ZdaPv(ptr noundef nonnull %84) #13
  br label %ehcleanup61.i

ehcleanup61.i:                                    ; preds = %delete.notnull.i.i112.i, %ehcleanup59.i, %lpad.i
  %.pn131.pn.pn.i = phi { ptr, i32 } [ %44, %lpad.i ], [ %.pn131.i, %ehcleanup59.i ], [ %.pn131.pn137.i, %delete.notnull.i.i112.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn131.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i101.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z54benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  %call4.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont3.i unwind label %ehcleanup59.thread.i

invoke.cont3.i:                                   ; preds = %invoke.cont.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont3.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont3.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i73.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i73.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  br label %for.body.i77.i

for.body.i77.i:                                   ; preds = %for.body.i77.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i74.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i75.i.4, %for.body.i77.i ]
  %arrayidx.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i74.i
  %0 = load i32, ptr %arrayidx.i.i, align 4, !tbaa !95
  %conv.i.i = zext i32 %0 to i64
  %arrayidx2.i.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i74.i
  store i64 %conv.i.i, ptr %arrayidx2.i.i, align 8, !tbaa !147
  %indvars.iv.next.i75.i = add nuw nsw i64 %indvars.iv.i74.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i75.i
  %1 = load i32, ptr %arrayidx.i.i.1, align 4, !tbaa !95
  %conv.i.i.1 = zext i32 %1 to i64
  %arrayidx2.i.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i
  store i64 %conv.i.i.1, ptr %arrayidx2.i.i.1, align 8, !tbaa !147
  %indvars.iv.next.i75.i.1 = add nuw nsw i64 %indvars.iv.i74.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i75.i.1
  %2 = load i32, ptr %arrayidx.i.i.2, align 4, !tbaa !95
  %conv.i.i.2 = zext i32 %2 to i64
  %arrayidx2.i.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.1
  store i64 %conv.i.i.2, ptr %arrayidx2.i.i.2, align 8, !tbaa !147
  %indvars.iv.next.i75.i.2 = add nuw nsw i64 %indvars.iv.i74.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i75.i.2
  %3 = load i32, ptr %arrayidx.i.i.3, align 4, !tbaa !95
  %conv.i.i.3 = zext i32 %3 to i64
  %arrayidx2.i.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.2
  store i64 %conv.i.i.3, ptr %arrayidx2.i.i.3, align 8, !tbaa !147
  %indvars.iv.next.i75.i.3 = add nuw nsw i64 %indvars.iv.i74.i, 4
  %arrayidx.i.i.4 = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.next.i75.i.3
  %4 = load i32, ptr %arrayidx.i.i.4, align 4, !tbaa !95
  %conv.i.i.4 = zext i32 %4 to i64
  %arrayidx2.i.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i75.i.3
  store i64 %conv.i.i.4, ptr %arrayidx2.i.i.4, align 8, !tbaa !147
  %indvars.iv.next.i75.i.4 = add nuw nsw i64 %indvars.iv.i74.i, 5
  %exitcond.not.i76.i.4 = icmp eq i64 %indvars.iv.next.i75.i.4, 10000
  br i1 %exitcond.not.i76.i.4, label %vector.body, label %for.body.i77.i, !llvm.loop !392

vector.body:                                      ; preds = %for.body.i77.i, %vector.body
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %for.body.i77.i ]
  %5 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <2 x i32>, ptr %5, align 4, !tbaa !95
  %6 = getelementptr inbounds i32, ptr %5, i64 2
  %wide.load27 = load <2 x i32>, ptr %6, align 4, !tbaa !95
  %7 = zext <2 x i32> %wide.load to <2 x i64>
  %8 = zext <2 x i32> %wide.load27 to <2 x i64>
  %9 = getelementptr inbounds i64, ptr %call1.i, i64 %index
  store <2 x i64> %7, ptr %9, align 8, !tbaa !147
  %10 = getelementptr inbounds i64, ptr %9, i64 2
  store <2 x i64> %8, ptr %10, align 8, !tbaa !147
  %index.next = or i64 %index, 4
  %11 = getelementptr inbounds i32, ptr %call.i, i64 %index.next
  %wide.load.1 = load <2 x i32>, ptr %11, align 4, !tbaa !95
  %12 = getelementptr inbounds i32, ptr %11, i64 2
  %wide.load27.1 = load <2 x i32>, ptr %12, align 4, !tbaa !95
  %13 = zext <2 x i32> %wide.load.1 to <2 x i64>
  %14 = zext <2 x i32> %wide.load27.1 to <2 x i64>
  %15 = getelementptr inbounds i64, ptr %call1.i, i64 %index.next
  store <2 x i64> %13, ptr %15, align 8, !tbaa !147
  %16 = getelementptr inbounds i64, ptr %15, i64 2
  store <2 x i64> %14, ptr %16, align 8, !tbaa !147
  %index.next.1 = add nuw nsw i64 %index, 8
  %17 = icmp eq i64 %index.next.1, 10000
  br i1 %17, label %for.body.i, label %vector.body, !llvm.loop !398

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i78.i.1 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i
  %18 = load i64, ptr %arrayidx.i78.i.1, align 8, !tbaa !147
  %arrayidx.i79.i.1 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i
  %19 = load i64, ptr %arrayidx.i79.i.1, align 8, !tbaa !147
  %cmp16.not.i.1 = icmp eq i64 %18, %19
  br i1 %cmp16.not.i.1, label %for.cond.i.1, label %if.then.i

for.cond.i.1:                                     ; preds = %for.cond.i
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i78.i.2 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.1
  %20 = load i64, ptr %arrayidx.i78.i.2, align 8, !tbaa !147
  %arrayidx.i79.i.2 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.1
  %21 = load i64, ptr %arrayidx.i79.i.2, align 8, !tbaa !147
  %cmp16.not.i.2 = icmp eq i64 %20, %21
  br i1 %cmp16.not.i.2, label %for.cond.i.2, label %if.then.i

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i78.i.3 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.2
  %22 = load i64, ptr %arrayidx.i78.i.3, align 8, !tbaa !147
  %arrayidx.i79.i.3 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.2
  %23 = load i64, ptr %arrayidx.i79.i.3, align 8, !tbaa !147
  %cmp16.not.i.3 = icmp eq i64 %22, %23
  br i1 %cmp16.not.i.3, label %for.cond.i.3, label %if.then.i

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %arrayidx.i78.i.4 = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.next.i.3
  %24 = load i64, ptr %arrayidx.i78.i.4, align 8, !tbaa !147
  %arrayidx.i79.i.4 = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.next.i.3
  %25 = load i64, ptr %arrayidx.i79.i.4, align 8, !tbaa !147
  %cmp16.not.i.4 = icmp eq i64 %24, %25
  br i1 %cmp16.not.i.4, label %for.cond.i.4, label %if.then.i

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %indvars.iv.next.i.4 = add nuw nsw i64 %indvars.iv.i, 5
  %exitcond.not.i.4 = icmp eq i64 %indvars.iv.next.i.4, 10000
  br i1 %exitcond.not.i.4, label %for.cond.cleanup.i, label %for.body.i, !llvm.loop !394

for.cond.cleanup.i:                               ; preds = %for.cond.i.4
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %26 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %27 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond44.preheader.i unwind label %lpad41.i

for.cond44.preheader.i:                           ; preds = %for.cond.cleanup.i
  %tobool.not.i.i.i = icmp ne i8 %26, 0
  %cmp.not.i.not141145.i = icmp eq i64 %27, 0
  %cmp.not.i.not141.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not141145.i
  br i1 %cmp.not.i.not141.i, label %if.end.i.i, label %for.body48.i, !prof !42

lpad.i:                                           ; preds = %entry
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup61.i

ehcleanup59.thread.i:                             ; preds = %invoke.cont.i
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i112.i

lpad5.loopexit.i:                                 ; preds = %for.body.i.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body.i:                                       ; preds = %vector.body, %for.cond.i.4
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.4, %for.cond.i.4 ], [ 0, %vector.body ]
  %arrayidx.i78.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i
  %30 = load i64, ptr %arrayidx.i78.i, align 8, !tbaa !147
  %arrayidx.i79.i = getelementptr inbounds i64, ptr %call4.i, i64 %indvars.iv.i
  %31 = load i64, ptr %arrayidx.i79.i, align 8, !tbaa !147
  %cmp16.not.i = icmp eq i64 %30, %31
  br i1 %cmp16.not.i, label %for.cond.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.i.3, %for.cond.i.2, %for.cond.i.1, %for.cond.i, %for.body.i
  %indvars.iv.i.lcssa = phi i64 [ %indvars.iv.i, %for.body.i ], [ %indvars.iv.next.i, %for.cond.i ], [ %indvars.iv.next.i.1, %for.cond.i.1 ], [ %indvars.iv.next.i.2, %for.cond.i.2 ], [ %indvars.iv.next.i.3, %for.cond.i.3 ]
  %.lcssa = phi i64 [ %31, %for.body.i ], [ %19, %for.cond.i ], [ %21, %for.cond.i.1 ], [ %23, %for.cond.i.2 ], [ %25, %for.cond.i.3 ]
  %arrayidx.i78.i.le = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i.lcssa
  %call1.i81.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, ptr noundef nonnull @.str.146, i64 noundef 34)
          to label %invoke.cont18.i unwind label %lpad17.i

invoke.cont18.i:                                  ; preds = %if.then.i
  %arrayidx.i82.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.lcssa
  %32 = load i32, ptr %arrayidx.i82.i, align 4, !tbaa !95
  %conv.i83.i = zext i32 %32 to i64
  %call.i84.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i64 noundef %conv.i83.i)
          to label %invoke.cont22.i unwind label %lpad17.i

invoke.cont22.i:                                  ; preds = %invoke.cont18.i
  %call1.i87.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, ptr noundef nonnull @.str.147, i64 noundef 19)
          to label %invoke.cont24.i unwind label %lpad17.i

invoke.cont24.i:                                  ; preds = %invoke.cont22.i
  %33 = load i64, ptr %arrayidx.i78.i.le, align 8, !tbaa !147
  %call.i90.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i84.i, i64 noundef %33)
          to label %invoke.cont28.i unwind label %lpad17.i

invoke.cont28.i:                                  ; preds = %invoke.cont24.i
  %call1.i93.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, ptr noundef nonnull @.str.148, i64 noundef 12)
          to label %invoke.cont30.i unwind label %lpad17.i

invoke.cont30.i:                                  ; preds = %invoke.cont28.i
  %call.i96.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %call.i90.i, i64 noundef %.lcssa)
          to label %invoke.cont34.i unwind label %lpad17.i

invoke.cont34.i:                                  ; preds = %invoke.cont30.i
  %call37.i = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %call.i96.i, ptr noundef nonnull @.str.149)
          to label %invoke.cont36.i unwind label %lpad17.i

invoke.cont36.i:                                  ; preds = %invoke.cont34.i
  call void @exit(i32 noundef 1) #12
  unreachable

lpad17.i:                                         ; preds = %invoke.cont34.i, %invoke.cont30.i, %invoke.cont28.i, %invoke.cont24.i, %invoke.cont22.i, %invoke.cont18.i, %if.then.i
  %34 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

if.end.i.i:                                       ; preds = %invoke.cont52.i, %for.cond44.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %delete.notnull.i.i.i unwind label %lpad41.i

delete.notnull.i.i.i:                             ; preds = %if.end.i.i
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %35 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i100.i = icmp eq ptr %35, null
  br i1 %cmp.not.i100.i, label %_ZL28benchForTruncOrZextVecInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i101.i

delete.notnull.i.i101.i:                          ; preds = %delete.notnull.i.i.i
  call void @_ZdaPv(ptr noundef nonnull %35) #13
  br label %_ZL28benchForTruncOrZextVecInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad41.i:                                         ; preds = %if.end.i.i, %for.cond.cleanup.i
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59.i

for.body48.i:                                     ; preds = %for.cond44.preheader.i, %invoke.cont52.i
  %__begin1.sroa.0.0142.i = phi i64 [ %dec.i.i, %invoke.cont52.i ], [ %27, %for.cond44.preheader.i ]
  %37 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %37) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %38 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body33

vector.body33:                                    ; preds = %vector.body33, %for.body48.i
  %index34 = phi i64 [ 0, %for.body48.i ], [ %index.next37.1, %vector.body33 ]
  %39 = getelementptr inbounds i32, ptr %call.i, i64 %index34
  %wide.load35 = load <2 x i32>, ptr %39, align 4, !tbaa !95
  %40 = getelementptr inbounds i32, ptr %39, i64 2
  %wide.load36 = load <2 x i32>, ptr %40, align 4, !tbaa !95
  %41 = zext <2 x i32> %wide.load35 to <2 x i64>
  %42 = zext <2 x i32> %wide.load36 to <2 x i64>
  %43 = getelementptr inbounds i64, ptr %38, i64 %index34
  store <2 x i64> %41, ptr %43, align 8, !tbaa !147
  %44 = getelementptr inbounds i64, ptr %43, i64 2
  store <2 x i64> %42, ptr %44, align 8, !tbaa !147
  %index.next37 = or i64 %index34, 4
  %45 = getelementptr inbounds i32, ptr %call.i, i64 %index.next37
  %wide.load35.1 = load <2 x i32>, ptr %45, align 4, !tbaa !95
  %46 = getelementptr inbounds i32, ptr %45, i64 2
  %wide.load36.1 = load <2 x i32>, ptr %46, align 4, !tbaa !95
  %47 = zext <2 x i32> %wide.load35.1 to <2 x i64>
  %48 = zext <2 x i32> %wide.load36.1 to <2 x i64>
  %49 = getelementptr inbounds i64, ptr %38, i64 %index.next37
  store <2 x i64> %47, ptr %49, align 8, !tbaa !147
  %50 = getelementptr inbounds i64, ptr %49, i64 2
  store <2 x i64> %48, ptr %50, align 8, !tbaa !147
  %index.next37.1 = add nuw nsw i64 %index34, 8
  %51 = icmp eq i64 %index.next37.1, 10000
  br i1 %51, label %invoke.cont52.i, label %vector.body33, !llvm.loop !399

invoke.cont52.i:                                  ; preds = %vector.body33
  %dec.i.i = add i64 %__begin1.sroa.0.0142.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body48.i, !prof !42

ehcleanup59.i:                                    ; preds = %lpad41.i, %lpad17.i, %lpad5.loopexit.i
  %.pn131.i = phi { ptr, i32 } [ %34, %lpad17.i ], [ %36, %lpad41.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %call4.i) #13
  %.pr.i = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i111.i = icmp eq ptr %.pr.i, null
  br i1 %cmp.not.i111.i, label %ehcleanup61.i, label %delete.notnull.i.i112.i

delete.notnull.i.i112.i:                          ; preds = %ehcleanup59.i, %ehcleanup59.thread.i
  %.pn131.pn137.i = phi { ptr, i32 } [ %29, %ehcleanup59.thread.i ], [ %.pn131.i, %ehcleanup59.i ]
  %52 = phi ptr [ %call1.i, %ehcleanup59.thread.i ], [ %.pr.i, %ehcleanup59.i ]
  call void @_ZdaPv(ptr noundef nonnull %52) #13
  br label %ehcleanup61.i

ehcleanup61.i:                                    ; preds = %delete.notnull.i.i112.i, %ehcleanup59.i, %lpad.i
  %.pn131.pn.pn.i = phi { ptr, i32 } [ %28, %lpad.i ], [ %.pn131.i, %ehcleanup59.i ], [ %.pn131.pn137.i, %delete.notnull.i.i112.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn131.pn.pn.i

_ZL28benchForTruncOrZextVecInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %delete.notnull.i.i.i, %delete.notnull.i.i101.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i31.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  store i64 0, ptr %distrib.i32.i, align 8, !tbaa !144
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i33.i, align 8, !tbaa !146
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i34.i
  store i64 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 8, !tbaa !147
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %arrayidx.i = getelementptr inbounds i32, ptr %call.i, i64 9984
  %arrayidx.i.1 = getelementptr inbounds i32, ptr %call.i, i64 9985
  %arrayidx.i.2 = getelementptr inbounds i32, ptr %call.i, i64 9986
  %arrayidx.i.3 = getelementptr inbounds i32, ptr %call.i, i64 9987
  %arrayidx.i.4 = getelementptr inbounds i32, ptr %call.i, i64 9988
  %arrayidx.i.5 = getelementptr inbounds i32, ptr %call.i, i64 9989
  %arrayidx.i.6 = getelementptr inbounds i32, ptr %call.i, i64 9990
  %arrayidx.i.7 = getelementptr inbounds i32, ptr %call.i, i64 9991
  %arrayidx.i.8 = getelementptr inbounds i32, ptr %call.i, i64 9992
  %arrayidx.i.9 = getelementptr inbounds i32, ptr %call.i, i64 9993
  %arrayidx.i.10 = getelementptr inbounds i32, ptr %call.i, i64 9994
  %arrayidx.i.11 = getelementptr inbounds i32, ptr %call.i, i64 9995
  %arrayidx.i.12 = getelementptr inbounds i32, ptr %call.i, i64 9996
  %arrayidx.i.13 = getelementptr inbounds i32, ptr %call.i, i64 9997
  %arrayidx.i.14 = getelementptr inbounds i32, ptr %call.i, i64 9998
  %arrayidx.i.15 = getelementptr inbounds i32, ptr %call.i, i64 9999
  br label %for.body.i

if.end.i.i:                                       ; preds = %for.body.i1, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i1
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %for.body.i1 ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next, %vector.body ]
  %6 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <8 x i32>, ptr %6, align 4, !tbaa !95
  %7 = getelementptr inbounds i32, ptr %6, i64 8
  %wide.load5 = load <8 x i32>, ptr %7, align 4, !tbaa !95
  %8 = getelementptr inbounds i32, ptr %6, i64 16
  %wide.load6 = load <8 x i32>, ptr %8, align 4, !tbaa !95
  %9 = getelementptr inbounds i32, ptr %6, i64 24
  %wide.load7 = load <8 x i32>, ptr %9, align 4, !tbaa !95
  %10 = zext <8 x i32> %wide.load to <8 x i64>
  %11 = zext <8 x i32> %wide.load5 to <8 x i64>
  %12 = zext <8 x i32> %wide.load6 to <8 x i64>
  %13 = zext <8 x i32> %wide.load7 to <8 x i64>
  %14 = getelementptr inbounds i64, ptr %5, i64 %index
  %wide.load8 = load <8 x i64>, ptr %14, align 8, !tbaa !147
  %15 = getelementptr inbounds i64, ptr %14, i64 8
  %wide.load9 = load <8 x i64>, ptr %15, align 8, !tbaa !147
  %16 = getelementptr inbounds i64, ptr %14, i64 16
  %wide.load10 = load <8 x i64>, ptr %16, align 8, !tbaa !147
  %17 = getelementptr inbounds i64, ptr %14, i64 24
  %wide.load11 = load <8 x i64>, ptr %17, align 8, !tbaa !147
  %18 = add <8 x i64> %wide.load8, %10
  %19 = add <8 x i64> %wide.load9, %11
  %20 = add <8 x i64> %wide.load10, %12
  %21 = add <8 x i64> %wide.load11, %13
  store <8 x i64> %18, ptr %14, align 8, !tbaa !147
  store <8 x i64> %19, ptr %15, align 8, !tbaa !147
  store <8 x i64> %20, ptr %16, align 8, !tbaa !147
  store <8 x i64> %21, ptr %17, align 8, !tbaa !147
  %index.next = add nuw i64 %index, 32
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1, label %vector.body, !llvm.loop !400

for.body.i1:                                      ; preds = %vector.body
  %23 = load i32, ptr %arrayidx.i, align 4, !tbaa !95
  %conv.i = zext i32 %23 to i64
  %arrayidx2.i = getelementptr inbounds i64, ptr %5, i64 9984
  %24 = load i64, ptr %arrayidx2.i, align 8, !tbaa !147
  %add.i = add i64 %24, %conv.i
  store i64 %add.i, ptr %arrayidx2.i, align 8, !tbaa !147
  %25 = load i32, ptr %arrayidx.i.1, align 4, !tbaa !95
  %conv.i.1 = zext i32 %25 to i64
  %arrayidx2.i.1 = getelementptr inbounds i64, ptr %5, i64 9985
  %26 = load i64, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %add.i.1 = add i64 %26, %conv.i.1
  store i64 %add.i.1, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %27 = load i32, ptr %arrayidx.i.2, align 4, !tbaa !95
  %conv.i.2 = zext i32 %27 to i64
  %arrayidx2.i.2 = getelementptr inbounds i64, ptr %5, i64 9986
  %28 = load i64, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %add.i.2 = add i64 %28, %conv.i.2
  store i64 %add.i.2, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %29 = load i32, ptr %arrayidx.i.3, align 4, !tbaa !95
  %conv.i.3 = zext i32 %29 to i64
  %arrayidx2.i.3 = getelementptr inbounds i64, ptr %5, i64 9987
  %30 = load i64, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %add.i.3 = add i64 %30, %conv.i.3
  store i64 %add.i.3, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %31 = load i32, ptr %arrayidx.i.4, align 4, !tbaa !95
  %conv.i.4 = zext i32 %31 to i64
  %arrayidx2.i.4 = getelementptr inbounds i64, ptr %5, i64 9988
  %32 = load i64, ptr %arrayidx2.i.4, align 8, !tbaa !147
  %add.i.4 = add i64 %32, %conv.i.4
  store i64 %add.i.4, ptr %arrayidx2.i.4, align 8, !tbaa !147
  %33 = load i32, ptr %arrayidx.i.5, align 4, !tbaa !95
  %conv.i.5 = zext i32 %33 to i64
  %arrayidx2.i.5 = getelementptr inbounds i64, ptr %5, i64 9989
  %34 = load i64, ptr %arrayidx2.i.5, align 8, !tbaa !147
  %add.i.5 = add i64 %34, %conv.i.5
  store i64 %add.i.5, ptr %arrayidx2.i.5, align 8, !tbaa !147
  %35 = load i32, ptr %arrayidx.i.6, align 4, !tbaa !95
  %conv.i.6 = zext i32 %35 to i64
  %arrayidx2.i.6 = getelementptr inbounds i64, ptr %5, i64 9990
  %36 = load i64, ptr %arrayidx2.i.6, align 8, !tbaa !147
  %add.i.6 = add i64 %36, %conv.i.6
  store i64 %add.i.6, ptr %arrayidx2.i.6, align 8, !tbaa !147
  %37 = load i32, ptr %arrayidx.i.7, align 4, !tbaa !95
  %conv.i.7 = zext i32 %37 to i64
  %arrayidx2.i.7 = getelementptr inbounds i64, ptr %5, i64 9991
  %38 = load i64, ptr %arrayidx2.i.7, align 8, !tbaa !147
  %add.i.7 = add i64 %38, %conv.i.7
  store i64 %add.i.7, ptr %arrayidx2.i.7, align 8, !tbaa !147
  %39 = load i32, ptr %arrayidx.i.8, align 4, !tbaa !95
  %conv.i.8 = zext i32 %39 to i64
  %arrayidx2.i.8 = getelementptr inbounds i64, ptr %5, i64 9992
  %40 = load i64, ptr %arrayidx2.i.8, align 8, !tbaa !147
  %add.i.8 = add i64 %40, %conv.i.8
  store i64 %add.i.8, ptr %arrayidx2.i.8, align 8, !tbaa !147
  %41 = load i32, ptr %arrayidx.i.9, align 4, !tbaa !95
  %conv.i.9 = zext i32 %41 to i64
  %arrayidx2.i.9 = getelementptr inbounds i64, ptr %5, i64 9993
  %42 = load i64, ptr %arrayidx2.i.9, align 8, !tbaa !147
  %add.i.9 = add i64 %42, %conv.i.9
  store i64 %add.i.9, ptr %arrayidx2.i.9, align 8, !tbaa !147
  %43 = load i32, ptr %arrayidx.i.10, align 4, !tbaa !95
  %conv.i.10 = zext i32 %43 to i64
  %arrayidx2.i.10 = getelementptr inbounds i64, ptr %5, i64 9994
  %44 = load i64, ptr %arrayidx2.i.10, align 8, !tbaa !147
  %add.i.10 = add i64 %44, %conv.i.10
  store i64 %add.i.10, ptr %arrayidx2.i.10, align 8, !tbaa !147
  %45 = load i32, ptr %arrayidx.i.11, align 4, !tbaa !95
  %conv.i.11 = zext i32 %45 to i64
  %arrayidx2.i.11 = getelementptr inbounds i64, ptr %5, i64 9995
  %46 = load i64, ptr %arrayidx2.i.11, align 8, !tbaa !147
  %add.i.11 = add i64 %46, %conv.i.11
  store i64 %add.i.11, ptr %arrayidx2.i.11, align 8, !tbaa !147
  %47 = load i32, ptr %arrayidx.i.12, align 4, !tbaa !95
  %conv.i.12 = zext i32 %47 to i64
  %arrayidx2.i.12 = getelementptr inbounds i64, ptr %5, i64 9996
  %48 = load i64, ptr %arrayidx2.i.12, align 8, !tbaa !147
  %add.i.12 = add i64 %48, %conv.i.12
  store i64 %add.i.12, ptr %arrayidx2.i.12, align 8, !tbaa !147
  %49 = load i32, ptr %arrayidx.i.13, align 4, !tbaa !95
  %conv.i.13 = zext i32 %49 to i64
  %arrayidx2.i.13 = getelementptr inbounds i64, ptr %5, i64 9997
  %50 = load i64, ptr %arrayidx2.i.13, align 8, !tbaa !147
  %add.i.13 = add i64 %50, %conv.i.13
  store i64 %add.i.13, ptr %arrayidx2.i.13, align 8, !tbaa !147
  %51 = load i32, ptr %arrayidx.i.14, align 4, !tbaa !95
  %conv.i.14 = zext i32 %51 to i64
  %arrayidx2.i.14 = getelementptr inbounds i64, ptr %5, i64 9998
  %52 = load i64, ptr %arrayidx2.i.14, align 8, !tbaa !147
  %add.i.14 = add i64 %52, %conv.i.14
  store i64 %add.i.14, ptr %arrayidx2.i.14, align 8, !tbaa !147
  %53 = load i32, ptr %arrayidx.i.15, align 4, !tbaa !95
  %conv.i.15 = zext i32 %53 to i64
  %arrayidx2.i.15 = getelementptr inbounds i64, ptr %5, i64 9999
  %54 = load i64, ptr %arrayidx2.i.15, align 8, !tbaa !147
  %add.i.15 = add i64 %54, %conv.i.15
  store i64 %add.i.15, ptr %arrayidx2.i.15, align 8, !tbaa !147
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %55 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %55, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %56 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %56) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %55, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i31.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  store i64 0, ptr %distrib.i32.i, align 8, !tbaa !144
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i33.i, align 8, !tbaa !146
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i34.i
  store i64 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 8, !tbaa !147
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i.preheader, !prof !42

for.body.i.preheader:                             ; preds = %for.cond.preheader.i
  %arrayidx.i = getelementptr inbounds i32, ptr %call.i, i64 9984
  %arrayidx.i.1 = getelementptr inbounds i32, ptr %call.i, i64 9985
  %arrayidx.i.2 = getelementptr inbounds i32, ptr %call.i, i64 9986
  %arrayidx.i.3 = getelementptr inbounds i32, ptr %call.i, i64 9987
  %arrayidx.i.4 = getelementptr inbounds i32, ptr %call.i, i64 9988
  %arrayidx.i.5 = getelementptr inbounds i32, ptr %call.i, i64 9989
  %arrayidx.i.6 = getelementptr inbounds i32, ptr %call.i, i64 9990
  %arrayidx.i.7 = getelementptr inbounds i32, ptr %call.i, i64 9991
  %arrayidx.i.8 = getelementptr inbounds i32, ptr %call.i, i64 9992
  %arrayidx.i.9 = getelementptr inbounds i32, ptr %call.i, i64 9993
  %arrayidx.i.10 = getelementptr inbounds i32, ptr %call.i, i64 9994
  %arrayidx.i.11 = getelementptr inbounds i32, ptr %call.i, i64 9995
  %arrayidx.i.12 = getelementptr inbounds i32, ptr %call.i, i64 9996
  %arrayidx.i.13 = getelementptr inbounds i32, ptr %call.i, i64 9997
  %arrayidx.i.14 = getelementptr inbounds i32, ptr %call.i, i64 9998
  %arrayidx.i.15 = getelementptr inbounds i32, ptr %call.i, i64 9999
  br label %for.body.i

if.end.i.i:                                       ; preds = %for.body.i1, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i1
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %for.body.i1 ], [ %1, %for.body.i.preheader ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next, %vector.body ]
  %6 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <16 x i32>, ptr %6, align 4, !tbaa !95
  %7 = getelementptr inbounds i32, ptr %6, i64 16
  %wide.load5 = load <16 x i32>, ptr %7, align 4, !tbaa !95
  %8 = getelementptr inbounds i32, ptr %6, i64 32
  %wide.load6 = load <16 x i32>, ptr %8, align 4, !tbaa !95
  %9 = getelementptr inbounds i32, ptr %6, i64 48
  %wide.load7 = load <16 x i32>, ptr %9, align 4, !tbaa !95
  %10 = zext <16 x i32> %wide.load to <16 x i64>
  %11 = zext <16 x i32> %wide.load5 to <16 x i64>
  %12 = zext <16 x i32> %wide.load6 to <16 x i64>
  %13 = zext <16 x i32> %wide.load7 to <16 x i64>
  %14 = getelementptr inbounds i64, ptr %5, i64 %index
  %wide.load8 = load <16 x i64>, ptr %14, align 8, !tbaa !147
  %15 = getelementptr inbounds i64, ptr %14, i64 16
  %wide.load9 = load <16 x i64>, ptr %15, align 8, !tbaa !147
  %16 = getelementptr inbounds i64, ptr %14, i64 32
  %wide.load10 = load <16 x i64>, ptr %16, align 8, !tbaa !147
  %17 = getelementptr inbounds i64, ptr %14, i64 48
  %wide.load11 = load <16 x i64>, ptr %17, align 8, !tbaa !147
  %18 = add <16 x i64> %wide.load8, %10
  %19 = add <16 x i64> %wide.load9, %11
  %20 = add <16 x i64> %wide.load10, %12
  %21 = add <16 x i64> %wide.load11, %13
  store <16 x i64> %18, ptr %14, align 8, !tbaa !147
  store <16 x i64> %19, ptr %15, align 8, !tbaa !147
  store <16 x i64> %20, ptr %16, align 8, !tbaa !147
  store <16 x i64> %21, ptr %17, align 8, !tbaa !147
  %index.next = add nuw i64 %index, 64
  %22 = icmp eq i64 %index.next, 9984
  br i1 %22, label %for.body.i1, label %vector.body, !llvm.loop !401

for.body.i1:                                      ; preds = %vector.body
  %23 = load i32, ptr %arrayidx.i, align 4, !tbaa !95
  %conv.i = zext i32 %23 to i64
  %arrayidx2.i = getelementptr inbounds i64, ptr %5, i64 9984
  %24 = load i64, ptr %arrayidx2.i, align 8, !tbaa !147
  %add.i = add i64 %24, %conv.i
  store i64 %add.i, ptr %arrayidx2.i, align 8, !tbaa !147
  %25 = load i32, ptr %arrayidx.i.1, align 4, !tbaa !95
  %conv.i.1 = zext i32 %25 to i64
  %arrayidx2.i.1 = getelementptr inbounds i64, ptr %5, i64 9985
  %26 = load i64, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %add.i.1 = add i64 %26, %conv.i.1
  store i64 %add.i.1, ptr %arrayidx2.i.1, align 8, !tbaa !147
  %27 = load i32, ptr %arrayidx.i.2, align 4, !tbaa !95
  %conv.i.2 = zext i32 %27 to i64
  %arrayidx2.i.2 = getelementptr inbounds i64, ptr %5, i64 9986
  %28 = load i64, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %add.i.2 = add i64 %28, %conv.i.2
  store i64 %add.i.2, ptr %arrayidx2.i.2, align 8, !tbaa !147
  %29 = load i32, ptr %arrayidx.i.3, align 4, !tbaa !95
  %conv.i.3 = zext i32 %29 to i64
  %arrayidx2.i.3 = getelementptr inbounds i64, ptr %5, i64 9987
  %30 = load i64, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %add.i.3 = add i64 %30, %conv.i.3
  store i64 %add.i.3, ptr %arrayidx2.i.3, align 8, !tbaa !147
  %31 = load i32, ptr %arrayidx.i.4, align 4, !tbaa !95
  %conv.i.4 = zext i32 %31 to i64
  %arrayidx2.i.4 = getelementptr inbounds i64, ptr %5, i64 9988
  %32 = load i64, ptr %arrayidx2.i.4, align 8, !tbaa !147
  %add.i.4 = add i64 %32, %conv.i.4
  store i64 %add.i.4, ptr %arrayidx2.i.4, align 8, !tbaa !147
  %33 = load i32, ptr %arrayidx.i.5, align 4, !tbaa !95
  %conv.i.5 = zext i32 %33 to i64
  %arrayidx2.i.5 = getelementptr inbounds i64, ptr %5, i64 9989
  %34 = load i64, ptr %arrayidx2.i.5, align 8, !tbaa !147
  %add.i.5 = add i64 %34, %conv.i.5
  store i64 %add.i.5, ptr %arrayidx2.i.5, align 8, !tbaa !147
  %35 = load i32, ptr %arrayidx.i.6, align 4, !tbaa !95
  %conv.i.6 = zext i32 %35 to i64
  %arrayidx2.i.6 = getelementptr inbounds i64, ptr %5, i64 9990
  %36 = load i64, ptr %arrayidx2.i.6, align 8, !tbaa !147
  %add.i.6 = add i64 %36, %conv.i.6
  store i64 %add.i.6, ptr %arrayidx2.i.6, align 8, !tbaa !147
  %37 = load i32, ptr %arrayidx.i.7, align 4, !tbaa !95
  %conv.i.7 = zext i32 %37 to i64
  %arrayidx2.i.7 = getelementptr inbounds i64, ptr %5, i64 9991
  %38 = load i64, ptr %arrayidx2.i.7, align 8, !tbaa !147
  %add.i.7 = add i64 %38, %conv.i.7
  store i64 %add.i.7, ptr %arrayidx2.i.7, align 8, !tbaa !147
  %39 = load i32, ptr %arrayidx.i.8, align 4, !tbaa !95
  %conv.i.8 = zext i32 %39 to i64
  %arrayidx2.i.8 = getelementptr inbounds i64, ptr %5, i64 9992
  %40 = load i64, ptr %arrayidx2.i.8, align 8, !tbaa !147
  %add.i.8 = add i64 %40, %conv.i.8
  store i64 %add.i.8, ptr %arrayidx2.i.8, align 8, !tbaa !147
  %41 = load i32, ptr %arrayidx.i.9, align 4, !tbaa !95
  %conv.i.9 = zext i32 %41 to i64
  %arrayidx2.i.9 = getelementptr inbounds i64, ptr %5, i64 9993
  %42 = load i64, ptr %arrayidx2.i.9, align 8, !tbaa !147
  %add.i.9 = add i64 %42, %conv.i.9
  store i64 %add.i.9, ptr %arrayidx2.i.9, align 8, !tbaa !147
  %43 = load i32, ptr %arrayidx.i.10, align 4, !tbaa !95
  %conv.i.10 = zext i32 %43 to i64
  %arrayidx2.i.10 = getelementptr inbounds i64, ptr %5, i64 9994
  %44 = load i64, ptr %arrayidx2.i.10, align 8, !tbaa !147
  %add.i.10 = add i64 %44, %conv.i.10
  store i64 %add.i.10, ptr %arrayidx2.i.10, align 8, !tbaa !147
  %45 = load i32, ptr %arrayidx.i.11, align 4, !tbaa !95
  %conv.i.11 = zext i32 %45 to i64
  %arrayidx2.i.11 = getelementptr inbounds i64, ptr %5, i64 9995
  %46 = load i64, ptr %arrayidx2.i.11, align 8, !tbaa !147
  %add.i.11 = add i64 %46, %conv.i.11
  store i64 %add.i.11, ptr %arrayidx2.i.11, align 8, !tbaa !147
  %47 = load i32, ptr %arrayidx.i.12, align 4, !tbaa !95
  %conv.i.12 = zext i32 %47 to i64
  %arrayidx2.i.12 = getelementptr inbounds i64, ptr %5, i64 9996
  %48 = load i64, ptr %arrayidx2.i.12, align 8, !tbaa !147
  %add.i.12 = add i64 %48, %conv.i.12
  store i64 %add.i.12, ptr %arrayidx2.i.12, align 8, !tbaa !147
  %49 = load i32, ptr %arrayidx.i.13, align 4, !tbaa !95
  %conv.i.13 = zext i32 %49 to i64
  %arrayidx2.i.13 = getelementptr inbounds i64, ptr %5, i64 9997
  %50 = load i64, ptr %arrayidx2.i.13, align 8, !tbaa !147
  %add.i.13 = add i64 %50, %conv.i.13
  store i64 %add.i.13, ptr %arrayidx2.i.13, align 8, !tbaa !147
  %51 = load i32, ptr %arrayidx.i.14, align 4, !tbaa !95
  %conv.i.14 = zext i32 %51 to i64
  %arrayidx2.i.14 = getelementptr inbounds i64, ptr %5, i64 9998
  %52 = load i64, ptr %arrayidx2.i.14, align 8, !tbaa !147
  %add.i.14 = add i64 %52, %conv.i.14
  store i64 %add.i.14, ptr %arrayidx2.i.14, align 8, !tbaa !147
  %53 = load i32, ptr %arrayidx.i.15, align 4, !tbaa !95
  %conv.i.15 = zext i32 %53 to i64
  %arrayidx2.i.15 = getelementptr inbounds i64, ptr %5, i64 9999
  %54 = load i64, ptr %arrayidx2.i.15, align 8, !tbaa !147
  %add.i.15 = add i64 %54, %conv.i.15
  store i64 %add.i.15, ptr %arrayidx2.i.15, align 8, !tbaa !147
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %55 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %55, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %56 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %56) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %55, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint64_t_RN9benchmark5StateE(ptr noundef nonnull align 8 dereferenceable(144) %state) #3 personality ptr @__gxx_personality_v0 {
entry:
  %distrib.i32.i = alloca %"class.std::uniform_int_distribution.65", align 8
  %distrib.i.i = alloca %"class.std::uniform_int_distribution.54", align 4
  %B.i = alloca %"class.std::unique_ptr.55", align 8
  %call.i = tail call noalias noundef nonnull dereferenceable(40000) ptr @_Znam(i64 noundef 40000) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %B.i) #11
  %call1.i = invoke noalias noundef nonnull dereferenceable(80000) ptr @_Znam(i64 noundef 80000) #10
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %entry
  store ptr %call1.i, ptr %B.i, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %distrib.i.i) #11
  store i32 0, ptr %distrib.i.i, align 4, !tbaa !92
  %_M_b.i.i.i.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %distrib.i.i, i64 0, i32 1
  store i32 -1, ptr %_M_b.i.i.i.i, align 4, !tbaa !94
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call.i.i.noexc.i, %invoke.cont.i
  %indvars.iv.i.i = phi i64 [ 0, %invoke.cont.i ], [ %indvars.iv.next.i.i, %call.i.i.noexc.i ]
  %call.i.i31.i = invoke noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 4 dereferenceable(8) %distrib.i.i)
          to label %call.i.i.noexc.i unwind label %lpad5.loopexit.split-lp.i

call.i.i.noexc.i:                                 ; preds = %for.body.i.i
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i, i64 %indvars.iv.i.i
  store i32 %call.i.i31.i, ptr %arrayidx.i.i.i, align 4, !tbaa !95
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, 10000
  br i1 %exitcond.not.i.i, label %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i.i, !llvm.loop !96

_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %distrib.i.i) #11
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  store i64 0, ptr %distrib.i32.i, align 8, !tbaa !144
  %_M_b.i.i.i33.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %distrib.i32.i, i64 0, i32 1
  store i64 -1, ptr %_M_b.i.i.i33.i, align 8, !tbaa !146
  br label %for.body.i38.i

for.body.i38.i:                                   ; preds = %call.i.i.noexc39.i, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %indvars.iv.i34.i = phi i64 [ 0, %_ZL9init_dataIjEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i ], [ %indvars.iv.next.i36.i, %call.i.i.noexc39.i ]
  %call.i.i40.i = invoke noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i, ptr noundef nonnull align 8 dereferenceable(5000) @_ZL3rng, ptr noundef nonnull align 8 dereferenceable(16) %distrib.i32.i)
          to label %call.i.i.noexc39.i unwind label %lpad5.loopexit.i

call.i.i.noexc39.i:                               ; preds = %for.body.i38.i
  %arrayidx.i.i35.i = getelementptr inbounds i64, ptr %call1.i, i64 %indvars.iv.i34.i
  store i64 %call.i.i40.i, ptr %arrayidx.i.i35.i, align 8, !tbaa !147
  %indvars.iv.next.i36.i = add nuw nsw i64 %indvars.iv.i34.i, 1
  %exitcond.not.i37.i = icmp eq i64 %indvars.iv.next.i36.i, 10000
  br i1 %exitcond.not.i37.i, label %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, label %for.body.i38.i, !llvm.loop !148

_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i: ; preds = %call.i.i.noexc39.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %distrib.i32.i) #11
  %error_occurred_.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 5
  %0 = load i8, ptr %error_occurred_.i.i.i, align 2, !tbaa !23, !range !40, !noundef !41
  %max_iterations.i.i.i = getelementptr inbounds %"class.benchmark::State", ptr %state, i64 0, i32 2
  %1 = load i64, ptr %max_iterations.i.i.i, align 8
  invoke void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %for.cond.preheader.i unwind label %ehcleanup24.i

for.cond.preheader.i:                             ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i
  %tobool.not.i.i.i = icmp ne i8 %0, 0
  %cmp.not.i.not7173.i = icmp eq i64 %1, 0
  %cmp.not.i.not71.i = select i1 %tobool.not.i.i.i, i1 true, i1 %cmp.not.i.not7173.i
  br i1 %cmp.not.i.not71.i, label %if.end.i.i, label %for.body.i, !prof !42

if.end.i.i:                                       ; preds = %invoke.cont19.i, %for.cond.preheader.i
  invoke void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144) %state)
          to label %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i unwind label %ehcleanup24.i

_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i: ; preds = %if.end.i.i
  %2 = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i43.i = icmp eq ptr %2, null
  br i1 %cmp.not.i43.i, label %_ZL35benchForTruncOrZextVecWithAddInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit, label %delete.notnull.i.i44.i

delete.notnull.i.i44.i:                           ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i
  call void @_ZdaPv(ptr noundef nonnull %2) #13
  br label %_ZL35benchForTruncOrZextVecWithAddInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit

lpad.i:                                           ; preds = %entry
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup26.i

lpad5.loopexit.i:                                 ; preds = %for.body.i38.i
  %lpad.loopexit.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

lpad5.loopexit.split-lp.i:                        ; preds = %for.body.i.i
  %lpad.loopexit.split-lp.i = landingpad { ptr, i32 }
          cleanup
  br label %delete.notnull.i.i55.i

for.body.i:                                       ; preds = %for.cond.preheader.i, %invoke.cont19.i
  %__begin1.sroa.0.072.i = phi i64 [ %dec.i.i, %invoke.cont19.i ], [ %1, %for.cond.preheader.i ]
  %4 = load i64, ptr %B.i, align 8
  call void asm sideeffect "", "=*r|m,0,~{memory},~{dirflag},~{fpsr},~{flags}"(ptr nonnull elementtype(%"class.std::unique_ptr.55") %B.i, i64 %4) #11, !srcloc !43
  fence syncscope("singlethread") acq_rel
  %5 = load ptr, ptr %B.i, align 8, !tbaa !5
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %for.body.i
  %index = phi i64 [ 0, %for.body.i ], [ %index.next.1, %vector.body ]
  %6 = getelementptr inbounds i32, ptr %call.i, i64 %index
  %wide.load = load <2 x i32>, ptr %6, align 4, !tbaa !95
  %7 = getelementptr inbounds i32, ptr %6, i64 2
  %wide.load5 = load <2 x i32>, ptr %7, align 4, !tbaa !95
  %8 = zext <2 x i32> %wide.load to <2 x i64>
  %9 = zext <2 x i32> %wide.load5 to <2 x i64>
  %10 = getelementptr inbounds i64, ptr %5, i64 %index
  %wide.load6 = load <2 x i64>, ptr %10, align 8, !tbaa !147
  %11 = getelementptr inbounds i64, ptr %10, i64 2
  %wide.load7 = load <2 x i64>, ptr %11, align 8, !tbaa !147
  %12 = add <2 x i64> %wide.load6, %8
  %13 = add <2 x i64> %wide.load7, %9
  store <2 x i64> %12, ptr %10, align 8, !tbaa !147
  store <2 x i64> %13, ptr %11, align 8, !tbaa !147
  %index.next = or i64 %index, 4
  %14 = getelementptr inbounds i32, ptr %call.i, i64 %index.next
  %wide.load.1 = load <2 x i32>, ptr %14, align 4, !tbaa !95
  %15 = getelementptr inbounds i32, ptr %14, i64 2
  %wide.load5.1 = load <2 x i32>, ptr %15, align 4, !tbaa !95
  %16 = zext <2 x i32> %wide.load.1 to <2 x i64>
  %17 = zext <2 x i32> %wide.load5.1 to <2 x i64>
  %18 = getelementptr inbounds i64, ptr %5, i64 %index.next
  %wide.load6.1 = load <2 x i64>, ptr %18, align 8, !tbaa !147
  %19 = getelementptr inbounds i64, ptr %18, i64 2
  %wide.load7.1 = load <2 x i64>, ptr %19, align 8, !tbaa !147
  %20 = add <2 x i64> %wide.load6.1, %16
  %21 = add <2 x i64> %wide.load7.1, %17
  store <2 x i64> %20, ptr %18, align 8, !tbaa !147
  store <2 x i64> %21, ptr %19, align 8, !tbaa !147
  %index.next.1 = add nuw nsw i64 %index, 8
  %22 = icmp eq i64 %index.next.1, 10000
  br i1 %22, label %invoke.cont19.i, label %vector.body, !llvm.loop !402

invoke.cont19.i:                                  ; preds = %vector.body
  %dec.i.i = add i64 %__begin1.sroa.0.072.i, -1
  %cmp.not.i.not.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp.not.i.not.i, label %if.end.i.i, label %for.body.i, !prof !42

ehcleanup24.i:                                    ; preds = %_ZL9init_dataImEvRKSt10unique_ptrIA_T_St14default_deleteIS2_EEj.exit.i, %if.end.i.i
  %23 = landingpad { ptr, i32 }
          cleanup
  %.pre = load ptr, ptr %B.i, align 8, !tbaa !5
  %cmp.not.i54.i = icmp eq ptr %.pre, null
  br i1 %cmp.not.i54.i, label %ehcleanup26.i, label %delete.notnull.i.i55.i

delete.notnull.i.i55.i:                           ; preds = %lpad5.loopexit.split-lp.i, %lpad5.loopexit.i, %ehcleanup24.i
  %.pn.pn.i4 = phi { ptr, i32 } [ %23, %ehcleanup24.i ], [ %lpad.loopexit.split-lp.i, %lpad5.loopexit.split-lp.i ], [ %lpad.loopexit.i, %lpad5.loopexit.i ]
  %24 = phi ptr [ %.pre, %ehcleanup24.i ], [ %call1.i, %lpad5.loopexit.split-lp.i ], [ %call1.i, %lpad5.loopexit.i ]
  call void @_ZdaPv(ptr noundef nonnull %24) #13
  br label %ehcleanup26.i

ehcleanup26.i:                                    ; preds = %delete.notnull.i.i55.i, %ehcleanup24.i, %lpad.i
  %.pn.pn.pn.pn.i = phi { ptr, i32 } [ %3, %lpad.i ], [ %23, %ehcleanup24.i ], [ %.pn.pn.i4, %delete.notnull.i.i55.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  resume { ptr, i32 } %.pn.pn.pn.pn.i

_ZL35benchForTruncOrZextVecWithAddInLoopIjmEvRN9benchmark5StateEPFvPKT_PT0_iE.exit: ; preds = %_ZNSt10unique_ptrIA_mSt14default_deleteIS0_EED2Ev.exit.i, %delete.notnull.i.i44.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %B.i) #11
  call void @_ZdaPv(ptr noundef nonnull %call.i) #13
  ret void
}

declare void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216), ptr noundef) unnamed_addr #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znam(i64 noundef) local_unnamed_addr #4

; Function Attrs: inlinehint mustprogress uwtable
declare noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef) local_unnamed_addr #7

; Function Attrs: inlinehint mustprogress uwtable
declare noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h(ptr noundef nonnull align 8 dereferenceable(8), i8 noundef zeroext) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #8

; Function Attrs: uwtable
define linkonce_odr dso_local noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %this, ptr noundef nonnull align 8 dereferenceable(5000) %__urng, ptr noundef nonnull align 2 dereferenceable(4) %__param) local_unnamed_addr #3 comdat align 2 {
entry:
  %ref.tmp = alloca %"struct.std::uniform_int_distribution<unsigned short>::param_type", align 2
  %_M_b.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %__param, i64 0, i32 1
  %0 = load i16, ptr %_M_b.i, align 2, !tbaa !12
  %conv = zext i16 %0 to i64
  %1 = load i16, ptr %__param, align 2, !tbaa !9
  %conv3 = zext i16 %1 to i64
  %sub = sub nsw i64 %conv, %conv3
  %cmp = icmp ult i64 %sub, 4294967295
  br i1 %cmp, label %if.then, label %do.body.preheader

do.body.preheader:                                ; preds = %entry
  %_M_b.i37 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned short>::param_type", ptr %ref.tmp, i64 0, i32 1
  br label %do.body

if.then:                                          ; preds = %entry
  %2 = trunc i64 %sub to i32
  %conv4 = add nuw nsw i32 %2, 1
  %call.i = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %__urng)
  %conv.i = zext i32 %conv4 to i64
  %mul.i = mul i64 %call.i, %conv.i
  %conv1.i = trunc i64 %mul.i to i32
  %cmp.i.not = icmp ult i32 %2, %conv1.i
  br i1 %cmp.i.not, label %_ZNSt24uniform_int_distributionItE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %sub.i = xor i32 %2, -1
  %rem.i = urem i32 %sub.i, %conv4
  %cmp216.i = icmp ugt i32 %rem.i, %conv1.i
  br i1 %cmp216.i, label %while.body.i, label %_ZNSt24uniform_int_distributionItE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit

while.body.i:                                     ; preds = %if.then.i, %while.body.i
  %call3.i = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %__urng)
  %mul5.i = mul i64 %call3.i, %conv.i
  %conv6.i = trunc i64 %mul5.i to i32
  %cmp2.i = icmp ugt i32 %rem.i, %conv6.i
  br i1 %cmp2.i, label %while.body.i, label %_ZNSt24uniform_int_distributionItE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit, !llvm.loop !403

_ZNSt24uniform_int_distributionItE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit: ; preds = %while.body.i, %if.then, %if.then.i
  %__product.1.i = phi i64 [ %mul.i, %if.then ], [ %mul.i, %if.then.i ], [ %mul5.i, %while.body.i ]
  %shr.i = lshr i64 %__product.1.i, 32
  br label %if.end20

do.body:                                          ; preds = %do.body.preheader, %do.body
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ref.tmp) #11
  store i16 0, ptr %ref.tmp, align 2, !tbaa !9
  store i16 -1, ptr %_M_b.i37, align 2, !tbaa !12
  %call10 = call noundef zeroext i16 @_ZNSt24uniform_int_distributionItEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEtRT_RKNS0_10param_typeE(ptr noundef nonnull align 2 dereferenceable(4) %this, ptr noundef nonnull align 8 dereferenceable(5000) %__urng, ptr noundef nonnull align 2 dereferenceable(4) %ref.tmp)
  %conv11 = zext i16 %call10 to i64
  %mul = shl nuw nsw i64 %conv11, 32
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ref.tmp) #11
  %call12 = call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %__urng)
  %add14 = add i64 %mul, %call12
  %cmp15 = icmp ugt i64 %add14, %sub
  %cmp16 = icmp ult i64 %add14, %mul
  %3 = or i1 %cmp15, %cmp16
  br i1 %3, label %do.body, label %if.end20, !llvm.loop !404

if.end20:                                         ; preds = %do.body, %_ZNSt24uniform_int_distributionItE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit
  %__ret.0 = phi i64 [ %shr.i, %_ZNSt24uniform_int_distributionItE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit ], [ %add14, %do.body ]
  %4 = load i16, ptr %__param, align 2, !tbaa !9
  %5 = trunc i64 %__ret.0 to i16
  %conv24 = add i16 %4, %5
  ret i16 %conv24
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %this) local_unnamed_addr #9 comdat align 2 {
entry:
  %_M_p = getelementptr inbounds %"class.std::mersenne_twister_engine", ptr %this, i64 0, i32 1
  %0 = load i64, ptr %_M_p, align 8, !tbaa !405
  %cmp = icmp ugt i64 %0, 623
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %.pre.i = load i64, ptr %this, align 8, !tbaa !147
  %vector.recur.init = insertelement <2 x i64> poison, i64 %.pre.i, i64 1
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %if.then
  %index = phi i64 [ 0, %if.then ], [ %index.next, %vector.body ]
  %vector.recur = phi <2 x i64> [ %vector.recur.init, %if.then ], [ %wide.load, %vector.body ]
  %1 = getelementptr inbounds [624 x i64], ptr %this, i64 0, i64 %index
  %2 = or i64 %index, 1
  %3 = getelementptr inbounds [624 x i64], ptr %this, i64 0, i64 %2
  %wide.load = load <2 x i64>, ptr %3, align 8, !tbaa !147
  %4 = shufflevector <2 x i64> %vector.recur, <2 x i64> %wide.load, <2 x i32> <i32 1, i32 2>
  %5 = and <2 x i64> %4, <i64 -2147483648, i64 -2147483648>
  %6 = and <2 x i64> %wide.load, <i64 2147483646, i64 2147483646>
  %7 = or <2 x i64> %6, %5
  %8 = add nuw nsw i64 %index, 397
  %9 = getelementptr inbounds [624 x i64], ptr %this, i64 0, i64 %8
  %wide.load18 = load <2 x i64>, ptr %9, align 8, !tbaa !147
  %10 = lshr exact <2 x i64> %7, <i64 1, i64 1>
  %11 = xor <2 x i64> %10, %wide.load18
  %12 = and <2 x i64> %wide.load, <i64 1, i64 1>
  %13 = icmp eq <2 x i64> %12, zeroinitializer
  %14 = select <2 x i1> %13, <2 x i64> zeroinitializer, <2 x i64> <i64 2567483615, i64 2567483615>
  %15 = xor <2 x i64> %11, %14
  store <2 x i64> %15, ptr %1, align 8, !tbaa !147
  %index.next = add nuw i64 %index, 2
  %16 = icmp eq i64 %index.next, 226
  br i1 %16, label %for.body.i, label %vector.body, !llvm.loop !407

for.body.i:                                       ; preds = %vector.body
  %vector.recur.extract = extractelement <2 x i64> %wide.load, i64 1
  %arrayidx.i = getelementptr inbounds [624 x i64], ptr %this, i64 0, i64 226
  %and.i = and i64 %vector.recur.extract, -2147483648
  %arrayidx3.i = getelementptr inbounds [624 x i64], ptr %this, i64 0, i64 227
  %17 = load i64, ptr %arrayidx3.i, align 8, !tbaa !147
  %and4.i = and i64 %17, 2147483646
  %or.i = or i64 %and4.i, %and.i
  %arrayidx7.i = getelementptr inbounds [624 x i64], ptr %this, i64 0, i64 623
  %18 = load i64, ptr %arrayidx7.i, align 8, !tbaa !147
  %shr.i = lshr exact i64 %or.i, 1
  %xor.i = xor i64 %shr.i, %18
  %and8.i = and i64 %17, 1
  %tobool.not.i = icmp eq i64 %and8.i, 0
  %cond.i = select i1 %tobool.not.i, i64 0, i64 2567483615
  %xor9.i = xor i64 %xor.i, %cond.i
  store i64 %xor9.i, ptr %arrayidx.i, align 8, !tbaa !147
  %arrayidx19.phi.trans.insert.i = getelementptr inbounds [624 x i64], ptr %this, i64 0, i64 227
  %.pre74.i = load i64, ptr %arrayidx19.phi.trans.insert.i, align 8, !tbaa !147
  %vector.recur.init26 = insertelement <2 x i64> poison, i64 %.pre74.i, i64 1
  br label %vector.body24

vector.body24:                                    ; preds = %vector.body24, %for.body.i
  %index25 = phi i64 [ 0, %for.body.i ], [ %index.next30, %vector.body24 ]
  %vector.recur27 = phi <2 x i64> [ %vector.recur.init26, %for.body.i ], [ %wide.load28, %vector.body24 ]
  %offset.idx = add i64 %index25, 227
  %19 = getelementptr inbounds [624 x i64], ptr %this, i64 0, i64 %offset.idx
  %20 = add i64 %index25, 228
  %21 = getelementptr inbounds [624 x i64], ptr %this, i64 0, i64 %20
  %wide.load28 = load <2 x i64>, ptr %21, align 8, !tbaa !147
  %22 = shufflevector <2 x i64> %vector.recur27, <2 x i64> %wide.load28, <2 x i32> <i32 1, i32 2>
  %23 = and <2 x i64> %22, <i64 -2147483648, i64 -2147483648>
  %24 = and <2 x i64> %wide.load28, <i64 2147483646, i64 2147483646>
  %25 = or <2 x i64> %24, %23
  %26 = getelementptr inbounds [624 x i64], ptr %this, i64 0, i64 %index25
  %wide.load29 = load <2 x i64>, ptr %26, align 8, !tbaa !147
  %27 = lshr exact <2 x i64> %25, <i64 1, i64 1>
  %28 = xor <2 x i64> %27, %wide.load29
  %29 = and <2 x i64> %wide.load28, <i64 1, i64 1>
  %30 = icmp eq <2 x i64> %29, zeroinitializer
  %31 = select <2 x i1> %30, <2 x i64> zeroinitializer, <2 x i64> <i64 2567483615, i64 2567483615>
  %32 = xor <2 x i64> %28, %31
  store <2 x i64> %32, ptr %19, align 8, !tbaa !147
  %index.next30 = add nuw i64 %index25, 2
  %33 = icmp eq i64 %index.next30, 396
  br i1 %33, label %_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11_M_gen_randEv.exit, label %vector.body24, !llvm.loop !408

_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11_M_gen_randEv.exit: ; preds = %vector.body24
  %arrayidx42.i = getelementptr inbounds [624 x i64], ptr %this, i64 0, i64 623
  %34 = load i64, ptr %arrayidx42.i, align 8, !tbaa !147
  %and43.i = and i64 %34, -2147483648
  %35 = load i64, ptr %this, align 8, !tbaa !147
  %and46.i = and i64 %35, 2147483646
  %or47.i = or i64 %and46.i, %and43.i
  %arrayidx49.i = getelementptr inbounds [624 x i64], ptr %this, i64 0, i64 396
  %36 = load i64, ptr %arrayidx49.i, align 8, !tbaa !147
  %shr50.i = lshr exact i64 %or47.i, 1
  %xor51.i = xor i64 %shr50.i, %36
  %and52.i = and i64 %35, 1
  %tobool53.not.i = icmp eq i64 %and52.i, 0
  %cond54.i = select i1 %tobool53.not.i, i64 0, i64 2567483615
  %xor55.i = xor i64 %xor51.i, %cond54.i
  store i64 %xor55.i, ptr %arrayidx42.i, align 8, !tbaa !147
  br label %if.end

if.end:                                           ; preds = %_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11_M_gen_randEv.exit, %entry
  %37 = phi i64 [ 0, %_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11_M_gen_randEv.exit ], [ %0, %entry ]
  %inc = add nuw nsw i64 %37, 1
  store i64 %inc, ptr %_M_p, align 8, !tbaa !405
  %arrayidx = getelementptr inbounds [624 x i64], ptr %this, i64 0, i64 %37
  %38 = load i64, ptr %arrayidx, align 8, !tbaa !147
  %shr = lshr i64 %38, 11
  %and = and i64 %shr, 4294967295
  %xor = xor i64 %and, %38
  %shl = shl i64 %xor, 7
  %and3 = and i64 %shl, 2636928640
  %xor4 = xor i64 %and3, %xor
  %shl5 = shl i64 %xor4, 15
  %and6 = and i64 %shl5, 4022730752
  %xor7 = xor i64 %and6, %xor4
  %shr8 = lshr i64 %xor7, 18
  %xor9 = xor i64 %shr8, %xor7
  ret i64 %xor9
}

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, i64 noundef) local_unnamed_addr #0

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8), i64 noundef) local_unnamed_addr #0

declare void @_ZN9benchmark5State16StartKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144)) local_unnamed_addr #0

declare void @_ZN9benchmark5State17FinishKeepRunningEv(ptr noundef nonnull align 8 dereferenceable(144)) local_unnamed_addr #0

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(ptr noundef) local_unnamed_addr #5

; Function Attrs: uwtable
define linkonce_odr dso_local noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %this, ptr noundef nonnull align 8 dereferenceable(5000) %__urng, ptr noundef nonnull align 1 dereferenceable(2) %__param) local_unnamed_addr #3 comdat align 2 {
entry:
  %ref.tmp = alloca %"struct.std::uniform_int_distribution<unsigned char>::param_type", align 1
  %_M_b.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %__param, i64 0, i32 1
  %0 = load i8, ptr %_M_b.i, align 1, !tbaa !69
  %conv = zext i8 %0 to i64
  %1 = load i8, ptr %__param, align 1, !tbaa !67
  %conv3 = zext i8 %1 to i64
  %sub = sub nsw i64 %conv, %conv3
  %cmp = icmp ult i64 %sub, 4294967295
  br i1 %cmp, label %if.then, label %do.body.preheader

do.body.preheader:                                ; preds = %entry
  %_M_b.i37 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned char>::param_type", ptr %ref.tmp, i64 0, i32 1
  br label %do.body

if.then:                                          ; preds = %entry
  %2 = trunc i64 %sub to i32
  %conv4 = add nuw nsw i32 %2, 1
  %call.i = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %__urng)
  %conv.i = zext i32 %conv4 to i64
  %mul.i = mul i64 %call.i, %conv.i
  %conv1.i = trunc i64 %mul.i to i32
  %cmp.i.not = icmp ult i32 %2, %conv1.i
  br i1 %cmp.i.not, label %_ZNSt24uniform_int_distributionIhE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %sub.i = xor i32 %2, -1
  %rem.i = urem i32 %sub.i, %conv4
  %cmp216.i = icmp ugt i32 %rem.i, %conv1.i
  br i1 %cmp216.i, label %while.body.i, label %_ZNSt24uniform_int_distributionIhE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit

while.body.i:                                     ; preds = %if.then.i, %while.body.i
  %call3.i = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %__urng)
  %mul5.i = mul i64 %call3.i, %conv.i
  %conv6.i = trunc i64 %mul5.i to i32
  %cmp2.i = icmp ugt i32 %rem.i, %conv6.i
  br i1 %cmp2.i, label %while.body.i, label %_ZNSt24uniform_int_distributionIhE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit, !llvm.loop !409

_ZNSt24uniform_int_distributionIhE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit: ; preds = %while.body.i, %if.then, %if.then.i
  %__product.1.i = phi i64 [ %mul.i, %if.then ], [ %mul.i, %if.then.i ], [ %mul5.i, %while.body.i ]
  %shr.i = lshr i64 %__product.1.i, 32
  br label %if.end20

do.body:                                          ; preds = %do.body.preheader, %do.body
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ref.tmp) #11
  store i8 0, ptr %ref.tmp, align 1, !tbaa !67
  store i8 -1, ptr %_M_b.i37, align 1, !tbaa !69
  %call10 = call noundef zeroext i8 @_ZNSt24uniform_int_distributionIhEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEhRT_RKNS0_10param_typeE(ptr noundef nonnull align 1 dereferenceable(2) %this, ptr noundef nonnull align 8 dereferenceable(5000) %__urng, ptr noundef nonnull align 1 dereferenceable(2) %ref.tmp)
  %conv11 = zext i8 %call10 to i64
  %mul = shl nuw nsw i64 %conv11, 32
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ref.tmp) #11
  %call12 = call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %__urng)
  %add14 = add i64 %mul, %call12
  %cmp15 = icmp ugt i64 %add14, %sub
  %cmp16 = icmp ult i64 %add14, %mul
  %3 = or i1 %cmp15, %cmp16
  br i1 %3, label %do.body, label %if.end20, !llvm.loop !410

if.end20:                                         ; preds = %do.body, %_ZNSt24uniform_int_distributionIhE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit
  %__ret.0 = phi i64 [ %shr.i, %_ZNSt24uniform_int_distributionIhE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit ], [ %add14, %do.body ]
  %4 = load i8, ptr %__param, align 1, !tbaa !67
  %5 = trunc i64 %__ret.0 to i8
  %conv24 = add i8 %4, %5
  ret i8 %conv24
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(5000) %__urng, ptr noundef nonnull align 4 dereferenceable(8) %__param) local_unnamed_addr #3 comdat align 2 {
entry:
  %ref.tmp = alloca %"struct.std::uniform_int_distribution<unsigned int>::param_type", align 4
  %_M_b.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %__param, i64 0, i32 1
  %0 = load i32, ptr %_M_b.i, align 4, !tbaa !94
  %conv = zext i32 %0 to i64
  %1 = load i32, ptr %__param, align 4, !tbaa !92
  %conv3 = zext i32 %1 to i64
  %sub = sub nsw i64 %conv, %conv3
  %cmp = icmp ult i64 %sub, 4294967295
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = trunc i64 %sub to i32
  %conv4 = add nuw i32 %2, 1
  %call.i = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %__urng)
  %conv.i = zext i32 %conv4 to i64
  %mul.i = mul i64 %call.i, %conv.i
  %conv1.i = trunc i64 %mul.i to i32
  %cmp.i.not = icmp ult i32 %2, %conv1.i
  br i1 %cmp.i.not, label %_ZNSt24uniform_int_distributionIjE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %sub.i = xor i32 %2, -1
  %rem.i = urem i32 %sub.i, %conv4
  %cmp216.i = icmp ugt i32 %rem.i, %conv1.i
  br i1 %cmp216.i, label %while.body.i, label %_ZNSt24uniform_int_distributionIjE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit

while.body.i:                                     ; preds = %if.then.i, %while.body.i
  %call3.i = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %__urng)
  %mul5.i = mul i64 %call3.i, %conv.i
  %conv6.i = trunc i64 %mul5.i to i32
  %cmp2.i = icmp ugt i32 %rem.i, %conv6.i
  br i1 %cmp2.i, label %while.body.i, label %_ZNSt24uniform_int_distributionIjE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit, !llvm.loop !411

_ZNSt24uniform_int_distributionIjE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit: ; preds = %while.body.i, %if.then, %if.then.i
  %__product.1.i = phi i64 [ %mul.i, %if.then ], [ %mul.i, %if.then.i ], [ %mul5.i, %while.body.i ]
  %shr.i = lshr i64 %__product.1.i, 32
  br label %if.end20

if.else:                                          ; preds = %entry
  %cmp7.not = icmp eq i64 %sub, 4294967295
  br i1 %cmp7.not, label %if.else17, label %do.body.preheader

do.body.preheader:                                ; preds = %if.else
  %_M_b.i37 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned int>::param_type", ptr %ref.tmp, i64 0, i32 1
  br label %do.body

do.body:                                          ; preds = %do.body.preheader, %do.body
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ref.tmp) #11
  store i32 0, ptr %ref.tmp, align 4, !tbaa !92
  store i32 -1, ptr %_M_b.i37, align 4, !tbaa !94
  %call10 = call noundef i32 @_ZNSt24uniform_int_distributionIjEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEjRT_RKNS0_10param_typeE(ptr noundef nonnull align 4 dereferenceable(8) %this, ptr noundef nonnull align 8 dereferenceable(5000) %__urng, ptr noundef nonnull align 4 dereferenceable(8) %ref.tmp)
  %conv11 = zext i32 %call10 to i64
  %mul = shl nuw i64 %conv11, 32
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ref.tmp) #11
  %call12 = call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %__urng)
  %add14 = add i64 %mul, %call12
  %cmp15 = icmp ugt i64 %add14, %sub
  %cmp16 = icmp ult i64 %add14, %mul
  %3 = or i1 %cmp15, %cmp16
  br i1 %3, label %do.body, label %if.end20, !llvm.loop !412

if.else17:                                        ; preds = %if.else
  %call18 = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %__urng)
  br label %if.end20

if.end20:                                         ; preds = %do.body, %if.else17, %_ZNSt24uniform_int_distributionIjE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit
  %__ret.0 = phi i64 [ %shr.i, %_ZNSt24uniform_int_distributionIjE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit ], [ %call18, %if.else17 ], [ %add14, %do.body ]
  %4 = load i32, ptr %__param, align 4, !tbaa !92
  %5 = trunc i64 %__ret.0 to i32
  %conv24 = add i32 %4, %5
  ret i32 %conv24
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %this, ptr noundef nonnull align 8 dereferenceable(5000) %__urng, ptr noundef nonnull align 8 dereferenceable(16) %__param) local_unnamed_addr #3 comdat align 2 {
entry:
  %ref.tmp = alloca %"struct.std::uniform_int_distribution<unsigned long>::param_type", align 8
  %_M_b.i = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %__param, i64 0, i32 1
  %0 = load i64, ptr %_M_b.i, align 8, !tbaa !146
  %1 = load i64, ptr %__param, align 8, !tbaa !144
  %sub = sub i64 %0, %1
  %cmp = icmp ult i64 %sub, 4294967295
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = trunc i64 %sub to i32
  %conv = add nuw i32 %2, 1
  %call.i = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %__urng)
  %conv.i = zext i32 %conv to i64
  %mul.i = mul i64 %call.i, %conv.i
  %conv1.i = trunc i64 %mul.i to i32
  %cmp.i.not = icmp ult i32 %2, %conv1.i
  br i1 %cmp.i.not, label %_ZNSt24uniform_int_distributionImE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %sub.i = xor i32 %2, -1
  %rem.i = urem i32 %sub.i, %conv
  %cmp216.i = icmp ugt i32 %rem.i, %conv1.i
  br i1 %cmp216.i, label %while.body.i, label %_ZNSt24uniform_int_distributionImE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit

while.body.i:                                     ; preds = %if.then.i, %while.body.i
  %call3.i = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %__urng)
  %mul5.i = mul i64 %call3.i, %conv.i
  %conv6.i = trunc i64 %mul5.i to i32
  %cmp2.i = icmp ugt i32 %rem.i, %conv6.i
  br i1 %cmp2.i, label %while.body.i, label %_ZNSt24uniform_int_distributionImE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit, !llvm.loop !413

_ZNSt24uniform_int_distributionImE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit: ; preds = %while.body.i, %if.then, %if.then.i
  %__product.1.i = phi i64 [ %mul.i, %if.then ], [ %mul.i, %if.then.i ], [ %mul5.i, %while.body.i ]
  %shr.i = lshr i64 %__product.1.i, 32
  br label %if.end16

if.else:                                          ; preds = %entry
  %cmp5.not = icmp eq i64 %sub, 4294967295
  br i1 %cmp5.not, label %if.else13, label %do.body.preheader

do.body.preheader:                                ; preds = %if.else
  %div32 = lshr i64 %sub, 32
  %_M_b.i31 = getelementptr inbounds %"struct.std::uniform_int_distribution<unsigned long>::param_type", ptr %ref.tmp, i64 0, i32 1
  br label %do.body

do.body:                                          ; preds = %do.body.preheader, %do.body
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #11
  store i64 0, ptr %ref.tmp, align 8, !tbaa !144
  store i64 %div32, ptr %_M_b.i31, align 8, !tbaa !146
  %call7 = call noundef i64 @_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE(ptr noundef nonnull align 8 dereferenceable(16) %this, ptr noundef nonnull align 8 dereferenceable(5000) %__urng, ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp)
  %mul = shl i64 %call7, 32
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #11
  %call8 = call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %__urng)
  %add10 = add i64 %call8, %mul
  %cmp11 = icmp ugt i64 %add10, %sub
  %cmp12 = icmp ult i64 %add10, %mul
  %3 = or i1 %cmp11, %cmp12
  br i1 %3, label %do.body, label %if.end16, !llvm.loop !414

if.else13:                                        ; preds = %if.else
  %call14 = tail call noundef i64 @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv(ptr noundef nonnull align 8 dereferenceable(5000) %__urng)
  br label %if.end16

if.end16:                                         ; preds = %do.body, %if.else13, %_ZNSt24uniform_int_distributionImE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit
  %__ret.0 = phi i64 [ %shr.i, %_ZNSt24uniform_int_distributionImE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit ], [ %call14, %if.else13 ], [ %add10, %do.body ]
  %4 = load i64, ptr %__param, align 8, !tbaa !144
  %add18 = add i64 %4, %__ret.0
  ret i64 %add18
}

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_VectorOperations.cpp() #3 section ".text.startup" personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %0 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt8ios_base4InitD1Ev, ptr nonnull @_ZStL8__ioinit, ptr nonnull @__dso_handle) #11
  %call.i = tail call noundef i32 @_ZN9benchmark8internal17InitializeStreamsEv()
  store i64 5489, ptr @_ZL3rng, align 8, !tbaa !147
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i.1, %entry
  %1 = phi i64 [ 5489, %entry ], [ %rem.i.i17.i.i.i.i.1, %for.body.i.i.i.i.1 ]
  %__i.018.i.i.i.i = phi i64 [ 1, %entry ], [ %inc.i.i.i.i.1, %for.body.i.i.i.i.1 ]
  %shr.i.i.i.i = lshr i64 %1, 30
  %xor.i.i.i.i = xor i64 %shr.i.i.i.i, %1
  %mul.i.i.i.i = mul nuw nsw i64 %xor.i.i.i.i, 1812433253
  %add.i.i.i.i = add nuw i64 %mul.i.i.i.i, %__i.018.i.i.i.i
  %rem.i.i17.i.i.i.i = and i64 %add.i.i.i.i, 4294967295
  %arrayidx7.i.i.i.i = getelementptr inbounds [624 x i64], ptr @_ZL3rng, i64 0, i64 %__i.018.i.i.i.i
  store i64 %rem.i.i17.i.i.i.i, ptr %arrayidx7.i.i.i.i, align 8, !tbaa !147
  %inc.i.i.i.i = add nuw nsw i64 %__i.018.i.i.i.i, 1
  %exitcond.not.i.i.i.i = icmp eq i64 %inc.i.i.i.i, 624
  br i1 %exitcond.not.i.i.i.i, label %__cxx_global_var_init.2.exit, label %for.body.i.i.i.i.1, !llvm.loop !415

for.body.i.i.i.i.1:                               ; preds = %for.body.i.i.i.i
  %shr.i.i.i.i.1 = lshr i64 %rem.i.i17.i.i.i.i, 30
  %xor.i.i.i.i.1 = xor i64 %shr.i.i.i.i.1, %add.i.i.i.i
  %mul.i.i.i.i.1 = mul i64 %xor.i.i.i.i.1, 1812433253
  %add.i.i.i.i.1 = add i64 %mul.i.i.i.i.1, %inc.i.i.i.i
  %rem.i.i17.i.i.i.i.1 = and i64 %add.i.i.i.i.1, 4294967295
  %arrayidx7.i.i.i.i.1 = getelementptr inbounds [624 x i64], ptr @_ZL3rng, i64 0, i64 %inc.i.i.i.i
  store i64 %rem.i.i17.i.i.i.i.1, ptr %arrayidx7.i.i.i.i.1, align 8, !tbaa !147
  %inc.i.i.i.i.1 = add nuw nsw i64 %__i.018.i.i.i.i, 2
  br label %for.body.i.i.i.i

__cxx_global_var_init.2.exit:                     ; preds = %for.body.i.i.i.i
  store i64 624, ptr getelementptr inbounds (%"class.std::mersenne_twister_engine", ptr @_ZL3rng, i64 0, i32 1), align 8, !tbaa !405
  %call.i1 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i1, ptr noundef nonnull @.str)
          to label %__cxx_global_var_init.3.exit unwind label %lpad.i

common.resume:                                    ; preds = %lpad.i285, %lpad.i281, %lpad.i277, %lpad.i273, %lpad.i269, %lpad.i265, %lpad.i261, %lpad.i257, %lpad.i253, %lpad.i249, %lpad.i245, %lpad.i241, %lpad.i237, %lpad.i233, %lpad.i229, %lpad.i225, %lpad.i221, %lpad.i217, %lpad.i213, %lpad.i209, %lpad.i205, %lpad.i201, %lpad.i197, %lpad.i193, %lpad.i189, %lpad.i185, %lpad.i181, %lpad.i177, %lpad.i173, %lpad.i169, %lpad.i165, %lpad.i161, %lpad.i157, %lpad.i153, %lpad.i149, %lpad.i145, %lpad.i141, %lpad.i137, %lpad.i133, %lpad.i129, %lpad.i125, %lpad.i121, %lpad.i117, %lpad.i113, %lpad.i109, %lpad.i105, %lpad.i101, %lpad.i97, %lpad.i93, %lpad.i89, %lpad.i85, %lpad.i81, %lpad.i77, %lpad.i73, %lpad.i69, %lpad.i65, %lpad.i61, %lpad.i57, %lpad.i53, %lpad.i49, %lpad.i45, %lpad.i41, %lpad.i37, %lpad.i33, %lpad.i29, %lpad.i25, %lpad.i21, %lpad.i17, %lpad.i13, %lpad.i9, %lpad.i5, %lpad.i
  %call.i282.sink = phi ptr [ %call.i282, %lpad.i285 ], [ %call.i278, %lpad.i281 ], [ %call.i274, %lpad.i277 ], [ %call.i270, %lpad.i273 ], [ %call.i266, %lpad.i269 ], [ %call.i262, %lpad.i265 ], [ %call.i258, %lpad.i261 ], [ %call.i254, %lpad.i257 ], [ %call.i250, %lpad.i253 ], [ %call.i246, %lpad.i249 ], [ %call.i242, %lpad.i245 ], [ %call.i238, %lpad.i241 ], [ %call.i234, %lpad.i237 ], [ %call.i230, %lpad.i233 ], [ %call.i226, %lpad.i229 ], [ %call.i222, %lpad.i225 ], [ %call.i218, %lpad.i221 ], [ %call.i214, %lpad.i217 ], [ %call.i210, %lpad.i213 ], [ %call.i206, %lpad.i209 ], [ %call.i202, %lpad.i205 ], [ %call.i198, %lpad.i201 ], [ %call.i194, %lpad.i197 ], [ %call.i190, %lpad.i193 ], [ %call.i186, %lpad.i189 ], [ %call.i182, %lpad.i185 ], [ %call.i178, %lpad.i181 ], [ %call.i174, %lpad.i177 ], [ %call.i170, %lpad.i173 ], [ %call.i166, %lpad.i169 ], [ %call.i162, %lpad.i165 ], [ %call.i158, %lpad.i161 ], [ %call.i154, %lpad.i157 ], [ %call.i150, %lpad.i153 ], [ %call.i146, %lpad.i149 ], [ %call.i142, %lpad.i145 ], [ %call.i138, %lpad.i141 ], [ %call.i134, %lpad.i137 ], [ %call.i130, %lpad.i133 ], [ %call.i126, %lpad.i129 ], [ %call.i122, %lpad.i125 ], [ %call.i118, %lpad.i121 ], [ %call.i114, %lpad.i117 ], [ %call.i110, %lpad.i113 ], [ %call.i106, %lpad.i109 ], [ %call.i102, %lpad.i105 ], [ %call.i98, %lpad.i101 ], [ %call.i94, %lpad.i97 ], [ %call.i90, %lpad.i93 ], [ %call.i86, %lpad.i89 ], [ %call.i82, %lpad.i85 ], [ %call.i78, %lpad.i81 ], [ %call.i74, %lpad.i77 ], [ %call.i70, %lpad.i73 ], [ %call.i66, %lpad.i69 ], [ %call.i62, %lpad.i65 ], [ %call.i58, %lpad.i61 ], [ %call.i54, %lpad.i57 ], [ %call.i50, %lpad.i53 ], [ %call.i46, %lpad.i49 ], [ %call.i42, %lpad.i45 ], [ %call.i38, %lpad.i41 ], [ %call.i34, %lpad.i37 ], [ %call.i30, %lpad.i33 ], [ %call.i26, %lpad.i29 ], [ %call.i22, %lpad.i25 ], [ %call.i18, %lpad.i21 ], [ %call.i14, %lpad.i17 ], [ %call.i10, %lpad.i13 ], [ %call.i6, %lpad.i9 ], [ %call.i2, %lpad.i5 ], [ %call.i1, %lpad.i ]
  %common.resume.op = phi { ptr, i32 } [ %73, %lpad.i285 ], [ %72, %lpad.i281 ], [ %71, %lpad.i277 ], [ %70, %lpad.i273 ], [ %69, %lpad.i269 ], [ %68, %lpad.i265 ], [ %67, %lpad.i261 ], [ %66, %lpad.i257 ], [ %65, %lpad.i253 ], [ %64, %lpad.i249 ], [ %63, %lpad.i245 ], [ %62, %lpad.i241 ], [ %61, %lpad.i237 ], [ %60, %lpad.i233 ], [ %59, %lpad.i229 ], [ %58, %lpad.i225 ], [ %57, %lpad.i221 ], [ %56, %lpad.i217 ], [ %55, %lpad.i213 ], [ %54, %lpad.i209 ], [ %53, %lpad.i205 ], [ %52, %lpad.i201 ], [ %51, %lpad.i197 ], [ %50, %lpad.i193 ], [ %49, %lpad.i189 ], [ %48, %lpad.i185 ], [ %47, %lpad.i181 ], [ %46, %lpad.i177 ], [ %45, %lpad.i173 ], [ %44, %lpad.i169 ], [ %43, %lpad.i165 ], [ %42, %lpad.i161 ], [ %41, %lpad.i157 ], [ %40, %lpad.i153 ], [ %39, %lpad.i149 ], [ %38, %lpad.i145 ], [ %37, %lpad.i141 ], [ %36, %lpad.i137 ], [ %35, %lpad.i133 ], [ %34, %lpad.i129 ], [ %33, %lpad.i125 ], [ %32, %lpad.i121 ], [ %31, %lpad.i117 ], [ %30, %lpad.i113 ], [ %29, %lpad.i109 ], [ %28, %lpad.i105 ], [ %27, %lpad.i101 ], [ %26, %lpad.i97 ], [ %25, %lpad.i93 ], [ %24, %lpad.i89 ], [ %23, %lpad.i85 ], [ %22, %lpad.i81 ], [ %21, %lpad.i77 ], [ %20, %lpad.i73 ], [ %19, %lpad.i69 ], [ %18, %lpad.i65 ], [ %17, %lpad.i61 ], [ %16, %lpad.i57 ], [ %15, %lpad.i53 ], [ %14, %lpad.i49 ], [ %13, %lpad.i45 ], [ %12, %lpad.i41 ], [ %11, %lpad.i37 ], [ %10, %lpad.i33 ], [ %9, %lpad.i29 ], [ %8, %lpad.i25 ], [ %7, %lpad.i21 ], [ %6, %lpad.i17 ], [ %5, %lpad.i13 ], [ %4, %lpad.i9 ], [ %3, %lpad.i5 ], [ %2, %lpad.i ]
  tail call void @_ZdlPv(ptr noundef nonnull %call.i282.sink) #13
  resume { ptr, i32 } %common.resume.op

lpad.i:                                           ; preds = %__cxx_global_var_init.2.exit
  %2 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.3.exit:                     ; preds = %__cxx_global_var_init.2.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i1, align 8, !tbaa !416
  %func_.i.i = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i1, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i, align 8, !tbaa !418
  %call1.i = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i1)
  store ptr %call1.i, ptr @_ZL27benchmark_uniq_2_benchmark_, align 8, !tbaa !5
  %call.i2 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i2, ptr noundef nonnull @.str.5)
          to label %__cxx_global_var_init.4.exit unwind label %lpad.i5

lpad.i5:                                          ; preds = %__cxx_global_var_init.3.exit
  %3 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.4.exit:                     ; preds = %__cxx_global_var_init.3.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i2, align 8, !tbaa !416
  %func_.i.i3 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i2, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i3, align 8, !tbaa !418
  %call1.i4 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i2)
  store ptr %call1.i4, ptr @_ZL27benchmark_uniq_3_benchmark_, align 8, !tbaa !5
  %call.i6 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i6, ptr noundef nonnull @.str.7)
          to label %__cxx_global_var_init.6.exit unwind label %lpad.i9

lpad.i9:                                          ; preds = %__cxx_global_var_init.4.exit
  %4 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.6.exit:                     ; preds = %__cxx_global_var_init.4.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i6, align 8, !tbaa !416
  %func_.i.i7 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i6, i64 0, i32 1
  store ptr @_Z53benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i7, align 8, !tbaa !418
  %call1.i8 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i6)
  store ptr %call1.i8, ptr @_ZL27benchmark_uniq_4_benchmark_, align 8, !tbaa !5
  %call.i10 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i10, ptr noundef nonnull @.str.9)
          to label %__cxx_global_var_init.8.exit unwind label %lpad.i13

lpad.i13:                                         ; preds = %__cxx_global_var_init.6.exit
  %5 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.8.exit:                     ; preds = %__cxx_global_var_init.6.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i10, align 8, !tbaa !416
  %func_.i.i11 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i10, i64 0, i32 1
  store ptr @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i11, align 8, !tbaa !418
  %call1.i12 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i10)
  store ptr %call1.i12, ptr @_ZL27benchmark_uniq_5_benchmark_, align 8, !tbaa !5
  %call.i14 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i14, ptr noundef nonnull @.str.11)
          to label %__cxx_global_var_init.10.exit unwind label %lpad.i17

lpad.i17:                                         ; preds = %__cxx_global_var_init.8.exit
  %6 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.10.exit:                    ; preds = %__cxx_global_var_init.8.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i14, align 8, !tbaa !416
  %func_.i.i15 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i14, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i15, align 8, !tbaa !418
  %call1.i16 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i14)
  store ptr %call1.i16, ptr @_ZL27benchmark_uniq_6_benchmark_, align 8, !tbaa !5
  %call.i18 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i18, ptr noundef nonnull @.str.13)
          to label %__cxx_global_var_init.12.exit unwind label %lpad.i21

lpad.i21:                                         ; preds = %__cxx_global_var_init.10.exit
  %7 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.12.exit:                    ; preds = %__cxx_global_var_init.10.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i18, align 8, !tbaa !416
  %func_.i.i19 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i18, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i19, align 8, !tbaa !418
  %call1.i20 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i18)
  store ptr %call1.i20, ptr @_ZL27benchmark_uniq_7_benchmark_, align 8, !tbaa !5
  %call.i22 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i22, ptr noundef nonnull @.str.15)
          to label %__cxx_global_var_init.14.exit unwind label %lpad.i25

lpad.i25:                                         ; preds = %__cxx_global_var_init.12.exit
  %8 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.14.exit:                    ; preds = %__cxx_global_var_init.12.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i22, align 8, !tbaa !416
  %func_.i.i23 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i22, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i23, align 8, !tbaa !418
  %call1.i24 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i22)
  store ptr %call1.i24, ptr @_ZL27benchmark_uniq_8_benchmark_, align 8, !tbaa !5
  %call.i26 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i26, ptr noundef nonnull @.str.17)
          to label %__cxx_global_var_init.16.exit unwind label %lpad.i29

lpad.i29:                                         ; preds = %__cxx_global_var_init.14.exit
  %9 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.16.exit:                    ; preds = %__cxx_global_var_init.14.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i26, align 8, !tbaa !416
  %func_.i.i27 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i26, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i27, align 8, !tbaa !418
  %call1.i28 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i26)
  store ptr %call1.i28, ptr @_ZL27benchmark_uniq_9_benchmark_, align 8, !tbaa !5
  %call.i30 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i30, ptr noundef nonnull @.str.19)
          to label %__cxx_global_var_init.18.exit unwind label %lpad.i33

lpad.i33:                                         ; preds = %__cxx_global_var_init.16.exit
  %10 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.18.exit:                    ; preds = %__cxx_global_var_init.16.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i30, align 8, !tbaa !416
  %func_.i.i31 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i30, i64 0, i32 1
  store ptr @_Z53benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i31, align 8, !tbaa !418
  %call1.i32 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i30)
  store ptr %call1.i32, ptr @_ZL28benchmark_uniq_10_benchmark_, align 8, !tbaa !5
  %call.i34 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i34, ptr noundef nonnull @.str.21)
          to label %__cxx_global_var_init.20.exit unwind label %lpad.i37

lpad.i37:                                         ; preds = %__cxx_global_var_init.18.exit
  %11 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.20.exit:                    ; preds = %__cxx_global_var_init.18.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i34, align 8, !tbaa !416
  %func_.i.i35 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i34, i64 0, i32 1
  store ptr @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i35, align 8, !tbaa !418
  %call1.i36 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i34)
  store ptr %call1.i36, ptr @_ZL28benchmark_uniq_11_benchmark_, align 8, !tbaa !5
  %call.i38 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i38, ptr noundef nonnull @.str.23)
          to label %__cxx_global_var_init.22.exit unwind label %lpad.i41

lpad.i41:                                         ; preds = %__cxx_global_var_init.20.exit
  %12 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.22.exit:                    ; preds = %__cxx_global_var_init.20.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i38, align 8, !tbaa !416
  %func_.i.i39 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i38, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i39, align 8, !tbaa !418
  %call1.i40 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i38)
  store ptr %call1.i40, ptr @_ZL28benchmark_uniq_12_benchmark_, align 8, !tbaa !5
  %call.i42 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i42, ptr noundef nonnull @.str.25)
          to label %__cxx_global_var_init.24.exit unwind label %lpad.i45

lpad.i45:                                         ; preds = %__cxx_global_var_init.22.exit
  %13 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.24.exit:                    ; preds = %__cxx_global_var_init.22.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i42, align 8, !tbaa !416
  %func_.i.i43 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i42, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i43, align 8, !tbaa !418
  %call1.i44 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i42)
  store ptr %call1.i44, ptr @_ZL28benchmark_uniq_13_benchmark_, align 8, !tbaa !5
  %call.i46 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i46, ptr noundef nonnull @.str.27)
          to label %__cxx_global_var_init.26.exit unwind label %lpad.i49

lpad.i49:                                         ; preds = %__cxx_global_var_init.24.exit
  %14 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.26.exit:                    ; preds = %__cxx_global_var_init.24.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i46, align 8, !tbaa !416
  %func_.i.i47 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i46, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i47, align 8, !tbaa !418
  %call1.i48 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i46)
  store ptr %call1.i48, ptr @_ZL28benchmark_uniq_14_benchmark_, align 8, !tbaa !5
  %call.i50 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i50, ptr noundef nonnull @.str.29)
          to label %__cxx_global_var_init.28.exit unwind label %lpad.i53

lpad.i53:                                         ; preds = %__cxx_global_var_init.26.exit
  %15 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.28.exit:                    ; preds = %__cxx_global_var_init.26.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i50, align 8, !tbaa !416
  %func_.i.i51 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i50, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i51, align 8, !tbaa !418
  %call1.i52 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i50)
  store ptr %call1.i52, ptr @_ZL28benchmark_uniq_15_benchmark_, align 8, !tbaa !5
  %call.i54 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i54, ptr noundef nonnull @.str.31)
          to label %__cxx_global_var_init.30.exit unwind label %lpad.i57

lpad.i57:                                         ; preds = %__cxx_global_var_init.28.exit
  %16 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.30.exit:                    ; preds = %__cxx_global_var_init.28.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i54, align 8, !tbaa !416
  %func_.i.i55 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i54, i64 0, i32 1
  store ptr @_Z53benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i55, align 8, !tbaa !418
  %call1.i56 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i54)
  store ptr %call1.i56, ptr @_ZL28benchmark_uniq_16_benchmark_, align 8, !tbaa !5
  %call.i58 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i58, ptr noundef nonnull @.str.33)
          to label %__cxx_global_var_init.32.exit unwind label %lpad.i61

lpad.i61:                                         ; preds = %__cxx_global_var_init.30.exit
  %17 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.32.exit:                    ; preds = %__cxx_global_var_init.30.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i58, align 8, !tbaa !416
  %func_.i.i59 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i58, i64 0, i32 1
  store ptr @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i59, align 8, !tbaa !418
  %call1.i60 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i58)
  store ptr %call1.i60, ptr @_ZL28benchmark_uniq_17_benchmark_, align 8, !tbaa !5
  %call.i62 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i62, ptr noundef nonnull @.str.35)
          to label %__cxx_global_var_init.34.exit unwind label %lpad.i65

lpad.i65:                                         ; preds = %__cxx_global_var_init.32.exit
  %18 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.34.exit:                    ; preds = %__cxx_global_var_init.32.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i62, align 8, !tbaa !416
  %func_.i.i63 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i62, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i63, align 8, !tbaa !418
  %call1.i64 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i62)
  store ptr %call1.i64, ptr @_ZL28benchmark_uniq_18_benchmark_, align 8, !tbaa !5
  %call.i66 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i66, ptr noundef nonnull @.str.37)
          to label %__cxx_global_var_init.36.exit unwind label %lpad.i69

lpad.i69:                                         ; preds = %__cxx_global_var_init.34.exit
  %19 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.36.exit:                    ; preds = %__cxx_global_var_init.34.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i66, align 8, !tbaa !416
  %func_.i.i67 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i66, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint8_t_RN9benchmark5StateE, ptr %func_.i.i67, align 8, !tbaa !418
  %call1.i68 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i66)
  store ptr %call1.i68, ptr @_ZL28benchmark_uniq_19_benchmark_, align 8, !tbaa !5
  %call.i70 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i70, ptr noundef nonnull @.str.39)
          to label %__cxx_global_var_init.38.exit unwind label %lpad.i73

lpad.i73:                                         ; preds = %__cxx_global_var_init.36.exit
  %20 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.38.exit:                    ; preds = %__cxx_global_var_init.36.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i70, align 8, !tbaa !416
  %func_.i.i71 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i70, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i71, align 8, !tbaa !418
  %call1.i72 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i70)
  store ptr %call1.i72, ptr @_ZL28benchmark_uniq_20_benchmark_, align 8, !tbaa !5
  %call.i74 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i74, ptr noundef nonnull @.str.41)
          to label %__cxx_global_var_init.40.exit unwind label %lpad.i77

lpad.i77:                                         ; preds = %__cxx_global_var_init.38.exit
  %21 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.40.exit:                    ; preds = %__cxx_global_var_init.38.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i74, align 8, !tbaa !416
  %func_.i.i75 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i74, i64 0, i32 1
  store ptr @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i75, align 8, !tbaa !418
  %call1.i76 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i74)
  store ptr %call1.i76, ptr @_ZL28benchmark_uniq_21_benchmark_, align 8, !tbaa !5
  %call.i78 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i78, ptr noundef nonnull @.str.43)
          to label %__cxx_global_var_init.42.exit unwind label %lpad.i81

lpad.i81:                                         ; preds = %__cxx_global_var_init.40.exit
  %22 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.42.exit:                    ; preds = %__cxx_global_var_init.40.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i78, align 8, !tbaa !416
  %func_.i.i79 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i78, i64 0, i32 1
  store ptr @_Z54benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i79, align 8, !tbaa !418
  %call1.i80 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i78)
  store ptr %call1.i80, ptr @_ZL28benchmark_uniq_22_benchmark_, align 8, !tbaa !5
  %call.i82 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i82, ptr noundef nonnull @.str.45)
          to label %__cxx_global_var_init.44.exit unwind label %lpad.i85

lpad.i85:                                         ; preds = %__cxx_global_var_init.42.exit
  %23 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.44.exit:                    ; preds = %__cxx_global_var_init.42.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i82, align 8, !tbaa !416
  %func_.i.i83 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i82, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i83, align 8, !tbaa !418
  %call1.i84 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i82)
  store ptr %call1.i84, ptr @_ZL28benchmark_uniq_23_benchmark_, align 8, !tbaa !5
  %call.i86 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i86, ptr noundef nonnull @.str.47)
          to label %__cxx_global_var_init.46.exit unwind label %lpad.i89

lpad.i89:                                         ; preds = %__cxx_global_var_init.44.exit
  %24 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.46.exit:                    ; preds = %__cxx_global_var_init.44.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i86, align 8, !tbaa !416
  %func_.i.i87 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i86, i64 0, i32 1
  store ptr @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i87, align 8, !tbaa !418
  %call1.i88 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i86)
  store ptr %call1.i88, ptr @_ZL28benchmark_uniq_24_benchmark_, align 8, !tbaa !5
  %call.i90 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i90, ptr noundef nonnull @.str.49)
          to label %__cxx_global_var_init.48.exit unwind label %lpad.i93

lpad.i93:                                         ; preds = %__cxx_global_var_init.46.exit
  %25 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.48.exit:                    ; preds = %__cxx_global_var_init.46.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i90, align 8, !tbaa !416
  %func_.i.i91 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i90, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i91, align 8, !tbaa !418
  %call1.i92 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i90)
  store ptr %call1.i92, ptr @_ZL28benchmark_uniq_25_benchmark_, align 8, !tbaa !5
  %call.i94 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i94, ptr noundef nonnull @.str.51)
          to label %__cxx_global_var_init.50.exit unwind label %lpad.i97

lpad.i97:                                         ; preds = %__cxx_global_var_init.48.exit
  %26 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.50.exit:                    ; preds = %__cxx_global_var_init.48.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i94, align 8, !tbaa !416
  %func_.i.i95 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i94, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i95, align 8, !tbaa !418
  %call1.i96 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i94)
  store ptr %call1.i96, ptr @_ZL28benchmark_uniq_26_benchmark_, align 8, !tbaa !5
  %call.i98 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i98, ptr noundef nonnull @.str.53)
          to label %__cxx_global_var_init.52.exit unwind label %lpad.i101

lpad.i101:                                        ; preds = %__cxx_global_var_init.50.exit
  %27 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.52.exit:                    ; preds = %__cxx_global_var_init.50.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i98, align 8, !tbaa !416
  %func_.i.i99 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i98, i64 0, i32 1
  store ptr @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i99, align 8, !tbaa !418
  %call1.i100 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i98)
  store ptr %call1.i100, ptr @_ZL28benchmark_uniq_27_benchmark_, align 8, !tbaa !5
  %call.i102 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i102, ptr noundef nonnull @.str.55)
          to label %__cxx_global_var_init.54.exit unwind label %lpad.i105

lpad.i105:                                        ; preds = %__cxx_global_var_init.52.exit
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.54.exit:                    ; preds = %__cxx_global_var_init.52.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i102, align 8, !tbaa !416
  %func_.i.i103 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i102, i64 0, i32 1
  store ptr @_Z54benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i103, align 8, !tbaa !418
  %call1.i104 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i102)
  store ptr %call1.i104, ptr @_ZL28benchmark_uniq_28_benchmark_, align 8, !tbaa !5
  %call.i106 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i106, ptr noundef nonnull @.str.57)
          to label %__cxx_global_var_init.56.exit unwind label %lpad.i109

lpad.i109:                                        ; preds = %__cxx_global_var_init.54.exit
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.56.exit:                    ; preds = %__cxx_global_var_init.54.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i106, align 8, !tbaa !416
  %func_.i.i107 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i106, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i107, align 8, !tbaa !418
  %call1.i108 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i106)
  store ptr %call1.i108, ptr @_ZL28benchmark_uniq_29_benchmark_, align 8, !tbaa !5
  %call.i110 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i110, ptr noundef nonnull @.str.59)
          to label %__cxx_global_var_init.58.exit unwind label %lpad.i113

lpad.i113:                                        ; preds = %__cxx_global_var_init.56.exit
  %30 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.58.exit:                    ; preds = %__cxx_global_var_init.56.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i110, align 8, !tbaa !416
  %func_.i.i111 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i110, i64 0, i32 1
  store ptr @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i111, align 8, !tbaa !418
  %call1.i112 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i110)
  store ptr %call1.i112, ptr @_ZL28benchmark_uniq_30_benchmark_, align 8, !tbaa !5
  %call.i114 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i114, ptr noundef nonnull @.str.61)
          to label %__cxx_global_var_init.60.exit unwind label %lpad.i117

lpad.i117:                                        ; preds = %__cxx_global_var_init.58.exit
  %31 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.60.exit:                    ; preds = %__cxx_global_var_init.58.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i114, align 8, !tbaa !416
  %func_.i.i115 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i114, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i115, align 8, !tbaa !418
  %call1.i116 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i114)
  store ptr %call1.i116, ptr @_ZL28benchmark_uniq_31_benchmark_, align 8, !tbaa !5
  %call.i118 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i118, ptr noundef nonnull @.str.63)
          to label %__cxx_global_var_init.62.exit unwind label %lpad.i121

lpad.i121:                                        ; preds = %__cxx_global_var_init.60.exit
  %32 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.62.exit:                    ; preds = %__cxx_global_var_init.60.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i118, align 8, !tbaa !416
  %func_.i.i119 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i118, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint64_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i119, align 8, !tbaa !418
  %call1.i120 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i118)
  store ptr %call1.i120, ptr @_ZL28benchmark_uniq_32_benchmark_, align 8, !tbaa !5
  %call.i122 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i122, ptr noundef nonnull @.str.65)
          to label %__cxx_global_var_init.64.exit unwind label %lpad.i125

lpad.i125:                                        ; preds = %__cxx_global_var_init.62.exit
  %33 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.64.exit:                    ; preds = %__cxx_global_var_init.62.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i122, align 8, !tbaa !416
  %func_.i.i123 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i122, i64 0, i32 1
  store ptr @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint64_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i123, align 8, !tbaa !418
  %call1.i124 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i122)
  store ptr %call1.i124, ptr @_ZL28benchmark_uniq_33_benchmark_, align 8, !tbaa !5
  %call.i126 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i126, ptr noundef nonnull @.str.67)
          to label %__cxx_global_var_init.66.exit unwind label %lpad.i129

lpad.i129:                                        ; preds = %__cxx_global_var_init.64.exit
  %34 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.66.exit:                    ; preds = %__cxx_global_var_init.64.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i126, align 8, !tbaa !416
  %func_.i.i127 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i126, i64 0, i32 1
  store ptr @_Z54benchForTruncOrZextVecInLoopFrom_uint64_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i127, align 8, !tbaa !418
  %call1.i128 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i126)
  store ptr %call1.i128, ptr @_ZL28benchmark_uniq_34_benchmark_, align 8, !tbaa !5
  %call.i130 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i130, ptr noundef nonnull @.str.69)
          to label %__cxx_global_var_init.68.exit unwind label %lpad.i133

lpad.i133:                                        ; preds = %__cxx_global_var_init.66.exit
  %35 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.68.exit:                    ; preds = %__cxx_global_var_init.66.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i130, align 8, !tbaa !416
  %func_.i.i131 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i130, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint64_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i131, align 8, !tbaa !418
  %call1.i132 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i130)
  store ptr %call1.i132, ptr @_ZL28benchmark_uniq_35_benchmark_, align 8, !tbaa !5
  %call.i134 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i134, ptr noundef nonnull @.str.71)
          to label %__cxx_global_var_init.70.exit unwind label %lpad.i137

lpad.i137:                                        ; preds = %__cxx_global_var_init.68.exit
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.70.exit:                    ; preds = %__cxx_global_var_init.68.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i134, align 8, !tbaa !416
  %func_.i.i135 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i134, i64 0, i32 1
  store ptr @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint64_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i135, align 8, !tbaa !418
  %call1.i136 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i134)
  store ptr %call1.i136, ptr @_ZL28benchmark_uniq_36_benchmark_, align 8, !tbaa !5
  %call.i138 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i138, ptr noundef nonnull @.str.73)
          to label %__cxx_global_var_init.72.exit unwind label %lpad.i141

lpad.i141:                                        ; preds = %__cxx_global_var_init.70.exit
  %37 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.72.exit:                    ; preds = %__cxx_global_var_init.70.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i138, align 8, !tbaa !416
  %func_.i.i139 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i138, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint64_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i139, align 8, !tbaa !418
  %call1.i140 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i138)
  store ptr %call1.i140, ptr @_ZL28benchmark_uniq_37_benchmark_, align 8, !tbaa !5
  %call.i142 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i142, ptr noundef nonnull @.str.75)
          to label %__cxx_global_var_init.74.exit unwind label %lpad.i145

lpad.i145:                                        ; preds = %__cxx_global_var_init.72.exit
  %38 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.74.exit:                    ; preds = %__cxx_global_var_init.72.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i142, align 8, !tbaa !416
  %func_.i.i143 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i142, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i143, align 8, !tbaa !418
  %call1.i144 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i142)
  store ptr %call1.i144, ptr @_ZL28benchmark_uniq_38_benchmark_, align 8, !tbaa !5
  %call.i146 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i146, ptr noundef nonnull @.str.77)
          to label %__cxx_global_var_init.76.exit unwind label %lpad.i149

lpad.i149:                                        ; preds = %__cxx_global_var_init.74.exit
  %39 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.76.exit:                    ; preds = %__cxx_global_var_init.74.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i146, align 8, !tbaa !416
  %func_.i.i147 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i146, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i147, align 8, !tbaa !418
  %call1.i148 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i146)
  store ptr %call1.i148, ptr @_ZL28benchmark_uniq_39_benchmark_, align 8, !tbaa !5
  %call.i150 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i150, ptr noundef nonnull @.str.79)
          to label %__cxx_global_var_init.78.exit unwind label %lpad.i153

lpad.i153:                                        ; preds = %__cxx_global_var_init.76.exit
  %40 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.78.exit:                    ; preds = %__cxx_global_var_init.76.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i150, align 8, !tbaa !416
  %func_.i.i151 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i150, i64 0, i32 1
  store ptr @_Z53benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i151, align 8, !tbaa !418
  %call1.i152 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i150)
  store ptr %call1.i152, ptr @_ZL28benchmark_uniq_40_benchmark_, align 8, !tbaa !5
  %call.i154 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i154, ptr noundef nonnull @.str.81)
          to label %__cxx_global_var_init.80.exit unwind label %lpad.i157

lpad.i157:                                        ; preds = %__cxx_global_var_init.78.exit
  %41 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.80.exit:                    ; preds = %__cxx_global_var_init.78.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i154, align 8, !tbaa !416
  %func_.i.i155 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i154, i64 0, i32 1
  store ptr @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i155, align 8, !tbaa !418
  %call1.i156 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i154)
  store ptr %call1.i156, ptr @_ZL28benchmark_uniq_41_benchmark_, align 8, !tbaa !5
  %call.i158 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i158, ptr noundef nonnull @.str.83)
          to label %__cxx_global_var_init.82.exit unwind label %lpad.i161

lpad.i161:                                        ; preds = %__cxx_global_var_init.80.exit
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.82.exit:                    ; preds = %__cxx_global_var_init.80.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i158, align 8, !tbaa !416
  %func_.i.i159 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i158, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i159, align 8, !tbaa !418
  %call1.i160 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i158)
  store ptr %call1.i160, ptr @_ZL28benchmark_uniq_42_benchmark_, align 8, !tbaa !5
  %call.i162 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i162, ptr noundef nonnull @.str.85)
          to label %__cxx_global_var_init.84.exit unwind label %lpad.i165

lpad.i165:                                        ; preds = %__cxx_global_var_init.82.exit
  %43 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.84.exit:                    ; preds = %__cxx_global_var_init.82.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i162, align 8, !tbaa !416
  %func_.i.i163 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i162, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint16_t_RN9benchmark5StateE, ptr %func_.i.i163, align 8, !tbaa !418
  %call1.i164 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i162)
  store ptr %call1.i164, ptr @_ZL28benchmark_uniq_43_benchmark_, align 8, !tbaa !5
  %call.i166 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i166, ptr noundef nonnull @.str.87)
          to label %__cxx_global_var_init.86.exit unwind label %lpad.i169

lpad.i169:                                        ; preds = %__cxx_global_var_init.84.exit
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.86.exit:                    ; preds = %__cxx_global_var_init.84.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i166, align 8, !tbaa !416
  %func_.i.i167 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i166, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i167, align 8, !tbaa !418
  %call1.i168 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i166)
  store ptr %call1.i168, ptr @_ZL28benchmark_uniq_44_benchmark_, align 8, !tbaa !5
  %call.i170 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i170, ptr noundef nonnull @.str.89)
          to label %__cxx_global_var_init.88.exit unwind label %lpad.i173

lpad.i173:                                        ; preds = %__cxx_global_var_init.86.exit
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.88.exit:                    ; preds = %__cxx_global_var_init.86.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i170, align 8, !tbaa !416
  %func_.i.i171 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i170, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i171, align 8, !tbaa !418
  %call1.i172 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i170)
  store ptr %call1.i172, ptr @_ZL28benchmark_uniq_45_benchmark_, align 8, !tbaa !5
  %call.i174 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i174, ptr noundef nonnull @.str.91)
          to label %__cxx_global_var_init.90.exit unwind label %lpad.i177

lpad.i177:                                        ; preds = %__cxx_global_var_init.88.exit
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.90.exit:                    ; preds = %__cxx_global_var_init.88.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i174, align 8, !tbaa !416
  %func_.i.i175 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i174, i64 0, i32 1
  store ptr @_Z53benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i175, align 8, !tbaa !418
  %call1.i176 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i174)
  store ptr %call1.i176, ptr @_ZL28benchmark_uniq_46_benchmark_, align 8, !tbaa !5
  %call.i178 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i178, ptr noundef nonnull @.str.93)
          to label %__cxx_global_var_init.92.exit unwind label %lpad.i181

lpad.i181:                                        ; preds = %__cxx_global_var_init.90.exit
  %47 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.92.exit:                    ; preds = %__cxx_global_var_init.90.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i178, align 8, !tbaa !416
  %func_.i.i179 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i178, i64 0, i32 1
  store ptr @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i179, align 8, !tbaa !418
  %call1.i180 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i178)
  store ptr %call1.i180, ptr @_ZL28benchmark_uniq_47_benchmark_, align 8, !tbaa !5
  %call.i182 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i182, ptr noundef nonnull @.str.95)
          to label %__cxx_global_var_init.94.exit unwind label %lpad.i185

lpad.i185:                                        ; preds = %__cxx_global_var_init.92.exit
  %48 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.94.exit:                    ; preds = %__cxx_global_var_init.92.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i182, align 8, !tbaa !416
  %func_.i.i183 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i182, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i183, align 8, !tbaa !418
  %call1.i184 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i182)
  store ptr %call1.i184, ptr @_ZL28benchmark_uniq_48_benchmark_, align 8, !tbaa !5
  %call.i186 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i186, ptr noundef nonnull @.str.97)
          to label %__cxx_global_var_init.96.exit unwind label %lpad.i189

lpad.i189:                                        ; preds = %__cxx_global_var_init.94.exit
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.96.exit:                    ; preds = %__cxx_global_var_init.94.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i186, align 8, !tbaa !416
  %func_.i.i187 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i186, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i187, align 8, !tbaa !418
  %call1.i188 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i186)
  store ptr %call1.i188, ptr @_ZL28benchmark_uniq_49_benchmark_, align 8, !tbaa !5
  %call.i190 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i190, ptr noundef nonnull @.str.99)
          to label %__cxx_global_var_init.98.exit unwind label %lpad.i193

lpad.i193:                                        ; preds = %__cxx_global_var_init.96.exit
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.98.exit:                    ; preds = %__cxx_global_var_init.96.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i190, align 8, !tbaa !416
  %func_.i.i191 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i190, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecInLoopWithVW8From_uint8_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i191, align 8, !tbaa !418
  %call1.i192 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i190)
  store ptr %call1.i192, ptr @_ZL28benchmark_uniq_50_benchmark_, align 8, !tbaa !5
  %call.i194 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i194, ptr noundef nonnull @.str.101)
          to label %__cxx_global_var_init.100.exit unwind label %lpad.i197

lpad.i197:                                        ; preds = %__cxx_global_var_init.98.exit
  %51 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.100.exit:                   ; preds = %__cxx_global_var_init.98.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i194, align 8, !tbaa !416
  %func_.i.i195 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i194, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW16From_uint8_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i195, align 8, !tbaa !418
  %call1.i196 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i194)
  store ptr %call1.i196, ptr @_ZL28benchmark_uniq_51_benchmark_, align 8, !tbaa !5
  %call.i198 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i198, ptr noundef nonnull @.str.103)
          to label %__cxx_global_var_init.102.exit unwind label %lpad.i201

lpad.i201:                                        ; preds = %__cxx_global_var_init.100.exit
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.102.exit:                   ; preds = %__cxx_global_var_init.100.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i198, align 8, !tbaa !416
  %func_.i.i199 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i198, i64 0, i32 1
  store ptr @_Z53benchForTruncOrZextVecInLoopFrom_uint8_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i199, align 8, !tbaa !418
  %call1.i200 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i198)
  store ptr %call1.i200, ptr @_ZL28benchmark_uniq_52_benchmark_, align 8, !tbaa !5
  %call.i202 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i202, ptr noundef nonnull @.str.105)
          to label %__cxx_global_var_init.104.exit unwind label %lpad.i205

lpad.i205:                                        ; preds = %__cxx_global_var_init.102.exit
  %53 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.104.exit:                   ; preds = %__cxx_global_var_init.102.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i202, align 8, !tbaa !416
  %func_.i.i203 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i202, i64 0, i32 1
  store ptr @_Z67benchForTruncOrZextVecWithAddInLoopWithVW8From_uint8_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i203, align 8, !tbaa !418
  %call1.i204 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i202)
  store ptr %call1.i204, ptr @_ZL28benchmark_uniq_53_benchmark_, align 8, !tbaa !5
  %call.i206 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i206, ptr noundef nonnull @.str.107)
          to label %__cxx_global_var_init.106.exit unwind label %lpad.i209

lpad.i209:                                        ; preds = %__cxx_global_var_init.104.exit
  %54 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.106.exit:                   ; preds = %__cxx_global_var_init.104.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i206, align 8, !tbaa !416
  %func_.i.i207 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i206, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW16From_uint8_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i207, align 8, !tbaa !418
  %call1.i208 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i206)
  store ptr %call1.i208, ptr @_ZL28benchmark_uniq_54_benchmark_, align 8, !tbaa !5
  %call.i210 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i210, ptr noundef nonnull @.str.109)
          to label %__cxx_global_var_init.108.exit unwind label %lpad.i213

lpad.i213:                                        ; preds = %__cxx_global_var_init.106.exit
  %55 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.108.exit:                   ; preds = %__cxx_global_var_init.106.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i210, align 8, !tbaa !416
  %func_.i.i211 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i210, i64 0, i32 1
  store ptr @_Z60benchForTruncOrZextVecWithAddInLoopFrom_uint8_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i211, align 8, !tbaa !418
  %call1.i212 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i210)
  store ptr %call1.i212, ptr @_ZL28benchmark_uniq_55_benchmark_, align 8, !tbaa !5
  %call.i214 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i214, ptr noundef nonnull @.str.111)
          to label %__cxx_global_var_init.110.exit unwind label %lpad.i217

lpad.i217:                                        ; preds = %__cxx_global_var_init.108.exit
  %56 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.110.exit:                   ; preds = %__cxx_global_var_init.108.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i214, align 8, !tbaa !416
  %func_.i.i215 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i214, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i215, align 8, !tbaa !418
  %call1.i216 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i214)
  store ptr %call1.i216, ptr @_ZL28benchmark_uniq_56_benchmark_, align 8, !tbaa !5
  %call.i218 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i218, ptr noundef nonnull @.str.113)
          to label %__cxx_global_var_init.112.exit unwind label %lpad.i221

lpad.i221:                                        ; preds = %__cxx_global_var_init.110.exit
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.112.exit:                   ; preds = %__cxx_global_var_init.110.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i218, align 8, !tbaa !416
  %func_.i.i219 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i218, i64 0, i32 1
  store ptr @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i219, align 8, !tbaa !418
  %call1.i220 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i218)
  store ptr %call1.i220, ptr @_ZL28benchmark_uniq_57_benchmark_, align 8, !tbaa !5
  %call.i222 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i222, ptr noundef nonnull @.str.115)
          to label %__cxx_global_var_init.114.exit unwind label %lpad.i225

lpad.i225:                                        ; preds = %__cxx_global_var_init.112.exit
  %58 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.114.exit:                   ; preds = %__cxx_global_var_init.112.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i222, align 8, !tbaa !416
  %func_.i.i223 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i222, i64 0, i32 1
  store ptr @_Z54benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i223, align 8, !tbaa !418
  %call1.i224 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i222)
  store ptr %call1.i224, ptr @_ZL28benchmark_uniq_58_benchmark_, align 8, !tbaa !5
  %call.i226 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i226, ptr noundef nonnull @.str.117)
          to label %__cxx_global_var_init.116.exit unwind label %lpad.i229

lpad.i229:                                        ; preds = %__cxx_global_var_init.114.exit
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.116.exit:                   ; preds = %__cxx_global_var_init.114.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i226, align 8, !tbaa !416
  %func_.i.i227 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i226, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i227, align 8, !tbaa !418
  %call1.i228 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i226)
  store ptr %call1.i228, ptr @_ZL28benchmark_uniq_59_benchmark_, align 8, !tbaa !5
  %call.i230 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i230, ptr noundef nonnull @.str.119)
          to label %__cxx_global_var_init.118.exit unwind label %lpad.i233

lpad.i233:                                        ; preds = %__cxx_global_var_init.116.exit
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.118.exit:                   ; preds = %__cxx_global_var_init.116.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i230, align 8, !tbaa !416
  %func_.i.i231 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i230, i64 0, i32 1
  store ptr @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i231, align 8, !tbaa !418
  %call1.i232 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i230)
  store ptr %call1.i232, ptr @_ZL28benchmark_uniq_60_benchmark_, align 8, !tbaa !5
  %call.i234 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i234, ptr noundef nonnull @.str.121)
          to label %__cxx_global_var_init.120.exit unwind label %lpad.i237

lpad.i237:                                        ; preds = %__cxx_global_var_init.118.exit
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.120.exit:                   ; preds = %__cxx_global_var_init.118.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i234, align 8, !tbaa !416
  %func_.i.i235 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i234, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint32_t_RN9benchmark5StateE, ptr %func_.i.i235, align 8, !tbaa !418
  %call1.i236 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i234)
  store ptr %call1.i236, ptr @_ZL28benchmark_uniq_61_benchmark_, align 8, !tbaa !5
  %call.i238 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i238, ptr noundef nonnull @.str.123)
          to label %__cxx_global_var_init.122.exit unwind label %lpad.i241

lpad.i241:                                        ; preds = %__cxx_global_var_init.120.exit
  %62 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.122.exit:                   ; preds = %__cxx_global_var_init.120.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i238, align 8, !tbaa !416
  %func_.i.i239 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i238, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint16_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i239, align 8, !tbaa !418
  %call1.i240 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i238)
  store ptr %call1.i240, ptr @_ZL28benchmark_uniq_62_benchmark_, align 8, !tbaa !5
  %call.i242 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i242, ptr noundef nonnull @.str.125)
          to label %__cxx_global_var_init.124.exit unwind label %lpad.i245

lpad.i245:                                        ; preds = %__cxx_global_var_init.122.exit
  %63 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.124.exit:                   ; preds = %__cxx_global_var_init.122.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i242, align 8, !tbaa !416
  %func_.i.i243 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i242, i64 0, i32 1
  store ptr @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint16_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i243, align 8, !tbaa !418
  %call1.i244 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i242)
  store ptr %call1.i244, ptr @_ZL28benchmark_uniq_63_benchmark_, align 8, !tbaa !5
  %call.i246 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i246, ptr noundef nonnull @.str.127)
          to label %__cxx_global_var_init.126.exit unwind label %lpad.i249

lpad.i249:                                        ; preds = %__cxx_global_var_init.124.exit
  %64 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.126.exit:                   ; preds = %__cxx_global_var_init.124.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i246, align 8, !tbaa !416
  %func_.i.i247 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i246, i64 0, i32 1
  store ptr @_Z54benchForTruncOrZextVecInLoopFrom_uint16_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i247, align 8, !tbaa !418
  %call1.i248 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i246)
  store ptr %call1.i248, ptr @_ZL28benchmark_uniq_64_benchmark_, align 8, !tbaa !5
  %call.i250 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i250, ptr noundef nonnull @.str.129)
          to label %__cxx_global_var_init.128.exit unwind label %lpad.i253

lpad.i253:                                        ; preds = %__cxx_global_var_init.126.exit
  %65 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.128.exit:                   ; preds = %__cxx_global_var_init.126.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i250, align 8, !tbaa !416
  %func_.i.i251 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i250, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint16_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i251, align 8, !tbaa !418
  %call1.i252 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i250)
  store ptr %call1.i252, ptr @_ZL28benchmark_uniq_65_benchmark_, align 8, !tbaa !5
  %call.i254 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i254, ptr noundef nonnull @.str.131)
          to label %__cxx_global_var_init.130.exit unwind label %lpad.i257

lpad.i257:                                        ; preds = %__cxx_global_var_init.128.exit
  %66 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.130.exit:                   ; preds = %__cxx_global_var_init.128.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i254, align 8, !tbaa !416
  %func_.i.i255 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i254, i64 0, i32 1
  store ptr @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint16_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i255, align 8, !tbaa !418
  %call1.i256 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i254)
  store ptr %call1.i256, ptr @_ZL28benchmark_uniq_66_benchmark_, align 8, !tbaa !5
  %call.i258 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i258, ptr noundef nonnull @.str.133)
          to label %__cxx_global_var_init.132.exit unwind label %lpad.i261

lpad.i261:                                        ; preds = %__cxx_global_var_init.130.exit
  %67 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.132.exit:                   ; preds = %__cxx_global_var_init.130.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i258, align 8, !tbaa !416
  %func_.i.i259 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i258, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint16_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i259, align 8, !tbaa !418
  %call1.i260 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i258)
  store ptr %call1.i260, ptr @_ZL28benchmark_uniq_67_benchmark_, align 8, !tbaa !5
  %call.i262 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i262, ptr noundef nonnull @.str.135)
          to label %__cxx_global_var_init.134.exit unwind label %lpad.i265

lpad.i265:                                        ; preds = %__cxx_global_var_init.132.exit
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.134.exit:                   ; preds = %__cxx_global_var_init.132.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i262, align 8, !tbaa !416
  %func_.i.i263 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i262, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecInLoopWithVW8From_uint32_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i263, align 8, !tbaa !418
  %call1.i264 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i262)
  store ptr %call1.i264, ptr @_ZL28benchmark_uniq_68_benchmark_, align 8, !tbaa !5
  %call.i266 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i266, ptr noundef nonnull @.str.137)
          to label %__cxx_global_var_init.136.exit unwind label %lpad.i269

lpad.i269:                                        ; preds = %__cxx_global_var_init.134.exit
  %69 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.136.exit:                   ; preds = %__cxx_global_var_init.134.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i266, align 8, !tbaa !416
  %func_.i.i267 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i266, i64 0, i32 1
  store ptr @_Z62benchForTruncOrZextVecInLoopWithVW16From_uint32_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i267, align 8, !tbaa !418
  %call1.i268 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i266)
  store ptr %call1.i268, ptr @_ZL28benchmark_uniq_69_benchmark_, align 8, !tbaa !5
  %call.i270 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i270, ptr noundef nonnull @.str.139)
          to label %__cxx_global_var_init.138.exit unwind label %lpad.i273

lpad.i273:                                        ; preds = %__cxx_global_var_init.136.exit
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.138.exit:                   ; preds = %__cxx_global_var_init.136.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i270, align 8, !tbaa !416
  %func_.i.i271 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i270, i64 0, i32 1
  store ptr @_Z54benchForTruncOrZextVecInLoopFrom_uint32_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i271, align 8, !tbaa !418
  %call1.i272 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i270)
  store ptr %call1.i272, ptr @_ZL28benchmark_uniq_70_benchmark_, align 8, !tbaa !5
  %call.i274 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i274, ptr noundef nonnull @.str.141)
          to label %__cxx_global_var_init.140.exit unwind label %lpad.i277

lpad.i277:                                        ; preds = %__cxx_global_var_init.138.exit
  %71 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.140.exit:                   ; preds = %__cxx_global_var_init.138.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i274, align 8, !tbaa !416
  %func_.i.i275 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i274, i64 0, i32 1
  store ptr @_Z68benchForTruncOrZextVecWithAddInLoopWithVW8From_uint32_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i275, align 8, !tbaa !418
  %call1.i276 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i274)
  store ptr %call1.i276, ptr @_ZL28benchmark_uniq_71_benchmark_, align 8, !tbaa !5
  %call.i278 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i278, ptr noundef nonnull @.str.143)
          to label %__cxx_global_var_init.142.exit unwind label %lpad.i281

lpad.i281:                                        ; preds = %__cxx_global_var_init.140.exit
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.142.exit:                   ; preds = %__cxx_global_var_init.140.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i278, align 8, !tbaa !416
  %func_.i.i279 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i278, i64 0, i32 1
  store ptr @_Z69benchForTruncOrZextVecWithAddInLoopWithVW16From_uint32_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i279, align 8, !tbaa !418
  %call1.i280 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i278)
  store ptr %call1.i280, ptr @_ZL28benchmark_uniq_72_benchmark_, align 8, !tbaa !5
  %call.i282 = tail call noalias noundef nonnull dereferenceable(224) ptr @_Znwm(i64 noundef 224) #10
  invoke void @_ZN9benchmark8internal9BenchmarkC2EPKc(ptr noundef nonnull align 8 dereferenceable(216) %call.i282, ptr noundef nonnull @.str.145)
          to label %__cxx_global_var_init.144.exit unwind label %lpad.i285

lpad.i285:                                        ; preds = %__cxx_global_var_init.142.exit
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %common.resume

__cxx_global_var_init.144.exit:                   ; preds = %__cxx_global_var_init.142.exit
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN9benchmark8internal17FunctionBenchmarkE, i64 0, inrange i32 0, i64 2), ptr %call.i282, align 8, !tbaa !416
  %func_.i.i283 = getelementptr inbounds %"class.benchmark::internal::FunctionBenchmark", ptr %call.i282, i64 0, i32 1
  store ptr @_Z61benchForTruncOrZextVecWithAddInLoopFrom_uint32_t_To_uint64_t_RN9benchmark5StateE, ptr %func_.i.i283, align 8, !tbaa !418
  %call1.i284 = tail call noundef ptr @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE(ptr noundef nonnull %call.i282)
  store ptr %call1.i284, ptr @_ZL28benchmark_uniq_73_benchmark_, align 8, !tbaa !5
  ret void
}

attributes #0 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { inlinehint mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { builtin allocsize(0) }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!10, !11, i64 0}
!10 = !{!"_ZTSNSt24uniform_int_distributionItE10param_typeE", !11, i64 0, !11, i64 2}
!11 = !{!"short", !7, i64 0}
!12 = !{!10, !11, i64 2}
!13 = !{!11, !11, i64 0}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.mustprogress"}
!16 = !{!7, !7, i64 0}
!17 = distinct !{!17, !15, !18}
!18 = !{!"llvm.loop.vectorize.width", i32 1}
!19 = distinct !{!19, !15, !20, !21}
!20 = !{!"llvm.loop.isvectorized", i32 1}
!21 = !{!"llvm.loop.unroll.runtime.disable"}
!22 = distinct !{!22, !15}
!23 = !{!24, !26, i64 26}
!24 = !{!"_ZTSN9benchmark5StateE", !25, i64 0, !25, i64 8, !25, i64 16, !26, i64 24, !26, i64 25, !26, i64 26, !27, i64 32, !25, i64 56, !31, i64 64, !39, i64 112, !39, i64 116, !6, i64 120, !6, i64 128, !6, i64 136}
!25 = !{!"long", !7, i64 0}
!26 = !{!"bool", !7, i64 0}
!27 = !{!"_ZTSSt6vectorIlSaIlEE", !28, i64 0}
!28 = !{!"_ZTSSt12_Vector_baseIlSaIlEE", !29, i64 0}
!29 = !{!"_ZTSNSt12_Vector_baseIlSaIlEE12_Vector_implE", !30, i64 0}
!30 = !{!"_ZTSNSt12_Vector_baseIlSaIlEE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!31 = !{!"_ZTSSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEE", !32, i64 0}
!32 = !{!"_ZTSSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE", !33, i64 0}
!33 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE13_Rb_tree_implISE_Lb1EEE", !34, i64 0, !36, i64 8}
!34 = !{!"_ZTSSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE", !35, i64 0}
!35 = !{!"_ZTSSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE"}
!36 = !{!"_ZTSSt15_Rb_tree_header", !37, i64 0, !25, i64 32}
!37 = !{!"_ZTSSt18_Rb_tree_node_base", !38, i64 0, !6, i64 8, !6, i64 16, !6, i64 24}
!38 = !{!"_ZTSSt14_Rb_tree_color", !7, i64 0}
!39 = !{!"int", !7, i64 0}
!40 = !{i8 0, i8 2}
!41 = !{}
!42 = !{!"branch_weights", i32 1, i32 2000}
!43 = !{i64 4203571}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !15, !20, !21}
!50 = distinct !{!50, !15, !20}
!51 = distinct !{!51, !15, !20, !21}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56}
!56 = distinct !{!56, !54}
!57 = distinct !{!57, !15, !20, !21}
!58 = distinct !{!58, !15, !20}
!59 = distinct !{!59, !15, !20, !21}
!60 = !{!61}
!61 = distinct !{!61, !62}
!62 = distinct !{!62, !"LVerDomain"}
!63 = !{!64}
!64 = distinct !{!64, !62}
!65 = distinct !{!65, !15, !20, !21}
!66 = distinct !{!66, !15, !20}
!67 = !{!68, !7, i64 0}
!68 = !{!"_ZTSNSt24uniform_int_distributionIhE10param_typeE", !7, i64 0, !7, i64 1}
!69 = !{!68, !7, i64 1}
!70 = distinct !{!70, !15}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !15, !20, !21}
!77 = distinct !{!77, !15, !20}
!78 = !{!79}
!79 = distinct !{!79, !80}
!80 = distinct !{!80, !"LVerDomain"}
!81 = !{!82}
!82 = distinct !{!82, !80}
!83 = distinct !{!83, !15, !20, !21}
!84 = distinct !{!84, !15, !20}
!85 = !{!86}
!86 = distinct !{!86, !87}
!87 = distinct !{!87, !"LVerDomain"}
!88 = !{!89}
!89 = distinct !{!89, !87}
!90 = distinct !{!90, !15, !20, !21}
!91 = distinct !{!91, !15, !20}
!92 = !{!93, !39, i64 0}
!93 = !{!"_ZTSNSt24uniform_int_distributionIjE10param_typeE", !39, i64 0, !39, i64 4}
!94 = !{!93, !39, i64 4}
!95 = !{!39, !39, i64 0}
!96 = distinct !{!96, !15}
!97 = distinct !{!97, !15, !18}
!98 = distinct !{!98, !15, !20, !21}
!99 = distinct !{!99, !15}
!100 = !{!101}
!101 = distinct !{!101, !102}
!102 = distinct !{!102, !"LVerDomain"}
!103 = !{!104}
!104 = distinct !{!104, !102}
!105 = distinct !{!105, !15, !20, !21}
!106 = distinct !{!106, !15, !20}
!107 = distinct !{!107, !15, !20, !21}
!108 = !{!109}
!109 = distinct !{!109, !110}
!110 = distinct !{!110, !"LVerDomain"}
!111 = !{!112}
!112 = distinct !{!112, !110}
!113 = distinct !{!113, !15, !20, !21}
!114 = distinct !{!114, !15, !20}
!115 = distinct !{!115, !15, !20, !21}
!116 = !{!117}
!117 = distinct !{!117, !118}
!118 = distinct !{!118, !"LVerDomain"}
!119 = !{!120}
!120 = distinct !{!120, !118}
!121 = distinct !{!121, !15, !20, !21}
!122 = distinct !{!122, !15, !20}
!123 = !{!124}
!124 = distinct !{!124, !125}
!125 = distinct !{!125, !"LVerDomain"}
!126 = !{!127}
!127 = distinct !{!127, !125}
!128 = distinct !{!128, !15, !20, !21}
!129 = distinct !{!129, !15, !20}
!130 = !{!131}
!131 = distinct !{!131, !132}
!132 = distinct !{!132, !"LVerDomain"}
!133 = !{!134}
!134 = distinct !{!134, !132}
!135 = distinct !{!135, !15, !20, !21}
!136 = distinct !{!136, !15, !20}
!137 = !{!138}
!138 = distinct !{!138, !139}
!139 = distinct !{!139, !"LVerDomain"}
!140 = !{!141}
!141 = distinct !{!141, !139}
!142 = distinct !{!142, !15, !20, !21}
!143 = distinct !{!143, !15, !20}
!144 = !{!145, !25, i64 0}
!145 = !{!"_ZTSNSt24uniform_int_distributionImE10param_typeE", !25, i64 0, !25, i64 8}
!146 = !{!145, !25, i64 8}
!147 = !{!25, !25, i64 0}
!148 = distinct !{!148, !15}
!149 = distinct !{!149, !15, !18}
!150 = distinct !{!150, !15, !20, !21}
!151 = distinct !{!151, !15}
!152 = !{!153}
!153 = distinct !{!153, !154}
!154 = distinct !{!154, !"LVerDomain"}
!155 = !{!156}
!156 = distinct !{!156, !154}
!157 = distinct !{!157, !15, !20, !21}
!158 = distinct !{!158, !15, !20}
!159 = distinct !{!159, !15, !20, !21}
!160 = !{!161}
!161 = distinct !{!161, !162}
!162 = distinct !{!162, !"LVerDomain"}
!163 = !{!164}
!164 = distinct !{!164, !162}
!165 = distinct !{!165, !15, !20, !21}
!166 = distinct !{!166, !15, !20}
!167 = distinct !{!167, !15, !20, !21}
!168 = !{!169}
!169 = distinct !{!169, !170}
!170 = distinct !{!170, !"LVerDomain"}
!171 = !{!172}
!172 = distinct !{!172, !170}
!173 = distinct !{!173, !15, !20, !21}
!174 = distinct !{!174, !15, !20}
!175 = !{!176}
!176 = distinct !{!176, !177}
!177 = distinct !{!177, !"LVerDomain"}
!178 = !{!179}
!179 = distinct !{!179, !177}
!180 = distinct !{!180, !15, !20, !21}
!181 = distinct !{!181, !15, !20}
!182 = !{!183}
!183 = distinct !{!183, !184}
!184 = distinct !{!184, !"LVerDomain"}
!185 = !{!186}
!186 = distinct !{!186, !184}
!187 = distinct !{!187, !15, !20, !21}
!188 = distinct !{!188, !15, !20}
!189 = !{!190}
!190 = distinct !{!190, !191}
!191 = distinct !{!191, !"LVerDomain"}
!192 = !{!193}
!193 = distinct !{!193, !191}
!194 = distinct !{!194, !15, !20, !21}
!195 = distinct !{!195, !15, !20}
!196 = distinct !{!196, !15, !18}
!197 = distinct !{!197, !15, !20, !21}
!198 = distinct !{!198, !15}
!199 = distinct !{!199, !15, !20, !21}
!200 = distinct !{!200, !15, !20, !21}
!201 = distinct !{!201, !15, !20, !21}
!202 = distinct !{!202, !15, !20, !21}
!203 = distinct !{!203, !15, !20, !21}
!204 = distinct !{!204, !15, !20, !21}
!205 = distinct !{!205, !15, !20, !21}
!206 = distinct !{!206, !15, !20, !21}
!207 = distinct !{!207, !15, !18}
!208 = distinct !{!208, !15, !20, !21}
!209 = distinct !{!209, !15}
!210 = distinct !{!210, !15, !20, !21}
!211 = distinct !{!211, !15, !20, !21}
!212 = distinct !{!212, !15, !20, !21}
!213 = distinct !{!213, !15, !20, !21}
!214 = distinct !{!214, !15, !20, !21}
!215 = distinct !{!215, !15, !20, !21}
!216 = distinct !{!216, !15, !20, !21}
!217 = distinct !{!217, !15, !20, !21}
!218 = distinct !{!218, !15, !18}
!219 = distinct !{!219, !15, !20, !21}
!220 = distinct !{!220, !15}
!221 = distinct !{!221, !15, !20, !21}
!222 = distinct !{!222, !15, !20, !21}
!223 = distinct !{!223, !15, !20, !21}
!224 = distinct !{!224, !15, !20, !21}
!225 = distinct !{!225, !15, !20, !21}
!226 = distinct !{!226, !15, !20, !21}
!227 = distinct !{!227, !15, !20, !21}
!228 = distinct !{!228, !15, !20, !21}
!229 = distinct !{!229, !15, !18}
!230 = distinct !{!230, !15, !20, !21}
!231 = distinct !{!231, !15}
!232 = !{!233}
!233 = distinct !{!233, !234}
!234 = distinct !{!234, !"LVerDomain"}
!235 = !{!236}
!236 = distinct !{!236, !234}
!237 = distinct !{!237, !15, !20, !21}
!238 = distinct !{!238, !15, !20}
!239 = distinct !{!239, !15, !20, !21}
!240 = !{!241}
!241 = distinct !{!241, !242}
!242 = distinct !{!242, !"LVerDomain"}
!243 = !{!244}
!244 = distinct !{!244, !242}
!245 = distinct !{!245, !15, !20, !21}
!246 = distinct !{!246, !15, !20}
!247 = distinct !{!247, !15, !20, !21}
!248 = !{!249}
!249 = distinct !{!249, !250}
!250 = distinct !{!250, !"LVerDomain"}
!251 = !{!252}
!252 = distinct !{!252, !250}
!253 = distinct !{!253, !15, !20, !21}
!254 = distinct !{!254, !15, !20}
!255 = !{!256}
!256 = distinct !{!256, !257}
!257 = distinct !{!257, !"LVerDomain"}
!258 = !{!259}
!259 = distinct !{!259, !257}
!260 = distinct !{!260, !15, !20, !21}
!261 = distinct !{!261, !15, !20}
!262 = !{!263}
!263 = distinct !{!263, !264}
!264 = distinct !{!264, !"LVerDomain"}
!265 = !{!266}
!266 = distinct !{!266, !264}
!267 = distinct !{!267, !15, !20, !21}
!268 = distinct !{!268, !15, !20}
!269 = !{!270}
!270 = distinct !{!270, !271}
!271 = distinct !{!271, !"LVerDomain"}
!272 = !{!273}
!273 = distinct !{!273, !271}
!274 = distinct !{!274, !15, !20, !21}
!275 = distinct !{!275, !15, !20}
!276 = distinct !{!276, !15, !18}
!277 = distinct !{!277, !15, !20, !21}
!278 = distinct !{!278, !15}
!279 = !{!280}
!280 = distinct !{!280, !281}
!281 = distinct !{!281, !"LVerDomain"}
!282 = !{!283}
!283 = distinct !{!283, !281}
!284 = distinct !{!284, !15, !20, !21}
!285 = distinct !{!285, !15, !20}
!286 = distinct !{!286, !15, !20, !21}
!287 = !{!288}
!288 = distinct !{!288, !289}
!289 = distinct !{!289, !"LVerDomain"}
!290 = !{!291}
!291 = distinct !{!291, !289}
!292 = distinct !{!292, !15, !20, !21}
!293 = distinct !{!293, !15, !20}
!294 = distinct !{!294, !15, !20, !21}
!295 = !{!296}
!296 = distinct !{!296, !297}
!297 = distinct !{!297, !"LVerDomain"}
!298 = !{!299}
!299 = distinct !{!299, !297}
!300 = distinct !{!300, !15, !20, !21}
!301 = distinct !{!301, !15, !20}
!302 = !{!303}
!303 = distinct !{!303, !304}
!304 = distinct !{!304, !"LVerDomain"}
!305 = !{!306}
!306 = distinct !{!306, !304}
!307 = distinct !{!307, !15, !20, !21}
!308 = distinct !{!308, !15, !20}
!309 = !{!310}
!310 = distinct !{!310, !311}
!311 = distinct !{!311, !"LVerDomain"}
!312 = !{!313}
!313 = distinct !{!313, !311}
!314 = distinct !{!314, !15, !20, !21}
!315 = distinct !{!315, !15, !20}
!316 = !{!317}
!317 = distinct !{!317, !318}
!318 = distinct !{!318, !"LVerDomain"}
!319 = !{!320}
!320 = distinct !{!320, !318}
!321 = distinct !{!321, !15, !20, !21}
!322 = distinct !{!322, !15, !20}
!323 = distinct !{!323, !15, !18}
!324 = distinct !{!324, !15, !20, !21}
!325 = distinct !{!325, !15}
!326 = !{!327}
!327 = distinct !{!327, !328}
!328 = distinct !{!328, !"LVerDomain"}
!329 = !{!330}
!330 = distinct !{!330, !328}
!331 = distinct !{!331, !15, !20, !21}
!332 = distinct !{!332, !15, !20}
!333 = distinct !{!333, !15, !20, !21}
!334 = !{!335}
!335 = distinct !{!335, !336}
!336 = distinct !{!336, !"LVerDomain"}
!337 = !{!338}
!338 = distinct !{!338, !336}
!339 = distinct !{!339, !15, !20, !21}
!340 = distinct !{!340, !15, !20}
!341 = distinct !{!341, !15, !20, !21}
!342 = !{!343}
!343 = distinct !{!343, !344}
!344 = distinct !{!344, !"LVerDomain"}
!345 = !{!346}
!346 = distinct !{!346, !344}
!347 = distinct !{!347, !15, !20, !21}
!348 = distinct !{!348, !15, !20}
!349 = !{!350}
!350 = distinct !{!350, !351}
!351 = distinct !{!351, !"LVerDomain"}
!352 = !{!353}
!353 = distinct !{!353, !351}
!354 = distinct !{!354, !15, !20, !21}
!355 = distinct !{!355, !15, !20}
!356 = !{!357}
!357 = distinct !{!357, !358}
!358 = distinct !{!358, !"LVerDomain"}
!359 = !{!360}
!360 = distinct !{!360, !358}
!361 = distinct !{!361, !15, !20, !21}
!362 = distinct !{!362, !15, !20}
!363 = !{!364}
!364 = distinct !{!364, !365}
!365 = distinct !{!365, !"LVerDomain"}
!366 = !{!367}
!367 = distinct !{!367, !365}
!368 = distinct !{!368, !15, !20, !21}
!369 = distinct !{!369, !15, !20}
!370 = distinct !{!370, !15, !18}
!371 = distinct !{!371, !15, !20, !21}
!372 = distinct !{!372, !15}
!373 = distinct !{!373, !15, !20, !21}
!374 = distinct !{!374, !15, !20, !21}
!375 = distinct !{!375, !15, !20, !21}
!376 = distinct !{!376, !15, !20, !21}
!377 = distinct !{!377, !15, !20, !21}
!378 = distinct !{!378, !15, !20, !21}
!379 = distinct !{!379, !15, !20, !21}
!380 = distinct !{!380, !15, !20, !21}
!381 = distinct !{!381, !15, !18}
!382 = distinct !{!382, !15, !20, !21}
!383 = distinct !{!383, !15}
!384 = distinct !{!384, !15, !20, !21}
!385 = distinct !{!385, !15, !20, !21}
!386 = distinct !{!386, !15, !20, !21}
!387 = distinct !{!387, !15, !20, !21}
!388 = distinct !{!388, !15, !20, !21}
!389 = distinct !{!389, !15, !20, !21}
!390 = distinct !{!390, !15, !20, !21}
!391 = distinct !{!391, !15, !20, !21}
!392 = distinct !{!392, !15, !18}
!393 = distinct !{!393, !15, !20, !21}
!394 = distinct !{!394, !15}
!395 = distinct !{!395, !15, !20, !21}
!396 = distinct !{!396, !15, !20, !21}
!397 = distinct !{!397, !15, !20, !21}
!398 = distinct !{!398, !15, !20, !21}
!399 = distinct !{!399, !15, !20, !21}
!400 = distinct !{!400, !15, !20, !21}
!401 = distinct !{!401, !15, !20, !21}
!402 = distinct !{!402, !15, !20, !21}
!403 = distinct !{!403, !15}
!404 = distinct !{!404, !15}
!405 = !{!406, !25, i64 4992}
!406 = !{!"_ZTSSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE", !7, i64 0, !25, i64 4992}
!407 = distinct !{!407, !15, !20, !21}
!408 = distinct !{!408, !15, !20, !21}
!409 = distinct !{!409, !15}
!410 = distinct !{!410, !15}
!411 = distinct !{!411, !15}
!412 = distinct !{!412, !15}
!413 = distinct !{!413, !15}
!414 = distinct !{!414, !15}
!415 = distinct !{!415, !15}
!416 = !{!417, !417, i64 0}
!417 = !{!"vtable pointer", !8, i64 0}
!418 = !{!419, !6, i64 216}
!419 = !{!"_ZTSN9benchmark8internal17FunctionBenchmarkE", !420, i64 0, !6, i64 216}
!420 = !{!"_ZTSN9benchmark8internal9BenchmarkE", !421, i64 8, !423, i64 40, !424, i64 48, !428, i64 72, !432, i64 96, !26, i64 100, !39, i64 104, !433, i64 112, !25, i64 120, !39, i64 128, !26, i64 132, !26, i64 133, !26, i64 134, !434, i64 136, !6, i64 144, !435, i64 152, !439, i64 176, !6, i64 200, !6, i64 208}
!421 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !422, i64 0, !25, i64 8, !7, i64 16}
!422 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!423 = !{!"_ZTSN9benchmark8internal21AggregationReportModeE", !7, i64 0}
!424 = !{!"_ZTSSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE", !425, i64 0}
!425 = !{!"_ZTSSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE", !426, i64 0}
!426 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implE", !427, i64 0}
!427 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!428 = !{!"_ZTSSt6vectorIS_IlSaIlEESaIS1_EE", !429, i64 0}
!429 = !{!"_ZTSSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE", !430, i64 0}
!430 = !{!"_ZTSNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE12_Vector_implE", !431, i64 0}
!431 = !{!"_ZTSNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!432 = !{!"_ZTSN9benchmark8TimeUnitE", !7, i64 0}
!433 = !{!"double", !7, i64 0}
!434 = !{!"_ZTSN9benchmark4BigOE", !7, i64 0}
!435 = !{!"_ZTSSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE", !436, i64 0}
!436 = !{!"_ZTSSt12_Vector_baseIN9benchmark8internal10StatisticsESaIS2_EE", !437, i64 0}
!437 = !{!"_ZTSNSt12_Vector_baseIN9benchmark8internal10StatisticsESaIS2_EE12_Vector_implE", !438, i64 0}
!438 = !{!"_ZTSNSt12_Vector_baseIN9benchmark8internal10StatisticsESaIS2_EE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!439 = !{!"_ZTSSt6vectorIiSaIiEE", !440, i64 0}
!440 = !{!"_ZTSSt12_Vector_baseIiSaIiEE", !441, i64 0}
!441 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE12_Vector_implE", !442, i64 0}
!442 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
