; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/DOE-ProxyApps-C++/CLAMR/mesh.cpp'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/DOE-ProxyApps-C++/CLAMR/mesh.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%class.Mesh = type { i32, %class.MallocPlus, %class.MallocPlus, [24 x double], [24 x i64], [4 x i32], [4 x i32], i8, i8, i32, i32, i32, i32, i32, ptr, ptr, float, double, i32, %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", ptr, %struct.TKDTree, %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector.11", %"class.std::vector.11", %"class.std::vector.11", i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, %"class.std::vector", ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %"class.std::vector.11", %"class.std::vector.11", %"class.std::vector.11", %"class.std::vector.11", %"class.std::vector.11", %"class.std::vector.11", i32, i32, %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector" }
%class.MallocPlus = type { %"class.std::map", %"class.std::map.0" }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, malloc_plus_memory_entry *>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, malloc_plus_memory_entry *>>, std::less<std::__cxx11::basic_string<char>>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, malloc_plus_memory_entry *>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, malloc_plus_memory_entry *>>, std::less<std::__cxx11::basic_string<char>>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, ptr, ptr, ptr }
%"class.std::map.0" = type { %"class.std::_Rb_tree.1" }
%"class.std::_Rb_tree.1" = type { %"struct.std::_Rb_tree<void *, std::pair<void *const, malloc_plus_memory_entry *>, std::_Select1st<std::pair<void *const, malloc_plus_memory_entry *>>, std::less<void *>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<void *, std::pair<void *const, malloc_plus_memory_entry *>, std::_Select1st<std::pair<void *const, malloc_plus_memory_entry *>>, std::less<void *>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare.5", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare.5" = type { %"struct.std::less.6" }
%"struct.std::less.6" = type { i8 }
%struct.TKDTree = type { %struct.TBounds, i32, i32, ptr, i8, i32, ptr, ptr }
%struct.TBounds = type { %struct.TVector, %struct.TVector }
%struct.TVector = type { double, double }
%"class.std::vector.11" = type { %"struct.std::_Vector_base.12" }
%"struct.std::_Vector_base.12" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%struct.timeval = type { i64, i64 }
%"struct.std::_Rb_tree<void *, std::pair<void *const, malloc_plus_memory_entry *>, std::_Select1st<std::pair<void *const, malloc_plus_memory_entry *>>, std::less<void *>>::_Alloc_node" = type { ptr }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, malloc_plus_memory_entry *>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, malloc_plus_memory_entry *>>, std::less<std::__cxx11::basic_string<char>>>::_Alloc_node" = type { ptr }
%struct.malloc_plus_memory_entry = type { ptr, i64, ptr, i64, i64, i32, ptr }
%"struct.std::_Rb_tree_node.28" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.29" }
%"struct.__gnu_cxx::__aligned_membuf.29" = type { [40 x i8] }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { ptr }
%union.anon = type { i64, [8 x i8] }
%"struct.std::pair.30" = type { %"class.std::__cxx11::basic_string", ptr }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [16 x i8] }
%"struct.__gnu_cxx::__ops::_Iter_less_iter" = type { i8 }

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZN10MallocPlusD2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entrySt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev = comdat any

$_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE7_M_copyILb0ENSG_11_Alloc_nodeEEEPSt13_Rb_tree_nodeISA_ESL_PSt18_Rb_tree_node_baseRT0_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeIJRKSA_EEEvPSt13_Rb_tree_nodeISA_EDpOT_ = comdat any

$_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_M_copyILb0ENSB_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS5_ESG_PSt18_Rb_tree_node_baseRT0_ = comdat any

$_ZNSt6vectorIiSaIiEE17_M_default_appendEm = comdat any

$_ZNSt6vectorIdSaIdEE17_M_default_appendEm = comdat any

$_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi = comdat any

$_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_ = comdat any

$_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_ = comdat any

$_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_ = comdat any

$_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_ = comdat any

$_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_ = comdat any

$_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_ = comdat any

@do_stencil_warning = dso_local local_unnamed_addr global i32 0, align 4
@calc_neighbor_type = dso_local local_unnamed_addr global i32 0, align 4
@dynamic_load_balance_on = dso_local local_unnamed_addr global i8 0, align 1
@neighbor_remap = dso_local local_unnamed_addr global i8 0, align 1
@.str = private unnamed_addr constant [13 x i8] c"grid%02d.gph\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"viewport %lf %lf %lf %lf\0A\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"rect  %lf   %lf   %lf   %lf\0A\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"line_init %lf %lf\0A\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"line %lf %lf\0A\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"text %lf %lf %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"levmax %d\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"cells %ld\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"numpe %d\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"ndim %d\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"xaxis %lf %lf\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"yaxis %lf %lf\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"zaxis %lf %lf\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"%d %d %d %d\00", align 1
@.str.17 = private unnamed_addr constant [46 x i8] c"%6d %6d   %4d  %4d   %4d  %4d  %4d  %4d  %4d \00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"%8.2lf %8.2lf %8.2lf %8.2lf\0A\00", align 1
@.str.19 = private unnamed_addr constant [63 x i8] c"%d:   index global  i     j     lev   nlft  nrht  nbot  ntop \0A\00", align 1
@.str.20 = private unnamed_addr constant [50 x i8] c"%d: %6d  %6d %4d  %4d   %4d  %4d  %4d  %4d  %4d \0A\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"%d:    index   i     j     lev\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%d: %6d  %4d  %4d   %4d  \0A\00", align 1
@.str.23 = private unnamed_addr constant [80 x i8] c"DEBUG rezone 3 at cycle %d celltype_global & celltype_check_global %d %d  %d  \0A\00", align 1
@.str.24 = private unnamed_addr constant [66 x i8] c"DEBUG rezone 3 at cycle %d i_global & i_check_global %d %d  %d  \0A\00", align 1
@.str.25 = private unnamed_addr constant [66 x i8] c"DEBUG rezone 3 at cycle %d j_global & j_check_global %d %d  %d  \0A\00", align 1
@.str.26 = private unnamed_addr constant [74 x i8] c"DEBUG rezone 3 at cycle %d level_global & level_check_global %d %d  %d  \0A\00", align 1
@.str.27 = private unnamed_addr constant [67 x i8] c"DEBUG graphics at cycle %d x_global & x_check_global  %d %lf %lf \0A\00", align 1
@.str.28 = private unnamed_addr constant [68 x i8] c"DEBUG graphics at cycle %d dx_global & dx_check_global %d %lf %lf \0A\00", align 1
@.str.29 = private unnamed_addr constant [67 x i8] c"DEBUG graphics at cycle %d y_global & y_check_global  %d %lf %lf \0A\00", align 1
@.str.30 = private unnamed_addr constant [68 x i8] c"DEBUG graphics at cycle %d dy_global & dy_check_global %d %lf %lf \0A\00", align 1
@.str.31 = private unnamed_addr constant [67 x i8] c"DEBUG graphics at cycle %d H_global & H_check_global  %d %lf %lf \0A\00", align 1
@.str.32 = private unnamed_addr constant [88 x i8] c"%d: DEBUG refine_potential 3 at cycle %d cell %d mpot_global & mpot_save_global %d %d \0A\00", align 1
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save = internal global %"class.std::vector" zeroinitializer, align 8
@_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save = internal global i64 0, align 8
@__dso_handle = external hidden global i8
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells = internal unnamed_addr global i32 0, align 4
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old = internal global ptr null, align 8
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old = internal global ptr null, align 8
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old = internal global ptr null, align 8
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE6new_ic = internal global %"class.std::vector" zeroinitializer, align 8
@_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE6new_ic = internal global i64 0, align 8
@.str.33 = private unnamed_addr constant [6 x i8] c"i_old\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"j_old\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"level_old\00", align 1
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order = internal global %"class.std::vector" zeroinitializer, align 8
@_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order = internal global i64 0, align 8
@.str.36 = private unnamed_addr constant [18 x i8] c"state_temp_double\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"state_temp_float\00", align 1
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nlft_old = internal global ptr null, align 8
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nrht_old = internal global ptr null, align 8
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nbot_old = internal global ptr null, align 8
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8ntop_old = internal global ptr null, align 8
@.str.38 = private unnamed_addr constant [9 x i8] c"nlft_old\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"nrht_old\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"nbot_old\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"ntop_old\00", align 1
@_ZZN4Mesh14calc_neighborsEiE9nlft_size = internal unnamed_addr global i32 0, align 4
@.str.42 = private unnamed_addr constant [5 x i8] c"nlft\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"nrht\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"nbot\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"ntop\00", align 1
@write_hash = external local_unnamed_addr global ptr, align 8
@read_hash = external local_unnamed_addr global ptr, align 8
@_ZZN4Mesh20calc_neighbors_localEvE4hash = internal unnamed_addr global ptr null, align 8
@_ZZN4Mesh20calc_neighbors_localEvE8imaxcalc = internal unnamed_addr global i32 0, align 4
@_ZZN4Mesh20calc_neighbors_localEvE8jmaxcalc = internal unnamed_addr global i32 0, align 4
@.str.47 = private unnamed_addr constant [21 x i8] c"hash table size %ld\0A\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"celltype\00", align 1
@.str.50 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.51 = private unnamed_addr constant [2 x i8] c"j\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"level\00", align 1
@.str.54 = private unnamed_addr constant [21 x i8] c"Dimensionality : %d\0A\00", align 1
@.str.55 = private unnamed_addr constant [58 x i8] c"Parallel info  : mype %d numpe %d noffset %d parallel %d\0A\00", align 1
@.str.56 = private unnamed_addr constant [47 x i8] c"Sizes          : ncells %ld ncells_ghost %ld\0A\0A\00", align 1
@.str.57 = private unnamed_addr constant [52 x i8] c"vector celltype  ptr : %p nelements %ld elsize %ld\0A\00", align 1
@.str.58 = private unnamed_addr constant [52 x i8] c"vector level     ptr : %p nelements %ld elsize %ld\0A\00", align 1
@.str.59 = private unnamed_addr constant [52 x i8] c"vector i         ptr : %p nelements %ld elsize %ld\0A\00", align 1
@.str.60 = private unnamed_addr constant [52 x i8] c"vector j         ptr : %p nelements %ld elsize %ld\0A\00", align 1
@.str.61 = private unnamed_addr constant [52 x i8] c"vector nlft      ptr : %p nelements %ld elsize %ld\0A\00", align 1
@.str.62 = private unnamed_addr constant [52 x i8] c"vector nrht      ptr : %p nelements %ld elsize %ld\0A\00", align 1
@.str.63 = private unnamed_addr constant [52 x i8] c"vector nbot      ptr : %p nelements %ld elsize %ld\0A\00", align 1
@.str.64 = private unnamed_addr constant [52 x i8] c"vector ntop      ptr : %p nelements %ld elsize %ld\0A\00", align 1
@localStencil = external local_unnamed_addr global i8, align 1
@.str.66 = private unnamed_addr constant [105 x i8] c"/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/DOE-ProxyApps-C++/CLAMR/mesh.cpp\00", align 1
@.str.67 = private unnamed_addr constant [35 x i8] c"DEBUG -- x face_flag for level %d\0A\00", align 1
@.str.68 = private unnamed_addr constant [38 x i8] c"DEBUG -- sizes isize+1 %d jsize+1 %d\0A\00", align 1
@.str.69 = private unnamed_addr constant [28 x i8] c"                           \00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c" %4d \00", align 1
@.str.72 = private unnamed_addr constant [27 x i8] c"DEBUG -- j  %4d:          \00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"      \00", align 1
@.str.74 = private unnamed_addr constant [35 x i8] c"DEBUG -- y face_flag for level %d\0A\00", align 1
@.str.75 = private unnamed_addr constant [11 x i8] c"          \00", align 1
@.str.76 = private unnamed_addr constant [19 x i8] c"CPU: %.*s%-30.30s\09\00", align 1
@reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi = internal unnamed_addr constant [24 x i32] [i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.113 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.114 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.115 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.116 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.117 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.118 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.119 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.120 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.121 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.122 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.123 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.124 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.125 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.126 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.127 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.128 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.129 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.130 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.131 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.132 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.133 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.134 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.135 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.136 to i64), i64 ptrtoint (ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi to i64)) to i32)], align 4
@.str.77 = private unnamed_addr constant [19 x i8] c"GPU: %.*s%-30.30s\09\00", align 1
@.str.78 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.79 = private unnamed_addr constant [4 x i8] c"%s\09\00", align 1
@.str.80 = private unnamed_addr constant [11 x i8] c"%.*s%8.4f\09\00", align 1
@.str.82 = private unnamed_addr constant [51 x i8] c"%.*s%8.4f\09%.*s%8.4f\09%.*s%8.4f   %s min/median/max\0A\00", align 1
@.str.83 = private unnamed_addr constant [12 x i8] c"%.*s%10lld\09\00", align 1
@.str.84 = private unnamed_addr constant [54 x i8] c"%.*s%10lld\09%.*s%10lld\09%.*s%10lld   %s min/median/max\0A\00", align 1
@.str.85 = private unnamed_addr constant [10 x i8] c"%.*s%10d\09\00", align 1
@.str.86 = private unnamed_addr constant [48 x i8] c"%.*s%10d\09%.*s%10d\09%.*s%10d   %s min/median/max\0A\00", align 1
@.str.87 = private unnamed_addr constant [8 x i8] c"storage\00", align 1
@.str.88 = private unnamed_addr constant [19 x i8] c"mesh_int_dist_vals\00", align 1
@.str.89 = private unnamed_addr constant [14 x i8] c"mesh_int_vals\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"mesh_double_vals\00", align 1
@.str.91 = private unnamed_addr constant [18 x i8] c"mesh_cpu_counters\00", align 1
@.str.92 = private unnamed_addr constant [18 x i8] c"mesh_gpu_counters\00", align 1
@.str.93 = private unnamed_addr constant [16 x i8] c"mesh_cpu_timers\00", align 1
@.str.94 = private unnamed_addr constant [16 x i8] c"mesh_gpu_timers\00", align 1
@.str.95 = private unnamed_addr constant [83 x i8] c"CRUX version mismatch for mesh data, version on file is %d, version in code is %d\0A\00", align 1
@.str.96 = private unnamed_addr constant [7 x i8] c"ncells\00", align 1
@.str.97 = private unnamed_addr constant [13 x i8] c"ncells_ghost\00", align 1
@.str.98 = private unnamed_addr constant [20 x i8] c"offtile_local_count\00", align 1
@.str.99 = private unnamed_addr constant [18 x i8] c"CRUX_MESH_VERSION\00", align 1
@.str.100 = private unnamed_addr constant [5 x i8] c"ndim\00", align 1
@.str.101 = private unnamed_addr constant [6 x i8] c"levmx\00", align 1
@.str.103 = private unnamed_addr constant [17 x i8] c"       %-30s %d\0A\00", align 1
@.str.105 = private unnamed_addr constant [20 x i8] c"offtile_ratio_local\00", align 1
@.str.107 = private unnamed_addr constant [18 x i8] c"       %-30s %lf\0A\00", align 1
@.str.112 = private unnamed_addr constant [19 x i8] c"       %-30s %lld\0A\00", align 1
@.str.113 = private unnamed_addr constant [21 x i8] c"mesh_timer_count_BCs\00", align 1
@.str.114 = private unnamed_addr constant [26 x i8] c"mesh_timer_calc_neighbors\00", align 1
@.str.115 = private unnamed_addr constant [22 x i8] c"mesh_timer_hash_setup\00", align 1
@.str.116 = private unnamed_addr constant [22 x i8] c"mesh_timer_hash_query\00", align 1
@.str.117 = private unnamed_addr constant [25 x i8] c"mesh_timer_find_boundary\00", align 1
@.str.118 = private unnamed_addr constant [22 x i8] c"mesh_timer_push_setup\00", align 1
@.str.119 = private unnamed_addr constant [25 x i8] c"mesh_timer_push_boundary\00", align 1
@.str.120 = private unnamed_addr constant [22 x i8] c"mesh_timer_local_list\00", align 1
@.str.121 = private unnamed_addr constant [18 x i8] c"mesh_timer_layer1\00", align 1
@.str.122 = private unnamed_addr constant [18 x i8] c"mesh_timer_layer2\00", align 1
@.str.123 = private unnamed_addr constant [22 x i8] c"mesh_timer_layer_list\00", align 1
@.str.124 = private unnamed_addr constant [26 x i8] c"mesh_timer_copy_mesh_data\00", align 1
@.str.125 = private unnamed_addr constant [27 x i8] c"mesh_timer_fill_mesh_ghost\00", align 1
@.str.126 = private unnamed_addr constant [28 x i8] c"mesh_timer_fill_neigh_ghost\00", align 1
@.str.127 = private unnamed_addr constant [28 x i8] c"mesh_timer_set_corner_neigh\00", align 1
@.str.128 = private unnamed_addr constant [24 x i8] c"mesh_timer_neigh_adjust\00", align 1
@.str.129 = private unnamed_addr constant [22 x i8] c"mesh_timer_setup_comm\00", align 1
@.str.130 = private unnamed_addr constant [24 x i8] c"mesh_timer_kdtree_setup\00", align 1
@.str.131 = private unnamed_addr constant [24 x i8] c"mesh_timer_kdtree_query\00", align 1
@.str.132 = private unnamed_addr constant [25 x i8] c"mesh_timer_refine_smooth\00", align 1
@.str.133 = private unnamed_addr constant [22 x i8] c"mesh_timer_rezone_all\00", align 1
@.str.134 = private unnamed_addr constant [21 x i8] c"mesh_timer_partition\00", align 1
@.str.135 = private unnamed_addr constant [36 x i8] c"mesh_timer_calc_spatial_coordinates\00", align 1
@.str.136 = private unnamed_addr constant [24 x i8] c"mesh_timer_load_balance\00", align 1
@.str.137 = private unnamed_addr constant [20 x i8] c"mesh_counter_rezone\00", align 1
@.str.138 = private unnamed_addr constant [27 x i8] c"mesh_counter_refine_smooth\00", align 1
@.str.139 = private unnamed_addr constant [24 x i8] c"mesh_counter_calc_neigh\00", align 1
@.str.140 = private unnamed_addr constant [26 x i8] c"mesh_counter_load_balance\00", align 1
@.str.141 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.142 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@.str.143 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@.str.144 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@str = private unnamed_addr constant [94 x i8] c"index orig index   i     j     lev   nlft  nrht  nbot  ntop   xlow    xhigh     ylow    yhigh\00", align 1
@str.145 = private unnamed_addr constant [52 x i8] c"Error -- cells read does not match number specified\00", align 1
@str.146 = private unnamed_addr constant [31 x i8] c"Nonlocal case for the stencil.\00", align 1
@str.147 = private unnamed_addr constant [38 x i8] c"Using k-D tree to calculate neighbors\00", align 1
@str.148 = private unnamed_addr constant [41 x i8] c"Using hash tables to calculate neighbors\00", align 1
@str.149 = private unnamed_addr constant [29 x i8] c" ---- Mesh object info -----\00", align 1
@str.151 = private unnamed_addr constant [40 x i8] c"       === Restored mesh gpu timers ===\00", align 1
@str.153 = private unnamed_addr constant [40 x i8] c"       === Restored mesh cpu timers ===\00", align 1
@str.155 = private unnamed_addr constant [42 x i8] c"       === Restored mesh cpu counters ===\00", align 1
@str.157 = private unnamed_addr constant [42 x i8] c"       === Restored mesh gpu counters ===\00", align 1
@str.159 = private unnamed_addr constant [41 x i8] c"       === Restored mesh double_vals ===\00", align 1
@str.160 = private unnamed_addr constant [43 x i8] c"       === Restored mesh int_dist_vals ===\00", align 1
@str.162 = private unnamed_addr constant [38 x i8] c"       === Restored mesh int_vals ===\00", align 1

@_ZN4MeshC1EP8_IO_FILEPi = dso_local unnamed_addr alias void (ptr, ptr, ptr), ptr @_ZN4MeshC2EP8_IO_FILEPi
@_ZN4MeshC1Eiiiiddiii = dso_local unnamed_addr alias void (ptr, i32, i32, i32, i32, double, double, i32, i32, i32), ptr @_ZN4MeshC2Eiiiiddiii

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_ZN4Mesh10write_gridEi(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, i32 noundef %1) local_unnamed_addr #0 align 2 {
  %3 = alloca [20 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %3) #31
  %4 = tail call i32 @llvm.smax.i32(i32 %1, i32 0)
  %5 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(1) @.str, i32 noundef %4) #31
  %6 = call noalias ptr @fopen(ptr noundef nonnull %3, ptr noundef nonnull @.str.1)
  %7 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 48
  %8 = load double, ptr %7, align 8, !tbaa !5
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 50
  %10 = load double, ptr %9, align 8, !tbaa !40
  %11 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 49
  %12 = load double, ptr %11, align 8, !tbaa !41
  %13 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 51
  %14 = load double, ptr %13, align 8, !tbaa !42
  %15 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %6, ptr noundef nonnull @.str.2, double noundef %8, double noundef %10, double noundef %12, double noundef %14)
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %17 = load i64, ptr %16, align 8, !tbaa !43
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %22 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %23 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  br label %44

24:                                               ; preds = %44, %2
  %25 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %26 = load ptr, ptr %25, align 8, !tbaa !44
  %27 = load double, ptr %26, align 8, !tbaa !45
  %28 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %29 = load ptr, ptr %28, align 8, !tbaa !44
  %30 = load double, ptr %29, align 8, !tbaa !45
  %31 = fmul double %30, 5.000000e-01
  %32 = fadd double %27, %31
  %33 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %34 = load ptr, ptr %33, align 8, !tbaa !44
  %35 = load double, ptr %34, align 8, !tbaa !45
  %36 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %37 = load ptr, ptr %36, align 8, !tbaa !44
  %38 = load double, ptr %37, align 8, !tbaa !45
  %39 = fmul double %38, 5.000000e-01
  %40 = fadd double %35, %39
  %41 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %6, ptr noundef nonnull @.str.4, double noundef %32, double noundef %40)
  %42 = load i64, ptr %16, align 8, !tbaa !43
  %43 = icmp ugt i64 %42, 1
  br i1 %43, label %68, label %65

44:                                               ; preds = %19, %44
  %45 = phi i64 [ 0, %19 ], [ %62, %44 ]
  %46 = load ptr, ptr %20, align 8, !tbaa !44
  %47 = getelementptr inbounds double, ptr %46, i64 %45
  %48 = load double, ptr %47, align 8, !tbaa !45
  %49 = load ptr, ptr %21, align 8, !tbaa !44
  %50 = getelementptr inbounds double, ptr %49, i64 %45
  %51 = load double, ptr %50, align 8, !tbaa !45
  %52 = load ptr, ptr %22, align 8, !tbaa !44
  %53 = getelementptr inbounds double, ptr %52, i64 %45
  %54 = load double, ptr %53, align 8, !tbaa !45
  %55 = fadd double %48, %54
  %56 = load ptr, ptr %23, align 8, !tbaa !44
  %57 = getelementptr inbounds double, ptr %56, i64 %45
  %58 = load double, ptr %57, align 8, !tbaa !45
  %59 = fadd double %51, %58
  %60 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %6, ptr noundef nonnull @.str.3, double noundef %48, double noundef %51, double noundef %55, double noundef %59)
  %61 = add nuw nsw i64 %45, 1
  %62 = and i64 %61, 4294967295
  %63 = load i64, ptr %16, align 8, !tbaa !43
  %64 = icmp ugt i64 %63, %62
  br i1 %64, label %44, label %24, !llvm.loop !46

65:                                               ; preds = %68, %24
  %66 = phi i64 [ %42, %24 ], [ %89, %68 ]
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %91, label %93

68:                                               ; preds = %24, %68
  %69 = phi i64 [ %88, %68 ], [ 1, %24 ]
  %70 = load ptr, ptr %25, align 8, !tbaa !44
  %71 = getelementptr inbounds double, ptr %70, i64 %69
  %72 = load double, ptr %71, align 8, !tbaa !45
  %73 = load ptr, ptr %28, align 8, !tbaa !44
  %74 = getelementptr inbounds double, ptr %73, i64 %69
  %75 = load double, ptr %74, align 8, !tbaa !45
  %76 = fmul double %75, 5.000000e-01
  %77 = fadd double %72, %76
  %78 = load ptr, ptr %33, align 8, !tbaa !44
  %79 = getelementptr inbounds double, ptr %78, i64 %69
  %80 = load double, ptr %79, align 8, !tbaa !45
  %81 = load ptr, ptr %36, align 8, !tbaa !44
  %82 = getelementptr inbounds double, ptr %81, i64 %69
  %83 = load double, ptr %82, align 8, !tbaa !45
  %84 = fmul double %83, 5.000000e-01
  %85 = fadd double %80, %84
  %86 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %6, ptr noundef nonnull @.str.5, double noundef %77, double noundef %85)
  %87 = add nuw nsw i64 %69, 1
  %88 = and i64 %87, 4294967295
  %89 = load i64, ptr %16, align 8, !tbaa !43
  %90 = icmp ugt i64 %89, %88
  br i1 %90, label %68, label %65, !llvm.loop !48

91:                                               ; preds = %93, %65
  %92 = tail call i32 @fclose(ptr noundef %6)
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %3) #31
  ret void

93:                                               ; preds = %65, %93
  %94 = phi i64 [ %114, %93 ], [ 0, %65 ]
  %95 = trunc i64 %94 to i32
  %96 = load ptr, ptr %25, align 8, !tbaa !44
  %97 = getelementptr inbounds double, ptr %96, i64 %94
  %98 = load double, ptr %97, align 8, !tbaa !45
  %99 = load ptr, ptr %28, align 8, !tbaa !44
  %100 = getelementptr inbounds double, ptr %99, i64 %94
  %101 = load double, ptr %100, align 8, !tbaa !45
  %102 = fmul double %101, 5.000000e-01
  %103 = fadd double %98, %102
  %104 = load ptr, ptr %33, align 8, !tbaa !44
  %105 = getelementptr inbounds double, ptr %104, i64 %94
  %106 = load double, ptr %105, align 8, !tbaa !45
  %107 = load ptr, ptr %36, align 8, !tbaa !44
  %108 = getelementptr inbounds double, ptr %107, i64 %94
  %109 = load double, ptr %108, align 8, !tbaa !45
  %110 = fmul double %109, 5.000000e-01
  %111 = fadd double %106, %110
  %112 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %6, ptr noundef nonnull @.str.6, double noundef %103, double noundef %111, i32 noundef %95)
  %113 = add nuw nsw i64 %94, 1
  %114 = and i64 %113, 4294967295
  %115 = load i64, ptr %16, align 8, !tbaa !43
  %116 = icmp ugt i64 %115, %114
  br i1 %116, label %93, label %91, !llvm.loop !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias noundef ptr @fopen(ptr nocapture noundef readonly, ptr nocapture noundef readonly) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @fclose(ptr nocapture noundef) local_unnamed_addr #2

; Function Attrs: uwtable
define dso_local void @_ZN4MeshC2EP8_IO_FILEPi(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr nocapture noundef %1, ptr noundef %2) unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca [80 x i8], align 16
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 0, ptr %6, align 8, !tbaa !50
  %7 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %7, align 8, !tbaa !51
  %8 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %6, ptr %8, align 8, !tbaa !52
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %6, ptr %9, align 8, !tbaa !53
  %10 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %10, align 8, !tbaa !54
  %11 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  store i32 0, ptr %11, align 8, !tbaa !50
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %12, align 8, !tbaa !51
  %13 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %11, ptr %13, align 8, !tbaa !52
  %14 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %11, ptr %14, align 8, !tbaa !53
  %15 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %15, align 8, !tbaa !54
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store i32 0, ptr %16, align 8, !tbaa !50
  %17 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %17, align 8, !tbaa !51
  %18 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %16, ptr %18, align 8, !tbaa !52
  %19 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %16, ptr %19, align 8, !tbaa !53
  %20 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %20, align 8, !tbaa !54
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  store i32 0, ptr %21, align 8, !tbaa !50
  %22 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %22, align 8, !tbaa !51
  %23 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %21, ptr %23, align 8, !tbaa !52
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %21, ptr %24, align 8, !tbaa !53
  %25 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %25, align 8, !tbaa !54
  %26 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 19
  %27 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 20
  %28 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 21
  %29 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 22
  %30 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 25
  %31 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 26
  %32 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 27
  %33 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 28
  %34 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 29
  %35 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 30
  %36 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 31
  %37 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 32
  %38 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 33
  %39 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 34
  %40 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 35
  %41 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %41, i8 0, i64 24, i1 false)
  %42 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %43 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %44 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %45 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %46 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 79
  %47 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 80
  %48 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83
  %49 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84
  %50 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85
  %51 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 86
  %52 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 87
  %53 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 88
  %54 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 89
  %55 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 90
  %56 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 91
  %57 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 92
  %58 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 93
  %59 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 94
  %60 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 95
  %61 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 96
  %62 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 97
  %63 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98
  %64 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99
  %65 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100
  %66 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 101
  %67 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 102
  %68 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 103
  %69 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 104
  %70 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 105
  %71 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 106
  %72 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 107
  %73 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 108
  %74 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 109
  %75 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 110
  %76 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 111
  %77 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 112
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(96) %26, i8 0, i64 96, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(264) %30, i8 0, i64 264, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(144) %42, i8 0, i64 144, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(720) %48, i8 0, i64 720, i1 false)
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %4) #31
  %78 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 38
  store i32 1, ptr %78, align 8, !tbaa !55
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #31
  %79 = call i64 @time(ptr noundef nonnull %5) #31
  %80 = load i64, ptr %5, align 8, !tbaa !56
  call void @srand48(i64 noundef %80) #31
  %81 = call ptr @fgets(ptr noundef nonnull %4, i32 noundef 80, ptr noundef %1)
  %82 = icmp eq ptr %81, null
  br i1 %82, label %83, label %86

83:                                               ; preds = %3
  call void @exit(i32 noundef -1) #32
  unreachable

84:                                               ; preds = %160, %157, %153, %143
  %85 = landingpad { ptr, i32 }
          cleanup
  br label %195

86:                                               ; preds = %3
  %87 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %88 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef nonnull %4, ptr noundef nonnull @.str.7, ptr noundef nonnull %87) #31
  %89 = call ptr @fgets(ptr noundef nonnull %4, i32 noundef 80, ptr noundef %1)
  %90 = icmp eq ptr %89, null
  br i1 %90, label %91, label %92

91:                                               ; preds = %86
  call void @exit(i32 noundef -1) #32
  unreachable

92:                                               ; preds = %86
  %93 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %94 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef nonnull %4, ptr noundef nonnull @.str.8, ptr noundef nonnull %93) #31
  %95 = call ptr @fgets(ptr noundef nonnull %4, i32 noundef 80, ptr noundef %1)
  %96 = icmp eq ptr %95, null
  br i1 %96, label %97, label %98

97:                                               ; preds = %92
  call void @exit(i32 noundef -1) #32
  unreachable

98:                                               ; preds = %92
  %99 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef nonnull %4, ptr noundef nonnull @.str.9, ptr noundef %2) #31
  %100 = call ptr @fgets(ptr noundef nonnull %4, i32 noundef 80, ptr noundef %1)
  %101 = icmp eq ptr %100, null
  br i1 %101, label %102, label %103

102:                                              ; preds = %98
  call void @exit(i32 noundef -1) #32
  unreachable

103:                                              ; preds = %98
  %104 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef nonnull %4, ptr noundef nonnull @.str.10, ptr noundef nonnull %0) #31
  %105 = call ptr @fgets(ptr noundef nonnull %4, i32 noundef 80, ptr noundef %1)
  %106 = icmp eq ptr %105, null
  br i1 %106, label %107, label %108

107:                                              ; preds = %103
  call void @exit(i32 noundef -1) #32
  unreachable

108:                                              ; preds = %103
  %109 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 48
  %110 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 60
  %111 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef nonnull %4, ptr noundef nonnull @.str.11, ptr noundef nonnull %109, ptr noundef nonnull %110) #31
  %112 = call ptr @fgets(ptr noundef nonnull %4, i32 noundef 80, ptr noundef %1)
  %113 = icmp eq ptr %112, null
  br i1 %113, label %114, label %115

114:                                              ; preds = %108
  call void @exit(i32 noundef -1) #32
  unreachable

115:                                              ; preds = %108
  %116 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 50
  %117 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 61
  %118 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef nonnull %4, ptr noundef nonnull @.str.12, ptr noundef nonnull %116, ptr noundef nonnull %117) #31
  %119 = load i32, ptr %0, align 8, !tbaa !57
  %120 = icmp eq i32 %119, 3
  br i1 %120, label %121, label %129

121:                                              ; preds = %115
  %122 = call ptr @fgets(ptr noundef nonnull %4, i32 noundef 80, ptr noundef %1)
  %123 = icmp eq ptr %122, null
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @exit(i32 noundef -1) #32
  unreachable

125:                                              ; preds = %121
  %126 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 52
  %127 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 62
  %128 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef nonnull %4, ptr noundef nonnull @.str.13, ptr noundef nonnull %126, ptr noundef nonnull %127) #31
  br label %129

129:                                              ; preds = %125, %115
  %130 = call ptr @fgets(ptr noundef nonnull %4, i32 noundef 80, ptr noundef %1)
  %131 = icmp eq ptr %130, null
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @exit(i32 noundef -1) #32
  unreachable

133:                                              ; preds = %129
  %134 = load i64, ptr %93, align 8, !tbaa !43
  %135 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63, i32 0, i32 0, i32 0, i32 1
  %136 = load ptr, ptr %135, align 8, !tbaa !58
  %137 = load ptr, ptr %41, align 8, !tbaa !59
  %138 = ptrtoint ptr %136 to i64
  %139 = ptrtoint ptr %137 to i64
  %140 = sub i64 %138, %139
  %141 = ashr exact i64 %140, 2
  %142 = icmp ugt i64 %134, %141
  br i1 %142, label %143, label %147

143:                                              ; preds = %133
  %144 = sub i64 %134, %141
  invoke void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %41, i64 noundef %144)
          to label %145 unwind label %84

145:                                              ; preds = %143
  %146 = load i64, ptr %93, align 8, !tbaa !43
  br label %153

147:                                              ; preds = %133
  %148 = icmp ult i64 %134, %141
  br i1 %148, label %149, label %153

149:                                              ; preds = %147
  %150 = getelementptr inbounds i32, ptr %137, i64 %134
  %151 = icmp eq ptr %136, %150
  br i1 %151, label %153, label %152

152:                                              ; preds = %149
  store ptr %150, ptr %135, align 8, !tbaa !58
  br label %153

153:                                              ; preds = %145, %152, %149, %147
  %154 = phi i64 [ %146, %145 ], [ %134, %152 ], [ %134, %149 ], [ %134, %147 ]
  %155 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %156 = invoke noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %155, i64 noundef %154, i64 noundef 4, ptr noundef nonnull @.str.50, i32 noundef 16)
          to label %157 unwind label %84

157:                                              ; preds = %153
  %158 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  store ptr %156, ptr %158, align 8, !tbaa !60
  %159 = invoke noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %155, i64 noundef %154, i64 noundef 4, ptr noundef nonnull @.str.51, i32 noundef 16)
          to label %160 unwind label %84

160:                                              ; preds = %157
  %161 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  store ptr %159, ptr %161, align 8, !tbaa !61
  %162 = invoke noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %155, i64 noundef %154, i64 noundef 4, ptr noundef nonnull @.str.52, i32 noundef 16)
          to label %163 unwind label %84

163:                                              ; preds = %160
  %164 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  store ptr %162, ptr %164, align 8, !tbaa !62
  %165 = call ptr @fgets(ptr noundef nonnull %4, i32 noundef 80, ptr noundef %1)
  %166 = icmp eq ptr %165, null
  br i1 %166, label %184, label %167

167:                                              ; preds = %163, %167
  %168 = phi i32 [ %179, %167 ], [ 0, %163 ]
  %169 = zext i32 %168 to i64
  %170 = load ptr, ptr %41, align 8, !tbaa !59
  %171 = getelementptr inbounds i32, ptr %170, i64 %169
  %172 = load ptr, ptr %158, align 8, !tbaa !60
  %173 = getelementptr inbounds i32, ptr %172, i64 %169
  %174 = load ptr, ptr %161, align 8, !tbaa !61
  %175 = getelementptr inbounds i32, ptr %174, i64 %169
  %176 = load ptr, ptr %164, align 8, !tbaa !62
  %177 = getelementptr inbounds i32, ptr %176, i64 %169
  %178 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef nonnull %4, ptr noundef nonnull @.str.14, ptr noundef %171, ptr noundef %173, ptr noundef %175, ptr noundef %177) #31
  %179 = add i32 %168, 1
  %180 = call ptr @fgets(ptr noundef nonnull %4, i32 noundef 80, ptr noundef %1)
  %181 = icmp eq ptr %180, null
  br i1 %181, label %184, label %167, !llvm.loop !63

182:                                              ; preds = %186, %184
  %183 = landingpad { ptr, i32 }
          cleanup
  br label %195

184:                                              ; preds = %167, %163
  %185 = phi i32 [ 0, %163 ], [ %179, %167 ]
  store i32 0, ptr %78, align 8, !tbaa !55
  invoke void @_ZN4Mesh24calc_spatial_coordinatesEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef 0)
          to label %186 unwind label %182

186:                                              ; preds = %184
  %187 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 24
  invoke void @KDTree_Initialize(ptr noundef nonnull %187)
          to label %188 unwind label %182

188:                                              ; preds = %186
  call void @_ZN4Mesh5printEv(ptr noundef nonnull align 8 dereferenceable(2288) %0)
  %189 = zext i32 %185 to i64
  %190 = load i64, ptr %93, align 8, !tbaa !43
  %191 = icmp eq i64 %190, %189
  br i1 %191, label %194, label %192

192:                                              ; preds = %188
  %193 = call i32 @puts(ptr nonnull dereferenceable(1) @str.145)
  br label %194

194:                                              ; preds = %192, %188
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #31
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %4) #31
  ret void

195:                                              ; preds = %182, %84
  %196 = phi { ptr, i32 } [ %183, %182 ], [ %85, %84 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #31
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %4) #31
  %197 = load ptr, ptr %77, align 8, !tbaa !59
  %198 = icmp eq ptr %197, null
  br i1 %198, label %200, label %199

199:                                              ; preds = %195
  call void @_ZdlPv(ptr noundef nonnull %197) #33
  br label %200

200:                                              ; preds = %195, %199
  %201 = load ptr, ptr %76, align 8, !tbaa !59
  %202 = icmp eq ptr %201, null
  br i1 %202, label %204, label %203

203:                                              ; preds = %200
  call void @_ZdlPv(ptr noundef nonnull %201) #33
  br label %204

204:                                              ; preds = %200, %203
  %205 = load ptr, ptr %75, align 8, !tbaa !59
  %206 = icmp eq ptr %205, null
  br i1 %206, label %208, label %207

207:                                              ; preds = %204
  call void @_ZdlPv(ptr noundef nonnull %205) #33
  br label %208

208:                                              ; preds = %204, %207
  %209 = load ptr, ptr %74, align 8, !tbaa !59
  %210 = icmp eq ptr %209, null
  br i1 %210, label %212, label %211

211:                                              ; preds = %208
  call void @_ZdlPv(ptr noundef nonnull %209) #33
  br label %212

212:                                              ; preds = %208, %211
  %213 = load ptr, ptr %73, align 8, !tbaa !59
  %214 = icmp eq ptr %213, null
  br i1 %214, label %216, label %215

215:                                              ; preds = %212
  call void @_ZdlPv(ptr noundef nonnull %213) #33
  br label %216

216:                                              ; preds = %212, %215
  %217 = load ptr, ptr %72, align 8, !tbaa !59
  %218 = icmp eq ptr %217, null
  br i1 %218, label %220, label %219

219:                                              ; preds = %216
  call void @_ZdlPv(ptr noundef nonnull %217) #33
  br label %220

220:                                              ; preds = %216, %219
  %221 = load ptr, ptr %71, align 8, !tbaa !59
  %222 = icmp eq ptr %221, null
  br i1 %222, label %224, label %223

223:                                              ; preds = %220
  call void @_ZdlPv(ptr noundef nonnull %221) #33
  br label %224

224:                                              ; preds = %220, %223
  %225 = load ptr, ptr %70, align 8, !tbaa !59
  %226 = icmp eq ptr %225, null
  br i1 %226, label %228, label %227

227:                                              ; preds = %224
  call void @_ZdlPv(ptr noundef nonnull %225) #33
  br label %228

228:                                              ; preds = %224, %227
  %229 = load ptr, ptr %69, align 8, !tbaa !59
  %230 = icmp eq ptr %229, null
  br i1 %230, label %232, label %231

231:                                              ; preds = %228
  call void @_ZdlPv(ptr noundef nonnull %229) #33
  br label %232

232:                                              ; preds = %228, %231
  %233 = load ptr, ptr %68, align 8, !tbaa !59
  %234 = icmp eq ptr %233, null
  br i1 %234, label %236, label %235

235:                                              ; preds = %232
  call void @_ZdlPv(ptr noundef nonnull %233) #33
  br label %236

236:                                              ; preds = %232, %235
  %237 = load ptr, ptr %67, align 8, !tbaa !59
  %238 = icmp eq ptr %237, null
  br i1 %238, label %240, label %239

239:                                              ; preds = %236
  call void @_ZdlPv(ptr noundef nonnull %237) #33
  br label %240

240:                                              ; preds = %236, %239
  %241 = load ptr, ptr %66, align 8, !tbaa !59
  %242 = icmp eq ptr %241, null
  br i1 %242, label %244, label %243

243:                                              ; preds = %240
  call void @_ZdlPv(ptr noundef nonnull %241) #33
  br label %244

244:                                              ; preds = %240, %243
  %245 = load ptr, ptr %65, align 8, !tbaa !59
  %246 = icmp eq ptr %245, null
  br i1 %246, label %248, label %247

247:                                              ; preds = %244
  call void @_ZdlPv(ptr noundef nonnull %245) #33
  br label %248

248:                                              ; preds = %244, %247
  %249 = load ptr, ptr %64, align 8, !tbaa !59
  %250 = icmp eq ptr %249, null
  br i1 %250, label %252, label %251

251:                                              ; preds = %248
  call void @_ZdlPv(ptr noundef nonnull %249) #33
  br label %252

252:                                              ; preds = %248, %251
  %253 = load ptr, ptr %63, align 8, !tbaa !59
  %254 = icmp eq ptr %253, null
  br i1 %254, label %256, label %255

255:                                              ; preds = %252
  call void @_ZdlPv(ptr noundef nonnull %253) #33
  br label %256

256:                                              ; preds = %252, %255
  %257 = load ptr, ptr %62, align 8, !tbaa !59
  %258 = icmp eq ptr %257, null
  br i1 %258, label %260, label %259

259:                                              ; preds = %256
  call void @_ZdlPv(ptr noundef nonnull %257) #33
  br label %260

260:                                              ; preds = %256, %259
  %261 = load ptr, ptr %61, align 8, !tbaa !59
  %262 = icmp eq ptr %261, null
  br i1 %262, label %264, label %263

263:                                              ; preds = %260
  call void @_ZdlPv(ptr noundef nonnull %261) #33
  br label %264

264:                                              ; preds = %260, %263
  %265 = load ptr, ptr %60, align 8, !tbaa !59
  %266 = icmp eq ptr %265, null
  br i1 %266, label %268, label %267

267:                                              ; preds = %264
  call void @_ZdlPv(ptr noundef nonnull %265) #33
  br label %268

268:                                              ; preds = %264, %267
  %269 = load ptr, ptr %59, align 8, !tbaa !59
  %270 = icmp eq ptr %269, null
  br i1 %270, label %272, label %271

271:                                              ; preds = %268
  call void @_ZdlPv(ptr noundef nonnull %269) #33
  br label %272

272:                                              ; preds = %268, %271
  %273 = load ptr, ptr %58, align 8, !tbaa !59
  %274 = icmp eq ptr %273, null
  br i1 %274, label %276, label %275

275:                                              ; preds = %272
  call void @_ZdlPv(ptr noundef nonnull %273) #33
  br label %276

276:                                              ; preds = %272, %275
  %277 = load ptr, ptr %57, align 8, !tbaa !59
  %278 = icmp eq ptr %277, null
  br i1 %278, label %280, label %279

279:                                              ; preds = %276
  call void @_ZdlPv(ptr noundef nonnull %277) #33
  br label %280

280:                                              ; preds = %276, %279
  %281 = load ptr, ptr %56, align 8, !tbaa !59
  %282 = icmp eq ptr %281, null
  br i1 %282, label %284, label %283

283:                                              ; preds = %280
  call void @_ZdlPv(ptr noundef nonnull %281) #33
  br label %284

284:                                              ; preds = %280, %283
  %285 = load ptr, ptr %55, align 8, !tbaa !59
  %286 = icmp eq ptr %285, null
  br i1 %286, label %288, label %287

287:                                              ; preds = %284
  call void @_ZdlPv(ptr noundef nonnull %285) #33
  br label %288

288:                                              ; preds = %284, %287
  %289 = load ptr, ptr %54, align 8, !tbaa !59
  %290 = icmp eq ptr %289, null
  br i1 %290, label %292, label %291

291:                                              ; preds = %288
  call void @_ZdlPv(ptr noundef nonnull %289) #33
  br label %292

292:                                              ; preds = %288, %291
  %293 = load ptr, ptr %53, align 8, !tbaa !59
  %294 = icmp eq ptr %293, null
  br i1 %294, label %296, label %295

295:                                              ; preds = %292
  call void @_ZdlPv(ptr noundef nonnull %293) #33
  br label %296

296:                                              ; preds = %292, %295
  %297 = load ptr, ptr %52, align 8, !tbaa !59
  %298 = icmp eq ptr %297, null
  br i1 %298, label %300, label %299

299:                                              ; preds = %296
  call void @_ZdlPv(ptr noundef nonnull %297) #33
  br label %300

300:                                              ; preds = %296, %299
  %301 = load ptr, ptr %51, align 8, !tbaa !59
  %302 = icmp eq ptr %301, null
  br i1 %302, label %304, label %303

303:                                              ; preds = %300
  call void @_ZdlPv(ptr noundef nonnull %301) #33
  br label %304

304:                                              ; preds = %300, %303
  %305 = load ptr, ptr %50, align 8, !tbaa !59
  %306 = icmp eq ptr %305, null
  br i1 %306, label %308, label %307

307:                                              ; preds = %304
  call void @_ZdlPv(ptr noundef nonnull %305) #33
  br label %308

308:                                              ; preds = %304, %307
  %309 = load ptr, ptr %49, align 8, !tbaa !59
  %310 = icmp eq ptr %309, null
  br i1 %310, label %312, label %311

311:                                              ; preds = %308
  call void @_ZdlPv(ptr noundef nonnull %309) #33
  br label %312

312:                                              ; preds = %308, %311
  %313 = load ptr, ptr %48, align 8, !tbaa !59
  %314 = icmp eq ptr %313, null
  br i1 %314, label %316, label %315

315:                                              ; preds = %312
  call void @_ZdlPv(ptr noundef nonnull %313) #33
  br label %316

316:                                              ; preds = %312, %315
  %317 = load ptr, ptr %47, align 8, !tbaa !44
  %318 = icmp eq ptr %317, null
  br i1 %318, label %320, label %319

319:                                              ; preds = %316
  call void @_ZdlPv(ptr noundef nonnull %317) #33
  br label %320

320:                                              ; preds = %316, %319
  %321 = load ptr, ptr %46, align 8, !tbaa !44
  %322 = icmp eq ptr %321, null
  br i1 %322, label %324, label %323

323:                                              ; preds = %320
  call void @_ZdlPv(ptr noundef nonnull %321) #33
  br label %324

324:                                              ; preds = %320, %323
  %325 = load ptr, ptr %45, align 8, !tbaa !44
  %326 = icmp eq ptr %325, null
  br i1 %326, label %328, label %327

327:                                              ; preds = %324
  call void @_ZdlPv(ptr noundef nonnull %325) #33
  br label %328

328:                                              ; preds = %324, %327
  %329 = load ptr, ptr %44, align 8, !tbaa !44
  %330 = icmp eq ptr %329, null
  br i1 %330, label %332, label %331

331:                                              ; preds = %328
  call void @_ZdlPv(ptr noundef nonnull %329) #33
  br label %332

332:                                              ; preds = %328, %331
  %333 = load ptr, ptr %43, align 8, !tbaa !44
  %334 = icmp eq ptr %333, null
  br i1 %334, label %336, label %335

335:                                              ; preds = %332
  call void @_ZdlPv(ptr noundef nonnull %333) #33
  br label %336

336:                                              ; preds = %332, %335
  %337 = load ptr, ptr %42, align 8, !tbaa !44
  %338 = icmp eq ptr %337, null
  br i1 %338, label %340, label %339

339:                                              ; preds = %336
  call void @_ZdlPv(ptr noundef nonnull %337) #33
  br label %340

340:                                              ; preds = %336, %339
  %341 = load ptr, ptr %41, align 8, !tbaa !59
  %342 = icmp eq ptr %341, null
  br i1 %342, label %344, label %343

343:                                              ; preds = %340
  call void @_ZdlPv(ptr noundef nonnull %341) #33
  br label %344

344:                                              ; preds = %340, %343
  %345 = load ptr, ptr %40, align 8, !tbaa !44
  %346 = icmp eq ptr %345, null
  br i1 %346, label %348, label %347

347:                                              ; preds = %344
  call void @_ZdlPv(ptr noundef nonnull %345) #33
  br label %348

348:                                              ; preds = %344, %347
  %349 = load ptr, ptr %39, align 8, !tbaa !44
  %350 = icmp eq ptr %349, null
  br i1 %350, label %352, label %351

351:                                              ; preds = %348
  call void @_ZdlPv(ptr noundef nonnull %349) #33
  br label %352

352:                                              ; preds = %348, %351
  %353 = load ptr, ptr %38, align 8, !tbaa !44
  %354 = icmp eq ptr %353, null
  br i1 %354, label %356, label %355

355:                                              ; preds = %352
  call void @_ZdlPv(ptr noundef nonnull %353) #33
  br label %356

356:                                              ; preds = %352, %355
  %357 = load ptr, ptr %37, align 8, !tbaa !59
  %358 = icmp eq ptr %357, null
  br i1 %358, label %360, label %359

359:                                              ; preds = %356
  call void @_ZdlPv(ptr noundef nonnull %357) #33
  br label %360

360:                                              ; preds = %356, %359
  %361 = load ptr, ptr %36, align 8, !tbaa !59
  %362 = icmp eq ptr %361, null
  br i1 %362, label %364, label %363

363:                                              ; preds = %360
  call void @_ZdlPv(ptr noundef nonnull %361) #33
  br label %364

364:                                              ; preds = %360, %363
  %365 = load ptr, ptr %35, align 8, !tbaa !59
  %366 = icmp eq ptr %365, null
  br i1 %366, label %368, label %367

367:                                              ; preds = %364
  call void @_ZdlPv(ptr noundef nonnull %365) #33
  br label %368

368:                                              ; preds = %364, %367
  %369 = load ptr, ptr %34, align 8, !tbaa !59
  %370 = icmp eq ptr %369, null
  br i1 %370, label %372, label %371

371:                                              ; preds = %368
  call void @_ZdlPv(ptr noundef nonnull %369) #33
  br label %372

372:                                              ; preds = %368, %371
  %373 = load ptr, ptr %33, align 8, !tbaa !59
  %374 = icmp eq ptr %373, null
  br i1 %374, label %376, label %375

375:                                              ; preds = %372
  call void @_ZdlPv(ptr noundef nonnull %373) #33
  br label %376

376:                                              ; preds = %372, %375
  %377 = load ptr, ptr %32, align 8, !tbaa !59
  %378 = icmp eq ptr %377, null
  br i1 %378, label %380, label %379

379:                                              ; preds = %376
  call void @_ZdlPv(ptr noundef nonnull %377) #33
  br label %380

380:                                              ; preds = %376, %379
  %381 = load ptr, ptr %31, align 8, !tbaa !59
  %382 = icmp eq ptr %381, null
  br i1 %382, label %384, label %383

383:                                              ; preds = %380
  call void @_ZdlPv(ptr noundef nonnull %381) #33
  br label %384

384:                                              ; preds = %380, %383
  %385 = load ptr, ptr %30, align 8, !tbaa !59
  %386 = icmp eq ptr %385, null
  br i1 %386, label %388, label %387

387:                                              ; preds = %384
  call void @_ZdlPv(ptr noundef nonnull %385) #33
  br label %388

388:                                              ; preds = %384, %387
  %389 = load ptr, ptr %29, align 8, !tbaa !59
  %390 = icmp eq ptr %389, null
  br i1 %390, label %392, label %391

391:                                              ; preds = %388
  call void @_ZdlPv(ptr noundef nonnull %389) #33
  br label %392

392:                                              ; preds = %388, %391
  %393 = load ptr, ptr %28, align 8, !tbaa !59
  %394 = icmp eq ptr %393, null
  br i1 %394, label %396, label %395

395:                                              ; preds = %392
  call void @_ZdlPv(ptr noundef nonnull %393) #33
  br label %396

396:                                              ; preds = %392, %395
  %397 = load ptr, ptr %27, align 8, !tbaa !59
  %398 = icmp eq ptr %397, null
  br i1 %398, label %400, label %399

399:                                              ; preds = %396
  call void @_ZdlPv(ptr noundef nonnull %397) #33
  br label %400

400:                                              ; preds = %396, %399
  %401 = load ptr, ptr %26, align 8, !tbaa !59
  %402 = icmp eq ptr %401, null
  br i1 %402, label %404, label %403

403:                                              ; preds = %400
  call void @_ZdlPv(ptr noundef nonnull %401) #33
  br label %404

404:                                              ; preds = %400, %403
  %405 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2
  %406 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  call void @_ZN10MallocPlusD2Ev(ptr noundef nonnull align 8 dereferenceable(96) %405) #31
  call void @_ZN10MallocPlusD2Ev(ptr noundef nonnull align 8 dereferenceable(96) %406) #31
  resume { ptr, i32 } %196
}

; Function Attrs: nounwind
declare i64 @time(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @srand48(i64 noundef) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noundef ptr @fgets(ptr noundef, i32 noundef, ptr nocapture noundef) local_unnamed_addr #2

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_sscanf(ptr nocapture noundef readonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN4Mesh8allocateEm(ptr noundef nonnull align 8 dereferenceable(2288) %0, i64 noundef %1) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %4 = tail call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %3, i64 noundef %1, i64 noundef 4, ptr noundef nonnull @.str.50, i32 noundef 16)
  %5 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  store ptr %4, ptr %5, align 8, !tbaa !60
  %6 = tail call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %3, i64 noundef %1, i64 noundef 4, ptr noundef nonnull @.str.51, i32 noundef 16)
  %7 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  store ptr %6, ptr %7, align 8, !tbaa !61
  %8 = tail call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %3, i64 noundef %1, i64 noundef 4, ptr noundef nonnull @.str.52, i32 noundef 16)
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  store ptr %8, ptr %9, align 8, !tbaa !62
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN4Mesh24calc_spatial_coordinatesEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %1) local_unnamed_addr #6 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %struct.timeval, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #31
  call void @cpu_timer_start(ptr noundef nonnull %3)
  %4 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %5 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %6 = load i64, ptr %5, align 8, !tbaa !43
  %7 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75, i32 0, i32 0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !64
  %9 = load ptr, ptr %4, align 8, !tbaa !44
  %10 = ptrtoint ptr %8 to i64
  %11 = ptrtoint ptr %9 to i64
  %12 = sub i64 %10, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ugt i64 %6, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = sub i64 %6, %13
  call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %4, i64 noundef %16)
  %17 = load i64, ptr %5, align 8, !tbaa !43
  br label %24

18:                                               ; preds = %2
  %19 = icmp ult i64 %6, %13
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = getelementptr inbounds double, ptr %9, i64 %6
  %22 = icmp eq ptr %8, %21
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  store ptr %21, ptr %7, align 8, !tbaa !64
  br label %24

24:                                               ; preds = %15, %18, %20, %23
  %25 = phi i64 [ %17, %15 ], [ %6, %18 ], [ %6, %20 ], [ %6, %23 ]
  %26 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %27 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76, i32 0, i32 0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !64
  %29 = load ptr, ptr %26, align 8, !tbaa !44
  %30 = ptrtoint ptr %28 to i64
  %31 = ptrtoint ptr %29 to i64
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = icmp ugt i64 %25, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %24
  %36 = sub i64 %25, %33
  call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %26, i64 noundef %36)
  %37 = load i64, ptr %5, align 8, !tbaa !43
  br label %44

38:                                               ; preds = %24
  %39 = icmp ult i64 %25, %33
  br i1 %39, label %40, label %44

40:                                               ; preds = %38
  %41 = getelementptr inbounds double, ptr %29, i64 %25
  %42 = icmp eq ptr %28, %41
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  store ptr %41, ptr %27, align 8, !tbaa !64
  br label %44

44:                                               ; preds = %35, %38, %40, %43
  %45 = phi i64 [ %37, %35 ], [ %25, %38 ], [ %25, %40 ], [ %25, %43 ]
  %46 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %47 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77, i32 0, i32 0, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !64
  %49 = load ptr, ptr %46, align 8, !tbaa !44
  %50 = ptrtoint ptr %48 to i64
  %51 = ptrtoint ptr %49 to i64
  %52 = sub i64 %50, %51
  %53 = ashr exact i64 %52, 3
  %54 = icmp ugt i64 %45, %53
  br i1 %54, label %55, label %58

55:                                               ; preds = %44
  %56 = sub i64 %45, %53
  call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %46, i64 noundef %56)
  %57 = load i64, ptr %5, align 8, !tbaa !43
  br label %64

58:                                               ; preds = %44
  %59 = icmp ult i64 %45, %53
  br i1 %59, label %60, label %64

60:                                               ; preds = %58
  %61 = getelementptr inbounds double, ptr %49, i64 %45
  %62 = icmp eq ptr %48, %61
  br i1 %62, label %64, label %63

63:                                               ; preds = %60
  store ptr %61, ptr %47, align 8, !tbaa !64
  br label %64

64:                                               ; preds = %55, %58, %60, %63
  %65 = phi i64 [ %57, %55 ], [ %45, %58 ], [ %45, %60 ], [ %45, %63 ]
  %66 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %67 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78, i32 0, i32 0, i32 0, i32 1
  %68 = load ptr, ptr %67, align 8, !tbaa !64
  %69 = load ptr, ptr %66, align 8, !tbaa !44
  %70 = ptrtoint ptr %68 to i64
  %71 = ptrtoint ptr %69 to i64
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 3
  %74 = icmp ugt i64 %65, %73
  br i1 %74, label %75, label %77

75:                                               ; preds = %64
  %76 = sub i64 %65, %73
  call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %66, i64 noundef %76)
  br label %83

77:                                               ; preds = %64
  %78 = icmp ult i64 %65, %73
  br i1 %78, label %79, label %83

79:                                               ; preds = %77
  %80 = getelementptr inbounds double, ptr %69, i64 %65
  %81 = icmp eq ptr %68, %80
  br i1 %81, label %83, label %82

82:                                               ; preds = %79
  store ptr %80, ptr %67, align 8, !tbaa !64
  br label %83

83:                                               ; preds = %75, %77, %79, %82
  %84 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 14
  %85 = load ptr, ptr %84, align 8, !tbaa !65
  %86 = icmp eq ptr %85, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = call noalias dereferenceable_or_null(4) ptr @malloc(i64 noundef 4) #34
  store ptr %88, ptr %84, align 8, !tbaa !65
  br label %89

89:                                               ; preds = %87, %83
  %90 = phi ptr [ %88, %87 ], [ %85, %83 ]
  %91 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 15
  %92 = load ptr, ptr %91, align 8, !tbaa !66
  %93 = icmp eq ptr %92, null
  br i1 %93, label %94, label %96

94:                                               ; preds = %89
  %95 = call noalias dereferenceable_or_null(4) ptr @malloc(i64 noundef 4) #34
  store ptr %95, ptr %91, align 8, !tbaa !66
  br label %96

96:                                               ; preds = %89, %94
  %97 = phi ptr [ %95, %94 ], [ %92, %89 ]
  %98 = load i64, ptr %5, align 8, !tbaa !43
  %99 = trunc i64 %98 to i32
  store i32 0, ptr %90, align 4, !tbaa !67
  store i32 %99, ptr %97, align 4, !tbaa !67
  %100 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 37
  %101 = load i32, ptr %100, align 4, !tbaa !68
  %102 = icmp eq i32 %101, 0
  %103 = icmp eq i32 %99, 0
  br i1 %102, label %123, label %104

104:                                              ; preds = %96
  br i1 %103, label %212, label %105

105:                                              ; preds = %104
  %106 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %107 = load ptr, ptr %106, align 8, !tbaa !62
  %108 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 48
  %109 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 33
  %110 = load ptr, ptr %109, align 8, !tbaa !44
  %111 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %112 = load ptr, ptr %111, align 8, !tbaa !60
  %113 = load ptr, ptr %4, align 8, !tbaa !44
  %114 = load ptr, ptr %26, align 8, !tbaa !44
  %115 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 50
  %116 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 34
  %117 = load ptr, ptr %116, align 8, !tbaa !44
  %118 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %119 = load ptr, ptr %118, align 8, !tbaa !61
  %120 = load ptr, ptr %46, align 8, !tbaa !44
  %121 = load ptr, ptr %66, align 8, !tbaa !44
  %122 = and i64 %98, 4294967295
  br label %146

123:                                              ; preds = %96
  br i1 %103, label %212, label %124

124:                                              ; preds = %123
  %125 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %126 = load ptr, ptr %125, align 8, !tbaa !62
  %127 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 48
  %128 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 33
  %129 = load ptr, ptr %128, align 8, !tbaa !44
  %130 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %131 = load ptr, ptr %130, align 8, !tbaa !60
  %132 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 26
  %133 = load ptr, ptr %132, align 8, !tbaa !59
  %134 = load ptr, ptr %4, align 8, !tbaa !44
  %135 = load ptr, ptr %26, align 8, !tbaa !44
  %136 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 50
  %137 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 34
  %138 = load ptr, ptr %137, align 8, !tbaa !44
  %139 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %140 = load ptr, ptr %139, align 8, !tbaa !61
  %141 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 28
  %142 = load ptr, ptr %141, align 8, !tbaa !59
  %143 = load ptr, ptr %46, align 8, !tbaa !44
  %144 = load ptr, ptr %66, align 8, !tbaa !44
  %145 = and i64 %98, 4294967295
  br label %177

146:                                              ; preds = %105, %146
  %147 = phi i64 [ 0, %105 ], [ %175, %146 ]
  %148 = getelementptr inbounds i32, ptr %107, i64 %147
  %149 = load i32, ptr %148, align 4, !tbaa !67
  %150 = load double, ptr %108, align 8, !tbaa !5
  %151 = sext i32 %149 to i64
  %152 = getelementptr inbounds double, ptr %110, i64 %151
  %153 = load double, ptr %152, align 8, !tbaa !45
  %154 = getelementptr inbounds i32, ptr %112, i64 %147
  %155 = load i32, ptr %154, align 4, !tbaa !67
  %156 = sub nsw i32 %155, %1
  %157 = sitofp i32 %156 to double
  %158 = fmul double %153, %157
  %159 = fadd double %150, %158
  %160 = getelementptr inbounds double, ptr %113, i64 %147
  store double %159, ptr %160, align 8, !tbaa !45
  %161 = load double, ptr %152, align 8, !tbaa !45
  %162 = getelementptr inbounds double, ptr %114, i64 %147
  store double %161, ptr %162, align 8, !tbaa !45
  %163 = load double, ptr %115, align 8, !tbaa !40
  %164 = getelementptr inbounds double, ptr %117, i64 %151
  %165 = load double, ptr %164, align 8, !tbaa !45
  %166 = getelementptr inbounds i32, ptr %119, i64 %147
  %167 = load i32, ptr %166, align 4, !tbaa !67
  %168 = sub nsw i32 %167, %1
  %169 = sitofp i32 %168 to double
  %170 = fmul double %165, %169
  %171 = fadd double %163, %170
  %172 = getelementptr inbounds double, ptr %120, i64 %147
  store double %171, ptr %172, align 8, !tbaa !45
  %173 = load double, ptr %164, align 8, !tbaa !45
  %174 = getelementptr inbounds double, ptr %121, i64 %147
  store double %173, ptr %174, align 8, !tbaa !45
  %175 = add nuw nsw i64 %147, 1
  %176 = icmp eq i64 %175, %122
  br i1 %176, label %212, label %146, !llvm.loop !69

177:                                              ; preds = %124, %177
  %178 = phi i64 [ 0, %124 ], [ %210, %177 ]
  %179 = getelementptr inbounds i32, ptr %126, i64 %178
  %180 = load i32, ptr %179, align 4, !tbaa !67
  %181 = load double, ptr %127, align 8, !tbaa !5
  %182 = sext i32 %180 to i64
  %183 = getelementptr inbounds double, ptr %129, i64 %182
  %184 = load double, ptr %183, align 8, !tbaa !45
  %185 = getelementptr inbounds i32, ptr %131, i64 %178
  %186 = load i32, ptr %185, align 4, !tbaa !67
  %187 = getelementptr inbounds i32, ptr %133, i64 %182
  %188 = load i32, ptr %187, align 4, !tbaa !67
  %189 = sub nsw i32 %186, %188
  %190 = sitofp i32 %189 to double
  %191 = fmul double %184, %190
  %192 = fadd double %181, %191
  %193 = getelementptr inbounds double, ptr %134, i64 %178
  store double %192, ptr %193, align 8, !tbaa !45
  %194 = load double, ptr %183, align 8, !tbaa !45
  %195 = getelementptr inbounds double, ptr %135, i64 %178
  store double %194, ptr %195, align 8, !tbaa !45
  %196 = load double, ptr %136, align 8, !tbaa !40
  %197 = getelementptr inbounds double, ptr %138, i64 %182
  %198 = load double, ptr %197, align 8, !tbaa !45
  %199 = getelementptr inbounds i32, ptr %140, i64 %178
  %200 = load i32, ptr %199, align 4, !tbaa !67
  %201 = getelementptr inbounds i32, ptr %142, i64 %182
  %202 = load i32, ptr %201, align 4, !tbaa !67
  %203 = sub nsw i32 %200, %202
  %204 = sitofp i32 %203 to double
  %205 = fmul double %198, %204
  %206 = fadd double %196, %205
  %207 = getelementptr inbounds double, ptr %143, i64 %178
  store double %206, ptr %207, align 8, !tbaa !45
  %208 = load double, ptr %197, align 8, !tbaa !45
  %209 = getelementptr inbounds double, ptr %144, i64 %178
  store double %208, ptr %209, align 8, !tbaa !45
  %210 = add nuw nsw i64 %178, 1
  %211 = icmp eq i64 %210, %145
  br i1 %211, label %212, label %177, !llvm.loop !70

212:                                              ; preds = %146, %177, %104, %123
  %213 = load i64, ptr %3, align 8, !tbaa.struct !71
  %214 = getelementptr inbounds i8, ptr %3, i64 8
  %215 = load i64, ptr %214, align 8, !tbaa.struct !72
  %216 = call double @cpu_timer_stop(i64 %213, i64 %215)
  %217 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 22
  %218 = load double, ptr %217, align 8, !tbaa !45
  %219 = fadd double %216, %218
  store double %219, ptr %217, align 8, !tbaa !45
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #31
  ret void
}

declare void @KDTree_Initialize(ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_ZN4Mesh5printEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str)
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %4 = load i64, ptr %3, align 8, !tbaa !43
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63
  %8 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %10 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %11 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %13 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %14 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %15 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %17 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %18 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  br label %20

19:                                               ; preds = %20, %1
  ret void

20:                                               ; preds = %6, %20
  %21 = phi i64 [ 0, %6 ], [ %64, %20 ]
  %22 = trunc i64 %21 to i32
  %23 = load ptr, ptr %7, align 8, !tbaa !59
  %24 = getelementptr inbounds i32, ptr %23, i64 %21
  %25 = load i32, ptr %24, align 4, !tbaa !67
  %26 = load ptr, ptr %8, align 8, !tbaa !60
  %27 = getelementptr inbounds i32, ptr %26, i64 %21
  %28 = load i32, ptr %27, align 4, !tbaa !67
  %29 = load ptr, ptr %9, align 8, !tbaa !61
  %30 = getelementptr inbounds i32, ptr %29, i64 %21
  %31 = load i32, ptr %30, align 4, !tbaa !67
  %32 = load ptr, ptr %10, align 8, !tbaa !62
  %33 = getelementptr inbounds i32, ptr %32, i64 %21
  %34 = load i32, ptr %33, align 4, !tbaa !67
  %35 = load ptr, ptr %11, align 8, !tbaa !73
  %36 = getelementptr inbounds i32, ptr %35, i64 %21
  %37 = load i32, ptr %36, align 4, !tbaa !67
  %38 = load ptr, ptr %12, align 8, !tbaa !74
  %39 = getelementptr inbounds i32, ptr %38, i64 %21
  %40 = load i32, ptr %39, align 4, !tbaa !67
  %41 = load ptr, ptr %13, align 8, !tbaa !75
  %42 = getelementptr inbounds i32, ptr %41, i64 %21
  %43 = load i32, ptr %42, align 4, !tbaa !67
  %44 = load ptr, ptr %14, align 8, !tbaa !76
  %45 = getelementptr inbounds i32, ptr %44, i64 %21
  %46 = load i32, ptr %45, align 4, !tbaa !67
  %47 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.17, i32 noundef %22, i32 noundef %25, i32 noundef %28, i32 noundef %31, i32 noundef %34, i32 noundef %37, i32 noundef %40, i32 noundef %43, i32 noundef %46)
  %48 = load ptr, ptr %15, align 8, !tbaa !44
  %49 = getelementptr inbounds double, ptr %48, i64 %21
  %50 = load double, ptr %49, align 8, !tbaa !45
  %51 = load ptr, ptr %16, align 8, !tbaa !44
  %52 = getelementptr inbounds double, ptr %51, i64 %21
  %53 = load double, ptr %52, align 8, !tbaa !45
  %54 = fadd double %50, %53
  %55 = load ptr, ptr %17, align 8, !tbaa !44
  %56 = getelementptr inbounds double, ptr %55, i64 %21
  %57 = load double, ptr %56, align 8, !tbaa !45
  %58 = load ptr, ptr %18, align 8, !tbaa !44
  %59 = getelementptr inbounds double, ptr %58, i64 %21
  %60 = load double, ptr %59, align 8, !tbaa !45
  %61 = fadd double %57, %60
  %62 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.18, double noundef %50, double noundef %54, double noundef %57, double noundef %61)
  %63 = add nuw nsw i64 %21, 1
  %64 = and i64 %63, 4294967295
  %65 = load i64, ptr %3, align 8, !tbaa !43
  %66 = icmp ugt i64 %65, %64
  br i1 %66, label %20, label %19, !llvm.loop !77
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !59
  %3 = icmp eq ptr %2, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %2) #33
  br label %5

5:                                                ; preds = %1, %4
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN10MallocPlusD2Ev(ptr noundef nonnull align 8 dereferenceable(96) %0) unnamed_addr #9 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !51
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %2, ptr noundef %4)
          to label %8 unwind label %5

5:                                                ; preds = %1
  %6 = landingpad { ptr, i32 }
          catch ptr null
  %7 = extractvalue { ptr, i32 } %6, 0
  tail call void @__clang_call_terminate(ptr %7) #32
  unreachable

8:                                                ; preds = %1
  %9 = getelementptr inbounds i8, ptr %0, i64 16
  %10 = load ptr, ptr %9, align 8, !tbaa !51
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %10)
          to label %14 unwind label %11

11:                                               ; preds = %8
  %12 = landingpad { ptr, i32 }
          catch ptr null
  %13 = extractvalue { ptr, i32 } %12, 0
  tail call void @__clang_call_terminate(ptr %13) #32
  unreachable

14:                                               ; preds = %8
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN4Mesh11print_localEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %4 = load ptr, ptr %3, align 8, !tbaa !73
  %5 = tail call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %4)
  %6 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  %7 = load i64, ptr %6, align 8, !tbaa !78
  %8 = icmp ult i64 %5, %7
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 23
  %10 = load ptr, ptr %9, align 8, !tbaa !79
  %11 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %12 = load i32, ptr %11, align 4, !tbaa !80
  br i1 %8, label %106, label %13

13:                                               ; preds = %1
  %14 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %10, ptr noundef nonnull @.str.19, i32 noundef %12)
  %15 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %16 = load i64, ptr %15, align 8, !tbaa !43
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 13
  %20 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %22 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %23 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %25 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  br label %40

26:                                               ; preds = %40
  %27 = and i64 %71, 4294967295
  br label %28

28:                                               ; preds = %26, %13
  %29 = phi i64 [ 0, %13 ], [ %27, %26 ]
  %30 = load i64, ptr %6, align 8, !tbaa !78
  %31 = icmp ugt i64 %30, %29
  br i1 %31, label %32, label %133

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 13
  %34 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %35 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %36 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %37 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %38 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %39 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  br label %73

40:                                               ; preds = %18, %40
  %41 = phi i64 [ 0, %18 ], [ %70, %40 ]
  %42 = trunc i64 %41 to i32
  %43 = load ptr, ptr %9, align 8, !tbaa !79
  %44 = load i32, ptr %11, align 4, !tbaa !80
  %45 = load i32, ptr %19, align 4, !tbaa !81
  %46 = add i32 %45, %42
  %47 = load ptr, ptr %20, align 8, !tbaa !60
  %48 = getelementptr inbounds i32, ptr %47, i64 %41
  %49 = load i32, ptr %48, align 4, !tbaa !67
  %50 = load ptr, ptr %21, align 8, !tbaa !61
  %51 = getelementptr inbounds i32, ptr %50, i64 %41
  %52 = load i32, ptr %51, align 4, !tbaa !67
  %53 = load ptr, ptr %22, align 8, !tbaa !62
  %54 = getelementptr inbounds i32, ptr %53, i64 %41
  %55 = load i32, ptr %54, align 4, !tbaa !67
  %56 = load ptr, ptr %3, align 8, !tbaa !73
  %57 = getelementptr inbounds i32, ptr %56, i64 %41
  %58 = load i32, ptr %57, align 4, !tbaa !67
  %59 = load ptr, ptr %23, align 8, !tbaa !74
  %60 = getelementptr inbounds i32, ptr %59, i64 %41
  %61 = load i32, ptr %60, align 4, !tbaa !67
  %62 = load ptr, ptr %24, align 8, !tbaa !75
  %63 = getelementptr inbounds i32, ptr %62, i64 %41
  %64 = load i32, ptr %63, align 4, !tbaa !67
  %65 = load ptr, ptr %25, align 8, !tbaa !76
  %66 = getelementptr inbounds i32, ptr %65, i64 %41
  %67 = load i32, ptr %66, align 4, !tbaa !67
  %68 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %43, ptr noundef nonnull @.str.20, i32 noundef %44, i32 noundef %42, i32 noundef %46, i32 noundef %49, i32 noundef %52, i32 noundef %55, i32 noundef %58, i32 noundef %61, i32 noundef %64, i32 noundef %67)
  %69 = add nuw nsw i64 %41, 1
  %70 = and i64 %69, 4294967295
  %71 = load i64, ptr %15, align 8, !tbaa !43
  %72 = icmp ugt i64 %71, %70
  br i1 %72, label %40, label %26, !llvm.loop !82

73:                                               ; preds = %32, %73
  %74 = phi i64 [ %29, %32 ], [ %103, %73 ]
  %75 = trunc i64 %74 to i32
  %76 = load ptr, ptr %9, align 8, !tbaa !79
  %77 = load i32, ptr %11, align 4, !tbaa !80
  %78 = load i32, ptr %33, align 4, !tbaa !81
  %79 = add i32 %78, %75
  %80 = load ptr, ptr %34, align 8, !tbaa !60
  %81 = getelementptr inbounds i32, ptr %80, i64 %74
  %82 = load i32, ptr %81, align 4, !tbaa !67
  %83 = load ptr, ptr %35, align 8, !tbaa !61
  %84 = getelementptr inbounds i32, ptr %83, i64 %74
  %85 = load i32, ptr %84, align 4, !tbaa !67
  %86 = load ptr, ptr %36, align 8, !tbaa !62
  %87 = getelementptr inbounds i32, ptr %86, i64 %74
  %88 = load i32, ptr %87, align 4, !tbaa !67
  %89 = load ptr, ptr %3, align 8, !tbaa !73
  %90 = getelementptr inbounds i32, ptr %89, i64 %74
  %91 = load i32, ptr %90, align 4, !tbaa !67
  %92 = load ptr, ptr %37, align 8, !tbaa !74
  %93 = getelementptr inbounds i32, ptr %92, i64 %74
  %94 = load i32, ptr %93, align 4, !tbaa !67
  %95 = load ptr, ptr %38, align 8, !tbaa !75
  %96 = getelementptr inbounds i32, ptr %95, i64 %74
  %97 = load i32, ptr %96, align 4, !tbaa !67
  %98 = load ptr, ptr %39, align 8, !tbaa !76
  %99 = getelementptr inbounds i32, ptr %98, i64 %74
  %100 = load i32, ptr %99, align 4, !tbaa !67
  %101 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %76, ptr noundef nonnull @.str.20, i32 noundef %77, i32 noundef %75, i32 noundef %79, i32 noundef %82, i32 noundef %85, i32 noundef %88, i32 noundef %91, i32 noundef %94, i32 noundef %97, i32 noundef %100)
  %102 = add nuw nsw i64 %74, 1
  %103 = and i64 %102, 4294967295
  %104 = load i64, ptr %6, align 8, !tbaa !78
  %105 = icmp ugt i64 %104, %103
  br i1 %105, label %73, label %133, !llvm.loop !83

106:                                              ; preds = %1
  %107 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %10, ptr noundef nonnull @.str.21, i32 noundef %12)
  %108 = load i64, ptr %6, align 8, !tbaa !78
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %133, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %112 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %113 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  br label %114

114:                                              ; preds = %110, %114
  %115 = phi i64 [ 0, %110 ], [ %130, %114 ]
  %116 = trunc i64 %115 to i32
  %117 = load ptr, ptr %9, align 8, !tbaa !79
  %118 = load i32, ptr %11, align 4, !tbaa !80
  %119 = load ptr, ptr %111, align 8, !tbaa !60
  %120 = getelementptr inbounds i32, ptr %119, i64 %115
  %121 = load i32, ptr %120, align 4, !tbaa !67
  %122 = load ptr, ptr %112, align 8, !tbaa !61
  %123 = getelementptr inbounds i32, ptr %122, i64 %115
  %124 = load i32, ptr %123, align 4, !tbaa !67
  %125 = load ptr, ptr %113, align 8, !tbaa !62
  %126 = getelementptr inbounds i32, ptr %125, i64 %115
  %127 = load i32, ptr %126, align 4, !tbaa !67
  %128 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %117, ptr noundef nonnull @.str.22, i32 noundef %118, i32 noundef %116, i32 noundef %121, i32 noundef %124, i32 noundef %127)
  %129 = add nuw nsw i64 %115, 1
  %130 = and i64 %129, 4294967295
  %131 = load i64, ptr %6, align 8, !tbaa !78
  %132 = icmp ugt i64 %131, %130
  br i1 %132, label %114, label %133, !llvm.loop !84

133:                                              ; preds = %73, %114, %28, %106
  ret void
}

declare noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96), ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local void @_ZN4Mesh41compare_neighbors_cpu_local_to_cpu_globalEjjPS_PiS1_(ptr nocapture noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef %3, ptr nocapture noundef %4, ptr nocapture noundef %5) local_unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh39compare_indices_cpu_local_to_cpu_globalEjPS_PiS1_i(ptr nocapture noundef nonnull readnone align 8 dereferenceable(2288) %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readnone %3, ptr nocapture noundef readnone %4, i32 noundef %5) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %7 = getelementptr inbounds %class.Mesh, ptr %2, i64 0, i32 68
  %8 = load ptr, ptr %7, align 8, !tbaa !85
  %9 = getelementptr inbounds %class.Mesh, ptr %2, i64 0, i32 64
  %10 = load ptr, ptr %9, align 8, !tbaa !60
  %11 = getelementptr inbounds %class.Mesh, ptr %2, i64 0, i32 65
  %12 = load ptr, ptr %11, align 8, !tbaa !61
  %13 = getelementptr inbounds %class.Mesh, ptr %2, i64 0, i32 67
  %14 = load ptr, ptr %13, align 8, !tbaa !62
  %15 = zext i32 %1 to i64
  %16 = icmp eq i32 %1, 0
  br i1 %16, label %44, label %17

17:                                               ; preds = %6
  %18 = shl nuw nsw i64 %15, 2
  %19 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %18) #35
  store i32 0, ptr %19, align 4, !tbaa !67
  %20 = icmp eq i32 %1, 1
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = getelementptr i32, ptr %19, i64 1
  %23 = add nsw i64 %18, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %22, i8 0, i64 %23, i1 false), !tbaa !67
  br label %24

24:                                               ; preds = %21, %17
  %25 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %18) #35
          to label %26 unwind label %45

26:                                               ; preds = %24
  store i32 0, ptr %25, align 4, !tbaa !67
  br i1 %20, label %30, label %27

27:                                               ; preds = %26
  %28 = getelementptr i32, ptr %25, i64 1
  %29 = add nsw i64 %18, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %28, i8 0, i64 %29, i1 false), !tbaa !67
  br label %30

30:                                               ; preds = %27, %26
  %31 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %18) #35
          to label %32 unwind label %47

32:                                               ; preds = %30
  store i32 0, ptr %31, align 4, !tbaa !67
  br i1 %20, label %36, label %33

33:                                               ; preds = %32
  %34 = getelementptr i32, ptr %31, i64 1
  %35 = add nsw i64 %18, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %34, i8 0, i64 %35, i1 false), !tbaa !67
  br label %36

36:                                               ; preds = %33, %32
  %37 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %18) #35
          to label %38 unwind label %49

38:                                               ; preds = %36
  store i32 0, ptr %37, align 4, !tbaa !67
  br i1 %20, label %39, label %40

39:                                               ; preds = %40, %38
  br label %51

40:                                               ; preds = %38
  %41 = getelementptr i32, ptr %37, i64 1
  %42 = add nsw i64 %18, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %41, i8 0, i64 %42, i1 false), !tbaa !67
  br label %39

43:                                               ; preds = %88
  tail call void @_ZdlPv(ptr noundef nonnull %37) #33
  tail call void @_ZdlPv(ptr noundef nonnull %31) #33
  tail call void @_ZdlPv(ptr noundef nonnull %25) #33
  tail call void @_ZdlPv(ptr noundef nonnull %19) #33
  br label %44

44:                                               ; preds = %6, %43
  ret void

45:                                               ; preds = %24
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %93

47:                                               ; preds = %30
  %48 = landingpad { ptr, i32 }
          cleanup
  br label %91

49:                                               ; preds = %36
  %50 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %31) #33
  br label %91

51:                                               ; preds = %39, %88
  %52 = phi i64 [ %89, %88 ], [ 0, %39 ]
  %53 = getelementptr inbounds i32, ptr %8, i64 %52
  %54 = load i32, ptr %53, align 4, !tbaa !67
  %55 = getelementptr inbounds i32, ptr %37, i64 %52
  %56 = load i32, ptr %55, align 4, !tbaa !67
  %57 = icmp eq i32 %54, %56
  br i1 %57, label %61, label %58

58:                                               ; preds = %51
  %59 = trunc i64 %52 to i32
  %60 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.23, i32 noundef %5, i32 noundef %59, i32 noundef %54, i32 noundef %56)
  br label %61

61:                                               ; preds = %58, %51
  %62 = getelementptr inbounds i32, ptr %10, i64 %52
  %63 = load i32, ptr %62, align 4, !tbaa !67
  %64 = getelementptr inbounds i32, ptr %19, i64 %52
  %65 = load i32, ptr %64, align 4, !tbaa !67
  %66 = icmp eq i32 %63, %65
  br i1 %66, label %70, label %67

67:                                               ; preds = %61
  %68 = trunc i64 %52 to i32
  %69 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.24, i32 noundef %5, i32 noundef %68, i32 noundef %63, i32 noundef %65)
  br label %70

70:                                               ; preds = %67, %61
  %71 = getelementptr inbounds i32, ptr %12, i64 %52
  %72 = load i32, ptr %71, align 4, !tbaa !67
  %73 = getelementptr inbounds i32, ptr %25, i64 %52
  %74 = load i32, ptr %73, align 4, !tbaa !67
  %75 = icmp eq i32 %72, %74
  br i1 %75, label %79, label %76

76:                                               ; preds = %70
  %77 = trunc i64 %52 to i32
  %78 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.25, i32 noundef %5, i32 noundef %77, i32 noundef %72, i32 noundef %74)
  br label %79

79:                                               ; preds = %76, %70
  %80 = getelementptr inbounds i32, ptr %14, i64 %52
  %81 = load i32, ptr %80, align 4, !tbaa !67
  %82 = getelementptr inbounds i32, ptr %31, i64 %52
  %83 = load i32, ptr %82, align 4, !tbaa !67
  %84 = icmp eq i32 %81, %83
  br i1 %84, label %88, label %85

85:                                               ; preds = %79
  %86 = trunc i64 %52 to i32
  %87 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.26, i32 noundef %5, i32 noundef %86, i32 noundef %81, i32 noundef %83)
  br label %88

88:                                               ; preds = %79, %85
  %89 = add nuw nsw i64 %52, 1
  %90 = icmp eq i64 %89, %15
  br i1 %90, label %43, label %51, !llvm.loop !86

91:                                               ; preds = %47, %49
  %92 = phi { ptr, i32 } [ %48, %47 ], [ %50, %49 ]
  tail call void @_ZdlPv(ptr noundef nonnull %25) #33
  br label %93

93:                                               ; preds = %91, %45
  %94 = phi { ptr, i32 } [ %46, %45 ], [ %92, %91 ]
  tail call void @_ZdlPv(ptr noundef nonnull %19) #33
  resume { ptr, i32 } %94
}

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh50compare_coordinates_cpu_local_to_cpu_global_doubleEjPiS0_PdS1_S1_S1_S1_S1_S1_S1_S1_S1_i(ptr nocapture noundef nonnull readnone align 8 dereferenceable(2288) %0, i32 noundef %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readnone %3, ptr nocapture noundef readnone %4, ptr nocapture noundef readnone %5, ptr nocapture noundef readnone %6, ptr nocapture noundef readnone %7, ptr nocapture noundef readnone %8, ptr nocapture noundef readonly %9, ptr nocapture noundef readonly %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, ptr nocapture noundef readonly %13, i32 noundef %14) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %16 = zext i32 %1 to i64
  %17 = icmp eq i32 %1, 0
  br i1 %17, label %51, label %18

18:                                               ; preds = %15
  %19 = shl nuw nsw i64 %16, 3
  %20 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #35
  store double 0.000000e+00, ptr %20, align 8, !tbaa !45
  %21 = icmp eq i32 %1, 1
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr double, ptr %20, i64 1
  %24 = add nsw i64 %19, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %24, i1 false), !tbaa !45
  br label %25

25:                                               ; preds = %22, %18
  %26 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #35
          to label %27 unwind label %52

27:                                               ; preds = %25
  store double 0.000000e+00, ptr %26, align 8, !tbaa !45
  br i1 %21, label %31, label %28

28:                                               ; preds = %27
  %29 = getelementptr double, ptr %26, i64 1
  %30 = add nsw i64 %19, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %29, i8 0, i64 %30, i1 false), !tbaa !45
  br label %31

31:                                               ; preds = %28, %27
  %32 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #35
          to label %33 unwind label %54

33:                                               ; preds = %31
  store double 0.000000e+00, ptr %32, align 8, !tbaa !45
  br i1 %21, label %37, label %34

34:                                               ; preds = %33
  %35 = getelementptr double, ptr %32, i64 1
  %36 = add nsw i64 %19, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %35, i8 0, i64 %36, i1 false), !tbaa !45
  br label %37

37:                                               ; preds = %34, %33
  %38 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #35
          to label %39 unwind label %56

39:                                               ; preds = %37
  store double 0.000000e+00, ptr %38, align 8, !tbaa !45
  br i1 %21, label %43, label %40

40:                                               ; preds = %39
  %41 = getelementptr double, ptr %38, i64 1
  %42 = add nsw i64 %19, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %41, i8 0, i64 %42, i1 false), !tbaa !45
  br label %43

43:                                               ; preds = %40, %39
  %44 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #35
          to label %45 unwind label %58

45:                                               ; preds = %43
  store double 0.000000e+00, ptr %44, align 8, !tbaa !45
  br i1 %21, label %46, label %47

46:                                               ; preds = %47, %45
  br label %60

47:                                               ; preds = %45
  %48 = getelementptr double, ptr %44, i64 1
  %49 = add nsw i64 %19, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %48, i8 0, i64 %49, i1 false), !tbaa !45
  br label %46

50:                                               ; preds = %116
  tail call void @_ZdlPv(ptr noundef nonnull %44) #33
  tail call void @_ZdlPv(ptr noundef nonnull %38) #33
  tail call void @_ZdlPv(ptr noundef nonnull %32) #33
  tail call void @_ZdlPv(ptr noundef nonnull %26) #33
  tail call void @_ZdlPv(ptr noundef nonnull %20) #33
  br label %51

51:                                               ; preds = %15, %50
  ret void

52:                                               ; preds = %25
  %53 = landingpad { ptr, i32 }
          cleanup
  br label %123

54:                                               ; preds = %31
  %55 = landingpad { ptr, i32 }
          cleanup
  br label %121

56:                                               ; preds = %37
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %119

58:                                               ; preds = %43
  %59 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %38) #33
  br label %119

60:                                               ; preds = %46, %116
  %61 = phi i64 [ %117, %116 ], [ 0, %46 ]
  %62 = getelementptr inbounds double, ptr %9, i64 %61
  %63 = load double, ptr %62, align 8, !tbaa !45
  %64 = getelementptr inbounds double, ptr %20, i64 %61
  %65 = load double, ptr %64, align 8, !tbaa !45
  %66 = fsub double %63, %65
  %67 = tail call double @llvm.fabs.f64(double %66)
  %68 = fcmp ogt double %67, 2.500000e-02
  br i1 %68, label %69, label %72

69:                                               ; preds = %60
  %70 = trunc i64 %61 to i32
  %71 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.27, i32 noundef %14, i32 noundef %70, double noundef %63, double noundef %65)
  br label %72

72:                                               ; preds = %69, %60
  %73 = getelementptr inbounds double, ptr %10, i64 %61
  %74 = load double, ptr %73, align 8, !tbaa !45
  %75 = getelementptr inbounds double, ptr %26, i64 %61
  %76 = load double, ptr %75, align 8, !tbaa !45
  %77 = fsub double %74, %76
  %78 = tail call double @llvm.fabs.f64(double %77)
  %79 = fcmp ogt double %78, 2.500000e-02
  br i1 %79, label %80, label %83

80:                                               ; preds = %72
  %81 = trunc i64 %61 to i32
  %82 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.28, i32 noundef %14, i32 noundef %81, double noundef %74, double noundef %76)
  br label %83

83:                                               ; preds = %80, %72
  %84 = getelementptr inbounds double, ptr %11, i64 %61
  %85 = load double, ptr %84, align 8, !tbaa !45
  %86 = getelementptr inbounds double, ptr %32, i64 %61
  %87 = load double, ptr %86, align 8, !tbaa !45
  %88 = fsub double %85, %87
  %89 = tail call double @llvm.fabs.f64(double %88)
  %90 = fcmp ogt double %89, 2.500000e-02
  br i1 %90, label %91, label %94

91:                                               ; preds = %83
  %92 = trunc i64 %61 to i32
  %93 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.29, i32 noundef %14, i32 noundef %92, double noundef %85, double noundef %87)
  br label %94

94:                                               ; preds = %91, %83
  %95 = getelementptr inbounds double, ptr %12, i64 %61
  %96 = load double, ptr %95, align 8, !tbaa !45
  %97 = getelementptr inbounds double, ptr %38, i64 %61
  %98 = load double, ptr %97, align 8, !tbaa !45
  %99 = fsub double %96, %98
  %100 = tail call double @llvm.fabs.f64(double %99)
  %101 = fcmp ogt double %100, 2.500000e-02
  br i1 %101, label %102, label %105

102:                                              ; preds = %94
  %103 = trunc i64 %61 to i32
  %104 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.30, i32 noundef %14, i32 noundef %103, double noundef %96, double noundef %98)
  br label %105

105:                                              ; preds = %102, %94
  %106 = getelementptr inbounds double, ptr %13, i64 %61
  %107 = load double, ptr %106, align 8, !tbaa !45
  %108 = getelementptr inbounds double, ptr %44, i64 %61
  %109 = load double, ptr %108, align 8, !tbaa !45
  %110 = fsub double %107, %109
  %111 = tail call double @llvm.fabs.f64(double %110)
  %112 = fcmp ogt double %111, 2.500000e-02
  br i1 %112, label %113, label %116

113:                                              ; preds = %105
  %114 = trunc i64 %61 to i32
  %115 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.31, i32 noundef %14, i32 noundef %114, double noundef %107, double noundef %109)
  br label %116

116:                                              ; preds = %105, %113
  %117 = add nuw nsw i64 %61, 1
  %118 = icmp eq i64 %117, %16
  br i1 %118, label %50, label %60, !llvm.loop !87

119:                                              ; preds = %56, %58
  %120 = phi { ptr, i32 } [ %57, %56 ], [ %59, %58 ]
  tail call void @_ZdlPv(ptr noundef nonnull %32) #33
  br label %121

121:                                              ; preds = %54, %119
  %122 = phi { ptr, i32 } [ %55, %54 ], [ %120, %119 ]
  tail call void @_ZdlPv(ptr noundef nonnull %26) #33
  br label %123

123:                                              ; preds = %121, %52
  %124 = phi { ptr, i32 } [ %53, %52 ], [ %122, %121 ]
  tail call void @_ZdlPv(ptr noundef nonnull %20) #33
  resume { ptr, i32 } %124
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fabs.f64(double) #11

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh49compare_coordinates_cpu_local_to_cpu_global_floatEjPiS0_PdS1_S1_S1_PfS1_S1_S1_S1_S2_i(ptr nocapture noundef nonnull readnone align 8 dereferenceable(2288) %0, i32 noundef %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readnone %3, ptr nocapture noundef readnone %4, ptr nocapture noundef readnone %5, ptr nocapture noundef readnone %6, ptr nocapture noundef readnone %7, ptr nocapture noundef readnone %8, ptr nocapture noundef readonly %9, ptr nocapture noundef readonly %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, ptr nocapture noundef readonly %13, i32 noundef %14) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %16 = zext i32 %1 to i64
  %17 = icmp eq i32 %1, 0
  br i1 %17, label %52, label %18

18:                                               ; preds = %15
  %19 = shl nuw nsw i64 %16, 3
  %20 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #35
  store double 0.000000e+00, ptr %20, align 8, !tbaa !45
  %21 = icmp eq i32 %1, 1
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr double, ptr %20, i64 1
  %24 = add nsw i64 %19, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %24, i1 false), !tbaa !45
  br label %25

25:                                               ; preds = %22, %18
  %26 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #35
          to label %27 unwind label %53

27:                                               ; preds = %25
  store double 0.000000e+00, ptr %26, align 8, !tbaa !45
  br i1 %21, label %31, label %28

28:                                               ; preds = %27
  %29 = getelementptr double, ptr %26, i64 1
  %30 = add nsw i64 %19, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %29, i8 0, i64 %30, i1 false), !tbaa !45
  br label %31

31:                                               ; preds = %28, %27
  %32 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #35
          to label %33 unwind label %55

33:                                               ; preds = %31
  store double 0.000000e+00, ptr %32, align 8, !tbaa !45
  br i1 %21, label %37, label %34

34:                                               ; preds = %33
  %35 = getelementptr double, ptr %32, i64 1
  %36 = add nsw i64 %19, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %35, i8 0, i64 %36, i1 false), !tbaa !45
  br label %37

37:                                               ; preds = %34, %33
  %38 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #35
          to label %39 unwind label %57

39:                                               ; preds = %37
  store double 0.000000e+00, ptr %38, align 8, !tbaa !45
  br i1 %21, label %43, label %40

40:                                               ; preds = %39
  %41 = getelementptr double, ptr %38, i64 1
  %42 = add nsw i64 %19, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %41, i8 0, i64 %42, i1 false), !tbaa !45
  br label %43

43:                                               ; preds = %40, %39
  %44 = shl nuw nsw i64 %16, 2
  %45 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %44) #35
          to label %46 unwind label %59

46:                                               ; preds = %43
  store float 0.000000e+00, ptr %45, align 4, !tbaa !88
  br i1 %21, label %47, label %48

47:                                               ; preds = %48, %46
  br label %61

48:                                               ; preds = %46
  %49 = getelementptr float, ptr %45, i64 1
  %50 = add nsw i64 %44, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %50, i1 false), !tbaa !88
  br label %47

51:                                               ; preds = %120
  tail call void @_ZdlPv(ptr noundef nonnull %45) #33
  tail call void @_ZdlPv(ptr noundef nonnull %38) #33
  tail call void @_ZdlPv(ptr noundef nonnull %32) #33
  tail call void @_ZdlPv(ptr noundef nonnull %26) #33
  tail call void @_ZdlPv(ptr noundef nonnull %20) #33
  br label %52

52:                                               ; preds = %15, %51
  ret void

53:                                               ; preds = %25
  %54 = landingpad { ptr, i32 }
          cleanup
  br label %127

55:                                               ; preds = %31
  %56 = landingpad { ptr, i32 }
          cleanup
  br label %125

57:                                               ; preds = %37
  %58 = landingpad { ptr, i32 }
          cleanup
  br label %123

59:                                               ; preds = %43
  %60 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %38) #33
  br label %123

61:                                               ; preds = %47, %120
  %62 = phi i64 [ %121, %120 ], [ 0, %47 ]
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = load double, ptr %63, align 8, !tbaa !45
  %65 = getelementptr inbounds double, ptr %20, i64 %62
  %66 = load double, ptr %65, align 8, !tbaa !45
  %67 = fsub double %64, %66
  %68 = tail call double @llvm.fabs.f64(double %67)
  %69 = fcmp ogt double %68, 2.500000e-02
  br i1 %69, label %70, label %73

70:                                               ; preds = %61
  %71 = trunc i64 %62 to i32
  %72 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.27, i32 noundef %14, i32 noundef %71, double noundef %64, double noundef %66)
  br label %73

73:                                               ; preds = %70, %61
  %74 = getelementptr inbounds double, ptr %10, i64 %62
  %75 = load double, ptr %74, align 8, !tbaa !45
  %76 = getelementptr inbounds double, ptr %26, i64 %62
  %77 = load double, ptr %76, align 8, !tbaa !45
  %78 = fsub double %75, %77
  %79 = tail call double @llvm.fabs.f64(double %78)
  %80 = fcmp ogt double %79, 2.500000e-02
  br i1 %80, label %81, label %84

81:                                               ; preds = %73
  %82 = trunc i64 %62 to i32
  %83 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.28, i32 noundef %14, i32 noundef %82, double noundef %75, double noundef %77)
  br label %84

84:                                               ; preds = %81, %73
  %85 = getelementptr inbounds double, ptr %11, i64 %62
  %86 = load double, ptr %85, align 8, !tbaa !45
  %87 = getelementptr inbounds double, ptr %32, i64 %62
  %88 = load double, ptr %87, align 8, !tbaa !45
  %89 = fsub double %86, %88
  %90 = tail call double @llvm.fabs.f64(double %89)
  %91 = fcmp ogt double %90, 2.500000e-02
  br i1 %91, label %92, label %95

92:                                               ; preds = %84
  %93 = trunc i64 %62 to i32
  %94 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.29, i32 noundef %14, i32 noundef %93, double noundef %86, double noundef %88)
  br label %95

95:                                               ; preds = %92, %84
  %96 = getelementptr inbounds double, ptr %12, i64 %62
  %97 = load double, ptr %96, align 8, !tbaa !45
  %98 = getelementptr inbounds double, ptr %38, i64 %62
  %99 = load double, ptr %98, align 8, !tbaa !45
  %100 = fsub double %97, %99
  %101 = tail call double @llvm.fabs.f64(double %100)
  %102 = fcmp ogt double %101, 2.500000e-02
  br i1 %102, label %103, label %106

103:                                              ; preds = %95
  %104 = trunc i64 %62 to i32
  %105 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.30, i32 noundef %14, i32 noundef %104, double noundef %97, double noundef %99)
  br label %106

106:                                              ; preds = %103, %95
  %107 = getelementptr inbounds float, ptr %13, i64 %62
  %108 = load float, ptr %107, align 4, !tbaa !88
  %109 = getelementptr inbounds float, ptr %45, i64 %62
  %110 = load float, ptr %109, align 4, !tbaa !88
  %111 = fsub float %108, %110
  %112 = tail call float @llvm.fabs.f32(float %111)
  %113 = fpext float %112 to double
  %114 = fcmp ogt double %113, 2.500000e-02
  br i1 %114, label %115, label %120

115:                                              ; preds = %106
  %116 = fpext float %108 to double
  %117 = fpext float %110 to double
  %118 = trunc i64 %62 to i32
  %119 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.31, i32 noundef %14, i32 noundef %118, double noundef %116, double noundef %117)
  br label %120

120:                                              ; preds = %106, %115
  %121 = add nuw nsw i64 %62, 1
  %122 = icmp eq i64 %121, %16
  br i1 %122, label %51, label %61, !llvm.loop !89

123:                                              ; preds = %57, %59
  %124 = phi { ptr, i32 } [ %58, %57 ], [ %60, %59 ]
  tail call void @_ZdlPv(ptr noundef nonnull %32) #33
  br label %125

125:                                              ; preds = %55, %123
  %126 = phi { ptr, i32 } [ %56, %55 ], [ %124, %123 ]
  tail call void @_ZdlPv(ptr noundef nonnull %26) #33
  br label %127

127:                                              ; preds = %125, %53
  %128 = phi { ptr, i32 } [ %54, %53 ], [ %126, %125 ]
  tail call void @_ZdlPv(ptr noundef nonnull %20) #33
  resume { ptr, i32 } %128
}

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh36compare_mpot_cpu_local_to_cpu_globalEjPiS0_S0_S0_i(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, i32 noundef %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readnone %3, ptr nocapture noundef readnone %4, ptr nocapture noundef readonly %5, i32 noundef %6) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %8 = icmp eq i32 %1, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %7
  %10 = zext i32 %1 to i64
  %11 = shl nuw nsw i64 %10, 2
  %12 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %11) #35
  store i32 0, ptr %12, align 4, !tbaa !67
  %13 = icmp eq i32 %1, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr i32, ptr %12, i64 1
  %16 = add nsw i64 %11, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %15, i8 0, i64 %16, i1 false), !tbaa !67
  br label %17

17:                                               ; preds = %14, %9
  %18 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %19 = zext i32 %1 to i64
  br label %22

20:                                               ; preds = %35
  tail call void @_ZdlPv(ptr noundef nonnull %12) #33
  br label %21

21:                                               ; preds = %7, %20
  ret void

22:                                               ; preds = %17, %35
  %23 = phi i64 [ 0, %17 ], [ %36, %35 ]
  %24 = getelementptr inbounds i32, ptr %5, i64 %23
  %25 = load i32, ptr %24, align 4, !tbaa !67
  %26 = getelementptr inbounds i32, ptr %12, i64 %23
  %27 = load i32, ptr %26, align 4, !tbaa !67
  %28 = icmp ne i32 %25, %27
  %29 = load i32, ptr %18, align 4
  %30 = icmp eq i32 %29, 0
  %31 = select i1 %28, i1 %30, i1 false
  br i1 %31, label %32, label %35

32:                                               ; preds = %22
  %33 = trunc i64 %23 to i32
  %34 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.32, i32 noundef 0, i32 noundef %6, i32 noundef %33, i32 noundef %25, i32 noundef %27)
  br label %35

35:                                               ; preds = %22, %32
  %36 = add nuw nsw i64 %23, 1
  %37 = icmp eq i64 %36, %19
  br i1 %37, label %20, label %22, !llvm.loop !90
}

; Function Attrs: uwtable
define dso_local void @_ZN4MeshC2Eiiiiddiii(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, double noundef %5, double noundef %6, i32 noundef %7, i32 noundef %8, i32 %9) unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %11 = alloca [4 x i32], align 16
  %12 = alloca [4 x i32], align 16
  %13 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 0, ptr %13, align 8, !tbaa !50
  %14 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %14, align 8, !tbaa !51
  %15 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %13, ptr %15, align 8, !tbaa !52
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %13, ptr %16, align 8, !tbaa !53
  %17 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %17, align 8, !tbaa !54
  %18 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  store i32 0, ptr %18, align 8, !tbaa !50
  %19 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %19, align 8, !tbaa !51
  %20 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %18, ptr %20, align 8, !tbaa !52
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %18, ptr %21, align 8, !tbaa !53
  %22 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %22, align 8, !tbaa !54
  %23 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store i32 0, ptr %23, align 8, !tbaa !50
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %24, align 8, !tbaa !51
  %25 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %23, ptr %25, align 8, !tbaa !52
  %26 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %23, ptr %26, align 8, !tbaa !53
  %27 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %27, align 8, !tbaa !54
  %28 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  store i32 0, ptr %28, align 8, !tbaa !50
  %29 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %29, align 8, !tbaa !51
  %30 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %28, ptr %30, align 8, !tbaa !52
  %31 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %28, ptr %31, align 8, !tbaa !53
  %32 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1, i32 1
  %33 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 19
  %34 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 20
  %35 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 21
  %36 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 22
  %37 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 25
  %38 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 26
  %39 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 27
  %40 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 28
  %41 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 29
  %42 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 30
  %43 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 31
  %44 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 32
  %45 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 33
  %46 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 34
  %47 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 35
  %48 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %48, i8 0, i64 24, i1 false)
  %49 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %50 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %51 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %52 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %53 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 79
  %54 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 80
  %55 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83
  %56 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84
  %57 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85
  %58 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 86
  %59 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 87
  %60 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 88
  %61 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 89
  %62 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 90
  %63 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 91
  %64 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 92
  %65 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 93
  %66 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 94
  %67 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 95
  %68 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 96
  %69 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 97
  %70 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98
  %71 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99
  %72 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100
  %73 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 101
  %74 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 102
  %75 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 103
  %76 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 104
  %77 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 105
  %78 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 106
  %79 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 107
  %80 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 108
  %81 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 109
  %82 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 110
  %83 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 111
  %84 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 112
  %85 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 14
  %86 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %87 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(424) %32, i8 0, i64 424, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %85, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(96) %33, i8 0, i64 96, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(264) %37, i8 0, i64 264, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(144) %49, i8 0, i64 144, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(720) %55, i8 0, i64 720, i1 false)
  store i32 %4, ptr %0, align 8, !tbaa !57
  %88 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  store i32 %3, ptr %88, align 8, !tbaa !91
  %89 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 17
  store double 0.000000e+00, ptr %89, align 8, !tbaa !92
  %90 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 18
  store i32 1, ptr %90, align 8, !tbaa !93
  %91 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  store i32 0, ptr %91, align 4, !tbaa !80
  %92 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 10
  store i32 1, ptr %92, align 8, !tbaa !94
  %93 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  store i64 0, ptr %93, align 8, !tbaa !43
  %94 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  store i64 0, ptr %94, align 8, !tbaa !78
  %95 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 11
  store i32 %8, ptr %95, align 4, !tbaa !95
  %96 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 13
  store i32 0, ptr %96, align 4, !tbaa !81
  %97 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 16
  %98 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 12
  store i32 0, ptr %98, align 8, !tbaa !96
  store float 1.000000e+00, ptr %97, align 8, !tbaa !97
  %99 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 60
  store double %5, ptr %99, align 8, !tbaa !98
  %100 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 61
  store double %6, ptr %100, align 8, !tbaa !99
  %101 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 37
  store i32 %7, ptr %101, align 4, !tbaa !68
  %102 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 39
  store i32 0, ptr %102, align 4, !tbaa !100
  %103 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 41
  store i32 0, ptr %103, align 4, !tbaa !101
  %104 = add nsw i32 %1, 1
  %105 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 40
  store i32 %104, ptr %105, align 8, !tbaa !102
  %106 = add nsw i32 %2, 1
  %107 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 42
  store i32 %106, ptr %107, align 8, !tbaa !103
  %108 = icmp eq i32 %7, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %10
  %110 = add nsw i32 %1, 2
  %111 = add nsw i32 %2, 2
  store i32 0, ptr %102, align 4, !tbaa !100
  store i32 0, ptr %103, align 4, !tbaa !101
  store i32 %104, ptr %105, align 8, !tbaa !102
  store i32 %106, ptr %107, align 8, !tbaa !103
  br label %112

112:                                              ; preds = %109, %10
  %113 = phi i32 [ %110, %109 ], [ %1, %10 ]
  %114 = phi i32 [ %111, %109 ], [ %2, %10 ]
  %115 = insertelement <2 x double> poison, double %5, i64 0
  %116 = shufflevector <2 x double> %115, <2 x double> poison, <2 x i32> zeroinitializer
  %117 = fmul <2 x double> %116, <double -5.000000e-01, double 5.000000e-01>
  %118 = sitofp i32 %113 to double
  %119 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 48
  %120 = insertelement <2 x double> poison, double %6, i64 0
  %121 = shufflevector <2 x double> %120, <2 x double> poison, <2 x i32> zeroinitializer
  %122 = fmul <2 x double> %121, <double -5.000000e-01, double 5.000000e-01>
  %123 = sitofp i32 %114 to double
  %124 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 50
  %125 = insertelement <2 x double> poison, double %118, i64 0
  %126 = shufflevector <2 x double> %125, <2 x double> poison, <2 x i32> zeroinitializer
  %127 = fmul <2 x double> %117, %126
  store <2 x double> %127, ptr %119, align 8, !tbaa !45
  %128 = insertelement <2 x double> poison, double %123, i64 0
  %129 = shufflevector <2 x double> %128, <2 x double> poison, <2 x i32> zeroinitializer
  %130 = fmul <2 x double> %122, %129
  store <2 x double> %130, ptr %124, align 8, !tbaa !45
  %131 = add nsw i32 %3, 1
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1
  %134 = load ptr, ptr %133, align 8, !tbaa !58
  %135 = load ptr, ptr %44, align 8, !tbaa !59
  %136 = ptrtoint ptr %134 to i64
  %137 = ptrtoint ptr %135 to i64
  %138 = sub i64 %136, %137
  %139 = ashr exact i64 %138, 2
  %140 = icmp ult i64 %139, %132
  br i1 %140, label %141, label %143

141:                                              ; preds = %112
  %142 = sub nsw i64 %132, %139
  invoke void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %44, i64 noundef %142)
          to label %149 unwind label %277

143:                                              ; preds = %112
  %144 = icmp ugt i64 %139, %132
  br i1 %144, label %145, label %149

145:                                              ; preds = %143
  %146 = getelementptr inbounds i32, ptr %135, i64 %132
  %147 = icmp eq ptr %134, %146
  br i1 %147, label %149, label %148

148:                                              ; preds = %145
  store ptr %146, ptr %133, align 8, !tbaa !58
  br label %149

149:                                              ; preds = %148, %145, %143, %141
  %150 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 1
  %151 = load ptr, ptr %150, align 8, !tbaa !58
  %152 = load ptr, ptr %38, align 8, !tbaa !59
  %153 = ptrtoint ptr %151 to i64
  %154 = ptrtoint ptr %152 to i64
  %155 = sub i64 %153, %154
  %156 = ashr exact i64 %155, 2
  %157 = icmp ult i64 %156, %132
  br i1 %157, label %158, label %160

158:                                              ; preds = %149
  %159 = sub nsw i64 %132, %156
  invoke void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %38, i64 noundef %159)
          to label %166 unwind label %277

160:                                              ; preds = %149
  %161 = icmp ugt i64 %156, %132
  br i1 %161, label %162, label %166

162:                                              ; preds = %160
  %163 = getelementptr inbounds i32, ptr %152, i64 %132
  %164 = icmp eq ptr %151, %163
  br i1 %164, label %166, label %165

165:                                              ; preds = %162
  store ptr %163, ptr %150, align 8, !tbaa !58
  br label %166

166:                                              ; preds = %165, %162, %160, %158
  %167 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1
  %168 = load ptr, ptr %167, align 8, !tbaa !58
  %169 = load ptr, ptr %40, align 8, !tbaa !59
  %170 = ptrtoint ptr %168 to i64
  %171 = ptrtoint ptr %169 to i64
  %172 = sub i64 %170, %171
  %173 = ashr exact i64 %172, 2
  %174 = icmp ult i64 %173, %132
  br i1 %174, label %175, label %177

175:                                              ; preds = %166
  %176 = sub nsw i64 %132, %173
  invoke void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %40, i64 noundef %176)
          to label %183 unwind label %277

177:                                              ; preds = %166
  %178 = icmp ugt i64 %173, %132
  br i1 %178, label %179, label %183

179:                                              ; preds = %177
  %180 = getelementptr inbounds i32, ptr %169, i64 %132
  %181 = icmp eq ptr %168, %180
  br i1 %181, label %183, label %182

182:                                              ; preds = %179
  store ptr %180, ptr %167, align 8, !tbaa !58
  br label %183

183:                                              ; preds = %182, %179, %177, %175
  %184 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1
  %185 = load ptr, ptr %184, align 8, !tbaa !58
  %186 = load ptr, ptr %39, align 8, !tbaa !59
  %187 = ptrtoint ptr %185 to i64
  %188 = ptrtoint ptr %186 to i64
  %189 = sub i64 %187, %188
  %190 = ashr exact i64 %189, 2
  %191 = icmp ult i64 %190, %132
  br i1 %191, label %192, label %194

192:                                              ; preds = %183
  %193 = sub nsw i64 %132, %190
  invoke void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %39, i64 noundef %193)
          to label %200 unwind label %277

194:                                              ; preds = %183
  %195 = icmp ugt i64 %190, %132
  br i1 %195, label %196, label %200

196:                                              ; preds = %194
  %197 = getelementptr inbounds i32, ptr %186, i64 %132
  %198 = icmp eq ptr %185, %197
  br i1 %198, label %200, label %199

199:                                              ; preds = %196
  store ptr %197, ptr %184, align 8, !tbaa !58
  br label %200

200:                                              ; preds = %199, %196, %194, %192
  %201 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1
  %202 = load ptr, ptr %201, align 8, !tbaa !58
  %203 = load ptr, ptr %41, align 8, !tbaa !59
  %204 = ptrtoint ptr %202 to i64
  %205 = ptrtoint ptr %203 to i64
  %206 = sub i64 %204, %205
  %207 = ashr exact i64 %206, 2
  %208 = icmp ult i64 %207, %132
  br i1 %208, label %209, label %211

209:                                              ; preds = %200
  %210 = sub nsw i64 %132, %207
  invoke void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %41, i64 noundef %210)
          to label %217 unwind label %277

211:                                              ; preds = %200
  %212 = icmp ugt i64 %207, %132
  br i1 %212, label %213, label %217

213:                                              ; preds = %211
  %214 = getelementptr inbounds i32, ptr %203, i64 %132
  %215 = icmp eq ptr %202, %214
  br i1 %215, label %217, label %216

216:                                              ; preds = %213
  store ptr %214, ptr %201, align 8, !tbaa !58
  br label %217

217:                                              ; preds = %216, %213, %211, %209
  %218 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1
  %219 = load ptr, ptr %218, align 8, !tbaa !64
  %220 = load ptr, ptr %45, align 8, !tbaa !44
  %221 = ptrtoint ptr %219 to i64
  %222 = ptrtoint ptr %220 to i64
  %223 = sub i64 %221, %222
  %224 = ashr exact i64 %223, 3
  %225 = icmp ult i64 %224, %132
  br i1 %225, label %226, label %228

226:                                              ; preds = %217
  %227 = sub nsw i64 %132, %224
  invoke void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %45, i64 noundef %227)
          to label %234 unwind label %277

228:                                              ; preds = %217
  %229 = icmp ugt i64 %224, %132
  br i1 %229, label %230, label %234

230:                                              ; preds = %228
  %231 = getelementptr inbounds double, ptr %220, i64 %132
  %232 = icmp eq ptr %219, %231
  br i1 %232, label %234, label %233

233:                                              ; preds = %230
  store ptr %231, ptr %218, align 8, !tbaa !64
  br label %234

234:                                              ; preds = %233, %230, %228, %226
  %235 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1
  %236 = load ptr, ptr %235, align 8, !tbaa !64
  %237 = load ptr, ptr %46, align 8, !tbaa !44
  %238 = ptrtoint ptr %236 to i64
  %239 = ptrtoint ptr %237 to i64
  %240 = sub i64 %238, %239
  %241 = ashr exact i64 %240, 3
  %242 = icmp ult i64 %241, %132
  br i1 %242, label %243, label %247

243:                                              ; preds = %234
  %244 = sub nsw i64 %132, %241
  invoke void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %46, i64 noundef %244)
          to label %245 unwind label %277

245:                                              ; preds = %243
  %246 = load ptr, ptr %46, align 8, !tbaa !44
  br label %253

247:                                              ; preds = %234
  %248 = icmp ugt i64 %241, %132
  br i1 %248, label %249, label %253

249:                                              ; preds = %247
  %250 = getelementptr inbounds double, ptr %237, i64 %132
  %251 = icmp eq ptr %236, %250
  br i1 %251, label %253, label %252

252:                                              ; preds = %249
  store ptr %250, ptr %235, align 8, !tbaa !64
  br label %253

253:                                              ; preds = %245, %252, %249, %247
  %254 = phi ptr [ %246, %245 ], [ %237, %252 ], [ %237, %249 ], [ %237, %247 ]
  %255 = load i32, ptr %102, align 4, !tbaa !100
  %256 = add nsw i32 %255, 1
  %257 = load ptr, ptr %38, align 8, !tbaa !59
  store i32 %256, ptr %257, align 4, !tbaa !67
  %258 = load i32, ptr %105, align 8, !tbaa !102
  %259 = add nsw i32 %258, -1
  %260 = load ptr, ptr %39, align 8, !tbaa !59
  store i32 %259, ptr %260, align 4, !tbaa !67
  %261 = load i32, ptr %103, align 4, !tbaa !101
  %262 = add nsw i32 %261, 1
  %263 = load ptr, ptr %40, align 8, !tbaa !59
  store i32 %262, ptr %263, align 4, !tbaa !67
  %264 = load i32, ptr %107, align 8, !tbaa !103
  %265 = add nsw i32 %264, -1
  %266 = load ptr, ptr %41, align 8, !tbaa !59
  store i32 %265, ptr %266, align 4, !tbaa !67
  %267 = load double, ptr %99, align 8, !tbaa !98
  %268 = load ptr, ptr %45, align 8, !tbaa !44
  store double %267, ptr %268, align 8, !tbaa !45
  %269 = load double, ptr %100, align 8, !tbaa !99
  store double %269, ptr %254, align 8, !tbaa !45
  %270 = load i32, ptr %88, align 8, !tbaa !91
  %271 = icmp slt i32 %270, 1
  br i1 %271, label %272, label %279

272:                                              ; preds = %279, %253
  %273 = phi i32 [ %270, %253 ], [ %309, %279 ]
  %274 = icmp eq i32 %131, 0
  br i1 %274, label %314, label %275

275:                                              ; preds = %272
  %276 = load ptr, ptr %44, align 8, !tbaa !59
  br label %329

277:                                              ; preds = %243, %226, %209, %192, %175, %158, %141
  %278 = landingpad { ptr, i32 }
          cleanup
  br label %463

279:                                              ; preds = %253, %279
  %280 = phi i64 [ %308, %279 ], [ 1, %253 ]
  %281 = add nsw i64 %280, -1
  %282 = getelementptr inbounds i32, ptr %257, i64 %281
  %283 = load i32, ptr %282, align 4, !tbaa !67
  %284 = shl nsw i32 %283, 1
  %285 = getelementptr inbounds i32, ptr %257, i64 %280
  store i32 %284, ptr %285, align 4, !tbaa !67
  %286 = getelementptr inbounds i32, ptr %260, i64 %281
  %287 = load i32, ptr %286, align 4, !tbaa !67
  %288 = shl nsw i32 %287, 1
  %289 = or i32 %288, 1
  %290 = getelementptr inbounds i32, ptr %260, i64 %280
  store i32 %289, ptr %290, align 4, !tbaa !67
  %291 = getelementptr inbounds i32, ptr %263, i64 %281
  %292 = load i32, ptr %291, align 4, !tbaa !67
  %293 = shl nsw i32 %292, 1
  %294 = getelementptr inbounds i32, ptr %263, i64 %280
  store i32 %293, ptr %294, align 4, !tbaa !67
  %295 = getelementptr inbounds i32, ptr %266, i64 %281
  %296 = load i32, ptr %295, align 4, !tbaa !67
  %297 = shl nsw i32 %296, 1
  %298 = or i32 %297, 1
  %299 = getelementptr inbounds i32, ptr %266, i64 %280
  store i32 %298, ptr %299, align 4, !tbaa !67
  %300 = getelementptr inbounds double, ptr %268, i64 %281
  %301 = load double, ptr %300, align 8, !tbaa !45
  %302 = fmul double %301, 5.000000e-01
  %303 = getelementptr inbounds double, ptr %268, i64 %280
  store double %302, ptr %303, align 8, !tbaa !45
  %304 = getelementptr inbounds double, ptr %254, i64 %281
  %305 = load double, ptr %304, align 8, !tbaa !45
  %306 = fmul double %305, 5.000000e-01
  %307 = getelementptr inbounds double, ptr %254, i64 %280
  store double %306, ptr %307, align 8, !tbaa !45
  %308 = add nuw nsw i64 %280, 1
  %309 = load i32, ptr %88, align 8, !tbaa !91
  %310 = sext i32 %309 to i64
  %311 = icmp slt i64 %280, %310
  br i1 %311, label %279, label %272, !llvm.loop !104

312:                                              ; preds = %329
  %313 = load i32, ptr %88, align 8, !tbaa !91
  br label %314

314:                                              ; preds = %312, %272
  %315 = phi i32 [ %313, %312 ], [ %273, %272 ]
  %316 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 38
  store i32 0, ptr %316, align 8, !tbaa !55
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11) #31
  store i32 0, ptr %11, align 16, !tbaa !67
  %317 = getelementptr inbounds i32, ptr %11, i64 1
  store i32 0, ptr %317, align 4, !tbaa !67
  %318 = getelementptr inbounds i32, ptr %11, i64 2
  %319 = load i32, ptr %105, align 8, !tbaa !102
  store i32 %319, ptr %318, align 8, !tbaa !67
  %320 = getelementptr inbounds i32, ptr %11, i64 3
  store i32 %319, ptr %320, align 4, !tbaa !67
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12) #31
  store i32 0, ptr %12, align 16, !tbaa !67
  %321 = getelementptr inbounds i32, ptr %12, i64 1
  %322 = load i32, ptr %107, align 8, !tbaa !103
  store i32 %322, ptr %321, align 4, !tbaa !67
  %323 = getelementptr inbounds i32, ptr %12, i64 2
  store i32 0, ptr %323, align 8, !tbaa !67
  %324 = getelementptr inbounds i32, ptr %12, i64 3
  store i32 %322, ptr %324, align 4, !tbaa !67
  %325 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %326 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2
  %327 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1
  %328 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 2
  br label %341

329:                                              ; preds = %275, %329
  %330 = phi i64 [ 0, %275 ], [ %335, %329 ]
  %331 = trunc i64 %330 to i32
  %332 = shl i32 2, %331
  %333 = getelementptr inbounds i32, ptr %276, i64 %330
  store i32 %332, ptr %333, align 4, !tbaa !67
  %334 = add nuw nsw i64 %330, 1
  %335 = and i64 %334, 4294967295
  %336 = icmp ult i64 %335, %132
  br i1 %336, label %329, label %312, !llvm.loop !105

337:                                              ; preds = %356
  %338 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 7
  store i8 1, ptr %338, align 8, !tbaa !106
  %339 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 8
  store i8 1, ptr %339, align 1, !tbaa !107
  %340 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %340, i8 0, i64 40, i1 false)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #31
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #31
  ret void

341:                                              ; preds = %314, %356
  %342 = phi i32 [ %315, %314 ], [ %357, %356 ]
  %343 = phi i32 [ %315, %314 ], [ %358, %356 ]
  %344 = phi i64 [ 0, %314 ], [ %359, %356 ]
  %345 = getelementptr inbounds [4 x i32], ptr %12, i64 0, i64 %344
  %346 = load i32, ptr %345, align 4, !tbaa !67
  %347 = shl i32 2, %343
  %348 = mul nsw i32 %347, %346
  %349 = add nsw i32 %346, 1
  %350 = mul nsw i32 %347, %349
  %351 = icmp slt i32 %348, %350
  br i1 %351, label %352, label %356

352:                                              ; preds = %341
  %353 = getelementptr inbounds [4 x i32], ptr %11, i64 0, i64 %344
  %354 = load i32, ptr %353, align 4, !tbaa !67
  %355 = add nsw i32 %354, 1
  br label %361

356:                                              ; preds = %372, %341
  %357 = phi i32 [ %342, %341 ], [ %374, %372 ]
  %358 = phi i32 [ %343, %341 ], [ %374, %372 ]
  %359 = add nuw nsw i64 %344, 1
  %360 = icmp eq i64 %359, 4
  br i1 %360, label %337, label %341, !llvm.loop !108

361:                                              ; preds = %352, %372
  %362 = phi i32 [ %342, %352 ], [ %374, %372 ]
  %363 = phi i32 [ %343, %352 ], [ %374, %372 ]
  %364 = phi i32 [ %347, %352 ], [ %373, %372 ]
  %365 = phi i32 [ %348, %352 ], [ %375, %372 ]
  %366 = mul nsw i32 %354, %364
  %367 = shl i32 2, %363
  %368 = mul nsw i32 %367, %355
  %369 = icmp slt i32 %366, %368
  br i1 %369, label %378, label %370

370:                                              ; preds = %361
  %371 = shl i32 2, %362
  br label %372

372:                                              ; preds = %451, %370
  %373 = phi i32 [ %371, %370 ], [ %454, %451 ]
  %374 = phi i32 [ %362, %370 ], [ %453, %451 ]
  %375 = add nsw i32 %365, 1
  %376 = mul nsw i32 %373, %349
  %377 = icmp slt i32 %375, %376
  br i1 %377, label %361, label %356, !llvm.loop !109

378:                                              ; preds = %361, %451
  %379 = phi i32 [ %452, %451 ], [ %366, %361 ]
  %380 = load ptr, ptr %325, align 8, !tbaa !58
  %381 = load ptr, ptr %326, align 8, !tbaa !110
  %382 = icmp eq ptr %380, %381
  br i1 %382, label %385, label %383

383:                                              ; preds = %378
  store i32 %379, ptr %380, align 4, !tbaa !67
  %384 = getelementptr inbounds i32, ptr %380, i64 1
  store ptr %384, ptr %325, align 8, !tbaa !58
  br label %416

385:                                              ; preds = %378
  %386 = load ptr, ptr %33, align 8, !tbaa !59
  %387 = ptrtoint ptr %380 to i64
  %388 = ptrtoint ptr %386 to i64
  %389 = sub i64 %387, %388
  %390 = icmp eq i64 %389, 9223372036854775804
  br i1 %390, label %391, label %393

391:                                              ; preds = %422, %385
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
          to label %392 unwind label %459

392:                                              ; preds = %391
  unreachable

393:                                              ; preds = %385
  %394 = ashr exact i64 %389, 2
  %395 = tail call i64 @llvm.umax.i64(i64 %394, i64 1)
  %396 = add i64 %395, %394
  %397 = icmp ult i64 %396, %394
  %398 = icmp ugt i64 %396, 2305843009213693951
  %399 = or i1 %397, %398
  %400 = select i1 %399, i64 2305843009213693951, i64 %396
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %405, label %402

402:                                              ; preds = %393
  %403 = shl nuw nsw i64 %400, 2
  %404 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %403) #35
          to label %405 unwind label %457

405:                                              ; preds = %402, %393
  %406 = phi ptr [ null, %393 ], [ %404, %402 ]
  %407 = getelementptr inbounds i32, ptr %406, i64 %394
  store i32 %379, ptr %407, align 4, !tbaa !67
  %408 = icmp sgt i64 %389, 0
  br i1 %408, label %409, label %410

409:                                              ; preds = %405
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %406, ptr align 4 %386, i64 %389, i1 false)
  br label %410

410:                                              ; preds = %409, %405
  %411 = getelementptr inbounds i32, ptr %407, i64 1
  %412 = icmp eq ptr %386, null
  br i1 %412, label %414, label %413

413:                                              ; preds = %410
  tail call void @_ZdlPv(ptr noundef nonnull %386) #33
  br label %414

414:                                              ; preds = %413, %410
  store ptr %406, ptr %33, align 8, !tbaa !59
  store ptr %411, ptr %325, align 8, !tbaa !58
  %415 = getelementptr inbounds i32, ptr %406, i64 %400
  store ptr %415, ptr %326, align 8, !tbaa !110
  br label %416

416:                                              ; preds = %414, %383
  %417 = load ptr, ptr %327, align 8, !tbaa !58
  %418 = load ptr, ptr %328, align 8, !tbaa !110
  %419 = icmp eq ptr %417, %418
  br i1 %419, label %422, label %420

420:                                              ; preds = %416
  store i32 %365, ptr %417, align 4, !tbaa !67
  %421 = getelementptr inbounds i32, ptr %417, i64 1
  store ptr %421, ptr %327, align 8, !tbaa !58
  br label %451

422:                                              ; preds = %416
  %423 = load ptr, ptr %34, align 8, !tbaa !59
  %424 = ptrtoint ptr %417 to i64
  %425 = ptrtoint ptr %423 to i64
  %426 = sub i64 %424, %425
  %427 = icmp eq i64 %426, 9223372036854775804
  br i1 %427, label %391, label %428

428:                                              ; preds = %422
  %429 = ashr exact i64 %426, 2
  %430 = tail call i64 @llvm.umax.i64(i64 %429, i64 1)
  %431 = add i64 %430, %429
  %432 = icmp ult i64 %431, %429
  %433 = icmp ugt i64 %431, 2305843009213693951
  %434 = or i1 %432, %433
  %435 = select i1 %434, i64 2305843009213693951, i64 %431
  %436 = icmp eq i64 %435, 0
  br i1 %436, label %440, label %437

437:                                              ; preds = %428
  %438 = shl nuw nsw i64 %435, 2
  %439 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %438) #35
          to label %440 unwind label %457

440:                                              ; preds = %437, %428
  %441 = phi ptr [ null, %428 ], [ %439, %437 ]
  %442 = getelementptr inbounds i32, ptr %441, i64 %429
  store i32 %365, ptr %442, align 4, !tbaa !67
  %443 = icmp sgt i64 %426, 0
  br i1 %443, label %444, label %445

444:                                              ; preds = %440
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %441, ptr align 4 %423, i64 %426, i1 false)
  br label %445

445:                                              ; preds = %444, %440
  %446 = getelementptr inbounds i32, ptr %442, i64 1
  %447 = icmp eq ptr %423, null
  br i1 %447, label %449, label %448

448:                                              ; preds = %445
  tail call void @_ZdlPv(ptr noundef nonnull %423) #33
  br label %449

449:                                              ; preds = %448, %445
  store ptr %441, ptr %34, align 8, !tbaa !59
  store ptr %446, ptr %327, align 8, !tbaa !58
  %450 = getelementptr inbounds i32, ptr %441, i64 %435
  store ptr %450, ptr %328, align 8, !tbaa !110
  br label %451

451:                                              ; preds = %449, %420
  %452 = add nsw i32 %379, 1
  %453 = load i32, ptr %88, align 8, !tbaa !91
  %454 = shl i32 2, %453
  %455 = mul nsw i32 %454, %355
  %456 = icmp slt i32 %452, %455
  br i1 %456, label %378, label %372, !llvm.loop !111

457:                                              ; preds = %402, %437
  %458 = landingpad { ptr, i32 }
          cleanup
  br label %461

459:                                              ; preds = %391
  %460 = landingpad { ptr, i32 }
          cleanup
  br label %461

461:                                              ; preds = %459, %457
  %462 = phi { ptr, i32 } [ %458, %457 ], [ %460, %459 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #31
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #31
  br label %463

463:                                              ; preds = %461, %277
  %464 = phi { ptr, i32 } [ %462, %461 ], [ %278, %277 ]
  %465 = load ptr, ptr %84, align 8, !tbaa !59
  %466 = icmp eq ptr %465, null
  br i1 %466, label %468, label %467

467:                                              ; preds = %463
  tail call void @_ZdlPv(ptr noundef nonnull %465) #33
  br label %468

468:                                              ; preds = %463, %467
  %469 = load ptr, ptr %83, align 8, !tbaa !59
  %470 = icmp eq ptr %469, null
  br i1 %470, label %472, label %471

471:                                              ; preds = %468
  tail call void @_ZdlPv(ptr noundef nonnull %469) #33
  br label %472

472:                                              ; preds = %468, %471
  %473 = load ptr, ptr %82, align 8, !tbaa !59
  %474 = icmp eq ptr %473, null
  br i1 %474, label %476, label %475

475:                                              ; preds = %472
  tail call void @_ZdlPv(ptr noundef nonnull %473) #33
  br label %476

476:                                              ; preds = %472, %475
  %477 = load ptr, ptr %81, align 8, !tbaa !59
  %478 = icmp eq ptr %477, null
  br i1 %478, label %480, label %479

479:                                              ; preds = %476
  tail call void @_ZdlPv(ptr noundef nonnull %477) #33
  br label %480

480:                                              ; preds = %476, %479
  %481 = load ptr, ptr %80, align 8, !tbaa !59
  %482 = icmp eq ptr %481, null
  br i1 %482, label %484, label %483

483:                                              ; preds = %480
  tail call void @_ZdlPv(ptr noundef nonnull %481) #33
  br label %484

484:                                              ; preds = %480, %483
  %485 = load ptr, ptr %79, align 8, !tbaa !59
  %486 = icmp eq ptr %485, null
  br i1 %486, label %488, label %487

487:                                              ; preds = %484
  tail call void @_ZdlPv(ptr noundef nonnull %485) #33
  br label %488

488:                                              ; preds = %484, %487
  %489 = load ptr, ptr %78, align 8, !tbaa !59
  %490 = icmp eq ptr %489, null
  br i1 %490, label %492, label %491

491:                                              ; preds = %488
  tail call void @_ZdlPv(ptr noundef nonnull %489) #33
  br label %492

492:                                              ; preds = %488, %491
  %493 = load ptr, ptr %77, align 8, !tbaa !59
  %494 = icmp eq ptr %493, null
  br i1 %494, label %496, label %495

495:                                              ; preds = %492
  tail call void @_ZdlPv(ptr noundef nonnull %493) #33
  br label %496

496:                                              ; preds = %492, %495
  %497 = load ptr, ptr %76, align 8, !tbaa !59
  %498 = icmp eq ptr %497, null
  br i1 %498, label %500, label %499

499:                                              ; preds = %496
  tail call void @_ZdlPv(ptr noundef nonnull %497) #33
  br label %500

500:                                              ; preds = %496, %499
  %501 = load ptr, ptr %75, align 8, !tbaa !59
  %502 = icmp eq ptr %501, null
  br i1 %502, label %504, label %503

503:                                              ; preds = %500
  tail call void @_ZdlPv(ptr noundef nonnull %501) #33
  br label %504

504:                                              ; preds = %500, %503
  %505 = load ptr, ptr %74, align 8, !tbaa !59
  %506 = icmp eq ptr %505, null
  br i1 %506, label %508, label %507

507:                                              ; preds = %504
  tail call void @_ZdlPv(ptr noundef nonnull %505) #33
  br label %508

508:                                              ; preds = %504, %507
  %509 = load ptr, ptr %73, align 8, !tbaa !59
  %510 = icmp eq ptr %509, null
  br i1 %510, label %512, label %511

511:                                              ; preds = %508
  tail call void @_ZdlPv(ptr noundef nonnull %509) #33
  br label %512

512:                                              ; preds = %508, %511
  %513 = load ptr, ptr %72, align 8, !tbaa !59
  %514 = icmp eq ptr %513, null
  br i1 %514, label %516, label %515

515:                                              ; preds = %512
  tail call void @_ZdlPv(ptr noundef nonnull %513) #33
  br label %516

516:                                              ; preds = %512, %515
  %517 = load ptr, ptr %71, align 8, !tbaa !59
  %518 = icmp eq ptr %517, null
  br i1 %518, label %520, label %519

519:                                              ; preds = %516
  tail call void @_ZdlPv(ptr noundef nonnull %517) #33
  br label %520

520:                                              ; preds = %516, %519
  %521 = load ptr, ptr %70, align 8, !tbaa !59
  %522 = icmp eq ptr %521, null
  br i1 %522, label %524, label %523

523:                                              ; preds = %520
  tail call void @_ZdlPv(ptr noundef nonnull %521) #33
  br label %524

524:                                              ; preds = %520, %523
  %525 = load ptr, ptr %69, align 8, !tbaa !59
  %526 = icmp eq ptr %525, null
  br i1 %526, label %528, label %527

527:                                              ; preds = %524
  tail call void @_ZdlPv(ptr noundef nonnull %525) #33
  br label %528

528:                                              ; preds = %524, %527
  %529 = load ptr, ptr %68, align 8, !tbaa !59
  %530 = icmp eq ptr %529, null
  br i1 %530, label %532, label %531

531:                                              ; preds = %528
  tail call void @_ZdlPv(ptr noundef nonnull %529) #33
  br label %532

532:                                              ; preds = %528, %531
  %533 = load ptr, ptr %67, align 8, !tbaa !59
  %534 = icmp eq ptr %533, null
  br i1 %534, label %536, label %535

535:                                              ; preds = %532
  tail call void @_ZdlPv(ptr noundef nonnull %533) #33
  br label %536

536:                                              ; preds = %532, %535
  %537 = load ptr, ptr %66, align 8, !tbaa !59
  %538 = icmp eq ptr %537, null
  br i1 %538, label %540, label %539

539:                                              ; preds = %536
  tail call void @_ZdlPv(ptr noundef nonnull %537) #33
  br label %540

540:                                              ; preds = %536, %539
  %541 = load ptr, ptr %65, align 8, !tbaa !59
  %542 = icmp eq ptr %541, null
  br i1 %542, label %544, label %543

543:                                              ; preds = %540
  tail call void @_ZdlPv(ptr noundef nonnull %541) #33
  br label %544

544:                                              ; preds = %540, %543
  %545 = load ptr, ptr %64, align 8, !tbaa !59
  %546 = icmp eq ptr %545, null
  br i1 %546, label %548, label %547

547:                                              ; preds = %544
  tail call void @_ZdlPv(ptr noundef nonnull %545) #33
  br label %548

548:                                              ; preds = %544, %547
  %549 = load ptr, ptr %63, align 8, !tbaa !59
  %550 = icmp eq ptr %549, null
  br i1 %550, label %552, label %551

551:                                              ; preds = %548
  tail call void @_ZdlPv(ptr noundef nonnull %549) #33
  br label %552

552:                                              ; preds = %548, %551
  %553 = load ptr, ptr %62, align 8, !tbaa !59
  %554 = icmp eq ptr %553, null
  br i1 %554, label %556, label %555

555:                                              ; preds = %552
  tail call void @_ZdlPv(ptr noundef nonnull %553) #33
  br label %556

556:                                              ; preds = %552, %555
  %557 = load ptr, ptr %61, align 8, !tbaa !59
  %558 = icmp eq ptr %557, null
  br i1 %558, label %560, label %559

559:                                              ; preds = %556
  tail call void @_ZdlPv(ptr noundef nonnull %557) #33
  br label %560

560:                                              ; preds = %556, %559
  %561 = load ptr, ptr %60, align 8, !tbaa !59
  %562 = icmp eq ptr %561, null
  br i1 %562, label %564, label %563

563:                                              ; preds = %560
  tail call void @_ZdlPv(ptr noundef nonnull %561) #33
  br label %564

564:                                              ; preds = %560, %563
  %565 = load ptr, ptr %59, align 8, !tbaa !59
  %566 = icmp eq ptr %565, null
  br i1 %566, label %568, label %567

567:                                              ; preds = %564
  tail call void @_ZdlPv(ptr noundef nonnull %565) #33
  br label %568

568:                                              ; preds = %564, %567
  %569 = load ptr, ptr %58, align 8, !tbaa !59
  %570 = icmp eq ptr %569, null
  br i1 %570, label %572, label %571

571:                                              ; preds = %568
  tail call void @_ZdlPv(ptr noundef nonnull %569) #33
  br label %572

572:                                              ; preds = %568, %571
  %573 = load ptr, ptr %57, align 8, !tbaa !59
  %574 = icmp eq ptr %573, null
  br i1 %574, label %576, label %575

575:                                              ; preds = %572
  tail call void @_ZdlPv(ptr noundef nonnull %573) #33
  br label %576

576:                                              ; preds = %572, %575
  %577 = load ptr, ptr %56, align 8, !tbaa !59
  %578 = icmp eq ptr %577, null
  br i1 %578, label %580, label %579

579:                                              ; preds = %576
  tail call void @_ZdlPv(ptr noundef nonnull %577) #33
  br label %580

580:                                              ; preds = %576, %579
  %581 = load ptr, ptr %55, align 8, !tbaa !59
  %582 = icmp eq ptr %581, null
  br i1 %582, label %584, label %583

583:                                              ; preds = %580
  tail call void @_ZdlPv(ptr noundef nonnull %581) #33
  br label %584

584:                                              ; preds = %580, %583
  %585 = load ptr, ptr %54, align 8, !tbaa !44
  %586 = icmp eq ptr %585, null
  br i1 %586, label %588, label %587

587:                                              ; preds = %584
  tail call void @_ZdlPv(ptr noundef nonnull %585) #33
  br label %588

588:                                              ; preds = %584, %587
  %589 = load ptr, ptr %53, align 8, !tbaa !44
  %590 = icmp eq ptr %589, null
  br i1 %590, label %592, label %591

591:                                              ; preds = %588
  tail call void @_ZdlPv(ptr noundef nonnull %589) #33
  br label %592

592:                                              ; preds = %588, %591
  %593 = load ptr, ptr %52, align 8, !tbaa !44
  %594 = icmp eq ptr %593, null
  br i1 %594, label %596, label %595

595:                                              ; preds = %592
  tail call void @_ZdlPv(ptr noundef nonnull %593) #33
  br label %596

596:                                              ; preds = %592, %595
  %597 = load ptr, ptr %51, align 8, !tbaa !44
  %598 = icmp eq ptr %597, null
  br i1 %598, label %600, label %599

599:                                              ; preds = %596
  tail call void @_ZdlPv(ptr noundef nonnull %597) #33
  br label %600

600:                                              ; preds = %596, %599
  %601 = load ptr, ptr %50, align 8, !tbaa !44
  %602 = icmp eq ptr %601, null
  br i1 %602, label %604, label %603

603:                                              ; preds = %600
  tail call void @_ZdlPv(ptr noundef nonnull %601) #33
  br label %604

604:                                              ; preds = %600, %603
  %605 = load ptr, ptr %49, align 8, !tbaa !44
  %606 = icmp eq ptr %605, null
  br i1 %606, label %608, label %607

607:                                              ; preds = %604
  tail call void @_ZdlPv(ptr noundef nonnull %605) #33
  br label %608

608:                                              ; preds = %604, %607
  %609 = load ptr, ptr %48, align 8, !tbaa !59
  %610 = icmp eq ptr %609, null
  br i1 %610, label %612, label %611

611:                                              ; preds = %608
  tail call void @_ZdlPv(ptr noundef nonnull %609) #33
  br label %612

612:                                              ; preds = %608, %611
  %613 = load ptr, ptr %47, align 8, !tbaa !44
  %614 = icmp eq ptr %613, null
  br i1 %614, label %616, label %615

615:                                              ; preds = %612
  tail call void @_ZdlPv(ptr noundef nonnull %613) #33
  br label %616

616:                                              ; preds = %612, %615
  %617 = load ptr, ptr %46, align 8, !tbaa !44
  %618 = icmp eq ptr %617, null
  br i1 %618, label %620, label %619

619:                                              ; preds = %616
  tail call void @_ZdlPv(ptr noundef nonnull %617) #33
  br label %620

620:                                              ; preds = %616, %619
  %621 = load ptr, ptr %45, align 8, !tbaa !44
  %622 = icmp eq ptr %621, null
  br i1 %622, label %624, label %623

623:                                              ; preds = %620
  tail call void @_ZdlPv(ptr noundef nonnull %621) #33
  br label %624

624:                                              ; preds = %620, %623
  %625 = load ptr, ptr %44, align 8, !tbaa !59
  %626 = icmp eq ptr %625, null
  br i1 %626, label %628, label %627

627:                                              ; preds = %624
  tail call void @_ZdlPv(ptr noundef nonnull %625) #33
  br label %628

628:                                              ; preds = %624, %627
  %629 = load ptr, ptr %43, align 8, !tbaa !59
  %630 = icmp eq ptr %629, null
  br i1 %630, label %632, label %631

631:                                              ; preds = %628
  tail call void @_ZdlPv(ptr noundef nonnull %629) #33
  br label %632

632:                                              ; preds = %628, %631
  %633 = load ptr, ptr %42, align 8, !tbaa !59
  %634 = icmp eq ptr %633, null
  br i1 %634, label %636, label %635

635:                                              ; preds = %632
  tail call void @_ZdlPv(ptr noundef nonnull %633) #33
  br label %636

636:                                              ; preds = %632, %635
  %637 = load ptr, ptr %41, align 8, !tbaa !59
  %638 = icmp eq ptr %637, null
  br i1 %638, label %640, label %639

639:                                              ; preds = %636
  tail call void @_ZdlPv(ptr noundef nonnull %637) #33
  br label %640

640:                                              ; preds = %636, %639
  %641 = load ptr, ptr %40, align 8, !tbaa !59
  %642 = icmp eq ptr %641, null
  br i1 %642, label %644, label %643

643:                                              ; preds = %640
  tail call void @_ZdlPv(ptr noundef nonnull %641) #33
  br label %644

644:                                              ; preds = %640, %643
  %645 = load ptr, ptr %39, align 8, !tbaa !59
  %646 = icmp eq ptr %645, null
  br i1 %646, label %648, label %647

647:                                              ; preds = %644
  tail call void @_ZdlPv(ptr noundef nonnull %645) #33
  br label %648

648:                                              ; preds = %644, %647
  %649 = load ptr, ptr %38, align 8, !tbaa !59
  %650 = icmp eq ptr %649, null
  br i1 %650, label %652, label %651

651:                                              ; preds = %648
  tail call void @_ZdlPv(ptr noundef nonnull %649) #33
  br label %652

652:                                              ; preds = %648, %651
  %653 = load ptr, ptr %37, align 8, !tbaa !59
  %654 = icmp eq ptr %653, null
  br i1 %654, label %656, label %655

655:                                              ; preds = %652
  tail call void @_ZdlPv(ptr noundef nonnull %653) #33
  br label %656

656:                                              ; preds = %652, %655
  %657 = load ptr, ptr %36, align 8, !tbaa !59
  %658 = icmp eq ptr %657, null
  br i1 %658, label %660, label %659

659:                                              ; preds = %656
  tail call void @_ZdlPv(ptr noundef nonnull %657) #33
  br label %660

660:                                              ; preds = %656, %659
  %661 = load ptr, ptr %35, align 8, !tbaa !59
  %662 = icmp eq ptr %661, null
  br i1 %662, label %664, label %663

663:                                              ; preds = %660
  tail call void @_ZdlPv(ptr noundef nonnull %661) #33
  br label %664

664:                                              ; preds = %660, %663
  %665 = load ptr, ptr %34, align 8, !tbaa !59
  %666 = icmp eq ptr %665, null
  br i1 %666, label %668, label %667

667:                                              ; preds = %664
  tail call void @_ZdlPv(ptr noundef nonnull %665) #33
  br label %668

668:                                              ; preds = %664, %667
  %669 = load ptr, ptr %33, align 8, !tbaa !59
  %670 = icmp eq ptr %669, null
  br i1 %670, label %672, label %671

671:                                              ; preds = %668
  tail call void @_ZdlPv(ptr noundef nonnull %669) #33
  br label %672

672:                                              ; preds = %668, %671
  %673 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1
  %674 = load ptr, ptr %29, align 8, !tbaa !51
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %673, ptr noundef %674)
          to label %678 unwind label %675

675:                                              ; preds = %672
  %676 = landingpad { ptr, i32 }
          catch ptr null
  %677 = extractvalue { ptr, i32 } %676, 0
  tail call void @__clang_call_terminate(ptr %677) #32
  unreachable

678:                                              ; preds = %672
  %679 = load ptr, ptr %24, align 8, !tbaa !51
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %87, ptr noundef %679)
          to label %683 unwind label %680

680:                                              ; preds = %678
  %681 = landingpad { ptr, i32 }
          catch ptr null
  %682 = extractvalue { ptr, i32 } %681, 0
  tail call void @__clang_call_terminate(ptr %682) #32
  unreachable

683:                                              ; preds = %678
  %684 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1
  %685 = load ptr, ptr %19, align 8, !tbaa !51
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %684, ptr noundef %685)
          to label %689 unwind label %686

686:                                              ; preds = %683
  %687 = landingpad { ptr, i32 }
          catch ptr null
  %688 = extractvalue { ptr, i32 } %687, 0
  tail call void @__clang_call_terminate(ptr %688) #32
  unreachable

689:                                              ; preds = %683
  %690 = load ptr, ptr %14, align 8, !tbaa !51
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %86, ptr noundef %690)
          to label %694 unwind label %691

691:                                              ; preds = %689
  %692 = landingpad { ptr, i32 }
          catch ptr null
  %693 = extractvalue { ptr, i32 } %692, 0
  tail call void @__clang_call_terminate(ptr %693) #32
  unreachable

694:                                              ; preds = %689
  resume { ptr, i32 } %464
}

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh4initEiid16partition_methodi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %1, i32 noundef %2, double noundef %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca %struct.TBounds, align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::vector", align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %class.MallocPlus, align 8
  %13 = alloca %"class.std::vector", align 8
  %14 = alloca [4 x i32], align 16
  %15 = alloca [4 x i32], align 16
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %17 = load i64, ptr %16, align 8, !tbaa !43
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %98, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 21
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 10
  %22 = load i32, ptr %21, align 8, !tbaa !94
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !58
  %26 = load ptr, ptr %20, align 8, !tbaa !59
  %27 = ptrtoint ptr %25 to i64
  %28 = ptrtoint ptr %26 to i64
  %29 = sub i64 %27, %28
  %30 = ashr exact i64 %29, 2
  %31 = icmp ult i64 %30, %23
  br i1 %31, label %32, label %36

32:                                               ; preds = %19
  %33 = sub nsw i64 %23, %30
  tail call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %20, i64 noundef %33)
  %34 = load i32, ptr %21, align 8, !tbaa !94
  %35 = sext i32 %34 to i64
  br label %42

36:                                               ; preds = %19
  %37 = icmp ugt i64 %30, %23
  br i1 %37, label %38, label %42

38:                                               ; preds = %36
  %39 = getelementptr inbounds i32, ptr %26, i64 %23
  %40 = icmp eq ptr %25, %39
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  store ptr %39, ptr %24, align 8, !tbaa !58
  br label %42

42:                                               ; preds = %32, %36, %38, %41
  %43 = phi i64 [ %35, %32 ], [ %23, %36 ], [ %23, %38 ], [ %23, %41 ]
  %44 = phi i32 [ %34, %32 ], [ %22, %36 ], [ %22, %38 ], [ %22, %41 ]
  %45 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 22
  %46 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1
  %47 = load ptr, ptr %46, align 8, !tbaa !58
  %48 = load ptr, ptr %45, align 8, !tbaa !59
  %49 = ptrtoint ptr %47 to i64
  %50 = ptrtoint ptr %48 to i64
  %51 = sub i64 %49, %50
  %52 = ashr exact i64 %51, 2
  %53 = icmp ugt i64 %43, %52
  br i1 %53, label %54, label %57

54:                                               ; preds = %42
  %55 = sub nsw i64 %43, %52
  tail call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %45, i64 noundef %55)
  %56 = load i32, ptr %21, align 8
  br label %63

57:                                               ; preds = %42
  %58 = icmp ult i64 %43, %52
  br i1 %58, label %59, label %63

59:                                               ; preds = %57
  %60 = getelementptr inbounds i32, ptr %48, i64 %43
  %61 = icmp eq ptr %47, %60
  br i1 %61, label %63, label %62

62:                                               ; preds = %59
  store ptr %60, ptr %46, align 8, !tbaa !58
  br label %63

63:                                               ; preds = %54, %57, %59, %62
  %64 = phi i32 [ %56, %54 ], [ %44, %57 ], [ %44, %59 ], [ %44, %62 ]
  %65 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 11
  %66 = load i32, ptr %65, align 4, !tbaa !95
  %67 = icmp ne i32 %66, 0
  %68 = icmp sgt i32 %64, 1
  %69 = select i1 %67, i1 %68, i1 false
  br i1 %69, label %94, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 13
  store i32 0, ptr %71, align 4, !tbaa !81
  %72 = load i64, ptr %16, align 8, !tbaa !43
  %73 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 46
  store i64 %72, ptr %73, align 8, !tbaa !112
  %74 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 25
  %75 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1
  %76 = load ptr, ptr %75, align 8, !tbaa !58
  %77 = load ptr, ptr %74, align 8, !tbaa !59
  %78 = ptrtoint ptr %76 to i64
  %79 = ptrtoint ptr %77 to i64
  %80 = sub i64 %78, %79
  %81 = ashr exact i64 %80, 2
  %82 = icmp ugt i64 %72, %81
  br i1 %82, label %83, label %86

83:                                               ; preds = %70
  %84 = sub i64 %72, %81
  tail call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %74, i64 noundef %84)
  %85 = load i32, ptr %21, align 8, !tbaa !94
  br label %92

86:                                               ; preds = %70
  %87 = icmp ult i64 %72, %81
  br i1 %87, label %88, label %92

88:                                               ; preds = %86
  %89 = getelementptr inbounds i32, ptr %77, i64 %72
  %90 = icmp eq ptr %76, %89
  br i1 %90, label %92, label %91

91:                                               ; preds = %88
  store ptr %89, ptr %75, align 8, !tbaa !58
  br label %92

92:                                               ; preds = %83, %86, %88, %91
  %93 = phi i32 [ %85, %83 ], [ %64, %86 ], [ %64, %88 ], [ %64, %91 ]
  tail call void @_ZN4Mesh17calc_distributionEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %93)
  br label %94

94:                                               ; preds = %63, %92
  %95 = load i64, ptr %16, align 8, !tbaa !43
  tail call void @_ZN4Mesh13calc_celltypeEm(ptr noundef nonnull align 8 dereferenceable(2288) %0, i64 noundef %95)
  %96 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %97 = load i32, ptr %96, align 8, !tbaa !91
  br label %543

98:                                               ; preds = %6
  %99 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 37
  %100 = load i32, ptr %99, align 4, !tbaa !68
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %107, label %102

102:                                              ; preds = %98
  %103 = add nsw i32 %1, 1
  %104 = add nsw i32 %2, 1
  %105 = add nsw i32 %1, 2
  %106 = add nsw i32 %2, 2
  br label %107

107:                                              ; preds = %102, %98
  %108 = phi i32 [ %104, %102 ], [ %2, %98 ]
  %109 = phi i32 [ %105, %102 ], [ %1, %98 ]
  %110 = phi i32 [ %106, %102 ], [ %2, %98 ]
  %111 = phi i32 [ %103, %102 ], [ %1, %98 ]
  %112 = phi i32 [ 0, %102 ], [ 1, %98 ]
  %113 = load i32, ptr %0, align 8, !tbaa !57
  %114 = icmp eq i32 %113, 2
  %115 = mul nsw i32 %110, %109
  %116 = shl nsw i32 %100, 2
  %117 = select i1 %114, i32 %116, i32 0
  %118 = sub nsw i32 %115, %117
  %119 = sext i32 %118 to i64
  store i64 %119, ptr %16, align 8, !tbaa !43
  %120 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 13
  store i32 0, ptr %120, align 4, !tbaa !81
  %121 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 11
  %122 = load i32, ptr %121, align 4, !tbaa !95
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %223, label %124

124:                                              ; preds = %107
  %125 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 46
  store i64 %119, ptr %125, align 8, !tbaa !112
  %126 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 21
  %127 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 10
  %128 = load i32, ptr %127, align 8, !tbaa !94
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1
  %131 = load ptr, ptr %130, align 8, !tbaa !58
  %132 = load ptr, ptr %126, align 8, !tbaa !59
  %133 = ptrtoint ptr %131 to i64
  %134 = ptrtoint ptr %132 to i64
  %135 = sub i64 %133, %134
  %136 = ashr exact i64 %135, 2
  %137 = icmp ult i64 %136, %129
  br i1 %137, label %138, label %142

138:                                              ; preds = %124
  %139 = sub nsw i64 %129, %136
  tail call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %126, i64 noundef %139)
  %140 = load i32, ptr %127, align 8, !tbaa !94
  %141 = sext i32 %140 to i64
  br label %148

142:                                              ; preds = %124
  %143 = icmp ugt i64 %136, %129
  br i1 %143, label %144, label %148

144:                                              ; preds = %142
  %145 = getelementptr inbounds i32, ptr %132, i64 %129
  %146 = icmp eq ptr %131, %145
  br i1 %146, label %148, label %147

147:                                              ; preds = %144
  store ptr %145, ptr %130, align 8, !tbaa !58
  br label %148

148:                                              ; preds = %138, %142, %144, %147
  %149 = phi i64 [ %141, %138 ], [ %129, %142 ], [ %129, %144 ], [ %129, %147 ]
  %150 = phi i32 [ %140, %138 ], [ %128, %142 ], [ %128, %144 ], [ %128, %147 ]
  %151 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 22
  %152 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1
  %153 = load ptr, ptr %152, align 8, !tbaa !58
  %154 = load ptr, ptr %151, align 8, !tbaa !59
  %155 = ptrtoint ptr %153 to i64
  %156 = ptrtoint ptr %154 to i64
  %157 = sub i64 %155, %156
  %158 = ashr exact i64 %157, 2
  %159 = icmp ugt i64 %149, %158
  br i1 %159, label %160, label %163

160:                                              ; preds = %148
  %161 = sub nsw i64 %149, %158
  tail call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %151, i64 noundef %161)
  %162 = load i32, ptr %127, align 8, !tbaa !94
  br label %169

163:                                              ; preds = %148
  %164 = icmp ult i64 %149, %158
  br i1 %164, label %165, label %169

165:                                              ; preds = %163
  %166 = getelementptr inbounds i32, ptr %154, i64 %149
  %167 = icmp eq ptr %153, %166
  br i1 %167, label %169, label %168

168:                                              ; preds = %165
  store ptr %166, ptr %152, align 8, !tbaa !58
  br label %169

169:                                              ; preds = %160, %163, %165, %168
  %170 = phi i32 [ %162, %160 ], [ %150, %163 ], [ %150, %165 ], [ %150, %168 ]
  %171 = icmp sgt i32 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %169
  %173 = load i64, ptr %125, align 8, !tbaa !112
  %174 = load ptr, ptr %126, align 8, !tbaa !59
  br label %180

175:                                              ; preds = %197, %169
  %176 = load ptr, ptr %151, align 8, !tbaa !59
  store i32 0, ptr %176, align 4, !tbaa !67
  %177 = load i32, ptr %127, align 8, !tbaa !94
  %178 = icmp sgt i32 %177, 1
  %179 = load ptr, ptr %126, align 8, !tbaa !59
  br i1 %178, label %211, label %202

180:                                              ; preds = %172, %197
  %181 = phi i64 [ 0, %172 ], [ %200, %197 ]
  %182 = phi i32 [ %170, %172 ], [ %199, %197 ]
  %183 = sext i32 %182 to i64
  %184 = udiv i64 %173, %183
  %185 = trunc i64 %184 to i32
  %186 = getelementptr inbounds i32, ptr %174, i64 %181
  store i32 %185, ptr %186, align 4, !tbaa !67
  %187 = load i32, ptr %127, align 8, !tbaa !94
  %188 = sext i32 %187 to i64
  %189 = urem i64 %173, %188
  %190 = shl i64 %189, 32
  %191 = ashr exact i64 %190, 32
  %192 = icmp slt i64 %181, %191
  br i1 %192, label %193, label %197

193:                                              ; preds = %180
  %194 = add nsw i32 %185, 1
  store i32 %194, ptr %186, align 4, !tbaa !67
  %195 = load i32, ptr %127, align 8, !tbaa !94
  %196 = sext i32 %195 to i64
  br label %197

197:                                              ; preds = %180, %193
  %198 = phi i64 [ %188, %180 ], [ %196, %193 ]
  %199 = phi i32 [ %187, %180 ], [ %195, %193 ]
  %200 = add nuw nsw i64 %181, 1
  %201 = icmp slt i64 %200, %198
  br i1 %201, label %180, label %175, !llvm.loop !113

202:                                              ; preds = %211, %175
  %203 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %204 = load i32, ptr %203, align 4, !tbaa !80
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds i32, ptr %179, i64 %205
  %207 = load i32, ptr %206, align 4, !tbaa !67
  %208 = sext i32 %207 to i64
  store i64 %208, ptr %16, align 8, !tbaa !43
  %209 = getelementptr inbounds i32, ptr %176, i64 %205
  %210 = load i32, ptr %209, align 4, !tbaa !67
  store i32 %210, ptr %120, align 4, !tbaa !81
  br label %223

211:                                              ; preds = %175, %211
  %212 = phi i32 [ %217, %211 ], [ 0, %175 ]
  %213 = phi i64 [ %219, %211 ], [ 1, %175 ]
  %214 = add nsw i64 %213, -1
  %215 = getelementptr inbounds i32, ptr %179, i64 %214
  %216 = load i32, ptr %215, align 4, !tbaa !67
  %217 = add nsw i32 %216, %212
  %218 = getelementptr inbounds i32, ptr %176, i64 %213
  store i32 %217, ptr %218, align 4, !tbaa !67
  %219 = add nuw nsw i64 %213, 1
  %220 = load i32, ptr %127, align 8, !tbaa !94
  %221 = sext i32 %220 to i64
  %222 = icmp slt i64 %219, %221
  br i1 %222, label %211, label %202, !llvm.loop !114

223:                                              ; preds = %202, %107
  %224 = phi i64 [ %208, %202 ], [ %119, %107 ]
  %225 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %226 = tail call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %225, i64 noundef %224, i64 noundef 4, ptr noundef nonnull @.str.50, i32 noundef 16)
  %227 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  store ptr %226, ptr %227, align 8, !tbaa !60
  %228 = tail call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %225, i64 noundef %224, i64 noundef 4, ptr noundef nonnull @.str.51, i32 noundef 16)
  %229 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  store ptr %228, ptr %229, align 8, !tbaa !61
  %230 = tail call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %225, i64 noundef %224, i64 noundef 4, ptr noundef nonnull @.str.52, i32 noundef 16)
  %231 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  store ptr %230, ptr %231, align 8, !tbaa !62
  %232 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63
  %233 = load i64, ptr %16, align 8, !tbaa !43
  %234 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63, i32 0, i32 0, i32 0, i32 1
  %235 = load ptr, ptr %234, align 8, !tbaa !58
  %236 = load ptr, ptr %232, align 8, !tbaa !59
  %237 = ptrtoint ptr %235 to i64
  %238 = ptrtoint ptr %236 to i64
  %239 = sub i64 %237, %238
  %240 = ashr exact i64 %239, 2
  %241 = icmp ugt i64 %233, %240
  br i1 %241, label %242, label %244

242:                                              ; preds = %223
  %243 = sub i64 %233, %240
  tail call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %232, i64 noundef %243)
  br label %250

244:                                              ; preds = %223
  %245 = icmp ult i64 %233, %240
  br i1 %245, label %246, label %250

246:                                              ; preds = %244
  %247 = getelementptr inbounds i32, ptr %236, i64 %233
  %248 = icmp eq ptr %235, %247
  br i1 %248, label %250, label %249

249:                                              ; preds = %246
  store ptr %247, ptr %234, align 8, !tbaa !58
  br label %250

250:                                              ; preds = %242, %244, %246, %249
  %251 = icmp sgt i32 %112, %108
  %252 = icmp sgt i32 %112, %111
  %253 = select i1 %251, i1 true, i1 %252
  br i1 %253, label %267, label %254

254:                                              ; preds = %250, %299
  %255 = phi i32 [ %300, %299 ], [ %112, %250 ]
  %256 = phi i32 [ %330, %299 ], [ 0, %250 ]
  %257 = icmp eq i32 %255, 0
  %258 = icmp eq i32 %255, %108
  %259 = load i64, ptr %16, align 8
  %260 = trunc i64 %259 to i32
  %261 = load ptr, ptr %232, align 8
  %262 = load ptr, ptr %227, align 8
  %263 = load ptr, ptr %229, align 8
  %264 = load ptr, ptr %231, align 8
  %265 = select i1 %257, i1 true, i1 %258
  %266 = select i1 %257, i1 true, i1 %258
  br label %302

267:                                              ; preds = %299, %250
  %268 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 10
  %269 = load i32, ptr %268, align 8, !tbaa !94
  tail call void @_ZN4Mesh15partition_cellsEiRSt6vectorIiSaIiEE16partition_method(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %269, ptr noundef nonnull align 8 dereferenceable(24) %232, i32 noundef %4)
  %270 = load i64, ptr %16, align 8, !tbaa !43
  tail call void @_ZN4Mesh13calc_celltypeEm(ptr noundef nonnull align 8 dereferenceable(2288) %0, i64 noundef %270)
  tail call void @_ZN4Mesh24calc_spatial_coordinatesEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef 0)
  %271 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %272 = load i32, ptr %271, align 8, !tbaa !91
  %273 = icmp slt i32 %272, 1
  br i1 %273, label %333, label %274

274:                                              ; preds = %267
  %275 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  %276 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 24
  %277 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %278 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %279 = getelementptr inbounds %struct.TBounds, ptr %7, i64 0, i32 1
  %280 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %281 = getelementptr inbounds %struct.TVector, ptr %7, i64 0, i32 1
  %282 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %283 = getelementptr inbounds %struct.TBounds, ptr %7, i64 0, i32 1, i32 1
  %284 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %9, i64 0, i32 2
  %285 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %9, i64 0, i32 1
  %286 = getelementptr inbounds i8, ptr %12, i64 8
  %287 = getelementptr inbounds i8, ptr %12, i64 16
  %288 = getelementptr inbounds i8, ptr %12, i64 24
  %289 = getelementptr inbounds i8, ptr %12, i64 32
  %290 = getelementptr inbounds i8, ptr %12, i64 40
  %291 = getelementptr inbounds %class.MallocPlus, ptr %12, i64 0, i32 1, i32 0, i32 0, i32 1
  %292 = getelementptr inbounds %class.MallocPlus, ptr %12, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %293 = getelementptr inbounds %class.MallocPlus, ptr %12, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 2
  %294 = getelementptr inbounds %class.MallocPlus, ptr %12, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 3
  %295 = getelementptr inbounds %class.MallocPlus, ptr %12, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %296 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %13, i64 0, i32 1
  %297 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %13, i64 0, i32 2
  %298 = getelementptr inbounds %class.MallocPlus, ptr %12, i64 0, i32 1
  br label %342

299:                                              ; preds = %329
  %300 = add nuw i32 %255, 1
  %301 = icmp eq i32 %255, %108
  br i1 %301, label %267, label %254, !llvm.loop !115

302:                                              ; preds = %254, %329
  %303 = phi i32 [ %112, %254 ], [ %331, %329 ]
  %304 = phi i32 [ %256, %254 ], [ %330, %329 ]
  %305 = load i32, ptr %99, align 4, !tbaa !68
  %306 = icmp ne i32 %305, 0
  %307 = icmp eq i32 %303, 0
  %308 = select i1 %306, i1 %307, i1 false
  %309 = select i1 %308, i1 %265, i1 false
  br i1 %309, label %329, label %310

310:                                              ; preds = %302
  %311 = icmp eq i32 %303, %111
  %312 = select i1 %306, i1 %311, i1 false
  %313 = select i1 %312, i1 %266, i1 false
  br i1 %313, label %329, label %314

314:                                              ; preds = %310
  %315 = load i32, ptr %120, align 4, !tbaa !81
  %316 = icmp sge i32 %304, %315
  %317 = add i32 %315, %260
  %318 = icmp slt i32 %304, %317
  %319 = select i1 %316, i1 %318, i1 false
  br i1 %319, label %320, label %327

320:                                              ; preds = %314
  %321 = sub nsw i32 %304, %315
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds i32, ptr %261, i64 %322
  store i32 %304, ptr %323, align 4, !tbaa !67
  %324 = getelementptr inbounds i32, ptr %262, i64 %322
  store i32 %303, ptr %324, align 4, !tbaa !67
  %325 = getelementptr inbounds i32, ptr %263, i64 %322
  store i32 %255, ptr %325, align 4, !tbaa !67
  %326 = getelementptr inbounds i32, ptr %264, i64 %322
  store i32 0, ptr %326, align 4, !tbaa !67
  br label %327

327:                                              ; preds = %320, %314
  %328 = add nsw i32 %304, 1
  br label %329

329:                                              ; preds = %310, %302, %327
  %330 = phi i32 [ %304, %302 ], [ %328, %327 ], [ %304, %310 ]
  %331 = add nuw i32 %303, 1
  %332 = icmp eq i32 %303, %111
  br i1 %332, label %299, label %302, !llvm.loop !116

333:                                              ; preds = %509, %267
  %334 = phi i32 [ %272, %267 ], [ %511, %509 ]
  %335 = load ptr, ptr %232, align 8, !tbaa !59
  %336 = load ptr, ptr %234, align 8, !tbaa !58
  %337 = icmp eq ptr %336, %335
  br i1 %337, label %339, label %338

338:                                              ; preds = %333
  store ptr %335, ptr %234, align 8, !tbaa !58
  br label %339

339:                                              ; preds = %333, %338
  %340 = load i64, ptr %16, align 8, !tbaa !43
  %341 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  store i64 %340, ptr %341, align 8, !tbaa !78
  br label %543

342:                                              ; preds = %274, %509
  %343 = phi i32 [ 1, %274 ], [ %510, %509 ]
  %344 = load i64, ptr %16, align 8, !tbaa !43
  store i64 %344, ptr %275, align 8, !tbaa !78
  call void @_ZN4Mesh20calc_neighbors_localEv(ptr noundef nonnull align 8 dereferenceable(2288) %0)
  call void @KDTree_Initialize(ptr noundef nonnull %276)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #31
  %345 = load i64, ptr %16, align 8, !tbaa !43
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %348

347:                                              ; preds = %342
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #31
  br label %382

348:                                              ; preds = %342, %348
  %349 = phi i64 [ %367, %348 ], [ 0, %342 ]
  %350 = load ptr, ptr %277, align 8, !tbaa !44
  %351 = getelementptr inbounds double, ptr %350, i64 %349
  %352 = load double, ptr %351, align 8, !tbaa !45
  store double %352, ptr %7, align 8, !tbaa !117
  %353 = load double, ptr %351, align 8, !tbaa !45
  %354 = load ptr, ptr %278, align 8, !tbaa !44
  %355 = getelementptr inbounds double, ptr %354, i64 %349
  %356 = load double, ptr %355, align 8, !tbaa !45
  %357 = fadd double %353, %356
  store double %357, ptr %279, align 8, !tbaa !118
  %358 = load ptr, ptr %280, align 8, !tbaa !44
  %359 = getelementptr inbounds double, ptr %358, i64 %349
  %360 = load double, ptr %359, align 8, !tbaa !45
  store double %360, ptr %281, align 8, !tbaa !119
  %361 = load double, ptr %359, align 8, !tbaa !45
  %362 = load ptr, ptr %282, align 8, !tbaa !44
  %363 = getelementptr inbounds double, ptr %362, i64 %349
  %364 = load double, ptr %363, align 8, !tbaa !45
  %365 = fadd double %361, %364
  store double %365, ptr %283, align 8, !tbaa !120
  call void @KDTree_AddElement(ptr noundef nonnull %276, ptr noundef nonnull %7)
  %366 = add nuw nsw i64 %349, 1
  %367 = and i64 %366, 4294967295
  %368 = load i64, ptr %16, align 8, !tbaa !43
  %369 = icmp ugt i64 %368, %367
  br i1 %369, label %348, label %370, !llvm.loop !121

370:                                              ; preds = %348
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #31
  %371 = icmp ugt i64 %368, 2305843009213693951
  br i1 %371, label %372, label %373

372:                                              ; preds = %370
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.142) #36
  unreachable

373:                                              ; preds = %370
  %374 = icmp eq i64 %368, 0
  br i1 %374, label %382, label %375

375:                                              ; preds = %373
  %376 = shl nuw nsw i64 %368, 2
  %377 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %376) #35
  store i32 0, ptr %377, align 4, !tbaa !67
  %378 = icmp eq i64 %368, 1
  br i1 %378, label %382, label %379

379:                                              ; preds = %375
  %380 = getelementptr i32, ptr %377, i64 1
  %381 = add nsw i64 %376, -4
  call void @llvm.memset.p0.i64(ptr align 4 %380, i8 0, i64 %381, i1 false), !tbaa !67
  br label %382

382:                                              ; preds = %347, %379, %375, %373
  %383 = phi i64 [ 1, %375 ], [ %368, %379 ], [ 0, %373 ], [ 0, %347 ]
  %384 = phi ptr [ %377, %375 ], [ %377, %379 ], [ null, %373 ], [ null, %347 ]
  %385 = trunc i64 %383 to i32
  %386 = load ptr, ptr %277, align 8, !tbaa !44
  %387 = load ptr, ptr %278, align 8, !tbaa !44
  %388 = load ptr, ptr %280, align 8, !tbaa !44
  %389 = load ptr, ptr %282, align 8, !tbaa !44
  invoke void @KDTree_QueryCircleIntersect_Double(ptr noundef nonnull %276, ptr noundef nonnull %8, ptr noundef %384, double noundef %3, i32 noundef %385, ptr noundef %386, ptr noundef %387, ptr noundef %388, ptr noundef %389)
          to label %390 unwind label %429

390:                                              ; preds = %382
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #31
  %391 = load i64, ptr %275, align 8, !tbaa !78
  %392 = icmp ugt i64 %391, 2305843009213693951
  br i1 %392, label %393, label %395

393:                                              ; preds = %390
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.142) #36
          to label %394 unwind label %433

394:                                              ; preds = %393
  unreachable

395:                                              ; preds = %390
  %396 = icmp eq i64 %391, 0
  br i1 %396, label %397, label %398

397:                                              ; preds = %395
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false)
  br label %403

398:                                              ; preds = %395
  %399 = shl nuw nsw i64 %391, 2
  %400 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %399) #35
          to label %401 unwind label %431

401:                                              ; preds = %398
  store ptr %400, ptr %9, align 8, !tbaa !59
  %402 = getelementptr inbounds i32, ptr %400, i64 %391
  store ptr %402, ptr %284, align 8, !tbaa !110
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %400, i8 0, i64 %399, i1 false), !tbaa !67
  br label %403

403:                                              ; preds = %401, %397
  %404 = phi ptr [ null, %397 ], [ %400, %401 ]
  %405 = phi ptr [ null, %397 ], [ %402, %401 ]
  store ptr %405, ptr %285, align 8, !tbaa !58
  %406 = load i32, ptr %8, align 4, !tbaa !67
  %407 = icmp sgt i32 %406, 0
  br i1 %407, label %408, label %428

408:                                              ; preds = %403
  %409 = load ptr, ptr %231, align 8, !tbaa !62
  %410 = load i32, ptr %271, align 8, !tbaa !91
  %411 = sext i32 %406 to i64
  %412 = and i64 %411, 1
  %413 = icmp eq i32 %406, 1
  br i1 %413, label %416, label %414

414:                                              ; preds = %408
  %415 = and i64 %411, -2
  br label %435

416:                                              ; preds = %456, %408
  %417 = phi i64 [ 0, %408 ], [ %457, %456 ]
  %418 = icmp eq i64 %412, 0
  br i1 %418, label %428, label %419

419:                                              ; preds = %416
  %420 = getelementptr inbounds i32, ptr %384, i64 %417
  %421 = load i32, ptr %420, align 4, !tbaa !67
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds i32, ptr %409, i64 %422
  %424 = load i32, ptr %423, align 4, !tbaa !67
  %425 = icmp slt i32 %424, %410
  br i1 %425, label %426, label %428

426:                                              ; preds = %419
  %427 = getelementptr inbounds i32, ptr %404, i64 %422
  store i32 1, ptr %427, align 4, !tbaa !67
  br label %428

428:                                              ; preds = %416, %426, %419, %403
  invoke void @KDTree_Destroy(ptr noundef nonnull %276)
          to label %460 unwind label %513

429:                                              ; preds = %382
  %430 = landingpad { ptr, i32 }
          cleanup
  br label %538

431:                                              ; preds = %398
  %432 = landingpad { ptr, i32 }
          cleanup
  br label %536

433:                                              ; preds = %393
  %434 = landingpad { ptr, i32 }
          cleanup
  br label %536

435:                                              ; preds = %456, %414
  %436 = phi i64 [ 0, %414 ], [ %457, %456 ]
  %437 = phi i64 [ 0, %414 ], [ %458, %456 ]
  %438 = getelementptr inbounds i32, ptr %384, i64 %436
  %439 = load i32, ptr %438, align 4, !tbaa !67
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds i32, ptr %409, i64 %440
  %442 = load i32, ptr %441, align 4, !tbaa !67
  %443 = icmp slt i32 %442, %410
  br i1 %443, label %444, label %446

444:                                              ; preds = %435
  %445 = getelementptr inbounds i32, ptr %404, i64 %440
  store i32 1, ptr %445, align 4, !tbaa !67
  br label %446

446:                                              ; preds = %435, %444
  %447 = or i64 %436, 1
  %448 = getelementptr inbounds i32, ptr %384, i64 %447
  %449 = load i32, ptr %448, align 4, !tbaa !67
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds i32, ptr %409, i64 %450
  %452 = load i32, ptr %451, align 4, !tbaa !67
  %453 = icmp slt i32 %452, %410
  br i1 %453, label %454, label %456

454:                                              ; preds = %446
  %455 = getelementptr inbounds i32, ptr %404, i64 %450
  store i32 1, ptr %455, align 4, !tbaa !67
  br label %456

456:                                              ; preds = %454, %446
  %457 = add nuw nsw i64 %436, 2
  %458 = add i64 %437, 2
  %459 = icmp eq i64 %458, %415
  br i1 %459, label %416, label %435, !llvm.loop !122

460:                                              ; preds = %428
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #31
  store i32 0, ptr %10, align 4, !tbaa !67
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #31
  store i32 0, ptr %11, align 4, !tbaa !67
  %461 = invoke noundef i64 @_ZN4Mesh13refine_smoothERSt6vectorIiSaIiEERiS4_(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 4 dereferenceable(4) %10, ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %462 unwind label %515, !range !123

462:                                              ; preds = %460
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %12) #31
  store i32 0, ptr %286, align 8, !tbaa !50
  store ptr null, ptr %287, align 8, !tbaa !51
  store ptr %286, ptr %288, align 8, !tbaa !52
  store ptr %286, ptr %289, align 8, !tbaa !53
  store i64 0, ptr %290, align 8, !tbaa !54
  store i32 0, ptr %291, align 8, !tbaa !50
  store ptr null, ptr %292, align 8, !tbaa !51
  store ptr %291, ptr %293, align 8, !tbaa !52
  store ptr %291, ptr %294, align 8, !tbaa !53
  store i64 0, ptr %295, align 8, !tbaa !54
  %463 = load i32, ptr %10, align 4, !tbaa !67
  %464 = load i32, ptr %11, align 4, !tbaa !67
  %465 = load ptr, ptr %285, align 8, !tbaa !58
  %466 = load ptr, ptr %9, align 8, !tbaa !59
  %467 = ptrtoint ptr %465 to i64
  %468 = ptrtoint ptr %466 to i64
  %469 = sub i64 %467, %468
  %470 = ashr exact i64 %469, 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  %471 = icmp eq ptr %465, %466
  br i1 %471, label %472, label %474

472:                                              ; preds = %462
  %473 = getelementptr inbounds i32, ptr null, i64 %470
  store i64 0, ptr %13, align 8
  store ptr %473, ptr %297, align 8, !tbaa !110
  br label %486

474:                                              ; preds = %462
  %475 = icmp ugt i64 %469, 9223372036854775804
  br i1 %475, label %476, label %482, !prof !124

476:                                              ; preds = %474
  %477 = icmp slt i64 %469, 0
  br i1 %477, label %478, label %480

478:                                              ; preds = %476
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #36
          to label %479 unwind label %520

479:                                              ; preds = %478
  unreachable

480:                                              ; preds = %476
  invoke void @_ZSt17__throw_bad_allocv() #36
          to label %481 unwind label %520

481:                                              ; preds = %480
  unreachable

482:                                              ; preds = %474
  %483 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %469) #35
          to label %484 unwind label %518

484:                                              ; preds = %482
  store ptr %483, ptr %13, align 8, !tbaa !59
  %485 = getelementptr inbounds i32, ptr %483, i64 %470
  store ptr %485, ptr %297, align 8, !tbaa !110
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %483, ptr align 4 %466, i64 %469, i1 false)
  br label %486

486:                                              ; preds = %472, %484
  %487 = phi ptr [ %473, %472 ], [ %485, %484 ]
  %488 = phi ptr [ null, %472 ], [ %483, %484 ]
  store ptr %487, ptr %296, align 8, !tbaa !58
  invoke void @_ZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlus(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %463, i32 noundef %464, ptr noundef nonnull %13, i32 noundef 0, ptr noundef nonnull align 8 dereferenceable(96) %12)
          to label %489 unwind label %522

489:                                              ; preds = %486
  %490 = icmp eq ptr %488, null
  br i1 %490, label %492, label %491

491:                                              ; preds = %489
  call void @_ZdlPv(ptr noundef nonnull %488) #33
  br label %492

492:                                              ; preds = %489, %491
  store i64 %461, ptr %16, align 8, !tbaa !43
  invoke void @_ZN4Mesh24calc_spatial_coordinatesEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef 0)
          to label %493 unwind label %518

493:                                              ; preds = %492
  %494 = load ptr, ptr %292, align 8, !tbaa !51
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %298, ptr noundef %494)
          to label %498 unwind label %495

495:                                              ; preds = %493
  %496 = landingpad { ptr, i32 }
          catch ptr null
  %497 = extractvalue { ptr, i32 } %496, 0
  call void @__clang_call_terminate(ptr %497) #32
  unreachable

498:                                              ; preds = %493
  %499 = load ptr, ptr %287, align 8, !tbaa !51
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %12, ptr noundef %499)
          to label %503 unwind label %500

500:                                              ; preds = %498
  %501 = landingpad { ptr, i32 }
          catch ptr null
  %502 = extractvalue { ptr, i32 } %501, 0
  call void @__clang_call_terminate(ptr %502) #32
  unreachable

503:                                              ; preds = %498
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %12) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #31
  %504 = icmp eq ptr %466, null
  br i1 %504, label %506, label %505

505:                                              ; preds = %503
  call void @_ZdlPv(ptr noundef nonnull %466) #33
  br label %506

506:                                              ; preds = %503, %505
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #31
  %507 = icmp eq ptr %384, null
  br i1 %507, label %509, label %508

508:                                              ; preds = %506
  call void @_ZdlPv(ptr noundef nonnull %384) #33
  br label %509

509:                                              ; preds = %506, %508
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #31
  %510 = add nuw nsw i32 %343, 1
  %511 = load i32, ptr %271, align 8, !tbaa !91
  %512 = icmp slt i32 %343, %511
  br i1 %512, label %342, label %333, !llvm.loop !125

513:                                              ; preds = %428
  %514 = landingpad { ptr, i32 }
          cleanup
  br label %531

515:                                              ; preds = %460
  %516 = landingpad { ptr, i32 }
          cleanup
  %517 = load ptr, ptr %9, align 8, !tbaa !59
  br label %528

518:                                              ; preds = %492, %482
  %519 = landingpad { ptr, i32 }
          cleanup
  br label %526

520:                                              ; preds = %478, %480
  %521 = landingpad { ptr, i32 }
          cleanup
  br label %526

522:                                              ; preds = %486
  %523 = landingpad { ptr, i32 }
          cleanup
  %524 = icmp eq ptr %488, null
  br i1 %524, label %526, label %525

525:                                              ; preds = %522
  call void @_ZdlPv(ptr noundef nonnull %488) #33
  br label %526

526:                                              ; preds = %518, %520, %525, %522
  %527 = phi { ptr, i32 } [ %523, %522 ], [ %523, %525 ], [ %519, %518 ], [ %521, %520 ]
  call void @_ZN10MallocPlusD2Ev(ptr noundef nonnull align 8 dereferenceable(96) %12) #31
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %12) #31
  br label %528

528:                                              ; preds = %526, %515
  %529 = phi ptr [ %466, %526 ], [ %517, %515 ]
  %530 = phi { ptr, i32 } [ %527, %526 ], [ %516, %515 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #31
  br label %531

531:                                              ; preds = %528, %513
  %532 = phi ptr [ %529, %528 ], [ %404, %513 ]
  %533 = phi { ptr, i32 } [ %530, %528 ], [ %514, %513 ]
  %534 = icmp eq ptr %532, null
  br i1 %534, label %536, label %535

535:                                              ; preds = %531
  call void @_ZdlPv(ptr noundef nonnull %532) #33
  br label %536

536:                                              ; preds = %431, %433, %535, %531
  %537 = phi { ptr, i32 } [ %533, %531 ], [ %533, %535 ], [ %432, %431 ], [ %434, %433 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #31
  br label %538

538:                                              ; preds = %536, %429
  %539 = phi { ptr, i32 } [ %537, %536 ], [ %430, %429 ]
  %540 = icmp eq ptr %384, null
  br i1 %540, label %542, label %541

541:                                              ; preds = %538
  call void @_ZdlPv(ptr noundef nonnull %384) #33
  br label %542

542:                                              ; preds = %541, %538
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #31
  resume { ptr, i32 } %539

543:                                              ; preds = %339, %94
  %544 = phi i32 [ %334, %339 ], [ %97, %94 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14) #31
  store i32 0, ptr %14, align 16, !tbaa !67
  %545 = getelementptr inbounds i32, ptr %14, i64 1
  store i32 0, ptr %545, align 4, !tbaa !67
  %546 = getelementptr inbounds i32, ptr %14, i64 2
  %547 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 40
  %548 = load i32, ptr %547, align 8, !tbaa !102
  store i32 %548, ptr %546, align 8, !tbaa !67
  %549 = getelementptr inbounds i32, ptr %14, i64 3
  store i32 %548, ptr %549, align 4, !tbaa !67
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %15) #31
  store i32 0, ptr %15, align 16, !tbaa !67
  %550 = getelementptr inbounds i32, ptr %15, i64 1
  %551 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 42
  %552 = load i32, ptr %551, align 8, !tbaa !103
  store i32 %552, ptr %550, align 4, !tbaa !67
  %553 = getelementptr inbounds i32, ptr %15, i64 2
  store i32 0, ptr %553, align 8, !tbaa !67
  %554 = getelementptr inbounds i32, ptr %15, i64 3
  store i32 %552, ptr %554, align 4, !tbaa !67
  %555 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %556 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 19
  %557 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %558 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2
  %559 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 20
  %560 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1
  %561 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 2
  br label %563

562:                                              ; preds = %578
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %15) #31
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14) #31
  ret void

563:                                              ; preds = %543, %578
  %564 = phi i32 [ %544, %543 ], [ %579, %578 ]
  %565 = phi i32 [ %544, %543 ], [ %580, %578 ]
  %566 = phi i64 [ 0, %543 ], [ %581, %578 ]
  %567 = getelementptr inbounds [4 x i32], ptr %15, i64 0, i64 %566
  %568 = load i32, ptr %567, align 4, !tbaa !67
  %569 = shl i32 2, %565
  %570 = mul nsw i32 %569, %568
  %571 = add nsw i32 %568, 1
  %572 = mul nsw i32 %569, %571
  %573 = icmp slt i32 %570, %572
  br i1 %573, label %574, label %578

574:                                              ; preds = %563
  %575 = getelementptr inbounds [4 x i32], ptr %14, i64 0, i64 %566
  %576 = load i32, ptr %575, align 4, !tbaa !67
  %577 = add nsw i32 %576, 1
  br label %583

578:                                              ; preds = %594, %563
  %579 = phi i32 [ %564, %563 ], [ %596, %594 ]
  %580 = phi i32 [ %565, %563 ], [ %596, %594 ]
  %581 = add nuw nsw i64 %566, 1
  %582 = icmp eq i64 %581, 4
  br i1 %582, label %562, label %563, !llvm.loop !126

583:                                              ; preds = %574, %594
  %584 = phi i32 [ %564, %574 ], [ %596, %594 ]
  %585 = phi i32 [ %565, %574 ], [ %596, %594 ]
  %586 = phi i32 [ %569, %574 ], [ %595, %594 ]
  %587 = phi i32 [ %570, %574 ], [ %597, %594 ]
  %588 = mul nsw i32 %576, %586
  %589 = shl i32 2, %585
  %590 = mul nsw i32 %589, %577
  %591 = icmp slt i32 %588, %590
  br i1 %591, label %600, label %592

592:                                              ; preds = %583
  %593 = shl i32 2, %584
  br label %594

594:                                              ; preds = %673, %592
  %595 = phi i32 [ %593, %592 ], [ %676, %673 ]
  %596 = phi i32 [ %584, %592 ], [ %675, %673 ]
  %597 = add nsw i32 %587, 1
  %598 = mul nsw i32 %595, %571
  %599 = icmp slt i32 %597, %598
  br i1 %599, label %583, label %578, !llvm.loop !127

600:                                              ; preds = %583, %673
  %601 = phi i32 [ %674, %673 ], [ %588, %583 ]
  %602 = load ptr, ptr %557, align 8, !tbaa !58
  %603 = load ptr, ptr %558, align 8, !tbaa !110
  %604 = icmp eq ptr %602, %603
  br i1 %604, label %607, label %605

605:                                              ; preds = %600
  store i32 %601, ptr %602, align 4, !tbaa !67
  %606 = getelementptr inbounds i32, ptr %602, i64 1
  store ptr %606, ptr %557, align 8, !tbaa !58
  br label %637

607:                                              ; preds = %600
  %608 = load ptr, ptr %556, align 8, !tbaa !59
  %609 = ptrtoint ptr %602 to i64
  %610 = ptrtoint ptr %608 to i64
  %611 = sub i64 %609, %610
  %612 = icmp eq i64 %611, 9223372036854775804
  br i1 %612, label %613, label %614

613:                                              ; preds = %607
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

614:                                              ; preds = %607
  %615 = ashr exact i64 %611, 2
  %616 = call i64 @llvm.umax.i64(i64 %615, i64 1)
  %617 = add i64 %616, %615
  %618 = icmp ult i64 %617, %615
  %619 = icmp ugt i64 %617, 2305843009213693951
  %620 = or i1 %618, %619
  %621 = select i1 %620, i64 2305843009213693951, i64 %617
  %622 = icmp eq i64 %621, 0
  br i1 %622, label %626, label %623

623:                                              ; preds = %614
  %624 = shl nuw nsw i64 %621, 2
  %625 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %624) #35
  br label %626

626:                                              ; preds = %623, %614
  %627 = phi ptr [ %625, %623 ], [ null, %614 ]
  %628 = getelementptr inbounds i32, ptr %627, i64 %615
  store i32 %601, ptr %628, align 4, !tbaa !67
  %629 = icmp sgt i64 %611, 0
  br i1 %629, label %630, label %631

630:                                              ; preds = %626
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %627, ptr align 4 %608, i64 %611, i1 false)
  br label %631

631:                                              ; preds = %630, %626
  %632 = getelementptr inbounds i32, ptr %628, i64 1
  %633 = icmp eq ptr %608, null
  br i1 %633, label %635, label %634

634:                                              ; preds = %631
  call void @_ZdlPv(ptr noundef nonnull %608) #33
  br label %635

635:                                              ; preds = %634, %631
  store ptr %627, ptr %556, align 8, !tbaa !59
  store ptr %632, ptr %557, align 8, !tbaa !58
  %636 = getelementptr inbounds i32, ptr %627, i64 %621
  store ptr %636, ptr %558, align 8, !tbaa !110
  br label %637

637:                                              ; preds = %605, %635
  %638 = load ptr, ptr %560, align 8, !tbaa !58
  %639 = load ptr, ptr %561, align 8, !tbaa !110
  %640 = icmp eq ptr %638, %639
  br i1 %640, label %643, label %641

641:                                              ; preds = %637
  store i32 %587, ptr %638, align 4, !tbaa !67
  %642 = getelementptr inbounds i32, ptr %638, i64 1
  store ptr %642, ptr %560, align 8, !tbaa !58
  br label %673

643:                                              ; preds = %637
  %644 = load ptr, ptr %559, align 8, !tbaa !59
  %645 = ptrtoint ptr %638 to i64
  %646 = ptrtoint ptr %644 to i64
  %647 = sub i64 %645, %646
  %648 = icmp eq i64 %647, 9223372036854775804
  br i1 %648, label %649, label %650

649:                                              ; preds = %643
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

650:                                              ; preds = %643
  %651 = ashr exact i64 %647, 2
  %652 = call i64 @llvm.umax.i64(i64 %651, i64 1)
  %653 = add i64 %652, %651
  %654 = icmp ult i64 %653, %651
  %655 = icmp ugt i64 %653, 2305843009213693951
  %656 = or i1 %654, %655
  %657 = select i1 %656, i64 2305843009213693951, i64 %653
  %658 = icmp eq i64 %657, 0
  br i1 %658, label %662, label %659

659:                                              ; preds = %650
  %660 = shl nuw nsw i64 %657, 2
  %661 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %660) #35
  br label %662

662:                                              ; preds = %659, %650
  %663 = phi ptr [ %661, %659 ], [ null, %650 ]
  %664 = getelementptr inbounds i32, ptr %663, i64 %651
  store i32 %587, ptr %664, align 4, !tbaa !67
  %665 = icmp sgt i64 %647, 0
  br i1 %665, label %666, label %667

666:                                              ; preds = %662
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %663, ptr align 4 %644, i64 %647, i1 false)
  br label %667

667:                                              ; preds = %666, %662
  %668 = getelementptr inbounds i32, ptr %664, i64 1
  %669 = icmp eq ptr %644, null
  br i1 %669, label %671, label %670

670:                                              ; preds = %667
  call void @_ZdlPv(ptr noundef nonnull %644) #33
  br label %671

671:                                              ; preds = %670, %667
  store ptr %663, ptr %559, align 8, !tbaa !59
  store ptr %668, ptr %560, align 8, !tbaa !58
  %672 = getelementptr inbounds i32, ptr %663, i64 %657
  store ptr %672, ptr %561, align 8, !tbaa !110
  br label %673

673:                                              ; preds = %641, %671
  %674 = add nsw i32 %601, 1
  %675 = load i32, ptr %555, align 8, !tbaa !91
  %676 = shl i32 2, %675
  %677 = mul nsw i32 %676, %577
  %678 = icmp slt i32 %674, %677
  br i1 %678, label %600, label %594, !llvm.loop !128
}

declare void @_ZN4Mesh17calc_distributionEi(ptr noundef nonnull align 8 dereferenceable(2288), i32 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN4Mesh13calc_celltypeEm(ptr noundef nonnull align 8 dereferenceable(2288) %0, i64 noundef %1) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %4 = load ptr, ptr %3, align 8, !tbaa !85
  %5 = icmp eq ptr %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %8 = tail call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %7, ptr noundef nonnull %4)
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = load ptr, ptr %3, align 8, !tbaa !85
  %12 = icmp eq ptr %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %10
  %14 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %7, ptr noundef nonnull %11)
  store ptr %14, ptr %3, align 8, !tbaa !85
  br label %15

15:                                               ; preds = %2, %13, %10
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %17 = tail call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %16, i64 noundef %1, i64 noundef 4, ptr noundef nonnull @.str.49, i32 noundef 0)
  store ptr %17, ptr %3, align 8, !tbaa !85
  br label %18

18:                                               ; preds = %15, %6
  %19 = icmp eq i64 %1, 0
  br i1 %19, label %36, label %20

20:                                               ; preds = %18
  %21 = load ptr, ptr %3, align 8, !tbaa !85
  %22 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %23 = load ptr, ptr %22, align 8, !tbaa !60
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 26
  %25 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %26 = load ptr, ptr %25, align 8, !tbaa !62
  %27 = load ptr, ptr %24, align 8, !tbaa !59
  %28 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 27
  %29 = load ptr, ptr %28, align 8, !tbaa !59
  %30 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %31 = load ptr, ptr %30, align 8, !tbaa !61
  %32 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 28
  %33 = load ptr, ptr %32, align 8, !tbaa !59
  %34 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 29
  %35 = load ptr, ptr %34, align 8, !tbaa !59
  br label %37

36:                                               ; preds = %81, %18
  ret void

37:                                               ; preds = %20, %81
  %38 = phi i64 [ 0, %20 ], [ %83, %81 ]
  %39 = getelementptr inbounds i32, ptr %21, i64 %38
  store i32 1, ptr %39, align 4, !tbaa !67
  %40 = shl nuw i64 %38, 32
  %41 = ashr exact i64 %40, 32
  %42 = getelementptr inbounds i32, ptr %23, i64 %41
  %43 = load i32, ptr %42, align 4, !tbaa !67
  %44 = getelementptr inbounds i32, ptr %26, i64 %41
  %45 = load i32, ptr %44, align 4, !tbaa !67
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i32, ptr %27, i64 %46
  %48 = load i32, ptr %47, align 4, !tbaa !67
  %49 = icmp slt i32 %43, %48
  br i1 %49, label %50, label %54

50:                                               ; preds = %37
  store i32 -1, ptr %39, align 4, !tbaa !67
  %51 = load i32, ptr %42, align 4, !tbaa !67
  %52 = load i32, ptr %44, align 4, !tbaa !67
  %53 = sext i32 %52 to i64
  br label %54

54:                                               ; preds = %50, %37
  %55 = phi i64 [ %53, %50 ], [ %46, %37 ]
  %56 = phi i32 [ %51, %50 ], [ %43, %37 ]
  %57 = getelementptr inbounds i32, ptr %29, i64 %55
  %58 = load i32, ptr %57, align 4, !tbaa !67
  %59 = icmp sgt i32 %56, %58
  br i1 %59, label %60, label %63

60:                                               ; preds = %54
  store i32 -2, ptr %39, align 4, !tbaa !67
  %61 = load i32, ptr %44, align 4, !tbaa !67
  %62 = sext i32 %61 to i64
  br label %63

63:                                               ; preds = %60, %54
  %64 = phi i64 [ %62, %60 ], [ %55, %54 ]
  %65 = getelementptr inbounds i32, ptr %31, i64 %41
  %66 = load i32, ptr %65, align 4, !tbaa !67
  %67 = getelementptr inbounds i32, ptr %33, i64 %64
  %68 = load i32, ptr %67, align 4, !tbaa !67
  %69 = icmp slt i32 %66, %68
  br i1 %69, label %70, label %74

70:                                               ; preds = %63
  store i32 -3, ptr %39, align 4, !tbaa !67
  %71 = load i32, ptr %65, align 4, !tbaa !67
  %72 = load i32, ptr %44, align 4, !tbaa !67
  %73 = sext i32 %72 to i64
  br label %74

74:                                               ; preds = %70, %63
  %75 = phi i64 [ %73, %70 ], [ %64, %63 ]
  %76 = phi i32 [ %71, %70 ], [ %66, %63 ]
  %77 = getelementptr inbounds i32, ptr %35, i64 %75
  %78 = load i32, ptr %77, align 4, !tbaa !67
  %79 = icmp sgt i32 %76, %78
  br i1 %79, label %80, label %81

80:                                               ; preds = %74
  store i32 -4, ptr %39, align 4, !tbaa !67
  br label %81

81:                                               ; preds = %74, %80
  %82 = add nuw nsw i64 %38, 1
  %83 = and i64 %82, 4294967295
  %84 = icmp ult i64 %83, %1
  br i1 %84, label %37, label %36, !llvm.loop !129
}

declare void @_ZN4Mesh15partition_cellsEiRSt6vectorIiSaIiEE16partition_method(ptr noundef nonnull align 8 dereferenceable(2288), i32 noundef, ptr noundef nonnull align 8 dereferenceable(24), i32 noundef) local_unnamed_addr #7

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh20calc_neighbors_localEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %struct.TBounds, align 8
  %3 = alloca %struct.timeval, align 8
  %4 = alloca %struct.timeval, align 8
  %5 = alloca %struct.timeval, align 8
  %6 = alloca %struct.TBounds, align 8
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #31
  call void @cpu_timer_start(ptr noundef nonnull %3)
  %8 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 7
  %9 = load i8, ptr %8, align 8, !tbaa !106, !range !130, !noundef !131
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %904, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 5, i64 2
  %13 = load i32, ptr %12, align 8, !tbaa !67
  %14 = add nsw i32 %13, 1
  store i32 %14, ptr %12, align 8, !tbaa !67
  %15 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %17 = load ptr, ptr %16, align 8, !tbaa !73
  %18 = call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %15, ptr noundef %17)
  %19 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %20 = load i64, ptr %19, align 8, !tbaa !43
  %21 = icmp ult i64 %18, %20
  br i1 %21, label %22, label %54

22:                                               ; preds = %11
  %23 = load ptr, ptr %16, align 8, !tbaa !73
  %24 = icmp eq ptr %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  %26 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %15, ptr noundef nonnull %23)
  store ptr %26, ptr %16, align 8, !tbaa !73
  br label %27

27:                                               ; preds = %25, %22
  %28 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %29 = load ptr, ptr %28, align 8, !tbaa !74
  %30 = icmp eq ptr %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %15, ptr noundef nonnull %29)
  store ptr %32, ptr %28, align 8, !tbaa !74
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %35 = load ptr, ptr %34, align 8, !tbaa !75
  %36 = icmp eq ptr %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %15, ptr noundef nonnull %35)
  store ptr %38, ptr %34, align 8, !tbaa !75
  br label %39

39:                                               ; preds = %37, %33
  %40 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %41 = load ptr, ptr %40, align 8, !tbaa !76
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %15, ptr noundef nonnull %41)
  store ptr %44, ptr %40, align 8, !tbaa !76
  br label %45

45:                                               ; preds = %43, %39
  %46 = load i64, ptr %19, align 8, !tbaa !43
  %47 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %15, i64 noundef %46, i64 noundef 4, ptr noundef nonnull @.str.42, i32 noundef 4)
  store ptr %47, ptr %16, align 8, !tbaa !73
  %48 = load i64, ptr %19, align 8, !tbaa !43
  %49 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %15, i64 noundef %48, i64 noundef 4, ptr noundef nonnull @.str.43, i32 noundef 4)
  store ptr %49, ptr %28, align 8, !tbaa !74
  %50 = load i64, ptr %19, align 8, !tbaa !43
  %51 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %15, i64 noundef %50, i64 noundef 4, ptr noundef nonnull @.str.44, i32 noundef 4)
  store ptr %51, ptr %34, align 8, !tbaa !75
  %52 = load i64, ptr %19, align 8, !tbaa !43
  %53 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %15, i64 noundef %52, i64 noundef 4, ptr noundef nonnull @.str.45, i32 noundef 4)
  store ptr %53, ptr %40, align 8, !tbaa !76
  br label %54

54:                                               ; preds = %45, %11
  %55 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 14
  %56 = load ptr, ptr %55, align 8, !tbaa !65
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %54
  %59 = call noalias dereferenceable_or_null(4) ptr @malloc(i64 noundef 4) #34
  store ptr %59, ptr %55, align 8, !tbaa !65
  br label %60

60:                                               ; preds = %58, %54
  %61 = phi ptr [ %59, %58 ], [ %56, %54 ]
  %62 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 15
  %63 = load ptr, ptr %62, align 8, !tbaa !66
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  %66 = call noalias dereferenceable_or_null(4) ptr @malloc(i64 noundef 4) #34
  store ptr %66, ptr %62, align 8, !tbaa !66
  br label %67

67:                                               ; preds = %60, %65
  %68 = phi ptr [ %66, %65 ], [ %63, %60 ]
  %69 = load i64, ptr %19, align 8, !tbaa !43
  %70 = trunc i64 %69 to i32
  store i32 0, ptr %61, align 4, !tbaa !67
  store i32 %70, ptr %68, align 4, !tbaa !67
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %72, label %136

72:                                               ; preds = %67
  %73 = load ptr, ptr %16, align 8, !tbaa !73
  %74 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %75 = load ptr, ptr %74, align 8, !tbaa !74
  %76 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %77 = load ptr, ptr %76, align 8, !tbaa !75
  %78 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %79 = load ptr, ptr %78, align 8, !tbaa !76
  %80 = and i64 %69, 4294967295
  %81 = icmp ult i64 %80, 32
  br i1 %81, label %121, label %82

82:                                               ; preds = %72
  %83 = ptrtoint ptr %79 to i64
  %84 = ptrtoint ptr %77 to i64
  %85 = ptrtoint ptr %75 to i64
  %86 = ptrtoint ptr %73 to i64
  %87 = sub i64 %85, %86
  %88 = icmp ult i64 %87, 32
  %89 = sub i64 %84, %86
  %90 = icmp ult i64 %89, 32
  %91 = or i1 %88, %90
  %92 = sub i64 %83, %86
  %93 = icmp ult i64 %92, 32
  %94 = or i1 %91, %93
  %95 = sub i64 %84, %85
  %96 = icmp ult i64 %95, 32
  %97 = or i1 %94, %96
  %98 = sub i64 %83, %85
  %99 = icmp ult i64 %98, 32
  %100 = or i1 %97, %99
  %101 = sub i64 %83, %84
  %102 = icmp ult i64 %101, 32
  %103 = or i1 %100, %102
  br i1 %103, label %121, label %104

104:                                              ; preds = %82
  %105 = and i64 %69, 7
  %106 = sub nsw i64 %80, %105
  br label %107

107:                                              ; preds = %107, %104
  %108 = phi i64 [ 0, %104 ], [ %117, %107 ]
  %109 = getelementptr inbounds i32, ptr %73, i64 %108
  store <4 x i32> <i32 -98, i32 -98, i32 -98, i32 -98>, ptr %109, align 4, !tbaa !67
  %110 = getelementptr inbounds i32, ptr %109, i64 4
  store <4 x i32> <i32 -98, i32 -98, i32 -98, i32 -98>, ptr %110, align 4, !tbaa !67
  %111 = getelementptr inbounds i32, ptr %75, i64 %108
  store <4 x i32> <i32 -98, i32 -98, i32 -98, i32 -98>, ptr %111, align 4, !tbaa !67
  %112 = getelementptr inbounds i32, ptr %111, i64 4
  store <4 x i32> <i32 -98, i32 -98, i32 -98, i32 -98>, ptr %112, align 4, !tbaa !67
  %113 = getelementptr inbounds i32, ptr %77, i64 %108
  store <4 x i32> <i32 -98, i32 -98, i32 -98, i32 -98>, ptr %113, align 4, !tbaa !67
  %114 = getelementptr inbounds i32, ptr %113, i64 4
  store <4 x i32> <i32 -98, i32 -98, i32 -98, i32 -98>, ptr %114, align 4, !tbaa !67
  %115 = getelementptr inbounds i32, ptr %79, i64 %108
  store <4 x i32> <i32 -98, i32 -98, i32 -98, i32 -98>, ptr %115, align 4, !tbaa !67
  %116 = getelementptr inbounds i32, ptr %115, i64 4
  store <4 x i32> <i32 -98, i32 -98, i32 -98, i32 -98>, ptr %116, align 4, !tbaa !67
  %117 = add nuw i64 %108, 8
  %118 = icmp eq i64 %117, %106
  br i1 %118, label %119, label %107, !llvm.loop !132

119:                                              ; preds = %107
  %120 = icmp eq i64 %105, 0
  br i1 %120, label %136, label %121

121:                                              ; preds = %82, %72, %119
  %122 = phi i64 [ 0, %82 ], [ 0, %72 ], [ %106, %119 ]
  %123 = sub i64 %69, %122
  %124 = add nsw i64 %122, 1
  %125 = and i64 %123, 1
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %133, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds i32, ptr %73, i64 %122
  store i32 -98, ptr %128, align 4, !tbaa !67
  %129 = getelementptr inbounds i32, ptr %75, i64 %122
  store i32 -98, ptr %129, align 4, !tbaa !67
  %130 = getelementptr inbounds i32, ptr %77, i64 %122
  store i32 -98, ptr %130, align 4, !tbaa !67
  %131 = getelementptr inbounds i32, ptr %79, i64 %122
  store i32 -98, ptr %131, align 4, !tbaa !67
  %132 = add nuw nsw i64 %122, 1
  br label %133

133:                                              ; preds = %127, %121
  %134 = phi i64 [ %122, %121 ], [ %132, %127 ]
  %135 = icmp eq i64 %80, %124
  br i1 %135, label %136, label %138

136:                                              ; preds = %133, %138, %119, %67
  %137 = load i32, ptr @calc_neighbor_type, align 4, !tbaa !67
  switch i32 %137, label %904 [
    i32 0, label %151
    i32 1, label %661
  ]

138:                                              ; preds = %133, %138
  %139 = phi i64 [ %149, %138 ], [ %134, %133 ]
  %140 = getelementptr inbounds i32, ptr %73, i64 %139
  store i32 -98, ptr %140, align 4, !tbaa !67
  %141 = getelementptr inbounds i32, ptr %75, i64 %139
  store i32 -98, ptr %141, align 4, !tbaa !67
  %142 = getelementptr inbounds i32, ptr %77, i64 %139
  store i32 -98, ptr %142, align 4, !tbaa !67
  %143 = getelementptr inbounds i32, ptr %79, i64 %139
  store i32 -98, ptr %143, align 4, !tbaa !67
  %144 = add nuw nsw i64 %139, 1
  %145 = getelementptr inbounds i32, ptr %73, i64 %144
  store i32 -98, ptr %145, align 4, !tbaa !67
  %146 = getelementptr inbounds i32, ptr %75, i64 %144
  store i32 -98, ptr %146, align 4, !tbaa !67
  %147 = getelementptr inbounds i32, ptr %77, i64 %144
  store i32 -98, ptr %147, align 4, !tbaa !67
  %148 = getelementptr inbounds i32, ptr %79, i64 %144
  store i32 -98, ptr %148, align 4, !tbaa !67
  %149 = add nuw nsw i64 %139, 2
  %150 = icmp eq i64 %149, %80
  br i1 %150, label %136, label %138, !llvm.loop !135

151:                                              ; preds = %136
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #31
  call void @cpu_timer_start(ptr noundef nonnull %4)
  %152 = load i64, ptr %19, align 8, !tbaa !43
  %153 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  store i64 %152, ptr %153, align 8, !tbaa !78
  %154 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 42
  %155 = load i32, ptr %154, align 8, !tbaa !103
  %156 = add nsw i32 %155, 1
  %157 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %158 = load i32, ptr %157, align 8, !tbaa !91
  %159 = shl i32 2, %158
  %160 = mul nsw i32 %159, %156
  %161 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 40
  %162 = load i32, ptr %161, align 8, !tbaa !102
  %163 = add nsw i32 %162, 1
  %164 = mul nsw i32 %163, %159
  %165 = icmp eq i64 %152, 0
  br i1 %165, label %207, label %166

166:                                              ; preds = %151
  %167 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %168 = load ptr, ptr %167, align 8, !tbaa !62
  %169 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %170 = load ptr, ptr %169, align 8, !tbaa !61
  %171 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %172 = load ptr, ptr %171, align 8, !tbaa !60
  br label %178

173:                                              ; preds = %178
  %174 = call i32 @llvm.smin.i32(i32 %191, i32 %160)
  %175 = call i32 @llvm.smin.i32(i32 %199, i32 %164)
  %176 = call i32 @llvm.smax.i32(i32 %195, i32 0)
  %177 = call i32 @llvm.smax.i32(i32 %203, i32 0)
  br label %207

178:                                              ; preds = %166, %178
  %179 = phi i64 [ 0, %166 ], [ %205, %178 ]
  %180 = phi i32 [ %160, %166 ], [ %191, %178 ]
  %181 = phi i32 [ %164, %166 ], [ %199, %178 ]
  %182 = phi i32 [ 0, %166 ], [ %195, %178 ]
  %183 = phi i32 [ 0, %166 ], [ %203, %178 ]
  %184 = getelementptr inbounds i32, ptr %168, i64 %179
  %185 = load i32, ptr %184, align 4, !tbaa !67
  %186 = getelementptr inbounds i32, ptr %170, i64 %179
  %187 = load i32, ptr %186, align 4, !tbaa !67
  %188 = sub nsw i32 %158, %185
  %189 = shl i32 2, %188
  %190 = mul nsw i32 %187, %189
  %191 = call i32 @llvm.smin.i32(i32 %190, i32 %180)
  %192 = add nsw i32 %187, 1
  %193 = mul nsw i32 %192, %189
  %194 = add nsw i32 %193, -1
  %195 = call i32 @llvm.smax.i32(i32 %194, i32 %182)
  %196 = getelementptr inbounds i32, ptr %172, i64 %179
  %197 = load i32, ptr %196, align 4, !tbaa !67
  %198 = mul nsw i32 %197, %189
  %199 = call i32 @llvm.smin.i32(i32 %198, i32 %181)
  %200 = add nsw i32 %197, 1
  %201 = mul nsw i32 %200, %189
  %202 = add nsw i32 %201, -1
  %203 = call i32 @llvm.smax.i32(i32 %202, i32 %183)
  %204 = add nuw nsw i64 %179, 1
  %205 = and i64 %204, 4294967295
  %206 = icmp ugt i64 %152, %205
  br i1 %206, label %178, label %173, !llvm.loop !136

207:                                              ; preds = %173, %151
  %208 = phi i32 [ 0, %151 ], [ %176, %173 ]
  %209 = phi i32 [ %160, %151 ], [ %174, %173 ]
  %210 = phi i32 [ %164, %151 ], [ %175, %173 ]
  %211 = phi i32 [ 0, %151 ], [ %177, %173 ]
  %212 = shl i32 -4, %158
  %213 = add i32 %209, %212
  %214 = call i32 @llvm.smax.i32(i32 %213, i32 0)
  %215 = shl i32 4, %158
  %216 = add nsw i32 %208, %215
  %217 = call i32 @llvm.smin.i32(i32 %160, i32 %216)
  %218 = add i32 %210, %212
  %219 = call i32 @llvm.smax.i32(i32 %218, i32 0)
  %220 = add nsw i32 %211, %215
  %221 = call i32 @llvm.smin.i32(i32 %164, i32 %220)
  %222 = trunc i64 %152 to i32
  %223 = sub nsw i32 %221, %219
  %224 = sub nsw i32 %217, %214
  %225 = call ptr @compact_hash_init(i32 noundef %222, i32 noundef %223, i32 noundef %224, i32 noundef 0)
  store ptr %225, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  %226 = load i64, ptr %19, align 8, !tbaa !43
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %233, label %228

228:                                              ; preds = %207
  %229 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 13
  %230 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %231 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %232 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  br label %261

233:                                              ; preds = %261, %207
  %234 = load i64, ptr %4, align 8, !tbaa.struct !71
  %235 = getelementptr inbounds i8, ptr %4, i64 8
  %236 = load i64, ptr %235, align 8, !tbaa.struct !72
  %237 = call double @cpu_timer_stop(i64 %234, i64 %236)
  %238 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 2
  %239 = load double, ptr %238, align 8, !tbaa !45
  %240 = fadd double %237, %239
  store double %240, ptr %238, align 8, !tbaa !45
  call void @cpu_timer_start(ptr noundef nonnull %4)
  %241 = load i32, ptr %154, align 8, !tbaa !103
  %242 = add nsw i32 %241, 1
  %243 = load i32, ptr %157, align 8, !tbaa !91
  %244 = shl i32 2, %243
  %245 = mul nsw i32 %244, %242
  store i32 %245, ptr @_ZZN4Mesh20calc_neighbors_localEvE8jmaxcalc, align 4, !tbaa !67
  %246 = load i32, ptr %161, align 8, !tbaa !102
  %247 = add nsw i32 %246, 1
  %248 = mul nsw i32 %247, %244
  store i32 %248, ptr @_ZZN4Mesh20calc_neighbors_localEvE8imaxcalc, align 4, !tbaa !67
  %249 = load i64, ptr %19, align 8, !tbaa !43
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %291, label %251

251:                                              ; preds = %233
  %252 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %253 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %254 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %255 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 13
  %256 = xor i32 %219, -1
  %257 = xor i32 %214, -1
  %258 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %259 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %260 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  br label %299

261:                                              ; preds = %228, %261
  %262 = phi i64 [ 0, %228 ], [ %288, %261 ]
  %263 = trunc i64 %262 to i32
  %264 = load i32, ptr %229, align 4, !tbaa !81
  %265 = add i32 %264, %263
  %266 = load ptr, ptr %230, align 8, !tbaa !62
  %267 = getelementptr inbounds i32, ptr %266, i64 %262
  %268 = load i32, ptr %267, align 4, !tbaa !67
  %269 = load i32, ptr %157, align 8, !tbaa !91
  %270 = sub nsw i32 %269, %268
  %271 = shl i32 2, %270
  %272 = load ptr, ptr %231, align 8, !tbaa !60
  %273 = getelementptr inbounds i32, ptr %272, i64 %262
  %274 = load i32, ptr %273, align 4, !tbaa !67
  %275 = mul nsw i32 %274, %271
  %276 = sub i32 %275, %219
  %277 = load ptr, ptr %232, align 8, !tbaa !61
  %278 = getelementptr inbounds i32, ptr %277, i64 %262
  %279 = load i32, ptr %278, align 4, !tbaa !67
  %280 = mul nsw i32 %279, %271
  %281 = sub nsw i32 %280, %214
  %282 = load ptr, ptr @write_hash, align 8, !tbaa !137
  %283 = mul nsw i32 %281, %223
  %284 = add nsw i32 %276, %283
  %285 = sext i32 %284 to i64
  %286 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  call void %282(i32 noundef %265, i64 noundef %285, ptr noundef %286)
  %287 = add nuw nsw i64 %262, 1
  %288 = and i64 %287, 4294967295
  %289 = load i64, ptr %19, align 8, !tbaa !43
  %290 = icmp ugt i64 %289, %288
  br i1 %290, label %261, label %233, !llvm.loop !138

291:                                              ; preds = %644, %233
  %292 = load i64, ptr %4, align 8, !tbaa.struct !71
  %293 = load i64, ptr %235, align 8, !tbaa.struct !72
  %294 = call double @cpu_timer_stop(i64 %292, i64 %293)
  %295 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 3
  %296 = load double, ptr %295, align 8, !tbaa !45
  %297 = fadd double %294, %296
  store double %297, ptr %295, align 8, !tbaa !45
  call void @cpu_timer_start(ptr noundef nonnull %4)
  call void @write_hash_collision_report()
  call void @read_hash_collision_report()
  %298 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  call void @compact_hash_delete(ptr noundef %298)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #31
  br label %904

299:                                              ; preds = %251, %644
  %300 = phi i64 [ 0, %251 ], [ %658, %644 ]
  %301 = trunc i64 %300 to i32
  %302 = load ptr, ptr %252, align 8, !tbaa !60
  %303 = getelementptr inbounds i32, ptr %302, i64 %300
  %304 = load i32, ptr %303, align 4, !tbaa !67
  %305 = load ptr, ptr %253, align 8, !tbaa !61
  %306 = getelementptr inbounds i32, ptr %305, i64 %300
  %307 = load i32, ptr %306, align 4, !tbaa !67
  %308 = load ptr, ptr %254, align 8, !tbaa !62
  %309 = getelementptr inbounds i32, ptr %308, i64 %300
  %310 = load i32, ptr %309, align 4, !tbaa !67
  %311 = load i32, ptr %157, align 8, !tbaa !91
  %312 = sub nsw i32 %311, %310
  %313 = shl i32 2, %312
  %314 = mul nsw i32 %313, %304
  %315 = sub nsw i32 %314, %219
  %316 = add nsw i32 %304, -1
  %317 = mul nsw i32 %313, %316
  %318 = call i32 @llvm.smax.i32(i32 %317, i32 0)
  %319 = sub nsw i32 %318, %219
  %320 = add nsw i32 %304, 1
  %321 = mul nsw i32 %313, %320
  %322 = load i32, ptr @_ZZN4Mesh20calc_neighbors_localEvE8imaxcalc, align 4, !tbaa !67
  %323 = add nsw i32 %322, -1
  %324 = call i32 @llvm.smin.i32(i32 %323, i32 %321)
  %325 = sub nsw i32 %324, %219
  %326 = mul nsw i32 %313, %307
  %327 = sub nsw i32 %326, %214
  %328 = add nsw i32 %307, -1
  %329 = mul nsw i32 %313, %328
  %330 = call i32 @llvm.smax.i32(i32 %329, i32 0)
  %331 = sub nsw i32 %330, %214
  %332 = add nsw i32 %307, 1
  %333 = mul nsw i32 %313, %332
  %334 = load i32, ptr @_ZZN4Mesh20calc_neighbors_localEvE8jmaxcalc, align 4, !tbaa !67
  %335 = add nsw i32 %334, -1
  %336 = call i32 @llvm.smin.i32(i32 %335, i32 %333)
  %337 = sub nsw i32 %336, %214
  %338 = shl i32 2, %311
  %339 = icmp sge i32 %314, %338
  %340 = load i32, ptr %255, align 4
  %341 = add i32 %340, %301
  %342 = select i1 %339, i32 -1, i32 %341
  %343 = icmp sge i32 %326, %338
  %344 = select i1 %343, i32 -1, i32 %341
  %345 = load i32, ptr %161, align 8, !tbaa !102
  %346 = mul nsw i32 %345, %338
  %347 = add i32 %346, %256
  %348 = icmp sgt i32 %315, %347
  %349 = select i1 %348, i32 %341, i32 -1
  %350 = load i32, ptr %154, align 8, !tbaa !103
  %351 = mul nsw i32 %350, %338
  %352 = add i32 %351, %257
  %353 = icmp sgt i32 %327, %352
  %354 = select i1 %353, i32 %341, i32 -1
  %355 = icmp eq i32 %314, %338
  %356 = icmp slt i32 %326, %351
  %357 = select i1 %343, i1 %356, i1 false
  %358 = select i1 %357, i32 %342, i32 %341
  %359 = select i1 %355, i32 %358, i32 %342
  %360 = icmp eq i32 %326, %338
  %361 = icmp slt i32 %314, %346
  %362 = select i1 %339, i1 %361, i1 false
  %363 = select i1 %362, i32 %344, i32 %341
  %364 = select i1 %360, i32 %363, i32 %344
  %365 = icmp eq i32 %324, %346
  %366 = select i1 %357, i32 %349, i32 %341
  %367 = select i1 %365, i32 %366, i32 %349
  %368 = icmp eq i32 %336, %351
  %369 = select i1 %362, i32 %354, i32 %341
  %370 = select i1 %368, i32 %369, i32 %354
  %371 = icmp eq i32 %311, %310
  br i1 %371, label %397, label %372

372:                                              ; preds = %299
  %373 = sub nsw i32 %327, %331
  %374 = sdiv i32 %373, -2
  %375 = add i32 %374, %327
  %376 = icmp slt i32 %359, 0
  br i1 %376, label %377, label %387

377:                                              ; preds = %372
  %378 = sub nsw i32 %315, %319
  %379 = sdiv i32 %378, -2
  %380 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %381 = mul nsw i32 %327, %223
  %382 = add i32 %381, %315
  %383 = add i32 %382, %379
  %384 = sext i32 %383 to i64
  %385 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  %386 = call i32 %380(i64 noundef %384, ptr noundef %385)
  br label %387

387:                                              ; preds = %377, %372
  %388 = phi i32 [ %386, %377 ], [ %359, %372 ]
  %389 = icmp slt i32 %364, 0
  br i1 %389, label %390, label %397

390:                                              ; preds = %387
  %391 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %392 = mul nsw i32 %375, %223
  %393 = add nsw i32 %392, %315
  %394 = sext i32 %393 to i64
  %395 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  %396 = call i32 %391(i64 noundef %394, ptr noundef %395)
  br label %397

397:                                              ; preds = %387, %390, %299
  %398 = phi i32 [ %364, %299 ], [ %396, %390 ], [ %364, %387 ]
  %399 = phi i32 [ %359, %299 ], [ %388, %390 ], [ %388, %387 ]
  %400 = icmp slt i32 %399, 0
  br i1 %400, label %401, label %420

401:                                              ; preds = %397
  %402 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %403 = mul nsw i32 %327, %223
  %404 = add nsw i32 %403, %319
  %405 = sext i32 %404 to i64
  %406 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  %407 = call i32 %402(i64 noundef %405, ptr noundef %406)
  %408 = icmp sgt i32 %407, -1
  %409 = load i64, ptr %19, align 8
  %410 = trunc i64 %409 to i32
  %411 = icmp slt i32 %407, %410
  %412 = select i1 %408, i1 %411, i1 false
  br i1 %412, label %413, label %420

413:                                              ; preds = %401
  %414 = load ptr, ptr %254, align 8, !tbaa !62
  %415 = zext i32 %407 to i64
  %416 = getelementptr inbounds i32, ptr %414, i64 %415
  %417 = load i32, ptr %416, align 4, !tbaa !67
  %418 = icmp eq i32 %417, %310
  %419 = select i1 %418, i32 %407, i32 %399
  br label %420

420:                                              ; preds = %413, %401, %397
  %421 = phi i32 [ %399, %397 ], [ %399, %401 ], [ %419, %413 ]
  %422 = icmp slt i32 %367, 0
  br i1 %422, label %423, label %430

423:                                              ; preds = %420
  %424 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %425 = mul nsw i32 %327, %223
  %426 = add nsw i32 %425, %325
  %427 = sext i32 %426 to i64
  %428 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  %429 = call i32 %424(i64 noundef %427, ptr noundef %428)
  br label %430

430:                                              ; preds = %423, %420
  %431 = phi i32 [ %429, %423 ], [ %367, %420 ]
  %432 = icmp slt i32 %398, 0
  br i1 %432, label %433, label %452

433:                                              ; preds = %430
  %434 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %435 = mul nsw i32 %331, %223
  %436 = add nsw i32 %435, %315
  %437 = sext i32 %436 to i64
  %438 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  %439 = call i32 %434(i64 noundef %437, ptr noundef %438)
  %440 = icmp sgt i32 %439, -1
  %441 = load i64, ptr %19, align 8
  %442 = trunc i64 %441 to i32
  %443 = icmp slt i32 %439, %442
  %444 = select i1 %440, i1 %443, i1 false
  br i1 %444, label %445, label %452

445:                                              ; preds = %433
  %446 = load ptr, ptr %254, align 8, !tbaa !62
  %447 = zext i32 %439 to i64
  %448 = getelementptr inbounds i32, ptr %446, i64 %447
  %449 = load i32, ptr %448, align 4, !tbaa !67
  %450 = icmp eq i32 %449, %310
  %451 = select i1 %450, i32 %439, i32 %398
  br label %452

452:                                              ; preds = %445, %433, %430
  %453 = phi i32 [ %398, %430 ], [ %398, %433 ], [ %451, %445 ]
  %454 = icmp slt i32 %370, 0
  br i1 %454, label %455, label %462

455:                                              ; preds = %452
  %456 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %457 = mul nsw i32 %337, %223
  %458 = add nsw i32 %457, %315
  %459 = sext i32 %458 to i64
  %460 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  %461 = call i32 %456(i64 noundef %459, ptr noundef %460)
  br label %462

462:                                              ; preds = %455, %452
  %463 = phi i32 [ %461, %455 ], [ %370, %452 ]
  %464 = load i32, ptr %157, align 8, !tbaa !91
  %465 = icmp eq i32 %310, %464
  br i1 %465, label %527, label %466

466:                                              ; preds = %462
  %467 = shl i32 2, %464
  %468 = icmp slt i32 %327, %467
  br i1 %468, label %469, label %495

469:                                              ; preds = %466
  %470 = icmp slt i32 %431, 0
  br i1 %470, label %471, label %480

471:                                              ; preds = %469
  %472 = add nsw i32 %337, %327
  %473 = sdiv i32 %472, 2
  %474 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %475 = mul nsw i32 %473, %223
  %476 = add nsw i32 %475, %325
  %477 = sext i32 %476 to i64
  %478 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  %479 = call i32 %474(i64 noundef %477, ptr noundef %478)
  br label %480

480:                                              ; preds = %471, %469
  %481 = phi i32 [ %479, %471 ], [ %431, %469 ]
  %482 = icmp slt i32 %421, 0
  br i1 %482, label %483, label %495

483:                                              ; preds = %480
  %484 = sub nsw i32 %315, %319
  %485 = sdiv i32 %484, -2
  %486 = add i32 %485, %315
  %487 = add nsw i32 %337, %327
  %488 = sdiv i32 %487, 2
  %489 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %490 = mul nsw i32 %488, %223
  %491 = add nsw i32 %486, %490
  %492 = sext i32 %491 to i64
  %493 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  %494 = call i32 %489(i64 noundef %492, ptr noundef %493)
  br label %495

495:                                              ; preds = %480, %483, %466
  %496 = phi i32 [ %481, %483 ], [ %481, %480 ], [ %431, %466 ]
  %497 = phi i32 [ %494, %483 ], [ %421, %480 ], [ %421, %466 ]
  %498 = load i32, ptr %157, align 8, !tbaa !91
  %499 = shl i32 2, %498
  %500 = icmp slt i32 %315, %499
  br i1 %500, label %501, label %527

501:                                              ; preds = %495
  %502 = icmp slt i32 %463, 0
  br i1 %502, label %503, label %512

503:                                              ; preds = %501
  %504 = add nsw i32 %325, %315
  %505 = sdiv i32 %504, 2
  %506 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %507 = mul nsw i32 %337, %223
  %508 = add nsw i32 %505, %507
  %509 = sext i32 %508 to i64
  %510 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  %511 = call i32 %506(i64 noundef %509, ptr noundef %510)
  br label %512

512:                                              ; preds = %503, %501
  %513 = phi i32 [ %511, %503 ], [ %463, %501 ]
  %514 = icmp slt i32 %453, 0
  br i1 %514, label %515, label %527

515:                                              ; preds = %512
  %516 = add nsw i32 %325, %315
  %517 = sdiv i32 %516, 2
  %518 = sub nsw i32 %327, %331
  %519 = sdiv i32 %518, -2
  %520 = add i32 %519, %327
  %521 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %522 = mul nsw i32 %520, %223
  %523 = add nsw i32 %522, %517
  %524 = sext i32 %523 to i64
  %525 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  %526 = call i32 %521(i64 noundef %524, ptr noundef %525)
  br label %527

527:                                              ; preds = %495, %515, %512, %462
  %528 = phi i32 [ %513, %515 ], [ %513, %512 ], [ %463, %495 ], [ %463, %462 ]
  %529 = phi i32 [ %526, %515 ], [ %453, %512 ], [ %453, %495 ], [ %453, %462 ]
  %530 = phi i32 [ %496, %515 ], [ %496, %512 ], [ %496, %495 ], [ %431, %462 ]
  %531 = phi i32 [ %497, %515 ], [ %497, %512 ], [ %497, %495 ], [ %421, %462 ]
  %532 = icmp eq i32 %310, 0
  br i1 %532, label %644, label %533

533:                                              ; preds = %527
  %534 = icmp slt i32 %531, 0
  br i1 %534, label %535, label %561

535:                                              ; preds = %533
  %536 = sdiv i32 %307, 2
  %537 = shl nsw i32 %536, 1
  %538 = mul nsw i32 %537, %313
  %539 = sub nsw i32 %538, %214
  %540 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %541 = mul nsw i32 %539, %223
  %542 = shl i32 %319, 1
  %543 = sub i32 %541, %315
  %544 = add i32 %543, %542
  %545 = sext i32 %544 to i64
  %546 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  %547 = call i32 %540(i64 noundef %545, ptr noundef %546)
  %548 = icmp sgt i32 %547, -1
  %549 = load i64, ptr %19, align 8
  %550 = trunc i64 %549 to i32
  %551 = icmp slt i32 %547, %550
  %552 = select i1 %548, i1 %551, i1 false
  br i1 %552, label %553, label %561

553:                                              ; preds = %535
  %554 = load ptr, ptr %254, align 8, !tbaa !62
  %555 = zext i32 %547 to i64
  %556 = getelementptr inbounds i32, ptr %554, i64 %555
  %557 = load i32, ptr %556, align 4, !tbaa !67
  %558 = add nsw i32 %310, -1
  %559 = icmp eq i32 %557, %558
  %560 = select i1 %559, i32 %547, i32 %531
  br label %561

561:                                              ; preds = %553, %535, %533
  %562 = phi i32 [ %531, %533 ], [ %531, %535 ], [ %560, %553 ]
  %563 = icmp slt i32 %530, 0
  br i1 %563, label %564, label %588

564:                                              ; preds = %561
  %565 = sdiv i32 %307, 2
  %566 = shl nsw i32 %565, 1
  %567 = mul nsw i32 %566, %313
  %568 = sub nsw i32 %567, %214
  %569 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %570 = mul nsw i32 %568, %223
  %571 = add nsw i32 %570, %325
  %572 = sext i32 %571 to i64
  %573 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  %574 = call i32 %569(i64 noundef %572, ptr noundef %573)
  %575 = icmp sgt i32 %574, -1
  %576 = load i64, ptr %19, align 8
  %577 = trunc i64 %576 to i32
  %578 = icmp slt i32 %574, %577
  %579 = select i1 %575, i1 %578, i1 false
  br i1 %579, label %580, label %588

580:                                              ; preds = %564
  %581 = load ptr, ptr %254, align 8, !tbaa !62
  %582 = zext i32 %574 to i64
  %583 = getelementptr inbounds i32, ptr %581, i64 %582
  %584 = load i32, ptr %583, align 4, !tbaa !67
  %585 = add nsw i32 %310, -1
  %586 = icmp eq i32 %584, %585
  %587 = select i1 %586, i32 %574, i32 %530
  br label %588

588:                                              ; preds = %580, %564, %561
  %589 = phi i32 [ %530, %561 ], [ %530, %564 ], [ %587, %580 ]
  %590 = icmp slt i32 %529, 0
  br i1 %590, label %591, label %617

591:                                              ; preds = %588
  %592 = shl i32 %331, 1
  %593 = sub i32 %592, %327
  %594 = sdiv i32 %304, 2
  %595 = shl nsw i32 %594, 1
  %596 = mul nsw i32 %595, %313
  %597 = sub i32 %596, %219
  %598 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %599 = mul nsw i32 %593, %223
  %600 = add nsw i32 %597, %599
  %601 = sext i32 %600 to i64
  %602 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  %603 = call i32 %598(i64 noundef %601, ptr noundef %602)
  %604 = icmp sgt i32 %603, -1
  %605 = load i64, ptr %19, align 8
  %606 = trunc i64 %605 to i32
  %607 = icmp slt i32 %603, %606
  %608 = select i1 %604, i1 %607, i1 false
  br i1 %608, label %609, label %617

609:                                              ; preds = %591
  %610 = load ptr, ptr %254, align 8, !tbaa !62
  %611 = zext i32 %603 to i64
  %612 = getelementptr inbounds i32, ptr %610, i64 %611
  %613 = load i32, ptr %612, align 4, !tbaa !67
  %614 = add nsw i32 %310, -1
  %615 = icmp eq i32 %613, %614
  %616 = select i1 %615, i32 %603, i32 %529
  br label %617

617:                                              ; preds = %609, %591, %588
  %618 = phi i32 [ %529, %588 ], [ %529, %591 ], [ %616, %609 ]
  %619 = icmp slt i32 %528, 0
  br i1 %619, label %620, label %644

620:                                              ; preds = %617
  %621 = sdiv i32 %304, 2
  %622 = shl nsw i32 %621, 1
  %623 = mul nsw i32 %622, %313
  %624 = sub i32 %623, %219
  %625 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %626 = mul nsw i32 %337, %223
  %627 = add nsw i32 %624, %626
  %628 = sext i32 %627 to i64
  %629 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !137
  %630 = call i32 %625(i64 noundef %628, ptr noundef %629)
  %631 = icmp sgt i32 %630, -1
  %632 = load i64, ptr %19, align 8
  %633 = trunc i64 %632 to i32
  %634 = icmp slt i32 %630, %633
  %635 = select i1 %631, i1 %634, i1 false
  br i1 %635, label %636, label %644

636:                                              ; preds = %620
  %637 = load ptr, ptr %254, align 8, !tbaa !62
  %638 = zext i32 %630 to i64
  %639 = getelementptr inbounds i32, ptr %637, i64 %638
  %640 = load i32, ptr %639, align 4, !tbaa !67
  %641 = add nsw i32 %310, -1
  %642 = icmp eq i32 %640, %641
  %643 = select i1 %642, i32 %630, i32 %528
  br label %644

644:                                              ; preds = %636, %620, %617, %527
  %645 = phi i32 [ %528, %617 ], [ %528, %527 ], [ %528, %620 ], [ %643, %636 ]
  %646 = phi i32 [ %618, %617 ], [ %529, %527 ], [ %618, %620 ], [ %618, %636 ]
  %647 = phi i32 [ %589, %617 ], [ %530, %527 ], [ %589, %620 ], [ %589, %636 ]
  %648 = phi i32 [ %562, %617 ], [ %531, %527 ], [ %562, %620 ], [ %562, %636 ]
  %649 = load ptr, ptr %16, align 8, !tbaa !73
  %650 = getelementptr inbounds i32, ptr %649, i64 %300
  store i32 %648, ptr %650, align 4, !tbaa !67
  %651 = load ptr, ptr %258, align 8, !tbaa !74
  %652 = getelementptr inbounds i32, ptr %651, i64 %300
  store i32 %647, ptr %652, align 4, !tbaa !67
  %653 = load ptr, ptr %259, align 8, !tbaa !75
  %654 = getelementptr inbounds i32, ptr %653, i64 %300
  store i32 %646, ptr %654, align 4, !tbaa !67
  %655 = load ptr, ptr %260, align 8, !tbaa !76
  %656 = getelementptr inbounds i32, ptr %655, i64 %300
  store i32 %645, ptr %656, align 4, !tbaa !67
  %657 = add nuw nsw i64 %300, 1
  %658 = and i64 %657, 4294967295
  %659 = load i64, ptr %19, align 8, !tbaa !43
  %660 = icmp ugt i64 %659, %658
  br i1 %660, label %299, label %291, !llvm.loop !139

661:                                              ; preds = %136
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #31
  call void @cpu_timer_start(ptr noundef nonnull %5)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #31
  %662 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %663 = load i32, ptr %662, align 8, !tbaa !91
  %664 = mul nsw i32 %663, %663
  %665 = shl i32 2, %664
  %666 = sext i32 %665 to i64
  %667 = icmp slt i32 %665, 0
  br i1 %667, label %668, label %669

668:                                              ; preds = %661
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.142) #36
  unreachable

669:                                              ; preds = %661
  %670 = icmp ugt i32 %664, 30
  br i1 %670, label %676, label %671

671:                                              ; preds = %669
  %672 = shl nuw nsw i64 %666, 2
  %673 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %672) #35
  store i32 0, ptr %673, align 4, !tbaa !67
  %674 = getelementptr i32, ptr %673, i64 1
  %675 = add nsw i64 %672, -4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %674, i8 0, i64 %675, i1 false), !tbaa !67
  br label %676

676:                                              ; preds = %671, %669
  %677 = phi ptr [ %673, %671 ], [ null, %669 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #31
  %678 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 38
  store i32 0, ptr %678, align 8, !tbaa !55
  invoke void @_ZN4Mesh24calc_spatial_coordinatesEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef 0)
          to label %679 unwind label %741

679:                                              ; preds = %676
  %680 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 24
  invoke void @KDTree_Initialize(ptr noundef nonnull %680)
          to label %681 unwind label %741

681:                                              ; preds = %679
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #31
  %682 = load i64, ptr %19, align 8, !tbaa !43
  %683 = icmp eq i64 %682, 0
  br i1 %683, label %715, label %684

684:                                              ; preds = %681
  %685 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %686 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %687 = getelementptr inbounds %struct.TBounds, ptr %2, i64 0, i32 1
  %688 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %689 = getelementptr inbounds %struct.TVector, ptr %2, i64 0, i32 1
  %690 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %691 = getelementptr inbounds %struct.TBounds, ptr %2, i64 0, i32 1, i32 1
  br label %692

692:                                              ; preds = %710, %684
  %693 = phi i64 [ 0, %684 ], [ %712, %710 ]
  %694 = load ptr, ptr %685, align 8, !tbaa !44
  %695 = getelementptr inbounds double, ptr %694, i64 %693
  %696 = load double, ptr %695, align 8, !tbaa !45
  store double %696, ptr %2, align 8, !tbaa !117
  %697 = load double, ptr %695, align 8, !tbaa !45
  %698 = load ptr, ptr %686, align 8, !tbaa !44
  %699 = getelementptr inbounds double, ptr %698, i64 %693
  %700 = load double, ptr %699, align 8, !tbaa !45
  %701 = fadd double %697, %700
  store double %701, ptr %687, align 8, !tbaa !118
  %702 = load ptr, ptr %688, align 8, !tbaa !44
  %703 = getelementptr inbounds double, ptr %702, i64 %693
  %704 = load double, ptr %703, align 8, !tbaa !45
  store double %704, ptr %689, align 8, !tbaa !119
  %705 = load double, ptr %703, align 8, !tbaa !45
  %706 = load ptr, ptr %690, align 8, !tbaa !44
  %707 = getelementptr inbounds double, ptr %706, i64 %693
  %708 = load double, ptr %707, align 8, !tbaa !45
  %709 = fadd double %705, %708
  store double %709, ptr %691, align 8, !tbaa !120
  invoke void @KDTree_AddElement(ptr noundef nonnull %680, ptr noundef nonnull %2)
          to label %710 unwind label %739

710:                                              ; preds = %692
  %711 = add nuw nsw i64 %693, 1
  %712 = and i64 %711, 4294967295
  %713 = load i64, ptr %19, align 8, !tbaa !43
  %714 = icmp ugt i64 %713, %712
  br i1 %714, label %692, label %715, !llvm.loop !121

715:                                              ; preds = %710, %681
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #31
  %716 = load i64, ptr %5, align 8, !tbaa.struct !71
  %717 = getelementptr inbounds i8, ptr %5, i64 8
  %718 = load i64, ptr %717, align 8, !tbaa.struct !72
  %719 = invoke double @cpu_timer_stop(i64 %716, i64 %718)
          to label %720 unwind label %741

720:                                              ; preds = %715
  %721 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 17
  %722 = load double, ptr %721, align 8, !tbaa !45
  %723 = fadd double %719, %722
  store double %723, ptr %721, align 8, !tbaa !45
  invoke void @cpu_timer_start(ptr noundef nonnull %5)
          to label %724 unwind label %741

724:                                              ; preds = %720
  %725 = load i64, ptr %19, align 8, !tbaa !43
  %726 = icmp eq i64 %725, 0
  br i1 %726, label %738, label %727

727:                                              ; preds = %724
  %728 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %729 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %730 = getelementptr inbounds %struct.TBounds, ptr %6, i64 0, i32 1
  %731 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %732 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %733 = getelementptr inbounds %struct.TVector, ptr %6, i64 0, i32 1
  %734 = getelementptr inbounds %struct.TBounds, ptr %6, i64 0, i32 1, i32 1
  %735 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %736 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %737 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  br label %743

738:                                              ; preds = %883, %724
  invoke void @KDTree_Destroy(ptr noundef nonnull %680)
          to label %888 unwind label %741

739:                                              ; preds = %692
  %740 = landingpad { ptr, i32 }
          cleanup
  br label %899

741:                                              ; preds = %676, %715, %720, %738, %888, %679
  %742 = landingpad { ptr, i32 }
          cleanup
  br label %899

743:                                              ; preds = %727, %883
  %744 = phi i64 [ 0, %727 ], [ %885, %883 ]
  %745 = trunc i64 %744 to i32
  %746 = load ptr, ptr %16, align 8, !tbaa !73
  %747 = getelementptr inbounds i32, ptr %746, i64 %744
  store i32 %745, ptr %747, align 4, !tbaa !67
  %748 = load ptr, ptr %728, align 8, !tbaa !44
  %749 = getelementptr inbounds double, ptr %748, i64 %744
  %750 = load double, ptr %749, align 8, !tbaa !45
  %751 = load ptr, ptr %729, align 8, !tbaa !44
  %752 = getelementptr inbounds double, ptr %751, i64 %744
  %753 = load double, ptr %752, align 8, !tbaa !45
  %754 = fmul double %753, 2.500000e-01
  %755 = fsub double %750, %754
  store double %755, ptr %6, align 8, !tbaa !117
  %756 = load double, ptr %749, align 8, !tbaa !45
  %757 = load double, ptr %752, align 8, !tbaa !45
  %758 = fmul double %757, 2.500000e-01
  %759 = fsub double %756, %758
  store double %759, ptr %730, align 8, !tbaa !118
  %760 = load ptr, ptr %731, align 8, !tbaa !44
  %761 = getelementptr inbounds double, ptr %760, i64 %744
  %762 = load double, ptr %761, align 8, !tbaa !45
  %763 = load ptr, ptr %732, align 8, !tbaa !44
  %764 = getelementptr inbounds double, ptr %763, i64 %744
  %765 = load double, ptr %764, align 8, !tbaa !45
  %766 = fmul double %765, 2.500000e-01
  %767 = fadd double %762, %766
  store double %767, ptr %733, align 8, !tbaa !119
  %768 = load double, ptr %761, align 8, !tbaa !45
  %769 = load double, ptr %764, align 8, !tbaa !45
  %770 = fmul double %769, 2.500000e-01
  %771 = fadd double %768, %770
  store double %771, ptr %734, align 8, !tbaa !120
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %680, ptr noundef nonnull %7, ptr noundef %677, ptr noundef nonnull %6)
          to label %772 unwind label %779

772:                                              ; preds = %743
  %773 = load i32, ptr %7, align 4, !tbaa !67
  %774 = icmp eq i32 %773, 1
  br i1 %774, label %775, label %781

775:                                              ; preds = %772
  %776 = load i32, ptr %677, align 4, !tbaa !67
  %777 = load ptr, ptr %16, align 8, !tbaa !73
  %778 = getelementptr inbounds i32, ptr %777, i64 %744
  store i32 %776, ptr %778, align 4, !tbaa !67
  br label %781

779:                                              ; preds = %849, %815, %781, %743
  %780 = landingpad { ptr, i32 }
          cleanup
  br label %899

781:                                              ; preds = %775, %772
  %782 = load ptr, ptr %735, align 8, !tbaa !74
  %783 = getelementptr inbounds i32, ptr %782, i64 %744
  store i32 %745, ptr %783, align 4, !tbaa !67
  %784 = load ptr, ptr %728, align 8, !tbaa !44
  %785 = getelementptr inbounds double, ptr %784, i64 %744
  %786 = load double, ptr %785, align 8, !tbaa !45
  %787 = load ptr, ptr %729, align 8, !tbaa !44
  %788 = getelementptr inbounds double, ptr %787, i64 %744
  %789 = load double, ptr %788, align 8, !tbaa !45
  %790 = fmul double %789, 1.250000e+00
  %791 = fadd double %786, %790
  store double %791, ptr %6, align 8, !tbaa !117
  %792 = load double, ptr %785, align 8, !tbaa !45
  %793 = load double, ptr %788, align 8, !tbaa !45
  %794 = fmul double %793, 1.250000e+00
  %795 = fadd double %792, %794
  store double %795, ptr %730, align 8, !tbaa !118
  %796 = load ptr, ptr %731, align 8, !tbaa !44
  %797 = getelementptr inbounds double, ptr %796, i64 %744
  %798 = load double, ptr %797, align 8, !tbaa !45
  %799 = load ptr, ptr %732, align 8, !tbaa !44
  %800 = getelementptr inbounds double, ptr %799, i64 %744
  %801 = load double, ptr %800, align 8, !tbaa !45
  %802 = fmul double %801, 2.500000e-01
  %803 = fadd double %798, %802
  store double %803, ptr %733, align 8, !tbaa !119
  %804 = load double, ptr %797, align 8, !tbaa !45
  %805 = load double, ptr %800, align 8, !tbaa !45
  %806 = fmul double %805, 2.500000e-01
  %807 = fadd double %804, %806
  store double %807, ptr %734, align 8, !tbaa !120
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %680, ptr noundef nonnull %7, ptr noundef %677, ptr noundef nonnull %6)
          to label %808 unwind label %779

808:                                              ; preds = %781
  %809 = load i32, ptr %7, align 4, !tbaa !67
  %810 = icmp eq i32 %809, 1
  br i1 %810, label %811, label %815

811:                                              ; preds = %808
  %812 = load i32, ptr %677, align 4, !tbaa !67
  %813 = load ptr, ptr %735, align 8, !tbaa !74
  %814 = getelementptr inbounds i32, ptr %813, i64 %744
  store i32 %812, ptr %814, align 4, !tbaa !67
  br label %815

815:                                              ; preds = %811, %808
  %816 = load ptr, ptr %736, align 8, !tbaa !75
  %817 = getelementptr inbounds i32, ptr %816, i64 %744
  store i32 %745, ptr %817, align 4, !tbaa !67
  %818 = load ptr, ptr %728, align 8, !tbaa !44
  %819 = getelementptr inbounds double, ptr %818, i64 %744
  %820 = load double, ptr %819, align 8, !tbaa !45
  %821 = load ptr, ptr %729, align 8, !tbaa !44
  %822 = getelementptr inbounds double, ptr %821, i64 %744
  %823 = load double, ptr %822, align 8, !tbaa !45
  %824 = fmul double %823, 2.500000e-01
  %825 = fadd double %820, %824
  store double %825, ptr %6, align 8, !tbaa !117
  %826 = load double, ptr %819, align 8, !tbaa !45
  %827 = load double, ptr %822, align 8, !tbaa !45
  %828 = fmul double %827, 2.500000e-01
  %829 = fadd double %826, %828
  store double %829, ptr %730, align 8, !tbaa !118
  %830 = load ptr, ptr %731, align 8, !tbaa !44
  %831 = getelementptr inbounds double, ptr %830, i64 %744
  %832 = load double, ptr %831, align 8, !tbaa !45
  %833 = load ptr, ptr %732, align 8, !tbaa !44
  %834 = getelementptr inbounds double, ptr %833, i64 %744
  %835 = load double, ptr %834, align 8, !tbaa !45
  %836 = fmul double %835, 2.500000e-01
  %837 = fsub double %832, %836
  store double %837, ptr %733, align 8, !tbaa !119
  %838 = load double, ptr %831, align 8, !tbaa !45
  %839 = load double, ptr %834, align 8, !tbaa !45
  %840 = fmul double %839, 2.500000e-01
  %841 = fsub double %838, %840
  store double %841, ptr %734, align 8, !tbaa !120
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %680, ptr noundef nonnull %7, ptr noundef %677, ptr noundef nonnull %6)
          to label %842 unwind label %779

842:                                              ; preds = %815
  %843 = load i32, ptr %7, align 4, !tbaa !67
  %844 = icmp eq i32 %843, 1
  br i1 %844, label %845, label %849

845:                                              ; preds = %842
  %846 = load i32, ptr %677, align 4, !tbaa !67
  %847 = load ptr, ptr %736, align 8, !tbaa !75
  %848 = getelementptr inbounds i32, ptr %847, i64 %744
  store i32 %846, ptr %848, align 4, !tbaa !67
  br label %849

849:                                              ; preds = %845, %842
  %850 = load ptr, ptr %737, align 8, !tbaa !76
  %851 = getelementptr inbounds i32, ptr %850, i64 %744
  store i32 %745, ptr %851, align 4, !tbaa !67
  %852 = load ptr, ptr %728, align 8, !tbaa !44
  %853 = getelementptr inbounds double, ptr %852, i64 %744
  %854 = load double, ptr %853, align 8, !tbaa !45
  %855 = load ptr, ptr %729, align 8, !tbaa !44
  %856 = getelementptr inbounds double, ptr %855, i64 %744
  %857 = load double, ptr %856, align 8, !tbaa !45
  %858 = fmul double %857, 2.500000e-01
  %859 = fadd double %854, %858
  store double %859, ptr %6, align 8, !tbaa !117
  %860 = load double, ptr %853, align 8, !tbaa !45
  %861 = load double, ptr %856, align 8, !tbaa !45
  %862 = fmul double %861, 2.500000e-01
  %863 = fadd double %860, %862
  store double %863, ptr %730, align 8, !tbaa !118
  %864 = load ptr, ptr %731, align 8, !tbaa !44
  %865 = getelementptr inbounds double, ptr %864, i64 %744
  %866 = load double, ptr %865, align 8, !tbaa !45
  %867 = load ptr, ptr %732, align 8, !tbaa !44
  %868 = getelementptr inbounds double, ptr %867, i64 %744
  %869 = load double, ptr %868, align 8, !tbaa !45
  %870 = fmul double %869, 1.250000e+00
  %871 = fadd double %866, %870
  store double %871, ptr %733, align 8, !tbaa !119
  %872 = load double, ptr %865, align 8, !tbaa !45
  %873 = load double, ptr %868, align 8, !tbaa !45
  %874 = fmul double %873, 1.250000e+00
  %875 = fadd double %872, %874
  store double %875, ptr %734, align 8, !tbaa !120
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %680, ptr noundef nonnull %7, ptr noundef %677, ptr noundef nonnull %6)
          to label %876 unwind label %779

876:                                              ; preds = %849
  %877 = load i32, ptr %7, align 4, !tbaa !67
  %878 = icmp eq i32 %877, 1
  br i1 %878, label %879, label %883

879:                                              ; preds = %876
  %880 = load i32, ptr %677, align 4, !tbaa !67
  %881 = load ptr, ptr %737, align 8, !tbaa !76
  %882 = getelementptr inbounds i32, ptr %881, i64 %744
  store i32 %880, ptr %882, align 4, !tbaa !67
  br label %883

883:                                              ; preds = %876, %879
  %884 = add nuw nsw i64 %744, 1
  %885 = and i64 %884, 4294967295
  %886 = load i64, ptr %19, align 8, !tbaa !43
  %887 = icmp ugt i64 %886, %885
  br i1 %887, label %743, label %738, !llvm.loop !140

888:                                              ; preds = %738
  %889 = load i64, ptr %5, align 8, !tbaa.struct !71
  %890 = load i64, ptr %717, align 8, !tbaa.struct !72
  %891 = invoke double @cpu_timer_stop(i64 %889, i64 %890)
          to label %892 unwind label %741

892:                                              ; preds = %888
  %893 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 18
  %894 = load double, ptr %893, align 8, !tbaa !45
  %895 = fadd double %891, %894
  store double %895, ptr %893, align 8, !tbaa !45
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #31
  %896 = icmp eq ptr %677, null
  br i1 %896, label %898, label %897

897:                                              ; preds = %892
  call void @_ZdlPv(ptr noundef nonnull %677) #33
  br label %898

898:                                              ; preds = %892, %897
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #31
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #31
  br label %904

899:                                              ; preds = %739, %741, %779
  %900 = phi { ptr, i32 } [ %780, %779 ], [ %740, %739 ], [ %742, %741 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #31
  %901 = icmp eq ptr %677, null
  br i1 %901, label %903, label %902

902:                                              ; preds = %899
  call void @_ZdlPv(ptr noundef nonnull %677) #33
  br label %903

903:                                              ; preds = %902, %899
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #31
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #31
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #31
  resume { ptr, i32 } %900

904:                                              ; preds = %291, %898, %136, %1
  %905 = load i64, ptr %3, align 8, !tbaa.struct !71
  %906 = getelementptr inbounds i8, ptr %3, i64 8
  %907 = load i64, ptr %906, align 8, !tbaa.struct !72
  %908 = call double @cpu_timer_stop(i64 %905, i64 %907)
  %909 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 1
  %910 = load double, ptr %909, align 8, !tbaa !45
  %911 = fadd double %908, %910
  store double %911, ptr %909, align 8, !tbaa !45
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #31
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN4Mesh12kdtree_setupEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) local_unnamed_addr #6 align 2 {
  %2 = alloca %struct.TBounds, align 8
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 24
  tail call void @KDTree_Initialize(ptr noundef nonnull %3)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #31
  %4 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %5 = load i64, ptr %4, align 8, !tbaa !43
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %10 = getelementptr inbounds %struct.TBounds, ptr %2, i64 0, i32 1
  %11 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %12 = getelementptr inbounds %struct.TVector, ptr %2, i64 0, i32 1
  %13 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %14 = getelementptr inbounds %struct.TBounds, ptr %2, i64 0, i32 1, i32 1
  br label %16

15:                                               ; preds = %16, %1
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #31
  ret void

16:                                               ; preds = %7, %16
  %17 = phi i64 [ 0, %7 ], [ %35, %16 ]
  %18 = load ptr, ptr %8, align 8, !tbaa !44
  %19 = getelementptr inbounds double, ptr %18, i64 %17
  %20 = load double, ptr %19, align 8, !tbaa !45
  store double %20, ptr %2, align 8, !tbaa !117
  %21 = load double, ptr %19, align 8, !tbaa !45
  %22 = load ptr, ptr %9, align 8, !tbaa !44
  %23 = getelementptr inbounds double, ptr %22, i64 %17
  %24 = load double, ptr %23, align 8, !tbaa !45
  %25 = fadd double %21, %24
  store double %25, ptr %10, align 8, !tbaa !118
  %26 = load ptr, ptr %11, align 8, !tbaa !44
  %27 = getelementptr inbounds double, ptr %26, i64 %17
  %28 = load double, ptr %27, align 8, !tbaa !45
  store double %28, ptr %12, align 8, !tbaa !119
  %29 = load double, ptr %27, align 8, !tbaa !45
  %30 = load ptr, ptr %13, align 8, !tbaa !44
  %31 = getelementptr inbounds double, ptr %30, i64 %17
  %32 = load double, ptr %31, align 8, !tbaa !45
  %33 = fadd double %29, %32
  store double %33, ptr %14, align 8, !tbaa !120
  call void @KDTree_AddElement(ptr noundef nonnull %3, ptr noundef nonnull %2)
  %34 = add nuw nsw i64 %17, 1
  %35 = and i64 %34, 4294967295
  %36 = load i64, ptr %4, align 8, !tbaa !43
  %37 = icmp ugt i64 %36, %35
  br i1 %37, label %16, label %15, !llvm.loop !121
}

declare void @KDTree_QueryCircleIntersect_Double(ptr noundef, ptr noundef, ptr noundef, double noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @KDTree_Destroy(ptr noundef) local_unnamed_addr #7

; Function Attrs: uwtable
define dso_local noundef i64 @_ZN4Mesh13refine_smoothERSt6vectorIiSaIiEERiS4_(ptr nocapture noundef nonnull align 8 dereferenceable(2288) %0, ptr nocapture noundef nonnull align 8 dereferenceable(24) %1, ptr nocapture noundef nonnull align 4 dereferenceable(4) %2, ptr nocapture noundef nonnull align 4 dereferenceable(4) %3) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.std::vector", align 8
  %6 = alloca %struct.timeval, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #31
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #31
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %1, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !58
  %9 = load ptr, ptr %1, align 8, !tbaa !59
  %10 = ptrtoint ptr %8 to i64
  %11 = ptrtoint ptr %9 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq ptr %8, %9
  br i1 %13, label %24, label %14

14:                                               ; preds = %4
  %15 = icmp ugt i64 %12, 9223372036854775804
  br i1 %15, label %16, label %18, !prof !124

16:                                               ; preds = %14
  %17 = icmp slt i64 %12, 0
  br i1 %17, label %647, label %649

18:                                               ; preds = %14
  %19 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %12) #35
          to label %20 unwind label %124

20:                                               ; preds = %18
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %19, ptr align 4 %9, i64 %12, i1 false)
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %22 = load i64, ptr %21, align 8, !tbaa !43
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %92, label %29

24:                                               ; preds = %4
  %25 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %26 = load i64, ptr %25, align 8, !tbaa !43
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %24
  store i32 0, ptr %2, align 4, !tbaa !67
  store i32 0, ptr %3, align 4, !tbaa !67
  br label %97

29:                                               ; preds = %24, %20
  %30 = phi i64 [ %26, %24 ], [ %22, %20 ]
  %31 = phi ptr [ %25, %24 ], [ %21, %20 ]
  %32 = phi ptr [ null, %24 ], [ %19, %20 ]
  %33 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %38 = load ptr, ptr %37, align 8
  br label %39

39:                                               ; preds = %86, %29
  %40 = phi i64 [ 0, %29 ], [ %90, %86 ]
  %41 = phi i32 [ 0, %29 ], [ %87, %86 ]
  %42 = phi i32 [ 0, %29 ], [ %88, %86 ]
  %43 = getelementptr inbounds i32, ptr %32, i64 %40
  %44 = load i32, ptr %43, align 4, !tbaa !67
  %45 = icmp slt i32 %44, 0
  br i1 %45, label %46, label %76

46:                                               ; preds = %39
  %47 = getelementptr inbounds i32, ptr %34, i64 %40
  %48 = load i32, ptr %47, align 4, !tbaa !67
  %49 = icmp eq i32 %48, 1
  %50 = getelementptr inbounds i32, ptr %36, i64 %40
  %51 = load i32, ptr %50, align 4, !tbaa !67
  %52 = getelementptr inbounds i32, ptr %38, i64 %40
  %53 = load i32, ptr %52, align 4, !tbaa !67
  br i1 %49, label %54, label %62

54:                                               ; preds = %46
  %55 = and i32 %51, 1
  %56 = icmp ne i32 %55, 0
  %57 = and i32 %53, 1
  %58 = icmp ne i32 %57, 0
  %59 = select i1 %56, i1 true, i1 %58
  %60 = sext i1 %59 to i32
  %61 = add nsw i32 %41, %60
  br label %86

62:                                               ; preds = %46
  %63 = and i32 %51, -2147483647
  %64 = icmp eq i32 %63, 1
  %65 = and i32 %53, -2147483647
  %66 = icmp eq i32 %65, 1
  %67 = and i1 %64, %66
  br i1 %67, label %86, label %68

68:                                               ; preds = %62
  %69 = and i32 %51, 1
  %70 = icmp ne i32 %69, 0
  %71 = and i32 %53, 1
  %72 = icmp ne i32 %71, 0
  %73 = select i1 %70, i1 true, i1 %72
  %74 = sext i1 %73 to i32
  %75 = add nsw i32 %41, %74
  br label %86

76:                                               ; preds = %39
  %77 = icmp eq i32 %44, 0
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds i32, ptr %34, i64 %40
  %80 = load i32, ptr %79, align 4, !tbaa !67
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %84

82:                                               ; preds = %78
  %83 = add nsw i32 %42, 3
  br label %86

84:                                               ; preds = %78
  %85 = add nsw i32 %42, 1
  br label %86

86:                                               ; preds = %84, %82, %76, %68, %62, %54
  %87 = phi i32 [ %41, %82 ], [ %41, %84 ], [ %41, %76 ], [ %75, %68 ], [ %61, %54 ], [ %41, %62 ]
  %88 = phi i32 [ %83, %82 ], [ %85, %84 ], [ %42, %76 ], [ %42, %68 ], [ %42, %54 ], [ %42, %62 ]
  %89 = add nuw nsw i64 %40, 1
  %90 = and i64 %89, 4294967295
  %91 = icmp ugt i64 %30, %90
  br i1 %91, label %39, label %92, !llvm.loop !141

92:                                               ; preds = %86, %20
  %93 = phi i32 [ 0, %20 ], [ %88, %86 ]
  %94 = phi i32 [ 0, %20 ], [ %87, %86 ]
  %95 = phi ptr [ %21, %20 ], [ %31, %86 ]
  %96 = phi ptr [ %19, %20 ], [ %32, %86 ]
  store i32 %93, ptr %2, align 4, !tbaa !67
  store i32 %94, ptr %3, align 4, !tbaa !67
  tail call void @_ZdlPv(ptr noundef nonnull %96) #33
  br label %97

97:                                               ; preds = %28, %92
  %98 = phi ptr [ %95, %92 ], [ %25, %28 ]
  %99 = load i32, ptr %2, align 4, !tbaa !67
  invoke void @cpu_timer_start(ptr noundef nonnull %6)
          to label %100 unwind label %124

100:                                              ; preds = %97
  %101 = icmp sgt i32 %99, 0
  br i1 %101, label %102, label %345

102:                                              ; preds = %100
  %103 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %104 = load i32, ptr %103, align 8, !tbaa !91
  %105 = icmp sgt i32 %104, 1
  br i1 %105, label %106, label %345

106:                                              ; preds = %102
  %107 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 11
  %108 = load i32, ptr %107, align 4, !tbaa !95
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  %111 = select i1 %109, ptr %98, ptr %110
  %112 = load i64, ptr %111, align 8, !tbaa !56
  %113 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 5, i64 1
  %114 = load i32, ptr %113, align 4, !tbaa !67
  %115 = add nsw i32 %114, 1
  store i32 %115, ptr %113, align 4, !tbaa !67
  %116 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %5, i64 0, i32 1
  %117 = load ptr, ptr %116, align 8, !tbaa !58
  %118 = load ptr, ptr %5, align 8, !tbaa !59
  %119 = ptrtoint ptr %117 to i64
  %120 = ptrtoint ptr %118 to i64
  %121 = sub i64 %119, %120
  %122 = ashr exact i64 %121, 2
  %123 = icmp ugt i64 %112, %122
  br i1 %123, label %126, label %128

124:                                              ; preds = %647, %649, %651, %355, %18, %747, %97
  %125 = landingpad { ptr, i32 }
          cleanup
  br label %772

126:                                              ; preds = %106
  %127 = sub i64 %112, %122
  invoke void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %5, i64 noundef %127)
          to label %132 unwind label %339

128:                                              ; preds = %106
  %129 = icmp ult i64 %112, %122
  %130 = getelementptr inbounds i32, ptr %118, i64 %112
  %131 = select i1 %129, ptr %130, ptr %117
  br label %137

132:                                              ; preds = %126
  %133 = load ptr, ptr %5, align 8, !tbaa !59
  %134 = load ptr, ptr %116, align 8, !tbaa !58
  %135 = load i32, ptr %103, align 8
  %136 = icmp sgt i32 %135, 1
  br i1 %136, label %137, label %345

137:                                              ; preds = %128, %132
  %138 = phi ptr [ %133, %132 ], [ %118, %128 ]
  %139 = phi ptr [ %134, %132 ], [ %131, %128 ]
  %140 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %1, i64 0, i32 2
  %141 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %5, i64 0, i32 2
  %142 = load i64, ptr %98, align 8, !tbaa !43
  %143 = icmp eq i64 %142, 0
  %144 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %145 = load ptr, ptr %144, align 8
  %146 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %147 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %148 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %149 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %150 = load ptr, ptr %141, align 8, !tbaa !110
  %151 = load ptr, ptr %1, align 8, !tbaa !59
  %152 = load ptr, ptr %7, align 8, !tbaa !58
  %153 = load ptr, ptr %140, align 8, !tbaa !110
  br i1 %143, label %337, label %154

154:                                              ; preds = %137, %329
  %155 = phi ptr [ %158, %329 ], [ %153, %137 ]
  %156 = phi ptr [ %161, %329 ], [ %152, %137 ]
  %157 = phi ptr [ %160, %329 ], [ %151, %137 ]
  %158 = phi ptr [ %155, %329 ], [ %150, %137 ]
  %159 = phi i32 [ %330, %329 ], [ 1, %137 ]
  %160 = phi ptr [ %157, %329 ], [ %138, %137 ]
  %161 = phi ptr [ %156, %329 ], [ %139, %137 ]
  store ptr %160, ptr %1, align 8, !tbaa !59
  store ptr %161, ptr %7, align 8, !tbaa !58
  store ptr %158, ptr %140, align 8, !tbaa !110
  %162 = load ptr, ptr %146, align 8
  %163 = load i64, ptr %110, align 8
  %164 = trunc i64 %163 to i32
  %165 = load ptr, ptr %147, align 8
  %166 = load ptr, ptr %148, align 8
  %167 = load ptr, ptr %149, align 8
  br label %168

168:                                              ; preds = %154, %324
  %169 = phi i64 [ 0, %154 ], [ %327, %324 ]
  %170 = phi i32 [ 0, %154 ], [ %325, %324 ]
  %171 = getelementptr inbounds i32, ptr %145, i64 %169
  %172 = load i32, ptr %171, align 4, !tbaa !67
  %173 = getelementptr inbounds i32, ptr %157, i64 %169
  %174 = load i32, ptr %173, align 4, !tbaa !67
  %175 = getelementptr inbounds i32, ptr %160, i64 %169
  store i32 %174, ptr %175, align 4, !tbaa !67
  %176 = load i32, ptr %173, align 4, !tbaa !67
  %177 = icmp sgt i32 %176, 0
  br i1 %177, label %324, label %178

178:                                              ; preds = %168
  %179 = getelementptr inbounds i32, ptr %162, i64 %169
  %180 = load i32, ptr %179, align 4, !tbaa !67
  %181 = icmp sgt i32 %180, -1
  %182 = icmp slt i32 %180, %164
  %183 = select i1 %181, i1 %182, i1 false
  br i1 %183, label %184, label %214

184:                                              ; preds = %178
  %185 = zext i32 %180 to i64
  %186 = getelementptr inbounds i32, ptr %145, i64 %185
  %187 = load i32, ptr %186, align 4, !tbaa !67
  %188 = getelementptr inbounds i32, ptr %157, i64 %185
  %189 = load i32, ptr %188, align 4, !tbaa !67
  %190 = icmp sgt i32 %189, 0
  %191 = zext i1 %190 to i32
  %192 = add nsw i32 %187, %191
  %193 = sub nsw i32 %192, %172
  %194 = icmp sgt i32 %193, 1
  br i1 %194, label %322, label %195

195:                                              ; preds = %184
  %196 = icmp sgt i32 %187, %172
  br i1 %196, label %197, label %214

197:                                              ; preds = %195
  %198 = getelementptr inbounds i32, ptr %165, i64 %185
  %199 = load i32, ptr %198, align 4, !tbaa !67
  %200 = icmp sgt i32 %199, -1
  %201 = icmp slt i32 %199, %164
  %202 = select i1 %200, i1 %201, i1 false
  br i1 %202, label %203, label %214

203:                                              ; preds = %197
  %204 = zext i32 %199 to i64
  %205 = getelementptr inbounds i32, ptr %145, i64 %204
  %206 = load i32, ptr %205, align 4, !tbaa !67
  %207 = getelementptr inbounds i32, ptr %157, i64 %204
  %208 = load i32, ptr %207, align 4, !tbaa !67
  %209 = icmp sgt i32 %208, 0
  %210 = zext i1 %209 to i32
  %211 = add nsw i32 %206, %210
  %212 = sub nsw i32 %211, %172
  %213 = icmp slt i32 %212, 2
  br i1 %213, label %214, label %322

214:                                              ; preds = %203, %197, %195, %178
  %215 = getelementptr inbounds i32, ptr %166, i64 %169
  %216 = load i32, ptr %215, align 4, !tbaa !67
  %217 = icmp sgt i32 %216, -1
  %218 = icmp slt i32 %216, %164
  %219 = select i1 %217, i1 %218, i1 false
  br i1 %219, label %220, label %250

220:                                              ; preds = %214
  %221 = zext i32 %216 to i64
  %222 = getelementptr inbounds i32, ptr %145, i64 %221
  %223 = load i32, ptr %222, align 4, !tbaa !67
  %224 = getelementptr inbounds i32, ptr %157, i64 %221
  %225 = load i32, ptr %224, align 4, !tbaa !67
  %226 = icmp sgt i32 %225, 0
  %227 = zext i1 %226 to i32
  %228 = add nsw i32 %223, %227
  %229 = sub nsw i32 %228, %172
  %230 = icmp sgt i32 %229, 1
  br i1 %230, label %322, label %231

231:                                              ; preds = %220
  %232 = icmp sgt i32 %223, %172
  br i1 %232, label %233, label %250

233:                                              ; preds = %231
  %234 = getelementptr inbounds i32, ptr %165, i64 %221
  %235 = load i32, ptr %234, align 4, !tbaa !67
  %236 = icmp sgt i32 %235, -1
  %237 = icmp slt i32 %235, %164
  %238 = select i1 %236, i1 %237, i1 false
  br i1 %238, label %239, label %250

239:                                              ; preds = %233
  %240 = zext i32 %235 to i64
  %241 = getelementptr inbounds i32, ptr %145, i64 %240
  %242 = load i32, ptr %241, align 4, !tbaa !67
  %243 = getelementptr inbounds i32, ptr %157, i64 %240
  %244 = load i32, ptr %243, align 4, !tbaa !67
  %245 = icmp sgt i32 %244, 0
  %246 = zext i1 %245 to i32
  %247 = add nsw i32 %242, %246
  %248 = sub nsw i32 %247, %172
  %249 = icmp slt i32 %248, 2
  br i1 %249, label %250, label %322

250:                                              ; preds = %239, %233, %231, %214
  %251 = getelementptr inbounds i32, ptr %165, i64 %169
  %252 = load i32, ptr %251, align 4, !tbaa !67
  %253 = icmp sgt i32 %252, -1
  %254 = icmp slt i32 %252, %164
  %255 = select i1 %253, i1 %254, i1 false
  br i1 %255, label %256, label %286

256:                                              ; preds = %250
  %257 = zext i32 %252 to i64
  %258 = getelementptr inbounds i32, ptr %145, i64 %257
  %259 = load i32, ptr %258, align 4, !tbaa !67
  %260 = getelementptr inbounds i32, ptr %157, i64 %257
  %261 = load i32, ptr %260, align 4, !tbaa !67
  %262 = icmp sgt i32 %261, 0
  %263 = zext i1 %262 to i32
  %264 = add nsw i32 %259, %263
  %265 = sub nsw i32 %264, %172
  %266 = icmp sgt i32 %265, 1
  br i1 %266, label %322, label %267

267:                                              ; preds = %256
  %268 = icmp sgt i32 %259, %172
  br i1 %268, label %269, label %286

269:                                              ; preds = %267
  %270 = getelementptr inbounds i32, ptr %166, i64 %257
  %271 = load i32, ptr %270, align 4, !tbaa !67
  %272 = icmp sgt i32 %271, -1
  %273 = icmp slt i32 %271, %164
  %274 = select i1 %272, i1 %273, i1 false
  br i1 %274, label %275, label %286

275:                                              ; preds = %269
  %276 = zext i32 %271 to i64
  %277 = getelementptr inbounds i32, ptr %145, i64 %276
  %278 = load i32, ptr %277, align 4, !tbaa !67
  %279 = getelementptr inbounds i32, ptr %157, i64 %276
  %280 = load i32, ptr %279, align 4, !tbaa !67
  %281 = icmp sgt i32 %280, 0
  %282 = zext i1 %281 to i32
  %283 = add nsw i32 %278, %282
  %284 = sub nsw i32 %283, %172
  %285 = icmp slt i32 %284, 2
  br i1 %285, label %286, label %322

286:                                              ; preds = %275, %269, %267, %250
  %287 = getelementptr inbounds i32, ptr %167, i64 %169
  %288 = load i32, ptr %287, align 4, !tbaa !67
  %289 = icmp sgt i32 %288, -1
  %290 = icmp slt i32 %288, %164
  %291 = select i1 %289, i1 %290, i1 false
  br i1 %291, label %292, label %324

292:                                              ; preds = %286
  %293 = zext i32 %288 to i64
  %294 = getelementptr inbounds i32, ptr %145, i64 %293
  %295 = load i32, ptr %294, align 4, !tbaa !67
  %296 = getelementptr inbounds i32, ptr %157, i64 %293
  %297 = load i32, ptr %296, align 4, !tbaa !67
  %298 = icmp sgt i32 %297, 0
  %299 = zext i1 %298 to i32
  %300 = add nsw i32 %295, %299
  %301 = sub nsw i32 %300, %172
  %302 = icmp sgt i32 %301, 1
  br i1 %302, label %322, label %303

303:                                              ; preds = %292
  %304 = icmp sgt i32 %295, %172
  br i1 %304, label %305, label %324

305:                                              ; preds = %303
  %306 = getelementptr inbounds i32, ptr %166, i64 %293
  %307 = load i32, ptr %306, align 4, !tbaa !67
  %308 = icmp sgt i32 %307, -1
  %309 = icmp slt i32 %307, %164
  %310 = select i1 %308, i1 %309, i1 false
  br i1 %310, label %311, label %324

311:                                              ; preds = %305
  %312 = zext i32 %307 to i64
  %313 = getelementptr inbounds i32, ptr %145, i64 %312
  %314 = load i32, ptr %313, align 4, !tbaa !67
  %315 = getelementptr inbounds i32, ptr %157, i64 %312
  %316 = load i32, ptr %315, align 4, !tbaa !67
  %317 = icmp sgt i32 %316, 0
  %318 = zext i1 %317 to i32
  %319 = add nsw i32 %314, %318
  %320 = sub nsw i32 %319, %172
  %321 = icmp slt i32 %320, 2
  br i1 %321, label %324, label %322

322:                                              ; preds = %184, %220, %256, %292, %311, %275, %239, %203
  store i32 1, ptr %175, align 4, !tbaa !67
  %323 = add nsw i32 %170, 1
  br label %324

324:                                              ; preds = %322, %311, %305, %303, %286, %168
  %325 = phi i32 [ %170, %168 ], [ %170, %286 ], [ %170, %303 ], [ %170, %305 ], [ %170, %311 ], [ %323, %322 ]
  %326 = add nuw nsw i64 %169, 1
  %327 = and i64 %326, 4294967295
  %328 = icmp ugt i64 %142, %327
  br i1 %328, label %168, label %329, !llvm.loop !142

329:                                              ; preds = %324
  %330 = add nuw nsw i32 %159, 1
  %331 = load i32, ptr %2, align 4, !tbaa !67
  %332 = add nsw i32 %331, %325
  store i32 %332, ptr %2, align 4, !tbaa !67
  %333 = icmp sgt i32 %325, 0
  %334 = load i32, ptr %103, align 8
  %335 = icmp slt i32 %330, %334
  %336 = select i1 %333, i1 %335, i1 false
  br i1 %336, label %154, label %341, !llvm.loop !143

337:                                              ; preds = %137
  %338 = load i32, ptr %2, align 4, !tbaa !67
  store ptr %138, ptr %1, align 8, !tbaa !59
  store ptr %139, ptr %7, align 8, !tbaa !58
  store ptr %150, ptr %140, align 8, !tbaa !110
  store i32 %338, ptr %2, align 4, !tbaa !67
  br label %341

339:                                              ; preds = %126
  %340 = landingpad { ptr, i32 }
          cleanup
  br label %772

341:                                              ; preds = %329, %337
  %342 = phi ptr [ %152, %337 ], [ %156, %329 ]
  %343 = phi ptr [ %151, %337 ], [ %157, %329 ]
  %344 = phi ptr [ %153, %337 ], [ %155, %329 ]
  store ptr %344, ptr %141, align 8, !tbaa !110
  store ptr %343, ptr %5, align 8, !tbaa !59
  store ptr %342, ptr %116, align 8, !tbaa !58
  br label %345

345:                                              ; preds = %132, %341, %102, %100
  %346 = load ptr, ptr %5, align 8, !tbaa !59
  %347 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %5, i64 0, i32 1
  %348 = load ptr, ptr %347, align 8, !tbaa !58
  %349 = icmp eq ptr %348, %346
  br i1 %349, label %351, label %350

350:                                              ; preds = %345
  store ptr %346, ptr %347, align 8, !tbaa !58
  br label %351

351:                                              ; preds = %345, %350
  %352 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  %353 = load i64, ptr %352, align 8, !tbaa !78
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %359, label %355

355:                                              ; preds = %351
  invoke void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %5, i64 noundef %353)
          to label %356 unwind label %124

356:                                              ; preds = %355
  %357 = load ptr, ptr %5, align 8, !tbaa !59
  %358 = load ptr, ptr %347, align 8, !tbaa !58
  br label %359

359:                                              ; preds = %351, %356
  %360 = phi ptr [ %358, %356 ], [ %346, %351 ]
  %361 = phi ptr [ %357, %356 ], [ %346, %351 ]
  %362 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %5, i64 0, i32 2
  %363 = load ptr, ptr %362, align 8, !tbaa !110
  %364 = load ptr, ptr %1, align 8, !tbaa !59
  %365 = load ptr, ptr %7, align 8, !tbaa !58
  %366 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %1, i64 0, i32 2
  %367 = load ptr, ptr %366, align 8, !tbaa !110
  store ptr %361, ptr %1, align 8, !tbaa !59
  store ptr %360, ptr %7, align 8, !tbaa !58
  store ptr %363, ptr %366, align 8, !tbaa !110
  %368 = load i64, ptr %98, align 8, !tbaa !43
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %637, label %370

370:                                              ; preds = %359
  %371 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %372 = load ptr, ptr %371, align 8
  %373 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %374 = load ptr, ptr %373, align 8
  %375 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %376 = load ptr, ptr %375, align 8
  %377 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %378 = load ptr, ptr %377, align 8
  %379 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %380 = load ptr, ptr %379, align 8
  %381 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %382 = load ptr, ptr %381, align 8
  %383 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %384 = load ptr, ptr %383, align 8
  br label %400

385:                                              ; preds = %534
  store ptr %361, ptr %5, align 8, !tbaa !59
  store ptr %360, ptr %347, align 8, !tbaa !58
  store ptr %363, ptr %362, align 8, !tbaa !110
  store ptr %364, ptr %1, align 8, !tbaa !59
  store ptr %365, ptr %7, align 8, !tbaa !58
  store ptr %367, ptr %366, align 8, !tbaa !110
  %386 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %387 = load ptr, ptr %386, align 8
  %388 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %389 = load ptr, ptr %388, align 8
  %390 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %391 = load ptr, ptr %390, align 8
  %392 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %393 = load ptr, ptr %392, align 8
  %394 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %395 = load ptr, ptr %394, align 8
  %396 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %397 = load ptr, ptr %396, align 8
  %398 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %399 = load ptr, ptr %398, align 8
  br label %549

400:                                              ; preds = %370, %534
  %401 = phi i64 [ 0, %370 ], [ %536, %534 ]
  %402 = getelementptr inbounds i32, ptr %364, i64 %401
  %403 = load i32, ptr %402, align 4, !tbaa !67
  %404 = getelementptr inbounds i32, ptr %361, i64 %401
  store i32 %403, ptr %404, align 4, !tbaa !67
  %405 = load i32, ptr %402, align 4, !tbaa !67
  %406 = icmp ult i32 %405, -999999
  br i1 %406, label %534, label %407

407:                                              ; preds = %400
  %408 = getelementptr inbounds i32, ptr %372, i64 %401
  %409 = load i32, ptr %408, align 4, !tbaa !67
  %410 = getelementptr inbounds i32, ptr %374, i64 %401
  %411 = load i32, ptr %410, align 4, !tbaa !67
  %412 = and i32 %409, -2147483647
  %413 = icmp eq i32 %412, 1
  %414 = and i32 %411, -2147483647
  %415 = icmp eq i32 %414, 1
  %416 = and i1 %413, %415
  br i1 %416, label %417, label %443

417:                                              ; preds = %407
  %418 = getelementptr inbounds i32, ptr %376, i64 %401
  %419 = load i32, ptr %418, align 4, !tbaa !67
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds i32, ptr %378, i64 %420
  %422 = load i32, ptr %421, align 4, !tbaa !67
  %423 = getelementptr inbounds i32, ptr %364, i64 %420
  %424 = load i32, ptr %423, align 4, !tbaa !67
  %425 = icmp sgt i32 %424, 0
  %426 = zext i1 %425 to i32
  %427 = add nsw i32 %422, %426
  %428 = getelementptr inbounds i32, ptr %384, i64 %401
  %429 = load i32, ptr %428, align 4, !tbaa !67
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds i32, ptr %378, i64 %430
  %432 = load i32, ptr %431, align 4, !tbaa !67
  %433 = getelementptr inbounds i32, ptr %364, i64 %430
  %434 = load i32, ptr %433, align 4, !tbaa !67
  %435 = icmp sgt i32 %434, 0
  %436 = zext i1 %435 to i32
  %437 = add nsw i32 %432, %436
  %438 = getelementptr inbounds i32, ptr %378, i64 %401
  %439 = load i32, ptr %438, align 4, !tbaa !67
  %440 = icmp sgt i32 %427, %439
  %441 = icmp sgt i32 %437, %439
  %442 = select i1 %440, i1 true, i1 %441
  br i1 %442, label %533, label %534

443:                                              ; preds = %407
  %444 = and i32 %409, 1
  %445 = icmp eq i32 %444, 0
  %446 = and i1 %445, %415
  br i1 %446, label %447, label %473

447:                                              ; preds = %443
  %448 = getelementptr inbounds i32, ptr %382, i64 %401
  %449 = load i32, ptr %448, align 4, !tbaa !67
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds i32, ptr %378, i64 %450
  %452 = load i32, ptr %451, align 4, !tbaa !67
  %453 = getelementptr inbounds i32, ptr %364, i64 %450
  %454 = load i32, ptr %453, align 4, !tbaa !67
  %455 = icmp sgt i32 %454, 0
  %456 = zext i1 %455 to i32
  %457 = add nsw i32 %452, %456
  %458 = getelementptr inbounds i32, ptr %384, i64 %401
  %459 = load i32, ptr %458, align 4, !tbaa !67
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds i32, ptr %378, i64 %460
  %462 = load i32, ptr %461, align 4, !tbaa !67
  %463 = getelementptr inbounds i32, ptr %364, i64 %460
  %464 = load i32, ptr %463, align 4, !tbaa !67
  %465 = icmp sgt i32 %464, 0
  %466 = zext i1 %465 to i32
  %467 = add nsw i32 %462, %466
  %468 = getelementptr inbounds i32, ptr %378, i64 %401
  %469 = load i32, ptr %468, align 4, !tbaa !67
  %470 = icmp sgt i32 %457, %469
  %471 = icmp sgt i32 %467, %469
  %472 = select i1 %470, i1 true, i1 %471
  br i1 %472, label %533, label %534

473:                                              ; preds = %443
  %474 = icmp ne i32 %412, 1
  %475 = and i32 %411, 1
  %476 = icmp ne i32 %475, 0
  %477 = select i1 %474, i1 true, i1 %476
  br i1 %477, label %504, label %478

478:                                              ; preds = %473
  %479 = getelementptr inbounds i32, ptr %376, i64 %401
  %480 = load i32, ptr %479, align 4, !tbaa !67
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds i32, ptr %378, i64 %481
  %483 = load i32, ptr %482, align 4, !tbaa !67
  %484 = getelementptr inbounds i32, ptr %364, i64 %481
  %485 = load i32, ptr %484, align 4, !tbaa !67
  %486 = icmp sgt i32 %485, 0
  %487 = zext i1 %486 to i32
  %488 = add nsw i32 %483, %487
  %489 = getelementptr inbounds i32, ptr %380, i64 %401
  %490 = load i32, ptr %489, align 4, !tbaa !67
  %491 = sext i32 %490 to i64
  %492 = getelementptr inbounds i32, ptr %378, i64 %491
  %493 = load i32, ptr %492, align 4, !tbaa !67
  %494 = getelementptr inbounds i32, ptr %364, i64 %491
  %495 = load i32, ptr %494, align 4, !tbaa !67
  %496 = icmp sgt i32 %495, 0
  %497 = zext i1 %496 to i32
  %498 = add nsw i32 %493, %497
  %499 = getelementptr inbounds i32, ptr %378, i64 %401
  %500 = load i32, ptr %499, align 4, !tbaa !67
  %501 = icmp sgt i32 %488, %500
  %502 = icmp sgt i32 %498, %500
  %503 = select i1 %501, i1 true, i1 %502
  br i1 %503, label %533, label %534

504:                                              ; preds = %473
  %505 = icmp ne i32 %444, 0
  %506 = select i1 %505, i1 true, i1 %476
  br i1 %506, label %534, label %507

507:                                              ; preds = %504
  %508 = getelementptr inbounds i32, ptr %382, i64 %401
  %509 = load i32, ptr %508, align 4, !tbaa !67
  %510 = sext i32 %509 to i64
  %511 = getelementptr inbounds i32, ptr %378, i64 %510
  %512 = load i32, ptr %511, align 4, !tbaa !67
  %513 = getelementptr inbounds i32, ptr %364, i64 %510
  %514 = load i32, ptr %513, align 4, !tbaa !67
  %515 = icmp sgt i32 %514, 0
  %516 = zext i1 %515 to i32
  %517 = add nsw i32 %512, %516
  %518 = getelementptr inbounds i32, ptr %380, i64 %401
  %519 = load i32, ptr %518, align 4, !tbaa !67
  %520 = sext i32 %519 to i64
  %521 = getelementptr inbounds i32, ptr %378, i64 %520
  %522 = load i32, ptr %521, align 4, !tbaa !67
  %523 = getelementptr inbounds i32, ptr %364, i64 %520
  %524 = load i32, ptr %523, align 4, !tbaa !67
  %525 = icmp sgt i32 %524, 0
  %526 = zext i1 %525 to i32
  %527 = add nsw i32 %522, %526
  %528 = getelementptr inbounds i32, ptr %378, i64 %401
  %529 = load i32, ptr %528, align 4, !tbaa !67
  %530 = icmp sgt i32 %517, %529
  %531 = icmp sgt i32 %527, %529
  %532 = select i1 %530, i1 true, i1 %531
  br i1 %532, label %533, label %534

533:                                              ; preds = %507, %478, %447, %417
  store i32 0, ptr %404, align 4, !tbaa !67
  br label %534

534:                                              ; preds = %533, %507, %478, %447, %417, %504, %400
  %535 = add nuw nsw i64 %401, 1
  %536 = and i64 %535, 4294967295
  %537 = icmp ugt i64 %368, %536
  br i1 %537, label %400, label %385, !llvm.loop !144

538:                                              ; preds = %628
  %539 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %540 = load ptr, ptr %539, align 8, !tbaa !85
  %541 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %542 = load ptr, ptr %541, align 8
  %543 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %544 = load ptr, ptr %543, align 8
  %545 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %546 = load ptr, ptr %545, align 8
  %547 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %548 = load ptr, ptr %547, align 8
  br label %653

549:                                              ; preds = %385, %628
  %550 = phi i64 [ 0, %385 ], [ %630, %628 ]
  %551 = getelementptr inbounds i32, ptr %361, i64 %550
  %552 = load i32, ptr %551, align 4, !tbaa !67
  %553 = getelementptr inbounds i32, ptr %364, i64 %550
  store i32 %552, ptr %553, align 4, !tbaa !67
  %554 = load i32, ptr %551, align 4, !tbaa !67
  %555 = icmp ult i32 %554, -999999
  br i1 %555, label %628, label %556

556:                                              ; preds = %549
  %557 = getelementptr inbounds i32, ptr %387, i64 %550
  %558 = load i32, ptr %557, align 4, !tbaa !67
  %559 = getelementptr inbounds i32, ptr %389, i64 %550
  %560 = load i32, ptr %559, align 4, !tbaa !67
  %561 = and i32 %558, -2147483647
  %562 = icmp eq i32 %561, 1
  %563 = and i32 %560, -2147483647
  %564 = icmp eq i32 %563, 1
  %565 = and i1 %562, %564
  br i1 %565, label %578, label %566

566:                                              ; preds = %556
  %567 = and i32 %558, 1
  %568 = icmp eq i32 %567, 0
  %569 = and i1 %568, %564
  br i1 %569, label %578, label %570

570:                                              ; preds = %566
  %571 = icmp ne i32 %561, 1
  %572 = and i32 %560, 1
  %573 = icmp ne i32 %572, 0
  %574 = select i1 %571, i1 true, i1 %573
  br i1 %574, label %575, label %578

575:                                              ; preds = %570
  %576 = icmp ne i32 %567, 0
  %577 = select i1 %576, i1 true, i1 %573
  br i1 %577, label %589, label %578

578:                                              ; preds = %575, %570, %566, %556
  %579 = phi ptr [ %397, %556 ], [ %397, %566 ], [ %391, %570 ], [ %391, %575 ]
  %580 = phi ptr [ %393, %556 ], [ %395, %566 ], [ %393, %570 ], [ %395, %575 ]
  %581 = getelementptr inbounds i32, ptr %579, i64 %550
  %582 = load i32, ptr %581, align 4, !tbaa !67
  %583 = getelementptr inbounds i32, ptr %580, i64 %550
  %584 = sext i32 %582 to i64
  %585 = getelementptr inbounds i32, ptr %580, i64 %584
  %586 = load i32, ptr %585, align 4, !tbaa !67
  %587 = load i32, ptr %583, align 4, !tbaa !67
  %588 = icmp slt i32 %586, 0
  br i1 %588, label %627, label %589

589:                                              ; preds = %575, %578
  %590 = phi i32 [ %586, %578 ], [ 0, %575 ]
  %591 = phi i32 [ %587, %578 ], [ 0, %575 ]
  %592 = phi i32 [ %582, %578 ], [ 0, %575 ]
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds i32, ptr %361, i64 %593
  %595 = load i32, ptr %594, align 4, !tbaa !67
  %596 = icmp eq i32 %595, -1
  br i1 %596, label %597, label %627

597:                                              ; preds = %589
  %598 = zext i32 %590 to i64
  %599 = getelementptr inbounds i32, ptr %361, i64 %598
  %600 = load i32, ptr %599, align 4, !tbaa !67
  %601 = icmp sgt i32 %600, 0
  %602 = getelementptr inbounds i32, ptr %399, i64 %598
  %603 = load i32, ptr %602, align 4, !tbaa !67
  %604 = zext i1 %601 to i32
  %605 = add nsw i32 %603, %604
  %606 = sext i32 %591 to i64
  %607 = getelementptr inbounds i32, ptr %361, i64 %606
  %608 = load i32, ptr %607, align 4, !tbaa !67
  %609 = icmp sgt i32 %608, 0
  %610 = getelementptr inbounds i32, ptr %399, i64 %606
  %611 = load i32, ptr %610, align 4, !tbaa !67
  %612 = zext i1 %609 to i32
  %613 = add nsw i32 %611, %612
  %614 = getelementptr inbounds i32, ptr %399, i64 %593
  %615 = load i32, ptr %614, align 4, !tbaa !67
  %616 = getelementptr inbounds i32, ptr %399, i64 %550
  %617 = load i32, ptr %616, align 4, !tbaa !67
  %618 = icmp eq i32 %615, %617
  %619 = icmp eq i32 %608, -1
  %620 = select i1 %618, i1 %619, i1 false
  %621 = icmp eq i32 %613, %617
  %622 = select i1 %620, i1 %621, i1 false
  %623 = icmp eq i32 %600, -1
  %624 = select i1 %622, i1 %623, i1 false
  %625 = icmp eq i32 %605, %617
  %626 = select i1 %624, i1 %625, i1 false
  br i1 %626, label %628, label %627

627:                                              ; preds = %589, %597, %578
  store i32 0, ptr %553, align 4, !tbaa !67
  br label %628

628:                                              ; preds = %627, %597, %549
  %629 = add nuw nsw i64 %550, 1
  %630 = and i64 %629, 4294967295
  %631 = icmp ugt i64 %368, %630
  br i1 %631, label %549, label %538, !llvm.loop !145

632:                                              ; preds = %670
  %633 = ptrtoint ptr %365 to i64
  %634 = ptrtoint ptr %364 to i64
  %635 = sub i64 %633, %634
  %636 = icmp eq ptr %365, %364
  br i1 %636, label %675, label %642

637:                                              ; preds = %359
  store ptr %361, ptr %5, align 8, !tbaa !59
  store ptr %360, ptr %347, align 8, !tbaa !58
  store ptr %363, ptr %362, align 8, !tbaa !110
  store ptr %364, ptr %1, align 8, !tbaa !59
  store ptr %365, ptr %7, align 8, !tbaa !58
  store ptr %367, ptr %366, align 8, !tbaa !110
  %638 = ptrtoint ptr %365 to i64
  %639 = ptrtoint ptr %364 to i64
  %640 = sub i64 %638, %639
  %641 = icmp eq ptr %365, %364
  br i1 %641, label %676, label %642

642:                                              ; preds = %637, %632
  %643 = phi i64 [ %640, %637 ], [ %635, %632 ]
  %644 = icmp ugt i64 %643, 9223372036854775804
  br i1 %644, label %645, label %651, !prof !124

645:                                              ; preds = %642
  %646 = icmp slt i64 %643, 0
  br i1 %646, label %647, label %649

647:                                              ; preds = %16, %645
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #36
          to label %648 unwind label %124

648:                                              ; preds = %647
  unreachable

649:                                              ; preds = %16, %645
  invoke void @_ZSt17__throw_bad_allocv() #36
          to label %650 unwind label %124

650:                                              ; preds = %649
  unreachable

651:                                              ; preds = %642
  %652 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %643) #35
          to label %674 unwind label %124

653:                                              ; preds = %538, %670
  %654 = phi i64 [ 0, %538 ], [ %672, %670 ]
  %655 = getelementptr inbounds i32, ptr %540, i64 %654
  %656 = load i32, ptr %655, align 4, !tbaa !67
  %657 = icmp slt i32 %656, 0
  br i1 %657, label %658, label %670

658:                                              ; preds = %653
  switch i32 %656, label %670 [
    i32 -1, label %662
    i32 -2, label %659
    i32 -3, label %660
    i32 -4, label %661
  ]

659:                                              ; preds = %658
  br label %662

660:                                              ; preds = %658
  br label %662

661:                                              ; preds = %658
  br label %662

662:                                              ; preds = %658, %659, %660, %661
  %663 = phi ptr [ %542, %661 ], [ %544, %660 ], [ %546, %659 ], [ %548, %658 ]
  %664 = getelementptr inbounds i32, ptr %663, i64 %654
  %665 = load i32, ptr %664, align 4, !tbaa !67
  %666 = sext i32 %665 to i64
  %667 = getelementptr inbounds i32, ptr %364, i64 %666
  %668 = load i32, ptr %667, align 4, !tbaa !67
  %669 = getelementptr inbounds i32, ptr %364, i64 %654
  store i32 %668, ptr %669, align 4, !tbaa !67
  br label %670

670:                                              ; preds = %662, %653, %658
  %671 = add nuw nsw i64 %654, 1
  %672 = and i64 %671, 4294967295
  %673 = icmp ugt i64 %368, %672
  br i1 %673, label %653, label %632, !llvm.loop !146

674:                                              ; preds = %651
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %652, ptr align 4 %364, i64 %643, i1 false)
  br i1 %369, label %739, label %678

675:                                              ; preds = %632
  br i1 %369, label %676, label %678

676:                                              ; preds = %637, %675
  store i32 0, ptr %2, align 4, !tbaa !67
  store i32 0, ptr %3, align 4, !tbaa !67
  %677 = load i32, ptr %2, align 4, !tbaa !67
  br label %747

678:                                              ; preds = %675, %674
  %679 = phi ptr [ null, %675 ], [ %652, %674 ]
  %680 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %681 = load ptr, ptr %680, align 8
  %682 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %683 = load ptr, ptr %682, align 8
  %684 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %685 = load ptr, ptr %684, align 8
  br label %686

686:                                              ; preds = %733, %678
  %687 = phi i64 [ 0, %678 ], [ %737, %733 ]
  %688 = phi i32 [ 0, %678 ], [ %734, %733 ]
  %689 = phi i32 [ 0, %678 ], [ %735, %733 ]
  %690 = getelementptr inbounds i32, ptr %679, i64 %687
  %691 = load i32, ptr %690, align 4, !tbaa !67
  %692 = icmp slt i32 %691, 0
  br i1 %692, label %693, label %723

693:                                              ; preds = %686
  %694 = getelementptr inbounds i32, ptr %681, i64 %687
  %695 = load i32, ptr %694, align 4, !tbaa !67
  %696 = icmp eq i32 %695, 1
  %697 = getelementptr inbounds i32, ptr %683, i64 %687
  %698 = load i32, ptr %697, align 4, !tbaa !67
  %699 = getelementptr inbounds i32, ptr %685, i64 %687
  %700 = load i32, ptr %699, align 4, !tbaa !67
  br i1 %696, label %701, label %709

701:                                              ; preds = %693
  %702 = and i32 %698, 1
  %703 = icmp ne i32 %702, 0
  %704 = and i32 %700, 1
  %705 = icmp ne i32 %704, 0
  %706 = select i1 %703, i1 true, i1 %705
  %707 = sext i1 %706 to i32
  %708 = add nsw i32 %688, %707
  br label %733

709:                                              ; preds = %693
  %710 = and i32 %698, -2147483647
  %711 = icmp eq i32 %710, 1
  %712 = and i32 %700, -2147483647
  %713 = icmp eq i32 %712, 1
  %714 = and i1 %711, %713
  br i1 %714, label %733, label %715

715:                                              ; preds = %709
  %716 = and i32 %698, 1
  %717 = icmp ne i32 %716, 0
  %718 = and i32 %700, 1
  %719 = icmp ne i32 %718, 0
  %720 = select i1 %717, i1 true, i1 %719
  %721 = sext i1 %720 to i32
  %722 = add nsw i32 %688, %721
  br label %733

723:                                              ; preds = %686
  %724 = icmp eq i32 %691, 0
  br i1 %724, label %733, label %725

725:                                              ; preds = %723
  %726 = getelementptr inbounds i32, ptr %681, i64 %687
  %727 = load i32, ptr %726, align 4, !tbaa !67
  %728 = icmp eq i32 %727, 1
  br i1 %728, label %729, label %731

729:                                              ; preds = %725
  %730 = add nsw i32 %689, 3
  br label %733

731:                                              ; preds = %725
  %732 = add nsw i32 %689, 1
  br label %733

733:                                              ; preds = %731, %729, %723, %715, %709, %701
  %734 = phi i32 [ %688, %729 ], [ %688, %731 ], [ %688, %723 ], [ %722, %715 ], [ %708, %701 ], [ %688, %709 ]
  %735 = phi i32 [ %730, %729 ], [ %732, %731 ], [ %689, %723 ], [ %689, %715 ], [ %689, %701 ], [ %689, %709 ]
  %736 = add nuw nsw i64 %687, 1
  %737 = and i64 %736, 4294967295
  %738 = icmp ugt i64 %368, %737
  br i1 %738, label %686, label %739, !llvm.loop !141

739:                                              ; preds = %733, %674
  %740 = phi i32 [ 0, %674 ], [ %735, %733 ]
  %741 = phi i32 [ 0, %674 ], [ %734, %733 ]
  %742 = phi ptr [ %652, %674 ], [ %679, %733 ]
  store i32 %740, ptr %2, align 4, !tbaa !67
  store i32 %741, ptr %3, align 4, !tbaa !67
  %743 = load i32, ptr %2, align 4, !tbaa !67
  call void @_ZdlPv(ptr noundef nonnull %742) #33
  %744 = load i32, ptr %2, align 4, !tbaa !67
  %745 = load i32, ptr %3, align 4
  %746 = icmp ne i32 %745, 0
  br label %747

747:                                              ; preds = %676, %739
  %748 = phi i1 [ %746, %739 ], [ false, %676 ]
  %749 = phi i32 [ %744, %739 ], [ %677, %676 ]
  %750 = phi i32 [ %743, %739 ], [ %677, %676 ]
  %751 = phi i32 [ %741, %739 ], [ 0, %676 ]
  %752 = icmp ne i32 %749, 0
  %753 = select i1 %752, i1 true, i1 %748
  %754 = zext i1 %753 to i8
  %755 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 7
  store i8 %754, ptr %755, align 8, !tbaa !106
  %756 = load i64, ptr %6, align 8, !tbaa.struct !71
  %757 = getelementptr inbounds i8, ptr %6, i64 8
  %758 = load i64, ptr %757, align 8, !tbaa.struct !72
  %759 = invoke double @cpu_timer_stop(i64 %756, i64 %758)
          to label %760 unwind label %124

760:                                              ; preds = %747
  %761 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 19
  %762 = load double, ptr %761, align 8, !tbaa !45
  %763 = fadd double %759, %762
  store double %763, ptr %761, align 8, !tbaa !45
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #31
  %764 = load ptr, ptr %5, align 8, !tbaa !59
  %765 = icmp eq ptr %764, null
  br i1 %765, label %767, label %766

766:                                              ; preds = %760
  call void @_ZdlPv(ptr noundef nonnull %764) #33
  br label %767

767:                                              ; preds = %760, %766
  %768 = trunc i64 %368 to i32
  %769 = add i32 %750, %768
  %770 = add i32 %769, %751
  %771 = sext i32 %770 to i64
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #31
  ret i64 %771

772:                                              ; preds = %339, %124
  %773 = phi { ptr, i32 } [ %125, %124 ], [ %340, %339 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #31
  %774 = load ptr, ptr %5, align 8, !tbaa !59
  %775 = icmp eq ptr %774, null
  br i1 %775, label %777, label %776

776:                                              ; preds = %772
  call void @_ZdlPv(ptr noundef nonnull %774) #33
  br label %777

777:                                              ; preds = %772, %776
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #31
  resume { ptr, i32 } %773
}

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlus(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3, i32 noundef %4, ptr noundef nonnull align 8 dereferenceable(96) %5) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca %"struct.std::_Rb_tree<void *, std::pair<void *const, malloc_plus_memory_entry *>, std::_Select1st<std::pair<void *const, malloc_plus_memory_entry *>>, std::less<void *>>::_Alloc_node", align 8
  %8 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, malloc_plus_memory_entry *>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, malloc_plus_memory_entry *>>, std::less<std::__cxx11::basic_string<char>>>::_Alloc_node", align 8
  %9 = alloca %struct.timeval, align 8
  %10 = alloca i32, align 4
  %11 = alloca %class.MallocPlus, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #31
  call void @cpu_timer_start(ptr noundef nonnull %9)
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 7
  %13 = load i8, ptr %12, align 8, !tbaa !106, !range !130, !noundef !131
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %38

15:                                               ; preds = %6
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63
  %17 = load ptr, ptr %16, align 8, !tbaa !59
  %18 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63, i32 0, i32 0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !58
  %20 = icmp eq ptr %19, %17
  br i1 %20, label %22, label %21

21:                                               ; preds = %15
  store ptr %17, ptr %18, align 8, !tbaa !58
  br label %22

22:                                               ; preds = %15, %21
  %23 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %24 = load i64, ptr %23, align 8, !tbaa !43
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %1212, label %26

26:                                               ; preds = %22
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %16, i64 noundef %24)
  %27 = load i64, ptr %23, align 8, !tbaa !43
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %1212, label %29

29:                                               ; preds = %26
  %30 = load ptr, ptr %16, align 8, !tbaa !59
  br label %31

31:                                               ; preds = %29, %31
  %32 = phi i64 [ 0, %29 ], [ %36, %31 ]
  %33 = trunc i64 %32 to i32
  %34 = getelementptr inbounds i32, ptr %30, i64 %32
  store i32 %33, ptr %34, align 4, !tbaa !67
  %35 = add nuw nsw i64 %32, 1
  %36 = and i64 %35, 4294967295
  %37 = icmp ugt i64 %27, %36
  br i1 %37, label %31, label %1212, !llvm.loop !147

38:                                               ; preds = %6
  %39 = call i32 @llvm.abs.i32(i32 %2, i1 true)
  %40 = sub nsw i32 %1, %39
  %41 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 5
  %42 = load i32, ptr %41, align 8, !tbaa !67
  %43 = add nsw i32 %42, 1
  store i32 %43, ptr %41, align 8, !tbaa !67
  %44 = load atomic i8, ptr @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save acquire, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %51, !prof !148

46:                                               ; preds = %38
  %47 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save) #31
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %46
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save, i8 0, i64 24, i1 false)
  %50 = call i32 @__cxa_atexit(ptr nonnull @_ZNSt6vectorIiSaIiEED2Ev, ptr nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save, ptr nonnull @__dso_handle) #31
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save) #31
  br label %51

51:                                               ; preds = %49, %46, %38
  %52 = load atomic i8, ptr @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE6new_ic acquire, align 8
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %59, !prof !148

54:                                               ; preds = %51
  %55 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE6new_ic) #31
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %54
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE6new_ic, i8 0, i64 24, i1 false)
  %58 = call i32 @__cxa_atexit(ptr nonnull @_ZNSt6vectorIiSaIiEED2Ev, ptr nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE6new_ic, ptr nonnull @__dso_handle) #31
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE6new_ic) #31
  br label %59

59:                                               ; preds = %57, %54, %51
  %60 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %61 = load i64, ptr %60, align 8, !tbaa !43
  %62 = load ptr, ptr getelementptr inbounds (%"class.std::vector", ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save, i64 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !58
  %63 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save, align 8, !tbaa !59
  %64 = ptrtoint ptr %62 to i64
  %65 = ptrtoint ptr %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 2
  %68 = icmp ugt i64 %61, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %59
  %70 = sub i64 %61, %67
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save, i64 noundef %70)
  br label %77

71:                                               ; preds = %59
  %72 = icmp ult i64 %61, %67
  br i1 %72, label %73, label %77

73:                                               ; preds = %71
  %74 = getelementptr inbounds i32, ptr %63, i64 %61
  %75 = icmp eq ptr %62, %74
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  store ptr %74, ptr getelementptr inbounds (%"class.std::vector", ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save, i64 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !58
  br label %77

77:                                               ; preds = %69, %71, %73, %76
  %78 = icmp eq i32 %4, 0
  %79 = load i64, ptr %60, align 8, !tbaa !43
  %80 = trunc i64 %79 to i32
  br i1 %78, label %191, label %81

81:                                               ; preds = %77
  %82 = icmp sgt i32 %80, 0
  br i1 %82, label %83, label %147

83:                                               ; preds = %81
  %84 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %85 = load ptr, ptr %84, align 8, !tbaa !85
  %86 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save, align 8, !tbaa !59
  %87 = and i64 %79, 4294967295
  %88 = icmp ult i64 %87, 8
  %89 = ptrtoint ptr %86 to i64
  %90 = ptrtoint ptr %85 to i64
  %91 = sub i64 %89, %90
  %92 = icmp ult i64 %91, 32
  %93 = select i1 %88, i1 true, i1 %92
  br i1 %93, label %109, label %94

94:                                               ; preds = %83
  %95 = and i64 %79, 7
  %96 = sub nsw i64 %87, %95
  br label %97

97:                                               ; preds = %97, %94
  %98 = phi i64 [ 0, %94 ], [ %105, %97 ]
  %99 = getelementptr inbounds i32, ptr %85, i64 %98
  %100 = load <4 x i32>, ptr %99, align 4, !tbaa !67
  %101 = getelementptr inbounds i32, ptr %99, i64 4
  %102 = load <4 x i32>, ptr %101, align 4, !tbaa !67
  %103 = getelementptr inbounds i32, ptr %86, i64 %98
  store <4 x i32> %100, ptr %103, align 4, !tbaa !67
  %104 = getelementptr inbounds i32, ptr %103, i64 4
  store <4 x i32> %102, ptr %104, align 4, !tbaa !67
  %105 = add nuw i64 %98, 8
  %106 = icmp eq i64 %105, %96
  br i1 %106, label %107, label %97, !llvm.loop !149

107:                                              ; preds = %97
  %108 = icmp eq i64 %95, 0
  br i1 %108, label %147, label %109

109:                                              ; preds = %83, %107
  %110 = phi i64 [ 0, %83 ], [ %96, %107 ]
  %111 = sub i64 %79, %110
  %112 = xor i64 %110, -1
  %113 = add nsw i64 %87, %112
  %114 = and i64 %111, 3
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %125, label %116

116:                                              ; preds = %109, %116
  %117 = phi i64 [ %122, %116 ], [ %110, %109 ]
  %118 = phi i64 [ %123, %116 ], [ 0, %109 ]
  %119 = getelementptr inbounds i32, ptr %85, i64 %117
  %120 = load i32, ptr %119, align 4, !tbaa !67
  %121 = getelementptr inbounds i32, ptr %86, i64 %117
  store i32 %120, ptr %121, align 4, !tbaa !67
  %122 = add nuw nsw i64 %117, 1
  %123 = add i64 %118, 1
  %124 = icmp eq i64 %123, %114
  br i1 %124, label %125, label %116, !llvm.loop !150

125:                                              ; preds = %116, %109
  %126 = phi i64 [ %110, %109 ], [ %122, %116 ]
  %127 = icmp ult i64 %113, 3
  br i1 %127, label %147, label %128

128:                                              ; preds = %125, %128
  %129 = phi i64 [ %145, %128 ], [ %126, %125 ]
  %130 = getelementptr inbounds i32, ptr %85, i64 %129
  %131 = load i32, ptr %130, align 4, !tbaa !67
  %132 = getelementptr inbounds i32, ptr %86, i64 %129
  store i32 %131, ptr %132, align 4, !tbaa !67
  %133 = add nuw nsw i64 %129, 1
  %134 = getelementptr inbounds i32, ptr %85, i64 %133
  %135 = load i32, ptr %134, align 4, !tbaa !67
  %136 = getelementptr inbounds i32, ptr %86, i64 %133
  store i32 %135, ptr %136, align 4, !tbaa !67
  %137 = add nuw nsw i64 %129, 2
  %138 = getelementptr inbounds i32, ptr %85, i64 %137
  %139 = load i32, ptr %138, align 4, !tbaa !67
  %140 = getelementptr inbounds i32, ptr %86, i64 %137
  store i32 %139, ptr %140, align 4, !tbaa !67
  %141 = add nuw nsw i64 %129, 3
  %142 = getelementptr inbounds i32, ptr %85, i64 %141
  %143 = load i32, ptr %142, align 4, !tbaa !67
  %144 = getelementptr inbounds i32, ptr %86, i64 %141
  store i32 %143, ptr %144, align 4, !tbaa !67
  %145 = add nuw nsw i64 %129, 4
  %146 = icmp eq i64 %145, %87
  br i1 %146, label %147, label %128, !llvm.loop !152

147:                                              ; preds = %125, %128, %107, %81
  %148 = add i32 %40, %80
  store i32 %148, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !67
  %149 = icmp eq i64 %79, 0
  br i1 %149, label %193, label %150

150:                                              ; preds = %147
  %151 = load ptr, ptr %3, align 8, !tbaa !59
  %152 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %153 = load ptr, ptr %152, align 8
  %154 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %155 = load ptr, ptr %154, align 8
  %156 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %157 = load ptr, ptr %156, align 8
  br label %158

158:                                              ; preds = %150, %187
  %159 = phi i64 [ 0, %150 ], [ %189, %187 ]
  %160 = getelementptr inbounds i32, ptr %151, i64 %159
  %161 = load i32, ptr %160, align 4, !tbaa !67
  %162 = icmp slt i32 %161, 0
  br i1 %162, label %163, label %187

163:                                              ; preds = %158
  %164 = getelementptr inbounds i32, ptr %153, i64 %159
  %165 = load i32, ptr %164, align 4, !tbaa !67
  %166 = getelementptr inbounds i32, ptr %155, i64 %159
  %167 = load i32, ptr %166, align 4, !tbaa !67
  %168 = and i32 %165, 1
  %169 = icmp ne i32 %168, 0
  %170 = and i32 %167, 1
  %171 = icmp ne i32 %170, 0
  %172 = select i1 %169, i1 true, i1 %171
  br i1 %172, label %174, label %173

173:                                              ; preds = %163
  store i32 -2, ptr %160, align 4, !tbaa !67
  br label %174

174:                                              ; preds = %173, %163
  %175 = getelementptr inbounds i32, ptr %157, i64 %159
  %176 = load i32, ptr %175, align 4, !tbaa !67
  %177 = icmp eq i32 %176, 1
  br i1 %177, label %187, label %178

178:                                              ; preds = %174
  %179 = load i32, ptr %164, align 4, !tbaa !67
  %180 = load i32, ptr %166, align 4, !tbaa !67
  %181 = and i32 %179, -2147483647
  %182 = icmp eq i32 %181, 1
  %183 = and i32 %180, -2147483647
  %184 = icmp eq i32 %183, 1
  %185 = and i1 %182, %184
  br i1 %185, label %186, label %187

186:                                              ; preds = %178
  store i32 -3, ptr %160, align 4, !tbaa !67
  br label %187

187:                                              ; preds = %158, %186, %178, %174
  %188 = add nuw nsw i64 %159, 1
  %189 = and i64 %188, 4294967295
  %190 = icmp ugt i64 %79, %189
  br i1 %190, label %158, label %193, !llvm.loop !153

191:                                              ; preds = %77
  %192 = add i32 %40, %80
  store i32 %192, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !67
  br label %193

193:                                              ; preds = %187, %191, %147
  %194 = phi i32 [ %192, %191 ], [ %148, %147 ], [ %148, %187 ]
  %195 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %196 = sext i32 %194 to i64
  %197 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %195, i64 noundef %196, i64 noundef 4, ptr noundef nonnull @.str.33, i32 noundef 16)
  store ptr %197, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !137
  %198 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !67
  %199 = sext i32 %198 to i64
  %200 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %195, i64 noundef %199, i64 noundef 4, ptr noundef nonnull @.str.34, i32 noundef 16)
  store ptr %200, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !137
  %201 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !67
  %202 = sext i32 %201 to i64
  %203 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %195, i64 noundef %202, i64 noundef 4, ptr noundef nonnull @.str.35, i32 noundef 16)
  store ptr %203, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !137
  %204 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  call void @_ZN10MallocPlus11memory_swapEPPiS1_(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef nonnull %204, ptr noundef nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old)
  %205 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  call void @_ZN10MallocPlus11memory_swapEPPiS1_(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef nonnull %205, ptr noundef nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old)
  %206 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  call void @_ZN10MallocPlus11memory_swapEPPiS1_(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef nonnull %206, ptr noundef nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old)
  %207 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63
  %208 = load ptr, ptr %207, align 8, !tbaa !59
  %209 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63, i32 0, i32 0, i32 0, i32 1
  %210 = load ptr, ptr %209, align 8, !tbaa !58
  %211 = icmp eq ptr %210, %208
  br i1 %211, label %213, label %212

212:                                              ; preds = %193
  store ptr %208, ptr %209, align 8, !tbaa !58
  br label %213

213:                                              ; preds = %193, %212
  %214 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !67
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = sext i32 %214 to i64
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %207, i64 noundef %217)
  br label %218

218:                                              ; preds = %213, %216
  %219 = load atomic i8, ptr @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order acquire, align 8
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %221, label %226, !prof !148

221:                                              ; preds = %218
  %222 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order) #31
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %226, label %224

224:                                              ; preds = %221
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order, i8 0, i64 24, i1 false)
  %225 = call i32 @__cxa_atexit(ptr nonnull @_ZNSt6vectorIiSaIiEED2Ev, ptr nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order, ptr nonnull @__dso_handle) #31
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order) #31
  br label %226

226:                                              ; preds = %224, %221, %218
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #31
  store i32 -1, ptr %10, align 4, !tbaa !67
  %227 = load ptr, ptr getelementptr inbounds (%"class.std::vector", ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order, i64 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !58
  %228 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order, align 8, !tbaa !59
  %229 = ptrtoint ptr %227 to i64
  %230 = ptrtoint ptr %228 to i64
  %231 = sub i64 %229, %230
  %232 = icmp ult i64 %231, 16
  br i1 %232, label %233, label %236

233:                                              ; preds = %226
  %234 = lshr exact i64 %231, 2
  %235 = sub nuw nsw i64 4, %234
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order, ptr %227, i64 noundef %235, ptr noundef nonnull align 4 dereferenceable(4) %10)
  br label %242

236:                                              ; preds = %226
  %237 = icmp eq i64 %231, 16
  br i1 %237, label %242, label %238

238:                                              ; preds = %236
  %239 = getelementptr inbounds i32, ptr %228, i64 4
  %240 = icmp eq ptr %227, %239
  br i1 %240, label %242, label %241

241:                                              ; preds = %238
  store ptr %239, ptr getelementptr inbounds (%"class.std::vector", ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order, i64 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !58
  br label %242

242:                                              ; preds = %233, %236, %238, %241
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #31
  %243 = load i64, ptr %60, align 8, !tbaa !43
  %244 = trunc i64 %243 to i32
  %245 = icmp sgt i32 %244, 0
  br i1 %245, label %246, label %248

246:                                              ; preds = %242
  %247 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  br label %257

248:                                              ; preds = %628, %242
  %249 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !137
  %250 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef %249)
  %251 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !137
  %252 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef %251)
  %253 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !137
  %254 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef %253)
  %255 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !67
  %256 = sext i32 %255 to i64
  call void @_ZN4Mesh13calc_celltypeEm(ptr noundef nonnull align 8 dereferenceable(2288) %0, i64 noundef %256)
  br i1 %78, label %943, label %635

257:                                              ; preds = %246, %628
  %258 = phi i64 [ %243, %246 ], [ %629, %628 ]
  %259 = phi i64 [ 0, %246 ], [ %631, %628 ]
  %260 = phi i32 [ 0, %246 ], [ %630, %628 ]
  %261 = load ptr, ptr %3, align 8, !tbaa !59
  %262 = getelementptr inbounds i32, ptr %261, i64 %259
  %263 = load i32, ptr %262, align 4, !tbaa !67
  switch i32 %263, label %284 [
    i32 0, label %264
    i32 -1000000, label %264
  ]

264:                                              ; preds = %257, %257
  %265 = load ptr, ptr %207, align 8, !tbaa !59
  %266 = getelementptr inbounds i32, ptr %265, i64 %259
  store i32 %260, ptr %266, align 4, !tbaa !67
  %267 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !137
  %268 = getelementptr inbounds i32, ptr %267, i64 %259
  %269 = load i32, ptr %268, align 4, !tbaa !67
  %270 = load ptr, ptr %204, align 8, !tbaa !60
  %271 = sext i32 %260 to i64
  %272 = getelementptr inbounds i32, ptr %270, i64 %271
  store i32 %269, ptr %272, align 4, !tbaa !67
  %273 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !137
  %274 = getelementptr inbounds i32, ptr %273, i64 %259
  %275 = load i32, ptr %274, align 4, !tbaa !67
  %276 = load ptr, ptr %205, align 8, !tbaa !61
  %277 = getelementptr inbounds i32, ptr %276, i64 %271
  store i32 %275, ptr %277, align 4, !tbaa !67
  %278 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !137
  %279 = getelementptr inbounds i32, ptr %278, i64 %259
  %280 = load i32, ptr %279, align 4, !tbaa !67
  %281 = load ptr, ptr %206, align 8, !tbaa !62
  %282 = getelementptr inbounds i32, ptr %281, i64 %271
  store i32 %280, ptr %282, align 4, !tbaa !67
  %283 = add nsw i32 %260, 1
  br label %628

284:                                              ; preds = %257
  %285 = icmp slt i32 %263, 0
  %286 = load ptr, ptr %207, align 8, !tbaa !59
  %287 = getelementptr inbounds i32, ptr %286, i64 %259
  store i32 %260, ptr %287, align 4, !tbaa !67
  br i1 %285, label %288, label %312

288:                                              ; preds = %284
  %289 = load i32, ptr %262, align 4, !tbaa !67
  %290 = icmp slt i32 %289, -1
  br i1 %290, label %291, label %628

291:                                              ; preds = %288
  %292 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !137
  %293 = getelementptr inbounds i32, ptr %292, i64 %259
  %294 = load i32, ptr %293, align 4, !tbaa !67
  %295 = sdiv i32 %294, 2
  %296 = load ptr, ptr %204, align 8, !tbaa !60
  %297 = sext i32 %260 to i64
  %298 = getelementptr inbounds i32, ptr %296, i64 %297
  store i32 %295, ptr %298, align 4, !tbaa !67
  %299 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !137
  %300 = getelementptr inbounds i32, ptr %299, i64 %259
  %301 = load i32, ptr %300, align 4, !tbaa !67
  %302 = sdiv i32 %301, 2
  %303 = load ptr, ptr %205, align 8, !tbaa !61
  %304 = getelementptr inbounds i32, ptr %303, i64 %297
  store i32 %302, ptr %304, align 4, !tbaa !67
  %305 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !137
  %306 = getelementptr inbounds i32, ptr %305, i64 %259
  %307 = load i32, ptr %306, align 4, !tbaa !67
  %308 = add nsw i32 %307, -1
  %309 = load ptr, ptr %206, align 8, !tbaa !62
  %310 = getelementptr inbounds i32, ptr %309, i64 %297
  store i32 %308, ptr %310, align 4, !tbaa !67
  %311 = add nsw i32 %260, 1
  br label %628

312:                                              ; preds = %284
  %313 = load ptr, ptr %247, align 8, !tbaa !85
  %314 = getelementptr inbounds i32, ptr %313, i64 %259
  %315 = load i32, ptr %314, align 4, !tbaa !67
  switch i32 %315, label %628 [
    i32 1, label %316
    i32 -1, label %492
    i32 -2, label %527
    i32 -3, label %560
    i32 -4, label %595
  ]

316:                                              ; preds = %312
  %317 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order, align 8, !tbaa !59
  %318 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !137
  %319 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !137
  %320 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !137
  %321 = trunc i64 %259 to i32
  call void @_ZN4Mesh20set_refinement_orderEPiiiiiiiiS0_S0_S0_(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef %317, i32 noundef %321, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0, ptr noundef %318, ptr noundef %319, ptr noundef %320)
  %322 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !137
  %323 = getelementptr inbounds i32, ptr %322, i64 %259
  %324 = load ptr, ptr %206, align 8, !tbaa !62
  %325 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order, align 8, !tbaa !59
  %326 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8
  %327 = getelementptr inbounds i32, ptr %326, i64 %259
  %328 = load ptr, ptr %204, align 8
  %329 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8
  %330 = getelementptr inbounds i32, ptr %329, i64 %259
  %331 = load ptr, ptr %205, align 8
  %332 = load i32, ptr %323, align 4, !tbaa !67
  %333 = add nsw i32 %332, 1
  %334 = sext i32 %260 to i64
  %335 = getelementptr inbounds i32, ptr %324, i64 %334
  store i32 %333, ptr %335, align 4, !tbaa !67
  %336 = load i32, ptr %325, align 4, !tbaa !67
  switch i32 %336, label %369 [
    i32 0, label %337
    i32 3, label %343
    i32 1, label %350
    i32 2, label %357
  ]

337:                                              ; preds = %316
  %338 = load i32, ptr %327, align 4, !tbaa !67
  %339 = shl nsw i32 %338, 1
  %340 = getelementptr inbounds i32, ptr %328, i64 %334
  store i32 %339, ptr %340, align 4, !tbaa !67
  %341 = load i32, ptr %330, align 4, !tbaa !67
  %342 = shl nsw i32 %341, 1
  br label %365

343:                                              ; preds = %316
  %344 = load i32, ptr %327, align 4, !tbaa !67
  %345 = shl nsw i32 %344, 1
  %346 = or i32 %345, 1
  %347 = getelementptr inbounds i32, ptr %328, i64 %334
  store i32 %346, ptr %347, align 4, !tbaa !67
  %348 = load i32, ptr %330, align 4, !tbaa !67
  %349 = shl nsw i32 %348, 1
  br label %365

350:                                              ; preds = %316
  %351 = load i32, ptr %327, align 4, !tbaa !67
  %352 = shl nsw i32 %351, 1
  %353 = getelementptr inbounds i32, ptr %328, i64 %334
  store i32 %352, ptr %353, align 4, !tbaa !67
  %354 = load i32, ptr %330, align 4, !tbaa !67
  %355 = shl nsw i32 %354, 1
  %356 = or i32 %355, 1
  br label %365

357:                                              ; preds = %316
  %358 = load i32, ptr %327, align 4, !tbaa !67
  %359 = shl nsw i32 %358, 1
  %360 = or i32 %359, 1
  %361 = getelementptr inbounds i32, ptr %328, i64 %334
  store i32 %360, ptr %361, align 4, !tbaa !67
  %362 = load i32, ptr %330, align 4, !tbaa !67
  %363 = shl nsw i32 %362, 1
  %364 = or i32 %363, 1
  br label %365

365:                                              ; preds = %357, %350, %343, %337
  %366 = phi i32 [ %342, %337 ], [ %349, %343 ], [ %356, %350 ], [ %364, %357 ]
  %367 = getelementptr inbounds i32, ptr %331, i64 %334
  store i32 %366, ptr %367, align 4, !tbaa !67
  %368 = add nsw i32 %260, 1
  br label %369

369:                                              ; preds = %365, %316
  %370 = phi i32 [ %260, %316 ], [ %368, %365 ]
  %371 = load i32, ptr %323, align 4, !tbaa !67
  %372 = add nsw i32 %371, 1
  %373 = sext i32 %370 to i64
  %374 = getelementptr inbounds i32, ptr %324, i64 %373
  store i32 %372, ptr %374, align 4, !tbaa !67
  %375 = getelementptr inbounds i32, ptr %325, i64 1
  %376 = load i32, ptr %375, align 4, !tbaa !67
  switch i32 %376, label %409 [
    i32 0, label %399
    i32 3, label %392
    i32 1, label %385
    i32 2, label %377
  ]

377:                                              ; preds = %369
  %378 = load i32, ptr %327, align 4, !tbaa !67
  %379 = shl nsw i32 %378, 1
  %380 = or i32 %379, 1
  %381 = getelementptr inbounds i32, ptr %328, i64 %373
  store i32 %380, ptr %381, align 4, !tbaa !67
  %382 = load i32, ptr %330, align 4, !tbaa !67
  %383 = shl nsw i32 %382, 1
  %384 = or i32 %383, 1
  br label %405

385:                                              ; preds = %369
  %386 = load i32, ptr %327, align 4, !tbaa !67
  %387 = shl nsw i32 %386, 1
  %388 = getelementptr inbounds i32, ptr %328, i64 %373
  store i32 %387, ptr %388, align 4, !tbaa !67
  %389 = load i32, ptr %330, align 4, !tbaa !67
  %390 = shl nsw i32 %389, 1
  %391 = or i32 %390, 1
  br label %405

392:                                              ; preds = %369
  %393 = load i32, ptr %327, align 4, !tbaa !67
  %394 = shl nsw i32 %393, 1
  %395 = or i32 %394, 1
  %396 = getelementptr inbounds i32, ptr %328, i64 %373
  store i32 %395, ptr %396, align 4, !tbaa !67
  %397 = load i32, ptr %330, align 4, !tbaa !67
  %398 = shl nsw i32 %397, 1
  br label %405

399:                                              ; preds = %369
  %400 = load i32, ptr %327, align 4, !tbaa !67
  %401 = shl nsw i32 %400, 1
  %402 = getelementptr inbounds i32, ptr %328, i64 %373
  store i32 %401, ptr %402, align 4, !tbaa !67
  %403 = load i32, ptr %330, align 4, !tbaa !67
  %404 = shl nsw i32 %403, 1
  br label %405

405:                                              ; preds = %377, %385, %392, %399
  %406 = phi i32 [ %404, %399 ], [ %398, %392 ], [ %391, %385 ], [ %384, %377 ]
  %407 = getelementptr inbounds i32, ptr %331, i64 %373
  store i32 %406, ptr %407, align 4, !tbaa !67
  %408 = add nsw i32 %370, 1
  br label %409

409:                                              ; preds = %405, %369
  %410 = phi i32 [ %370, %369 ], [ %408, %405 ]
  %411 = load i32, ptr %323, align 4, !tbaa !67
  %412 = add nsw i32 %411, 1
  %413 = sext i32 %410 to i64
  %414 = getelementptr inbounds i32, ptr %324, i64 %413
  store i32 %412, ptr %414, align 4, !tbaa !67
  %415 = getelementptr inbounds i32, ptr %325, i64 2
  %416 = load i32, ptr %415, align 4, !tbaa !67
  switch i32 %416, label %449 [
    i32 0, label %439
    i32 3, label %432
    i32 1, label %425
    i32 2, label %417
  ]

417:                                              ; preds = %409
  %418 = load i32, ptr %327, align 4, !tbaa !67
  %419 = shl nsw i32 %418, 1
  %420 = or i32 %419, 1
  %421 = getelementptr inbounds i32, ptr %328, i64 %413
  store i32 %420, ptr %421, align 4, !tbaa !67
  %422 = load i32, ptr %330, align 4, !tbaa !67
  %423 = shl nsw i32 %422, 1
  %424 = or i32 %423, 1
  br label %445

425:                                              ; preds = %409
  %426 = load i32, ptr %327, align 4, !tbaa !67
  %427 = shl nsw i32 %426, 1
  %428 = getelementptr inbounds i32, ptr %328, i64 %413
  store i32 %427, ptr %428, align 4, !tbaa !67
  %429 = load i32, ptr %330, align 4, !tbaa !67
  %430 = shl nsw i32 %429, 1
  %431 = or i32 %430, 1
  br label %445

432:                                              ; preds = %409
  %433 = load i32, ptr %327, align 4, !tbaa !67
  %434 = shl nsw i32 %433, 1
  %435 = or i32 %434, 1
  %436 = getelementptr inbounds i32, ptr %328, i64 %413
  store i32 %435, ptr %436, align 4, !tbaa !67
  %437 = load i32, ptr %330, align 4, !tbaa !67
  %438 = shl nsw i32 %437, 1
  br label %445

439:                                              ; preds = %409
  %440 = load i32, ptr %327, align 4, !tbaa !67
  %441 = shl nsw i32 %440, 1
  %442 = getelementptr inbounds i32, ptr %328, i64 %413
  store i32 %441, ptr %442, align 4, !tbaa !67
  %443 = load i32, ptr %330, align 4, !tbaa !67
  %444 = shl nsw i32 %443, 1
  br label %445

445:                                              ; preds = %417, %425, %432, %439
  %446 = phi i32 [ %444, %439 ], [ %438, %432 ], [ %431, %425 ], [ %424, %417 ]
  %447 = getelementptr inbounds i32, ptr %331, i64 %413
  store i32 %446, ptr %447, align 4, !tbaa !67
  %448 = add nsw i32 %410, 1
  br label %449

449:                                              ; preds = %445, %409
  %450 = phi i32 [ %410, %409 ], [ %448, %445 ]
  %451 = load i32, ptr %323, align 4, !tbaa !67
  %452 = add nsw i32 %451, 1
  %453 = sext i32 %450 to i64
  %454 = getelementptr inbounds i32, ptr %324, i64 %453
  store i32 %452, ptr %454, align 4, !tbaa !67
  %455 = getelementptr inbounds i32, ptr %325, i64 3
  %456 = load i32, ptr %455, align 4, !tbaa !67
  switch i32 %456, label %489 [
    i32 0, label %479
    i32 3, label %472
    i32 1, label %465
    i32 2, label %457
  ]

457:                                              ; preds = %449
  %458 = load i32, ptr %327, align 4, !tbaa !67
  %459 = shl nsw i32 %458, 1
  %460 = or i32 %459, 1
  %461 = getelementptr inbounds i32, ptr %328, i64 %453
  store i32 %460, ptr %461, align 4, !tbaa !67
  %462 = load i32, ptr %330, align 4, !tbaa !67
  %463 = shl nsw i32 %462, 1
  %464 = or i32 %463, 1
  br label %485

465:                                              ; preds = %449
  %466 = load i32, ptr %327, align 4, !tbaa !67
  %467 = shl nsw i32 %466, 1
  %468 = getelementptr inbounds i32, ptr %328, i64 %453
  store i32 %467, ptr %468, align 4, !tbaa !67
  %469 = load i32, ptr %330, align 4, !tbaa !67
  %470 = shl nsw i32 %469, 1
  %471 = or i32 %470, 1
  br label %485

472:                                              ; preds = %449
  %473 = load i32, ptr %327, align 4, !tbaa !67
  %474 = shl nsw i32 %473, 1
  %475 = or i32 %474, 1
  %476 = getelementptr inbounds i32, ptr %328, i64 %453
  store i32 %475, ptr %476, align 4, !tbaa !67
  %477 = load i32, ptr %330, align 4, !tbaa !67
  %478 = shl nsw i32 %477, 1
  br label %485

479:                                              ; preds = %449
  %480 = load i32, ptr %327, align 4, !tbaa !67
  %481 = shl nsw i32 %480, 1
  %482 = getelementptr inbounds i32, ptr %328, i64 %453
  store i32 %481, ptr %482, align 4, !tbaa !67
  %483 = load i32, ptr %330, align 4, !tbaa !67
  %484 = shl nsw i32 %483, 1
  br label %485

485:                                              ; preds = %457, %465, %472, %479
  %486 = phi i32 [ %484, %479 ], [ %478, %472 ], [ %471, %465 ], [ %464, %457 ]
  %487 = getelementptr inbounds i32, ptr %331, i64 %453
  store i32 %486, ptr %487, align 4, !tbaa !67
  %488 = add nsw i32 %450, 1
  br label %489

489:                                              ; preds = %485, %449
  %490 = phi i32 [ %450, %449 ], [ %488, %485 ]
  %491 = load i64, ptr %60, align 8, !tbaa !43
  br label %628

492:                                              ; preds = %312
  %493 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !137
  %494 = getelementptr inbounds i32, ptr %493, i64 %259
  %495 = load i32, ptr %494, align 4, !tbaa !67
  %496 = shl nsw i32 %495, 1
  %497 = or i32 %496, 1
  %498 = load ptr, ptr %204, align 8, !tbaa !60
  %499 = sext i32 %260 to i64
  %500 = getelementptr inbounds i32, ptr %498, i64 %499
  store i32 %497, ptr %500, align 4, !tbaa !67
  %501 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !137
  %502 = getelementptr inbounds i32, ptr %501, i64 %259
  %503 = load i32, ptr %502, align 4, !tbaa !67
  %504 = shl nsw i32 %503, 1
  %505 = load ptr, ptr %205, align 8, !tbaa !61
  %506 = getelementptr inbounds i32, ptr %505, i64 %499
  store i32 %504, ptr %506, align 4, !tbaa !67
  %507 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !137
  %508 = getelementptr inbounds i32, ptr %507, i64 %259
  %509 = load i32, ptr %508, align 4, !tbaa !67
  %510 = add nsw i32 %509, 1
  %511 = load ptr, ptr %206, align 8, !tbaa !62
  %512 = getelementptr inbounds i32, ptr %511, i64 %499
  store i32 %510, ptr %512, align 4, !tbaa !67
  %513 = add nsw i32 %260, 1
  %514 = load i32, ptr %494, align 4, !tbaa !67
  %515 = shl nsw i32 %514, 1
  %516 = or i32 %515, 1
  %517 = sext i32 %513 to i64
  %518 = getelementptr inbounds i32, ptr %498, i64 %517
  store i32 %516, ptr %518, align 4, !tbaa !67
  %519 = load i32, ptr %502, align 4, !tbaa !67
  %520 = shl nsw i32 %519, 1
  %521 = or i32 %520, 1
  %522 = getelementptr inbounds i32, ptr %505, i64 %517
  store i32 %521, ptr %522, align 4, !tbaa !67
  %523 = load i32, ptr %508, align 4, !tbaa !67
  %524 = add nsw i32 %523, 1
  %525 = getelementptr inbounds i32, ptr %511, i64 %517
  store i32 %524, ptr %525, align 4, !tbaa !67
  %526 = add nsw i32 %260, 2
  br label %628

527:                                              ; preds = %312
  %528 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !137
  %529 = getelementptr inbounds i32, ptr %528, i64 %259
  %530 = load i32, ptr %529, align 4, !tbaa !67
  %531 = shl nsw i32 %530, 1
  %532 = load ptr, ptr %204, align 8, !tbaa !60
  %533 = sext i32 %260 to i64
  %534 = getelementptr inbounds i32, ptr %532, i64 %533
  store i32 %531, ptr %534, align 4, !tbaa !67
  %535 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !137
  %536 = getelementptr inbounds i32, ptr %535, i64 %259
  %537 = load i32, ptr %536, align 4, !tbaa !67
  %538 = shl nsw i32 %537, 1
  %539 = load ptr, ptr %205, align 8, !tbaa !61
  %540 = getelementptr inbounds i32, ptr %539, i64 %533
  store i32 %538, ptr %540, align 4, !tbaa !67
  %541 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !137
  %542 = getelementptr inbounds i32, ptr %541, i64 %259
  %543 = load i32, ptr %542, align 4, !tbaa !67
  %544 = add nsw i32 %543, 1
  %545 = load ptr, ptr %206, align 8, !tbaa !62
  %546 = getelementptr inbounds i32, ptr %545, i64 %533
  store i32 %544, ptr %546, align 4, !tbaa !67
  %547 = add nsw i32 %260, 1
  %548 = load i32, ptr %529, align 4, !tbaa !67
  %549 = shl nsw i32 %548, 1
  %550 = sext i32 %547 to i64
  %551 = getelementptr inbounds i32, ptr %532, i64 %550
  store i32 %549, ptr %551, align 4, !tbaa !67
  %552 = load i32, ptr %536, align 4, !tbaa !67
  %553 = shl nsw i32 %552, 1
  %554 = or i32 %553, 1
  %555 = getelementptr inbounds i32, ptr %539, i64 %550
  store i32 %554, ptr %555, align 4, !tbaa !67
  %556 = load i32, ptr %542, align 4, !tbaa !67
  %557 = add nsw i32 %556, 1
  %558 = getelementptr inbounds i32, ptr %545, i64 %550
  store i32 %557, ptr %558, align 4, !tbaa !67
  %559 = add nsw i32 %260, 2
  br label %628

560:                                              ; preds = %312
  %561 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !137
  %562 = getelementptr inbounds i32, ptr %561, i64 %259
  %563 = load i32, ptr %562, align 4, !tbaa !67
  %564 = shl nsw i32 %563, 1
  %565 = load ptr, ptr %204, align 8, !tbaa !60
  %566 = sext i32 %260 to i64
  %567 = getelementptr inbounds i32, ptr %565, i64 %566
  store i32 %564, ptr %567, align 4, !tbaa !67
  %568 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !137
  %569 = getelementptr inbounds i32, ptr %568, i64 %259
  %570 = load i32, ptr %569, align 4, !tbaa !67
  %571 = shl nsw i32 %570, 1
  %572 = or i32 %571, 1
  %573 = load ptr, ptr %205, align 8, !tbaa !61
  %574 = getelementptr inbounds i32, ptr %573, i64 %566
  store i32 %572, ptr %574, align 4, !tbaa !67
  %575 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !137
  %576 = getelementptr inbounds i32, ptr %575, i64 %259
  %577 = load i32, ptr %576, align 4, !tbaa !67
  %578 = add nsw i32 %577, 1
  %579 = load ptr, ptr %206, align 8, !tbaa !62
  %580 = getelementptr inbounds i32, ptr %579, i64 %566
  store i32 %578, ptr %580, align 4, !tbaa !67
  %581 = add nsw i32 %260, 1
  %582 = load i32, ptr %562, align 4, !tbaa !67
  %583 = shl nsw i32 %582, 1
  %584 = or i32 %583, 1
  %585 = sext i32 %581 to i64
  %586 = getelementptr inbounds i32, ptr %565, i64 %585
  store i32 %584, ptr %586, align 4, !tbaa !67
  %587 = load i32, ptr %569, align 4, !tbaa !67
  %588 = shl nsw i32 %587, 1
  %589 = or i32 %588, 1
  %590 = getelementptr inbounds i32, ptr %573, i64 %585
  store i32 %589, ptr %590, align 4, !tbaa !67
  %591 = load i32, ptr %576, align 4, !tbaa !67
  %592 = add nsw i32 %591, 1
  %593 = getelementptr inbounds i32, ptr %579, i64 %585
  store i32 %592, ptr %593, align 4, !tbaa !67
  %594 = add nsw i32 %260, 2
  br label %628

595:                                              ; preds = %312
  %596 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !137
  %597 = getelementptr inbounds i32, ptr %596, i64 %259
  %598 = load i32, ptr %597, align 4, !tbaa !67
  %599 = shl nsw i32 %598, 1
  %600 = or i32 %599, 1
  %601 = load ptr, ptr %204, align 8, !tbaa !60
  %602 = sext i32 %260 to i64
  %603 = getelementptr inbounds i32, ptr %601, i64 %602
  store i32 %600, ptr %603, align 4, !tbaa !67
  %604 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !137
  %605 = getelementptr inbounds i32, ptr %604, i64 %259
  %606 = load i32, ptr %605, align 4, !tbaa !67
  %607 = shl nsw i32 %606, 1
  %608 = load ptr, ptr %205, align 8, !tbaa !61
  %609 = getelementptr inbounds i32, ptr %608, i64 %602
  store i32 %607, ptr %609, align 4, !tbaa !67
  %610 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !137
  %611 = getelementptr inbounds i32, ptr %610, i64 %259
  %612 = load i32, ptr %611, align 4, !tbaa !67
  %613 = add nsw i32 %612, 1
  %614 = load ptr, ptr %206, align 8, !tbaa !62
  %615 = getelementptr inbounds i32, ptr %614, i64 %602
  store i32 %613, ptr %615, align 4, !tbaa !67
  %616 = add nsw i32 %260, 1
  %617 = load i32, ptr %597, align 4, !tbaa !67
  %618 = shl nsw i32 %617, 1
  %619 = sext i32 %616 to i64
  %620 = getelementptr inbounds i32, ptr %601, i64 %619
  store i32 %618, ptr %620, align 4, !tbaa !67
  %621 = load i32, ptr %605, align 4, !tbaa !67
  %622 = shl nsw i32 %621, 1
  %623 = getelementptr inbounds i32, ptr %608, i64 %619
  store i32 %622, ptr %623, align 4, !tbaa !67
  %624 = load i32, ptr %611, align 4, !tbaa !67
  %625 = add nsw i32 %624, 1
  %626 = getelementptr inbounds i32, ptr %614, i64 %619
  store i32 %625, ptr %626, align 4, !tbaa !67
  %627 = add nsw i32 %260, 2
  br label %628

628:                                              ; preds = %489, %312, %264, %492, %560, %595, %527, %288, %291
  %629 = phi i64 [ %258, %264 ], [ %258, %291 ], [ %258, %288 ], [ %258, %492 ], [ %258, %527 ], [ %258, %560 ], [ %258, %595 ], [ %258, %312 ], [ %491, %489 ]
  %630 = phi i32 [ %283, %264 ], [ %311, %291 ], [ %260, %288 ], [ %526, %492 ], [ %559, %527 ], [ %594, %560 ], [ %627, %595 ], [ %260, %312 ], [ %490, %489 ]
  %631 = add nuw nsw i64 %259, 1
  %632 = shl i64 %629, 32
  %633 = ashr exact i64 %632, 32
  %634 = icmp slt i64 %631, %633
  br i1 %634, label %257, label %248, !llvm.loop !154

635:                                              ; preds = %248
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11) #31
  %636 = getelementptr inbounds i8, ptr %11, i64 8
  store i32 0, ptr %636, align 8, !tbaa !50
  %637 = getelementptr inbounds i8, ptr %11, i64 16
  store ptr null, ptr %637, align 8, !tbaa !51
  %638 = getelementptr inbounds i8, ptr %11, i64 24
  store ptr %636, ptr %638, align 8, !tbaa !52
  %639 = getelementptr inbounds i8, ptr %11, i64 32
  store ptr %636, ptr %639, align 8, !tbaa !53
  %640 = getelementptr inbounds i8, ptr %11, i64 40
  store i64 0, ptr %640, align 8, !tbaa !54
  %641 = getelementptr inbounds i8, ptr %5, i64 16
  %642 = load ptr, ptr %641, align 8, !tbaa !51
  %643 = icmp eq ptr %642, null
  br i1 %643, label %660, label %644

644:                                              ; preds = %635
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #31
  store ptr %11, ptr %8, align 8, !tbaa !137
  %645 = call noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE7_M_copyILb0ENSG_11_Alloc_nodeEEEPSt13_Rb_tree_nodeISA_ESL_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %11, ptr noundef nonnull %642, ptr noundef nonnull %636, ptr noundef nonnull align 8 dereferenceable(8) %8)
  br label %646

646:                                              ; preds = %644, %646
  %647 = phi ptr [ %649, %646 ], [ %645, %644 ]
  %648 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %647, i64 0, i32 2
  %649 = load ptr, ptr %648, align 8, !tbaa !155
  %650 = icmp eq ptr %649, null
  br i1 %650, label %651, label %646, !llvm.loop !156

651:                                              ; preds = %646
  store ptr %647, ptr %638, align 8, !tbaa !137
  br label %652

652:                                              ; preds = %652, %651
  %653 = phi ptr [ %645, %651 ], [ %655, %652 ]
  %654 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %653, i64 0, i32 3
  %655 = load ptr, ptr %654, align 8, !tbaa !157
  %656 = icmp eq ptr %655, null
  br i1 %656, label %657, label %652, !llvm.loop !158

657:                                              ; preds = %652
  store ptr %653, ptr %639, align 8, !tbaa !137
  %658 = getelementptr inbounds i8, ptr %5, i64 40
  %659 = load i64, ptr %658, align 8, !tbaa !54
  store i64 %659, ptr %640, align 8, !tbaa !54
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #31
  store ptr %645, ptr %637, align 8, !tbaa !137
  br label %660

660:                                              ; preds = %657, %635
  %661 = getelementptr inbounds %class.MallocPlus, ptr %11, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, ptr %661, align 8, !tbaa !50
  %662 = getelementptr inbounds %class.MallocPlus, ptr %11, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %662, align 8, !tbaa !51
  %663 = getelementptr inbounds %class.MallocPlus, ptr %11, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %661, ptr %663, align 8, !tbaa !52
  %664 = getelementptr inbounds %class.MallocPlus, ptr %11, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %661, ptr %664, align 8, !tbaa !53
  %665 = getelementptr inbounds %class.MallocPlus, ptr %11, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %665, align 8, !tbaa !54
  %666 = getelementptr inbounds %class.MallocPlus, ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %667 = load ptr, ptr %666, align 8, !tbaa !51
  %668 = icmp eq ptr %667, null
  br i1 %668, label %688, label %669

669:                                              ; preds = %660
  %670 = getelementptr inbounds %class.MallocPlus, ptr %11, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #31
  store ptr %670, ptr %7, align 8, !tbaa !137
  %671 = invoke noundef ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_M_copyILb0ENSB_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS5_ESG_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %670, ptr noundef nonnull %667, ptr noundef nonnull %661, ptr noundef nonnull align 8 dereferenceable(8) %7)
          to label %672 unwind label %686

672:                                              ; preds = %669, %672
  %673 = phi ptr [ %675, %672 ], [ %671, %669 ]
  %674 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %673, i64 0, i32 2
  %675 = load ptr, ptr %674, align 8, !tbaa !155
  %676 = icmp eq ptr %675, null
  br i1 %676, label %677, label %672, !llvm.loop !156

677:                                              ; preds = %672
  store ptr %673, ptr %663, align 8, !tbaa !137
  br label %678

678:                                              ; preds = %678, %677
  %679 = phi ptr [ %671, %677 ], [ %681, %678 ]
  %680 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %679, i64 0, i32 3
  %681 = load ptr, ptr %680, align 8, !tbaa !157
  %682 = icmp eq ptr %681, null
  br i1 %682, label %683, label %678, !llvm.loop !158

683:                                              ; preds = %678
  store ptr %679, ptr %664, align 8, !tbaa !137
  %684 = getelementptr inbounds %class.MallocPlus, ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %685 = load i64, ptr %684, align 8, !tbaa !54
  store i64 %685, ptr %665, align 8, !tbaa !54
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #31
  store ptr %671, ptr %662, align 8, !tbaa !137
  br label %688

686:                                              ; preds = %669
  %687 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entrySt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %11) #31
  br label %941

688:                                              ; preds = %683, %660
  %689 = invoke noundef ptr @_ZN10MallocPlus26memory_entry_by_name_beginEv(ptr noundef nonnull align 8 dereferenceable(96) %11)
          to label %690 unwind label %724

690:                                              ; preds = %688
  %691 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %692 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %693 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %694 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  br label %695

695:                                              ; preds = %690, %925
  %696 = phi ptr [ %926, %925 ], [ %689, %690 ]
  %697 = invoke noundef ptr @_ZN10MallocPlus24memory_entry_by_name_endEv(ptr noundef nonnull align 8 dereferenceable(96) %11)
          to label %698 unwind label %722

698:                                              ; preds = %695
  %699 = icmp eq ptr %696, %697
  br i1 %699, label %927, label %700

700:                                              ; preds = %698
  %701 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %696, i64 0, i32 4
  %702 = load i64, ptr %701, align 8, !tbaa !159
  switch i64 %702, label %925 [
    i64 8, label %703
    i64 4, label %816
  ]

703:                                              ; preds = %700
  %704 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !67
  %705 = sext i32 %704 to i64
  %706 = invoke noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %5, i64 noundef %705, i64 noundef 8, ptr noundef nonnull @.str.36, i32 noundef 16)
          to label %707 unwind label %726

707:                                              ; preds = %703
  %708 = load ptr, ptr %696, align 8, !tbaa !161
  %709 = load i64, ptr %60, align 8, !tbaa !43
  %710 = trunc i64 %709 to i32
  %711 = icmp sgt i32 %710, 0
  br i1 %711, label %712, label %720

712:                                              ; preds = %707
  %713 = load ptr, ptr %3, align 8, !tbaa !59
  %714 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save, align 8
  %715 = load ptr, ptr %691, align 8
  %716 = load ptr, ptr %692, align 8
  %717 = load ptr, ptr %693, align 8
  %718 = load ptr, ptr %694, align 8
  %719 = and i64 %709, 4294967295
  br label %728

720:                                              ; preds = %810, %707
  %721 = invoke noundef ptr @_ZN10MallocPlus14memory_replaceEPvS0_(ptr noundef nonnull align 8 dereferenceable(96) %5, ptr noundef %708, ptr noundef %706)
          to label %925 unwind label %814

722:                                              ; preds = %695, %925
  %723 = landingpad { ptr, i32 }
          cleanup
  br label %939

724:                                              ; preds = %688
  %725 = landingpad { ptr, i32 }
          cleanup
  br label %939

726:                                              ; preds = %703
  %727 = landingpad { ptr, i32 }
          cleanup
  br label %939

728:                                              ; preds = %712, %810
  %729 = phi i64 [ 0, %712 ], [ %812, %810 ]
  %730 = phi i32 [ 0, %712 ], [ %811, %810 ]
  %731 = getelementptr inbounds i32, ptr %713, i64 %729
  %732 = load i32, ptr %731, align 4, !tbaa !67
  %733 = icmp eq i32 %732, 0
  br i1 %733, label %734, label %737

734:                                              ; preds = %728
  %735 = getelementptr inbounds double, ptr %708, i64 %729
  %736 = load double, ptr %735, align 8, !tbaa !45
  br label %803

737:                                              ; preds = %728
  %738 = icmp slt i32 %732, 0
  br i1 %738, label %739, label %784

739:                                              ; preds = %737
  switch i32 %732, label %810 [
    i32 -2, label %740
    i32 -3, label %762
  ]

740:                                              ; preds = %739
  %741 = getelementptr inbounds i32, ptr %717, i64 %729
  %742 = load i32, ptr %741, align 4, !tbaa !67
  %743 = getelementptr inbounds i32, ptr %718, i64 %729
  %744 = load i32, ptr %743, align 4, !tbaa !67
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds i32, ptr %717, i64 %745
  %747 = load i32, ptr %746, align 4, !tbaa !67
  %748 = getelementptr inbounds double, ptr %708, i64 %729
  %749 = load double, ptr %748, align 8, !tbaa !45
  %750 = sext i32 %742 to i64
  %751 = getelementptr inbounds double, ptr %708, i64 %750
  %752 = load double, ptr %751, align 8, !tbaa !45
  %753 = fadd double %749, %752
  %754 = getelementptr inbounds double, ptr %708, i64 %745
  %755 = load double, ptr %754, align 8, !tbaa !45
  %756 = fadd double %753, %755
  %757 = sext i32 %747 to i64
  %758 = getelementptr inbounds double, ptr %708, i64 %757
  %759 = load double, ptr %758, align 8, !tbaa !45
  %760 = fadd double %756, %759
  %761 = fmul double %760, 2.500000e-01
  br label %803

762:                                              ; preds = %739
  %763 = getelementptr inbounds i32, ptr %715, i64 %729
  %764 = load i32, ptr %763, align 4, !tbaa !67
  %765 = getelementptr inbounds i32, ptr %716, i64 %729
  %766 = load i32, ptr %765, align 4, !tbaa !67
  %767 = sext i32 %766 to i64
  %768 = getelementptr inbounds i32, ptr %715, i64 %767
  %769 = load i32, ptr %768, align 4, !tbaa !67
  %770 = getelementptr inbounds double, ptr %708, i64 %729
  %771 = load double, ptr %770, align 8, !tbaa !45
  %772 = sext i32 %764 to i64
  %773 = getelementptr inbounds double, ptr %708, i64 %772
  %774 = load double, ptr %773, align 8, !tbaa !45
  %775 = fadd double %771, %774
  %776 = getelementptr inbounds double, ptr %708, i64 %767
  %777 = load double, ptr %776, align 8, !tbaa !45
  %778 = fadd double %775, %777
  %779 = sext i32 %769 to i64
  %780 = getelementptr inbounds double, ptr %708, i64 %779
  %781 = load double, ptr %780, align 8, !tbaa !45
  %782 = fadd double %778, %781
  %783 = fmul double %782, 2.500000e-01
  br label %803

784:                                              ; preds = %737
  %785 = getelementptr inbounds double, ptr %708, i64 %729
  %786 = load double, ptr %785, align 8, !tbaa !45
  %787 = sext i32 %730 to i64
  %788 = getelementptr inbounds double, ptr %706, i64 %787
  store double %786, ptr %788, align 8, !tbaa !45
  %789 = add nsw i32 %730, 1
  %790 = load double, ptr %785, align 8, !tbaa !45
  %791 = sext i32 %789 to i64
  %792 = getelementptr inbounds double, ptr %706, i64 %791
  store double %790, ptr %792, align 8, !tbaa !45
  %793 = add nsw i32 %730, 2
  %794 = getelementptr inbounds i32, ptr %714, i64 %729
  %795 = load i32, ptr %794, align 4, !tbaa !67
  %796 = icmp eq i32 %795, 1
  br i1 %796, label %797, label %810

797:                                              ; preds = %784
  %798 = load double, ptr %785, align 8, !tbaa !45
  %799 = sext i32 %793 to i64
  %800 = getelementptr inbounds double, ptr %706, i64 %799
  store double %798, ptr %800, align 8, !tbaa !45
  %801 = add nsw i32 %730, 3
  %802 = load double, ptr %785, align 8, !tbaa !45
  br label %803

803:                                              ; preds = %762, %797, %734, %740
  %804 = phi i32 [ %730, %740 ], [ %730, %734 ], [ %801, %797 ], [ %730, %762 ]
  %805 = phi double [ %761, %740 ], [ %736, %734 ], [ %802, %797 ], [ %783, %762 ]
  %806 = phi i32 [ 1, %740 ], [ 1, %734 ], [ 4, %797 ], [ 1, %762 ]
  %807 = sext i32 %804 to i64
  %808 = getelementptr inbounds double, ptr %706, i64 %807
  store double %805, ptr %808, align 8, !tbaa !45
  %809 = add nsw i32 %730, %806
  br label %810

810:                                              ; preds = %803, %739, %784
  %811 = phi i32 [ %793, %784 ], [ %730, %739 ], [ %809, %803 ]
  %812 = add nuw nsw i64 %729, 1
  %813 = icmp eq i64 %812, %719
  br i1 %813, label %720, label %728, !llvm.loop !162

814:                                              ; preds = %720
  %815 = landingpad { ptr, i32 }
          cleanup
  br label %939

816:                                              ; preds = %700
  %817 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !67
  %818 = sext i32 %817 to i64
  %819 = invoke noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %5, i64 noundef %818, i64 noundef 4, ptr noundef nonnull @.str.37, i32 noundef 16)
          to label %820 unwind label %835

820:                                              ; preds = %816
  %821 = load ptr, ptr %696, align 8, !tbaa !161
  %822 = load i64, ptr %60, align 8, !tbaa !43
  %823 = trunc i64 %822 to i32
  %824 = icmp sgt i32 %823, 0
  br i1 %824, label %825, label %833

825:                                              ; preds = %820
  %826 = load ptr, ptr %3, align 8, !tbaa !59
  %827 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save, align 8
  %828 = load ptr, ptr %691, align 8
  %829 = load ptr, ptr %692, align 8
  %830 = load ptr, ptr %693, align 8
  %831 = load ptr, ptr %694, align 8
  %832 = and i64 %822, 4294967295
  br label %837

833:                                              ; preds = %919, %820
  %834 = invoke noundef ptr @_ZN10MallocPlus14memory_replaceEPvS0_(ptr noundef nonnull align 8 dereferenceable(96) %5, ptr noundef %821, ptr noundef %819)
          to label %925 unwind label %923

835:                                              ; preds = %816
  %836 = landingpad { ptr, i32 }
          cleanup
  br label %939

837:                                              ; preds = %825, %919
  %838 = phi i64 [ 0, %825 ], [ %921, %919 ]
  %839 = phi i32 [ 0, %825 ], [ %920, %919 ]
  %840 = getelementptr inbounds i32, ptr %826, i64 %838
  %841 = load i32, ptr %840, align 4, !tbaa !67
  %842 = icmp eq i32 %841, 0
  br i1 %842, label %843, label %846

843:                                              ; preds = %837
  %844 = getelementptr inbounds float, ptr %821, i64 %838
  %845 = load float, ptr %844, align 4, !tbaa !88
  br label %912

846:                                              ; preds = %837
  %847 = icmp slt i32 %841, 0
  br i1 %847, label %848, label %893

848:                                              ; preds = %846
  switch i32 %841, label %919 [
    i32 -2, label %849
    i32 -3, label %871
  ]

849:                                              ; preds = %848
  %850 = getelementptr inbounds i32, ptr %830, i64 %838
  %851 = load i32, ptr %850, align 4, !tbaa !67
  %852 = getelementptr inbounds i32, ptr %831, i64 %838
  %853 = load i32, ptr %852, align 4, !tbaa !67
  %854 = sext i32 %853 to i64
  %855 = getelementptr inbounds i32, ptr %830, i64 %854
  %856 = load i32, ptr %855, align 4, !tbaa !67
  %857 = getelementptr inbounds float, ptr %821, i64 %838
  %858 = load float, ptr %857, align 4, !tbaa !88
  %859 = sext i32 %851 to i64
  %860 = getelementptr inbounds float, ptr %821, i64 %859
  %861 = load float, ptr %860, align 4, !tbaa !88
  %862 = fadd float %858, %861
  %863 = getelementptr inbounds float, ptr %821, i64 %854
  %864 = load float, ptr %863, align 4, !tbaa !88
  %865 = fadd float %862, %864
  %866 = sext i32 %856 to i64
  %867 = getelementptr inbounds float, ptr %821, i64 %866
  %868 = load float, ptr %867, align 4, !tbaa !88
  %869 = fadd float %865, %868
  %870 = fmul float %869, 2.500000e-01
  br label %912

871:                                              ; preds = %848
  %872 = getelementptr inbounds i32, ptr %828, i64 %838
  %873 = load i32, ptr %872, align 4, !tbaa !67
  %874 = getelementptr inbounds i32, ptr %829, i64 %838
  %875 = load i32, ptr %874, align 4, !tbaa !67
  %876 = sext i32 %875 to i64
  %877 = getelementptr inbounds i32, ptr %828, i64 %876
  %878 = load i32, ptr %877, align 4, !tbaa !67
  %879 = getelementptr inbounds float, ptr %821, i64 %838
  %880 = load float, ptr %879, align 4, !tbaa !88
  %881 = sext i32 %873 to i64
  %882 = getelementptr inbounds float, ptr %821, i64 %881
  %883 = load float, ptr %882, align 4, !tbaa !88
  %884 = fadd float %880, %883
  %885 = getelementptr inbounds float, ptr %821, i64 %876
  %886 = load float, ptr %885, align 4, !tbaa !88
  %887 = fadd float %884, %886
  %888 = sext i32 %878 to i64
  %889 = getelementptr inbounds float, ptr %821, i64 %888
  %890 = load float, ptr %889, align 4, !tbaa !88
  %891 = fadd float %887, %890
  %892 = fmul float %891, 2.500000e-01
  br label %912

893:                                              ; preds = %846
  %894 = getelementptr inbounds float, ptr %821, i64 %838
  %895 = load float, ptr %894, align 4, !tbaa !88
  %896 = sext i32 %839 to i64
  %897 = getelementptr inbounds float, ptr %819, i64 %896
  store float %895, ptr %897, align 4, !tbaa !88
  %898 = add nsw i32 %839, 1
  %899 = load float, ptr %894, align 4, !tbaa !88
  %900 = sext i32 %898 to i64
  %901 = getelementptr inbounds float, ptr %819, i64 %900
  store float %899, ptr %901, align 4, !tbaa !88
  %902 = add nsw i32 %839, 2
  %903 = getelementptr inbounds i32, ptr %827, i64 %838
  %904 = load i32, ptr %903, align 4, !tbaa !67
  %905 = icmp eq i32 %904, 1
  br i1 %905, label %906, label %919

906:                                              ; preds = %893
  %907 = load float, ptr %894, align 4, !tbaa !88
  %908 = sext i32 %902 to i64
  %909 = getelementptr inbounds float, ptr %819, i64 %908
  store float %907, ptr %909, align 4, !tbaa !88
  %910 = add nsw i32 %839, 3
  %911 = load float, ptr %894, align 4, !tbaa !88
  br label %912

912:                                              ; preds = %871, %906, %843, %849
  %913 = phi i32 [ %839, %849 ], [ %839, %843 ], [ %910, %906 ], [ %839, %871 ]
  %914 = phi float [ %870, %849 ], [ %845, %843 ], [ %911, %906 ], [ %892, %871 ]
  %915 = phi i32 [ 1, %849 ], [ 1, %843 ], [ 4, %906 ], [ 1, %871 ]
  %916 = sext i32 %913 to i64
  %917 = getelementptr inbounds float, ptr %819, i64 %916
  store float %914, ptr %917, align 4, !tbaa !88
  %918 = add nsw i32 %839, %915
  br label %919

919:                                              ; preds = %912, %848, %893
  %920 = phi i32 [ %902, %893 ], [ %839, %848 ], [ %918, %912 ]
  %921 = add nuw nsw i64 %838, 1
  %922 = icmp eq i64 %921, %832
  br i1 %922, label %833, label %837, !llvm.loop !163

923:                                              ; preds = %833
  %924 = landingpad { ptr, i32 }
          cleanup
  br label %939

925:                                              ; preds = %833, %700, %720
  %926 = invoke noundef ptr @_ZN10MallocPlus25memory_entry_by_name_nextEv(ptr noundef nonnull align 8 dereferenceable(96) %11)
          to label %695 unwind label %722, !llvm.loop !164

927:                                              ; preds = %698
  %928 = getelementptr inbounds %class.MallocPlus, ptr %11, i64 0, i32 1
  %929 = load ptr, ptr %662, align 8, !tbaa !51
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %928, ptr noundef %929)
          to label %933 unwind label %930

930:                                              ; preds = %927
  %931 = landingpad { ptr, i32 }
          catch ptr null
  %932 = extractvalue { ptr, i32 } %931, 0
  call void @__clang_call_terminate(ptr %932) #32
  unreachable

933:                                              ; preds = %927
  %934 = load ptr, ptr %637, align 8, !tbaa !51
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %11, ptr noundef %934)
          to label %938 unwind label %935

935:                                              ; preds = %933
  %936 = landingpad { ptr, i32 }
          catch ptr null
  %937 = extractvalue { ptr, i32 } %936, 0
  call void @__clang_call_terminate(ptr %937) #32
  unreachable

938:                                              ; preds = %933
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11) #31
  br label %943

939:                                              ; preds = %722, %724, %835, %923, %726, %814
  %940 = phi { ptr, i32 } [ %815, %814 ], [ %727, %726 ], [ %924, %923 ], [ %836, %835 ], [ %723, %722 ], [ %725, %724 ]
  call void @_ZN10MallocPlusD2Ev(ptr noundef nonnull align 8 dereferenceable(96) %11) #31
  br label %941

941:                                              ; preds = %686, %939
  %942 = phi { ptr, i32 } [ %940, %939 ], [ %687, %686 ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11) #31
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #31
  resume { ptr, i32 } %942

943:                                              ; preds = %938, %248
  %944 = load i8, ptr @neighbor_remap, align 1, !tbaa !165, !range !130, !noundef !131
  %945 = icmp eq i8 %944, 0
  br i1 %945, label %1197, label %946

946:                                              ; preds = %943
  %947 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !67
  %948 = sext i32 %947 to i64
  %949 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %195, i64 noundef %948, i64 noundef 4, ptr noundef nonnull @.str.38, i32 noundef 0)
  store ptr %949, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nlft_old, align 8, !tbaa !137
  %950 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !67
  %951 = sext i32 %950 to i64
  %952 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %195, i64 noundef %951, i64 noundef 4, ptr noundef nonnull @.str.39, i32 noundef 0)
  store ptr %952, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nrht_old, align 8, !tbaa !137
  %953 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !67
  %954 = sext i32 %953 to i64
  %955 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %195, i64 noundef %954, i64 noundef 4, ptr noundef nonnull @.str.40, i32 noundef 0)
  store ptr %955, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nbot_old, align 8, !tbaa !137
  %956 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !67
  %957 = sext i32 %956 to i64
  %958 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %195, i64 noundef %957, i64 noundef 4, ptr noundef nonnull @.str.41, i32 noundef 0)
  %959 = ptrtoint ptr %958 to i64
  store ptr %958, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8ntop_old, align 8, !tbaa !137
  %960 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !67
  %961 = icmp sgt i32 %960, 0
  br i1 %961, label %962, label %1020

962:                                              ; preds = %946
  %963 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nlft_old, align 8, !tbaa !137
  %964 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nrht_old, align 8, !tbaa !137
  %965 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nbot_old, align 8, !tbaa !137
  %966 = zext i32 %960 to i64
  %967 = icmp ult i32 %960, 32
  br i1 %967, label %1005, label %968

968:                                              ; preds = %962
  %969 = ptrtoint ptr %965 to i64
  %970 = ptrtoint ptr %964 to i64
  %971 = ptrtoint ptr %963 to i64
  %972 = sub i64 %970, %971
  %973 = icmp ult i64 %972, 32
  %974 = sub i64 %969, %971
  %975 = icmp ult i64 %974, 32
  %976 = or i1 %973, %975
  %977 = sub i64 %959, %971
  %978 = icmp ult i64 %977, 32
  %979 = or i1 %976, %978
  %980 = sub i64 %969, %970
  %981 = icmp ult i64 %980, 32
  %982 = or i1 %979, %981
  %983 = sub i64 %959, %970
  %984 = icmp ult i64 %983, 32
  %985 = or i1 %982, %984
  %986 = sub i64 %959, %969
  %987 = icmp ult i64 %986, 32
  %988 = or i1 %985, %987
  br i1 %988, label %1005, label %989

989:                                              ; preds = %968
  %990 = and i64 %966, 4294967288
  br label %991

991:                                              ; preds = %991, %989
  %992 = phi i64 [ 0, %989 ], [ %1001, %991 ]
  %993 = getelementptr inbounds i32, ptr %963, i64 %992
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %993, align 4, !tbaa !67
  %994 = getelementptr inbounds i32, ptr %993, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %994, align 4, !tbaa !67
  %995 = getelementptr inbounds i32, ptr %964, i64 %992
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %995, align 4, !tbaa !67
  %996 = getelementptr inbounds i32, ptr %995, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %996, align 4, !tbaa !67
  %997 = getelementptr inbounds i32, ptr %965, i64 %992
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %997, align 4, !tbaa !67
  %998 = getelementptr inbounds i32, ptr %997, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %998, align 4, !tbaa !67
  %999 = getelementptr inbounds i32, ptr %958, i64 %992
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %999, align 4, !tbaa !67
  %1000 = getelementptr inbounds i32, ptr %999, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %1000, align 4, !tbaa !67
  %1001 = add nuw i64 %992, 8
  %1002 = icmp eq i64 %1001, %990
  br i1 %1002, label %1003, label %991, !llvm.loop !166

1003:                                             ; preds = %991
  %1004 = icmp eq i64 %990, %966
  br i1 %1004, label %1020, label %1005

1005:                                             ; preds = %968, %962, %1003
  %1006 = phi i64 [ 0, %968 ], [ 0, %962 ], [ %990, %1003 ]
  %1007 = xor i64 %1006, -1
  %1008 = and i64 %966, 1
  %1009 = icmp eq i64 %1008, 0
  br i1 %1009, label %1016, label %1010

1010:                                             ; preds = %1005
  %1011 = getelementptr inbounds i32, ptr %963, i64 %1006
  store i32 -1, ptr %1011, align 4, !tbaa !67
  %1012 = getelementptr inbounds i32, ptr %964, i64 %1006
  store i32 -1, ptr %1012, align 4, !tbaa !67
  %1013 = getelementptr inbounds i32, ptr %965, i64 %1006
  store i32 -1, ptr %1013, align 4, !tbaa !67
  %1014 = getelementptr inbounds i32, ptr %958, i64 %1006
  store i32 -1, ptr %1014, align 4, !tbaa !67
  %1015 = or i64 %1006, 1
  br label %1016

1016:                                             ; preds = %1010, %1005
  %1017 = phi i64 [ %1006, %1005 ], [ %1015, %1010 ]
  %1018 = sub nsw i64 0, %966
  %1019 = icmp eq i64 %1007, %1018
  br i1 %1019, label %1020, label %1042

1020:                                             ; preds = %1016, %1042, %1003, %946
  %1021 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  call void @_ZN10MallocPlus11memory_swapEPPiS1_(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef nonnull %1021, ptr noundef nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nlft_old)
  %1022 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  call void @_ZN10MallocPlus11memory_swapEPPiS1_(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef nonnull %1022, ptr noundef nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nrht_old)
  %1023 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  call void @_ZN10MallocPlus11memory_swapEPPiS1_(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef nonnull %1023, ptr noundef nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nbot_old)
  %1024 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  call void @_ZN10MallocPlus11memory_swapEPPiS1_(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef nonnull %1024, ptr noundef nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8ntop_old)
  %1025 = load i64, ptr %60, align 8, !tbaa !43
  %1026 = trunc i64 %1025 to i32
  %1027 = icmp sgt i32 %1026, 0
  br i1 %1027, label %1028, label %1055

1028:                                             ; preds = %1020
  %1029 = load ptr, ptr %207, align 8, !tbaa !59
  %1030 = load ptr, ptr %3, align 8, !tbaa !59
  %1031 = load ptr, ptr %1021, align 8
  %1032 = load ptr, ptr %1022, align 8
  %1033 = load ptr, ptr %1023, align 8
  %1034 = load ptr, ptr %1024, align 8
  %1035 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %1036 = load ptr, ptr %1035, align 8
  %1037 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nlft_old, align 8
  %1038 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nrht_old, align 8
  %1039 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nbot_old, align 8
  %1040 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8ntop_old, align 8
  %1041 = and i64 %1025, 4294967295
  br label %1062

1042:                                             ; preds = %1016, %1042
  %1043 = phi i64 [ %1053, %1042 ], [ %1017, %1016 ]
  %1044 = getelementptr inbounds i32, ptr %963, i64 %1043
  store i32 -1, ptr %1044, align 4, !tbaa !67
  %1045 = getelementptr inbounds i32, ptr %964, i64 %1043
  store i32 -1, ptr %1045, align 4, !tbaa !67
  %1046 = getelementptr inbounds i32, ptr %965, i64 %1043
  store i32 -1, ptr %1046, align 4, !tbaa !67
  %1047 = getelementptr inbounds i32, ptr %958, i64 %1043
  store i32 -1, ptr %1047, align 4, !tbaa !67
  %1048 = add nuw nsw i64 %1043, 1
  %1049 = getelementptr inbounds i32, ptr %963, i64 %1048
  store i32 -1, ptr %1049, align 4, !tbaa !67
  %1050 = getelementptr inbounds i32, ptr %964, i64 %1048
  store i32 -1, ptr %1050, align 4, !tbaa !67
  %1051 = getelementptr inbounds i32, ptr %965, i64 %1048
  store i32 -1, ptr %1051, align 4, !tbaa !67
  %1052 = getelementptr inbounds i32, ptr %958, i64 %1048
  store i32 -1, ptr %1052, align 4, !tbaa !67
  %1053 = add nuw nsw i64 %1043, 2
  %1054 = icmp eq i64 %1053, %966
  br i1 %1054, label %1020, label %1042, !llvm.loop !167

1055:                                             ; preds = %1194, %1020
  %1056 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nlft_old, align 8, !tbaa !137
  %1057 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef %1056)
  store ptr %1057, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nlft_old, align 8, !tbaa !137
  %1058 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nrht_old, align 8, !tbaa !137
  %1059 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef %1058)
  store ptr %1059, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nrht_old, align 8, !tbaa !137
  %1060 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nbot_old, align 8, !tbaa !137
  %1061 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef %1060)
  store ptr %1061, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nbot_old, align 8, !tbaa !137
  br label %1208

1062:                                             ; preds = %1028, %1194
  %1063 = phi i64 [ 0, %1028 ], [ %1195, %1194 ]
  %1064 = getelementptr inbounds i32, ptr %1029, i64 %1063
  %1065 = load i32, ptr %1064, align 4, !tbaa !67
  %1066 = getelementptr inbounds i32, ptr %1030, i64 %1063
  %1067 = load i32, ptr %1066, align 4, !tbaa !67
  %1068 = icmp eq i32 %1067, 0
  br i1 %1068, label %1069, label %1140

1069:                                             ; preds = %1062
  %1070 = getelementptr inbounds i32, ptr %1037, i64 %1063
  %1071 = load i32, ptr %1070, align 4, !tbaa !67
  %1072 = icmp slt i32 %1071, %1026
  %1073 = icmp sgt i32 %1071, -1
  %1074 = and i1 %1072, %1073
  br i1 %1074, label %1075, label %1087

1075:                                             ; preds = %1069
  %1076 = zext i32 %1071 to i64
  %1077 = getelementptr inbounds i32, ptr %1030, i64 %1076
  %1078 = load i32, ptr %1077, align 4, !tbaa !67
  %1079 = icmp eq i32 %1078, 0
  br i1 %1079, label %1080, label %1083

1080:                                             ; preds = %1075
  %1081 = getelementptr inbounds i32, ptr %1029, i64 %1076
  %1082 = load i32, ptr %1081, align 4, !tbaa !67
  br label %1083

1083:                                             ; preds = %1075, %1080
  %1084 = phi i32 [ %1082, %1080 ], [ -1, %1075 ]
  %1085 = sext i32 %1065 to i64
  %1086 = getelementptr inbounds i32, ptr %1031, i64 %1085
  store i32 %1084, ptr %1086, align 4, !tbaa !67
  br label %1087

1087:                                             ; preds = %1083, %1069
  %1088 = getelementptr inbounds i32, ptr %1038, i64 %1063
  %1089 = load i32, ptr %1088, align 4, !tbaa !67
  %1090 = icmp slt i32 %1089, %1026
  %1091 = icmp sgt i32 %1089, -1
  %1092 = and i1 %1090, %1091
  br i1 %1092, label %1093, label %1105

1093:                                             ; preds = %1087
  %1094 = zext i32 %1089 to i64
  %1095 = getelementptr inbounds i32, ptr %1030, i64 %1094
  %1096 = load i32, ptr %1095, align 4, !tbaa !67
  %1097 = icmp eq i32 %1096, 0
  br i1 %1097, label %1098, label %1101

1098:                                             ; preds = %1093
  %1099 = getelementptr inbounds i32, ptr %1029, i64 %1094
  %1100 = load i32, ptr %1099, align 4, !tbaa !67
  br label %1101

1101:                                             ; preds = %1093, %1098
  %1102 = phi i32 [ %1100, %1098 ], [ -1, %1093 ]
  %1103 = sext i32 %1065 to i64
  %1104 = getelementptr inbounds i32, ptr %1032, i64 %1103
  store i32 %1102, ptr %1104, align 4, !tbaa !67
  br label %1105

1105:                                             ; preds = %1101, %1087
  %1106 = getelementptr inbounds i32, ptr %1039, i64 %1063
  %1107 = load i32, ptr %1106, align 4, !tbaa !67
  %1108 = icmp slt i32 %1107, %1026
  %1109 = icmp sgt i32 %1107, -1
  %1110 = and i1 %1108, %1109
  br i1 %1110, label %1111, label %1123

1111:                                             ; preds = %1105
  %1112 = zext i32 %1107 to i64
  %1113 = getelementptr inbounds i32, ptr %1030, i64 %1112
  %1114 = load i32, ptr %1113, align 4, !tbaa !67
  %1115 = icmp eq i32 %1114, 0
  br i1 %1115, label %1116, label %1119

1116:                                             ; preds = %1111
  %1117 = getelementptr inbounds i32, ptr %1029, i64 %1112
  %1118 = load i32, ptr %1117, align 4, !tbaa !67
  br label %1119

1119:                                             ; preds = %1111, %1116
  %1120 = phi i32 [ %1118, %1116 ], [ -1, %1111 ]
  %1121 = sext i32 %1065 to i64
  %1122 = getelementptr inbounds i32, ptr %1033, i64 %1121
  store i32 %1120, ptr %1122, align 4, !tbaa !67
  br label %1123

1123:                                             ; preds = %1119, %1105
  %1124 = getelementptr inbounds i32, ptr %1040, i64 %1063
  %1125 = load i32, ptr %1124, align 4, !tbaa !67
  %1126 = icmp slt i32 %1125, %1026
  %1127 = icmp sgt i32 %1125, -1
  %1128 = and i1 %1126, %1127
  br i1 %1128, label %1129, label %1180

1129:                                             ; preds = %1123
  %1130 = zext i32 %1125 to i64
  %1131 = getelementptr inbounds i32, ptr %1030, i64 %1130
  %1132 = load i32, ptr %1131, align 4, !tbaa !67
  %1133 = icmp eq i32 %1132, 0
  br i1 %1133, label %1134, label %1137

1134:                                             ; preds = %1129
  %1135 = getelementptr inbounds i32, ptr %1029, i64 %1130
  %1136 = load i32, ptr %1135, align 4, !tbaa !67
  br label %1137

1137:                                             ; preds = %1129, %1134
  %1138 = phi i32 [ %1136, %1134 ], [ -1, %1129 ]
  %1139 = sext i32 %1065 to i64
  br label %1176

1140:                                             ; preds = %1062
  %1141 = icmp slt i32 %1067, -1
  br i1 %1141, label %1142, label %1147

1142:                                             ; preds = %1140
  %1143 = sext i32 %1065 to i64
  %1144 = getelementptr inbounds i32, ptr %1031, i64 %1143
  store i32 -1, ptr %1144, align 4, !tbaa !67
  %1145 = getelementptr inbounds i32, ptr %1032, i64 %1143
  store i32 -1, ptr %1145, align 4, !tbaa !67
  %1146 = getelementptr inbounds i32, ptr %1033, i64 %1143
  store i32 -1, ptr %1146, align 4, !tbaa !67
  br label %1176

1147:                                             ; preds = %1140
  %1148 = icmp sgt i32 %1067, 0
  br i1 %1148, label %1149, label %1180

1149:                                             ; preds = %1147
  %1150 = sext i32 %1065 to i64
  %1151 = getelementptr inbounds i32, ptr %1031, i64 %1150
  store i32 -1, ptr %1151, align 4, !tbaa !67
  %1152 = add nsw i32 %1065, 1
  %1153 = sext i32 %1152 to i64
  %1154 = getelementptr inbounds i32, ptr %1031, i64 %1153
  store i32 -1, ptr %1154, align 4, !tbaa !67
  %1155 = getelementptr inbounds i32, ptr %1032, i64 %1150
  store i32 -1, ptr %1155, align 4, !tbaa !67
  %1156 = getelementptr inbounds i32, ptr %1032, i64 %1153
  store i32 -1, ptr %1156, align 4, !tbaa !67
  %1157 = getelementptr inbounds i32, ptr %1033, i64 %1150
  store i32 -1, ptr %1157, align 4, !tbaa !67
  %1158 = getelementptr inbounds i32, ptr %1033, i64 %1153
  store i32 -1, ptr %1158, align 4, !tbaa !67
  %1159 = getelementptr inbounds i32, ptr %1034, i64 %1150
  store i32 -1, ptr %1159, align 4, !tbaa !67
  %1160 = getelementptr inbounds i32, ptr %1034, i64 %1153
  store i32 -1, ptr %1160, align 4, !tbaa !67
  %1161 = getelementptr inbounds i32, ptr %1036, i64 %1150
  %1162 = load i32, ptr %1161, align 4, !tbaa !67
  %1163 = icmp eq i32 %1162, 1
  br i1 %1163, label %1164, label %1180

1164:                                             ; preds = %1149
  %1165 = add nsw i32 %1065, 2
  %1166 = sext i32 %1165 to i64
  %1167 = getelementptr inbounds i32, ptr %1031, i64 %1166
  store i32 -1, ptr %1167, align 4, !tbaa !67
  %1168 = add nsw i32 %1065, 3
  %1169 = sext i32 %1168 to i64
  %1170 = getelementptr inbounds i32, ptr %1031, i64 %1169
  store i32 -1, ptr %1170, align 4, !tbaa !67
  %1171 = getelementptr inbounds i32, ptr %1032, i64 %1166
  store i32 -1, ptr %1171, align 4, !tbaa !67
  %1172 = getelementptr inbounds i32, ptr %1032, i64 %1169
  store i32 -1, ptr %1172, align 4, !tbaa !67
  %1173 = getelementptr inbounds i32, ptr %1033, i64 %1166
  store i32 -1, ptr %1173, align 4, !tbaa !67
  %1174 = getelementptr inbounds i32, ptr %1033, i64 %1169
  store i32 -1, ptr %1174, align 4, !tbaa !67
  %1175 = getelementptr inbounds i32, ptr %1034, i64 %1166
  store i32 -1, ptr %1175, align 4, !tbaa !67
  br label %1176

1176:                                             ; preds = %1137, %1164, %1142
  %1177 = phi i64 [ %1143, %1142 ], [ %1169, %1164 ], [ %1139, %1137 ]
  %1178 = phi i32 [ -1, %1142 ], [ -1, %1164 ], [ %1138, %1137 ]
  %1179 = getelementptr inbounds i32, ptr %1034, i64 %1177
  store i32 %1178, ptr %1179, align 4, !tbaa !67
  br label %1180

1180:                                             ; preds = %1176, %1149, %1147, %1123
  %1181 = load i32, ptr %1066, align 4, !tbaa !67
  %1182 = icmp sgt i32 %1181, 0
  br i1 %1182, label %1183, label %1194

1183:                                             ; preds = %1180
  %1184 = add nsw i32 %1065, 1
  %1185 = sext i32 %1184 to i64
  %1186 = getelementptr inbounds i32, ptr %1036, i64 %1185
  %1187 = load i32, ptr %1186, align 4, !tbaa !67
  switch i32 %1187, label %1194 [
    i32 -1, label %1191
    i32 -2, label %1188
    i32 -3, label %1189
    i32 -4, label %1190
  ]

1188:                                             ; preds = %1183
  br label %1191

1189:                                             ; preds = %1183
  br label %1191

1190:                                             ; preds = %1183
  br label %1191

1191:                                             ; preds = %1183, %1190, %1189, %1188
  %1192 = phi ptr [ %1032, %1188 ], [ %1033, %1189 ], [ %1034, %1190 ], [ %1031, %1183 ]
  %1193 = getelementptr inbounds i32, ptr %1192, i64 %1185
  store i32 %1184, ptr %1193, align 4, !tbaa !67
  br label %1194

1194:                                             ; preds = %1191, %1183, %1180
  %1195 = add nuw nsw i64 %1063, 1
  %1196 = icmp eq i64 %1195, %1041
  br i1 %1196, label %1055, label %1062, !llvm.loop !168

1197:                                             ; preds = %943
  %1198 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %1199 = load ptr, ptr %1198, align 8, !tbaa !73
  %1200 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef %1199)
  store ptr %1200, ptr %1198, align 8, !tbaa !73
  %1201 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %1202 = load ptr, ptr %1201, align 8, !tbaa !74
  %1203 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef %1202)
  store ptr %1203, ptr %1201, align 8, !tbaa !74
  %1204 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %1205 = load ptr, ptr %1204, align 8, !tbaa !75
  %1206 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef %1205)
  store ptr %1206, ptr %1204, align 8, !tbaa !75
  %1207 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  br label %1208

1208:                                             ; preds = %1197, %1055
  %1209 = phi ptr [ %1207, %1197 ], [ @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8ntop_old, %1055 ]
  %1210 = load ptr, ptr %1209, align 8, !tbaa !137
  %1211 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %195, ptr noundef %1210)
  store ptr %1211, ptr %1209, align 8, !tbaa !137
  br label %1212

1212:                                             ; preds = %31, %26, %22, %1208
  %1213 = load i64, ptr %9, align 8
  %1214 = getelementptr inbounds i8, ptr %9, i64 8
  %1215 = load i64, ptr %1214, align 8
  %1216 = call double @cpu_timer_stop(i64 %1213, i64 %1215)
  %1217 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 20
  %1218 = load double, ptr %1217, align 8, !tbaa !45
  %1219 = fadd double %1216, %1218
  store double %1219, ptr %1217, align 8, !tbaa !45
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #31
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local noundef i32 @_ZN4Mesh12rezone_countESt6vectorIiSaIiEERiS3_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, ptr nocapture noundef readonly %1, ptr nocapture noundef nonnull align 4 dereferenceable(4) %2, ptr nocapture noundef nonnull writeonly align 4 dereferenceable(4) %3) local_unnamed_addr #12 align 2 {
  %5 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %6 = load i64, ptr %5, align 8, !tbaa !43
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = load ptr, ptr %1, align 8, !tbaa !59
  %10 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %15 = load ptr, ptr %14, align 8
  br label %21

16:                                               ; preds = %68, %4
  %17 = phi i32 [ 0, %4 ], [ %70, %68 ]
  %18 = phi i32 [ 0, %4 ], [ %69, %68 ]
  store i32 %17, ptr %2, align 4, !tbaa !67
  store i32 %18, ptr %3, align 4, !tbaa !67
  %19 = load i32, ptr %2, align 4, !tbaa !67
  %20 = add nsw i32 %19, %18
  ret i32 %20

21:                                               ; preds = %8, %68
  %22 = phi i64 [ 0, %8 ], [ %72, %68 ]
  %23 = phi i32 [ 0, %8 ], [ %69, %68 ]
  %24 = phi i32 [ 0, %8 ], [ %70, %68 ]
  %25 = getelementptr inbounds i32, ptr %9, i64 %22
  %26 = load i32, ptr %25, align 4, !tbaa !67
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %58

28:                                               ; preds = %21
  %29 = getelementptr inbounds i32, ptr %11, i64 %22
  %30 = load i32, ptr %29, align 4, !tbaa !67
  %31 = icmp eq i32 %30, 1
  %32 = getelementptr inbounds i32, ptr %13, i64 %22
  %33 = load i32, ptr %32, align 4, !tbaa !67
  %34 = getelementptr inbounds i32, ptr %15, i64 %22
  %35 = load i32, ptr %34, align 4, !tbaa !67
  br i1 %31, label %36, label %44

36:                                               ; preds = %28
  %37 = and i32 %33, 1
  %38 = icmp ne i32 %37, 0
  %39 = and i32 %35, 1
  %40 = icmp ne i32 %39, 0
  %41 = select i1 %38, i1 true, i1 %40
  %42 = sext i1 %41 to i32
  %43 = add nsw i32 %23, %42
  br label %68

44:                                               ; preds = %28
  %45 = and i32 %33, -2147483647
  %46 = icmp eq i32 %45, 1
  %47 = and i32 %35, -2147483647
  %48 = icmp eq i32 %47, 1
  %49 = and i1 %46, %48
  br i1 %49, label %68, label %50

50:                                               ; preds = %44
  %51 = and i32 %33, 1
  %52 = icmp ne i32 %51, 0
  %53 = and i32 %35, 1
  %54 = icmp ne i32 %53, 0
  %55 = select i1 %52, i1 true, i1 %54
  %56 = sext i1 %55 to i32
  %57 = add nsw i32 %23, %56
  br label %68

58:                                               ; preds = %21
  %59 = icmp eq i32 %26, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds i32, ptr %11, i64 %22
  %62 = load i32, ptr %61, align 4, !tbaa !67
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  %65 = add nsw i32 %24, 3
  br label %68

66:                                               ; preds = %60
  %67 = add nsw i32 %24, 1
  br label %68

68:                                               ; preds = %44, %36, %50, %58, %66, %64
  %69 = phi i32 [ %23, %64 ], [ %23, %66 ], [ %23, %58 ], [ %57, %50 ], [ %43, %36 ], [ %23, %44 ]
  %70 = phi i32 [ %65, %64 ], [ %67, %66 ], [ %24, %58 ], [ %24, %50 ], [ %24, %36 ], [ %24, %44 ]
  %71 = add nuw nsw i64 %22, 1
  %72 = and i64 %71, 4294967295
  %73 = icmp ugt i64 %6, %72
  br i1 %73, label %21, label %16, !llvm.loop !141
}

declare void @cpu_timer_start(ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN4Mesh10get_boundsERiS0_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, ptr nocapture noundef nonnull writeonly align 4 dereferenceable(4) %1, ptr nocapture noundef nonnull writeonly align 4 dereferenceable(4) %2) local_unnamed_addr #13 align 2 {
  store i32 0, ptr %1, align 4, !tbaa !67
  %4 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %5 = load i64, ptr %4, align 8, !tbaa !43
  %6 = trunc i64 %5 to i32
  store i32 %6, ptr %2, align 4, !tbaa !67
  ret void
}

declare double @cpu_timer_stop(i64, i64) local_unnamed_addr #7

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #14

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN4Mesh9terminateEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %4 = load ptr, ptr %3, align 8, !tbaa !60
  %5 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %4)
  %6 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %7 = load ptr, ptr %6, align 8, !tbaa !61
  %8 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %7)
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %10 = load ptr, ptr %9, align 8, !tbaa !62
  %11 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %10)
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %13 = load ptr, ptr %12, align 8, !tbaa !85
  %14 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %13)
  %15 = load i8, ptr @neighbor_remap, align 1, !tbaa !165, !range !130, !noundef !131
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %19 = load ptr, ptr %18, align 8, !tbaa !73
  %20 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %19)
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %22 = load ptr, ptr %21, align 8, !tbaa !74
  %23 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %22)
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %25 = load ptr, ptr %24, align 8, !tbaa !75
  %26 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %25)
  %27 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %28 = load ptr, ptr %27, align 8, !tbaa !76
  %29 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %28)
  br label %30

30:                                               ; preds = %17, %1
  ret void
}

declare noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96), ptr noundef) local_unnamed_addr #7

declare void @KDTree_AddElement(ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: readwrite) uwtable
define dso_local void @_ZN4Mesh10set_boundsEi(ptr nocapture noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %1) local_unnamed_addr #15 align 2 {
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 14
  %4 = load ptr, ptr %3, align 8, !tbaa !65
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call noalias dereferenceable_or_null(4) ptr @malloc(i64 noundef 4) #34
  store ptr %7, ptr %3, align 8, !tbaa !65
  br label %8

8:                                                ; preds = %6, %2
  %9 = phi ptr [ %7, %6 ], [ %4, %2 ]
  %10 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 15
  %11 = load ptr, ptr %10, align 8, !tbaa !66
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = tail call noalias dereferenceable_or_null(4) ptr @malloc(i64 noundef 4) #34
  store ptr %14, ptr %10, align 8, !tbaa !66
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi ptr [ %14, %13 ], [ %11, %8 ]
  %17 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %18 = load i64, ptr %17, align 8, !tbaa !43
  %19 = trunc i64 %18 to i32
  store i32 0, ptr %9, align 4, !tbaa !67
  store i32 %19, ptr %16, align 4, !tbaa !67
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN4Mesh11calc_minmaxEv(ptr nocapture noundef nonnull align 8 dereferenceable(2288) %0) local_unnamed_addr #16 align 2 {
  %2 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 48
  store double 1.000000e+30, ptr %2, align 8, !tbaa !5
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 50
  store double 1.000000e+30, ptr %3, align 8, !tbaa !40
  %4 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 52
  store double 1.000000e+30, ptr %4, align 8, !tbaa !169
  %5 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %6 = load i64, ptr %5, align 8, !tbaa !43
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %129, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %10 = load ptr, ptr %9, align 8, !tbaa !44
  br label %14

11:                                               ; preds = %21
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %13 = load ptr, ptr %12, align 8, !tbaa !44
  br label %33

14:                                               ; preds = %8, %21
  %15 = phi i64 [ 0, %8 ], [ %24, %21 ]
  %16 = phi double [ 1.000000e+30, %8 ], [ %22, %21 ]
  %17 = getelementptr inbounds double, ptr %10, i64 %15
  %18 = load double, ptr %17, align 8, !tbaa !45
  %19 = fcmp olt double %18, %16
  br i1 %19, label %20, label %21

20:                                               ; preds = %14
  store double %18, ptr %2, align 8, !tbaa !5
  br label %21

21:                                               ; preds = %14, %20
  %22 = phi double [ %16, %14 ], [ %18, %20 ]
  %23 = add nuw nsw i64 %15, 1
  %24 = and i64 %23, 4294967295
  %25 = icmp ugt i64 %6, %24
  br i1 %25, label %14, label %11, !llvm.loop !170

26:                                               ; preds = %40
  %27 = load i32, ptr %0, align 8, !tbaa !57
  %28 = icmp sgt i32 %27, 2
  br i1 %28, label %29, label %61

29:                                               ; preds = %26
  br i1 %7, label %129, label %30

30:                                               ; preds = %29
  %31 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 79
  %32 = load ptr, ptr %31, align 8, !tbaa !44
  br label %45

33:                                               ; preds = %11, %40
  %34 = phi i64 [ 0, %11 ], [ %43, %40 ]
  %35 = phi double [ 1.000000e+30, %11 ], [ %41, %40 ]
  %36 = getelementptr inbounds double, ptr %13, i64 %34
  %37 = load double, ptr %36, align 8, !tbaa !45
  %38 = fcmp olt double %37, %35
  br i1 %38, label %39, label %40

39:                                               ; preds = %33
  store double %37, ptr %3, align 8, !tbaa !40
  br label %40

40:                                               ; preds = %33, %39
  %41 = phi double [ %35, %33 ], [ %37, %39 ]
  %42 = add nuw nsw i64 %34, 1
  %43 = and i64 %42, 4294967295
  %44 = icmp ugt i64 %6, %43
  br i1 %44, label %33, label %26, !llvm.loop !171

45:                                               ; preds = %30, %52
  %46 = phi i64 [ 0, %30 ], [ %55, %52 ]
  %47 = phi double [ 1.000000e+30, %30 ], [ %53, %52 ]
  %48 = getelementptr inbounds double, ptr %32, i64 %46
  %49 = load double, ptr %48, align 8, !tbaa !45
  %50 = fcmp olt double %49, %47
  br i1 %50, label %51, label %52

51:                                               ; preds = %45
  store double %49, ptr %4, align 8, !tbaa !169
  br label %52

52:                                               ; preds = %45, %51
  %53 = phi double [ %47, %45 ], [ %49, %51 ]
  %54 = add nuw nsw i64 %46, 1
  %55 = and i64 %54, 4294967295
  %56 = icmp ugt i64 %6, %55
  br i1 %56, label %45, label %57, !llvm.loop !172

57:                                               ; preds = %52
  %58 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 49
  store double -1.000000e+30, ptr %58, align 8, !tbaa !41
  %59 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 51
  store double -1.000000e+30, ptr %59, align 8, !tbaa !42
  %60 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 53
  store double -1.000000e+30, ptr %60, align 8, !tbaa !173
  br label %65

61:                                               ; preds = %26
  %62 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 49
  store double -1.000000e+30, ptr %62, align 8, !tbaa !41
  %63 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 51
  store double -1.000000e+30, ptr %63, align 8, !tbaa !42
  %64 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 53
  store double -1.000000e+30, ptr %64, align 8, !tbaa !173
  br i1 %7, label %133, label %65

65:                                               ; preds = %57, %61
  %66 = phi ptr [ %60, %57 ], [ %64, %61 ]
  %67 = phi ptr [ %59, %57 ], [ %63, %61 ]
  %68 = phi ptr [ %58, %57 ], [ %62, %61 ]
  %69 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %70 = load ptr, ptr %69, align 8, !tbaa !44
  %71 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %72 = load ptr, ptr %71, align 8, !tbaa !44
  br label %78

73:                                               ; preds = %88
  %74 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %75 = load ptr, ptr %74, align 8, !tbaa !44
  %76 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %77 = load ptr, ptr %76, align 8, !tbaa !44
  br label %99

78:                                               ; preds = %65, %88
  %79 = phi i64 [ 0, %65 ], [ %91, %88 ]
  %80 = phi double [ -1.000000e+30, %65 ], [ %89, %88 ]
  %81 = getelementptr inbounds double, ptr %70, i64 %79
  %82 = load double, ptr %81, align 8, !tbaa !45
  %83 = getelementptr inbounds double, ptr %72, i64 %79
  %84 = load double, ptr %83, align 8, !tbaa !45
  %85 = fadd double %82, %84
  %86 = fcmp ogt double %85, %80
  br i1 %86, label %87, label %88

87:                                               ; preds = %78
  store double %85, ptr %68, align 8, !tbaa !41
  br label %88

88:                                               ; preds = %78, %87
  %89 = phi double [ %80, %78 ], [ %85, %87 ]
  %90 = add nuw nsw i64 %79, 1
  %91 = and i64 %90, 4294967295
  %92 = icmp ugt i64 %6, %91
  br i1 %92, label %78, label %73, !llvm.loop !174

93:                                               ; preds = %109
  br i1 %28, label %94, label %133

94:                                               ; preds = %93
  %95 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 79
  %96 = load ptr, ptr %95, align 8, !tbaa !44
  %97 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 80
  %98 = load ptr, ptr %97, align 8, !tbaa !44
  br label %114

99:                                               ; preds = %73, %109
  %100 = phi i64 [ 0, %73 ], [ %112, %109 ]
  %101 = phi double [ -1.000000e+30, %73 ], [ %110, %109 ]
  %102 = getelementptr inbounds double, ptr %75, i64 %100
  %103 = load double, ptr %102, align 8, !tbaa !45
  %104 = getelementptr inbounds double, ptr %77, i64 %100
  %105 = load double, ptr %104, align 8, !tbaa !45
  %106 = fadd double %103, %105
  %107 = fcmp ogt double %106, %101
  br i1 %107, label %108, label %109

108:                                              ; preds = %99
  store double %106, ptr %67, align 8, !tbaa !42
  br label %109

109:                                              ; preds = %99, %108
  %110 = phi double [ %101, %99 ], [ %106, %108 ]
  %111 = add nuw nsw i64 %100, 1
  %112 = and i64 %111, 4294967295
  %113 = icmp ugt i64 %6, %112
  br i1 %113, label %99, label %93, !llvm.loop !175

114:                                              ; preds = %94, %124
  %115 = phi i64 [ 0, %94 ], [ %127, %124 ]
  %116 = phi double [ -1.000000e+30, %94 ], [ %125, %124 ]
  %117 = getelementptr inbounds double, ptr %96, i64 %115
  %118 = load double, ptr %117, align 8, !tbaa !45
  %119 = getelementptr inbounds double, ptr %98, i64 %115
  %120 = load double, ptr %119, align 8, !tbaa !45
  %121 = fadd double %118, %120
  %122 = fcmp ogt double %121, %116
  br i1 %122, label %123, label %124

123:                                              ; preds = %114
  store double %121, ptr %66, align 8, !tbaa !173
  br label %124

124:                                              ; preds = %114, %123
  %125 = phi double [ %116, %114 ], [ %121, %123 ]
  %126 = add nuw nsw i64 %115, 1
  %127 = and i64 %126, 4294967295
  %128 = icmp ugt i64 %6, %127
  br i1 %128, label %114, label %133, !llvm.loop !176

129:                                              ; preds = %1, %29
  %130 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 49
  store double -1.000000e+30, ptr %130, align 8, !tbaa !41
  %131 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 51
  store double -1.000000e+30, ptr %131, align 8, !tbaa !42
  %132 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 53
  store double -1.000000e+30, ptr %132, align 8, !tbaa !173
  br label %133

133:                                              ; preds = %124, %129, %61, %93
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN4Mesh17calc_centerminmaxEv(ptr nocapture noundef nonnull align 8 dereferenceable(2288) %0) local_unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 54
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 56
  %4 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 58
  %5 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 55
  store <2 x double> <double 1.000000e+30, double -1.000000e+30>, ptr %2, align 8, !tbaa !45
  %6 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 57
  store <2 x double> <double 1.000000e+30, double -1.000000e+30>, ptr %3, align 8, !tbaa !45
  %7 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 59
  store <2 x double> <double 1.000000e+30, double -1.000000e+30>, ptr %4, align 8, !tbaa !45
  %8 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %9 = load i64, ptr %8, align 8, !tbaa !43
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %93, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %13 = load ptr, ptr %12, align 8, !tbaa !44
  %14 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %15 = load ptr, ptr %14, align 8, !tbaa !44
  br label %21

16:                                               ; preds = %37
  %17 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %18 = load ptr, ptr %17, align 8, !tbaa !44
  %19 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %20 = load ptr, ptr %19, align 8, !tbaa !44
  br label %51

21:                                               ; preds = %11, %37
  %22 = phi i64 [ 0, %11 ], [ %40, %37 ]
  %23 = phi double [ 1.000000e+30, %11 ], [ %34, %37 ]
  %24 = phi double [ -1.000000e+30, %11 ], [ %38, %37 ]
  %25 = getelementptr inbounds double, ptr %13, i64 %22
  %26 = load double, ptr %25, align 8, !tbaa !45
  %27 = getelementptr inbounds double, ptr %15, i64 %22
  %28 = load double, ptr %27, align 8, !tbaa !45
  %29 = fmul double %28, 5.000000e-01
  %30 = fadd double %26, %29
  %31 = fcmp olt double %30, %23
  br i1 %31, label %32, label %33

32:                                               ; preds = %21
  store double %30, ptr %2, align 8, !tbaa !177
  br label %33

33:                                               ; preds = %32, %21
  %34 = phi double [ %30, %32 ], [ %23, %21 ]
  %35 = fcmp ogt double %30, %24
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  store double %30, ptr %5, align 8, !tbaa !178
  br label %37

37:                                               ; preds = %33, %36
  %38 = phi double [ %24, %33 ], [ %30, %36 ]
  %39 = add nuw nsw i64 %22, 1
  %40 = and i64 %39, 4294967295
  %41 = icmp ugt i64 %9, %40
  br i1 %41, label %21, label %16, !llvm.loop !179

42:                                               ; preds = %67
  %43 = load i32, ptr %0, align 8, !tbaa !57
  %44 = icmp slt i32 %43, 3
  %45 = or i1 %44, %10
  br i1 %45, label %93, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 79
  %48 = load ptr, ptr %47, align 8, !tbaa !44
  %49 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 80
  %50 = load ptr, ptr %49, align 8, !tbaa !44
  br label %72

51:                                               ; preds = %16, %67
  %52 = phi i64 [ 0, %16 ], [ %70, %67 ]
  %53 = phi double [ 1.000000e+30, %16 ], [ %64, %67 ]
  %54 = phi double [ -1.000000e+30, %16 ], [ %68, %67 ]
  %55 = getelementptr inbounds double, ptr %18, i64 %52
  %56 = load double, ptr %55, align 8, !tbaa !45
  %57 = getelementptr inbounds double, ptr %20, i64 %52
  %58 = load double, ptr %57, align 8, !tbaa !45
  %59 = fmul double %58, 5.000000e-01
  %60 = fadd double %56, %59
  %61 = fcmp olt double %60, %53
  br i1 %61, label %62, label %63

62:                                               ; preds = %51
  store double %60, ptr %3, align 8, !tbaa !180
  br label %63

63:                                               ; preds = %62, %51
  %64 = phi double [ %60, %62 ], [ %53, %51 ]
  %65 = fcmp ogt double %60, %54
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  store double %60, ptr %6, align 8, !tbaa !181
  br label %67

67:                                               ; preds = %63, %66
  %68 = phi double [ %54, %63 ], [ %60, %66 ]
  %69 = add nuw nsw i64 %52, 1
  %70 = and i64 %69, 4294967295
  %71 = icmp ugt i64 %9, %70
  br i1 %71, label %51, label %42, !llvm.loop !182

72:                                               ; preds = %46, %88
  %73 = phi i64 [ 0, %46 ], [ %91, %88 ]
  %74 = phi double [ 1.000000e+30, %46 ], [ %85, %88 ]
  %75 = phi double [ -1.000000e+30, %46 ], [ %89, %88 ]
  %76 = getelementptr inbounds double, ptr %48, i64 %73
  %77 = load double, ptr %76, align 8, !tbaa !45
  %78 = getelementptr inbounds double, ptr %50, i64 %73
  %79 = load double, ptr %78, align 8, !tbaa !45
  %80 = fmul double %79, 5.000000e-01
  %81 = fadd double %77, %80
  %82 = fcmp olt double %81, %74
  br i1 %82, label %83, label %84

83:                                               ; preds = %72
  store double %81, ptr %4, align 8, !tbaa !183
  br label %84

84:                                               ; preds = %83, %72
  %85 = phi double [ %81, %83 ], [ %74, %72 ]
  %86 = fcmp ogt double %81, %75
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  store double %81, ptr %7, align 8, !tbaa !184
  br label %88

88:                                               ; preds = %84, %87
  %89 = phi double [ %75, %84 ], [ %81, %87 ]
  %90 = add nuw nsw i64 %73, 1
  %91 = and i64 %90, 4294967295
  %92 = icmp ugt i64 %9, %91
  br i1 %92, label %72, label %93, !llvm.loop !185

93:                                               ; preds = %88, %42, %1
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(ptr) local_unnamed_addr #17

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(ptr, ptr, ptr) local_unnamed_addr #17

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(ptr) local_unnamed_addr #17

declare noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96), i64 noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #7

declare void @_ZN10MallocPlus11memory_swapEPPiS1_(ptr noundef nonnull align 8 dereferenceable(96), ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_ZN4Mesh20set_refinement_orderEPiiiiiiiiS0_S0_S0_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, ptr noundef writeonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, ptr nocapture noundef readonly %9, ptr nocapture noundef readonly %10, ptr nocapture noundef readonly %11) local_unnamed_addr #0 align 2 {
  %13 = load i8, ptr @localStencil, align 1, !tbaa !165, !range !130, !noundef !131
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %379, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %17 = load i32, ptr %16, align 8, !tbaa !91
  %18 = sext i32 %2 to i64
  %19 = getelementptr inbounds i32, ptr %11, i64 %18
  %20 = load i32, ptr %19, align 4, !tbaa !67
  %21 = sub nsw i32 %17, %20
  %22 = shl i32 2, %21
  %23 = icmp eq i32 %2, 0
  br i1 %23, label %37, label %24

24:                                               ; preds = %15
  %25 = add nsw i32 %2, -1
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, ptr %9, i64 %26
  %28 = load i32, ptr %27, align 4, !tbaa !67
  %29 = getelementptr inbounds i32, ptr %11, i64 %26
  %30 = load i32, ptr %29, align 4, !tbaa !67
  %31 = sub nsw i32 %17, %30
  %32 = shl i32 2, %31
  %33 = mul nsw i32 %32, %28
  %34 = getelementptr inbounds i32, ptr %10, i64 %26
  %35 = load i32, ptr %34, align 4, !tbaa !67
  %36 = mul nsw i32 %32, %35
  br label %42

37:                                               ; preds = %15
  %38 = sub nsw i32 %17, %7
  %39 = shl i32 2, %38
  %40 = mul nsw i32 %39, %3
  %41 = mul nsw i32 %39, %5
  br label %42

42:                                               ; preds = %37, %24
  %43 = phi i32 [ %36, %24 ], [ %41, %37 ]
  %44 = phi i32 [ %33, %24 ], [ %40, %37 ]
  %45 = getelementptr inbounds i32, ptr %9, i64 %18
  %46 = load i32, ptr %45, align 4, !tbaa !67
  %47 = mul nsw i32 %46, %22
  %48 = getelementptr inbounds i32, ptr %10, i64 %18
  %49 = load i32, ptr %48, align 4, !tbaa !67
  %50 = mul nsw i32 %49, %22
  %51 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %52 = load i64, ptr %51, align 8, !tbaa !43
  %53 = trunc i64 %52 to i32
  %54 = add nsw i32 %53, -1
  %55 = icmp eq i32 %54, %2
  br i1 %55, label %69, label %56

56:                                               ; preds = %42
  %57 = add nsw i32 %2, 1
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i32, ptr %9, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !67
  %61 = getelementptr inbounds i32, ptr %11, i64 %58
  %62 = load i32, ptr %61, align 4, !tbaa !67
  %63 = sub nsw i32 %17, %62
  %64 = shl i32 2, %63
  %65 = mul nsw i32 %64, %60
  %66 = getelementptr inbounds i32, ptr %10, i64 %58
  %67 = load i32, ptr %66, align 4, !tbaa !67
  %68 = mul nsw i32 %64, %67
  br label %74

69:                                               ; preds = %42
  %70 = sub nsw i32 %17, %8
  %71 = shl i32 2, %70
  %72 = mul nsw i32 %71, %4
  %73 = mul nsw i32 %71, %6
  br label %74

74:                                               ; preds = %69, %56
  %75 = phi i32 [ %68, %56 ], [ %73, %69 ]
  %76 = phi i32 [ %65, %56 ], [ %72, %69 ]
  %77 = sub nsw i32 %47, %44
  %78 = sub nsw i32 %47, %76
  %79 = sub nsw i32 %50, %43
  %80 = sub nsw i32 %50, %75
  %81 = icmp eq i32 %50, %43
  br i1 %81, label %82, label %92

82:                                               ; preds = %74
  %83 = sitofp i32 %77 to double
  %84 = sitofp i32 %22 to double
  %85 = fmul double %84, 5.000000e-01
  %86 = fcmp oeq double %85, %83
  %87 = icmp eq i32 %77, %22
  %88 = select i1 %86, i1 true, i1 %87
  %89 = shl i32 4, %21
  %90 = icmp eq i32 %77, %89
  %91 = select i1 %88, i1 true, i1 %90
  br i1 %91, label %170, label %92

92:                                               ; preds = %82, %74
  %93 = sitofp i32 %79 to double
  %94 = sub nsw i32 0, %22
  %95 = sitofp i32 %94 to double
  %96 = fmul double %95, 5.000000e-01
  %97 = fcmp oeq double %96, %93
  br i1 %97, label %98, label %103

98:                                               ; preds = %92
  %99 = sitofp i32 %77 to double
  %100 = sitofp i32 %22 to double
  %101 = fmul double %100, 5.000000e-01
  %102 = fcmp oeq double %101, %99
  br i1 %102, label %170, label %103

103:                                              ; preds = %98, %92
  %104 = icmp eq i32 %79, %22
  %105 = shl i32 4, %21
  %106 = icmp eq i32 %77, %105
  %107 = select i1 %104, i1 %106, i1 false
  br i1 %107, label %170, label %108

108:                                              ; preds = %103
  %109 = icmp eq i32 %47, %44
  br i1 %109, label %110, label %117

110:                                              ; preds = %108
  %111 = sitofp i32 %22 to double
  %112 = fmul double %111, 5.000000e-01
  %113 = fcmp oeq double %112, %93
  %114 = select i1 %113, i1 true, i1 %104
  %115 = icmp eq i32 %79, %105
  %116 = select i1 %114, i1 true, i1 %115
  br i1 %116, label %170, label %117

117:                                              ; preds = %110, %108
  %118 = sitofp i32 %77 to double
  %119 = fcmp oeq double %96, %118
  br i1 %119, label %120, label %124

120:                                              ; preds = %117
  %121 = sitofp i32 %22 to double
  %122 = fmul double %121, 5.000000e-01
  %123 = fcmp oeq double %122, %93
  br i1 %123, label %170, label %124

124:                                              ; preds = %120, %117
  %125 = icmp eq i32 %77, %22
  %126 = icmp eq i32 %79, %105
  %127 = select i1 %125, i1 %126, i1 false
  br i1 %127, label %170, label %128

128:                                              ; preds = %124
  %129 = icmp eq i32 %77, %94
  br i1 %129, label %130, label %139

130:                                              ; preds = %128
  %131 = or i1 %81, %97
  br i1 %131, label %170, label %132

132:                                              ; preds = %130
  br i1 %104, label %133, label %139

133:                                              ; preds = %132
  %134 = add nsw i32 %2, -1
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i32, ptr %11, i64 %135
  %137 = load i32, ptr %136, align 4, !tbaa !67
  %138 = icmp slt i32 %137, %20
  br i1 %138, label %170, label %139

139:                                              ; preds = %133, %132, %128
  %140 = icmp eq i32 %79, %94
  br i1 %140, label %141, label %150

141:                                              ; preds = %139
  %142 = or i1 %109, %119
  br i1 %142, label %170, label %143

143:                                              ; preds = %141
  br i1 %125, label %144, label %150

144:                                              ; preds = %143
  %145 = add nsw i32 %2, -1
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i32, ptr %11, i64 %146
  %148 = load i32, ptr %147, align 4, !tbaa !67
  %149 = icmp slt i32 %148, %20
  br i1 %149, label %170, label %150

150:                                              ; preds = %144, %143, %139
  %151 = icmp sgt i32 %77, 0
  %152 = and i1 %151, %81
  br i1 %152, label %170, label %153

153:                                              ; preds = %150
  %154 = icmp slt i32 %77, 0
  %155 = and i1 %154, %81
  br i1 %155, label %170, label %156

156:                                              ; preds = %153
  %157 = icmp sgt i32 %79, 0
  %158 = and i1 %109, %157
  br i1 %158, label %170, label %159

159:                                              ; preds = %156
  %160 = icmp slt i32 %79, 0
  %161 = and i1 %109, %160
  br i1 %161, label %170, label %162

162:                                              ; preds = %159
  %163 = select i1 %151, i1 %157, i1 false
  br i1 %163, label %170, label %164

164:                                              ; preds = %162
  %165 = select i1 %151, i1 %160, i1 false
  br i1 %165, label %170, label %166

166:                                              ; preds = %164
  %167 = select i1 %154, i1 %157, i1 false
  %168 = xor i1 %167, %154
  %169 = select i1 %168, i1 %160, i1 false
  br label %170

170:                                              ; preds = %166, %164, %162, %159, %156, %153, %150, %141, %144, %130, %133, %120, %110, %124, %82, %98, %103
  %171 = phi i1 [ true, %103 ], [ true, %98 ], [ true, %82 ], [ false, %124 ], [ false, %110 ], [ false, %120 ], [ false, %133 ], [ false, %130 ], [ false, %144 ], [ false, %141 ], [ true, %150 ], [ false, %153 ], [ false, %156 ], [ false, %159 ], [ false, %162 ], [ false, %164 ], [ false, %166 ]
  %172 = phi i1 [ false, %103 ], [ false, %98 ], [ false, %82 ], [ true, %124 ], [ true, %110 ], [ true, %120 ], [ false, %133 ], [ false, %130 ], [ false, %144 ], [ false, %141 ], [ false, %150 ], [ false, %153 ], [ true, %156 ], [ false, %159 ], [ false, %162 ], [ false, %164 ], [ false, %166 ]
  %173 = phi i1 [ false, %103 ], [ false, %98 ], [ false, %82 ], [ false, %124 ], [ false, %110 ], [ false, %120 ], [ true, %133 ], [ true, %130 ], [ false, %144 ], [ false, %141 ], [ false, %150 ], [ true, %153 ], [ false, %156 ], [ false, %159 ], [ false, %162 ], [ false, %164 ], [ false, %166 ]
  %174 = phi i1 [ false, %103 ], [ false, %98 ], [ false, %82 ], [ false, %124 ], [ false, %110 ], [ false, %120 ], [ false, %133 ], [ false, %130 ], [ true, %144 ], [ true, %141 ], [ false, %150 ], [ false, %153 ], [ false, %156 ], [ true, %159 ], [ false, %162 ], [ false, %164 ], [ false, %166 ]
  %175 = phi i1 [ false, %103 ], [ false, %98 ], [ false, %82 ], [ false, %124 ], [ false, %110 ], [ false, %120 ], [ false, %133 ], [ false, %130 ], [ false, %144 ], [ false, %141 ], [ false, %150 ], [ false, %153 ], [ false, %156 ], [ false, %159 ], [ true, %162 ], [ false, %164 ], [ false, %166 ]
  %176 = phi i1 [ false, %103 ], [ false, %98 ], [ false, %82 ], [ false, %124 ], [ false, %110 ], [ false, %120 ], [ false, %133 ], [ false, %130 ], [ false, %144 ], [ false, %141 ], [ false, %150 ], [ false, %153 ], [ false, %156 ], [ false, %159 ], [ false, %162 ], [ true, %164 ], [ false, %166 ]
  %177 = phi i1 [ false, %103 ], [ false, %98 ], [ false, %82 ], [ false, %124 ], [ false, %110 ], [ false, %120 ], [ false, %133 ], [ false, %130 ], [ false, %144 ], [ false, %141 ], [ false, %150 ], [ false, %153 ], [ false, %156 ], [ false, %159 ], [ false, %162 ], [ false, %164 ], [ %167, %166 ]
  %178 = phi i1 [ false, %103 ], [ false, %98 ], [ false, %82 ], [ false, %124 ], [ false, %110 ], [ false, %120 ], [ false, %133 ], [ false, %130 ], [ false, %144 ], [ false, %141 ], [ false, %150 ], [ false, %153 ], [ false, %156 ], [ false, %159 ], [ false, %162 ], [ false, %164 ], [ %169, %166 ]
  %179 = icmp eq i32 %50, %75
  br i1 %179, label %180, label %190

180:                                              ; preds = %170
  %181 = sitofp i32 %78 to double
  %182 = sitofp i32 %22 to double
  %183 = fmul double %182, 5.000000e-01
  %184 = fcmp oeq double %183, %181
  %185 = icmp eq i32 %78, %22
  %186 = select i1 %184, i1 true, i1 %185
  %187 = shl i32 4, %21
  %188 = icmp eq i32 %78, %187
  %189 = select i1 %186, i1 true, i1 %188
  br i1 %189, label %268, label %190

190:                                              ; preds = %180, %170
  %191 = sitofp i32 %80 to double
  %192 = sub nsw i32 0, %22
  %193 = sitofp i32 %192 to double
  %194 = fmul double %193, 5.000000e-01
  %195 = fcmp oeq double %194, %191
  br i1 %195, label %196, label %201

196:                                              ; preds = %190
  %197 = sitofp i32 %78 to double
  %198 = sitofp i32 %22 to double
  %199 = fmul double %198, 5.000000e-01
  %200 = fcmp oeq double %199, %197
  br i1 %200, label %268, label %201

201:                                              ; preds = %196, %190
  %202 = icmp eq i32 %80, %22
  %203 = shl i32 4, %21
  %204 = icmp eq i32 %78, %203
  %205 = select i1 %202, i1 %204, i1 false
  br i1 %205, label %268, label %206

206:                                              ; preds = %201
  %207 = icmp eq i32 %47, %76
  br i1 %207, label %208, label %215

208:                                              ; preds = %206
  %209 = sitofp i32 %22 to double
  %210 = fmul double %209, 5.000000e-01
  %211 = fcmp oeq double %210, %191
  %212 = select i1 %211, i1 true, i1 %202
  %213 = icmp eq i32 %80, %203
  %214 = select i1 %212, i1 true, i1 %213
  br i1 %214, label %268, label %215

215:                                              ; preds = %208, %206
  %216 = sitofp i32 %78 to double
  %217 = fcmp oeq double %194, %216
  br i1 %217, label %218, label %222

218:                                              ; preds = %215
  %219 = sitofp i32 %22 to double
  %220 = fmul double %219, 5.000000e-01
  %221 = fcmp oeq double %220, %191
  br i1 %221, label %268, label %222

222:                                              ; preds = %218, %215
  %223 = icmp eq i32 %78, %22
  %224 = icmp eq i32 %80, %203
  %225 = select i1 %223, i1 %224, i1 false
  br i1 %225, label %268, label %226

226:                                              ; preds = %222
  %227 = icmp eq i32 %78, %192
  br i1 %227, label %228, label %237

228:                                              ; preds = %226
  %229 = or i1 %179, %195
  br i1 %229, label %268, label %230

230:                                              ; preds = %228
  br i1 %202, label %231, label %237

231:                                              ; preds = %230
  %232 = add nsw i32 %2, 1
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds i32, ptr %11, i64 %233
  %235 = load i32, ptr %234, align 4, !tbaa !67
  %236 = icmp slt i32 %235, %20
  br i1 %236, label %268, label %237

237:                                              ; preds = %231, %230, %226
  %238 = icmp eq i32 %80, %192
  br i1 %238, label %239, label %248

239:                                              ; preds = %237
  %240 = or i1 %207, %217
  br i1 %240, label %268, label %241

241:                                              ; preds = %239
  br i1 %223, label %242, label %248

242:                                              ; preds = %241
  %243 = add nsw i32 %2, 1
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds i32, ptr %11, i64 %244
  %246 = load i32, ptr %245, align 4, !tbaa !67
  %247 = icmp slt i32 %246, %20
  br i1 %247, label %268, label %248

248:                                              ; preds = %242, %241, %237
  %249 = icmp sgt i32 %78, 0
  %250 = and i1 %179, %249
  br i1 %250, label %268, label %251

251:                                              ; preds = %248
  %252 = icmp slt i32 %78, 0
  %253 = and i1 %179, %252
  br i1 %253, label %268, label %254

254:                                              ; preds = %251
  %255 = icmp sgt i32 %80, 0
  %256 = and i1 %255, %207
  br i1 %256, label %268, label %257

257:                                              ; preds = %254
  %258 = icmp slt i32 %80, 0
  %259 = and i1 %258, %207
  br i1 %259, label %268, label %260

260:                                              ; preds = %257
  %261 = select i1 %249, i1 %255, i1 false
  br i1 %261, label %268, label %262

262:                                              ; preds = %260
  %263 = select i1 %249, i1 %258, i1 false
  br i1 %263, label %268, label %264

264:                                              ; preds = %262
  %265 = select i1 %252, i1 %255, i1 false
  %266 = xor i1 %265, %252
  %267 = select i1 %266, i1 %258, i1 false
  br label %268

268:                                              ; preds = %264, %262, %260, %257, %254, %251, %248, %239, %242, %228, %231, %218, %208, %222, %180, %196, %201
  %269 = phi i1 [ false, %201 ], [ false, %196 ], [ false, %180 ], [ false, %222 ], [ false, %208 ], [ false, %218 ], [ false, %231 ], [ false, %228 ], [ false, %242 ], [ false, %239 ], [ false, %248 ], [ false, %251 ], [ false, %254 ], [ false, %257 ], [ true, %260 ], [ false, %262 ], [ false, %264 ]
  %270 = phi i1 [ false, %201 ], [ false, %196 ], [ false, %180 ], [ false, %222 ], [ false, %208 ], [ false, %218 ], [ false, %231 ], [ false, %228 ], [ false, %242 ], [ false, %239 ], [ false, %248 ], [ false, %251 ], [ false, %254 ], [ false, %257 ], [ false, %260 ], [ false, %262 ], [ %267, %264 ]
  %271 = phi i1 [ false, %201 ], [ false, %196 ], [ false, %180 ], [ false, %222 ], [ false, %208 ], [ false, %218 ], [ false, %231 ], [ false, %228 ], [ false, %242 ], [ false, %239 ], [ false, %248 ], [ false, %251 ], [ false, %254 ], [ false, %257 ], [ false, %260 ], [ false, %262 ], [ %265, %264 ]
  %272 = phi i1 [ false, %201 ], [ false, %196 ], [ false, %180 ], [ false, %222 ], [ false, %208 ], [ false, %218 ], [ false, %231 ], [ false, %228 ], [ false, %242 ], [ false, %239 ], [ false, %248 ], [ false, %251 ], [ false, %254 ], [ false, %257 ], [ false, %260 ], [ true, %262 ], [ false, %264 ]
  %273 = phi i1 [ false, %201 ], [ false, %196 ], [ false, %180 ], [ false, %222 ], [ false, %208 ], [ false, %218 ], [ true, %231 ], [ true, %228 ], [ false, %242 ], [ false, %239 ], [ false, %248 ], [ true, %251 ], [ false, %254 ], [ false, %257 ], [ false, %260 ], [ false, %262 ], [ false, %264 ]
  %274 = phi i1 [ false, %201 ], [ false, %196 ], [ false, %180 ], [ true, %222 ], [ true, %208 ], [ true, %218 ], [ false, %231 ], [ false, %228 ], [ false, %242 ], [ false, %239 ], [ false, %248 ], [ false, %251 ], [ true, %254 ], [ false, %257 ], [ false, %260 ], [ false, %262 ], [ false, %264 ]
  %275 = phi i1 [ true, %201 ], [ true, %196 ], [ true, %180 ], [ false, %222 ], [ false, %208 ], [ false, %218 ], [ false, %231 ], [ false, %228 ], [ false, %242 ], [ false, %239 ], [ true, %248 ], [ false, %251 ], [ false, %254 ], [ false, %257 ], [ false, %260 ], [ false, %262 ], [ false, %264 ]
  %276 = phi i1 [ false, %201 ], [ false, %196 ], [ false, %180 ], [ false, %222 ], [ false, %208 ], [ false, %218 ], [ false, %231 ], [ false, %228 ], [ true, %242 ], [ true, %239 ], [ false, %248 ], [ false, %251 ], [ false, %254 ], [ true, %257 ], [ false, %260 ], [ false, %262 ], [ false, %264 ]
  %277 = or i1 %273, %274
  %278 = or i1 %271, %277
  %279 = and i1 %171, %278
  br i1 %279, label %280, label %281

280:                                              ; preds = %268
  store <4 x i32> <i32 0, i32 1, i32 2, i32 3>, ptr %1, align 4, !tbaa !67
  br label %380

281:                                              ; preds = %268
  %282 = or i1 %272, %276
  %283 = and i1 %171, %282
  br i1 %283, label %284, label %285

284:                                              ; preds = %281
  store <4 x i32> <i32 0, i32 3, i32 2, i32 1>, ptr %1, align 4, !tbaa !67
  br label %380

285:                                              ; preds = %281
  %286 = and i1 %171, %269
  br i1 %286, label %287, label %288

287:                                              ; preds = %285
  store <4 x i32> <i32 1, i32 2, i32 3, i32 0>, ptr %1, align 4, !tbaa !67
  br label %380

288:                                              ; preds = %285
  %289 = and i1 %171, %270
  br i1 %289, label %290, label %291

290:                                              ; preds = %288
  store <4 x i32> <i32 0, i32 3, i32 1, i32 2>, ptr %1, align 4, !tbaa !67
  br label %380

291:                                              ; preds = %288
  %292 = or i1 %271, %273
  %293 = and i1 %172, %292
  br i1 %293, label %294, label %295

294:                                              ; preds = %291
  store <4 x i32> <i32 0, i32 1, i32 2, i32 3>, ptr %1, align 4, !tbaa !67
  br label %380

295:                                              ; preds = %291
  %296 = or i1 %275, %276
  %297 = or i1 %272, %296
  %298 = and i1 %172, %297
  br i1 %298, label %299, label %300

299:                                              ; preds = %295
  store <4 x i32> <i32 0, i32 3, i32 2, i32 1>, ptr %1, align 4, !tbaa !67
  br label %380

300:                                              ; preds = %295
  %301 = and i1 %172, %269
  br i1 %301, label %302, label %303

302:                                              ; preds = %300
  store <4 x i32> <i32 3, i32 2, i32 1, i32 0>, ptr %1, align 4, !tbaa !67
  br label %380

303:                                              ; preds = %300
  %304 = and i1 %172, %270
  br i1 %304, label %305, label %306

305:                                              ; preds = %303
  store <4 x i32> <i32 0, i32 1, i32 3, i32 2>, ptr %1, align 4, !tbaa !67
  br label %380

306:                                              ; preds = %303
  %307 = and i1 %173, %297
  br i1 %307, label %308, label %309

308:                                              ; preds = %306
  store <4 x i32> <i32 2, i32 3, i32 0, i32 1>, ptr %1, align 4, !tbaa !67
  br label %380

309:                                              ; preds = %306
  %310 = or i1 %271, %274
  %311 = and i1 %173, %310
  br i1 %311, label %312, label %313

312:                                              ; preds = %309
  store <4 x i32> <i32 2, i32 1, i32 0, i32 3>, ptr %1, align 4, !tbaa !67
  br label %380

313:                                              ; preds = %309
  %314 = and i1 %173, %269
  br i1 %314, label %315, label %316

315:                                              ; preds = %313
  store <4 x i32> <i32 2, i32 1, i32 3, i32 0>, ptr %1, align 4, !tbaa !67
  br label %380

316:                                              ; preds = %313
  %317 = and i1 %173, %270
  br i1 %317, label %318, label %319

318:                                              ; preds = %316
  store <4 x i32> <i32 3, i32 0, i32 1, i32 2>, ptr %1, align 4, !tbaa !67
  br label %380

319:                                              ; preds = %316
  %320 = or i1 %272, %275
  %321 = and i1 %174, %320
  br i1 %321, label %322, label %323

322:                                              ; preds = %319
  store <4 x i32> <i32 2, i32 3, i32 0, i32 1>, ptr %1, align 4, !tbaa !67
  br label %380

323:                                              ; preds = %319
  %324 = and i1 %174, %278
  br i1 %324, label %325, label %326

325:                                              ; preds = %323
  store <4 x i32> <i32 2, i32 1, i32 0, i32 3>, ptr %1, align 4, !tbaa !67
  br label %380

326:                                              ; preds = %323
  %327 = and i1 %174, %269
  br i1 %327, label %328, label %329

328:                                              ; preds = %326
  store <4 x i32> <i32 2, i32 3, i32 1, i32 0>, ptr %1, align 4, !tbaa !67
  br label %380

329:                                              ; preds = %326
  %330 = and i1 %174, %270
  br i1 %330, label %331, label %332

331:                                              ; preds = %329
  store <4 x i32> <i32 1, i32 0, i32 3, i32 2>, ptr %1, align 4, !tbaa !67
  br label %380

332:                                              ; preds = %329
  %333 = or i1 %320, %276
  %334 = and i1 %175, %333
  br i1 %334, label %335, label %336

335:                                              ; preds = %332
  store <4 x i32> <i32 0, i32 3, i32 2, i32 1>, ptr %1, align 4, !tbaa !67
  br label %380

336:                                              ; preds = %332
  %337 = or i1 %292, %274
  %338 = and i1 %175, %337
  br i1 %338, label %339, label %340

339:                                              ; preds = %336
  store <4 x i32> <i32 0, i32 1, i32 2, i32 3>, ptr %1, align 4, !tbaa !67
  br label %380

340:                                              ; preds = %336
  %341 = and i1 %175, %270
  br i1 %341, label %342, label %343

342:                                              ; preds = %340
  store <4 x i32> <i32 0, i32 3, i32 1, i32 2>, ptr %1, align 4, !tbaa !67
  br label %380

343:                                              ; preds = %340
  %344 = or i1 %269, %275
  %345 = or i1 %274, %344
  %346 = and i1 %176, %345
  br i1 %346, label %347, label %348

347:                                              ; preds = %343
  store <4 x i32> <i32 1, i32 2, i32 3, i32 0>, ptr %1, align 4, !tbaa !67
  br label %380

348:                                              ; preds = %343
  %349 = or i1 %270, %273
  %350 = or i1 %349, %276
  %351 = and i1 %176, %350
  br i1 %351, label %352, label %353

352:                                              ; preds = %348
  store <4 x i32> <i32 1, i32 0, i32 3, i32 2>, ptr %1, align 4, !tbaa !67
  br label %380

353:                                              ; preds = %348
  %354 = and i1 %176, %271
  br i1 %354, label %355, label %356

355:                                              ; preds = %353
  store <4 x i32> <i32 1, i32 2, i32 0, i32 3>, ptr %1, align 4, !tbaa !67
  br label %380

356:                                              ; preds = %353
  %357 = and i1 %177, %345
  br i1 %357, label %358, label %359

358:                                              ; preds = %356
  store <4 x i32> <i32 3, i32 2, i32 1, i32 0>, ptr %1, align 4, !tbaa !67
  br label %380

359:                                              ; preds = %356
  %360 = and i1 %177, %350
  br i1 %360, label %361, label %362

361:                                              ; preds = %359
  store <4 x i32> <i32 3, i32 0, i32 1, i32 2>, ptr %1, align 4, !tbaa !67
  br label %380

362:                                              ; preds = %359
  %363 = and i1 %177, %272
  br i1 %363, label %364, label %365

364:                                              ; preds = %362
  store <4 x i32> <i32 3, i32 2, i32 0, i32 1>, ptr %1, align 4, !tbaa !67
  br label %380

365:                                              ; preds = %362
  %366 = and i1 %178, %297
  br i1 %366, label %367, label %368

367:                                              ; preds = %365
  store <4 x i32> <i32 2, i32 3, i32 0, i32 1>, ptr %1, align 4, !tbaa !67
  br label %380

368:                                              ; preds = %365
  %369 = and i1 %178, %278
  br i1 %369, label %370, label %371

370:                                              ; preds = %368
  store <4 x i32> <i32 2, i32 1, i32 0, i32 3>, ptr %1, align 4, !tbaa !67
  br label %380

371:                                              ; preds = %368
  %372 = and i1 %178, %269
  br i1 %372, label %373, label %374

373:                                              ; preds = %371
  store <4 x i32> <i32 2, i32 3, i32 1, i32 0>, ptr %1, align 4, !tbaa !67
  br label %380

374:                                              ; preds = %371
  store <4 x i32> <i32 1, i32 3, i32 0, i32 2>, ptr %1, align 4, !tbaa !67
  %375 = load i32, ptr @do_stencil_warning, align 4, !tbaa !67
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %380, label %377

377:                                              ; preds = %374
  %378 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.146)
  br label %380

379:                                              ; preds = %12
  store <4 x i32> <i32 0, i32 3, i32 1, i32 2>, ptr %1, align 4, !tbaa !67
  br label %380

380:                                              ; preds = %280, %287, %294, %302, %308, %315, %322, %328, %335, %342, %352, %358, %364, %370, %374, %377, %373, %367, %361, %355, %347, %339, %331, %325, %318, %312, %305, %299, %290, %284, %379
  ret void
}

declare noundef ptr @_ZN10MallocPlus26memory_entry_by_name_beginEv(ptr noundef nonnull align 8 dereferenceable(96)) local_unnamed_addr #7

declare noundef ptr @_ZN10MallocPlus24memory_entry_by_name_endEv(ptr noundef nonnull align 8 dereferenceable(96)) local_unnamed_addr #7

declare noundef ptr @_ZN10MallocPlus14memory_replaceEPvS0_(ptr noundef nonnull align 8 dereferenceable(96), ptr noundef, ptr noundef) local_unnamed_addr #7

declare noundef ptr @_ZN10MallocPlus25memory_entry_by_name_nextEv(ptr noundef nonnull align 8 dereferenceable(96)) local_unnamed_addr #7

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh14calc_neighborsEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %1) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %struct.TBounds, align 8
  %4 = alloca %struct.timeval, align 8
  %5 = alloca %struct.timeval, align 8
  %6 = alloca %struct.timeval, align 8
  %7 = alloca %struct.TBounds, align 8
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #31
  call void @cpu_timer_start(ptr noundef nonnull %4)
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 7
  %10 = load i8, ptr %9, align 8, !tbaa !106, !range !130, !noundef !131
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %799, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 5, i64 2
  %14 = load i32, ptr %13, align 8, !tbaa !67
  %15 = add nsw i32 %14, 1
  store i32 %15, ptr %13, align 8, !tbaa !67
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %17 = load ptr, ptr %16, align 8, !tbaa !73
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %12
  %20 = load i32, ptr @_ZZN4Mesh14calc_neighborsEiE9nlft_size, align 4, !tbaa !67
  br label %25

21:                                               ; preds = %12
  %22 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %23 = call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %22, ptr noundef nonnull %17)
  %24 = trunc i64 %23 to i32
  store i32 %24, ptr @_ZZN4Mesh14calc_neighborsEiE9nlft_size, align 4, !tbaa !67
  br label %25

25:                                               ; preds = %19, %21
  %26 = phi i32 [ %20, %19 ], [ %24, %21 ]
  %27 = icmp slt i32 %26, %1
  br i1 %27, label %28, label %54

28:                                               ; preds = %25
  %29 = load ptr, ptr %16, align 8, !tbaa !73
  %30 = icmp eq ptr %29, null
  br i1 %30, label %43, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %33 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %32, ptr noundef nonnull %29)
  store ptr %33, ptr %16, align 8, !tbaa !73
  %34 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %35 = load ptr, ptr %34, align 8, !tbaa !74
  %36 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %32, ptr noundef %35)
  store ptr %36, ptr %34, align 8, !tbaa !74
  %37 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %38 = load ptr, ptr %37, align 8, !tbaa !75
  %39 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %32, ptr noundef %38)
  store ptr %39, ptr %37, align 8, !tbaa !75
  %40 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %41 = load ptr, ptr %40, align 8, !tbaa !76
  %42 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %32, ptr noundef %41)
  store ptr %42, ptr %40, align 8, !tbaa !76
  br label %43

43:                                               ; preds = %31, %28
  %44 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %45 = sext i32 %1 to i64
  %46 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %44, i64 noundef %45, i64 noundef 4, ptr noundef nonnull @.str.42, i32 noundef 4)
  store ptr %46, ptr %16, align 8, !tbaa !73
  %47 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %44, i64 noundef %45, i64 noundef 4, ptr noundef nonnull @.str.43, i32 noundef 4)
  %48 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  store ptr %47, ptr %48, align 8, !tbaa !74
  %49 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %44, i64 noundef %45, i64 noundef 4, ptr noundef nonnull @.str.44, i32 noundef 4)
  %50 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  store ptr %49, ptr %50, align 8, !tbaa !75
  %51 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %44, i64 noundef %45, i64 noundef 4, ptr noundef nonnull @.str.45, i32 noundef 4)
  %52 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  store ptr %51, ptr %52, align 8, !tbaa !76
  %53 = load i32, ptr @_ZZN4Mesh14calc_neighborsEiE9nlft_size, align 4, !tbaa !67
  br label %54

54:                                               ; preds = %43, %25
  %55 = phi i32 [ %53, %43 ], [ %26, %25 ]
  %56 = icmp slt i32 %55, %1
  br i1 %56, label %57, label %139

57:                                               ; preds = %54
  %58 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %59 = load i64, ptr %58, align 8, !tbaa !43
  %60 = trunc i64 %59 to i32
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %62, label %139

62:                                               ; preds = %57
  %63 = load ptr, ptr %16, align 8, !tbaa !73
  %64 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %65 = load ptr, ptr %64, align 8, !tbaa !74
  %66 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %67 = load ptr, ptr %66, align 8, !tbaa !75
  %68 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %69 = load ptr, ptr %68, align 8, !tbaa !76
  %70 = and i64 %59, 4294967295
  %71 = icmp ult i64 %70, 32
  br i1 %71, label %111, label %72

72:                                               ; preds = %62
  %73 = ptrtoint ptr %69 to i64
  %74 = ptrtoint ptr %67 to i64
  %75 = ptrtoint ptr %65 to i64
  %76 = ptrtoint ptr %63 to i64
  %77 = sub i64 %75, %76
  %78 = icmp ult i64 %77, 32
  %79 = sub i64 %74, %76
  %80 = icmp ult i64 %79, 32
  %81 = or i1 %78, %80
  %82 = sub i64 %73, %76
  %83 = icmp ult i64 %82, 32
  %84 = or i1 %81, %83
  %85 = sub i64 %74, %75
  %86 = icmp ult i64 %85, 32
  %87 = or i1 %84, %86
  %88 = sub i64 %73, %75
  %89 = icmp ult i64 %88, 32
  %90 = or i1 %87, %89
  %91 = sub i64 %73, %74
  %92 = icmp ult i64 %91, 32
  %93 = or i1 %90, %92
  br i1 %93, label %111, label %94

94:                                               ; preds = %72
  %95 = and i64 %59, 7
  %96 = sub nsw i64 %70, %95
  br label %97

97:                                               ; preds = %97, %94
  %98 = phi i64 [ 0, %94 ], [ %107, %97 ]
  %99 = getelementptr inbounds i32, ptr %63, i64 %98
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %99, align 4, !tbaa !67
  %100 = getelementptr inbounds i32, ptr %99, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %100, align 4, !tbaa !67
  %101 = getelementptr inbounds i32, ptr %65, i64 %98
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %101, align 4, !tbaa !67
  %102 = getelementptr inbounds i32, ptr %101, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %102, align 4, !tbaa !67
  %103 = getelementptr inbounds i32, ptr %67, i64 %98
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %103, align 4, !tbaa !67
  %104 = getelementptr inbounds i32, ptr %103, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %104, align 4, !tbaa !67
  %105 = getelementptr inbounds i32, ptr %69, i64 %98
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %105, align 4, !tbaa !67
  %106 = getelementptr inbounds i32, ptr %105, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %106, align 4, !tbaa !67
  %107 = add nuw i64 %98, 8
  %108 = icmp eq i64 %107, %96
  br i1 %108, label %109, label %97, !llvm.loop !186

109:                                              ; preds = %97
  %110 = icmp eq i64 %95, 0
  br i1 %110, label %139, label %111

111:                                              ; preds = %72, %62, %109
  %112 = phi i64 [ 0, %72 ], [ 0, %62 ], [ %96, %109 ]
  %113 = sub i64 %59, %112
  %114 = add nsw i64 %112, 1
  %115 = and i64 %113, 1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %123, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds i32, ptr %63, i64 %112
  store i32 -1, ptr %118, align 4, !tbaa !67
  %119 = getelementptr inbounds i32, ptr %65, i64 %112
  store i32 -1, ptr %119, align 4, !tbaa !67
  %120 = getelementptr inbounds i32, ptr %67, i64 %112
  store i32 -1, ptr %120, align 4, !tbaa !67
  %121 = getelementptr inbounds i32, ptr %69, i64 %112
  store i32 -1, ptr %121, align 4, !tbaa !67
  %122 = add nuw nsw i64 %112, 1
  br label %123

123:                                              ; preds = %117, %111
  %124 = phi i64 [ %112, %111 ], [ %122, %117 ]
  %125 = icmp eq i64 %70, %114
  br i1 %125, label %139, label %126

126:                                              ; preds = %123, %126
  %127 = phi i64 [ %137, %126 ], [ %124, %123 ]
  %128 = getelementptr inbounds i32, ptr %63, i64 %127
  store i32 -1, ptr %128, align 4, !tbaa !67
  %129 = getelementptr inbounds i32, ptr %65, i64 %127
  store i32 -1, ptr %129, align 4, !tbaa !67
  %130 = getelementptr inbounds i32, ptr %67, i64 %127
  store i32 -1, ptr %130, align 4, !tbaa !67
  %131 = getelementptr inbounds i32, ptr %69, i64 %127
  store i32 -1, ptr %131, align 4, !tbaa !67
  %132 = add nuw nsw i64 %127, 1
  %133 = getelementptr inbounds i32, ptr %63, i64 %132
  store i32 -1, ptr %133, align 4, !tbaa !67
  %134 = getelementptr inbounds i32, ptr %65, i64 %132
  store i32 -1, ptr %134, align 4, !tbaa !67
  %135 = getelementptr inbounds i32, ptr %67, i64 %132
  store i32 -1, ptr %135, align 4, !tbaa !67
  %136 = getelementptr inbounds i32, ptr %69, i64 %132
  store i32 -1, ptr %136, align 4, !tbaa !67
  %137 = add nuw nsw i64 %127, 2
  %138 = icmp eq i64 %137, %70
  br i1 %138, label %139, label %126, !llvm.loop !187

139:                                              ; preds = %123, %126, %109, %57, %54
  %140 = load i32, ptr @calc_neighbor_type, align 4, !tbaa !67
  switch i32 %140, label %796 [
    i32 0, label %141
    i32 1, label %554
  ]

141:                                              ; preds = %139
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #31
  call void @cpu_timer_start(ptr noundef nonnull %5)
  %142 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 42
  %143 = load i32, ptr %142, align 8, !tbaa !103
  %144 = add nsw i32 %143, 1
  %145 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %146 = load i32, ptr %145, align 8, !tbaa !91
  %147 = shl i32 2, %146
  %148 = mul nsw i32 %147, %144
  %149 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 40
  %150 = load i32, ptr %149, align 8, !tbaa !102
  %151 = add nsw i32 %150, 1
  %152 = mul nsw i32 %151, %147
  %153 = call ptr @compact_hash_init(i32 noundef %1, i32 noundef %152, i32 noundef %148, i32 noundef 0)
  %154 = icmp sgt i32 %1, 0
  br i1 %154, label %155, label %163

155:                                              ; preds = %141
  %156 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %157 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %158 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %159 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %160 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %161 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %162 = zext i32 %1 to i64
  br label %185

163:                                              ; preds = %261, %141
  %164 = load i64, ptr %5, align 8, !tbaa.struct !71
  %165 = getelementptr inbounds i8, ptr %5, i64 8
  %166 = load i64, ptr %165, align 8, !tbaa.struct !72
  %167 = call double @cpu_timer_stop(i64 %164, i64 %166)
  %168 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 2
  %169 = load double, ptr %168, align 8, !tbaa !45
  %170 = fadd double %167, %169
  store double %170, ptr %168, align 8, !tbaa !45
  call void @cpu_timer_start(ptr noundef nonnull %5)
  br i1 %154, label %171, label %264

171:                                              ; preds = %163
  %172 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %173 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %174 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %175 = add nsw i32 %152, -1
  %176 = add nsw i32 %148, -1
  %177 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %178 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %179 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %180 = zext i32 %1 to i64
  %181 = load ptr, ptr %16, align 8, !tbaa !73
  %182 = load ptr, ptr %177, align 8, !tbaa !74
  %183 = load ptr, ptr %178, align 8, !tbaa !75
  %184 = load ptr, ptr %179, align 8, !tbaa !76
  br label %271

185:                                              ; preds = %155, %261
  %186 = phi i64 [ 0, %155 ], [ %262, %261 ]
  %187 = load ptr, ptr %156, align 8, !tbaa !62
  %188 = getelementptr inbounds i32, ptr %187, i64 %186
  %189 = load i32, ptr %188, align 4, !tbaa !67
  %190 = load ptr, ptr %16, align 8, !tbaa !73
  %191 = getelementptr inbounds i32, ptr %190, i64 %186
  %192 = load i32, ptr %191, align 4, !tbaa !67
  %193 = icmp eq i32 %192, -1
  br i1 %193, label %245, label %194

194:                                              ; preds = %185
  %195 = load ptr, ptr %157, align 8, !tbaa !74
  %196 = getelementptr inbounds i32, ptr %195, i64 %186
  %197 = load i32, ptr %196, align 4, !tbaa !67
  %198 = icmp eq i32 %197, -1
  br i1 %198, label %245, label %199

199:                                              ; preds = %194
  %200 = load ptr, ptr %158, align 8, !tbaa !75
  %201 = getelementptr inbounds i32, ptr %200, i64 %186
  %202 = load i32, ptr %201, align 4, !tbaa !67
  %203 = icmp eq i32 %202, -1
  br i1 %203, label %245, label %204

204:                                              ; preds = %199
  %205 = load ptr, ptr %159, align 8, !tbaa !76
  %206 = getelementptr inbounds i32, ptr %205, i64 %186
  %207 = load i32, ptr %206, align 4, !tbaa !67
  %208 = icmp eq i32 %207, -1
  br i1 %208, label %245, label %209

209:                                              ; preds = %204
  %210 = sext i32 %192 to i64
  %211 = getelementptr inbounds i32, ptr %187, i64 %210
  %212 = load i32, ptr %211, align 4, !tbaa !67
  %213 = icmp sgt i32 %212, %189
  br i1 %213, label %214, label %218

214:                                              ; preds = %209
  %215 = getelementptr inbounds i32, ptr %205, i64 %210
  %216 = load i32, ptr %215, align 4, !tbaa !67
  %217 = icmp eq i32 %216, -1
  br i1 %217, label %245, label %218

218:                                              ; preds = %214, %209
  %219 = sext i32 %197 to i64
  %220 = getelementptr inbounds i32, ptr %187, i64 %219
  %221 = load i32, ptr %220, align 4, !tbaa !67
  %222 = icmp sgt i32 %221, %189
  br i1 %222, label %223, label %227

223:                                              ; preds = %218
  %224 = getelementptr inbounds i32, ptr %205, i64 %219
  %225 = load i32, ptr %224, align 4, !tbaa !67
  %226 = icmp eq i32 %225, -1
  br i1 %226, label %245, label %227

227:                                              ; preds = %223, %218
  %228 = sext i32 %202 to i64
  %229 = getelementptr inbounds i32, ptr %187, i64 %228
  %230 = load i32, ptr %229, align 4, !tbaa !67
  %231 = icmp sgt i32 %230, %189
  br i1 %231, label %232, label %236

232:                                              ; preds = %227
  %233 = getelementptr inbounds i32, ptr %195, i64 %228
  %234 = load i32, ptr %233, align 4, !tbaa !67
  %235 = icmp eq i32 %234, -1
  br i1 %235, label %245, label %236

236:                                              ; preds = %232, %227
  %237 = sext i32 %207 to i64
  %238 = getelementptr inbounds i32, ptr %187, i64 %237
  %239 = load i32, ptr %238, align 4, !tbaa !67
  %240 = icmp sgt i32 %239, %189
  br i1 %240, label %241, label %261

241:                                              ; preds = %236
  %242 = getelementptr inbounds i32, ptr %195, i64 %237
  %243 = load i32, ptr %242, align 4, !tbaa !67
  %244 = icmp eq i32 %243, -1
  br i1 %244, label %245, label %261

245:                                              ; preds = %185, %194, %199, %204, %241, %214, %223, %232
  %246 = load i32, ptr %145, align 8, !tbaa !91
  %247 = sub nsw i32 %246, %189
  %248 = shl i32 2, %247
  %249 = load ptr, ptr %160, align 8, !tbaa !60
  %250 = getelementptr inbounds i32, ptr %249, i64 %186
  %251 = load i32, ptr %250, align 4, !tbaa !67
  %252 = load ptr, ptr %161, align 8, !tbaa !61
  %253 = getelementptr inbounds i32, ptr %252, i64 %186
  %254 = load i32, ptr %253, align 4, !tbaa !67
  %255 = load ptr, ptr @write_hash, align 8, !tbaa !137
  %256 = mul i32 %254, %152
  %257 = add i32 %256, %251
  %258 = mul i32 %257, %248
  %259 = sext i32 %258 to i64
  %260 = trunc i64 %186 to i32
  call void %255(i32 noundef %260, i64 noundef %259, ptr noundef %153)
  br label %261

261:                                              ; preds = %236, %241, %245
  %262 = add nuw nsw i64 %186, 1
  %263 = icmp eq i64 %262, %162
  br i1 %263, label %163, label %185, !llvm.loop !188

264:                                              ; preds = %539, %163
  call void @write_hash_collision_report()
  call void @read_hash_collision_report()
  call void @compact_hash_delete(ptr noundef %153)
  %265 = load i64, ptr %5, align 8, !tbaa.struct !71
  %266 = load i64, ptr %165, align 8, !tbaa.struct !72
  %267 = call double @cpu_timer_stop(i64 %265, i64 %266)
  %268 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 3
  %269 = load double, ptr %268, align 8, !tbaa !45
  %270 = fadd double %267, %269
  store double %270, ptr %268, align 8, !tbaa !45
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #31
  br label %796

271:                                              ; preds = %171, %539
  %272 = phi ptr [ %184, %171 ], [ %550, %539 ]
  %273 = phi ptr [ %183, %171 ], [ %548, %539 ]
  %274 = phi ptr [ %182, %171 ], [ %546, %539 ]
  %275 = phi ptr [ %181, %171 ], [ %544, %539 ]
  %276 = phi i64 [ 0, %171 ], [ %552, %539 ]
  %277 = load ptr, ptr %172, align 8, !tbaa !60
  %278 = getelementptr inbounds i32, ptr %277, i64 %276
  %279 = load i32, ptr %278, align 4, !tbaa !67
  %280 = load ptr, ptr %173, align 8, !tbaa !61
  %281 = getelementptr inbounds i32, ptr %280, i64 %276
  %282 = load i32, ptr %281, align 4, !tbaa !67
  %283 = load ptr, ptr %174, align 8, !tbaa !62
  %284 = getelementptr inbounds i32, ptr %283, i64 %276
  %285 = load i32, ptr %284, align 4, !tbaa !67
  %286 = load i32, ptr %145, align 8, !tbaa !91
  %287 = sub nsw i32 %286, %285
  %288 = shl i32 2, %287
  %289 = mul nsw i32 %288, %279
  %290 = add nsw i32 %279, -1
  %291 = mul nsw i32 %288, %290
  %292 = call i32 @llvm.smax.i32(i32 %291, i32 0)
  %293 = add nsw i32 %279, 1
  %294 = mul nsw i32 %288, %293
  %295 = call i32 @llvm.smin.i32(i32 %175, i32 %294)
  %296 = mul nsw i32 %288, %282
  %297 = add nsw i32 %282, -1
  %298 = mul nsw i32 %288, %297
  %299 = call i32 @llvm.smax.i32(i32 %298, i32 0)
  %300 = add nsw i32 %282, 1
  %301 = mul nsw i32 %288, %300
  %302 = call i32 @llvm.smin.i32(i32 %176, i32 %301)
  %303 = getelementptr inbounds i32, ptr %275, i64 %276
  %304 = load i32, ptr %303, align 4, !tbaa !67
  %305 = getelementptr inbounds i32, ptr %274, i64 %276
  %306 = load i32, ptr %305, align 4, !tbaa !67
  %307 = getelementptr inbounds i32, ptr %273, i64 %276
  %308 = load i32, ptr %307, align 4, !tbaa !67
  %309 = getelementptr inbounds i32, ptr %272, i64 %276
  %310 = load i32, ptr %309, align 4, !tbaa !67
  %311 = icmp slt i32 %304, 0
  %312 = shl i32 2, %286
  %313 = icmp slt i32 %289, %312
  %314 = select i1 %311, i1 %313, i1 false
  %315 = trunc i64 %276 to i32
  %316 = select i1 %314, i32 %315, i32 %304
  %317 = icmp slt i32 %308, 0
  %318 = icmp slt i32 %296, %312
  %319 = select i1 %317, i1 %318, i1 false
  %320 = select i1 %319, i32 %315, i32 %308
  %321 = icmp slt i32 %306, 0
  %322 = load i32, ptr %149, align 8
  %323 = mul nsw i32 %322, %312
  %324 = icmp sge i32 %289, %323
  %325 = select i1 %321, i1 %324, i1 false
  %326 = select i1 %325, i32 %315, i32 %306
  %327 = icmp slt i32 %310, 0
  %328 = load i32, ptr %142, align 8
  %329 = mul nsw i32 %328, %312
  %330 = icmp sge i32 %296, %329
  %331 = select i1 %327, i1 %330, i1 false
  %332 = select i1 %331, i32 %315, i32 %310
  %333 = icmp slt i32 %316, 0
  %334 = icmp eq i32 %289, %312
  %335 = select i1 %333, i1 %334, i1 false
  %336 = mul nsw i32 %328, %289
  %337 = icmp sge i32 %296, %336
  %338 = select i1 %318, i1 true, i1 %337
  %339 = select i1 %335, i1 %338, i1 false
  %340 = select i1 %339, i32 %315, i32 %316
  %341 = icmp slt i32 %320, 0
  %342 = icmp eq i32 %296, %312
  %343 = select i1 %341, i1 %342, i1 false
  %344 = mul nsw i32 %322, %296
  %345 = icmp sge i32 %289, %344
  %346 = select i1 %313, i1 true, i1 %345
  %347 = select i1 %343, i1 %346, i1 false
  %348 = select i1 %347, i32 %315, i32 %320
  %349 = icmp slt i32 %326, 0
  %350 = icmp eq i32 %295, %323
  %351 = select i1 %349, i1 %350, i1 false
  %352 = select i1 %318, i1 true, i1 %330
  %353 = select i1 %351, i1 %352, i1 false
  %354 = select i1 %353, i32 %315, i32 %326
  %355 = icmp slt i32 %332, 0
  %356 = icmp eq i32 %302, %329
  %357 = select i1 %355, i1 %356, i1 false
  %358 = select i1 %313, i1 true, i1 %324
  %359 = select i1 %357, i1 %358, i1 false
  %360 = select i1 %359, i32 %315, i32 %332
  %361 = icmp eq i32 %286, %285
  br i1 %361, label %385, label %362

362:                                              ; preds = %271
  %363 = sub nsw i32 %296, %299
  %364 = ashr exact i32 %363, 1
  %365 = sub nsw i32 %296, %364
  %366 = icmp slt i32 %340, 0
  br i1 %366, label %367, label %376

367:                                              ; preds = %362
  %368 = sub nsw i32 %289, %292
  %369 = ashr exact i32 %368, 1
  %370 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %371 = mul nsw i32 %296, %152
  %372 = add i32 %371, %289
  %373 = sub i32 %372, %369
  %374 = sext i32 %373 to i64
  %375 = call i32 %370(i64 noundef %374, ptr noundef %153)
  br label %376

376:                                              ; preds = %367, %362
  %377 = phi i32 [ %375, %367 ], [ %340, %362 ]
  %378 = icmp slt i32 %348, 0
  br i1 %378, label %379, label %385

379:                                              ; preds = %376
  %380 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %381 = mul nsw i32 %365, %152
  %382 = add nsw i32 %381, %289
  %383 = sext i32 %382 to i64
  %384 = call i32 %380(i64 noundef %383, ptr noundef %153)
  br label %385

385:                                              ; preds = %376, %379, %271
  %386 = phi i32 [ %348, %271 ], [ %384, %379 ], [ %348, %376 ]
  %387 = phi i32 [ %340, %271 ], [ %377, %379 ], [ %377, %376 ]
  %388 = icmp slt i32 %387, 0
  br i1 %388, label %389, label %395

389:                                              ; preds = %385
  %390 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %391 = mul nsw i32 %296, %152
  %392 = add nsw i32 %391, %292
  %393 = sext i32 %392 to i64
  %394 = call i32 %390(i64 noundef %393, ptr noundef %153)
  br label %395

395:                                              ; preds = %389, %385
  %396 = phi i32 [ %394, %389 ], [ %387, %385 ]
  %397 = icmp slt i32 %354, 0
  br i1 %397, label %398, label %404

398:                                              ; preds = %395
  %399 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %400 = mul nsw i32 %296, %152
  %401 = add nsw i32 %400, %295
  %402 = sext i32 %401 to i64
  %403 = call i32 %399(i64 noundef %402, ptr noundef %153)
  br label %404

404:                                              ; preds = %398, %395
  %405 = phi i32 [ %403, %398 ], [ %354, %395 ]
  %406 = icmp slt i32 %386, 0
  br i1 %406, label %407, label %413

407:                                              ; preds = %404
  %408 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %409 = mul nsw i32 %299, %152
  %410 = add nsw i32 %409, %289
  %411 = sext i32 %410 to i64
  %412 = call i32 %408(i64 noundef %411, ptr noundef %153)
  br label %413

413:                                              ; preds = %407, %404
  %414 = phi i32 [ %412, %407 ], [ %386, %404 ]
  %415 = icmp slt i32 %360, 0
  br i1 %415, label %416, label %422

416:                                              ; preds = %413
  %417 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %418 = mul nsw i32 %302, %152
  %419 = add nsw i32 %418, %289
  %420 = sext i32 %419 to i64
  %421 = call i32 %417(i64 noundef %420, ptr noundef %153)
  br label %422

422:                                              ; preds = %416, %413
  %423 = phi i32 [ %421, %416 ], [ %360, %413 ]
  %424 = load i32, ptr %145, align 8, !tbaa !91
  %425 = icmp eq i32 %285, %424
  br i1 %425, label %483, label %426

426:                                              ; preds = %422
  %427 = shl i32 2, %424
  %428 = icmp slt i32 %296, %427
  br i1 %428, label %429, label %453

429:                                              ; preds = %426
  %430 = icmp slt i32 %405, 0
  br i1 %430, label %431, label %439

431:                                              ; preds = %429
  %432 = add nsw i32 %302, %296
  %433 = sdiv i32 %432, 2
  %434 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %435 = mul nsw i32 %433, %152
  %436 = add nsw i32 %435, %295
  %437 = sext i32 %436 to i64
  %438 = call i32 %434(i64 noundef %437, ptr noundef %153)
  br label %439

439:                                              ; preds = %431, %429
  %440 = phi i32 [ %438, %431 ], [ %405, %429 ]
  %441 = icmp slt i32 %396, 0
  br i1 %441, label %442, label %453

442:                                              ; preds = %439
  %443 = sub nsw i32 %289, %292
  %444 = ashr exact i32 %443, 1
  %445 = sub i32 %289, %444
  %446 = add nsw i32 %302, %296
  %447 = sdiv i32 %446, 2
  %448 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %449 = mul nsw i32 %447, %152
  %450 = add nsw i32 %445, %449
  %451 = sext i32 %450 to i64
  %452 = call i32 %448(i64 noundef %451, ptr noundef %153)
  br label %453

453:                                              ; preds = %439, %442, %426
  %454 = phi i32 [ %440, %442 ], [ %440, %439 ], [ %405, %426 ]
  %455 = phi i32 [ %452, %442 ], [ %396, %439 ], [ %396, %426 ]
  %456 = load i32, ptr %145, align 8, !tbaa !91
  %457 = shl i32 2, %456
  %458 = icmp slt i32 %289, %457
  br i1 %458, label %459, label %483

459:                                              ; preds = %453
  %460 = icmp slt i32 %423, 0
  br i1 %460, label %461, label %469

461:                                              ; preds = %459
  %462 = add nsw i32 %295, %289
  %463 = sdiv i32 %462, 2
  %464 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %465 = mul nsw i32 %302, %152
  %466 = add nsw i32 %463, %465
  %467 = sext i32 %466 to i64
  %468 = call i32 %464(i64 noundef %467, ptr noundef %153)
  br label %469

469:                                              ; preds = %461, %459
  %470 = phi i32 [ %468, %461 ], [ %423, %459 ]
  %471 = icmp slt i32 %414, 0
  br i1 %471, label %472, label %483

472:                                              ; preds = %469
  %473 = add nsw i32 %295, %289
  %474 = sdiv i32 %473, 2
  %475 = sub nsw i32 %296, %299
  %476 = ashr exact i32 %475, 1
  %477 = sub nsw i32 %296, %476
  %478 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %479 = mul nsw i32 %477, %152
  %480 = add nsw i32 %479, %474
  %481 = sext i32 %480 to i64
  %482 = call i32 %478(i64 noundef %481, ptr noundef %153)
  br label %483

483:                                              ; preds = %453, %472, %469, %422
  %484 = phi i32 [ %470, %472 ], [ %470, %469 ], [ %423, %453 ], [ %423, %422 ]
  %485 = phi i32 [ %482, %472 ], [ %414, %469 ], [ %414, %453 ], [ %414, %422 ]
  %486 = phi i32 [ %454, %472 ], [ %454, %469 ], [ %454, %453 ], [ %405, %422 ]
  %487 = phi i32 [ %455, %472 ], [ %455, %469 ], [ %455, %453 ], [ %396, %422 ]
  %488 = icmp eq i32 %285, 0
  br i1 %488, label %539, label %489

489:                                              ; preds = %483
  %490 = icmp slt i32 %487, 0
  br i1 %490, label %491, label %501

491:                                              ; preds = %489
  %492 = sdiv i32 %282, 2
  %493 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %494 = mul i32 %288, %152
  %495 = mul i32 %494, %492
  %496 = add i32 %292, %495
  %497 = shl i32 %496, 1
  %498 = sub i32 %497, %289
  %499 = sext i32 %498 to i64
  %500 = call i32 %493(i64 noundef %499, ptr noundef %153)
  br label %501

501:                                              ; preds = %491, %489
  %502 = phi i32 [ %500, %491 ], [ %487, %489 ]
  %503 = icmp slt i32 %486, 0
  br i1 %503, label %504, label %513

504:                                              ; preds = %501
  %505 = sdiv i32 %282, 2
  %506 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %507 = mul i32 %288, %152
  %508 = shl i32 %507, 1
  %509 = mul i32 %508, %505
  %510 = add nsw i32 %509, %295
  %511 = sext i32 %510 to i64
  %512 = call i32 %506(i64 noundef %511, ptr noundef %153)
  br label %513

513:                                              ; preds = %504, %501
  %514 = phi i32 [ %512, %504 ], [ %486, %501 ]
  %515 = icmp slt i32 %485, 0
  br i1 %515, label %516, label %527

516:                                              ; preds = %513
  %517 = shl nuw i32 %299, 1
  %518 = sub i32 %517, %296
  %519 = sdiv i32 %279, 2
  %520 = shl nsw i32 %519, 1
  %521 = mul nsw i32 %520, %288
  %522 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %523 = mul nsw i32 %518, %152
  %524 = add nsw i32 %523, %521
  %525 = sext i32 %524 to i64
  %526 = call i32 %522(i64 noundef %525, ptr noundef %153)
  br label %527

527:                                              ; preds = %516, %513
  %528 = phi i32 [ %526, %516 ], [ %485, %513 ]
  %529 = icmp slt i32 %484, 0
  br i1 %529, label %530, label %539

530:                                              ; preds = %527
  %531 = sdiv i32 %279, 2
  %532 = shl nsw i32 %531, 1
  %533 = mul nsw i32 %532, %288
  %534 = load ptr, ptr @read_hash, align 8, !tbaa !137
  %535 = mul nsw i32 %302, %152
  %536 = add nsw i32 %535, %533
  %537 = sext i32 %536 to i64
  %538 = call i32 %534(i64 noundef %537, ptr noundef %153)
  br label %539

539:                                              ; preds = %527, %530, %483
  %540 = phi i32 [ %538, %530 ], [ %484, %527 ], [ %484, %483 ]
  %541 = phi i32 [ %528, %530 ], [ %528, %527 ], [ %485, %483 ]
  %542 = phi i32 [ %514, %530 ], [ %514, %527 ], [ %486, %483 ]
  %543 = phi i32 [ %502, %530 ], [ %502, %527 ], [ %487, %483 ]
  %544 = load ptr, ptr %16, align 8, !tbaa !73
  %545 = getelementptr inbounds i32, ptr %544, i64 %276
  store i32 %543, ptr %545, align 4, !tbaa !67
  %546 = load ptr, ptr %177, align 8, !tbaa !74
  %547 = getelementptr inbounds i32, ptr %546, i64 %276
  store i32 %542, ptr %547, align 4, !tbaa !67
  %548 = load ptr, ptr %178, align 8, !tbaa !75
  %549 = getelementptr inbounds i32, ptr %548, i64 %276
  store i32 %541, ptr %549, align 4, !tbaa !67
  %550 = load ptr, ptr %179, align 8, !tbaa !76
  %551 = getelementptr inbounds i32, ptr %550, i64 %276
  store i32 %540, ptr %551, align 4, !tbaa !67
  %552 = add nuw nsw i64 %276, 1
  %553 = icmp eq i64 %552, %180
  br i1 %553, label %264, label %271, !llvm.loop !189

554:                                              ; preds = %139
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #31
  call void @cpu_timer_start(ptr noundef nonnull %6)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #31
  %555 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %556 = load i32, ptr %555, align 8, !tbaa !91
  %557 = mul nsw i32 %556, %556
  %558 = shl i32 2, %557
  %559 = sext i32 %558 to i64
  %560 = icmp slt i32 %558, 0
  br i1 %560, label %561, label %562

561:                                              ; preds = %554
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.142) #36
  unreachable

562:                                              ; preds = %554
  %563 = icmp ugt i32 %557, 30
  br i1 %563, label %569, label %564

564:                                              ; preds = %562
  %565 = shl nuw nsw i64 %559, 2
  %566 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %565) #35
  store i32 0, ptr %566, align 4, !tbaa !67
  %567 = getelementptr i32, ptr %566, i64 1
  %568 = add nsw i64 %565, -4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %567, i8 0, i64 %568, i1 false), !tbaa !67
  br label %569

569:                                              ; preds = %564, %562
  %570 = phi ptr [ %566, %564 ], [ null, %562 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #31
  %571 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 38
  store i32 0, ptr %571, align 8, !tbaa !55
  invoke void @_ZN4Mesh24calc_spatial_coordinatesEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef 0)
          to label %572 unwind label %635

572:                                              ; preds = %569
  %573 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 24
  invoke void @KDTree_Initialize(ptr noundef nonnull %573)
          to label %574 unwind label %635

574:                                              ; preds = %572
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #31
  %575 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %576 = load i64, ptr %575, align 8, !tbaa !43
  %577 = icmp eq i64 %576, 0
  br i1 %577, label %609, label %578

578:                                              ; preds = %574
  %579 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %580 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %581 = getelementptr inbounds %struct.TBounds, ptr %3, i64 0, i32 1
  %582 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %583 = getelementptr inbounds %struct.TVector, ptr %3, i64 0, i32 1
  %584 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %585 = getelementptr inbounds %struct.TBounds, ptr %3, i64 0, i32 1, i32 1
  br label %586

586:                                              ; preds = %604, %578
  %587 = phi i64 [ 0, %578 ], [ %606, %604 ]
  %588 = load ptr, ptr %579, align 8, !tbaa !44
  %589 = getelementptr inbounds double, ptr %588, i64 %587
  %590 = load double, ptr %589, align 8, !tbaa !45
  store double %590, ptr %3, align 8, !tbaa !117
  %591 = load double, ptr %589, align 8, !tbaa !45
  %592 = load ptr, ptr %580, align 8, !tbaa !44
  %593 = getelementptr inbounds double, ptr %592, i64 %587
  %594 = load double, ptr %593, align 8, !tbaa !45
  %595 = fadd double %591, %594
  store double %595, ptr %581, align 8, !tbaa !118
  %596 = load ptr, ptr %582, align 8, !tbaa !44
  %597 = getelementptr inbounds double, ptr %596, i64 %587
  %598 = load double, ptr %597, align 8, !tbaa !45
  store double %598, ptr %583, align 8, !tbaa !119
  %599 = load double, ptr %597, align 8, !tbaa !45
  %600 = load ptr, ptr %584, align 8, !tbaa !44
  %601 = getelementptr inbounds double, ptr %600, i64 %587
  %602 = load double, ptr %601, align 8, !tbaa !45
  %603 = fadd double %599, %602
  store double %603, ptr %585, align 8, !tbaa !120
  invoke void @KDTree_AddElement(ptr noundef nonnull %573, ptr noundef nonnull %3)
          to label %604 unwind label %633

604:                                              ; preds = %586
  %605 = add nuw nsw i64 %587, 1
  %606 = and i64 %605, 4294967295
  %607 = load i64, ptr %575, align 8, !tbaa !43
  %608 = icmp ugt i64 %607, %606
  br i1 %608, label %586, label %609, !llvm.loop !121

609:                                              ; preds = %604, %574
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #31
  %610 = load i64, ptr %6, align 8, !tbaa.struct !71
  %611 = getelementptr inbounds i8, ptr %6, i64 8
  %612 = load i64, ptr %611, align 8, !tbaa.struct !72
  %613 = invoke double @cpu_timer_stop(i64 %610, i64 %612)
          to label %614 unwind label %635

614:                                              ; preds = %609
  %615 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 17
  %616 = load double, ptr %615, align 8, !tbaa !45
  %617 = fadd double %613, %616
  store double %617, ptr %615, align 8, !tbaa !45
  invoke void @cpu_timer_start(ptr noundef nonnull %6)
          to label %618 unwind label %635

618:                                              ; preds = %614
  %619 = icmp sgt i32 %1, 0
  br i1 %619, label %620, label %632

620:                                              ; preds = %618
  %621 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %622 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %623 = getelementptr inbounds %struct.TBounds, ptr %7, i64 0, i32 1
  %624 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %625 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %626 = getelementptr inbounds %struct.TVector, ptr %7, i64 0, i32 1
  %627 = getelementptr inbounds %struct.TBounds, ptr %7, i64 0, i32 1, i32 1
  %628 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %629 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %630 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %631 = zext i32 %1 to i64
  br label %637

632:                                              ; preds = %777, %618
  invoke void @KDTree_Destroy(ptr noundef nonnull %573)
          to label %780 unwind label %635

633:                                              ; preds = %586
  %634 = landingpad { ptr, i32 }
          cleanup
  br label %791

635:                                              ; preds = %569, %609, %614, %632, %780, %572
  %636 = landingpad { ptr, i32 }
          cleanup
  br label %791

637:                                              ; preds = %620, %777
  %638 = phi i64 [ 0, %620 ], [ %778, %777 ]
  %639 = load ptr, ptr %16, align 8, !tbaa !73
  %640 = getelementptr inbounds i32, ptr %639, i64 %638
  %641 = trunc i64 %638 to i32
  store i32 %641, ptr %640, align 4, !tbaa !67
  %642 = load ptr, ptr %621, align 8, !tbaa !44
  %643 = getelementptr inbounds double, ptr %642, i64 %638
  %644 = load double, ptr %643, align 8, !tbaa !45
  %645 = load ptr, ptr %622, align 8, !tbaa !44
  %646 = getelementptr inbounds double, ptr %645, i64 %638
  %647 = load double, ptr %646, align 8, !tbaa !45
  %648 = fmul double %647, 2.500000e-01
  %649 = fsub double %644, %648
  store double %649, ptr %7, align 8, !tbaa !117
  %650 = load double, ptr %643, align 8, !tbaa !45
  %651 = load double, ptr %646, align 8, !tbaa !45
  %652 = fmul double %651, 2.500000e-01
  %653 = fsub double %650, %652
  store double %653, ptr %623, align 8, !tbaa !118
  %654 = load ptr, ptr %624, align 8, !tbaa !44
  %655 = getelementptr inbounds double, ptr %654, i64 %638
  %656 = load double, ptr %655, align 8, !tbaa !45
  %657 = load ptr, ptr %625, align 8, !tbaa !44
  %658 = getelementptr inbounds double, ptr %657, i64 %638
  %659 = load double, ptr %658, align 8, !tbaa !45
  %660 = fmul double %659, 2.500000e-01
  %661 = fadd double %656, %660
  store double %661, ptr %626, align 8, !tbaa !119
  %662 = load double, ptr %655, align 8, !tbaa !45
  %663 = load double, ptr %658, align 8, !tbaa !45
  %664 = fmul double %663, 2.500000e-01
  %665 = fadd double %662, %664
  store double %665, ptr %627, align 8, !tbaa !120
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %573, ptr noundef nonnull %8, ptr noundef %570, ptr noundef nonnull %7)
          to label %666 unwind label %673

666:                                              ; preds = %637
  %667 = load i32, ptr %8, align 4, !tbaa !67
  %668 = icmp eq i32 %667, 1
  br i1 %668, label %669, label %675

669:                                              ; preds = %666
  %670 = load i32, ptr %570, align 4, !tbaa !67
  %671 = load ptr, ptr %16, align 8, !tbaa !73
  %672 = getelementptr inbounds i32, ptr %671, i64 %638
  store i32 %670, ptr %672, align 4, !tbaa !67
  br label %675

673:                                              ; preds = %743, %709, %675, %637
  %674 = landingpad { ptr, i32 }
          cleanup
  br label %791

675:                                              ; preds = %669, %666
  %676 = load ptr, ptr %628, align 8, !tbaa !74
  %677 = getelementptr inbounds i32, ptr %676, i64 %638
  store i32 %641, ptr %677, align 4, !tbaa !67
  %678 = load ptr, ptr %621, align 8, !tbaa !44
  %679 = getelementptr inbounds double, ptr %678, i64 %638
  %680 = load double, ptr %679, align 8, !tbaa !45
  %681 = load ptr, ptr %622, align 8, !tbaa !44
  %682 = getelementptr inbounds double, ptr %681, i64 %638
  %683 = load double, ptr %682, align 8, !tbaa !45
  %684 = fmul double %683, 1.250000e+00
  %685 = fadd double %680, %684
  store double %685, ptr %7, align 8, !tbaa !117
  %686 = load double, ptr %679, align 8, !tbaa !45
  %687 = load double, ptr %682, align 8, !tbaa !45
  %688 = fmul double %687, 1.250000e+00
  %689 = fadd double %686, %688
  store double %689, ptr %623, align 8, !tbaa !118
  %690 = load ptr, ptr %624, align 8, !tbaa !44
  %691 = getelementptr inbounds double, ptr %690, i64 %638
  %692 = load double, ptr %691, align 8, !tbaa !45
  %693 = load ptr, ptr %625, align 8, !tbaa !44
  %694 = getelementptr inbounds double, ptr %693, i64 %638
  %695 = load double, ptr %694, align 8, !tbaa !45
  %696 = fmul double %695, 2.500000e-01
  %697 = fadd double %692, %696
  store double %697, ptr %626, align 8, !tbaa !119
  %698 = load double, ptr %691, align 8, !tbaa !45
  %699 = load double, ptr %694, align 8, !tbaa !45
  %700 = fmul double %699, 2.500000e-01
  %701 = fadd double %698, %700
  store double %701, ptr %627, align 8, !tbaa !120
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %573, ptr noundef nonnull %8, ptr noundef %570, ptr noundef nonnull %7)
          to label %702 unwind label %673

702:                                              ; preds = %675
  %703 = load i32, ptr %8, align 4, !tbaa !67
  %704 = icmp eq i32 %703, 1
  br i1 %704, label %705, label %709

705:                                              ; preds = %702
  %706 = load i32, ptr %570, align 4, !tbaa !67
  %707 = load ptr, ptr %628, align 8, !tbaa !74
  %708 = getelementptr inbounds i32, ptr %707, i64 %638
  store i32 %706, ptr %708, align 4, !tbaa !67
  br label %709

709:                                              ; preds = %705, %702
  %710 = load ptr, ptr %629, align 8, !tbaa !75
  %711 = getelementptr inbounds i32, ptr %710, i64 %638
  store i32 %641, ptr %711, align 4, !tbaa !67
  %712 = load ptr, ptr %621, align 8, !tbaa !44
  %713 = getelementptr inbounds double, ptr %712, i64 %638
  %714 = load double, ptr %713, align 8, !tbaa !45
  %715 = load ptr, ptr %622, align 8, !tbaa !44
  %716 = getelementptr inbounds double, ptr %715, i64 %638
  %717 = load double, ptr %716, align 8, !tbaa !45
  %718 = fmul double %717, 2.500000e-01
  %719 = fadd double %714, %718
  store double %719, ptr %7, align 8, !tbaa !117
  %720 = load double, ptr %713, align 8, !tbaa !45
  %721 = load double, ptr %716, align 8, !tbaa !45
  %722 = fmul double %721, 2.500000e-01
  %723 = fadd double %720, %722
  store double %723, ptr %623, align 8, !tbaa !118
  %724 = load ptr, ptr %624, align 8, !tbaa !44
  %725 = getelementptr inbounds double, ptr %724, i64 %638
  %726 = load double, ptr %725, align 8, !tbaa !45
  %727 = load ptr, ptr %625, align 8, !tbaa !44
  %728 = getelementptr inbounds double, ptr %727, i64 %638
  %729 = load double, ptr %728, align 8, !tbaa !45
  %730 = fmul double %729, 2.500000e-01
  %731 = fsub double %726, %730
  store double %731, ptr %626, align 8, !tbaa !119
  %732 = load double, ptr %725, align 8, !tbaa !45
  %733 = load double, ptr %728, align 8, !tbaa !45
  %734 = fmul double %733, 2.500000e-01
  %735 = fsub double %732, %734
  store double %735, ptr %627, align 8, !tbaa !120
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %573, ptr noundef nonnull %8, ptr noundef %570, ptr noundef nonnull %7)
          to label %736 unwind label %673

736:                                              ; preds = %709
  %737 = load i32, ptr %8, align 4, !tbaa !67
  %738 = icmp eq i32 %737, 1
  br i1 %738, label %739, label %743

739:                                              ; preds = %736
  %740 = load i32, ptr %570, align 4, !tbaa !67
  %741 = load ptr, ptr %629, align 8, !tbaa !75
  %742 = getelementptr inbounds i32, ptr %741, i64 %638
  store i32 %740, ptr %742, align 4, !tbaa !67
  br label %743

743:                                              ; preds = %739, %736
  %744 = load ptr, ptr %630, align 8, !tbaa !76
  %745 = getelementptr inbounds i32, ptr %744, i64 %638
  store i32 %641, ptr %745, align 4, !tbaa !67
  %746 = load ptr, ptr %621, align 8, !tbaa !44
  %747 = getelementptr inbounds double, ptr %746, i64 %638
  %748 = load double, ptr %747, align 8, !tbaa !45
  %749 = load ptr, ptr %622, align 8, !tbaa !44
  %750 = getelementptr inbounds double, ptr %749, i64 %638
  %751 = load double, ptr %750, align 8, !tbaa !45
  %752 = fmul double %751, 2.500000e-01
  %753 = fadd double %748, %752
  store double %753, ptr %7, align 8, !tbaa !117
  %754 = load double, ptr %747, align 8, !tbaa !45
  %755 = load double, ptr %750, align 8, !tbaa !45
  %756 = fmul double %755, 2.500000e-01
  %757 = fadd double %754, %756
  store double %757, ptr %623, align 8, !tbaa !118
  %758 = load ptr, ptr %624, align 8, !tbaa !44
  %759 = getelementptr inbounds double, ptr %758, i64 %638
  %760 = load double, ptr %759, align 8, !tbaa !45
  %761 = load ptr, ptr %625, align 8, !tbaa !44
  %762 = getelementptr inbounds double, ptr %761, i64 %638
  %763 = load double, ptr %762, align 8, !tbaa !45
  %764 = fmul double %763, 1.250000e+00
  %765 = fadd double %760, %764
  store double %765, ptr %626, align 8, !tbaa !119
  %766 = load double, ptr %759, align 8, !tbaa !45
  %767 = load double, ptr %762, align 8, !tbaa !45
  %768 = fmul double %767, 1.250000e+00
  %769 = fadd double %766, %768
  store double %769, ptr %627, align 8, !tbaa !120
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %573, ptr noundef nonnull %8, ptr noundef %570, ptr noundef nonnull %7)
          to label %770 unwind label %673

770:                                              ; preds = %743
  %771 = load i32, ptr %8, align 4, !tbaa !67
  %772 = icmp eq i32 %771, 1
  br i1 %772, label %773, label %777

773:                                              ; preds = %770
  %774 = load i32, ptr %570, align 4, !tbaa !67
  %775 = load ptr, ptr %630, align 8, !tbaa !76
  %776 = getelementptr inbounds i32, ptr %775, i64 %638
  store i32 %774, ptr %776, align 4, !tbaa !67
  br label %777

777:                                              ; preds = %770, %773
  %778 = add nuw nsw i64 %638, 1
  %779 = icmp eq i64 %778, %631
  br i1 %779, label %632, label %637, !llvm.loop !190

780:                                              ; preds = %632
  %781 = load i64, ptr %6, align 8, !tbaa.struct !71
  %782 = load i64, ptr %611, align 8, !tbaa.struct !72
  %783 = invoke double @cpu_timer_stop(i64 %781, i64 %782)
          to label %784 unwind label %635

784:                                              ; preds = %780
  %785 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 18
  %786 = load double, ptr %785, align 8, !tbaa !45
  %787 = fadd double %783, %786
  store double %787, ptr %785, align 8, !tbaa !45
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #31
  %788 = icmp eq ptr %570, null
  br i1 %788, label %790, label %789

789:                                              ; preds = %784
  call void @_ZdlPv(ptr noundef nonnull %570) #33
  br label %790

790:                                              ; preds = %784, %789
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #31
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #31
  br label %796

791:                                              ; preds = %633, %635, %673
  %792 = phi { ptr, i32 } [ %674, %673 ], [ %634, %633 ], [ %636, %635 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #31
  %793 = icmp eq ptr %570, null
  br i1 %793, label %795, label %794

794:                                              ; preds = %791
  call void @_ZdlPv(ptr noundef nonnull %570) #33
  br label %795

795:                                              ; preds = %794, %791
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #31
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #31
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #31
  resume { ptr, i32 } %792

796:                                              ; preds = %139, %790, %264
  %797 = sext i32 %1 to i64
  %798 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  store i64 %797, ptr %798, align 8, !tbaa !78
  br label %799

799:                                              ; preds = %796, %2
  %800 = load i64, ptr %4, align 8, !tbaa.struct !71
  %801 = getelementptr inbounds i8, ptr %4, i64 8
  %802 = load i64, ptr %801, align 8, !tbaa.struct !72
  %803 = call double @cpu_timer_stop(i64 %800, i64 %802)
  %804 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 1
  %805 = load double, ptr %804, align 8, !tbaa !45
  %806 = fadd double %803, %805
  store double %806, ptr %804, align 8, !tbaa !45
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #31
  ret void
}

declare ptr @compact_hash_init(i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #7

declare void @write_hash_collision_report() local_unnamed_addr #7

declare void @read_hash_collision_report() local_unnamed_addr #7

declare void @compact_hash_delete(ptr noundef) local_unnamed_addr #7

declare void @KDTree_QueryBoxIntersect(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN4Mesh24print_calc_neighbor_typeEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0) local_unnamed_addr #6 align 2 {
  %2 = load i32, ptr @calc_neighbor_type, align 4, !tbaa !67
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %17

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %6 = load i32, ptr %5, align 4, !tbaa !80
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %32

8:                                                ; preds = %4
  %9 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.148)
  %10 = load i32, ptr %5, align 4, !tbaa !80
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 10
  %13 = load i32, ptr %12, align 8
  %14 = icmp eq i32 %13, 1
  %15 = select i1 %11, i1 %14, i1 false
  br i1 %15, label %16, label %32

16:                                               ; preds = %8
  tail call void @final_hash_collision_report()
  br label %32

17:                                               ; preds = %1
  %18 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %19 = load i64, ptr %18, align 8, !tbaa !43
  %20 = uitofp i64 %19 to double
  %21 = tail call double @log(double noundef %20) #31
  %22 = fptosi double %21 to i32
  %23 = sext i32 %22 to i64
  %24 = shl i64 %19, 2
  %25 = mul i64 %24, %23
  %26 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.47, i64 noundef %25)
  %27 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %28 = load i32, ptr %27, align 4, !tbaa !80
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %17
  %31 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.147)
  br label %32

32:                                               ; preds = %4, %17, %30, %8, %16
  ret void
}

declare void @final_hash_collision_report() local_unnamed_addr #7

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local noundef i32 @_ZN4Mesh22get_calc_neighbor_typeEv(ptr nocapture noundef nonnull readnone align 8 dereferenceable(2288) %0) local_unnamed_addr #18 align 2 {
  %2 = load i32, ptr @calc_neighbor_type, align 4, !tbaa !67
  ret i32 %2
}

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN4Mesh22calc_celltype_threadedEm(ptr noundef nonnull align 8 dereferenceable(2288) %0, i64 noundef %1) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %4 = load ptr, ptr %3, align 8, !tbaa !85
  %5 = icmp eq ptr %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %8 = tail call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %7, ptr noundef nonnull %4)
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = load ptr, ptr %3, align 8, !tbaa !85
  %12 = icmp eq ptr %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %10
  %14 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %7, ptr noundef nonnull %11)
  store ptr %14, ptr %3, align 8, !tbaa !85
  br label %15

15:                                               ; preds = %2, %13, %10
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %17 = tail call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %16, i64 noundef %1, i64 noundef 4, ptr noundef nonnull @.str.49, i32 noundef 0)
  store ptr %17, ptr %3, align 8, !tbaa !85
  br label %18

18:                                               ; preds = %15, %6
  %19 = icmp eq i64 %1, 0
  br i1 %19, label %36, label %20

20:                                               ; preds = %18
  %21 = load ptr, ptr %3, align 8, !tbaa !85
  %22 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %23 = load ptr, ptr %22, align 8, !tbaa !60
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 26
  %25 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %26 = load ptr, ptr %25, align 8, !tbaa !62
  %27 = load ptr, ptr %24, align 8, !tbaa !59
  %28 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 27
  %29 = load ptr, ptr %28, align 8, !tbaa !59
  %30 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %31 = load ptr, ptr %30, align 8, !tbaa !61
  %32 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 28
  %33 = load ptr, ptr %32, align 8, !tbaa !59
  %34 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 29
  %35 = load ptr, ptr %34, align 8, !tbaa !59
  br label %37

36:                                               ; preds = %81, %18
  ret void

37:                                               ; preds = %20, %81
  %38 = phi i64 [ 0, %20 ], [ %83, %81 ]
  %39 = getelementptr inbounds i32, ptr %21, i64 %38
  store i32 1, ptr %39, align 4, !tbaa !67
  %40 = shl nuw i64 %38, 32
  %41 = ashr exact i64 %40, 32
  %42 = getelementptr inbounds i32, ptr %23, i64 %41
  %43 = load i32, ptr %42, align 4, !tbaa !67
  %44 = getelementptr inbounds i32, ptr %26, i64 %41
  %45 = load i32, ptr %44, align 4, !tbaa !67
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i32, ptr %27, i64 %46
  %48 = load i32, ptr %47, align 4, !tbaa !67
  %49 = icmp slt i32 %43, %48
  br i1 %49, label %50, label %54

50:                                               ; preds = %37
  store i32 -1, ptr %39, align 4, !tbaa !67
  %51 = load i32, ptr %42, align 4, !tbaa !67
  %52 = load i32, ptr %44, align 4, !tbaa !67
  %53 = sext i32 %52 to i64
  br label %54

54:                                               ; preds = %50, %37
  %55 = phi i64 [ %53, %50 ], [ %46, %37 ]
  %56 = phi i32 [ %51, %50 ], [ %43, %37 ]
  %57 = getelementptr inbounds i32, ptr %29, i64 %55
  %58 = load i32, ptr %57, align 4, !tbaa !67
  %59 = icmp sgt i32 %56, %58
  br i1 %59, label %60, label %63

60:                                               ; preds = %54
  store i32 -2, ptr %39, align 4, !tbaa !67
  %61 = load i32, ptr %44, align 4, !tbaa !67
  %62 = sext i32 %61 to i64
  br label %63

63:                                               ; preds = %60, %54
  %64 = phi i64 [ %62, %60 ], [ %55, %54 ]
  %65 = getelementptr inbounds i32, ptr %31, i64 %41
  %66 = load i32, ptr %65, align 4, !tbaa !67
  %67 = getelementptr inbounds i32, ptr %33, i64 %64
  %68 = load i32, ptr %67, align 4, !tbaa !67
  %69 = icmp slt i32 %66, %68
  br i1 %69, label %70, label %74

70:                                               ; preds = %63
  store i32 -3, ptr %39, align 4, !tbaa !67
  %71 = load i32, ptr %65, align 4, !tbaa !67
  %72 = load i32, ptr %44, align 4, !tbaa !67
  %73 = sext i32 %72 to i64
  br label %74

74:                                               ; preds = %70, %63
  %75 = phi i64 [ %73, %70 ], [ %64, %63 ]
  %76 = phi i32 [ %71, %70 ], [ %66, %63 ]
  %77 = getelementptr inbounds i32, ptr %35, i64 %75
  %78 = load i32, ptr %77, align 4, !tbaa !67
  %79 = icmp sgt i32 %76, %78
  br i1 %79, label %80, label %81

80:                                               ; preds = %74
  store i32 -4, ptr %39, align 4, !tbaa !67
  br label %81

81:                                               ; preds = %74, %80
  %82 = add nuw nsw i64 %38, 1
  %83 = and i64 %82, 4294967295
  %84 = icmp ult i64 %83, %1
  br i1 %84, label %37, label %36, !llvm.loop !191
}

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh13calc_symmetryERSt6vectorIiSaIiEES3_S3_(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(24) %1, ptr nocapture noundef nonnull readonly align 8 dereferenceable(24) %2, ptr nocapture noundef nonnull readonly align 8 dereferenceable(24) %3) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %struct.TBounds, align 8
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #31
  %7 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %8 = load i32, ptr %7, align 8, !tbaa !91
  %9 = mul nsw i32 %8, %8
  %10 = shl i32 2, %9
  %11 = sext i32 %10 to i64
  %12 = icmp slt i32 %10, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %4
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.142) #36
  unreachable

14:                                               ; preds = %4
  %15 = icmp ugt i32 %9, 30
  br i1 %15, label %21, label %16

16:                                               ; preds = %14
  %17 = shl nuw nsw i64 %11, 2
  %18 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %17) #35
  store i32 0, ptr %18, align 4, !tbaa !67
  %19 = getelementptr i32, ptr %18, i64 1
  %20 = add nsw i64 %17, -4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %19, i8 0, i64 %20, i1 false), !tbaa !67
  br label %21

21:                                               ; preds = %16, %14
  %22 = phi ptr [ %18, %16 ], [ null, %14 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #31
  %23 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %24 = load i64, ptr %23, align 8, !tbaa !43
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %28 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %29 = getelementptr inbounds %struct.TBounds, ptr %5, i64 0, i32 1
  %30 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %31 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %32 = getelementptr inbounds %struct.TVector, ptr %5, i64 0, i32 1
  %33 = getelementptr inbounds %struct.TBounds, ptr %5, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 24
  br label %39

35:                                               ; preds = %155, %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #31
  %36 = icmp eq ptr %22, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %35
  call void @_ZdlPv(ptr noundef nonnull %22) #33
  br label %38

38:                                               ; preds = %35, %37
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #31
  ret void

39:                                               ; preds = %26, %155
  %40 = phi i64 [ 0, %26 ], [ %157, %155 ]
  %41 = trunc i64 %40 to i32
  %42 = load ptr, ptr %1, align 8, !tbaa !59
  %43 = getelementptr inbounds i32, ptr %42, i64 %40
  store i32 %41, ptr %43, align 4, !tbaa !67
  %44 = load ptr, ptr %2, align 8, !tbaa !59
  %45 = getelementptr inbounds i32, ptr %44, i64 %40
  store i32 %41, ptr %45, align 4, !tbaa !67
  %46 = load ptr, ptr %3, align 8, !tbaa !59
  %47 = getelementptr inbounds i32, ptr %46, i64 %40
  store i32 %41, ptr %47, align 4, !tbaa !67
  %48 = load ptr, ptr %27, align 8, !tbaa !44
  %49 = getelementptr inbounds double, ptr %48, i64 %40
  %50 = load double, ptr %49, align 8, !tbaa !45
  %51 = load ptr, ptr %28, align 8, !tbaa !44
  %52 = getelementptr inbounds double, ptr %51, i64 %40
  %53 = load double, ptr %52, align 8, !tbaa !45
  %54 = fmul double %53, 5.000000e-01
  %55 = fadd double %50, %54
  %56 = fneg double %55
  store double %56, ptr %5, align 8, !tbaa !117
  %57 = load double, ptr %49, align 8, !tbaa !45
  %58 = load double, ptr %52, align 8, !tbaa !45
  %59 = fmul double %58, 5.000000e-01
  %60 = fadd double %57, %59
  %61 = fneg double %60
  store double %61, ptr %29, align 8, !tbaa !118
  %62 = load ptr, ptr %30, align 8, !tbaa !44
  %63 = getelementptr inbounds double, ptr %62, i64 %40
  %64 = load double, ptr %63, align 8, !tbaa !45
  %65 = load ptr, ptr %31, align 8, !tbaa !44
  %66 = getelementptr inbounds double, ptr %65, i64 %40
  %67 = load double, ptr %66, align 8, !tbaa !45
  %68 = fmul double %67, 5.000000e-01
  %69 = fadd double %64, %68
  %70 = fneg double %69
  store double %70, ptr %32, align 8, !tbaa !119
  %71 = load double, ptr %63, align 8, !tbaa !45
  %72 = load double, ptr %66, align 8, !tbaa !45
  %73 = fmul double %72, 5.000000e-01
  %74 = fadd double %71, %73
  %75 = fneg double %74
  store double %75, ptr %33, align 8, !tbaa !120
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %34, ptr noundef nonnull %6, ptr noundef %22, ptr noundef nonnull %5)
          to label %76 unwind label %83

76:                                               ; preds = %39
  %77 = load i32, ptr %6, align 4, !tbaa !67
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %87

79:                                               ; preds = %76
  %80 = load i32, ptr %22, align 4, !tbaa !67
  %81 = load ptr, ptr %1, align 8, !tbaa !59
  %82 = getelementptr inbounds i32, ptr %81, i64 %40
  store i32 %80, ptr %82, align 4, !tbaa !67
  br label %87

83:                                               ; preds = %121, %87, %39
  %84 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #31
  %85 = icmp eq ptr %22, null
  br i1 %85, label %160, label %86

86:                                               ; preds = %83
  call void @_ZdlPv(ptr noundef nonnull %22) #33
  br label %160

87:                                               ; preds = %79, %76
  %88 = load ptr, ptr %27, align 8, !tbaa !44
  %89 = getelementptr inbounds double, ptr %88, i64 %40
  %90 = load double, ptr %89, align 8, !tbaa !45
  %91 = load ptr, ptr %28, align 8, !tbaa !44
  %92 = getelementptr inbounds double, ptr %91, i64 %40
  %93 = load double, ptr %92, align 8, !tbaa !45
  %94 = fmul double %93, 5.000000e-01
  %95 = fadd double %90, %94
  %96 = fneg double %95
  store double %96, ptr %5, align 8, !tbaa !117
  %97 = load double, ptr %89, align 8, !tbaa !45
  %98 = load double, ptr %92, align 8, !tbaa !45
  %99 = fmul double %98, 5.000000e-01
  %100 = fadd double %97, %99
  %101 = fneg double %100
  store double %101, ptr %29, align 8, !tbaa !118
  %102 = load ptr, ptr %30, align 8, !tbaa !44
  %103 = getelementptr inbounds double, ptr %102, i64 %40
  %104 = load double, ptr %103, align 8, !tbaa !45
  %105 = load ptr, ptr %31, align 8, !tbaa !44
  %106 = getelementptr inbounds double, ptr %105, i64 %40
  %107 = load double, ptr %106, align 8, !tbaa !45
  %108 = fmul double %107, 5.000000e-01
  %109 = fadd double %104, %108
  store double %109, ptr %32, align 8, !tbaa !119
  %110 = load double, ptr %103, align 8, !tbaa !45
  %111 = load double, ptr %106, align 8, !tbaa !45
  %112 = fmul double %111, 5.000000e-01
  %113 = fadd double %110, %112
  store double %113, ptr %33, align 8, !tbaa !120
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %34, ptr noundef nonnull %6, ptr noundef %22, ptr noundef nonnull %5)
          to label %114 unwind label %83

114:                                              ; preds = %87
  %115 = load i32, ptr %6, align 4, !tbaa !67
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %121

117:                                              ; preds = %114
  %118 = load i32, ptr %22, align 4, !tbaa !67
  %119 = load ptr, ptr %2, align 8, !tbaa !59
  %120 = getelementptr inbounds i32, ptr %119, i64 %40
  store i32 %118, ptr %120, align 4, !tbaa !67
  br label %121

121:                                              ; preds = %117, %114
  %122 = load ptr, ptr %27, align 8, !tbaa !44
  %123 = getelementptr inbounds double, ptr %122, i64 %40
  %124 = load double, ptr %123, align 8, !tbaa !45
  %125 = load ptr, ptr %28, align 8, !tbaa !44
  %126 = getelementptr inbounds double, ptr %125, i64 %40
  %127 = load double, ptr %126, align 8, !tbaa !45
  %128 = fmul double %127, 5.000000e-01
  %129 = fadd double %124, %128
  store double %129, ptr %5, align 8, !tbaa !117
  %130 = load double, ptr %123, align 8, !tbaa !45
  %131 = load double, ptr %126, align 8, !tbaa !45
  %132 = fmul double %131, 5.000000e-01
  %133 = fadd double %130, %132
  store double %133, ptr %29, align 8, !tbaa !118
  %134 = load ptr, ptr %30, align 8, !tbaa !44
  %135 = getelementptr inbounds double, ptr %134, i64 %40
  %136 = load double, ptr %135, align 8, !tbaa !45
  %137 = load ptr, ptr %31, align 8, !tbaa !44
  %138 = getelementptr inbounds double, ptr %137, i64 %40
  %139 = load double, ptr %138, align 8, !tbaa !45
  %140 = fmul double %139, 5.000000e-01
  %141 = fadd double %136, %140
  %142 = fneg double %141
  store double %142, ptr %32, align 8, !tbaa !119
  %143 = load double, ptr %135, align 8, !tbaa !45
  %144 = load double, ptr %138, align 8, !tbaa !45
  %145 = fmul double %144, 5.000000e-01
  %146 = fadd double %143, %145
  %147 = fneg double %146
  store double %147, ptr %33, align 8, !tbaa !120
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %34, ptr noundef nonnull %6, ptr noundef %22, ptr noundef nonnull %5)
          to label %148 unwind label %83

148:                                              ; preds = %121
  %149 = load i32, ptr %6, align 4, !tbaa !67
  %150 = icmp eq i32 %149, 1
  br i1 %150, label %151, label %155

151:                                              ; preds = %148
  %152 = load i32, ptr %22, align 4, !tbaa !67
  %153 = load ptr, ptr %3, align 8, !tbaa !59
  %154 = getelementptr inbounds i32, ptr %153, i64 %40
  store i32 %152, ptr %154, align 4, !tbaa !67
  br label %155

155:                                              ; preds = %148, %151
  %156 = add nuw nsw i64 %40, 1
  %157 = and i64 %156, 4294967295
  %158 = load i64, ptr %23, align 8, !tbaa !43
  %159 = icmp ugt i64 %158, %157
  br i1 %159, label %39, label %35, !llvm.loop !192

160:                                              ; preds = %86, %83
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #31
  resume { ptr, i32 } %84
}

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN4Mesh6resizeEm(ptr noundef nonnull align 8 dereferenceable(2288) %0, i64 noundef %1) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %5 = load ptr, ptr %4, align 8, !tbaa !60
  %6 = tail call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef %5)
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN10MallocPlus18memory_realloc_allEm(ptr noundef nonnull align 8 dereferenceable(96) %3, i64 noundef %1)
  br label %9

9:                                                ; preds = %8, %2
  ret void
}

declare void @_ZN10MallocPlus18memory_realloc_allEm(ptr noundef nonnull align 8 dereferenceable(96), i64 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN4Mesh17memory_reset_ptrsEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %3 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull @.str.50)
  %4 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  store ptr %3, ptr %4, align 8, !tbaa !60
  %5 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull @.str.51)
  %6 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  store ptr %5, ptr %6, align 8, !tbaa !61
  %7 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull @.str.52)
  %8 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  store ptr %7, ptr %8, align 8, !tbaa !62
  %9 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull @.str.49)
  %10 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  store ptr %9, ptr %10, align 8, !tbaa !85
  %11 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull @.str.42)
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  store ptr %11, ptr %12, align 8, !tbaa !73
  %13 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull @.str.43)
  %14 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  store ptr %13, ptr %14, align 8, !tbaa !74
  %15 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull @.str.44)
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  store ptr %15, ptr %16, align 8, !tbaa !75
  %17 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull @.str.45)
  %18 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  store ptr %17, ptr %18, align 8, !tbaa !76
  ret void
}

declare noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96), ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local void @_ZN4Mesh24resize_old_device_memoryEm(ptr nocapture noundef nonnull align 8 dereferenceable(2288) %0, i64 noundef %1) local_unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN4Mesh17print_object_infoEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) local_unnamed_addr #6 align 2 {
  %2 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.149)
  %3 = load i32, ptr %0, align 8, !tbaa !57
  %4 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.54, i32 noundef %3)
  %5 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %6 = load i32, ptr %5, align 4, !tbaa !80
  %7 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 10
  %8 = load i32, ptr %7, align 8, !tbaa !94
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 13
  %10 = load i32, ptr %9, align 4, !tbaa !81
  %11 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 11
  %12 = load i32, ptr %11, align 4, !tbaa !95
  %13 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.55, i32 noundef %6, i32 noundef %8, i32 noundef %10, i32 noundef %12)
  %14 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %15 = load i64, ptr %14, align 8, !tbaa !43
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  %17 = load i64, ptr %16, align 8, !tbaa !78
  %18 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.56, i64 noundef %15, i64 noundef %17)
  %19 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %20 = load ptr, ptr %19, align 8, !tbaa !85
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %22 = tail call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %21, ptr noundef %20)
  %23 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.57, ptr noundef %20, i64 noundef %22, i64 noundef 4)
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %25 = load ptr, ptr %24, align 8, !tbaa !62
  %26 = tail call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %21, ptr noundef %25)
  %27 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.58, ptr noundef %25, i64 noundef %26, i64 noundef 4)
  %28 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %29 = load ptr, ptr %28, align 8, !tbaa !60
  %30 = tail call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %21, ptr noundef %29)
  %31 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.59, ptr noundef %29, i64 noundef %30, i64 noundef 4)
  %32 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %33 = load ptr, ptr %32, align 8, !tbaa !61
  %34 = tail call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %21, ptr noundef %33)
  %35 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.60, ptr noundef %33, i64 noundef %34, i64 noundef 4)
  %36 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %37 = load ptr, ptr %36, align 8, !tbaa !73
  %38 = tail call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %21, ptr noundef %37)
  %39 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.61, ptr noundef %37, i64 noundef %38, i64 noundef 4)
  %40 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %41 = load ptr, ptr %40, align 8, !tbaa !74
  %42 = tail call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %21, ptr noundef %41)
  %43 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.62, ptr noundef %41, i64 noundef %42, i64 noundef 4)
  %44 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %45 = load ptr, ptr %44, align 8, !tbaa !75
  %46 = tail call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %21, ptr noundef %45)
  %47 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.63, ptr noundef %45, i64 noundef %46, i64 noundef 4)
  %48 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %49 = load ptr, ptr %48, align 8, !tbaa !76
  %50 = tail call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %21, ptr noundef %49)
  %51 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.64, ptr noundef %49, i64 noundef %50, i64 noundef 4)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh14calc_face_listEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83
  %11 = load ptr, ptr %10, align 8, !tbaa !59
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83, i32 0, i32 0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !58
  %14 = icmp eq ptr %13, %11
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  store ptr %11, ptr %12, align 8, !tbaa !58
  br label %16

16:                                               ; preds = %1, %15
  %17 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84
  %18 = load ptr, ptr %17, align 8, !tbaa !59
  %19 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !58
  %21 = icmp eq ptr %20, %18
  br i1 %21, label %23, label %22

22:                                               ; preds = %16
  store ptr %18, ptr %19, align 8, !tbaa !58
  br label %23

23:                                               ; preds = %16, %22
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85
  %25 = load ptr, ptr %24, align 8, !tbaa !59
  %26 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85, i32 0, i32 0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !58
  %28 = icmp eq ptr %27, %25
  br i1 %28, label %30, label %29

29:                                               ; preds = %23
  store ptr %25, ptr %26, align 8, !tbaa !58
  br label %30

30:                                               ; preds = %23, %29
  %31 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 92
  %32 = load ptr, ptr %31, align 8, !tbaa !59
  %33 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 92, i32 0, i32 0, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !58
  %35 = icmp eq ptr %34, %32
  br i1 %35, label %37, label %36

36:                                               ; preds = %30
  store ptr %32, ptr %33, align 8, !tbaa !58
  br label %37

37:                                               ; preds = %30, %36
  %38 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 93
  %39 = load ptr, ptr %38, align 8, !tbaa !59
  %40 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 93, i32 0, i32 0, i32 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !58
  %42 = icmp eq ptr %41, %39
  br i1 %42, label %44, label %43

43:                                               ; preds = %37
  store ptr %39, ptr %40, align 8, !tbaa !58
  br label %44

44:                                               ; preds = %37, %43
  %45 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 94
  %46 = load ptr, ptr %45, align 8, !tbaa !59
  %47 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 94, i32 0, i32 0, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !58
  %49 = icmp eq ptr %48, %46
  br i1 %49, label %51, label %50

50:                                               ; preds = %44
  store ptr %46, ptr %47, align 8, !tbaa !58
  br label %51

51:                                               ; preds = %44, %50
  %52 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 95
  %53 = load ptr, ptr %52, align 8, !tbaa !59
  %54 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 95, i32 0, i32 0, i32 0, i32 1
  %55 = load ptr, ptr %54, align 8, !tbaa !58
  %56 = icmp eq ptr %55, %53
  br i1 %56, label %58, label %57

57:                                               ; preds = %51
  store ptr %53, ptr %54, align 8, !tbaa !58
  br label %58

58:                                               ; preds = %51, %57
  %59 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %60 = load i32, ptr %59, align 8, !tbaa !91
  %61 = add nsw i32 %60, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #31
  store i32 9999999, ptr %2, align 4, !tbaa !67
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %68, label %63

63:                                               ; preds = %58
  %64 = sext i32 %61 to i64
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %31, ptr %32, i64 noundef %64, ptr noundef nonnull align 4 dereferenceable(4) %2)
  %65 = load i32, ptr %59, align 8, !tbaa !91
  %66 = load ptr, ptr %40, align 8, !tbaa !58
  %67 = load ptr, ptr %38, align 8, !tbaa !59
  br label %68

68:                                               ; preds = %58, %63
  %69 = phi ptr [ %67, %63 ], [ %39, %58 ]
  %70 = phi ptr [ %66, %63 ], [ %39, %58 ]
  %71 = phi i32 [ %65, %63 ], [ -1, %58 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #31
  %72 = add nsw i32 %71, 1
  %73 = sext i32 %72 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #31
  store i32 -9999999, ptr %3, align 4, !tbaa !67
  %74 = ptrtoint ptr %70 to i64
  %75 = ptrtoint ptr %69 to i64
  %76 = sub i64 %74, %75
  %77 = ashr exact i64 %76, 2
  %78 = icmp ult i64 %77, %73
  br i1 %78, label %79, label %84

79:                                               ; preds = %68
  %80 = sub nsw i64 %73, %77
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %38, ptr %70, i64 noundef %80, ptr noundef nonnull align 4 dereferenceable(4) %3)
  %81 = load i32, ptr %59, align 8, !tbaa !91
  %82 = add nsw i32 %81, 1
  %83 = sext i32 %82 to i64
  br label %90

84:                                               ; preds = %68
  %85 = icmp ugt i64 %77, %73
  br i1 %85, label %86, label %90

86:                                               ; preds = %84
  %87 = getelementptr inbounds i32, ptr %69, i64 %73
  %88 = icmp eq ptr %70, %87
  br i1 %88, label %90, label %89

89:                                               ; preds = %86
  store ptr %87, ptr %40, align 8, !tbaa !58
  br label %90

90:                                               ; preds = %79, %84, %86, %89
  %91 = phi i64 [ %83, %79 ], [ %73, %84 ], [ %73, %86 ], [ %73, %89 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #31
  store i32 9999999, ptr %4, align 4, !tbaa !67
  %92 = load ptr, ptr %47, align 8, !tbaa !58
  %93 = load ptr, ptr %45, align 8, !tbaa !59
  %94 = ptrtoint ptr %92 to i64
  %95 = ptrtoint ptr %93 to i64
  %96 = sub i64 %94, %95
  %97 = ashr exact i64 %96, 2
  %98 = icmp ugt i64 %91, %97
  br i1 %98, label %99, label %104

99:                                               ; preds = %90
  %100 = sub nsw i64 %91, %97
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %45, ptr %92, i64 noundef %100, ptr noundef nonnull align 4 dereferenceable(4) %4)
  %101 = load i32, ptr %59, align 8, !tbaa !91
  %102 = add nsw i32 %101, 1
  %103 = sext i32 %102 to i64
  br label %110

104:                                              ; preds = %90
  %105 = icmp ult i64 %91, %97
  br i1 %105, label %106, label %110

106:                                              ; preds = %104
  %107 = getelementptr inbounds i32, ptr %93, i64 %91
  %108 = icmp eq ptr %92, %107
  br i1 %108, label %110, label %109

109:                                              ; preds = %106
  store ptr %107, ptr %47, align 8, !tbaa !58
  br label %110

110:                                              ; preds = %99, %104, %106, %109
  %111 = phi i64 [ %103, %99 ], [ %91, %104 ], [ %91, %106 ], [ %91, %109 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #31
  store i32 -9999999, ptr %5, align 4, !tbaa !67
  %112 = load ptr, ptr %54, align 8, !tbaa !58
  %113 = load ptr, ptr %52, align 8, !tbaa !59
  %114 = ptrtoint ptr %112 to i64
  %115 = ptrtoint ptr %113 to i64
  %116 = sub i64 %114, %115
  %117 = ashr exact i64 %116, 2
  %118 = icmp ugt i64 %111, %117
  br i1 %118, label %119, label %121

119:                                              ; preds = %110
  %120 = sub nsw i64 %111, %117
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %52, ptr %112, i64 noundef %120, ptr noundef nonnull align 4 dereferenceable(4) %5)
  br label %127

121:                                              ; preds = %110
  %122 = icmp ult i64 %111, %117
  br i1 %122, label %123, label %127

123:                                              ; preds = %121
  %124 = getelementptr inbounds i32, ptr %113, i64 %111
  %125 = icmp eq ptr %112, %124
  br i1 %125, label %127, label %126

126:                                              ; preds = %123
  store ptr %124, ptr %54, align 8, !tbaa !58
  br label %127

127:                                              ; preds = %119, %121, %123, %126
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #31
  %128 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 96
  %129 = load ptr, ptr %128, align 8, !tbaa !59
  %130 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 96, i32 0, i32 0, i32 0, i32 1
  %131 = load ptr, ptr %130, align 8, !tbaa !58
  %132 = icmp eq ptr %131, %129
  br i1 %132, label %134, label %133

133:                                              ; preds = %127
  store ptr %129, ptr %130, align 8, !tbaa !58
  br label %134

134:                                              ; preds = %127, %133
  %135 = load i32, ptr %59, align 8, !tbaa !91
  %136 = add nsw i32 %135, 1
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = sext i32 %136 to i64
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %128, i64 noundef %139)
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 97
  %142 = load ptr, ptr %141, align 8, !tbaa !59
  %143 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 97, i32 0, i32 0, i32 0, i32 1
  %144 = load ptr, ptr %143, align 8, !tbaa !58
  %145 = icmp eq ptr %144, %142
  br i1 %145, label %147, label %146

146:                                              ; preds = %140
  store ptr %142, ptr %143, align 8, !tbaa !58
  br label %147

147:                                              ; preds = %140, %146
  %148 = load i32, ptr %59, align 8, !tbaa !91
  %149 = add nsw i32 %148, 1
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %147
  %152 = sext i32 %149 to i64
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %141, i64 noundef %152)
  br label %153

153:                                              ; preds = %147, %151
  %154 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %155 = load i64, ptr %154, align 8, !tbaa !43
  %156 = trunc i64 %155 to i32
  %157 = icmp sgt i32 %156, 0
  br i1 %157, label %158, label %167

158:                                              ; preds = %153
  %159 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %160 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %161 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85, i32 0, i32 0, i32 0, i32 2
  %162 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %163 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83, i32 0, i32 0, i32 0, i32 2
  %164 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %165 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84, i32 0, i32 0, i32 0, i32 2
  %166 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  br label %325

167:                                              ; preds = %659, %153
  %168 = phi i32 [ 0, %153 ], [ %660, %659 ]
  %169 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 81
  store i32 %168, ptr %169, align 8, !tbaa !193
  %170 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98
  %171 = load ptr, ptr %170, align 8, !tbaa !59
  %172 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98, i32 0, i32 0, i32 0, i32 1
  %173 = load ptr, ptr %172, align 8, !tbaa !58
  %174 = icmp eq ptr %173, %171
  br i1 %174, label %176, label %175

175:                                              ; preds = %167
  store ptr %171, ptr %172, align 8, !tbaa !58
  br label %176

176:                                              ; preds = %167, %175
  %177 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99
  %178 = load ptr, ptr %177, align 8, !tbaa !59
  %179 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99, i32 0, i32 0, i32 0, i32 1
  %180 = load ptr, ptr %179, align 8, !tbaa !58
  %181 = icmp eq ptr %180, %178
  br i1 %181, label %183, label %182

182:                                              ; preds = %176
  store ptr %178, ptr %179, align 8, !tbaa !58
  br label %183

183:                                              ; preds = %176, %182
  %184 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100
  %185 = load ptr, ptr %184, align 8, !tbaa !59
  %186 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100, i32 0, i32 0, i32 0, i32 1
  %187 = load ptr, ptr %186, align 8, !tbaa !58
  %188 = icmp eq ptr %187, %185
  br i1 %188, label %190, label %189

189:                                              ; preds = %183
  store ptr %185, ptr %186, align 8, !tbaa !58
  br label %190

190:                                              ; preds = %183, %189
  %191 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 107
  %192 = load ptr, ptr %191, align 8, !tbaa !59
  %193 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 107, i32 0, i32 0, i32 0, i32 1
  %194 = load ptr, ptr %193, align 8, !tbaa !58
  %195 = icmp eq ptr %194, %192
  br i1 %195, label %197, label %196

196:                                              ; preds = %190
  store ptr %192, ptr %193, align 8, !tbaa !58
  br label %197

197:                                              ; preds = %190, %196
  %198 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 108
  %199 = load ptr, ptr %198, align 8, !tbaa !59
  %200 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 108, i32 0, i32 0, i32 0, i32 1
  %201 = load ptr, ptr %200, align 8, !tbaa !58
  %202 = icmp eq ptr %201, %199
  br i1 %202, label %204, label %203

203:                                              ; preds = %197
  store ptr %199, ptr %200, align 8, !tbaa !58
  br label %204

204:                                              ; preds = %197, %203
  %205 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 109
  %206 = load ptr, ptr %205, align 8, !tbaa !59
  %207 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 109, i32 0, i32 0, i32 0, i32 1
  %208 = load ptr, ptr %207, align 8, !tbaa !58
  %209 = icmp eq ptr %208, %206
  br i1 %209, label %211, label %210

210:                                              ; preds = %204
  store ptr %206, ptr %207, align 8, !tbaa !58
  br label %211

211:                                              ; preds = %204, %210
  %212 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 110
  %213 = load ptr, ptr %212, align 8, !tbaa !59
  %214 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 110, i32 0, i32 0, i32 0, i32 1
  %215 = load ptr, ptr %214, align 8, !tbaa !58
  %216 = icmp eq ptr %215, %213
  br i1 %216, label %218, label %217

217:                                              ; preds = %211
  store ptr %213, ptr %214, align 8, !tbaa !58
  br label %218

218:                                              ; preds = %211, %217
  %219 = load i32, ptr %59, align 8, !tbaa !91
  %220 = add nsw i32 %219, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #31
  store i32 9999999, ptr %6, align 4, !tbaa !67
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %227, label %222

222:                                              ; preds = %218
  %223 = sext i32 %220 to i64
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %191, ptr %192, i64 noundef %223, ptr noundef nonnull align 4 dereferenceable(4) %6)
  %224 = load i32, ptr %59, align 8, !tbaa !91
  %225 = load ptr, ptr %200, align 8, !tbaa !58
  %226 = load ptr, ptr %198, align 8, !tbaa !59
  br label %227

227:                                              ; preds = %218, %222
  %228 = phi ptr [ %226, %222 ], [ %199, %218 ]
  %229 = phi ptr [ %225, %222 ], [ %199, %218 ]
  %230 = phi i32 [ %224, %222 ], [ -1, %218 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #31
  %231 = add nsw i32 %230, 1
  %232 = sext i32 %231 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #31
  store i32 -9999999, ptr %7, align 4, !tbaa !67
  %233 = ptrtoint ptr %229 to i64
  %234 = ptrtoint ptr %228 to i64
  %235 = sub i64 %233, %234
  %236 = ashr exact i64 %235, 2
  %237 = icmp ult i64 %236, %232
  br i1 %237, label %238, label %243

238:                                              ; preds = %227
  %239 = sub nsw i64 %232, %236
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %198, ptr %229, i64 noundef %239, ptr noundef nonnull align 4 dereferenceable(4) %7)
  %240 = load i32, ptr %59, align 8, !tbaa !91
  %241 = add nsw i32 %240, 1
  %242 = sext i32 %241 to i64
  br label %249

243:                                              ; preds = %227
  %244 = icmp ugt i64 %236, %232
  br i1 %244, label %245, label %249

245:                                              ; preds = %243
  %246 = getelementptr inbounds i32, ptr %228, i64 %232
  %247 = icmp eq ptr %229, %246
  br i1 %247, label %249, label %248

248:                                              ; preds = %245
  store ptr %246, ptr %200, align 8, !tbaa !58
  br label %249

249:                                              ; preds = %238, %243, %245, %248
  %250 = phi i64 [ %242, %238 ], [ %232, %243 ], [ %232, %245 ], [ %232, %248 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #31
  store i32 9999999, ptr %8, align 4, !tbaa !67
  %251 = load ptr, ptr %207, align 8, !tbaa !58
  %252 = load ptr, ptr %205, align 8, !tbaa !59
  %253 = ptrtoint ptr %251 to i64
  %254 = ptrtoint ptr %252 to i64
  %255 = sub i64 %253, %254
  %256 = ashr exact i64 %255, 2
  %257 = icmp ugt i64 %250, %256
  br i1 %257, label %258, label %263

258:                                              ; preds = %249
  %259 = sub nsw i64 %250, %256
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %205, ptr %251, i64 noundef %259, ptr noundef nonnull align 4 dereferenceable(4) %8)
  %260 = load i32, ptr %59, align 8, !tbaa !91
  %261 = add nsw i32 %260, 1
  %262 = sext i32 %261 to i64
  br label %269

263:                                              ; preds = %249
  %264 = icmp ult i64 %250, %256
  br i1 %264, label %265, label %269

265:                                              ; preds = %263
  %266 = getelementptr inbounds i32, ptr %252, i64 %250
  %267 = icmp eq ptr %251, %266
  br i1 %267, label %269, label %268

268:                                              ; preds = %265
  store ptr %266, ptr %207, align 8, !tbaa !58
  br label %269

269:                                              ; preds = %258, %263, %265, %268
  %270 = phi i64 [ %262, %258 ], [ %250, %263 ], [ %250, %265 ], [ %250, %268 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #31
  store i32 -9999999, ptr %9, align 4, !tbaa !67
  %271 = load ptr, ptr %214, align 8, !tbaa !58
  %272 = load ptr, ptr %212, align 8, !tbaa !59
  %273 = ptrtoint ptr %271 to i64
  %274 = ptrtoint ptr %272 to i64
  %275 = sub i64 %273, %274
  %276 = ashr exact i64 %275, 2
  %277 = icmp ugt i64 %270, %276
  br i1 %277, label %278, label %280

278:                                              ; preds = %269
  %279 = sub nsw i64 %270, %276
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %212, ptr %271, i64 noundef %279, ptr noundef nonnull align 4 dereferenceable(4) %9)
  br label %286

280:                                              ; preds = %269
  %281 = icmp ult i64 %270, %276
  br i1 %281, label %282, label %286

282:                                              ; preds = %280
  %283 = getelementptr inbounds i32, ptr %272, i64 %270
  %284 = icmp eq ptr %271, %283
  br i1 %284, label %286, label %285

285:                                              ; preds = %282
  store ptr %283, ptr %214, align 8, !tbaa !58
  br label %286

286:                                              ; preds = %278, %280, %282, %285
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #31
  %287 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 111
  %288 = load ptr, ptr %287, align 8, !tbaa !59
  %289 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 111, i32 0, i32 0, i32 0, i32 1
  %290 = load ptr, ptr %289, align 8, !tbaa !58
  %291 = icmp eq ptr %290, %288
  br i1 %291, label %293, label %292

292:                                              ; preds = %286
  store ptr %288, ptr %289, align 8, !tbaa !58
  br label %293

293:                                              ; preds = %286, %292
  %294 = load i32, ptr %59, align 8, !tbaa !91
  %295 = add nsw i32 %294, 1
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %299, label %297

297:                                              ; preds = %293
  %298 = sext i32 %295 to i64
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %287, i64 noundef %298)
  br label %299

299:                                              ; preds = %293, %297
  %300 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 112
  %301 = load ptr, ptr %300, align 8, !tbaa !59
  %302 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 112, i32 0, i32 0, i32 0, i32 1
  %303 = load ptr, ptr %302, align 8, !tbaa !58
  %304 = icmp eq ptr %303, %301
  br i1 %304, label %306, label %305

305:                                              ; preds = %299
  store ptr %301, ptr %302, align 8, !tbaa !58
  br label %306

306:                                              ; preds = %299, %305
  %307 = load i32, ptr %59, align 8, !tbaa !91
  %308 = add nsw i32 %307, 1
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %312, label %310

310:                                              ; preds = %306
  %311 = sext i32 %308 to i64
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %300, i64 noundef %311)
  br label %312

312:                                              ; preds = %306, %310
  %313 = load i64, ptr %154, align 8, !tbaa !43
  %314 = trunc i64 %313 to i32
  %315 = icmp sgt i32 %314, 0
  br i1 %315, label %316, label %666

316:                                              ; preds = %312
  %317 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %318 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %319 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100, i32 0, i32 0, i32 0, i32 2
  %320 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %321 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99, i32 0, i32 0, i32 0, i32 2
  %322 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %323 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98, i32 0, i32 0, i32 0, i32 2
  %324 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  br label %679

325:                                              ; preds = %158, %659
  %326 = phi i64 [ 0, %158 ], [ %661, %659 ]
  %327 = phi i32 [ 0, %158 ], [ %660, %659 ]
  %328 = load ptr, ptr %159, align 8, !tbaa !74
  %329 = getelementptr inbounds i32, ptr %328, i64 %326
  %330 = load i32, ptr %329, align 4, !tbaa !67
  %331 = zext i32 %330 to i64
  %332 = icmp eq i64 %326, %331
  br i1 %332, label %659, label %333

333:                                              ; preds = %325
  %334 = load ptr, ptr %160, align 8, !tbaa !62
  %335 = sext i32 %330 to i64
  %336 = getelementptr inbounds i32, ptr %334, i64 %335
  %337 = load i32, ptr %336, align 4, !tbaa !67
  %338 = getelementptr inbounds i32, ptr %334, i64 %326
  %339 = load i32, ptr %338, align 4, !tbaa !67
  %340 = icmp slt i32 %337, %339
  %341 = select i1 %340, i32 2, i32 1
  %342 = call i32 @llvm.smax.i32(i32 %337, i32 %339)
  %343 = load ptr, ptr %26, align 8, !tbaa !58
  %344 = load ptr, ptr %161, align 8, !tbaa !110
  %345 = icmp eq ptr %343, %344
  br i1 %345, label %348, label %346

346:                                              ; preds = %333
  store i32 %342, ptr %343, align 4, !tbaa !67
  %347 = getelementptr inbounds i32, ptr %343, i64 1
  store ptr %347, ptr %26, align 8, !tbaa !58
  br label %382

348:                                              ; preds = %333
  %349 = load ptr, ptr %24, align 8, !tbaa !59
  %350 = ptrtoint ptr %343 to i64
  %351 = ptrtoint ptr %349 to i64
  %352 = sub i64 %350, %351
  %353 = icmp eq i64 %352, 9223372036854775804
  br i1 %353, label %354, label %355

354:                                              ; preds = %348
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

355:                                              ; preds = %348
  %356 = ashr exact i64 %352, 2
  %357 = call i64 @llvm.umax.i64(i64 %356, i64 1)
  %358 = add i64 %357, %356
  %359 = icmp ult i64 %358, %356
  %360 = icmp ugt i64 %358, 2305843009213693951
  %361 = or i1 %359, %360
  %362 = select i1 %361, i64 2305843009213693951, i64 %358
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %370, label %364

364:                                              ; preds = %355
  %365 = shl nuw nsw i64 %362, 2
  %366 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %365) #35
  %367 = load i32, ptr %338, align 4
  %368 = load i32, ptr %336, align 4
  %369 = select i1 %340, i32 %367, i32 %368
  br label %370

370:                                              ; preds = %364, %355
  %371 = phi i32 [ %369, %364 ], [ %342, %355 ]
  %372 = phi ptr [ %366, %364 ], [ null, %355 ]
  %373 = getelementptr inbounds i32, ptr %372, i64 %356
  store i32 %371, ptr %373, align 4, !tbaa !67
  %374 = icmp sgt i64 %352, 0
  br i1 %374, label %375, label %376

375:                                              ; preds = %370
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %372, ptr align 4 %349, i64 %352, i1 false)
  br label %376

376:                                              ; preds = %375, %370
  %377 = getelementptr inbounds i32, ptr %373, i64 1
  %378 = icmp eq ptr %349, null
  br i1 %378, label %380, label %379

379:                                              ; preds = %376
  call void @_ZdlPv(ptr noundef nonnull %349) #33
  br label %380

380:                                              ; preds = %379, %376
  store ptr %372, ptr %24, align 8, !tbaa !59
  store ptr %377, ptr %26, align 8, !tbaa !58
  %381 = getelementptr inbounds i32, ptr %372, i64 %362
  store ptr %381, ptr %161, align 8, !tbaa !110
  br label %382

382:                                              ; preds = %346, %380
  %383 = load ptr, ptr %162, align 8, !tbaa !60
  %384 = getelementptr inbounds i32, ptr %383, i64 %335
  %385 = load i32, ptr %384, align 4, !tbaa !67
  %386 = mul nsw i32 %385, %341
  %387 = load ptr, ptr %12, align 8, !tbaa !58
  %388 = load ptr, ptr %163, align 8, !tbaa !110
  %389 = icmp eq ptr %387, %388
  br i1 %389, label %392, label %390

390:                                              ; preds = %382
  store i32 %386, ptr %387, align 4, !tbaa !67
  %391 = getelementptr inbounds i32, ptr %387, i64 1
  store ptr %391, ptr %12, align 8, !tbaa !58
  br label %422

392:                                              ; preds = %382
  %393 = load ptr, ptr %10, align 8, !tbaa !59
  %394 = ptrtoint ptr %387 to i64
  %395 = ptrtoint ptr %393 to i64
  %396 = sub i64 %394, %395
  %397 = icmp eq i64 %396, 9223372036854775804
  br i1 %397, label %398, label %399

398:                                              ; preds = %392
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

399:                                              ; preds = %392
  %400 = ashr exact i64 %396, 2
  %401 = call i64 @llvm.umax.i64(i64 %400, i64 1)
  %402 = add i64 %401, %400
  %403 = icmp ult i64 %402, %400
  %404 = icmp ugt i64 %402, 2305843009213693951
  %405 = or i1 %403, %404
  %406 = select i1 %405, i64 2305843009213693951, i64 %402
  %407 = icmp eq i64 %406, 0
  br i1 %407, label %411, label %408

408:                                              ; preds = %399
  %409 = shl nuw nsw i64 %406, 2
  %410 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %409) #35
  br label %411

411:                                              ; preds = %408, %399
  %412 = phi ptr [ %410, %408 ], [ null, %399 ]
  %413 = getelementptr inbounds i32, ptr %412, i64 %400
  store i32 %386, ptr %413, align 4, !tbaa !67
  %414 = icmp sgt i64 %396, 0
  br i1 %414, label %415, label %416

415:                                              ; preds = %411
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %412, ptr align 4 %393, i64 %396, i1 false)
  br label %416

416:                                              ; preds = %415, %411
  %417 = getelementptr inbounds i32, ptr %413, i64 1
  %418 = icmp eq ptr %393, null
  br i1 %418, label %420, label %419

419:                                              ; preds = %416
  call void @_ZdlPv(ptr noundef nonnull %393) #33
  br label %420

420:                                              ; preds = %419, %416
  store ptr %412, ptr %10, align 8, !tbaa !59
  store ptr %417, ptr %12, align 8, !tbaa !58
  %421 = getelementptr inbounds i32, ptr %412, i64 %406
  store ptr %421, ptr %163, align 8, !tbaa !110
  br label %422

422:                                              ; preds = %390, %420
  %423 = load ptr, ptr %160, align 8, !tbaa !62
  %424 = getelementptr inbounds i32, ptr %423, i64 %335
  %425 = load i32, ptr %424, align 4, !tbaa !67
  %426 = getelementptr inbounds i32, ptr %423, i64 %326
  %427 = load i32, ptr %426, align 4, !tbaa !67
  %428 = icmp slt i32 %425, %427
  %429 = load ptr, ptr %164, align 8, !tbaa !61
  br i1 %428, label %430, label %475

430:                                              ; preds = %422
  %431 = getelementptr inbounds i32, ptr %429, i64 %326
  %432 = load i32, ptr %431, align 4, !tbaa !67
  %433 = and i32 %432, -2147483647
  %434 = icmp eq i32 %433, 1
  br i1 %434, label %435, label %475

435:                                              ; preds = %430
  %436 = getelementptr inbounds i32, ptr %429, i64 %335
  %437 = load i32, ptr %436, align 4, !tbaa !67
  %438 = mul nsw i32 %437, %341
  %439 = add nsw i32 %438, 1
  %440 = load ptr, ptr %19, align 8, !tbaa !58
  %441 = load ptr, ptr %165, align 8, !tbaa !110
  %442 = icmp eq ptr %440, %441
  br i1 %442, label %445, label %443

443:                                              ; preds = %435
  store i32 %439, ptr %440, align 4, !tbaa !67
  %444 = getelementptr inbounds i32, ptr %440, i64 1
  store ptr %444, ptr %19, align 8, !tbaa !58
  br label %514

445:                                              ; preds = %435
  %446 = load ptr, ptr %17, align 8, !tbaa !59
  %447 = ptrtoint ptr %440 to i64
  %448 = ptrtoint ptr %446 to i64
  %449 = sub i64 %447, %448
  %450 = icmp eq i64 %449, 9223372036854775804
  br i1 %450, label %451, label %452

451:                                              ; preds = %445
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

452:                                              ; preds = %445
  %453 = ashr exact i64 %449, 2
  %454 = call i64 @llvm.umax.i64(i64 %453, i64 1)
  %455 = add i64 %454, %453
  %456 = icmp ult i64 %455, %453
  %457 = icmp ugt i64 %455, 2305843009213693951
  %458 = or i1 %456, %457
  %459 = select i1 %458, i64 2305843009213693951, i64 %455
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %464, label %461

461:                                              ; preds = %452
  %462 = shl nuw nsw i64 %459, 2
  %463 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %462) #35
  br label %464

464:                                              ; preds = %461, %452
  %465 = phi ptr [ %463, %461 ], [ null, %452 ]
  %466 = getelementptr inbounds i32, ptr %465, i64 %453
  store i32 %439, ptr %466, align 4, !tbaa !67
  %467 = icmp sgt i64 %449, 0
  br i1 %467, label %468, label %469

468:                                              ; preds = %464
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %465, ptr align 4 %446, i64 %449, i1 false)
  br label %469

469:                                              ; preds = %468, %464
  %470 = getelementptr inbounds i32, ptr %466, i64 1
  %471 = icmp eq ptr %446, null
  br i1 %471, label %473, label %472

472:                                              ; preds = %469
  call void @_ZdlPv(ptr noundef nonnull %446) #33
  br label %473

473:                                              ; preds = %472, %469
  store ptr %465, ptr %17, align 8, !tbaa !59
  store ptr %470, ptr %19, align 8, !tbaa !58
  %474 = getelementptr inbounds i32, ptr %465, i64 %459
  store ptr %474, ptr %165, align 8, !tbaa !110
  br label %514

475:                                              ; preds = %422, %430
  %476 = getelementptr inbounds i32, ptr %429, i64 %335
  %477 = load i32, ptr %476, align 4, !tbaa !67
  %478 = mul nsw i32 %477, %341
  %479 = load ptr, ptr %19, align 8, !tbaa !58
  %480 = load ptr, ptr %165, align 8, !tbaa !110
  %481 = icmp eq ptr %479, %480
  br i1 %481, label %484, label %482

482:                                              ; preds = %475
  store i32 %478, ptr %479, align 4, !tbaa !67
  %483 = getelementptr inbounds i32, ptr %479, i64 1
  store ptr %483, ptr %19, align 8, !tbaa !58
  br label %514

484:                                              ; preds = %475
  %485 = load ptr, ptr %17, align 8, !tbaa !59
  %486 = ptrtoint ptr %479 to i64
  %487 = ptrtoint ptr %485 to i64
  %488 = sub i64 %486, %487
  %489 = icmp eq i64 %488, 9223372036854775804
  br i1 %489, label %490, label %491

490:                                              ; preds = %484
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

491:                                              ; preds = %484
  %492 = ashr exact i64 %488, 2
  %493 = call i64 @llvm.umax.i64(i64 %492, i64 1)
  %494 = add i64 %493, %492
  %495 = icmp ult i64 %494, %492
  %496 = icmp ugt i64 %494, 2305843009213693951
  %497 = or i1 %495, %496
  %498 = select i1 %497, i64 2305843009213693951, i64 %494
  %499 = icmp eq i64 %498, 0
  br i1 %499, label %503, label %500

500:                                              ; preds = %491
  %501 = shl nuw nsw i64 %498, 2
  %502 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %501) #35
  br label %503

503:                                              ; preds = %500, %491
  %504 = phi ptr [ %502, %500 ], [ null, %491 ]
  %505 = getelementptr inbounds i32, ptr %504, i64 %492
  store i32 %478, ptr %505, align 4, !tbaa !67
  %506 = icmp sgt i64 %488, 0
  br i1 %506, label %507, label %508

507:                                              ; preds = %503
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %504, ptr align 4 %485, i64 %488, i1 false)
  br label %508

508:                                              ; preds = %507, %503
  %509 = getelementptr inbounds i32, ptr %505, i64 1
  %510 = icmp eq ptr %485, null
  br i1 %510, label %512, label %511

511:                                              ; preds = %508
  call void @_ZdlPv(ptr noundef nonnull %485) #33
  br label %512

512:                                              ; preds = %511, %508
  store ptr %504, ptr %17, align 8, !tbaa !59
  store ptr %509, ptr %19, align 8, !tbaa !58
  %513 = getelementptr inbounds i32, ptr %504, i64 %498
  store ptr %513, ptr %165, align 8, !tbaa !110
  br label %514

514:                                              ; preds = %512, %482, %473, %443
  %515 = add nsw i32 %327, 1
  %516 = load ptr, ptr %160, align 8, !tbaa !62
  %517 = getelementptr inbounds i32, ptr %516, i64 %335
  %518 = load i32, ptr %517, align 4, !tbaa !67
  %519 = getelementptr inbounds i32, ptr %516, i64 %326
  %520 = load i32, ptr %519, align 4, !tbaa !67
  %521 = icmp sgt i32 %518, %520
  br i1 %521, label %522, label %659

522:                                              ; preds = %514
  %523 = load ptr, ptr %164, align 8, !tbaa !61
  %524 = getelementptr inbounds i32, ptr %523, i64 %335
  %525 = load i32, ptr %524, align 4, !tbaa !67
  %526 = and i32 %525, 1
  %527 = icmp eq i32 %526, 0
  br i1 %527, label %528, label %659

528:                                              ; preds = %522
  %529 = load ptr, ptr %166, align 8, !tbaa !76
  %530 = getelementptr inbounds i32, ptr %529, i64 %335
  %531 = load i32, ptr %530, align 4, !tbaa !67
  %532 = icmp eq i32 %531, %330
  br i1 %532, label %659, label %533

533:                                              ; preds = %528
  %534 = sext i32 %531 to i64
  %535 = getelementptr inbounds i32, ptr %516, i64 %534
  %536 = load i32, ptr %535, align 4, !tbaa !67
  %537 = icmp sgt i32 %520, %536
  %538 = call i32 @llvm.smax.i32(i32 %520, i32 %536)
  %539 = select i1 %537, ptr %519, ptr %535
  %540 = load ptr, ptr %26, align 8, !tbaa !58
  %541 = load ptr, ptr %161, align 8, !tbaa !110
  %542 = icmp eq ptr %540, %541
  br i1 %542, label %545, label %543

543:                                              ; preds = %533
  store i32 %538, ptr %540, align 4, !tbaa !67
  %544 = getelementptr inbounds i32, ptr %540, i64 1
  store ptr %544, ptr %26, align 8, !tbaa !58
  br label %577

545:                                              ; preds = %533
  %546 = load ptr, ptr %24, align 8, !tbaa !59
  %547 = ptrtoint ptr %540 to i64
  %548 = ptrtoint ptr %546 to i64
  %549 = sub i64 %547, %548
  %550 = icmp eq i64 %549, 9223372036854775804
  br i1 %550, label %551, label %552

551:                                              ; preds = %545
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

552:                                              ; preds = %545
  %553 = ashr exact i64 %549, 2
  %554 = call i64 @llvm.umax.i64(i64 %553, i64 1)
  %555 = add i64 %554, %553
  %556 = icmp ult i64 %555, %553
  %557 = icmp ugt i64 %555, 2305843009213693951
  %558 = or i1 %556, %557
  %559 = select i1 %558, i64 2305843009213693951, i64 %555
  %560 = icmp eq i64 %559, 0
  br i1 %560, label %565, label %561

561:                                              ; preds = %552
  %562 = shl nuw nsw i64 %559, 2
  %563 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %562) #35
  %564 = load i32, ptr %539, align 4, !tbaa !67
  br label %565

565:                                              ; preds = %561, %552
  %566 = phi i32 [ %564, %561 ], [ %538, %552 ]
  %567 = phi ptr [ %563, %561 ], [ null, %552 ]
  %568 = getelementptr inbounds i32, ptr %567, i64 %553
  store i32 %566, ptr %568, align 4, !tbaa !67
  %569 = icmp sgt i64 %549, 0
  br i1 %569, label %570, label %571

570:                                              ; preds = %565
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %567, ptr align 4 %546, i64 %549, i1 false)
  br label %571

571:                                              ; preds = %570, %565
  %572 = getelementptr inbounds i32, ptr %568, i64 1
  %573 = icmp eq ptr %546, null
  br i1 %573, label %575, label %574

574:                                              ; preds = %571
  call void @_ZdlPv(ptr noundef nonnull %546) #33
  br label %575

575:                                              ; preds = %574, %571
  store ptr %567, ptr %24, align 8, !tbaa !59
  store ptr %572, ptr %26, align 8, !tbaa !58
  %576 = getelementptr inbounds i32, ptr %567, i64 %559
  store ptr %576, ptr %161, align 8, !tbaa !110
  br label %577

577:                                              ; preds = %543, %575
  %578 = load ptr, ptr %162, align 8, !tbaa !60
  %579 = getelementptr inbounds i32, ptr %578, i64 %534
  %580 = load i32, ptr %579, align 4, !tbaa !67
  %581 = mul nsw i32 %580, %341
  %582 = load ptr, ptr %12, align 8, !tbaa !58
  %583 = load ptr, ptr %163, align 8, !tbaa !110
  %584 = icmp eq ptr %582, %583
  br i1 %584, label %587, label %585

585:                                              ; preds = %577
  store i32 %581, ptr %582, align 4, !tbaa !67
  %586 = getelementptr inbounds i32, ptr %582, i64 1
  store ptr %586, ptr %12, align 8, !tbaa !58
  br label %617

587:                                              ; preds = %577
  %588 = load ptr, ptr %10, align 8, !tbaa !59
  %589 = ptrtoint ptr %582 to i64
  %590 = ptrtoint ptr %588 to i64
  %591 = sub i64 %589, %590
  %592 = icmp eq i64 %591, 9223372036854775804
  br i1 %592, label %593, label %594

593:                                              ; preds = %587
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

594:                                              ; preds = %587
  %595 = ashr exact i64 %591, 2
  %596 = call i64 @llvm.umax.i64(i64 %595, i64 1)
  %597 = add i64 %596, %595
  %598 = icmp ult i64 %597, %595
  %599 = icmp ugt i64 %597, 2305843009213693951
  %600 = or i1 %598, %599
  %601 = select i1 %600, i64 2305843009213693951, i64 %597
  %602 = icmp eq i64 %601, 0
  br i1 %602, label %606, label %603

603:                                              ; preds = %594
  %604 = shl nuw nsw i64 %601, 2
  %605 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %604) #35
  br label %606

606:                                              ; preds = %603, %594
  %607 = phi ptr [ %605, %603 ], [ null, %594 ]
  %608 = getelementptr inbounds i32, ptr %607, i64 %595
  store i32 %581, ptr %608, align 4, !tbaa !67
  %609 = icmp sgt i64 %591, 0
  br i1 %609, label %610, label %611

610:                                              ; preds = %606
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %607, ptr align 4 %588, i64 %591, i1 false)
  br label %611

611:                                              ; preds = %610, %606
  %612 = getelementptr inbounds i32, ptr %608, i64 1
  %613 = icmp eq ptr %588, null
  br i1 %613, label %615, label %614

614:                                              ; preds = %611
  call void @_ZdlPv(ptr noundef nonnull %588) #33
  br label %615

615:                                              ; preds = %614, %611
  store ptr %607, ptr %10, align 8, !tbaa !59
  store ptr %612, ptr %12, align 8, !tbaa !58
  %616 = getelementptr inbounds i32, ptr %607, i64 %601
  store ptr %616, ptr %163, align 8, !tbaa !110
  br label %617

617:                                              ; preds = %585, %615
  %618 = load ptr, ptr %164, align 8, !tbaa !61
  %619 = getelementptr inbounds i32, ptr %618, i64 %534
  %620 = load i32, ptr %619, align 4, !tbaa !67
  %621 = mul nsw i32 %620, %341
  %622 = load ptr, ptr %19, align 8, !tbaa !58
  %623 = load ptr, ptr %165, align 8, !tbaa !110
  %624 = icmp eq ptr %622, %623
  br i1 %624, label %627, label %625

625:                                              ; preds = %617
  store i32 %621, ptr %622, align 4, !tbaa !67
  %626 = getelementptr inbounds i32, ptr %622, i64 1
  store ptr %626, ptr %19, align 8, !tbaa !58
  br label %657

627:                                              ; preds = %617
  %628 = load ptr, ptr %17, align 8, !tbaa !59
  %629 = ptrtoint ptr %622 to i64
  %630 = ptrtoint ptr %628 to i64
  %631 = sub i64 %629, %630
  %632 = icmp eq i64 %631, 9223372036854775804
  br i1 %632, label %633, label %634

633:                                              ; preds = %627
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

634:                                              ; preds = %627
  %635 = ashr exact i64 %631, 2
  %636 = call i64 @llvm.umax.i64(i64 %635, i64 1)
  %637 = add i64 %636, %635
  %638 = icmp ult i64 %637, %635
  %639 = icmp ugt i64 %637, 2305843009213693951
  %640 = or i1 %638, %639
  %641 = select i1 %640, i64 2305843009213693951, i64 %637
  %642 = icmp eq i64 %641, 0
  br i1 %642, label %646, label %643

643:                                              ; preds = %634
  %644 = shl nuw nsw i64 %641, 2
  %645 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %644) #35
  br label %646

646:                                              ; preds = %643, %634
  %647 = phi ptr [ %645, %643 ], [ null, %634 ]
  %648 = getelementptr inbounds i32, ptr %647, i64 %635
  store i32 %621, ptr %648, align 4, !tbaa !67
  %649 = icmp sgt i64 %631, 0
  br i1 %649, label %650, label %651

650:                                              ; preds = %646
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %647, ptr align 4 %628, i64 %631, i1 false)
  br label %651

651:                                              ; preds = %650, %646
  %652 = getelementptr inbounds i32, ptr %648, i64 1
  %653 = icmp eq ptr %628, null
  br i1 %653, label %655, label %654

654:                                              ; preds = %651
  call void @_ZdlPv(ptr noundef nonnull %628) #33
  br label %655

655:                                              ; preds = %654, %651
  store ptr %647, ptr %17, align 8, !tbaa !59
  store ptr %652, ptr %19, align 8, !tbaa !58
  %656 = getelementptr inbounds i32, ptr %647, i64 %641
  store ptr %656, ptr %165, align 8, !tbaa !110
  br label %657

657:                                              ; preds = %625, %655
  %658 = add nsw i32 %327, 2
  br label %659

659:                                              ; preds = %514, %522, %657, %528, %325
  %660 = phi i32 [ %327, %325 ], [ %515, %522 ], [ %515, %514 ], [ %658, %657 ], [ %515, %528 ]
  %661 = add nuw nsw i64 %326, 1
  %662 = load i64, ptr %154, align 8, !tbaa !43
  %663 = shl i64 %662, 32
  %664 = ashr exact i64 %663, 32
  %665 = icmp slt i64 %661, %664
  br i1 %665, label %325, label %167, !llvm.loop !194

666:                                              ; preds = %1013, %312
  %667 = phi i32 [ 0, %312 ], [ %1014, %1013 ]
  %668 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 82
  store i32 %667, ptr %668, align 4, !tbaa !195
  %669 = load i32, ptr %169, align 8, !tbaa !193
  %670 = icmp sgt i32 %669, 0
  br i1 %670, label %671, label %1062

671:                                              ; preds = %666
  %672 = load ptr, ptr %24, align 8, !tbaa !59
  %673 = load ptr, ptr %10, align 8, !tbaa !59
  %674 = load ptr, ptr %31, align 8, !tbaa !59
  %675 = load ptr, ptr %38, align 8, !tbaa !59
  %676 = load ptr, ptr %17, align 8, !tbaa !59
  %677 = load ptr, ptr %45, align 8, !tbaa !59
  %678 = load ptr, ptr %52, align 8, !tbaa !59
  br label %1029

679:                                              ; preds = %316, %1013
  %680 = phi i64 [ 0, %316 ], [ %1015, %1013 ]
  %681 = phi i32 [ 0, %316 ], [ %1014, %1013 ]
  %682 = load ptr, ptr %317, align 8, !tbaa !76
  %683 = getelementptr inbounds i32, ptr %682, i64 %680
  %684 = load i32, ptr %683, align 4, !tbaa !67
  %685 = zext i32 %684 to i64
  %686 = icmp eq i64 %680, %685
  br i1 %686, label %1013, label %687

687:                                              ; preds = %679
  %688 = load ptr, ptr %318, align 8, !tbaa !62
  %689 = sext i32 %684 to i64
  %690 = getelementptr inbounds i32, ptr %688, i64 %689
  %691 = load i32, ptr %690, align 4, !tbaa !67
  %692 = getelementptr inbounds i32, ptr %688, i64 %680
  %693 = load i32, ptr %692, align 4, !tbaa !67
  %694 = icmp slt i32 %691, %693
  %695 = select i1 %694, i32 2, i32 1
  %696 = call i32 @llvm.smax.i32(i32 %691, i32 %693)
  %697 = load ptr, ptr %186, align 8, !tbaa !58
  %698 = load ptr, ptr %319, align 8, !tbaa !110
  %699 = icmp eq ptr %697, %698
  br i1 %699, label %702, label %700

700:                                              ; preds = %687
  store i32 %696, ptr %697, align 4, !tbaa !67
  %701 = getelementptr inbounds i32, ptr %697, i64 1
  store ptr %701, ptr %186, align 8, !tbaa !58
  br label %736

702:                                              ; preds = %687
  %703 = load ptr, ptr %184, align 8, !tbaa !59
  %704 = ptrtoint ptr %697 to i64
  %705 = ptrtoint ptr %703 to i64
  %706 = sub i64 %704, %705
  %707 = icmp eq i64 %706, 9223372036854775804
  br i1 %707, label %708, label %709

708:                                              ; preds = %702
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

709:                                              ; preds = %702
  %710 = ashr exact i64 %706, 2
  %711 = call i64 @llvm.umax.i64(i64 %710, i64 1)
  %712 = add i64 %711, %710
  %713 = icmp ult i64 %712, %710
  %714 = icmp ugt i64 %712, 2305843009213693951
  %715 = or i1 %713, %714
  %716 = select i1 %715, i64 2305843009213693951, i64 %712
  %717 = icmp eq i64 %716, 0
  br i1 %717, label %724, label %718

718:                                              ; preds = %709
  %719 = shl nuw nsw i64 %716, 2
  %720 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %719) #35
  %721 = load i32, ptr %692, align 4
  %722 = load i32, ptr %690, align 4
  %723 = select i1 %694, i32 %721, i32 %722
  br label %724

724:                                              ; preds = %718, %709
  %725 = phi i32 [ %723, %718 ], [ %696, %709 ]
  %726 = phi ptr [ %720, %718 ], [ null, %709 ]
  %727 = getelementptr inbounds i32, ptr %726, i64 %710
  store i32 %725, ptr %727, align 4, !tbaa !67
  %728 = icmp sgt i64 %706, 0
  br i1 %728, label %729, label %730

729:                                              ; preds = %724
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %726, ptr align 4 %703, i64 %706, i1 false)
  br label %730

730:                                              ; preds = %729, %724
  %731 = getelementptr inbounds i32, ptr %727, i64 1
  %732 = icmp eq ptr %703, null
  br i1 %732, label %734, label %733

733:                                              ; preds = %730
  call void @_ZdlPv(ptr noundef nonnull %703) #33
  br label %734

734:                                              ; preds = %733, %730
  store ptr %726, ptr %184, align 8, !tbaa !59
  store ptr %731, ptr %186, align 8, !tbaa !58
  %735 = getelementptr inbounds i32, ptr %726, i64 %716
  store ptr %735, ptr %319, align 8, !tbaa !110
  br label %736

736:                                              ; preds = %700, %734
  %737 = load ptr, ptr %320, align 8, !tbaa !61
  %738 = getelementptr inbounds i32, ptr %737, i64 %689
  %739 = load i32, ptr %738, align 4, !tbaa !67
  %740 = mul nsw i32 %739, %695
  %741 = load ptr, ptr %179, align 8, !tbaa !58
  %742 = load ptr, ptr %321, align 8, !tbaa !110
  %743 = icmp eq ptr %741, %742
  br i1 %743, label %746, label %744

744:                                              ; preds = %736
  store i32 %740, ptr %741, align 4, !tbaa !67
  %745 = getelementptr inbounds i32, ptr %741, i64 1
  store ptr %745, ptr %179, align 8, !tbaa !58
  br label %776

746:                                              ; preds = %736
  %747 = load ptr, ptr %177, align 8, !tbaa !59
  %748 = ptrtoint ptr %741 to i64
  %749 = ptrtoint ptr %747 to i64
  %750 = sub i64 %748, %749
  %751 = icmp eq i64 %750, 9223372036854775804
  br i1 %751, label %752, label %753

752:                                              ; preds = %746
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

753:                                              ; preds = %746
  %754 = ashr exact i64 %750, 2
  %755 = call i64 @llvm.umax.i64(i64 %754, i64 1)
  %756 = add i64 %755, %754
  %757 = icmp ult i64 %756, %754
  %758 = icmp ugt i64 %756, 2305843009213693951
  %759 = or i1 %757, %758
  %760 = select i1 %759, i64 2305843009213693951, i64 %756
  %761 = icmp eq i64 %760, 0
  br i1 %761, label %765, label %762

762:                                              ; preds = %753
  %763 = shl nuw nsw i64 %760, 2
  %764 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %763) #35
  br label %765

765:                                              ; preds = %762, %753
  %766 = phi ptr [ %764, %762 ], [ null, %753 ]
  %767 = getelementptr inbounds i32, ptr %766, i64 %754
  store i32 %740, ptr %767, align 4, !tbaa !67
  %768 = icmp sgt i64 %750, 0
  br i1 %768, label %769, label %770

769:                                              ; preds = %765
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %766, ptr align 4 %747, i64 %750, i1 false)
  br label %770

770:                                              ; preds = %769, %765
  %771 = getelementptr inbounds i32, ptr %767, i64 1
  %772 = icmp eq ptr %747, null
  br i1 %772, label %774, label %773

773:                                              ; preds = %770
  call void @_ZdlPv(ptr noundef nonnull %747) #33
  br label %774

774:                                              ; preds = %773, %770
  store ptr %766, ptr %177, align 8, !tbaa !59
  store ptr %771, ptr %179, align 8, !tbaa !58
  %775 = getelementptr inbounds i32, ptr %766, i64 %760
  store ptr %775, ptr %321, align 8, !tbaa !110
  br label %776

776:                                              ; preds = %744, %774
  %777 = load ptr, ptr %318, align 8, !tbaa !62
  %778 = getelementptr inbounds i32, ptr %777, i64 %689
  %779 = load i32, ptr %778, align 4, !tbaa !67
  %780 = getelementptr inbounds i32, ptr %777, i64 %680
  %781 = load i32, ptr %780, align 4, !tbaa !67
  %782 = icmp slt i32 %779, %781
  %783 = load ptr, ptr %322, align 8, !tbaa !60
  br i1 %782, label %784, label %829

784:                                              ; preds = %776
  %785 = getelementptr inbounds i32, ptr %783, i64 %680
  %786 = load i32, ptr %785, align 4, !tbaa !67
  %787 = and i32 %786, -2147483647
  %788 = icmp eq i32 %787, 1
  br i1 %788, label %789, label %829

789:                                              ; preds = %784
  %790 = getelementptr inbounds i32, ptr %783, i64 %689
  %791 = load i32, ptr %790, align 4, !tbaa !67
  %792 = mul nsw i32 %791, %695
  %793 = add nsw i32 %792, 1
  %794 = load ptr, ptr %172, align 8, !tbaa !58
  %795 = load ptr, ptr %323, align 8, !tbaa !110
  %796 = icmp eq ptr %794, %795
  br i1 %796, label %799, label %797

797:                                              ; preds = %789
  store i32 %793, ptr %794, align 4, !tbaa !67
  %798 = getelementptr inbounds i32, ptr %794, i64 1
  store ptr %798, ptr %172, align 8, !tbaa !58
  br label %868

799:                                              ; preds = %789
  %800 = load ptr, ptr %170, align 8, !tbaa !59
  %801 = ptrtoint ptr %794 to i64
  %802 = ptrtoint ptr %800 to i64
  %803 = sub i64 %801, %802
  %804 = icmp eq i64 %803, 9223372036854775804
  br i1 %804, label %805, label %806

805:                                              ; preds = %799
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

806:                                              ; preds = %799
  %807 = ashr exact i64 %803, 2
  %808 = call i64 @llvm.umax.i64(i64 %807, i64 1)
  %809 = add i64 %808, %807
  %810 = icmp ult i64 %809, %807
  %811 = icmp ugt i64 %809, 2305843009213693951
  %812 = or i1 %810, %811
  %813 = select i1 %812, i64 2305843009213693951, i64 %809
  %814 = icmp eq i64 %813, 0
  br i1 %814, label %818, label %815

815:                                              ; preds = %806
  %816 = shl nuw nsw i64 %813, 2
  %817 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %816) #35
  br label %818

818:                                              ; preds = %815, %806
  %819 = phi ptr [ %817, %815 ], [ null, %806 ]
  %820 = getelementptr inbounds i32, ptr %819, i64 %807
  store i32 %793, ptr %820, align 4, !tbaa !67
  %821 = icmp sgt i64 %803, 0
  br i1 %821, label %822, label %823

822:                                              ; preds = %818
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %819, ptr align 4 %800, i64 %803, i1 false)
  br label %823

823:                                              ; preds = %822, %818
  %824 = getelementptr inbounds i32, ptr %820, i64 1
  %825 = icmp eq ptr %800, null
  br i1 %825, label %827, label %826

826:                                              ; preds = %823
  call void @_ZdlPv(ptr noundef nonnull %800) #33
  br label %827

827:                                              ; preds = %826, %823
  store ptr %819, ptr %170, align 8, !tbaa !59
  store ptr %824, ptr %172, align 8, !tbaa !58
  %828 = getelementptr inbounds i32, ptr %819, i64 %813
  store ptr %828, ptr %323, align 8, !tbaa !110
  br label %868

829:                                              ; preds = %776, %784
  %830 = getelementptr inbounds i32, ptr %783, i64 %689
  %831 = load i32, ptr %830, align 4, !tbaa !67
  %832 = mul nsw i32 %831, %695
  %833 = load ptr, ptr %172, align 8, !tbaa !58
  %834 = load ptr, ptr %323, align 8, !tbaa !110
  %835 = icmp eq ptr %833, %834
  br i1 %835, label %838, label %836

836:                                              ; preds = %829
  store i32 %832, ptr %833, align 4, !tbaa !67
  %837 = getelementptr inbounds i32, ptr %833, i64 1
  store ptr %837, ptr %172, align 8, !tbaa !58
  br label %868

838:                                              ; preds = %829
  %839 = load ptr, ptr %170, align 8, !tbaa !59
  %840 = ptrtoint ptr %833 to i64
  %841 = ptrtoint ptr %839 to i64
  %842 = sub i64 %840, %841
  %843 = icmp eq i64 %842, 9223372036854775804
  br i1 %843, label %844, label %845

844:                                              ; preds = %838
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

845:                                              ; preds = %838
  %846 = ashr exact i64 %842, 2
  %847 = call i64 @llvm.umax.i64(i64 %846, i64 1)
  %848 = add i64 %847, %846
  %849 = icmp ult i64 %848, %846
  %850 = icmp ugt i64 %848, 2305843009213693951
  %851 = or i1 %849, %850
  %852 = select i1 %851, i64 2305843009213693951, i64 %848
  %853 = icmp eq i64 %852, 0
  br i1 %853, label %857, label %854

854:                                              ; preds = %845
  %855 = shl nuw nsw i64 %852, 2
  %856 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %855) #35
  br label %857

857:                                              ; preds = %854, %845
  %858 = phi ptr [ %856, %854 ], [ null, %845 ]
  %859 = getelementptr inbounds i32, ptr %858, i64 %846
  store i32 %832, ptr %859, align 4, !tbaa !67
  %860 = icmp sgt i64 %842, 0
  br i1 %860, label %861, label %862

861:                                              ; preds = %857
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %858, ptr align 4 %839, i64 %842, i1 false)
  br label %862

862:                                              ; preds = %861, %857
  %863 = getelementptr inbounds i32, ptr %859, i64 1
  %864 = icmp eq ptr %839, null
  br i1 %864, label %866, label %865

865:                                              ; preds = %862
  call void @_ZdlPv(ptr noundef nonnull %839) #33
  br label %866

866:                                              ; preds = %865, %862
  store ptr %858, ptr %170, align 8, !tbaa !59
  store ptr %863, ptr %172, align 8, !tbaa !58
  %867 = getelementptr inbounds i32, ptr %858, i64 %852
  store ptr %867, ptr %323, align 8, !tbaa !110
  br label %868

868:                                              ; preds = %866, %836, %827, %797
  %869 = add nsw i32 %681, 1
  %870 = load ptr, ptr %318, align 8, !tbaa !62
  %871 = getelementptr inbounds i32, ptr %870, i64 %689
  %872 = load i32, ptr %871, align 4, !tbaa !67
  %873 = getelementptr inbounds i32, ptr %870, i64 %680
  %874 = load i32, ptr %873, align 4, !tbaa !67
  %875 = icmp sgt i32 %872, %874
  br i1 %875, label %876, label %1013

876:                                              ; preds = %868
  %877 = load ptr, ptr %322, align 8, !tbaa !60
  %878 = getelementptr inbounds i32, ptr %877, i64 %689
  %879 = load i32, ptr %878, align 4, !tbaa !67
  %880 = and i32 %879, 1
  %881 = icmp eq i32 %880, 0
  br i1 %881, label %882, label %1013

882:                                              ; preds = %876
  %883 = load ptr, ptr %324, align 8, !tbaa !74
  %884 = getelementptr inbounds i32, ptr %883, i64 %689
  %885 = load i32, ptr %884, align 4, !tbaa !67
  %886 = icmp eq i32 %885, %684
  br i1 %886, label %1013, label %887

887:                                              ; preds = %882
  %888 = sext i32 %885 to i64
  %889 = getelementptr inbounds i32, ptr %870, i64 %888
  %890 = load i32, ptr %889, align 4, !tbaa !67
  %891 = icmp sgt i32 %874, %890
  %892 = call i32 @llvm.smax.i32(i32 %874, i32 %890)
  %893 = select i1 %891, ptr %873, ptr %889
  %894 = load ptr, ptr %186, align 8, !tbaa !58
  %895 = load ptr, ptr %319, align 8, !tbaa !110
  %896 = icmp eq ptr %894, %895
  br i1 %896, label %899, label %897

897:                                              ; preds = %887
  store i32 %892, ptr %894, align 4, !tbaa !67
  %898 = getelementptr inbounds i32, ptr %894, i64 1
  store ptr %898, ptr %186, align 8, !tbaa !58
  br label %931

899:                                              ; preds = %887
  %900 = load ptr, ptr %184, align 8, !tbaa !59
  %901 = ptrtoint ptr %894 to i64
  %902 = ptrtoint ptr %900 to i64
  %903 = sub i64 %901, %902
  %904 = icmp eq i64 %903, 9223372036854775804
  br i1 %904, label %905, label %906

905:                                              ; preds = %899
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

906:                                              ; preds = %899
  %907 = ashr exact i64 %903, 2
  %908 = call i64 @llvm.umax.i64(i64 %907, i64 1)
  %909 = add i64 %908, %907
  %910 = icmp ult i64 %909, %907
  %911 = icmp ugt i64 %909, 2305843009213693951
  %912 = or i1 %910, %911
  %913 = select i1 %912, i64 2305843009213693951, i64 %909
  %914 = icmp eq i64 %913, 0
  br i1 %914, label %919, label %915

915:                                              ; preds = %906
  %916 = shl nuw nsw i64 %913, 2
  %917 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %916) #35
  %918 = load i32, ptr %893, align 4, !tbaa !67
  br label %919

919:                                              ; preds = %915, %906
  %920 = phi i32 [ %918, %915 ], [ %892, %906 ]
  %921 = phi ptr [ %917, %915 ], [ null, %906 ]
  %922 = getelementptr inbounds i32, ptr %921, i64 %907
  store i32 %920, ptr %922, align 4, !tbaa !67
  %923 = icmp sgt i64 %903, 0
  br i1 %923, label %924, label %925

924:                                              ; preds = %919
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %921, ptr align 4 %900, i64 %903, i1 false)
  br label %925

925:                                              ; preds = %924, %919
  %926 = getelementptr inbounds i32, ptr %922, i64 1
  %927 = icmp eq ptr %900, null
  br i1 %927, label %929, label %928

928:                                              ; preds = %925
  call void @_ZdlPv(ptr noundef nonnull %900) #33
  br label %929

929:                                              ; preds = %928, %925
  store ptr %921, ptr %184, align 8, !tbaa !59
  store ptr %926, ptr %186, align 8, !tbaa !58
  %930 = getelementptr inbounds i32, ptr %921, i64 %913
  store ptr %930, ptr %319, align 8, !tbaa !110
  br label %931

931:                                              ; preds = %897, %929
  %932 = load ptr, ptr %320, align 8, !tbaa !61
  %933 = getelementptr inbounds i32, ptr %932, i64 %888
  %934 = load i32, ptr %933, align 4, !tbaa !67
  %935 = mul nsw i32 %934, %695
  %936 = load ptr, ptr %179, align 8, !tbaa !58
  %937 = load ptr, ptr %321, align 8, !tbaa !110
  %938 = icmp eq ptr %936, %937
  br i1 %938, label %941, label %939

939:                                              ; preds = %931
  store i32 %935, ptr %936, align 4, !tbaa !67
  %940 = getelementptr inbounds i32, ptr %936, i64 1
  store ptr %940, ptr %179, align 8, !tbaa !58
  br label %971

941:                                              ; preds = %931
  %942 = load ptr, ptr %177, align 8, !tbaa !59
  %943 = ptrtoint ptr %936 to i64
  %944 = ptrtoint ptr %942 to i64
  %945 = sub i64 %943, %944
  %946 = icmp eq i64 %945, 9223372036854775804
  br i1 %946, label %947, label %948

947:                                              ; preds = %941
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

948:                                              ; preds = %941
  %949 = ashr exact i64 %945, 2
  %950 = call i64 @llvm.umax.i64(i64 %949, i64 1)
  %951 = add i64 %950, %949
  %952 = icmp ult i64 %951, %949
  %953 = icmp ugt i64 %951, 2305843009213693951
  %954 = or i1 %952, %953
  %955 = select i1 %954, i64 2305843009213693951, i64 %951
  %956 = icmp eq i64 %955, 0
  br i1 %956, label %960, label %957

957:                                              ; preds = %948
  %958 = shl nuw nsw i64 %955, 2
  %959 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %958) #35
  br label %960

960:                                              ; preds = %957, %948
  %961 = phi ptr [ %959, %957 ], [ null, %948 ]
  %962 = getelementptr inbounds i32, ptr %961, i64 %949
  store i32 %935, ptr %962, align 4, !tbaa !67
  %963 = icmp sgt i64 %945, 0
  br i1 %963, label %964, label %965

964:                                              ; preds = %960
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %961, ptr align 4 %942, i64 %945, i1 false)
  br label %965

965:                                              ; preds = %964, %960
  %966 = getelementptr inbounds i32, ptr %962, i64 1
  %967 = icmp eq ptr %942, null
  br i1 %967, label %969, label %968

968:                                              ; preds = %965
  call void @_ZdlPv(ptr noundef nonnull %942) #33
  br label %969

969:                                              ; preds = %968, %965
  store ptr %961, ptr %177, align 8, !tbaa !59
  store ptr %966, ptr %179, align 8, !tbaa !58
  %970 = getelementptr inbounds i32, ptr %961, i64 %955
  store ptr %970, ptr %321, align 8, !tbaa !110
  br label %971

971:                                              ; preds = %939, %969
  %972 = load ptr, ptr %322, align 8, !tbaa !60
  %973 = getelementptr inbounds i32, ptr %972, i64 %888
  %974 = load i32, ptr %973, align 4, !tbaa !67
  %975 = mul nsw i32 %974, %695
  %976 = load ptr, ptr %172, align 8, !tbaa !58
  %977 = load ptr, ptr %323, align 8, !tbaa !110
  %978 = icmp eq ptr %976, %977
  br i1 %978, label %981, label %979

979:                                              ; preds = %971
  store i32 %975, ptr %976, align 4, !tbaa !67
  %980 = getelementptr inbounds i32, ptr %976, i64 1
  store ptr %980, ptr %172, align 8, !tbaa !58
  br label %1011

981:                                              ; preds = %971
  %982 = load ptr, ptr %170, align 8, !tbaa !59
  %983 = ptrtoint ptr %976 to i64
  %984 = ptrtoint ptr %982 to i64
  %985 = sub i64 %983, %984
  %986 = icmp eq i64 %985, 9223372036854775804
  br i1 %986, label %987, label %988

987:                                              ; preds = %981
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

988:                                              ; preds = %981
  %989 = ashr exact i64 %985, 2
  %990 = call i64 @llvm.umax.i64(i64 %989, i64 1)
  %991 = add i64 %990, %989
  %992 = icmp ult i64 %991, %989
  %993 = icmp ugt i64 %991, 2305843009213693951
  %994 = or i1 %992, %993
  %995 = select i1 %994, i64 2305843009213693951, i64 %991
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %1000, label %997

997:                                              ; preds = %988
  %998 = shl nuw nsw i64 %995, 2
  %999 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %998) #35
  br label %1000

1000:                                             ; preds = %997, %988
  %1001 = phi ptr [ %999, %997 ], [ null, %988 ]
  %1002 = getelementptr inbounds i32, ptr %1001, i64 %989
  store i32 %975, ptr %1002, align 4, !tbaa !67
  %1003 = icmp sgt i64 %985, 0
  br i1 %1003, label %1004, label %1005

1004:                                             ; preds = %1000
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1001, ptr align 4 %982, i64 %985, i1 false)
  br label %1005

1005:                                             ; preds = %1004, %1000
  %1006 = getelementptr inbounds i32, ptr %1002, i64 1
  %1007 = icmp eq ptr %982, null
  br i1 %1007, label %1009, label %1008

1008:                                             ; preds = %1005
  call void @_ZdlPv(ptr noundef nonnull %982) #33
  br label %1009

1009:                                             ; preds = %1008, %1005
  store ptr %1001, ptr %170, align 8, !tbaa !59
  store ptr %1006, ptr %172, align 8, !tbaa !58
  %1010 = getelementptr inbounds i32, ptr %1001, i64 %995
  store ptr %1010, ptr %323, align 8, !tbaa !110
  br label %1011

1011:                                             ; preds = %979, %1009
  %1012 = add nsw i32 %681, 2
  br label %1013

1013:                                             ; preds = %868, %876, %1011, %882, %679
  %1014 = phi i32 [ %681, %679 ], [ %869, %876 ], [ %869, %868 ], [ %1012, %1011 ], [ %869, %882 ]
  %1015 = add nuw nsw i64 %680, 1
  %1016 = load i64, ptr %154, align 8, !tbaa !43
  %1017 = shl i64 %1016, 32
  %1018 = ashr exact i64 %1017, 32
  %1019 = icmp slt i64 %1015, %1018
  br i1 %1019, label %679, label %666, !llvm.loop !196

1020:                                             ; preds = %1057
  %1021 = icmp sgt i32 %1059, 0
  br i1 %1021, label %1022, label %1062

1022:                                             ; preds = %1020
  %1023 = load ptr, ptr %24, align 8, !tbaa !59
  %1024 = load ptr, ptr %38, align 8, !tbaa !59
  %1025 = load ptr, ptr %31, align 8, !tbaa !59
  %1026 = load ptr, ptr %10, align 8
  %1027 = load ptr, ptr %45, align 8
  %1028 = load ptr, ptr %17, align 8
  br label %1072

1029:                                             ; preds = %671, %1057
  %1030 = phi i64 [ 0, %671 ], [ %1058, %1057 ]
  %1031 = getelementptr inbounds i32, ptr %672, i64 %1030
  %1032 = load i32, ptr %1031, align 4, !tbaa !67
  %1033 = getelementptr inbounds i32, ptr %673, i64 %1030
  %1034 = load i32, ptr %1033, align 4, !tbaa !67
  %1035 = sext i32 %1032 to i64
  %1036 = getelementptr inbounds i32, ptr %674, i64 %1035
  %1037 = load i32, ptr %1036, align 4, !tbaa !67
  %1038 = icmp slt i32 %1034, %1037
  br i1 %1038, label %1039, label %1040

1039:                                             ; preds = %1029
  store i32 %1034, ptr %1036, align 4, !tbaa !67
  br label %1040

1040:                                             ; preds = %1039, %1029
  %1041 = getelementptr inbounds i32, ptr %675, i64 %1035
  %1042 = load i32, ptr %1041, align 4, !tbaa !67
  %1043 = icmp sgt i32 %1034, %1042
  br i1 %1043, label %1044, label %1045

1044:                                             ; preds = %1040
  store i32 %1034, ptr %1041, align 4, !tbaa !67
  br label %1045

1045:                                             ; preds = %1044, %1040
  %1046 = getelementptr inbounds i32, ptr %676, i64 %1030
  %1047 = load i32, ptr %1046, align 4, !tbaa !67
  %1048 = getelementptr inbounds i32, ptr %677, i64 %1035
  %1049 = load i32, ptr %1048, align 4, !tbaa !67
  %1050 = icmp slt i32 %1047, %1049
  br i1 %1050, label %1051, label %1052

1051:                                             ; preds = %1045
  store i32 %1047, ptr %1048, align 4, !tbaa !67
  br label %1052

1052:                                             ; preds = %1051, %1045
  %1053 = getelementptr inbounds i32, ptr %678, i64 %1035
  %1054 = load i32, ptr %1053, align 4, !tbaa !67
  %1055 = icmp sgt i32 %1047, %1054
  br i1 %1055, label %1056, label %1057

1056:                                             ; preds = %1052
  store i32 %1047, ptr %1053, align 4, !tbaa !67
  br label %1057

1057:                                             ; preds = %1056, %1052
  %1058 = add nuw nsw i64 %1030, 1
  %1059 = load i32, ptr %169, align 8, !tbaa !193
  %1060 = sext i32 %1059 to i64
  %1061 = icmp slt i64 %1058, %1060
  br i1 %1061, label %1029, label %1020, !llvm.loop !197

1062:                                             ; preds = %1093, %666, %1020
  %1063 = load i32, ptr %59, align 8, !tbaa !91
  %1064 = icmp slt i32 %1063, 0
  br i1 %1064, label %1098, label %1065

1065:                                             ; preds = %1062
  %1066 = load ptr, ptr %31, align 8, !tbaa !59
  %1067 = load ptr, ptr %128, align 8, !tbaa !59
  %1068 = load ptr, ptr %45, align 8, !tbaa !59
  %1069 = load ptr, ptr %141, align 8, !tbaa !59
  %1070 = load ptr, ptr %38, align 8, !tbaa !59
  %1071 = load ptr, ptr %52, align 8, !tbaa !59
  br label %1109

1072:                                             ; preds = %1022, %1093
  %1073 = phi i32 [ %1059, %1022 ], [ %1094, %1093 ]
  %1074 = phi i64 [ 0, %1022 ], [ %1095, %1093 ]
  %1075 = getelementptr inbounds i32, ptr %1023, i64 %1074
  %1076 = load i32, ptr %1075, align 4, !tbaa !67
  %1077 = sext i32 %1076 to i64
  %1078 = getelementptr inbounds i32, ptr %1024, i64 %1077
  %1079 = load i32, ptr %1078, align 4, !tbaa !67
  %1080 = getelementptr inbounds i32, ptr %1025, i64 %1077
  %1081 = load i32, ptr %1080, align 4, !tbaa !67
  %1082 = icmp slt i32 %1079, %1081
  br i1 %1082, label %1093, label %1083

1083:                                             ; preds = %1072
  %1084 = getelementptr inbounds i32, ptr %1026, i64 %1074
  %1085 = load i32, ptr %1084, align 4, !tbaa !67
  %1086 = sub nsw i32 %1085, %1081
  store i32 %1086, ptr %1084, align 4, !tbaa !67
  %1087 = getelementptr inbounds i32, ptr %1027, i64 %1077
  %1088 = load i32, ptr %1087, align 4, !tbaa !67
  %1089 = getelementptr inbounds i32, ptr %1028, i64 %1074
  %1090 = load i32, ptr %1089, align 4, !tbaa !67
  %1091 = sub nsw i32 %1090, %1088
  store i32 %1091, ptr %1089, align 4, !tbaa !67
  %1092 = load i32, ptr %169, align 8, !tbaa !193
  br label %1093

1093:                                             ; preds = %1072, %1083
  %1094 = phi i32 [ %1073, %1072 ], [ %1092, %1083 ]
  %1095 = add nuw nsw i64 %1074, 1
  %1096 = sext i32 %1094 to i64
  %1097 = icmp slt i64 %1095, %1096
  br i1 %1097, label %1072, label %1062, !llvm.loop !198

1098:                                             ; preds = %1109, %1062
  %1099 = load i32, ptr %668, align 4, !tbaa !195
  %1100 = icmp sgt i32 %1099, 0
  br i1 %1100, label %1101, label %1171

1101:                                             ; preds = %1098
  %1102 = load ptr, ptr %184, align 8, !tbaa !59
  %1103 = load ptr, ptr %170, align 8, !tbaa !59
  %1104 = load ptr, ptr %191, align 8, !tbaa !59
  %1105 = load ptr, ptr %198, align 8, !tbaa !59
  %1106 = load ptr, ptr %177, align 8, !tbaa !59
  %1107 = load ptr, ptr %205, align 8, !tbaa !59
  %1108 = load ptr, ptr %212, align 8, !tbaa !59
  br label %1138

1109:                                             ; preds = %1065, %1109
  %1110 = phi i64 [ 0, %1065 ], [ %1125, %1109 ]
  %1111 = getelementptr inbounds i32, ptr %1066, i64 %1110
  %1112 = load i32, ptr %1111, align 4, !tbaa !67
  %1113 = getelementptr inbounds i32, ptr %1067, i64 %1110
  store i32 %1112, ptr %1113, align 4, !tbaa !67
  %1114 = getelementptr inbounds i32, ptr %1068, i64 %1110
  %1115 = load i32, ptr %1114, align 4, !tbaa !67
  %1116 = getelementptr inbounds i32, ptr %1069, i64 %1110
  store i32 %1115, ptr %1116, align 4, !tbaa !67
  %1117 = load i32, ptr %1111, align 4, !tbaa !67
  %1118 = getelementptr inbounds i32, ptr %1070, i64 %1110
  %1119 = load i32, ptr %1118, align 4, !tbaa !67
  %1120 = sub nsw i32 %1119, %1117
  store i32 %1120, ptr %1118, align 4, !tbaa !67
  %1121 = load i32, ptr %1114, align 4, !tbaa !67
  %1122 = getelementptr inbounds i32, ptr %1071, i64 %1110
  %1123 = load i32, ptr %1122, align 4, !tbaa !67
  %1124 = sub nsw i32 %1123, %1121
  store i32 %1124, ptr %1122, align 4, !tbaa !67
  store i32 0, ptr %1111, align 4, !tbaa !67
  store i32 0, ptr %1114, align 4, !tbaa !67
  %1125 = add nuw nsw i64 %1110, 1
  %1126 = load i32, ptr %59, align 8, !tbaa !91
  %1127 = sext i32 %1126 to i64
  %1128 = icmp slt i64 %1110, %1127
  br i1 %1128, label %1109, label %1098, !llvm.loop !199

1129:                                             ; preds = %1166
  %1130 = icmp sgt i32 %1168, 0
  br i1 %1130, label %1131, label %1171

1131:                                             ; preds = %1129
  %1132 = load ptr, ptr %184, align 8, !tbaa !59
  %1133 = load ptr, ptr %198, align 8, !tbaa !59
  %1134 = load ptr, ptr %191, align 8, !tbaa !59
  %1135 = load ptr, ptr %170, align 8
  %1136 = load ptr, ptr %205, align 8
  %1137 = load ptr, ptr %177, align 8
  br label %1181

1138:                                             ; preds = %1101, %1166
  %1139 = phi i64 [ 0, %1101 ], [ %1167, %1166 ]
  %1140 = getelementptr inbounds i32, ptr %1102, i64 %1139
  %1141 = load i32, ptr %1140, align 4, !tbaa !67
  %1142 = getelementptr inbounds i32, ptr %1103, i64 %1139
  %1143 = load i32, ptr %1142, align 4, !tbaa !67
  %1144 = sext i32 %1141 to i64
  %1145 = getelementptr inbounds i32, ptr %1104, i64 %1144
  %1146 = load i32, ptr %1145, align 4, !tbaa !67
  %1147 = icmp slt i32 %1143, %1146
  br i1 %1147, label %1148, label %1149

1148:                                             ; preds = %1138
  store i32 %1143, ptr %1145, align 4, !tbaa !67
  br label %1149

1149:                                             ; preds = %1148, %1138
  %1150 = getelementptr inbounds i32, ptr %1105, i64 %1144
  %1151 = load i32, ptr %1150, align 4, !tbaa !67
  %1152 = icmp sgt i32 %1143, %1151
  br i1 %1152, label %1153, label %1154

1153:                                             ; preds = %1149
  store i32 %1143, ptr %1150, align 4, !tbaa !67
  br label %1154

1154:                                             ; preds = %1153, %1149
  %1155 = getelementptr inbounds i32, ptr %1106, i64 %1139
  %1156 = load i32, ptr %1155, align 4, !tbaa !67
  %1157 = getelementptr inbounds i32, ptr %1107, i64 %1144
  %1158 = load i32, ptr %1157, align 4, !tbaa !67
  %1159 = icmp slt i32 %1156, %1158
  br i1 %1159, label %1160, label %1161

1160:                                             ; preds = %1154
  store i32 %1156, ptr %1157, align 4, !tbaa !67
  br label %1161

1161:                                             ; preds = %1160, %1154
  %1162 = getelementptr inbounds i32, ptr %1108, i64 %1144
  %1163 = load i32, ptr %1162, align 4, !tbaa !67
  %1164 = icmp sgt i32 %1156, %1163
  br i1 %1164, label %1165, label %1166

1165:                                             ; preds = %1161
  store i32 %1156, ptr %1162, align 4, !tbaa !67
  br label %1166

1166:                                             ; preds = %1165, %1161
  %1167 = add nuw nsw i64 %1139, 1
  %1168 = load i32, ptr %668, align 4, !tbaa !195
  %1169 = sext i32 %1168 to i64
  %1170 = icmp slt i64 %1167, %1169
  br i1 %1170, label %1138, label %1129, !llvm.loop !200

1171:                                             ; preds = %1202, %1098, %1129
  %1172 = load i32, ptr %59, align 8, !tbaa !91
  %1173 = icmp slt i32 %1172, 0
  br i1 %1173, label %1207, label %1174

1174:                                             ; preds = %1171
  %1175 = load ptr, ptr %191, align 8, !tbaa !59
  %1176 = load ptr, ptr %287, align 8, !tbaa !59
  %1177 = load ptr, ptr %205, align 8, !tbaa !59
  %1178 = load ptr, ptr %300, align 8, !tbaa !59
  %1179 = load ptr, ptr %198, align 8, !tbaa !59
  %1180 = load ptr, ptr %212, align 8, !tbaa !59
  br label %1208

1181:                                             ; preds = %1131, %1202
  %1182 = phi i32 [ %1168, %1131 ], [ %1203, %1202 ]
  %1183 = phi i64 [ 0, %1131 ], [ %1204, %1202 ]
  %1184 = getelementptr inbounds i32, ptr %1132, i64 %1183
  %1185 = load i32, ptr %1184, align 4, !tbaa !67
  %1186 = sext i32 %1185 to i64
  %1187 = getelementptr inbounds i32, ptr %1133, i64 %1186
  %1188 = load i32, ptr %1187, align 4, !tbaa !67
  %1189 = getelementptr inbounds i32, ptr %1134, i64 %1186
  %1190 = load i32, ptr %1189, align 4, !tbaa !67
  %1191 = icmp slt i32 %1188, %1190
  br i1 %1191, label %1202, label %1192

1192:                                             ; preds = %1181
  %1193 = getelementptr inbounds i32, ptr %1135, i64 %1183
  %1194 = load i32, ptr %1193, align 4, !tbaa !67
  %1195 = sub nsw i32 %1194, %1190
  store i32 %1195, ptr %1193, align 4, !tbaa !67
  %1196 = getelementptr inbounds i32, ptr %1136, i64 %1186
  %1197 = load i32, ptr %1196, align 4, !tbaa !67
  %1198 = getelementptr inbounds i32, ptr %1137, i64 %1183
  %1199 = load i32, ptr %1198, align 4, !tbaa !67
  %1200 = sub nsw i32 %1199, %1197
  store i32 %1200, ptr %1198, align 4, !tbaa !67
  %1201 = load i32, ptr %668, align 4, !tbaa !195
  br label %1202

1202:                                             ; preds = %1181, %1192
  %1203 = phi i32 [ %1182, %1181 ], [ %1201, %1192 ]
  %1204 = add nuw nsw i64 %1183, 1
  %1205 = sext i32 %1203 to i64
  %1206 = icmp slt i64 %1204, %1205
  br i1 %1206, label %1181, label %1171, !llvm.loop !201

1207:                                             ; preds = %1208, %1171
  ret void

1208:                                             ; preds = %1174, %1208
  %1209 = phi i64 [ 0, %1174 ], [ %1224, %1208 ]
  %1210 = getelementptr inbounds i32, ptr %1175, i64 %1209
  %1211 = load i32, ptr %1210, align 4, !tbaa !67
  %1212 = getelementptr inbounds i32, ptr %1176, i64 %1209
  store i32 %1211, ptr %1212, align 4, !tbaa !67
  %1213 = getelementptr inbounds i32, ptr %1177, i64 %1209
  %1214 = load i32, ptr %1213, align 4, !tbaa !67
  %1215 = getelementptr inbounds i32, ptr %1178, i64 %1209
  store i32 %1214, ptr %1215, align 4, !tbaa !67
  %1216 = load i32, ptr %1210, align 4, !tbaa !67
  %1217 = getelementptr inbounds i32, ptr %1179, i64 %1209
  %1218 = load i32, ptr %1217, align 4, !tbaa !67
  %1219 = sub nsw i32 %1218, %1216
  store i32 %1219, ptr %1217, align 4, !tbaa !67
  %1220 = load i32, ptr %1213, align 4, !tbaa !67
  %1221 = getelementptr inbounds i32, ptr %1180, i64 %1209
  %1222 = load i32, ptr %1221, align 4, !tbaa !67
  %1223 = sub nsw i32 %1222, %1220
  store i32 %1223, ptr %1221, align 4, !tbaa !67
  store i32 0, ptr %1210, align 4, !tbaa !67
  store i32 0, ptr %1213, align 4, !tbaa !67
  %1224 = add nuw nsw i64 %1209, 1
  %1225 = load i32, ptr %59, align 8, !tbaa !91
  %1226 = sext i32 %1225 to i64
  %1227 = icmp slt i64 %1209, %1226
  br i1 %1227, label %1208, label %1207, !llvm.loop !202
}

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh19calc_face_list_wmapEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 86
  %11 = load ptr, ptr %10, align 8, !tbaa !59
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 86, i32 0, i32 0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !58
  %14 = icmp eq ptr %13, %11
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  store ptr %11, ptr %12, align 8, !tbaa !58
  br label %16

16:                                               ; preds = %1, %15
  %17 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 87
  %18 = load ptr, ptr %17, align 8, !tbaa !59
  %19 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 87, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !58
  %21 = icmp eq ptr %20, %18
  br i1 %21, label %23, label %22

22:                                               ; preds = %16
  store ptr %18, ptr %19, align 8, !tbaa !58
  br label %23

23:                                               ; preds = %16, %22
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83
  %25 = load ptr, ptr %24, align 8, !tbaa !59
  %26 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83, i32 0, i32 0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !58
  %28 = icmp eq ptr %27, %25
  br i1 %28, label %30, label %29

29:                                               ; preds = %23
  store ptr %25, ptr %26, align 8, !tbaa !58
  br label %30

30:                                               ; preds = %23, %29
  %31 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84
  %32 = load ptr, ptr %31, align 8, !tbaa !59
  %33 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84, i32 0, i32 0, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !58
  %35 = icmp eq ptr %34, %32
  br i1 %35, label %37, label %36

36:                                               ; preds = %30
  store ptr %32, ptr %33, align 8, !tbaa !58
  br label %37

37:                                               ; preds = %30, %36
  %38 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85
  %39 = load ptr, ptr %38, align 8, !tbaa !59
  %40 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85, i32 0, i32 0, i32 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !58
  %42 = icmp eq ptr %41, %39
  br i1 %42, label %44, label %43

43:                                               ; preds = %37
  store ptr %39, ptr %40, align 8, !tbaa !58
  br label %44

44:                                               ; preds = %37, %43
  %45 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 92
  %46 = load ptr, ptr %45, align 8, !tbaa !59
  %47 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 92, i32 0, i32 0, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !58
  %49 = icmp eq ptr %48, %46
  br i1 %49, label %51, label %50

50:                                               ; preds = %44
  store ptr %46, ptr %47, align 8, !tbaa !58
  br label %51

51:                                               ; preds = %44, %50
  %52 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 93
  %53 = load ptr, ptr %52, align 8, !tbaa !59
  %54 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 93, i32 0, i32 0, i32 0, i32 1
  %55 = load ptr, ptr %54, align 8, !tbaa !58
  %56 = icmp eq ptr %55, %53
  br i1 %56, label %58, label %57

57:                                               ; preds = %51
  store ptr %53, ptr %54, align 8, !tbaa !58
  br label %58

58:                                               ; preds = %51, %57
  %59 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 94
  %60 = load ptr, ptr %59, align 8, !tbaa !59
  %61 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 94, i32 0, i32 0, i32 0, i32 1
  %62 = load ptr, ptr %61, align 8, !tbaa !58
  %63 = icmp eq ptr %62, %60
  br i1 %63, label %65, label %64

64:                                               ; preds = %58
  store ptr %60, ptr %61, align 8, !tbaa !58
  br label %65

65:                                               ; preds = %58, %64
  %66 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 95
  %67 = load ptr, ptr %66, align 8, !tbaa !59
  %68 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 95, i32 0, i32 0, i32 0, i32 1
  %69 = load ptr, ptr %68, align 8, !tbaa !58
  %70 = icmp eq ptr %69, %67
  br i1 %70, label %72, label %71

71:                                               ; preds = %65
  store ptr %67, ptr %68, align 8, !tbaa !58
  br label %72

72:                                               ; preds = %65, %71
  %73 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %74 = load i32, ptr %73, align 8, !tbaa !91
  %75 = add nsw i32 %74, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #31
  store i32 9999999, ptr %2, align 4, !tbaa !67
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %72
  %78 = sext i32 %75 to i64
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %45, ptr %46, i64 noundef %78, ptr noundef nonnull align 4 dereferenceable(4) %2)
  %79 = load i32, ptr %73, align 8, !tbaa !91
  %80 = load ptr, ptr %54, align 8, !tbaa !58
  %81 = load ptr, ptr %52, align 8, !tbaa !59
  br label %82

82:                                               ; preds = %72, %77
  %83 = phi ptr [ %81, %77 ], [ %53, %72 ]
  %84 = phi ptr [ %80, %77 ], [ %53, %72 ]
  %85 = phi i32 [ %79, %77 ], [ -1, %72 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #31
  %86 = add nsw i32 %85, 1
  %87 = sext i32 %86 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #31
  store i32 -9999999, ptr %3, align 4, !tbaa !67
  %88 = ptrtoint ptr %84 to i64
  %89 = ptrtoint ptr %83 to i64
  %90 = sub i64 %88, %89
  %91 = ashr exact i64 %90, 2
  %92 = icmp ult i64 %91, %87
  br i1 %92, label %93, label %98

93:                                               ; preds = %82
  %94 = sub nsw i64 %87, %91
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %52, ptr %84, i64 noundef %94, ptr noundef nonnull align 4 dereferenceable(4) %3)
  %95 = load i32, ptr %73, align 8, !tbaa !91
  %96 = add nsw i32 %95, 1
  %97 = sext i32 %96 to i64
  br label %104

98:                                               ; preds = %82
  %99 = icmp ugt i64 %91, %87
  br i1 %99, label %100, label %104

100:                                              ; preds = %98
  %101 = getelementptr inbounds i32, ptr %83, i64 %87
  %102 = icmp eq ptr %84, %101
  br i1 %102, label %104, label %103

103:                                              ; preds = %100
  store ptr %101, ptr %54, align 8, !tbaa !58
  br label %104

104:                                              ; preds = %93, %98, %100, %103
  %105 = phi i64 [ %97, %93 ], [ %87, %98 ], [ %87, %100 ], [ %87, %103 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #31
  store i32 9999999, ptr %4, align 4, !tbaa !67
  %106 = load ptr, ptr %61, align 8, !tbaa !58
  %107 = load ptr, ptr %59, align 8, !tbaa !59
  %108 = ptrtoint ptr %106 to i64
  %109 = ptrtoint ptr %107 to i64
  %110 = sub i64 %108, %109
  %111 = ashr exact i64 %110, 2
  %112 = icmp ugt i64 %105, %111
  br i1 %112, label %113, label %118

113:                                              ; preds = %104
  %114 = sub nsw i64 %105, %111
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %59, ptr %106, i64 noundef %114, ptr noundef nonnull align 4 dereferenceable(4) %4)
  %115 = load i32, ptr %73, align 8, !tbaa !91
  %116 = add nsw i32 %115, 1
  %117 = sext i32 %116 to i64
  br label %124

118:                                              ; preds = %104
  %119 = icmp ult i64 %105, %111
  br i1 %119, label %120, label %124

120:                                              ; preds = %118
  %121 = getelementptr inbounds i32, ptr %107, i64 %105
  %122 = icmp eq ptr %106, %121
  br i1 %122, label %124, label %123

123:                                              ; preds = %120
  store ptr %121, ptr %61, align 8, !tbaa !58
  br label %124

124:                                              ; preds = %113, %118, %120, %123
  %125 = phi i64 [ %117, %113 ], [ %105, %118 ], [ %105, %120 ], [ %105, %123 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #31
  store i32 -9999999, ptr %5, align 4, !tbaa !67
  %126 = load ptr, ptr %68, align 8, !tbaa !58
  %127 = load ptr, ptr %66, align 8, !tbaa !59
  %128 = ptrtoint ptr %126 to i64
  %129 = ptrtoint ptr %127 to i64
  %130 = sub i64 %128, %129
  %131 = ashr exact i64 %130, 2
  %132 = icmp ugt i64 %125, %131
  br i1 %132, label %133, label %135

133:                                              ; preds = %124
  %134 = sub nsw i64 %125, %131
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %66, ptr %126, i64 noundef %134, ptr noundef nonnull align 4 dereferenceable(4) %5)
  br label %141

135:                                              ; preds = %124
  %136 = icmp ult i64 %125, %131
  br i1 %136, label %137, label %141

137:                                              ; preds = %135
  %138 = getelementptr inbounds i32, ptr %127, i64 %125
  %139 = icmp eq ptr %126, %138
  br i1 %139, label %141, label %140

140:                                              ; preds = %137
  store ptr %138, ptr %68, align 8, !tbaa !58
  br label %141

141:                                              ; preds = %133, %135, %137, %140
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #31
  %142 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 96
  %143 = load ptr, ptr %142, align 8, !tbaa !59
  %144 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 96, i32 0, i32 0, i32 0, i32 1
  %145 = load ptr, ptr %144, align 8, !tbaa !58
  %146 = icmp eq ptr %145, %143
  br i1 %146, label %148, label %147

147:                                              ; preds = %141
  store ptr %143, ptr %144, align 8, !tbaa !58
  br label %148

148:                                              ; preds = %141, %147
  %149 = load i32, ptr %73, align 8, !tbaa !91
  %150 = add nsw i32 %149, 1
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %148
  %153 = sext i32 %150 to i64
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %142, i64 noundef %153)
  br label %154

154:                                              ; preds = %148, %152
  %155 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 97
  %156 = load ptr, ptr %155, align 8, !tbaa !59
  %157 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 97, i32 0, i32 0, i32 0, i32 1
  %158 = load ptr, ptr %157, align 8, !tbaa !58
  %159 = icmp eq ptr %158, %156
  br i1 %159, label %161, label %160

160:                                              ; preds = %154
  store ptr %156, ptr %157, align 8, !tbaa !58
  br label %161

161:                                              ; preds = %154, %160
  %162 = load i32, ptr %73, align 8, !tbaa !91
  %163 = add nsw i32 %162, 1
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %161
  %166 = sext i32 %163 to i64
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %155, i64 noundef %166)
  br label %167

167:                                              ; preds = %161, %165
  %168 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %169 = load i64, ptr %168, align 8, !tbaa !43
  %170 = trunc i64 %169 to i32
  %171 = icmp sgt i32 %170, 0
  br i1 %171, label %172, label %183

172:                                              ; preds = %167
  %173 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %174 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %175 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 86, i32 0, i32 0, i32 0, i32 2
  %176 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 87, i32 0, i32 0, i32 0, i32 2
  %177 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85, i32 0, i32 0, i32 0, i32 2
  %178 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %179 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83, i32 0, i32 0, i32 0, i32 2
  %180 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %181 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84, i32 0, i32 0, i32 0, i32 2
  %182 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  br label %357

183:                                              ; preds = %849, %167
  %184 = phi i32 [ 0, %167 ], [ %850, %849 ]
  %185 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 81
  store i32 %184, ptr %185, align 8, !tbaa !193
  %186 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 101
  %187 = load ptr, ptr %186, align 8, !tbaa !59
  %188 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 101, i32 0, i32 0, i32 0, i32 1
  %189 = load ptr, ptr %188, align 8, !tbaa !58
  %190 = icmp eq ptr %189, %187
  br i1 %190, label %192, label %191

191:                                              ; preds = %183
  store ptr %187, ptr %188, align 8, !tbaa !58
  br label %192

192:                                              ; preds = %183, %191
  %193 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 102
  %194 = load ptr, ptr %193, align 8, !tbaa !59
  %195 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 102, i32 0, i32 0, i32 0, i32 1
  %196 = load ptr, ptr %195, align 8, !tbaa !58
  %197 = icmp eq ptr %196, %194
  br i1 %197, label %199, label %198

198:                                              ; preds = %192
  store ptr %194, ptr %195, align 8, !tbaa !58
  br label %199

199:                                              ; preds = %192, %198
  %200 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98
  %201 = load ptr, ptr %200, align 8, !tbaa !59
  %202 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98, i32 0, i32 0, i32 0, i32 1
  %203 = load ptr, ptr %202, align 8, !tbaa !58
  %204 = icmp eq ptr %203, %201
  br i1 %204, label %206, label %205

205:                                              ; preds = %199
  store ptr %201, ptr %202, align 8, !tbaa !58
  br label %206

206:                                              ; preds = %199, %205
  %207 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99
  %208 = load ptr, ptr %207, align 8, !tbaa !59
  %209 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99, i32 0, i32 0, i32 0, i32 1
  %210 = load ptr, ptr %209, align 8, !tbaa !58
  %211 = icmp eq ptr %210, %208
  br i1 %211, label %213, label %212

212:                                              ; preds = %206
  store ptr %208, ptr %209, align 8, !tbaa !58
  br label %213

213:                                              ; preds = %206, %212
  %214 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100
  %215 = load ptr, ptr %214, align 8, !tbaa !59
  %216 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100, i32 0, i32 0, i32 0, i32 1
  %217 = load ptr, ptr %216, align 8, !tbaa !58
  %218 = icmp eq ptr %217, %215
  br i1 %218, label %220, label %219

219:                                              ; preds = %213
  store ptr %215, ptr %216, align 8, !tbaa !58
  br label %220

220:                                              ; preds = %213, %219
  %221 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 107
  %222 = load ptr, ptr %221, align 8, !tbaa !59
  %223 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 107, i32 0, i32 0, i32 0, i32 1
  %224 = load ptr, ptr %223, align 8, !tbaa !58
  %225 = icmp eq ptr %224, %222
  br i1 %225, label %227, label %226

226:                                              ; preds = %220
  store ptr %222, ptr %223, align 8, !tbaa !58
  br label %227

227:                                              ; preds = %220, %226
  %228 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 108
  %229 = load ptr, ptr %228, align 8, !tbaa !59
  %230 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 108, i32 0, i32 0, i32 0, i32 1
  %231 = load ptr, ptr %230, align 8, !tbaa !58
  %232 = icmp eq ptr %231, %229
  br i1 %232, label %234, label %233

233:                                              ; preds = %227
  store ptr %229, ptr %230, align 8, !tbaa !58
  br label %234

234:                                              ; preds = %227, %233
  %235 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 109
  %236 = load ptr, ptr %235, align 8, !tbaa !59
  %237 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 109, i32 0, i32 0, i32 0, i32 1
  %238 = load ptr, ptr %237, align 8, !tbaa !58
  %239 = icmp eq ptr %238, %236
  br i1 %239, label %241, label %240

240:                                              ; preds = %234
  store ptr %236, ptr %237, align 8, !tbaa !58
  br label %241

241:                                              ; preds = %234, %240
  %242 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 110
  %243 = load ptr, ptr %242, align 8, !tbaa !59
  %244 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 110, i32 0, i32 0, i32 0, i32 1
  %245 = load ptr, ptr %244, align 8, !tbaa !58
  %246 = icmp eq ptr %245, %243
  br i1 %246, label %248, label %247

247:                                              ; preds = %241
  store ptr %243, ptr %244, align 8, !tbaa !58
  br label %248

248:                                              ; preds = %241, %247
  %249 = load i32, ptr %73, align 8, !tbaa !91
  %250 = add nsw i32 %249, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #31
  store i32 9999999, ptr %6, align 4, !tbaa !67
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %257, label %252

252:                                              ; preds = %248
  %253 = sext i32 %250 to i64
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %221, ptr %222, i64 noundef %253, ptr noundef nonnull align 4 dereferenceable(4) %6)
  %254 = load i32, ptr %73, align 8, !tbaa !91
  %255 = load ptr, ptr %230, align 8, !tbaa !58
  %256 = load ptr, ptr %228, align 8, !tbaa !59
  br label %257

257:                                              ; preds = %248, %252
  %258 = phi ptr [ %256, %252 ], [ %229, %248 ]
  %259 = phi ptr [ %255, %252 ], [ %229, %248 ]
  %260 = phi i32 [ %254, %252 ], [ -1, %248 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #31
  %261 = add nsw i32 %260, 1
  %262 = sext i32 %261 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #31
  store i32 -9999999, ptr %7, align 4, !tbaa !67
  %263 = ptrtoint ptr %259 to i64
  %264 = ptrtoint ptr %258 to i64
  %265 = sub i64 %263, %264
  %266 = ashr exact i64 %265, 2
  %267 = icmp ult i64 %266, %262
  br i1 %267, label %268, label %273

268:                                              ; preds = %257
  %269 = sub nsw i64 %262, %266
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %228, ptr %259, i64 noundef %269, ptr noundef nonnull align 4 dereferenceable(4) %7)
  %270 = load i32, ptr %73, align 8, !tbaa !91
  %271 = add nsw i32 %270, 1
  %272 = sext i32 %271 to i64
  br label %279

273:                                              ; preds = %257
  %274 = icmp ugt i64 %266, %262
  br i1 %274, label %275, label %279

275:                                              ; preds = %273
  %276 = getelementptr inbounds i32, ptr %258, i64 %262
  %277 = icmp eq ptr %259, %276
  br i1 %277, label %279, label %278

278:                                              ; preds = %275
  store ptr %276, ptr %230, align 8, !tbaa !58
  br label %279

279:                                              ; preds = %268, %273, %275, %278
  %280 = phi i64 [ %272, %268 ], [ %262, %273 ], [ %262, %275 ], [ %262, %278 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #31
  store i32 9999999, ptr %8, align 4, !tbaa !67
  %281 = load ptr, ptr %237, align 8, !tbaa !58
  %282 = load ptr, ptr %235, align 8, !tbaa !59
  %283 = ptrtoint ptr %281 to i64
  %284 = ptrtoint ptr %282 to i64
  %285 = sub i64 %283, %284
  %286 = ashr exact i64 %285, 2
  %287 = icmp ugt i64 %280, %286
  br i1 %287, label %288, label %293

288:                                              ; preds = %279
  %289 = sub nsw i64 %280, %286
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %235, ptr %281, i64 noundef %289, ptr noundef nonnull align 4 dereferenceable(4) %8)
  %290 = load i32, ptr %73, align 8, !tbaa !91
  %291 = add nsw i32 %290, 1
  %292 = sext i32 %291 to i64
  br label %299

293:                                              ; preds = %279
  %294 = icmp ult i64 %280, %286
  br i1 %294, label %295, label %299

295:                                              ; preds = %293
  %296 = getelementptr inbounds i32, ptr %282, i64 %280
  %297 = icmp eq ptr %281, %296
  br i1 %297, label %299, label %298

298:                                              ; preds = %295
  store ptr %296, ptr %237, align 8, !tbaa !58
  br label %299

299:                                              ; preds = %288, %293, %295, %298
  %300 = phi i64 [ %292, %288 ], [ %280, %293 ], [ %280, %295 ], [ %280, %298 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #31
  store i32 -9999999, ptr %9, align 4, !tbaa !67
  %301 = load ptr, ptr %244, align 8, !tbaa !58
  %302 = load ptr, ptr %242, align 8, !tbaa !59
  %303 = ptrtoint ptr %301 to i64
  %304 = ptrtoint ptr %302 to i64
  %305 = sub i64 %303, %304
  %306 = ashr exact i64 %305, 2
  %307 = icmp ugt i64 %300, %306
  br i1 %307, label %308, label %310

308:                                              ; preds = %299
  %309 = sub nsw i64 %300, %306
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %242, ptr %301, i64 noundef %309, ptr noundef nonnull align 4 dereferenceable(4) %9)
  br label %316

310:                                              ; preds = %299
  %311 = icmp ult i64 %300, %306
  br i1 %311, label %312, label %316

312:                                              ; preds = %310
  %313 = getelementptr inbounds i32, ptr %302, i64 %300
  %314 = icmp eq ptr %301, %313
  br i1 %314, label %316, label %315

315:                                              ; preds = %312
  store ptr %313, ptr %244, align 8, !tbaa !58
  br label %316

316:                                              ; preds = %308, %310, %312, %315
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #31
  %317 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 111
  %318 = load ptr, ptr %317, align 8, !tbaa !59
  %319 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 111, i32 0, i32 0, i32 0, i32 1
  %320 = load ptr, ptr %319, align 8, !tbaa !58
  %321 = icmp eq ptr %320, %318
  br i1 %321, label %323, label %322

322:                                              ; preds = %316
  store ptr %318, ptr %319, align 8, !tbaa !58
  br label %323

323:                                              ; preds = %316, %322
  %324 = load i32, ptr %73, align 8, !tbaa !91
  %325 = add nsw i32 %324, 1
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %329, label %327

327:                                              ; preds = %323
  %328 = sext i32 %325 to i64
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %317, i64 noundef %328)
  br label %329

329:                                              ; preds = %323, %327
  %330 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 112
  %331 = load ptr, ptr %330, align 8, !tbaa !59
  %332 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 112, i32 0, i32 0, i32 0, i32 1
  %333 = load ptr, ptr %332, align 8, !tbaa !58
  %334 = icmp eq ptr %333, %331
  br i1 %334, label %336, label %335

335:                                              ; preds = %329
  store ptr %331, ptr %332, align 8, !tbaa !58
  br label %336

336:                                              ; preds = %329, %335
  %337 = load i32, ptr %73, align 8, !tbaa !91
  %338 = add nsw i32 %337, 1
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %342, label %340

340:                                              ; preds = %336
  %341 = sext i32 %338 to i64
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %330, i64 noundef %341)
  br label %342

342:                                              ; preds = %336, %340
  %343 = load i64, ptr %168, align 8, !tbaa !43
  %344 = trunc i64 %343 to i32
  %345 = icmp sgt i32 %344, 0
  br i1 %345, label %346, label %856

346:                                              ; preds = %342
  %347 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %348 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %349 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 101, i32 0, i32 0, i32 0, i32 2
  %350 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 102, i32 0, i32 0, i32 0, i32 2
  %351 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100, i32 0, i32 0, i32 0, i32 2
  %352 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %353 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99, i32 0, i32 0, i32 0, i32 2
  %354 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %355 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98, i32 0, i32 0, i32 0, i32 2
  %356 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  br label %869

357:                                              ; preds = %172, %849
  %358 = phi i64 [ 0, %172 ], [ %851, %849 ]
  %359 = phi i32 [ 0, %172 ], [ %850, %849 ]
  %360 = load ptr, ptr %173, align 8, !tbaa !74
  %361 = getelementptr inbounds i32, ptr %360, i64 %358
  %362 = load i32, ptr %361, align 4, !tbaa !67
  %363 = zext i32 %362 to i64
  %364 = icmp eq i64 %358, %363
  br i1 %364, label %849, label %365

365:                                              ; preds = %357
  %366 = load ptr, ptr %174, align 8, !tbaa !62
  %367 = sext i32 %362 to i64
  %368 = getelementptr inbounds i32, ptr %366, i64 %367
  %369 = load i32, ptr %368, align 4, !tbaa !67
  %370 = getelementptr inbounds i32, ptr %366, i64 %358
  %371 = load i32, ptr %370, align 4, !tbaa !67
  %372 = icmp slt i32 %369, %371
  %373 = select i1 %372, i32 2, i32 1
  %374 = load ptr, ptr %12, align 8, !tbaa !58
  %375 = load ptr, ptr %175, align 8, !tbaa !110
  %376 = icmp eq ptr %374, %375
  br i1 %376, label %380, label %377

377:                                              ; preds = %365
  %378 = trunc i64 %358 to i32
  store i32 %378, ptr %374, align 4, !tbaa !67
  %379 = getelementptr inbounds i32, ptr %374, i64 1
  store ptr %379, ptr %12, align 8, !tbaa !58
  br label %411

380:                                              ; preds = %365
  %381 = load ptr, ptr %10, align 8, !tbaa !59
  %382 = ptrtoint ptr %374 to i64
  %383 = ptrtoint ptr %381 to i64
  %384 = sub i64 %382, %383
  %385 = icmp eq i64 %384, 9223372036854775804
  br i1 %385, label %386, label %387

386:                                              ; preds = %380
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

387:                                              ; preds = %380
  %388 = ashr exact i64 %384, 2
  %389 = call i64 @llvm.umax.i64(i64 %388, i64 1)
  %390 = add i64 %389, %388
  %391 = icmp ult i64 %390, %388
  %392 = icmp ugt i64 %390, 2305843009213693951
  %393 = or i1 %391, %392
  %394 = select i1 %393, i64 2305843009213693951, i64 %390
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %399, label %396

396:                                              ; preds = %387
  %397 = shl nuw nsw i64 %394, 2
  %398 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %397) #35
  br label %399

399:                                              ; preds = %396, %387
  %400 = phi ptr [ %398, %396 ], [ null, %387 ]
  %401 = getelementptr inbounds i32, ptr %400, i64 %388
  %402 = trunc i64 %358 to i32
  store i32 %402, ptr %401, align 4, !tbaa !67
  %403 = icmp sgt i64 %384, 0
  br i1 %403, label %404, label %405

404:                                              ; preds = %399
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %400, ptr align 4 %381, i64 %384, i1 false)
  br label %405

405:                                              ; preds = %404, %399
  %406 = getelementptr inbounds i32, ptr %401, i64 1
  %407 = icmp eq ptr %381, null
  br i1 %407, label %409, label %408

408:                                              ; preds = %405
  call void @_ZdlPv(ptr noundef nonnull %381) #33
  br label %409

409:                                              ; preds = %408, %405
  store ptr %400, ptr %10, align 8, !tbaa !59
  store ptr %406, ptr %12, align 8, !tbaa !58
  %410 = getelementptr inbounds i32, ptr %400, i64 %394
  store ptr %410, ptr %175, align 8, !tbaa !110
  br label %411

411:                                              ; preds = %377, %409
  %412 = load ptr, ptr %19, align 8, !tbaa !58
  %413 = load ptr, ptr %176, align 8, !tbaa !110
  %414 = icmp eq ptr %412, %413
  br i1 %414, label %417, label %415

415:                                              ; preds = %411
  store i32 %362, ptr %412, align 4, !tbaa !67
  %416 = getelementptr inbounds i32, ptr %412, i64 1
  store ptr %416, ptr %19, align 8, !tbaa !58
  br label %447

417:                                              ; preds = %411
  %418 = load ptr, ptr %17, align 8, !tbaa !59
  %419 = ptrtoint ptr %412 to i64
  %420 = ptrtoint ptr %418 to i64
  %421 = sub i64 %419, %420
  %422 = icmp eq i64 %421, 9223372036854775804
  br i1 %422, label %423, label %424

423:                                              ; preds = %417
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

424:                                              ; preds = %417
  %425 = ashr exact i64 %421, 2
  %426 = call i64 @llvm.umax.i64(i64 %425, i64 1)
  %427 = add i64 %426, %425
  %428 = icmp ult i64 %427, %425
  %429 = icmp ugt i64 %427, 2305843009213693951
  %430 = or i1 %428, %429
  %431 = select i1 %430, i64 2305843009213693951, i64 %427
  %432 = icmp eq i64 %431, 0
  br i1 %432, label %436, label %433

433:                                              ; preds = %424
  %434 = shl nuw nsw i64 %431, 2
  %435 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %434) #35
  br label %436

436:                                              ; preds = %433, %424
  %437 = phi ptr [ %435, %433 ], [ null, %424 ]
  %438 = getelementptr inbounds i32, ptr %437, i64 %425
  store i32 %362, ptr %438, align 4, !tbaa !67
  %439 = icmp sgt i64 %421, 0
  br i1 %439, label %440, label %441

440:                                              ; preds = %436
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %437, ptr align 4 %418, i64 %421, i1 false)
  br label %441

441:                                              ; preds = %440, %436
  %442 = getelementptr inbounds i32, ptr %438, i64 1
  %443 = icmp eq ptr %418, null
  br i1 %443, label %445, label %444

444:                                              ; preds = %441
  call void @_ZdlPv(ptr noundef nonnull %418) #33
  br label %445

445:                                              ; preds = %444, %441
  store ptr %437, ptr %17, align 8, !tbaa !59
  store ptr %442, ptr %19, align 8, !tbaa !58
  %446 = getelementptr inbounds i32, ptr %437, i64 %431
  store ptr %446, ptr %176, align 8, !tbaa !110
  br label %447

447:                                              ; preds = %415, %445
  %448 = load ptr, ptr %174, align 8, !tbaa !62
  %449 = getelementptr inbounds i32, ptr %448, i64 %358
  %450 = load i32, ptr %449, align 4, !tbaa !67
  %451 = getelementptr inbounds i32, ptr %448, i64 %367
  %452 = load i32, ptr %451, align 4, !tbaa !67
  %453 = icmp sgt i32 %450, %452
  %454 = call i32 @llvm.smax.i32(i32 %450, i32 %452)
  %455 = load ptr, ptr %40, align 8, !tbaa !58
  %456 = load ptr, ptr %177, align 8, !tbaa !110
  %457 = icmp eq ptr %455, %456
  br i1 %457, label %460, label %458

458:                                              ; preds = %447
  store i32 %454, ptr %455, align 4, !tbaa !67
  %459 = getelementptr inbounds i32, ptr %455, i64 1
  store ptr %459, ptr %40, align 8, !tbaa !58
  br label %494

460:                                              ; preds = %447
  %461 = load ptr, ptr %38, align 8, !tbaa !59
  %462 = ptrtoint ptr %455 to i64
  %463 = ptrtoint ptr %461 to i64
  %464 = sub i64 %462, %463
  %465 = icmp eq i64 %464, 9223372036854775804
  br i1 %465, label %466, label %467

466:                                              ; preds = %460
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

467:                                              ; preds = %460
  %468 = ashr exact i64 %464, 2
  %469 = call i64 @llvm.umax.i64(i64 %468, i64 1)
  %470 = add i64 %469, %468
  %471 = icmp ult i64 %470, %468
  %472 = icmp ugt i64 %470, 2305843009213693951
  %473 = or i1 %471, %472
  %474 = select i1 %473, i64 2305843009213693951, i64 %470
  %475 = icmp eq i64 %474, 0
  br i1 %475, label %482, label %476

476:                                              ; preds = %467
  %477 = shl nuw nsw i64 %474, 2
  %478 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %477) #35
  %479 = load i32, ptr %449, align 4
  %480 = load i32, ptr %451, align 4
  %481 = select i1 %453, i32 %479, i32 %480
  br label %482

482:                                              ; preds = %476, %467
  %483 = phi i32 [ %481, %476 ], [ %454, %467 ]
  %484 = phi ptr [ %478, %476 ], [ null, %467 ]
  %485 = getelementptr inbounds i32, ptr %484, i64 %468
  store i32 %483, ptr %485, align 4, !tbaa !67
  %486 = icmp sgt i64 %464, 0
  br i1 %486, label %487, label %488

487:                                              ; preds = %482
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %484, ptr align 4 %461, i64 %464, i1 false)
  br label %488

488:                                              ; preds = %487, %482
  %489 = getelementptr inbounds i32, ptr %485, i64 1
  %490 = icmp eq ptr %461, null
  br i1 %490, label %492, label %491

491:                                              ; preds = %488
  call void @_ZdlPv(ptr noundef nonnull %461) #33
  br label %492

492:                                              ; preds = %491, %488
  store ptr %484, ptr %38, align 8, !tbaa !59
  store ptr %489, ptr %40, align 8, !tbaa !58
  %493 = getelementptr inbounds i32, ptr %484, i64 %474
  store ptr %493, ptr %177, align 8, !tbaa !110
  br label %494

494:                                              ; preds = %458, %492
  %495 = load ptr, ptr %178, align 8, !tbaa !60
  %496 = getelementptr inbounds i32, ptr %495, i64 %367
  %497 = load i32, ptr %496, align 4, !tbaa !67
  %498 = mul nsw i32 %497, %373
  %499 = load ptr, ptr %26, align 8, !tbaa !58
  %500 = load ptr, ptr %179, align 8, !tbaa !110
  %501 = icmp eq ptr %499, %500
  br i1 %501, label %504, label %502

502:                                              ; preds = %494
  store i32 %498, ptr %499, align 4, !tbaa !67
  %503 = getelementptr inbounds i32, ptr %499, i64 1
  store ptr %503, ptr %26, align 8, !tbaa !58
  br label %534

504:                                              ; preds = %494
  %505 = load ptr, ptr %24, align 8, !tbaa !59
  %506 = ptrtoint ptr %499 to i64
  %507 = ptrtoint ptr %505 to i64
  %508 = sub i64 %506, %507
  %509 = icmp eq i64 %508, 9223372036854775804
  br i1 %509, label %510, label %511

510:                                              ; preds = %504
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

511:                                              ; preds = %504
  %512 = ashr exact i64 %508, 2
  %513 = call i64 @llvm.umax.i64(i64 %512, i64 1)
  %514 = add i64 %513, %512
  %515 = icmp ult i64 %514, %512
  %516 = icmp ugt i64 %514, 2305843009213693951
  %517 = or i1 %515, %516
  %518 = select i1 %517, i64 2305843009213693951, i64 %514
  %519 = icmp eq i64 %518, 0
  br i1 %519, label %523, label %520

520:                                              ; preds = %511
  %521 = shl nuw nsw i64 %518, 2
  %522 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %521) #35
  br label %523

523:                                              ; preds = %520, %511
  %524 = phi ptr [ %522, %520 ], [ null, %511 ]
  %525 = getelementptr inbounds i32, ptr %524, i64 %512
  store i32 %498, ptr %525, align 4, !tbaa !67
  %526 = icmp sgt i64 %508, 0
  br i1 %526, label %527, label %528

527:                                              ; preds = %523
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %524, ptr align 4 %505, i64 %508, i1 false)
  br label %528

528:                                              ; preds = %527, %523
  %529 = getelementptr inbounds i32, ptr %525, i64 1
  %530 = icmp eq ptr %505, null
  br i1 %530, label %532, label %531

531:                                              ; preds = %528
  call void @_ZdlPv(ptr noundef nonnull %505) #33
  br label %532

532:                                              ; preds = %531, %528
  store ptr %524, ptr %24, align 8, !tbaa !59
  store ptr %529, ptr %26, align 8, !tbaa !58
  %533 = getelementptr inbounds i32, ptr %524, i64 %518
  store ptr %533, ptr %179, align 8, !tbaa !110
  br label %534

534:                                              ; preds = %502, %532
  %535 = load ptr, ptr %174, align 8, !tbaa !62
  %536 = getelementptr inbounds i32, ptr %535, i64 %367
  %537 = load i32, ptr %536, align 4, !tbaa !67
  %538 = getelementptr inbounds i32, ptr %535, i64 %358
  %539 = load i32, ptr %538, align 4, !tbaa !67
  %540 = icmp slt i32 %537, %539
  %541 = load ptr, ptr %180, align 8, !tbaa !61
  br i1 %540, label %542, label %587

542:                                              ; preds = %534
  %543 = getelementptr inbounds i32, ptr %541, i64 %358
  %544 = load i32, ptr %543, align 4, !tbaa !67
  %545 = and i32 %544, -2147483647
  %546 = icmp eq i32 %545, 1
  br i1 %546, label %547, label %587

547:                                              ; preds = %542
  %548 = getelementptr inbounds i32, ptr %541, i64 %367
  %549 = load i32, ptr %548, align 4, !tbaa !67
  %550 = mul nsw i32 %549, %373
  %551 = add nsw i32 %550, 1
  %552 = load ptr, ptr %33, align 8, !tbaa !58
  %553 = load ptr, ptr %181, align 8, !tbaa !110
  %554 = icmp eq ptr %552, %553
  br i1 %554, label %557, label %555

555:                                              ; preds = %547
  store i32 %551, ptr %552, align 4, !tbaa !67
  %556 = getelementptr inbounds i32, ptr %552, i64 1
  store ptr %556, ptr %33, align 8, !tbaa !58
  br label %626

557:                                              ; preds = %547
  %558 = load ptr, ptr %31, align 8, !tbaa !59
  %559 = ptrtoint ptr %552 to i64
  %560 = ptrtoint ptr %558 to i64
  %561 = sub i64 %559, %560
  %562 = icmp eq i64 %561, 9223372036854775804
  br i1 %562, label %563, label %564

563:                                              ; preds = %557
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

564:                                              ; preds = %557
  %565 = ashr exact i64 %561, 2
  %566 = call i64 @llvm.umax.i64(i64 %565, i64 1)
  %567 = add i64 %566, %565
  %568 = icmp ult i64 %567, %565
  %569 = icmp ugt i64 %567, 2305843009213693951
  %570 = or i1 %568, %569
  %571 = select i1 %570, i64 2305843009213693951, i64 %567
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %576, label %573

573:                                              ; preds = %564
  %574 = shl nuw nsw i64 %571, 2
  %575 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %574) #35
  br label %576

576:                                              ; preds = %573, %564
  %577 = phi ptr [ %575, %573 ], [ null, %564 ]
  %578 = getelementptr inbounds i32, ptr %577, i64 %565
  store i32 %551, ptr %578, align 4, !tbaa !67
  %579 = icmp sgt i64 %561, 0
  br i1 %579, label %580, label %581

580:                                              ; preds = %576
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %577, ptr align 4 %558, i64 %561, i1 false)
  br label %581

581:                                              ; preds = %580, %576
  %582 = getelementptr inbounds i32, ptr %578, i64 1
  %583 = icmp eq ptr %558, null
  br i1 %583, label %585, label %584

584:                                              ; preds = %581
  call void @_ZdlPv(ptr noundef nonnull %558) #33
  br label %585

585:                                              ; preds = %584, %581
  store ptr %577, ptr %31, align 8, !tbaa !59
  store ptr %582, ptr %33, align 8, !tbaa !58
  %586 = getelementptr inbounds i32, ptr %577, i64 %571
  store ptr %586, ptr %181, align 8, !tbaa !110
  br label %626

587:                                              ; preds = %534, %542
  %588 = getelementptr inbounds i32, ptr %541, i64 %367
  %589 = load i32, ptr %588, align 4, !tbaa !67
  %590 = mul nsw i32 %589, %373
  %591 = load ptr, ptr %33, align 8, !tbaa !58
  %592 = load ptr, ptr %181, align 8, !tbaa !110
  %593 = icmp eq ptr %591, %592
  br i1 %593, label %596, label %594

594:                                              ; preds = %587
  store i32 %590, ptr %591, align 4, !tbaa !67
  %595 = getelementptr inbounds i32, ptr %591, i64 1
  store ptr %595, ptr %33, align 8, !tbaa !58
  br label %626

596:                                              ; preds = %587
  %597 = load ptr, ptr %31, align 8, !tbaa !59
  %598 = ptrtoint ptr %591 to i64
  %599 = ptrtoint ptr %597 to i64
  %600 = sub i64 %598, %599
  %601 = icmp eq i64 %600, 9223372036854775804
  br i1 %601, label %602, label %603

602:                                              ; preds = %596
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

603:                                              ; preds = %596
  %604 = ashr exact i64 %600, 2
  %605 = call i64 @llvm.umax.i64(i64 %604, i64 1)
  %606 = add i64 %605, %604
  %607 = icmp ult i64 %606, %604
  %608 = icmp ugt i64 %606, 2305843009213693951
  %609 = or i1 %607, %608
  %610 = select i1 %609, i64 2305843009213693951, i64 %606
  %611 = icmp eq i64 %610, 0
  br i1 %611, label %615, label %612

612:                                              ; preds = %603
  %613 = shl nuw nsw i64 %610, 2
  %614 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %613) #35
  br label %615

615:                                              ; preds = %612, %603
  %616 = phi ptr [ %614, %612 ], [ null, %603 ]
  %617 = getelementptr inbounds i32, ptr %616, i64 %604
  store i32 %590, ptr %617, align 4, !tbaa !67
  %618 = icmp sgt i64 %600, 0
  br i1 %618, label %619, label %620

619:                                              ; preds = %615
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %616, ptr align 4 %597, i64 %600, i1 false)
  br label %620

620:                                              ; preds = %619, %615
  %621 = getelementptr inbounds i32, ptr %617, i64 1
  %622 = icmp eq ptr %597, null
  br i1 %622, label %624, label %623

623:                                              ; preds = %620
  call void @_ZdlPv(ptr noundef nonnull %597) #33
  br label %624

624:                                              ; preds = %623, %620
  store ptr %616, ptr %31, align 8, !tbaa !59
  store ptr %621, ptr %33, align 8, !tbaa !58
  %625 = getelementptr inbounds i32, ptr %616, i64 %610
  store ptr %625, ptr %181, align 8, !tbaa !110
  br label %626

626:                                              ; preds = %624, %594, %585, %555
  %627 = add nsw i32 %359, 1
  %628 = load ptr, ptr %174, align 8, !tbaa !62
  %629 = getelementptr inbounds i32, ptr %628, i64 %367
  %630 = load i32, ptr %629, align 4, !tbaa !67
  %631 = getelementptr inbounds i32, ptr %628, i64 %358
  %632 = load i32, ptr %631, align 4, !tbaa !67
  %633 = icmp sgt i32 %630, %632
  br i1 %633, label %634, label %849

634:                                              ; preds = %626
  %635 = load ptr, ptr %180, align 8, !tbaa !61
  %636 = getelementptr inbounds i32, ptr %635, i64 %367
  %637 = load i32, ptr %636, align 4, !tbaa !67
  %638 = and i32 %637, 1
  %639 = icmp eq i32 %638, 0
  br i1 %639, label %640, label %849

640:                                              ; preds = %634
  %641 = load ptr, ptr %182, align 8, !tbaa !76
  %642 = getelementptr inbounds i32, ptr %641, i64 %367
  %643 = load i32, ptr %642, align 4, !tbaa !67
  %644 = icmp eq i32 %643, %362
  br i1 %644, label %849, label %645

645:                                              ; preds = %640
  %646 = load ptr, ptr %12, align 8, !tbaa !58
  %647 = load ptr, ptr %175, align 8, !tbaa !110
  %648 = icmp eq ptr %646, %647
  br i1 %648, label %652, label %649

649:                                              ; preds = %645
  %650 = trunc i64 %358 to i32
  store i32 %650, ptr %646, align 4, !tbaa !67
  %651 = getelementptr inbounds i32, ptr %646, i64 1
  store ptr %651, ptr %12, align 8, !tbaa !58
  br label %683

652:                                              ; preds = %645
  %653 = load ptr, ptr %10, align 8, !tbaa !59
  %654 = ptrtoint ptr %646 to i64
  %655 = ptrtoint ptr %653 to i64
  %656 = sub i64 %654, %655
  %657 = icmp eq i64 %656, 9223372036854775804
  br i1 %657, label %658, label %659

658:                                              ; preds = %652
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

659:                                              ; preds = %652
  %660 = ashr exact i64 %656, 2
  %661 = call i64 @llvm.umax.i64(i64 %660, i64 1)
  %662 = add i64 %661, %660
  %663 = icmp ult i64 %662, %660
  %664 = icmp ugt i64 %662, 2305843009213693951
  %665 = or i1 %663, %664
  %666 = select i1 %665, i64 2305843009213693951, i64 %662
  %667 = icmp eq i64 %666, 0
  br i1 %667, label %671, label %668

668:                                              ; preds = %659
  %669 = shl nuw nsw i64 %666, 2
  %670 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %669) #35
  br label %671

671:                                              ; preds = %668, %659
  %672 = phi ptr [ %670, %668 ], [ null, %659 ]
  %673 = getelementptr inbounds i32, ptr %672, i64 %660
  %674 = trunc i64 %358 to i32
  store i32 %674, ptr %673, align 4, !tbaa !67
  %675 = icmp sgt i64 %656, 0
  br i1 %675, label %676, label %677

676:                                              ; preds = %671
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %672, ptr align 4 %653, i64 %656, i1 false)
  br label %677

677:                                              ; preds = %676, %671
  %678 = getelementptr inbounds i32, ptr %673, i64 1
  %679 = icmp eq ptr %653, null
  br i1 %679, label %681, label %680

680:                                              ; preds = %677
  call void @_ZdlPv(ptr noundef nonnull %653) #33
  br label %681

681:                                              ; preds = %680, %677
  store ptr %672, ptr %10, align 8, !tbaa !59
  store ptr %678, ptr %12, align 8, !tbaa !58
  %682 = getelementptr inbounds i32, ptr %672, i64 %666
  store ptr %682, ptr %175, align 8, !tbaa !110
  br label %683

683:                                              ; preds = %649, %681
  %684 = load ptr, ptr %19, align 8, !tbaa !58
  %685 = load ptr, ptr %176, align 8, !tbaa !110
  %686 = icmp eq ptr %684, %685
  br i1 %686, label %689, label %687

687:                                              ; preds = %683
  store i32 %643, ptr %684, align 4, !tbaa !67
  %688 = getelementptr inbounds i32, ptr %684, i64 1
  store ptr %688, ptr %19, align 8, !tbaa !58
  br label %719

689:                                              ; preds = %683
  %690 = load ptr, ptr %17, align 8, !tbaa !59
  %691 = ptrtoint ptr %684 to i64
  %692 = ptrtoint ptr %690 to i64
  %693 = sub i64 %691, %692
  %694 = icmp eq i64 %693, 9223372036854775804
  br i1 %694, label %695, label %696

695:                                              ; preds = %689
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

696:                                              ; preds = %689
  %697 = ashr exact i64 %693, 2
  %698 = call i64 @llvm.umax.i64(i64 %697, i64 1)
  %699 = add i64 %698, %697
  %700 = icmp ult i64 %699, %697
  %701 = icmp ugt i64 %699, 2305843009213693951
  %702 = or i1 %700, %701
  %703 = select i1 %702, i64 2305843009213693951, i64 %699
  %704 = icmp eq i64 %703, 0
  br i1 %704, label %708, label %705

705:                                              ; preds = %696
  %706 = shl nuw nsw i64 %703, 2
  %707 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %706) #35
  br label %708

708:                                              ; preds = %705, %696
  %709 = phi ptr [ %707, %705 ], [ null, %696 ]
  %710 = getelementptr inbounds i32, ptr %709, i64 %697
  store i32 %643, ptr %710, align 4, !tbaa !67
  %711 = icmp sgt i64 %693, 0
  br i1 %711, label %712, label %713

712:                                              ; preds = %708
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %709, ptr align 4 %690, i64 %693, i1 false)
  br label %713

713:                                              ; preds = %712, %708
  %714 = getelementptr inbounds i32, ptr %710, i64 1
  %715 = icmp eq ptr %690, null
  br i1 %715, label %717, label %716

716:                                              ; preds = %713
  call void @_ZdlPv(ptr noundef nonnull %690) #33
  br label %717

717:                                              ; preds = %716, %713
  store ptr %709, ptr %17, align 8, !tbaa !59
  store ptr %714, ptr %19, align 8, !tbaa !58
  %718 = getelementptr inbounds i32, ptr %709, i64 %703
  store ptr %718, ptr %176, align 8, !tbaa !110
  br label %719

719:                                              ; preds = %687, %717
  %720 = load ptr, ptr %174, align 8, !tbaa !62
  %721 = getelementptr inbounds i32, ptr %720, i64 %358
  %722 = load i32, ptr %721, align 4, !tbaa !67
  %723 = sext i32 %643 to i64
  %724 = getelementptr inbounds i32, ptr %720, i64 %723
  %725 = load i32, ptr %724, align 4, !tbaa !67
  %726 = icmp sgt i32 %722, %725
  %727 = call i32 @llvm.smax.i32(i32 %722, i32 %725)
  %728 = load ptr, ptr %40, align 8, !tbaa !58
  %729 = load ptr, ptr %177, align 8, !tbaa !110
  %730 = icmp eq ptr %728, %729
  br i1 %730, label %733, label %731

731:                                              ; preds = %719
  store i32 %727, ptr %728, align 4, !tbaa !67
  %732 = getelementptr inbounds i32, ptr %728, i64 1
  store ptr %732, ptr %40, align 8, !tbaa !58
  br label %767

733:                                              ; preds = %719
  %734 = load ptr, ptr %38, align 8, !tbaa !59
  %735 = ptrtoint ptr %728 to i64
  %736 = ptrtoint ptr %734 to i64
  %737 = sub i64 %735, %736
  %738 = icmp eq i64 %737, 9223372036854775804
  br i1 %738, label %739, label %740

739:                                              ; preds = %733
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

740:                                              ; preds = %733
  %741 = ashr exact i64 %737, 2
  %742 = call i64 @llvm.umax.i64(i64 %741, i64 1)
  %743 = add i64 %742, %741
  %744 = icmp ult i64 %743, %741
  %745 = icmp ugt i64 %743, 2305843009213693951
  %746 = or i1 %744, %745
  %747 = select i1 %746, i64 2305843009213693951, i64 %743
  %748 = icmp eq i64 %747, 0
  br i1 %748, label %755, label %749

749:                                              ; preds = %740
  %750 = shl nuw nsw i64 %747, 2
  %751 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %750) #35
  %752 = load i32, ptr %721, align 4
  %753 = load i32, ptr %724, align 4
  %754 = select i1 %726, i32 %752, i32 %753
  br label %755

755:                                              ; preds = %749, %740
  %756 = phi i32 [ %754, %749 ], [ %727, %740 ]
  %757 = phi ptr [ %751, %749 ], [ null, %740 ]
  %758 = getelementptr inbounds i32, ptr %757, i64 %741
  store i32 %756, ptr %758, align 4, !tbaa !67
  %759 = icmp sgt i64 %737, 0
  br i1 %759, label %760, label %761

760:                                              ; preds = %755
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %757, ptr align 4 %734, i64 %737, i1 false)
  br label %761

761:                                              ; preds = %760, %755
  %762 = getelementptr inbounds i32, ptr %758, i64 1
  %763 = icmp eq ptr %734, null
  br i1 %763, label %765, label %764

764:                                              ; preds = %761
  call void @_ZdlPv(ptr noundef nonnull %734) #33
  br label %765

765:                                              ; preds = %764, %761
  store ptr %757, ptr %38, align 8, !tbaa !59
  store ptr %762, ptr %40, align 8, !tbaa !58
  %766 = getelementptr inbounds i32, ptr %757, i64 %747
  store ptr %766, ptr %177, align 8, !tbaa !110
  br label %767

767:                                              ; preds = %731, %765
  %768 = load ptr, ptr %178, align 8, !tbaa !60
  %769 = getelementptr inbounds i32, ptr %768, i64 %723
  %770 = load i32, ptr %769, align 4, !tbaa !67
  %771 = mul nsw i32 %770, %373
  %772 = load ptr, ptr %26, align 8, !tbaa !58
  %773 = load ptr, ptr %179, align 8, !tbaa !110
  %774 = icmp eq ptr %772, %773
  br i1 %774, label %777, label %775

775:                                              ; preds = %767
  store i32 %771, ptr %772, align 4, !tbaa !67
  %776 = getelementptr inbounds i32, ptr %772, i64 1
  store ptr %776, ptr %26, align 8, !tbaa !58
  br label %807

777:                                              ; preds = %767
  %778 = load ptr, ptr %24, align 8, !tbaa !59
  %779 = ptrtoint ptr %772 to i64
  %780 = ptrtoint ptr %778 to i64
  %781 = sub i64 %779, %780
  %782 = icmp eq i64 %781, 9223372036854775804
  br i1 %782, label %783, label %784

783:                                              ; preds = %777
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

784:                                              ; preds = %777
  %785 = ashr exact i64 %781, 2
  %786 = call i64 @llvm.umax.i64(i64 %785, i64 1)
  %787 = add i64 %786, %785
  %788 = icmp ult i64 %787, %785
  %789 = icmp ugt i64 %787, 2305843009213693951
  %790 = or i1 %788, %789
  %791 = select i1 %790, i64 2305843009213693951, i64 %787
  %792 = icmp eq i64 %791, 0
  br i1 %792, label %796, label %793

793:                                              ; preds = %784
  %794 = shl nuw nsw i64 %791, 2
  %795 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %794) #35
  br label %796

796:                                              ; preds = %793, %784
  %797 = phi ptr [ %795, %793 ], [ null, %784 ]
  %798 = getelementptr inbounds i32, ptr %797, i64 %785
  store i32 %771, ptr %798, align 4, !tbaa !67
  %799 = icmp sgt i64 %781, 0
  br i1 %799, label %800, label %801

800:                                              ; preds = %796
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %797, ptr align 4 %778, i64 %781, i1 false)
  br label %801

801:                                              ; preds = %800, %796
  %802 = getelementptr inbounds i32, ptr %798, i64 1
  %803 = icmp eq ptr %778, null
  br i1 %803, label %805, label %804

804:                                              ; preds = %801
  call void @_ZdlPv(ptr noundef nonnull %778) #33
  br label %805

805:                                              ; preds = %804, %801
  store ptr %797, ptr %24, align 8, !tbaa !59
  store ptr %802, ptr %26, align 8, !tbaa !58
  %806 = getelementptr inbounds i32, ptr %797, i64 %791
  store ptr %806, ptr %179, align 8, !tbaa !110
  br label %807

807:                                              ; preds = %775, %805
  %808 = load ptr, ptr %180, align 8, !tbaa !61
  %809 = getelementptr inbounds i32, ptr %808, i64 %723
  %810 = load i32, ptr %809, align 4, !tbaa !67
  %811 = mul nsw i32 %810, %373
  %812 = load ptr, ptr %33, align 8, !tbaa !58
  %813 = load ptr, ptr %181, align 8, !tbaa !110
  %814 = icmp eq ptr %812, %813
  br i1 %814, label %817, label %815

815:                                              ; preds = %807
  store i32 %811, ptr %812, align 4, !tbaa !67
  %816 = getelementptr inbounds i32, ptr %812, i64 1
  store ptr %816, ptr %33, align 8, !tbaa !58
  br label %847

817:                                              ; preds = %807
  %818 = load ptr, ptr %31, align 8, !tbaa !59
  %819 = ptrtoint ptr %812 to i64
  %820 = ptrtoint ptr %818 to i64
  %821 = sub i64 %819, %820
  %822 = icmp eq i64 %821, 9223372036854775804
  br i1 %822, label %823, label %824

823:                                              ; preds = %817
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

824:                                              ; preds = %817
  %825 = ashr exact i64 %821, 2
  %826 = call i64 @llvm.umax.i64(i64 %825, i64 1)
  %827 = add i64 %826, %825
  %828 = icmp ult i64 %827, %825
  %829 = icmp ugt i64 %827, 2305843009213693951
  %830 = or i1 %828, %829
  %831 = select i1 %830, i64 2305843009213693951, i64 %827
  %832 = icmp eq i64 %831, 0
  br i1 %832, label %836, label %833

833:                                              ; preds = %824
  %834 = shl nuw nsw i64 %831, 2
  %835 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %834) #35
  br label %836

836:                                              ; preds = %833, %824
  %837 = phi ptr [ %835, %833 ], [ null, %824 ]
  %838 = getelementptr inbounds i32, ptr %837, i64 %825
  store i32 %811, ptr %838, align 4, !tbaa !67
  %839 = icmp sgt i64 %821, 0
  br i1 %839, label %840, label %841

840:                                              ; preds = %836
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %837, ptr align 4 %818, i64 %821, i1 false)
  br label %841

841:                                              ; preds = %840, %836
  %842 = getelementptr inbounds i32, ptr %838, i64 1
  %843 = icmp eq ptr %818, null
  br i1 %843, label %845, label %844

844:                                              ; preds = %841
  call void @_ZdlPv(ptr noundef nonnull %818) #33
  br label %845

845:                                              ; preds = %844, %841
  store ptr %837, ptr %31, align 8, !tbaa !59
  store ptr %842, ptr %33, align 8, !tbaa !58
  %846 = getelementptr inbounds i32, ptr %837, i64 %831
  store ptr %846, ptr %181, align 8, !tbaa !110
  br label %847

847:                                              ; preds = %815, %845
  %848 = add nsw i32 %359, 2
  br label %849

849:                                              ; preds = %626, %634, %847, %640, %357
  %850 = phi i32 [ %359, %357 ], [ %627, %634 ], [ %627, %626 ], [ %848, %847 ], [ %627, %640 ]
  %851 = add nuw nsw i64 %358, 1
  %852 = load i64, ptr %168, align 8, !tbaa !43
  %853 = shl i64 %852, 32
  %854 = ashr exact i64 %853, 32
  %855 = icmp slt i64 %851, %854
  br i1 %855, label %357, label %183, !llvm.loop !203

856:                                              ; preds = %1361, %342
  %857 = phi i32 [ 0, %342 ], [ %1362, %1361 ]
  %858 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 82
  store i32 %857, ptr %858, align 4, !tbaa !195
  %859 = load i32, ptr %185, align 8, !tbaa !193
  %860 = icmp sgt i32 %859, 0
  br i1 %860, label %861, label %1410

861:                                              ; preds = %856
  %862 = load ptr, ptr %38, align 8, !tbaa !59
  %863 = load ptr, ptr %24, align 8, !tbaa !59
  %864 = load ptr, ptr %45, align 8, !tbaa !59
  %865 = load ptr, ptr %52, align 8, !tbaa !59
  %866 = load ptr, ptr %31, align 8, !tbaa !59
  %867 = load ptr, ptr %59, align 8, !tbaa !59
  %868 = load ptr, ptr %66, align 8, !tbaa !59
  br label %1377

869:                                              ; preds = %346, %1361
  %870 = phi i64 [ 0, %346 ], [ %1363, %1361 ]
  %871 = phi i32 [ 0, %346 ], [ %1362, %1361 ]
  %872 = load ptr, ptr %347, align 8, !tbaa !76
  %873 = getelementptr inbounds i32, ptr %872, i64 %870
  %874 = load i32, ptr %873, align 4, !tbaa !67
  %875 = zext i32 %874 to i64
  %876 = icmp eq i64 %870, %875
  br i1 %876, label %1361, label %877

877:                                              ; preds = %869
  %878 = load ptr, ptr %348, align 8, !tbaa !62
  %879 = sext i32 %874 to i64
  %880 = getelementptr inbounds i32, ptr %878, i64 %879
  %881 = load i32, ptr %880, align 4, !tbaa !67
  %882 = getelementptr inbounds i32, ptr %878, i64 %870
  %883 = load i32, ptr %882, align 4, !tbaa !67
  %884 = icmp slt i32 %881, %883
  %885 = select i1 %884, i32 2, i32 1
  %886 = load ptr, ptr %188, align 8, !tbaa !58
  %887 = load ptr, ptr %349, align 8, !tbaa !110
  %888 = icmp eq ptr %886, %887
  br i1 %888, label %892, label %889

889:                                              ; preds = %877
  %890 = trunc i64 %870 to i32
  store i32 %890, ptr %886, align 4, !tbaa !67
  %891 = getelementptr inbounds i32, ptr %886, i64 1
  store ptr %891, ptr %188, align 8, !tbaa !58
  br label %923

892:                                              ; preds = %877
  %893 = load ptr, ptr %186, align 8, !tbaa !59
  %894 = ptrtoint ptr %886 to i64
  %895 = ptrtoint ptr %893 to i64
  %896 = sub i64 %894, %895
  %897 = icmp eq i64 %896, 9223372036854775804
  br i1 %897, label %898, label %899

898:                                              ; preds = %892
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

899:                                              ; preds = %892
  %900 = ashr exact i64 %896, 2
  %901 = call i64 @llvm.umax.i64(i64 %900, i64 1)
  %902 = add i64 %901, %900
  %903 = icmp ult i64 %902, %900
  %904 = icmp ugt i64 %902, 2305843009213693951
  %905 = or i1 %903, %904
  %906 = select i1 %905, i64 2305843009213693951, i64 %902
  %907 = icmp eq i64 %906, 0
  br i1 %907, label %911, label %908

908:                                              ; preds = %899
  %909 = shl nuw nsw i64 %906, 2
  %910 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %909) #35
  br label %911

911:                                              ; preds = %908, %899
  %912 = phi ptr [ %910, %908 ], [ null, %899 ]
  %913 = getelementptr inbounds i32, ptr %912, i64 %900
  %914 = trunc i64 %870 to i32
  store i32 %914, ptr %913, align 4, !tbaa !67
  %915 = icmp sgt i64 %896, 0
  br i1 %915, label %916, label %917

916:                                              ; preds = %911
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %912, ptr align 4 %893, i64 %896, i1 false)
  br label %917

917:                                              ; preds = %916, %911
  %918 = getelementptr inbounds i32, ptr %913, i64 1
  %919 = icmp eq ptr %893, null
  br i1 %919, label %921, label %920

920:                                              ; preds = %917
  call void @_ZdlPv(ptr noundef nonnull %893) #33
  br label %921

921:                                              ; preds = %920, %917
  store ptr %912, ptr %186, align 8, !tbaa !59
  store ptr %918, ptr %188, align 8, !tbaa !58
  %922 = getelementptr inbounds i32, ptr %912, i64 %906
  store ptr %922, ptr %349, align 8, !tbaa !110
  br label %923

923:                                              ; preds = %889, %921
  %924 = load ptr, ptr %195, align 8, !tbaa !58
  %925 = load ptr, ptr %350, align 8, !tbaa !110
  %926 = icmp eq ptr %924, %925
  br i1 %926, label %929, label %927

927:                                              ; preds = %923
  store i32 %874, ptr %924, align 4, !tbaa !67
  %928 = getelementptr inbounds i32, ptr %924, i64 1
  store ptr %928, ptr %195, align 8, !tbaa !58
  br label %959

929:                                              ; preds = %923
  %930 = load ptr, ptr %193, align 8, !tbaa !59
  %931 = ptrtoint ptr %924 to i64
  %932 = ptrtoint ptr %930 to i64
  %933 = sub i64 %931, %932
  %934 = icmp eq i64 %933, 9223372036854775804
  br i1 %934, label %935, label %936

935:                                              ; preds = %929
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

936:                                              ; preds = %929
  %937 = ashr exact i64 %933, 2
  %938 = call i64 @llvm.umax.i64(i64 %937, i64 1)
  %939 = add i64 %938, %937
  %940 = icmp ult i64 %939, %937
  %941 = icmp ugt i64 %939, 2305843009213693951
  %942 = or i1 %940, %941
  %943 = select i1 %942, i64 2305843009213693951, i64 %939
  %944 = icmp eq i64 %943, 0
  br i1 %944, label %948, label %945

945:                                              ; preds = %936
  %946 = shl nuw nsw i64 %943, 2
  %947 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %946) #35
  br label %948

948:                                              ; preds = %945, %936
  %949 = phi ptr [ %947, %945 ], [ null, %936 ]
  %950 = getelementptr inbounds i32, ptr %949, i64 %937
  store i32 %874, ptr %950, align 4, !tbaa !67
  %951 = icmp sgt i64 %933, 0
  br i1 %951, label %952, label %953

952:                                              ; preds = %948
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %949, ptr align 4 %930, i64 %933, i1 false)
  br label %953

953:                                              ; preds = %952, %948
  %954 = getelementptr inbounds i32, ptr %950, i64 1
  %955 = icmp eq ptr %930, null
  br i1 %955, label %957, label %956

956:                                              ; preds = %953
  call void @_ZdlPv(ptr noundef nonnull %930) #33
  br label %957

957:                                              ; preds = %956, %953
  store ptr %949, ptr %193, align 8, !tbaa !59
  store ptr %954, ptr %195, align 8, !tbaa !58
  %958 = getelementptr inbounds i32, ptr %949, i64 %943
  store ptr %958, ptr %350, align 8, !tbaa !110
  br label %959

959:                                              ; preds = %927, %957
  %960 = load ptr, ptr %348, align 8, !tbaa !62
  %961 = getelementptr inbounds i32, ptr %960, i64 %870
  %962 = load i32, ptr %961, align 4, !tbaa !67
  %963 = getelementptr inbounds i32, ptr %960, i64 %879
  %964 = load i32, ptr %963, align 4, !tbaa !67
  %965 = icmp sgt i32 %962, %964
  %966 = call i32 @llvm.smax.i32(i32 %962, i32 %964)
  %967 = load ptr, ptr %216, align 8, !tbaa !58
  %968 = load ptr, ptr %351, align 8, !tbaa !110
  %969 = icmp eq ptr %967, %968
  br i1 %969, label %972, label %970

970:                                              ; preds = %959
  store i32 %966, ptr %967, align 4, !tbaa !67
  %971 = getelementptr inbounds i32, ptr %967, i64 1
  store ptr %971, ptr %216, align 8, !tbaa !58
  br label %1006

972:                                              ; preds = %959
  %973 = load ptr, ptr %214, align 8, !tbaa !59
  %974 = ptrtoint ptr %967 to i64
  %975 = ptrtoint ptr %973 to i64
  %976 = sub i64 %974, %975
  %977 = icmp eq i64 %976, 9223372036854775804
  br i1 %977, label %978, label %979

978:                                              ; preds = %972
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

979:                                              ; preds = %972
  %980 = ashr exact i64 %976, 2
  %981 = call i64 @llvm.umax.i64(i64 %980, i64 1)
  %982 = add i64 %981, %980
  %983 = icmp ult i64 %982, %980
  %984 = icmp ugt i64 %982, 2305843009213693951
  %985 = or i1 %983, %984
  %986 = select i1 %985, i64 2305843009213693951, i64 %982
  %987 = icmp eq i64 %986, 0
  br i1 %987, label %994, label %988

988:                                              ; preds = %979
  %989 = shl nuw nsw i64 %986, 2
  %990 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %989) #35
  %991 = load i32, ptr %961, align 4
  %992 = load i32, ptr %963, align 4
  %993 = select i1 %965, i32 %991, i32 %992
  br label %994

994:                                              ; preds = %988, %979
  %995 = phi i32 [ %993, %988 ], [ %966, %979 ]
  %996 = phi ptr [ %990, %988 ], [ null, %979 ]
  %997 = getelementptr inbounds i32, ptr %996, i64 %980
  store i32 %995, ptr %997, align 4, !tbaa !67
  %998 = icmp sgt i64 %976, 0
  br i1 %998, label %999, label %1000

999:                                              ; preds = %994
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %996, ptr align 4 %973, i64 %976, i1 false)
  br label %1000

1000:                                             ; preds = %999, %994
  %1001 = getelementptr inbounds i32, ptr %997, i64 1
  %1002 = icmp eq ptr %973, null
  br i1 %1002, label %1004, label %1003

1003:                                             ; preds = %1000
  call void @_ZdlPv(ptr noundef nonnull %973) #33
  br label %1004

1004:                                             ; preds = %1003, %1000
  store ptr %996, ptr %214, align 8, !tbaa !59
  store ptr %1001, ptr %216, align 8, !tbaa !58
  %1005 = getelementptr inbounds i32, ptr %996, i64 %986
  store ptr %1005, ptr %351, align 8, !tbaa !110
  br label %1006

1006:                                             ; preds = %970, %1004
  %1007 = load ptr, ptr %352, align 8, !tbaa !61
  %1008 = getelementptr inbounds i32, ptr %1007, i64 %879
  %1009 = load i32, ptr %1008, align 4, !tbaa !67
  %1010 = mul nsw i32 %1009, %885
  %1011 = load ptr, ptr %209, align 8, !tbaa !58
  %1012 = load ptr, ptr %353, align 8, !tbaa !110
  %1013 = icmp eq ptr %1011, %1012
  br i1 %1013, label %1016, label %1014

1014:                                             ; preds = %1006
  store i32 %1010, ptr %1011, align 4, !tbaa !67
  %1015 = getelementptr inbounds i32, ptr %1011, i64 1
  store ptr %1015, ptr %209, align 8, !tbaa !58
  br label %1046

1016:                                             ; preds = %1006
  %1017 = load ptr, ptr %207, align 8, !tbaa !59
  %1018 = ptrtoint ptr %1011 to i64
  %1019 = ptrtoint ptr %1017 to i64
  %1020 = sub i64 %1018, %1019
  %1021 = icmp eq i64 %1020, 9223372036854775804
  br i1 %1021, label %1022, label %1023

1022:                                             ; preds = %1016
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1023:                                             ; preds = %1016
  %1024 = ashr exact i64 %1020, 2
  %1025 = call i64 @llvm.umax.i64(i64 %1024, i64 1)
  %1026 = add i64 %1025, %1024
  %1027 = icmp ult i64 %1026, %1024
  %1028 = icmp ugt i64 %1026, 2305843009213693951
  %1029 = or i1 %1027, %1028
  %1030 = select i1 %1029, i64 2305843009213693951, i64 %1026
  %1031 = icmp eq i64 %1030, 0
  br i1 %1031, label %1035, label %1032

1032:                                             ; preds = %1023
  %1033 = shl nuw nsw i64 %1030, 2
  %1034 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1033) #35
  br label %1035

1035:                                             ; preds = %1032, %1023
  %1036 = phi ptr [ %1034, %1032 ], [ null, %1023 ]
  %1037 = getelementptr inbounds i32, ptr %1036, i64 %1024
  store i32 %1010, ptr %1037, align 4, !tbaa !67
  %1038 = icmp sgt i64 %1020, 0
  br i1 %1038, label %1039, label %1040

1039:                                             ; preds = %1035
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1036, ptr align 4 %1017, i64 %1020, i1 false)
  br label %1040

1040:                                             ; preds = %1039, %1035
  %1041 = getelementptr inbounds i32, ptr %1037, i64 1
  %1042 = icmp eq ptr %1017, null
  br i1 %1042, label %1044, label %1043

1043:                                             ; preds = %1040
  call void @_ZdlPv(ptr noundef nonnull %1017) #33
  br label %1044

1044:                                             ; preds = %1043, %1040
  store ptr %1036, ptr %207, align 8, !tbaa !59
  store ptr %1041, ptr %209, align 8, !tbaa !58
  %1045 = getelementptr inbounds i32, ptr %1036, i64 %1030
  store ptr %1045, ptr %353, align 8, !tbaa !110
  br label %1046

1046:                                             ; preds = %1014, %1044
  %1047 = load ptr, ptr %348, align 8, !tbaa !62
  %1048 = getelementptr inbounds i32, ptr %1047, i64 %879
  %1049 = load i32, ptr %1048, align 4, !tbaa !67
  %1050 = getelementptr inbounds i32, ptr %1047, i64 %870
  %1051 = load i32, ptr %1050, align 4, !tbaa !67
  %1052 = icmp slt i32 %1049, %1051
  %1053 = load ptr, ptr %354, align 8, !tbaa !60
  br i1 %1052, label %1054, label %1099

1054:                                             ; preds = %1046
  %1055 = getelementptr inbounds i32, ptr %1053, i64 %870
  %1056 = load i32, ptr %1055, align 4, !tbaa !67
  %1057 = and i32 %1056, -2147483647
  %1058 = icmp eq i32 %1057, 1
  br i1 %1058, label %1059, label %1099

1059:                                             ; preds = %1054
  %1060 = getelementptr inbounds i32, ptr %1053, i64 %879
  %1061 = load i32, ptr %1060, align 4, !tbaa !67
  %1062 = mul nsw i32 %1061, %885
  %1063 = add nsw i32 %1062, 1
  %1064 = load ptr, ptr %202, align 8, !tbaa !58
  %1065 = load ptr, ptr %355, align 8, !tbaa !110
  %1066 = icmp eq ptr %1064, %1065
  br i1 %1066, label %1069, label %1067

1067:                                             ; preds = %1059
  store i32 %1063, ptr %1064, align 4, !tbaa !67
  %1068 = getelementptr inbounds i32, ptr %1064, i64 1
  store ptr %1068, ptr %202, align 8, !tbaa !58
  br label %1138

1069:                                             ; preds = %1059
  %1070 = load ptr, ptr %200, align 8, !tbaa !59
  %1071 = ptrtoint ptr %1064 to i64
  %1072 = ptrtoint ptr %1070 to i64
  %1073 = sub i64 %1071, %1072
  %1074 = icmp eq i64 %1073, 9223372036854775804
  br i1 %1074, label %1075, label %1076

1075:                                             ; preds = %1069
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1076:                                             ; preds = %1069
  %1077 = ashr exact i64 %1073, 2
  %1078 = call i64 @llvm.umax.i64(i64 %1077, i64 1)
  %1079 = add i64 %1078, %1077
  %1080 = icmp ult i64 %1079, %1077
  %1081 = icmp ugt i64 %1079, 2305843009213693951
  %1082 = or i1 %1080, %1081
  %1083 = select i1 %1082, i64 2305843009213693951, i64 %1079
  %1084 = icmp eq i64 %1083, 0
  br i1 %1084, label %1088, label %1085

1085:                                             ; preds = %1076
  %1086 = shl nuw nsw i64 %1083, 2
  %1087 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1086) #35
  br label %1088

1088:                                             ; preds = %1085, %1076
  %1089 = phi ptr [ %1087, %1085 ], [ null, %1076 ]
  %1090 = getelementptr inbounds i32, ptr %1089, i64 %1077
  store i32 %1063, ptr %1090, align 4, !tbaa !67
  %1091 = icmp sgt i64 %1073, 0
  br i1 %1091, label %1092, label %1093

1092:                                             ; preds = %1088
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1089, ptr align 4 %1070, i64 %1073, i1 false)
  br label %1093

1093:                                             ; preds = %1092, %1088
  %1094 = getelementptr inbounds i32, ptr %1090, i64 1
  %1095 = icmp eq ptr %1070, null
  br i1 %1095, label %1097, label %1096

1096:                                             ; preds = %1093
  call void @_ZdlPv(ptr noundef nonnull %1070) #33
  br label %1097

1097:                                             ; preds = %1096, %1093
  store ptr %1089, ptr %200, align 8, !tbaa !59
  store ptr %1094, ptr %202, align 8, !tbaa !58
  %1098 = getelementptr inbounds i32, ptr %1089, i64 %1083
  store ptr %1098, ptr %355, align 8, !tbaa !110
  br label %1138

1099:                                             ; preds = %1046, %1054
  %1100 = getelementptr inbounds i32, ptr %1053, i64 %879
  %1101 = load i32, ptr %1100, align 4, !tbaa !67
  %1102 = mul nsw i32 %1101, %885
  %1103 = load ptr, ptr %202, align 8, !tbaa !58
  %1104 = load ptr, ptr %355, align 8, !tbaa !110
  %1105 = icmp eq ptr %1103, %1104
  br i1 %1105, label %1108, label %1106

1106:                                             ; preds = %1099
  store i32 %1102, ptr %1103, align 4, !tbaa !67
  %1107 = getelementptr inbounds i32, ptr %1103, i64 1
  store ptr %1107, ptr %202, align 8, !tbaa !58
  br label %1138

1108:                                             ; preds = %1099
  %1109 = load ptr, ptr %200, align 8, !tbaa !59
  %1110 = ptrtoint ptr %1103 to i64
  %1111 = ptrtoint ptr %1109 to i64
  %1112 = sub i64 %1110, %1111
  %1113 = icmp eq i64 %1112, 9223372036854775804
  br i1 %1113, label %1114, label %1115

1114:                                             ; preds = %1108
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1115:                                             ; preds = %1108
  %1116 = ashr exact i64 %1112, 2
  %1117 = call i64 @llvm.umax.i64(i64 %1116, i64 1)
  %1118 = add i64 %1117, %1116
  %1119 = icmp ult i64 %1118, %1116
  %1120 = icmp ugt i64 %1118, 2305843009213693951
  %1121 = or i1 %1119, %1120
  %1122 = select i1 %1121, i64 2305843009213693951, i64 %1118
  %1123 = icmp eq i64 %1122, 0
  br i1 %1123, label %1127, label %1124

1124:                                             ; preds = %1115
  %1125 = shl nuw nsw i64 %1122, 2
  %1126 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1125) #35
  br label %1127

1127:                                             ; preds = %1124, %1115
  %1128 = phi ptr [ %1126, %1124 ], [ null, %1115 ]
  %1129 = getelementptr inbounds i32, ptr %1128, i64 %1116
  store i32 %1102, ptr %1129, align 4, !tbaa !67
  %1130 = icmp sgt i64 %1112, 0
  br i1 %1130, label %1131, label %1132

1131:                                             ; preds = %1127
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1128, ptr align 4 %1109, i64 %1112, i1 false)
  br label %1132

1132:                                             ; preds = %1131, %1127
  %1133 = getelementptr inbounds i32, ptr %1129, i64 1
  %1134 = icmp eq ptr %1109, null
  br i1 %1134, label %1136, label %1135

1135:                                             ; preds = %1132
  call void @_ZdlPv(ptr noundef nonnull %1109) #33
  br label %1136

1136:                                             ; preds = %1135, %1132
  store ptr %1128, ptr %200, align 8, !tbaa !59
  store ptr %1133, ptr %202, align 8, !tbaa !58
  %1137 = getelementptr inbounds i32, ptr %1128, i64 %1122
  store ptr %1137, ptr %355, align 8, !tbaa !110
  br label %1138

1138:                                             ; preds = %1136, %1106, %1097, %1067
  %1139 = add nsw i32 %871, 1
  %1140 = load ptr, ptr %348, align 8, !tbaa !62
  %1141 = getelementptr inbounds i32, ptr %1140, i64 %879
  %1142 = load i32, ptr %1141, align 4, !tbaa !67
  %1143 = getelementptr inbounds i32, ptr %1140, i64 %870
  %1144 = load i32, ptr %1143, align 4, !tbaa !67
  %1145 = icmp sgt i32 %1142, %1144
  br i1 %1145, label %1146, label %1361

1146:                                             ; preds = %1138
  %1147 = load ptr, ptr %354, align 8, !tbaa !60
  %1148 = getelementptr inbounds i32, ptr %1147, i64 %879
  %1149 = load i32, ptr %1148, align 4, !tbaa !67
  %1150 = and i32 %1149, 1
  %1151 = icmp eq i32 %1150, 0
  br i1 %1151, label %1152, label %1361

1152:                                             ; preds = %1146
  %1153 = load ptr, ptr %356, align 8, !tbaa !74
  %1154 = getelementptr inbounds i32, ptr %1153, i64 %879
  %1155 = load i32, ptr %1154, align 4, !tbaa !67
  %1156 = icmp eq i32 %1155, %874
  br i1 %1156, label %1361, label %1157

1157:                                             ; preds = %1152
  %1158 = load ptr, ptr %188, align 8, !tbaa !58
  %1159 = load ptr, ptr %349, align 8, !tbaa !110
  %1160 = icmp eq ptr %1158, %1159
  br i1 %1160, label %1164, label %1161

1161:                                             ; preds = %1157
  %1162 = trunc i64 %870 to i32
  store i32 %1162, ptr %1158, align 4, !tbaa !67
  %1163 = getelementptr inbounds i32, ptr %1158, i64 1
  store ptr %1163, ptr %188, align 8, !tbaa !58
  br label %1195

1164:                                             ; preds = %1157
  %1165 = load ptr, ptr %186, align 8, !tbaa !59
  %1166 = ptrtoint ptr %1158 to i64
  %1167 = ptrtoint ptr %1165 to i64
  %1168 = sub i64 %1166, %1167
  %1169 = icmp eq i64 %1168, 9223372036854775804
  br i1 %1169, label %1170, label %1171

1170:                                             ; preds = %1164
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1171:                                             ; preds = %1164
  %1172 = ashr exact i64 %1168, 2
  %1173 = call i64 @llvm.umax.i64(i64 %1172, i64 1)
  %1174 = add i64 %1173, %1172
  %1175 = icmp ult i64 %1174, %1172
  %1176 = icmp ugt i64 %1174, 2305843009213693951
  %1177 = or i1 %1175, %1176
  %1178 = select i1 %1177, i64 2305843009213693951, i64 %1174
  %1179 = icmp eq i64 %1178, 0
  br i1 %1179, label %1183, label %1180

1180:                                             ; preds = %1171
  %1181 = shl nuw nsw i64 %1178, 2
  %1182 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1181) #35
  br label %1183

1183:                                             ; preds = %1180, %1171
  %1184 = phi ptr [ %1182, %1180 ], [ null, %1171 ]
  %1185 = getelementptr inbounds i32, ptr %1184, i64 %1172
  %1186 = trunc i64 %870 to i32
  store i32 %1186, ptr %1185, align 4, !tbaa !67
  %1187 = icmp sgt i64 %1168, 0
  br i1 %1187, label %1188, label %1189

1188:                                             ; preds = %1183
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1184, ptr align 4 %1165, i64 %1168, i1 false)
  br label %1189

1189:                                             ; preds = %1188, %1183
  %1190 = getelementptr inbounds i32, ptr %1185, i64 1
  %1191 = icmp eq ptr %1165, null
  br i1 %1191, label %1193, label %1192

1192:                                             ; preds = %1189
  call void @_ZdlPv(ptr noundef nonnull %1165) #33
  br label %1193

1193:                                             ; preds = %1192, %1189
  store ptr %1184, ptr %186, align 8, !tbaa !59
  store ptr %1190, ptr %188, align 8, !tbaa !58
  %1194 = getelementptr inbounds i32, ptr %1184, i64 %1178
  store ptr %1194, ptr %349, align 8, !tbaa !110
  br label %1195

1195:                                             ; preds = %1161, %1193
  %1196 = load ptr, ptr %195, align 8, !tbaa !58
  %1197 = load ptr, ptr %350, align 8, !tbaa !110
  %1198 = icmp eq ptr %1196, %1197
  br i1 %1198, label %1201, label %1199

1199:                                             ; preds = %1195
  store i32 %1155, ptr %1196, align 4, !tbaa !67
  %1200 = getelementptr inbounds i32, ptr %1196, i64 1
  store ptr %1200, ptr %195, align 8, !tbaa !58
  br label %1231

1201:                                             ; preds = %1195
  %1202 = load ptr, ptr %193, align 8, !tbaa !59
  %1203 = ptrtoint ptr %1196 to i64
  %1204 = ptrtoint ptr %1202 to i64
  %1205 = sub i64 %1203, %1204
  %1206 = icmp eq i64 %1205, 9223372036854775804
  br i1 %1206, label %1207, label %1208

1207:                                             ; preds = %1201
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1208:                                             ; preds = %1201
  %1209 = ashr exact i64 %1205, 2
  %1210 = call i64 @llvm.umax.i64(i64 %1209, i64 1)
  %1211 = add i64 %1210, %1209
  %1212 = icmp ult i64 %1211, %1209
  %1213 = icmp ugt i64 %1211, 2305843009213693951
  %1214 = or i1 %1212, %1213
  %1215 = select i1 %1214, i64 2305843009213693951, i64 %1211
  %1216 = icmp eq i64 %1215, 0
  br i1 %1216, label %1220, label %1217

1217:                                             ; preds = %1208
  %1218 = shl nuw nsw i64 %1215, 2
  %1219 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1218) #35
  br label %1220

1220:                                             ; preds = %1217, %1208
  %1221 = phi ptr [ %1219, %1217 ], [ null, %1208 ]
  %1222 = getelementptr inbounds i32, ptr %1221, i64 %1209
  store i32 %1155, ptr %1222, align 4, !tbaa !67
  %1223 = icmp sgt i64 %1205, 0
  br i1 %1223, label %1224, label %1225

1224:                                             ; preds = %1220
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1221, ptr align 4 %1202, i64 %1205, i1 false)
  br label %1225

1225:                                             ; preds = %1224, %1220
  %1226 = getelementptr inbounds i32, ptr %1222, i64 1
  %1227 = icmp eq ptr %1202, null
  br i1 %1227, label %1229, label %1228

1228:                                             ; preds = %1225
  call void @_ZdlPv(ptr noundef nonnull %1202) #33
  br label %1229

1229:                                             ; preds = %1228, %1225
  store ptr %1221, ptr %193, align 8, !tbaa !59
  store ptr %1226, ptr %195, align 8, !tbaa !58
  %1230 = getelementptr inbounds i32, ptr %1221, i64 %1215
  store ptr %1230, ptr %350, align 8, !tbaa !110
  br label %1231

1231:                                             ; preds = %1199, %1229
  %1232 = load ptr, ptr %348, align 8, !tbaa !62
  %1233 = getelementptr inbounds i32, ptr %1232, i64 %870
  %1234 = load i32, ptr %1233, align 4, !tbaa !67
  %1235 = sext i32 %1155 to i64
  %1236 = getelementptr inbounds i32, ptr %1232, i64 %1235
  %1237 = load i32, ptr %1236, align 4, !tbaa !67
  %1238 = icmp sgt i32 %1234, %1237
  %1239 = call i32 @llvm.smax.i32(i32 %1234, i32 %1237)
  %1240 = load ptr, ptr %216, align 8, !tbaa !58
  %1241 = load ptr, ptr %351, align 8, !tbaa !110
  %1242 = icmp eq ptr %1240, %1241
  br i1 %1242, label %1245, label %1243

1243:                                             ; preds = %1231
  store i32 %1239, ptr %1240, align 4, !tbaa !67
  %1244 = getelementptr inbounds i32, ptr %1240, i64 1
  store ptr %1244, ptr %216, align 8, !tbaa !58
  br label %1279

1245:                                             ; preds = %1231
  %1246 = load ptr, ptr %214, align 8, !tbaa !59
  %1247 = ptrtoint ptr %1240 to i64
  %1248 = ptrtoint ptr %1246 to i64
  %1249 = sub i64 %1247, %1248
  %1250 = icmp eq i64 %1249, 9223372036854775804
  br i1 %1250, label %1251, label %1252

1251:                                             ; preds = %1245
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1252:                                             ; preds = %1245
  %1253 = ashr exact i64 %1249, 2
  %1254 = call i64 @llvm.umax.i64(i64 %1253, i64 1)
  %1255 = add i64 %1254, %1253
  %1256 = icmp ult i64 %1255, %1253
  %1257 = icmp ugt i64 %1255, 2305843009213693951
  %1258 = or i1 %1256, %1257
  %1259 = select i1 %1258, i64 2305843009213693951, i64 %1255
  %1260 = icmp eq i64 %1259, 0
  br i1 %1260, label %1267, label %1261

1261:                                             ; preds = %1252
  %1262 = shl nuw nsw i64 %1259, 2
  %1263 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1262) #35
  %1264 = load i32, ptr %1233, align 4
  %1265 = load i32, ptr %1236, align 4
  %1266 = select i1 %1238, i32 %1264, i32 %1265
  br label %1267

1267:                                             ; preds = %1261, %1252
  %1268 = phi i32 [ %1266, %1261 ], [ %1239, %1252 ]
  %1269 = phi ptr [ %1263, %1261 ], [ null, %1252 ]
  %1270 = getelementptr inbounds i32, ptr %1269, i64 %1253
  store i32 %1268, ptr %1270, align 4, !tbaa !67
  %1271 = icmp sgt i64 %1249, 0
  br i1 %1271, label %1272, label %1273

1272:                                             ; preds = %1267
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1269, ptr align 4 %1246, i64 %1249, i1 false)
  br label %1273

1273:                                             ; preds = %1272, %1267
  %1274 = getelementptr inbounds i32, ptr %1270, i64 1
  %1275 = icmp eq ptr %1246, null
  br i1 %1275, label %1277, label %1276

1276:                                             ; preds = %1273
  call void @_ZdlPv(ptr noundef nonnull %1246) #33
  br label %1277

1277:                                             ; preds = %1276, %1273
  store ptr %1269, ptr %214, align 8, !tbaa !59
  store ptr %1274, ptr %216, align 8, !tbaa !58
  %1278 = getelementptr inbounds i32, ptr %1269, i64 %1259
  store ptr %1278, ptr %351, align 8, !tbaa !110
  br label %1279

1279:                                             ; preds = %1243, %1277
  %1280 = load ptr, ptr %352, align 8, !tbaa !61
  %1281 = getelementptr inbounds i32, ptr %1280, i64 %1235
  %1282 = load i32, ptr %1281, align 4, !tbaa !67
  %1283 = mul nsw i32 %1282, %885
  %1284 = load ptr, ptr %209, align 8, !tbaa !58
  %1285 = load ptr, ptr %353, align 8, !tbaa !110
  %1286 = icmp eq ptr %1284, %1285
  br i1 %1286, label %1289, label %1287

1287:                                             ; preds = %1279
  store i32 %1283, ptr %1284, align 4, !tbaa !67
  %1288 = getelementptr inbounds i32, ptr %1284, i64 1
  store ptr %1288, ptr %209, align 8, !tbaa !58
  br label %1319

1289:                                             ; preds = %1279
  %1290 = load ptr, ptr %207, align 8, !tbaa !59
  %1291 = ptrtoint ptr %1284 to i64
  %1292 = ptrtoint ptr %1290 to i64
  %1293 = sub i64 %1291, %1292
  %1294 = icmp eq i64 %1293, 9223372036854775804
  br i1 %1294, label %1295, label %1296

1295:                                             ; preds = %1289
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1296:                                             ; preds = %1289
  %1297 = ashr exact i64 %1293, 2
  %1298 = call i64 @llvm.umax.i64(i64 %1297, i64 1)
  %1299 = add i64 %1298, %1297
  %1300 = icmp ult i64 %1299, %1297
  %1301 = icmp ugt i64 %1299, 2305843009213693951
  %1302 = or i1 %1300, %1301
  %1303 = select i1 %1302, i64 2305843009213693951, i64 %1299
  %1304 = icmp eq i64 %1303, 0
  br i1 %1304, label %1308, label %1305

1305:                                             ; preds = %1296
  %1306 = shl nuw nsw i64 %1303, 2
  %1307 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1306) #35
  br label %1308

1308:                                             ; preds = %1305, %1296
  %1309 = phi ptr [ %1307, %1305 ], [ null, %1296 ]
  %1310 = getelementptr inbounds i32, ptr %1309, i64 %1297
  store i32 %1283, ptr %1310, align 4, !tbaa !67
  %1311 = icmp sgt i64 %1293, 0
  br i1 %1311, label %1312, label %1313

1312:                                             ; preds = %1308
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1309, ptr align 4 %1290, i64 %1293, i1 false)
  br label %1313

1313:                                             ; preds = %1312, %1308
  %1314 = getelementptr inbounds i32, ptr %1310, i64 1
  %1315 = icmp eq ptr %1290, null
  br i1 %1315, label %1317, label %1316

1316:                                             ; preds = %1313
  call void @_ZdlPv(ptr noundef nonnull %1290) #33
  br label %1317

1317:                                             ; preds = %1316, %1313
  store ptr %1309, ptr %207, align 8, !tbaa !59
  store ptr %1314, ptr %209, align 8, !tbaa !58
  %1318 = getelementptr inbounds i32, ptr %1309, i64 %1303
  store ptr %1318, ptr %353, align 8, !tbaa !110
  br label %1319

1319:                                             ; preds = %1287, %1317
  %1320 = load ptr, ptr %354, align 8, !tbaa !60
  %1321 = getelementptr inbounds i32, ptr %1320, i64 %1235
  %1322 = load i32, ptr %1321, align 4, !tbaa !67
  %1323 = mul nsw i32 %1322, %885
  %1324 = load ptr, ptr %202, align 8, !tbaa !58
  %1325 = load ptr, ptr %355, align 8, !tbaa !110
  %1326 = icmp eq ptr %1324, %1325
  br i1 %1326, label %1329, label %1327

1327:                                             ; preds = %1319
  store i32 %1323, ptr %1324, align 4, !tbaa !67
  %1328 = getelementptr inbounds i32, ptr %1324, i64 1
  store ptr %1328, ptr %202, align 8, !tbaa !58
  br label %1359

1329:                                             ; preds = %1319
  %1330 = load ptr, ptr %200, align 8, !tbaa !59
  %1331 = ptrtoint ptr %1324 to i64
  %1332 = ptrtoint ptr %1330 to i64
  %1333 = sub i64 %1331, %1332
  %1334 = icmp eq i64 %1333, 9223372036854775804
  br i1 %1334, label %1335, label %1336

1335:                                             ; preds = %1329
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1336:                                             ; preds = %1329
  %1337 = ashr exact i64 %1333, 2
  %1338 = call i64 @llvm.umax.i64(i64 %1337, i64 1)
  %1339 = add i64 %1338, %1337
  %1340 = icmp ult i64 %1339, %1337
  %1341 = icmp ugt i64 %1339, 2305843009213693951
  %1342 = or i1 %1340, %1341
  %1343 = select i1 %1342, i64 2305843009213693951, i64 %1339
  %1344 = icmp eq i64 %1343, 0
  br i1 %1344, label %1348, label %1345

1345:                                             ; preds = %1336
  %1346 = shl nuw nsw i64 %1343, 2
  %1347 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1346) #35
  br label %1348

1348:                                             ; preds = %1345, %1336
  %1349 = phi ptr [ %1347, %1345 ], [ null, %1336 ]
  %1350 = getelementptr inbounds i32, ptr %1349, i64 %1337
  store i32 %1323, ptr %1350, align 4, !tbaa !67
  %1351 = icmp sgt i64 %1333, 0
  br i1 %1351, label %1352, label %1353

1352:                                             ; preds = %1348
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1349, ptr align 4 %1330, i64 %1333, i1 false)
  br label %1353

1353:                                             ; preds = %1352, %1348
  %1354 = getelementptr inbounds i32, ptr %1350, i64 1
  %1355 = icmp eq ptr %1330, null
  br i1 %1355, label %1357, label %1356

1356:                                             ; preds = %1353
  call void @_ZdlPv(ptr noundef nonnull %1330) #33
  br label %1357

1357:                                             ; preds = %1356, %1353
  store ptr %1349, ptr %200, align 8, !tbaa !59
  store ptr %1354, ptr %202, align 8, !tbaa !58
  %1358 = getelementptr inbounds i32, ptr %1349, i64 %1343
  store ptr %1358, ptr %355, align 8, !tbaa !110
  br label %1359

1359:                                             ; preds = %1327, %1357
  %1360 = add nsw i32 %871, 2
  br label %1361

1361:                                             ; preds = %1138, %1146, %1359, %1152, %869
  %1362 = phi i32 [ %871, %869 ], [ %1139, %1146 ], [ %1139, %1138 ], [ %1360, %1359 ], [ %1139, %1152 ]
  %1363 = add nuw nsw i64 %870, 1
  %1364 = load i64, ptr %168, align 8, !tbaa !43
  %1365 = shl i64 %1364, 32
  %1366 = ashr exact i64 %1365, 32
  %1367 = icmp slt i64 %1363, %1366
  br i1 %1367, label %869, label %856, !llvm.loop !204

1368:                                             ; preds = %1405
  %1369 = icmp sgt i32 %1407, 0
  br i1 %1369, label %1370, label %1410

1370:                                             ; preds = %1368
  %1371 = load ptr, ptr %38, align 8, !tbaa !59
  %1372 = load ptr, ptr %52, align 8, !tbaa !59
  %1373 = load ptr, ptr %45, align 8, !tbaa !59
  %1374 = load ptr, ptr %24, align 8
  %1375 = load ptr, ptr %59, align 8
  %1376 = load ptr, ptr %31, align 8
  br label %1420

1377:                                             ; preds = %861, %1405
  %1378 = phi i64 [ 0, %861 ], [ %1406, %1405 ]
  %1379 = getelementptr inbounds i32, ptr %862, i64 %1378
  %1380 = load i32, ptr %1379, align 4, !tbaa !67
  %1381 = getelementptr inbounds i32, ptr %863, i64 %1378
  %1382 = load i32, ptr %1381, align 4, !tbaa !67
  %1383 = sext i32 %1380 to i64
  %1384 = getelementptr inbounds i32, ptr %864, i64 %1383
  %1385 = load i32, ptr %1384, align 4, !tbaa !67
  %1386 = icmp slt i32 %1382, %1385
  br i1 %1386, label %1387, label %1388

1387:                                             ; preds = %1377
  store i32 %1382, ptr %1384, align 4, !tbaa !67
  br label %1388

1388:                                             ; preds = %1387, %1377
  %1389 = getelementptr inbounds i32, ptr %865, i64 %1383
  %1390 = load i32, ptr %1389, align 4, !tbaa !67
  %1391 = icmp sgt i32 %1382, %1390
  br i1 %1391, label %1392, label %1393

1392:                                             ; preds = %1388
  store i32 %1382, ptr %1389, align 4, !tbaa !67
  br label %1393

1393:                                             ; preds = %1392, %1388
  %1394 = getelementptr inbounds i32, ptr %866, i64 %1378
  %1395 = load i32, ptr %1394, align 4, !tbaa !67
  %1396 = getelementptr inbounds i32, ptr %867, i64 %1383
  %1397 = load i32, ptr %1396, align 4, !tbaa !67
  %1398 = icmp slt i32 %1395, %1397
  br i1 %1398, label %1399, label %1400

1399:                                             ; preds = %1393
  store i32 %1395, ptr %1396, align 4, !tbaa !67
  br label %1400

1400:                                             ; preds = %1399, %1393
  %1401 = getelementptr inbounds i32, ptr %868, i64 %1383
  %1402 = load i32, ptr %1401, align 4, !tbaa !67
  %1403 = icmp sgt i32 %1395, %1402
  br i1 %1403, label %1404, label %1405

1404:                                             ; preds = %1400
  store i32 %1395, ptr %1401, align 4, !tbaa !67
  br label %1405

1405:                                             ; preds = %1404, %1400
  %1406 = add nuw nsw i64 %1378, 1
  %1407 = load i32, ptr %185, align 8, !tbaa !193
  %1408 = sext i32 %1407 to i64
  %1409 = icmp slt i64 %1406, %1408
  br i1 %1409, label %1377, label %1368, !llvm.loop !205

1410:                                             ; preds = %1441, %856, %1368
  %1411 = load i32, ptr %73, align 8, !tbaa !91
  %1412 = icmp slt i32 %1411, 0
  br i1 %1412, label %1446, label %1413

1413:                                             ; preds = %1410
  %1414 = load ptr, ptr %45, align 8, !tbaa !59
  %1415 = load ptr, ptr %142, align 8, !tbaa !59
  %1416 = load ptr, ptr %59, align 8, !tbaa !59
  %1417 = load ptr, ptr %155, align 8, !tbaa !59
  %1418 = load ptr, ptr %52, align 8, !tbaa !59
  %1419 = load ptr, ptr %66, align 8, !tbaa !59
  br label %1457

1420:                                             ; preds = %1370, %1441
  %1421 = phi i32 [ %1407, %1370 ], [ %1442, %1441 ]
  %1422 = phi i64 [ 0, %1370 ], [ %1443, %1441 ]
  %1423 = getelementptr inbounds i32, ptr %1371, i64 %1422
  %1424 = load i32, ptr %1423, align 4, !tbaa !67
  %1425 = sext i32 %1424 to i64
  %1426 = getelementptr inbounds i32, ptr %1372, i64 %1425
  %1427 = load i32, ptr %1426, align 4, !tbaa !67
  %1428 = getelementptr inbounds i32, ptr %1373, i64 %1425
  %1429 = load i32, ptr %1428, align 4, !tbaa !67
  %1430 = icmp slt i32 %1427, %1429
  br i1 %1430, label %1441, label %1431

1431:                                             ; preds = %1420
  %1432 = getelementptr inbounds i32, ptr %1374, i64 %1422
  %1433 = load i32, ptr %1432, align 4, !tbaa !67
  %1434 = sub nsw i32 %1433, %1429
  store i32 %1434, ptr %1432, align 4, !tbaa !67
  %1435 = getelementptr inbounds i32, ptr %1375, i64 %1425
  %1436 = load i32, ptr %1435, align 4, !tbaa !67
  %1437 = getelementptr inbounds i32, ptr %1376, i64 %1422
  %1438 = load i32, ptr %1437, align 4, !tbaa !67
  %1439 = sub nsw i32 %1438, %1436
  store i32 %1439, ptr %1437, align 4, !tbaa !67
  %1440 = load i32, ptr %185, align 8, !tbaa !193
  br label %1441

1441:                                             ; preds = %1420, %1431
  %1442 = phi i32 [ %1421, %1420 ], [ %1440, %1431 ]
  %1443 = add nuw nsw i64 %1422, 1
  %1444 = sext i32 %1442 to i64
  %1445 = icmp slt i64 %1443, %1444
  br i1 %1445, label %1420, label %1410, !llvm.loop !206

1446:                                             ; preds = %1457, %1410
  %1447 = load i32, ptr %858, align 4, !tbaa !195
  %1448 = icmp sgt i32 %1447, 0
  br i1 %1448, label %1449, label %1519

1449:                                             ; preds = %1446
  %1450 = load ptr, ptr %214, align 8, !tbaa !59
  %1451 = load ptr, ptr %200, align 8, !tbaa !59
  %1452 = load ptr, ptr %221, align 8, !tbaa !59
  %1453 = load ptr, ptr %228, align 8, !tbaa !59
  %1454 = load ptr, ptr %207, align 8, !tbaa !59
  %1455 = load ptr, ptr %235, align 8, !tbaa !59
  %1456 = load ptr, ptr %242, align 8, !tbaa !59
  br label %1486

1457:                                             ; preds = %1413, %1457
  %1458 = phi i64 [ 0, %1413 ], [ %1473, %1457 ]
  %1459 = getelementptr inbounds i32, ptr %1414, i64 %1458
  %1460 = load i32, ptr %1459, align 4, !tbaa !67
  %1461 = getelementptr inbounds i32, ptr %1415, i64 %1458
  store i32 %1460, ptr %1461, align 4, !tbaa !67
  %1462 = getelementptr inbounds i32, ptr %1416, i64 %1458
  %1463 = load i32, ptr %1462, align 4, !tbaa !67
  %1464 = getelementptr inbounds i32, ptr %1417, i64 %1458
  store i32 %1463, ptr %1464, align 4, !tbaa !67
  %1465 = load i32, ptr %1459, align 4, !tbaa !67
  %1466 = getelementptr inbounds i32, ptr %1418, i64 %1458
  %1467 = load i32, ptr %1466, align 4, !tbaa !67
  %1468 = sub nsw i32 %1467, %1465
  store i32 %1468, ptr %1466, align 4, !tbaa !67
  %1469 = load i32, ptr %1462, align 4, !tbaa !67
  %1470 = getelementptr inbounds i32, ptr %1419, i64 %1458
  %1471 = load i32, ptr %1470, align 4, !tbaa !67
  %1472 = sub nsw i32 %1471, %1469
  store i32 %1472, ptr %1470, align 4, !tbaa !67
  store i32 0, ptr %1459, align 4, !tbaa !67
  store i32 0, ptr %1462, align 4, !tbaa !67
  %1473 = add nuw nsw i64 %1458, 1
  %1474 = load i32, ptr %73, align 8, !tbaa !91
  %1475 = sext i32 %1474 to i64
  %1476 = icmp slt i64 %1458, %1475
  br i1 %1476, label %1457, label %1446, !llvm.loop !207

1477:                                             ; preds = %1514
  %1478 = icmp sgt i32 %1516, 0
  br i1 %1478, label %1479, label %1519

1479:                                             ; preds = %1477
  %1480 = load ptr, ptr %214, align 8, !tbaa !59
  %1481 = load ptr, ptr %228, align 8, !tbaa !59
  %1482 = load ptr, ptr %221, align 8, !tbaa !59
  %1483 = load ptr, ptr %200, align 8
  %1484 = load ptr, ptr %235, align 8
  %1485 = load ptr, ptr %207, align 8
  br label %1529

1486:                                             ; preds = %1449, %1514
  %1487 = phi i64 [ 0, %1449 ], [ %1515, %1514 ]
  %1488 = getelementptr inbounds i32, ptr %1450, i64 %1487
  %1489 = load i32, ptr %1488, align 4, !tbaa !67
  %1490 = getelementptr inbounds i32, ptr %1451, i64 %1487
  %1491 = load i32, ptr %1490, align 4, !tbaa !67
  %1492 = sext i32 %1489 to i64
  %1493 = getelementptr inbounds i32, ptr %1452, i64 %1492
  %1494 = load i32, ptr %1493, align 4, !tbaa !67
  %1495 = icmp slt i32 %1491, %1494
  br i1 %1495, label %1496, label %1497

1496:                                             ; preds = %1486
  store i32 %1491, ptr %1493, align 4, !tbaa !67
  br label %1497

1497:                                             ; preds = %1496, %1486
  %1498 = getelementptr inbounds i32, ptr %1453, i64 %1492
  %1499 = load i32, ptr %1498, align 4, !tbaa !67
  %1500 = icmp sgt i32 %1491, %1499
  br i1 %1500, label %1501, label %1502

1501:                                             ; preds = %1497
  store i32 %1491, ptr %1498, align 4, !tbaa !67
  br label %1502

1502:                                             ; preds = %1501, %1497
  %1503 = getelementptr inbounds i32, ptr %1454, i64 %1487
  %1504 = load i32, ptr %1503, align 4, !tbaa !67
  %1505 = getelementptr inbounds i32, ptr %1455, i64 %1492
  %1506 = load i32, ptr %1505, align 4, !tbaa !67
  %1507 = icmp slt i32 %1504, %1506
  br i1 %1507, label %1508, label %1509

1508:                                             ; preds = %1502
  store i32 %1504, ptr %1505, align 4, !tbaa !67
  br label %1509

1509:                                             ; preds = %1508, %1502
  %1510 = getelementptr inbounds i32, ptr %1456, i64 %1492
  %1511 = load i32, ptr %1510, align 4, !tbaa !67
  %1512 = icmp sgt i32 %1504, %1511
  br i1 %1512, label %1513, label %1514

1513:                                             ; preds = %1509
  store i32 %1504, ptr %1510, align 4, !tbaa !67
  br label %1514

1514:                                             ; preds = %1513, %1509
  %1515 = add nuw nsw i64 %1487, 1
  %1516 = load i32, ptr %858, align 4, !tbaa !195
  %1517 = sext i32 %1516 to i64
  %1518 = icmp slt i64 %1515, %1517
  br i1 %1518, label %1486, label %1477, !llvm.loop !208

1519:                                             ; preds = %1550, %1446, %1477
  %1520 = load i32, ptr %73, align 8, !tbaa !91
  %1521 = icmp slt i32 %1520, 0
  br i1 %1521, label %1555, label %1522

1522:                                             ; preds = %1519
  %1523 = load ptr, ptr %221, align 8, !tbaa !59
  %1524 = load ptr, ptr %317, align 8, !tbaa !59
  %1525 = load ptr, ptr %235, align 8, !tbaa !59
  %1526 = load ptr, ptr %330, align 8, !tbaa !59
  %1527 = load ptr, ptr %228, align 8, !tbaa !59
  %1528 = load ptr, ptr %242, align 8, !tbaa !59
  br label %1556

1529:                                             ; preds = %1479, %1550
  %1530 = phi i32 [ %1516, %1479 ], [ %1551, %1550 ]
  %1531 = phi i64 [ 0, %1479 ], [ %1552, %1550 ]
  %1532 = getelementptr inbounds i32, ptr %1480, i64 %1531
  %1533 = load i32, ptr %1532, align 4, !tbaa !67
  %1534 = sext i32 %1533 to i64
  %1535 = getelementptr inbounds i32, ptr %1481, i64 %1534
  %1536 = load i32, ptr %1535, align 4, !tbaa !67
  %1537 = getelementptr inbounds i32, ptr %1482, i64 %1534
  %1538 = load i32, ptr %1537, align 4, !tbaa !67
  %1539 = icmp slt i32 %1536, %1538
  br i1 %1539, label %1550, label %1540

1540:                                             ; preds = %1529
  %1541 = getelementptr inbounds i32, ptr %1483, i64 %1531
  %1542 = load i32, ptr %1541, align 4, !tbaa !67
  %1543 = sub nsw i32 %1542, %1538
  store i32 %1543, ptr %1541, align 4, !tbaa !67
  %1544 = getelementptr inbounds i32, ptr %1484, i64 %1534
  %1545 = load i32, ptr %1544, align 4, !tbaa !67
  %1546 = getelementptr inbounds i32, ptr %1485, i64 %1531
  %1547 = load i32, ptr %1546, align 4, !tbaa !67
  %1548 = sub nsw i32 %1547, %1545
  store i32 %1548, ptr %1546, align 4, !tbaa !67
  %1549 = load i32, ptr %858, align 4, !tbaa !195
  br label %1550

1550:                                             ; preds = %1529, %1540
  %1551 = phi i32 [ %1530, %1529 ], [ %1549, %1540 ]
  %1552 = add nuw nsw i64 %1531, 1
  %1553 = sext i32 %1551 to i64
  %1554 = icmp slt i64 %1552, %1553
  br i1 %1554, label %1529, label %1519, !llvm.loop !209

1555:                                             ; preds = %1556, %1519
  ret void

1556:                                             ; preds = %1522, %1556
  %1557 = phi i64 [ 0, %1522 ], [ %1572, %1556 ]
  %1558 = getelementptr inbounds i32, ptr %1523, i64 %1557
  %1559 = load i32, ptr %1558, align 4, !tbaa !67
  %1560 = getelementptr inbounds i32, ptr %1524, i64 %1557
  store i32 %1559, ptr %1560, align 4, !tbaa !67
  %1561 = getelementptr inbounds i32, ptr %1525, i64 %1557
  %1562 = load i32, ptr %1561, align 4, !tbaa !67
  %1563 = getelementptr inbounds i32, ptr %1526, i64 %1557
  store i32 %1562, ptr %1563, align 4, !tbaa !67
  %1564 = load i32, ptr %1558, align 4, !tbaa !67
  %1565 = getelementptr inbounds i32, ptr %1527, i64 %1557
  %1566 = load i32, ptr %1565, align 4, !tbaa !67
  %1567 = sub nsw i32 %1566, %1564
  store i32 %1567, ptr %1565, align 4, !tbaa !67
  %1568 = load i32, ptr %1561, align 4, !tbaa !67
  %1569 = getelementptr inbounds i32, ptr %1528, i64 %1557
  %1570 = load i32, ptr %1569, align 4, !tbaa !67
  %1571 = sub nsw i32 %1570, %1568
  store i32 %1571, ptr %1569, align 4, !tbaa !67
  store i32 0, ptr %1558, align 4, !tbaa !67
  store i32 0, ptr %1561, align 4, !tbaa !67
  %1572 = add nuw nsw i64 %1557, 1
  %1573 = load i32, ptr %73, align 8, !tbaa !91
  %1574 = sext i32 %1573 to i64
  %1575 = icmp slt i64 %1557, %1574
  br i1 %1575, label %1556, label %1555, !llvm.loop !210
}

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh24calc_face_list_wbidirmapEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 86
  %19 = load ptr, ptr %18, align 8, !tbaa !59
  %20 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 86, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !58
  %22 = icmp eq ptr %21, %19
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  store ptr %19, ptr %20, align 8, !tbaa !58
  br label %24

24:                                               ; preds = %1, %23
  %25 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 87
  %26 = load ptr, ptr %25, align 8, !tbaa !59
  %27 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 87, i32 0, i32 0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !58
  %29 = icmp eq ptr %28, %26
  br i1 %29, label %31, label %30

30:                                               ; preds = %24
  store ptr %26, ptr %27, align 8, !tbaa !58
  br label %31

31:                                               ; preds = %24, %30
  %32 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 88
  %33 = load ptr, ptr %32, align 8, !tbaa !59
  %34 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 88, i32 0, i32 0, i32 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !58
  %36 = icmp eq ptr %35, %33
  br i1 %36, label %38, label %37

37:                                               ; preds = %31
  store ptr %33, ptr %34, align 8, !tbaa !58
  br label %38

38:                                               ; preds = %31, %37
  %39 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 89
  %40 = load ptr, ptr %39, align 8, !tbaa !59
  %41 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 89, i32 0, i32 0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !58
  %43 = icmp eq ptr %42, %40
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  store ptr %40, ptr %41, align 8, !tbaa !58
  br label %45

45:                                               ; preds = %38, %44
  %46 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 90
  %47 = load ptr, ptr %46, align 8, !tbaa !59
  %48 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 90, i32 0, i32 0, i32 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !58
  %50 = icmp eq ptr %49, %47
  br i1 %50, label %52, label %51

51:                                               ; preds = %45
  store ptr %47, ptr %48, align 8, !tbaa !58
  br label %52

52:                                               ; preds = %45, %51
  %53 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 91
  %54 = load ptr, ptr %53, align 8, !tbaa !59
  %55 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 91, i32 0, i32 0, i32 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !58
  %57 = icmp eq ptr %56, %54
  br i1 %57, label %59, label %58

58:                                               ; preds = %52
  store ptr %54, ptr %55, align 8, !tbaa !58
  br label %59

59:                                               ; preds = %52, %58
  %60 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %61 = load i64, ptr %60, align 8, !tbaa !43
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #31
  store i32 -1, ptr %2, align 4, !tbaa !67
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %32, ptr %33, i64 noundef %61, ptr noundef nonnull align 4 dereferenceable(4) %2)
  %64 = load i64, ptr %60, align 8, !tbaa !43
  %65 = load ptr, ptr %41, align 8, !tbaa !58
  %66 = load ptr, ptr %39, align 8, !tbaa !59
  br label %67

67:                                               ; preds = %59, %63
  %68 = phi ptr [ %66, %63 ], [ %40, %59 ]
  %69 = phi ptr [ %65, %63 ], [ %40, %59 ]
  %70 = phi i64 [ %64, %63 ], [ 0, %59 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #31
  store i32 -1, ptr %3, align 4, !tbaa !67
  %71 = ptrtoint ptr %69 to i64
  %72 = ptrtoint ptr %68 to i64
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 2
  %75 = icmp ugt i64 %70, %74
  br i1 %75, label %76, label %79

76:                                               ; preds = %67
  %77 = sub i64 %70, %74
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %39, ptr %69, i64 noundef %77, ptr noundef nonnull align 4 dereferenceable(4) %3)
  %78 = load i64, ptr %60, align 8, !tbaa !43
  br label %85

79:                                               ; preds = %67
  %80 = icmp ult i64 %70, %74
  br i1 %80, label %81, label %85

81:                                               ; preds = %79
  %82 = getelementptr inbounds i32, ptr %68, i64 %70
  %83 = icmp eq ptr %69, %82
  br i1 %83, label %85, label %84

84:                                               ; preds = %81
  store ptr %82, ptr %41, align 8, !tbaa !58
  br label %85

85:                                               ; preds = %76, %79, %81, %84
  %86 = phi i64 [ %78, %76 ], [ %70, %79 ], [ %70, %81 ], [ %70, %84 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #31
  store i32 -1, ptr %4, align 4, !tbaa !67
  %87 = load ptr, ptr %48, align 8, !tbaa !58
  %88 = load ptr, ptr %46, align 8, !tbaa !59
  %89 = ptrtoint ptr %87 to i64
  %90 = ptrtoint ptr %88 to i64
  %91 = sub i64 %89, %90
  %92 = ashr exact i64 %91, 2
  %93 = icmp ugt i64 %86, %92
  br i1 %93, label %94, label %97

94:                                               ; preds = %85
  %95 = sub i64 %86, %92
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %46, ptr %87, i64 noundef %95, ptr noundef nonnull align 4 dereferenceable(4) %4)
  %96 = load i64, ptr %60, align 8, !tbaa !43
  br label %103

97:                                               ; preds = %85
  %98 = icmp ult i64 %86, %92
  br i1 %98, label %99, label %103

99:                                               ; preds = %97
  %100 = getelementptr inbounds i32, ptr %88, i64 %86
  %101 = icmp eq ptr %87, %100
  br i1 %101, label %103, label %102

102:                                              ; preds = %99
  store ptr %100, ptr %48, align 8, !tbaa !58
  br label %103

103:                                              ; preds = %94, %97, %99, %102
  %104 = phi i64 [ %96, %94 ], [ %86, %97 ], [ %86, %99 ], [ %86, %102 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #31
  store i32 -1, ptr %5, align 4, !tbaa !67
  %105 = load ptr, ptr %55, align 8, !tbaa !58
  %106 = load ptr, ptr %53, align 8, !tbaa !59
  %107 = ptrtoint ptr %105 to i64
  %108 = ptrtoint ptr %106 to i64
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 2
  %111 = icmp ugt i64 %104, %110
  br i1 %111, label %112, label %114

112:                                              ; preds = %103
  %113 = sub i64 %104, %110
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %53, ptr %105, i64 noundef %113, ptr noundef nonnull align 4 dereferenceable(4) %5)
  br label %120

114:                                              ; preds = %103
  %115 = icmp ult i64 %104, %110
  br i1 %115, label %116, label %120

116:                                              ; preds = %114
  %117 = getelementptr inbounds i32, ptr %106, i64 %104
  %118 = icmp eq ptr %105, %117
  br i1 %118, label %120, label %119

119:                                              ; preds = %116
  store ptr %117, ptr %55, align 8, !tbaa !58
  br label %120

120:                                              ; preds = %112, %114, %116, %119
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #31
  %121 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83
  %122 = load ptr, ptr %121, align 8, !tbaa !59
  %123 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83, i32 0, i32 0, i32 0, i32 1
  %124 = load ptr, ptr %123, align 8, !tbaa !58
  %125 = icmp eq ptr %124, %122
  br i1 %125, label %127, label %126

126:                                              ; preds = %120
  store ptr %122, ptr %123, align 8, !tbaa !58
  br label %127

127:                                              ; preds = %120, %126
  %128 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84
  %129 = load ptr, ptr %128, align 8, !tbaa !59
  %130 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84, i32 0, i32 0, i32 0, i32 1
  %131 = load ptr, ptr %130, align 8, !tbaa !58
  %132 = icmp eq ptr %131, %129
  br i1 %132, label %134, label %133

133:                                              ; preds = %127
  store ptr %129, ptr %130, align 8, !tbaa !58
  br label %134

134:                                              ; preds = %127, %133
  %135 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85
  %136 = load ptr, ptr %135, align 8, !tbaa !59
  %137 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85, i32 0, i32 0, i32 0, i32 1
  %138 = load ptr, ptr %137, align 8, !tbaa !58
  %139 = icmp eq ptr %138, %136
  br i1 %139, label %141, label %140

140:                                              ; preds = %134
  store ptr %136, ptr %137, align 8, !tbaa !58
  br label %141

141:                                              ; preds = %134, %140
  %142 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 92
  %143 = load ptr, ptr %142, align 8, !tbaa !59
  %144 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 92, i32 0, i32 0, i32 0, i32 1
  %145 = load ptr, ptr %144, align 8, !tbaa !58
  %146 = icmp eq ptr %145, %143
  br i1 %146, label %148, label %147

147:                                              ; preds = %141
  store ptr %143, ptr %144, align 8, !tbaa !58
  br label %148

148:                                              ; preds = %141, %147
  %149 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 93
  %150 = load ptr, ptr %149, align 8, !tbaa !59
  %151 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 93, i32 0, i32 0, i32 0, i32 1
  %152 = load ptr, ptr %151, align 8, !tbaa !58
  %153 = icmp eq ptr %152, %150
  br i1 %153, label %155, label %154

154:                                              ; preds = %148
  store ptr %150, ptr %151, align 8, !tbaa !58
  br label %155

155:                                              ; preds = %148, %154
  %156 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 94
  %157 = load ptr, ptr %156, align 8, !tbaa !59
  %158 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 94, i32 0, i32 0, i32 0, i32 1
  %159 = load ptr, ptr %158, align 8, !tbaa !58
  %160 = icmp eq ptr %159, %157
  br i1 %160, label %162, label %161

161:                                              ; preds = %155
  store ptr %157, ptr %158, align 8, !tbaa !58
  br label %162

162:                                              ; preds = %155, %161
  %163 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 95
  %164 = load ptr, ptr %163, align 8, !tbaa !59
  %165 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 95, i32 0, i32 0, i32 0, i32 1
  %166 = load ptr, ptr %165, align 8, !tbaa !58
  %167 = icmp eq ptr %166, %164
  br i1 %167, label %169, label %168

168:                                              ; preds = %162
  store ptr %164, ptr %165, align 8, !tbaa !58
  br label %169

169:                                              ; preds = %162, %168
  %170 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %171 = load i32, ptr %170, align 8, !tbaa !91
  %172 = add nsw i32 %171, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #31
  store i32 9999999, ptr %6, align 4, !tbaa !67
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %179, label %174

174:                                              ; preds = %169
  %175 = sext i32 %172 to i64
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %142, ptr %143, i64 noundef %175, ptr noundef nonnull align 4 dereferenceable(4) %6)
  %176 = load i32, ptr %170, align 8, !tbaa !91
  %177 = load ptr, ptr %151, align 8, !tbaa !58
  %178 = load ptr, ptr %149, align 8, !tbaa !59
  br label %179

179:                                              ; preds = %169, %174
  %180 = phi ptr [ %178, %174 ], [ %150, %169 ]
  %181 = phi ptr [ %177, %174 ], [ %150, %169 ]
  %182 = phi i32 [ %176, %174 ], [ -1, %169 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #31
  %183 = add nsw i32 %182, 1
  %184 = sext i32 %183 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #31
  store i32 -9999999, ptr %7, align 4, !tbaa !67
  %185 = ptrtoint ptr %181 to i64
  %186 = ptrtoint ptr %180 to i64
  %187 = sub i64 %185, %186
  %188 = ashr exact i64 %187, 2
  %189 = icmp ult i64 %188, %184
  br i1 %189, label %190, label %195

190:                                              ; preds = %179
  %191 = sub nsw i64 %184, %188
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %149, ptr %181, i64 noundef %191, ptr noundef nonnull align 4 dereferenceable(4) %7)
  %192 = load i32, ptr %170, align 8, !tbaa !91
  %193 = add nsw i32 %192, 1
  %194 = sext i32 %193 to i64
  br label %201

195:                                              ; preds = %179
  %196 = icmp ugt i64 %188, %184
  br i1 %196, label %197, label %201

197:                                              ; preds = %195
  %198 = getelementptr inbounds i32, ptr %180, i64 %184
  %199 = icmp eq ptr %181, %198
  br i1 %199, label %201, label %200

200:                                              ; preds = %197
  store ptr %198, ptr %151, align 8, !tbaa !58
  br label %201

201:                                              ; preds = %190, %195, %197, %200
  %202 = phi i64 [ %194, %190 ], [ %184, %195 ], [ %184, %197 ], [ %184, %200 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #31
  store i32 9999999, ptr %8, align 4, !tbaa !67
  %203 = load ptr, ptr %158, align 8, !tbaa !58
  %204 = load ptr, ptr %156, align 8, !tbaa !59
  %205 = ptrtoint ptr %203 to i64
  %206 = ptrtoint ptr %204 to i64
  %207 = sub i64 %205, %206
  %208 = ashr exact i64 %207, 2
  %209 = icmp ugt i64 %202, %208
  br i1 %209, label %210, label %215

210:                                              ; preds = %201
  %211 = sub nsw i64 %202, %208
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %156, ptr %203, i64 noundef %211, ptr noundef nonnull align 4 dereferenceable(4) %8)
  %212 = load i32, ptr %170, align 8, !tbaa !91
  %213 = add nsw i32 %212, 1
  %214 = sext i32 %213 to i64
  br label %221

215:                                              ; preds = %201
  %216 = icmp ult i64 %202, %208
  br i1 %216, label %217, label %221

217:                                              ; preds = %215
  %218 = getelementptr inbounds i32, ptr %204, i64 %202
  %219 = icmp eq ptr %203, %218
  br i1 %219, label %221, label %220

220:                                              ; preds = %217
  store ptr %218, ptr %158, align 8, !tbaa !58
  br label %221

221:                                              ; preds = %210, %215, %217, %220
  %222 = phi i64 [ %214, %210 ], [ %202, %215 ], [ %202, %217 ], [ %202, %220 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #31
  store i32 -9999999, ptr %9, align 4, !tbaa !67
  %223 = load ptr, ptr %165, align 8, !tbaa !58
  %224 = load ptr, ptr %163, align 8, !tbaa !59
  %225 = ptrtoint ptr %223 to i64
  %226 = ptrtoint ptr %224 to i64
  %227 = sub i64 %225, %226
  %228 = ashr exact i64 %227, 2
  %229 = icmp ugt i64 %222, %228
  br i1 %229, label %230, label %232

230:                                              ; preds = %221
  %231 = sub nsw i64 %222, %228
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %163, ptr %223, i64 noundef %231, ptr noundef nonnull align 4 dereferenceable(4) %9)
  br label %238

232:                                              ; preds = %221
  %233 = icmp ult i64 %222, %228
  br i1 %233, label %234, label %238

234:                                              ; preds = %232
  %235 = getelementptr inbounds i32, ptr %224, i64 %222
  %236 = icmp eq ptr %223, %235
  br i1 %236, label %238, label %237

237:                                              ; preds = %234
  store ptr %235, ptr %165, align 8, !tbaa !58
  br label %238

238:                                              ; preds = %230, %232, %234, %237
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #31
  %239 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 96
  %240 = load ptr, ptr %239, align 8, !tbaa !59
  %241 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 96, i32 0, i32 0, i32 0, i32 1
  %242 = load ptr, ptr %241, align 8, !tbaa !58
  %243 = icmp eq ptr %242, %240
  br i1 %243, label %245, label %244

244:                                              ; preds = %238
  store ptr %240, ptr %241, align 8, !tbaa !58
  br label %245

245:                                              ; preds = %238, %244
  %246 = load i32, ptr %170, align 8, !tbaa !91
  %247 = add nsw i32 %246, 1
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %251, label %249

249:                                              ; preds = %245
  %250 = sext i32 %247 to i64
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %239, i64 noundef %250)
  br label %251

251:                                              ; preds = %245, %249
  %252 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 97
  %253 = load ptr, ptr %252, align 8, !tbaa !59
  %254 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 97, i32 0, i32 0, i32 0, i32 1
  %255 = load ptr, ptr %254, align 8, !tbaa !58
  %256 = icmp eq ptr %255, %253
  br i1 %256, label %258, label %257

257:                                              ; preds = %251
  store ptr %253, ptr %254, align 8, !tbaa !58
  br label %258

258:                                              ; preds = %251, %257
  %259 = load i32, ptr %170, align 8, !tbaa !91
  %260 = add nsw i32 %259, 1
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %264, label %262

262:                                              ; preds = %258
  %263 = sext i32 %260 to i64
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %252, i64 noundef %263)
  br label %264

264:                                              ; preds = %258, %262
  %265 = load i64, ptr %60, align 8, !tbaa !43
  %266 = trunc i64 %265 to i32
  %267 = icmp sgt i32 %266, 0
  br i1 %267, label %270, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 81
  store i32 0, ptr %269, align 8, !tbaa !193
  br label %802

270:                                              ; preds = %264
  %271 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %272 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %273 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 86, i32 0, i32 0, i32 0, i32 2
  %274 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 87, i32 0, i32 0, i32 0, i32 2
  %275 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85, i32 0, i32 0, i32 0, i32 2
  %276 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %277 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83, i32 0, i32 0, i32 0, i32 2
  %278 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %279 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84, i32 0, i32 0, i32 0, i32 2
  %280 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  br label %299

281:                                              ; preds = %795
  %282 = trunc i64 %798 to i32
  %283 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 81
  store i32 %796, ptr %283, align 8, !tbaa !193
  %284 = icmp sgt i32 %282, 0
  br i1 %284, label %285, label %802

285:                                              ; preds = %281
  %286 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %287 = load ptr, ptr %286, align 8, !tbaa !73
  %288 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %289 = load ptr, ptr %288, align 8
  %290 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %291 = load ptr, ptr %290, align 8
  %292 = load ptr, ptr %46, align 8
  %293 = load ptr, ptr %32, align 8
  %294 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %295 = load ptr, ptr %294, align 8
  %296 = load ptr, ptr %39, align 8
  %297 = load ptr, ptr %53, align 8
  %298 = and i64 %798, 4294967295
  br label %1065

299:                                              ; preds = %270, %795
  %300 = phi i64 [ 0, %270 ], [ %797, %795 ]
  %301 = phi i32 [ 0, %270 ], [ %796, %795 ]
  %302 = load ptr, ptr %271, align 8, !tbaa !74
  %303 = getelementptr inbounds i32, ptr %302, i64 %300
  %304 = load i32, ptr %303, align 4, !tbaa !67
  %305 = zext i32 %304 to i64
  %306 = icmp eq i64 %300, %305
  br i1 %306, label %795, label %307

307:                                              ; preds = %299
  %308 = load ptr, ptr %272, align 8, !tbaa !62
  %309 = sext i32 %304 to i64
  %310 = getelementptr inbounds i32, ptr %308, i64 %309
  %311 = load i32, ptr %310, align 4, !tbaa !67
  %312 = getelementptr inbounds i32, ptr %308, i64 %300
  %313 = load i32, ptr %312, align 4, !tbaa !67
  %314 = icmp slt i32 %311, %313
  %315 = select i1 %314, i32 2, i32 1
  %316 = load ptr, ptr %20, align 8, !tbaa !58
  %317 = load ptr, ptr %273, align 8, !tbaa !110
  %318 = icmp eq ptr %316, %317
  br i1 %318, label %322, label %319

319:                                              ; preds = %307
  %320 = trunc i64 %300 to i32
  store i32 %320, ptr %316, align 4, !tbaa !67
  %321 = getelementptr inbounds i32, ptr %316, i64 1
  store ptr %321, ptr %20, align 8, !tbaa !58
  br label %353

322:                                              ; preds = %307
  %323 = load ptr, ptr %18, align 8, !tbaa !59
  %324 = ptrtoint ptr %316 to i64
  %325 = ptrtoint ptr %323 to i64
  %326 = sub i64 %324, %325
  %327 = icmp eq i64 %326, 9223372036854775804
  br i1 %327, label %328, label %329

328:                                              ; preds = %322
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

329:                                              ; preds = %322
  %330 = ashr exact i64 %326, 2
  %331 = call i64 @llvm.umax.i64(i64 %330, i64 1)
  %332 = add i64 %331, %330
  %333 = icmp ult i64 %332, %330
  %334 = icmp ugt i64 %332, 2305843009213693951
  %335 = or i1 %333, %334
  %336 = select i1 %335, i64 2305843009213693951, i64 %332
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %341, label %338

338:                                              ; preds = %329
  %339 = shl nuw nsw i64 %336, 2
  %340 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %339) #35
  br label %341

341:                                              ; preds = %338, %329
  %342 = phi ptr [ %340, %338 ], [ null, %329 ]
  %343 = getelementptr inbounds i32, ptr %342, i64 %330
  %344 = trunc i64 %300 to i32
  store i32 %344, ptr %343, align 4, !tbaa !67
  %345 = icmp sgt i64 %326, 0
  br i1 %345, label %346, label %347

346:                                              ; preds = %341
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %342, ptr align 4 %323, i64 %326, i1 false)
  br label %347

347:                                              ; preds = %346, %341
  %348 = getelementptr inbounds i32, ptr %343, i64 1
  %349 = icmp eq ptr %323, null
  br i1 %349, label %351, label %350

350:                                              ; preds = %347
  call void @_ZdlPv(ptr noundef nonnull %323) #33
  br label %351

351:                                              ; preds = %350, %347
  store ptr %342, ptr %18, align 8, !tbaa !59
  store ptr %348, ptr %20, align 8, !tbaa !58
  %352 = getelementptr inbounds i32, ptr %342, i64 %336
  store ptr %352, ptr %273, align 8, !tbaa !110
  br label %353

353:                                              ; preds = %319, %351
  %354 = load ptr, ptr %27, align 8, !tbaa !58
  %355 = load ptr, ptr %274, align 8, !tbaa !110
  %356 = icmp eq ptr %354, %355
  br i1 %356, label %359, label %357

357:                                              ; preds = %353
  store i32 %304, ptr %354, align 4, !tbaa !67
  %358 = getelementptr inbounds i32, ptr %354, i64 1
  store ptr %358, ptr %27, align 8, !tbaa !58
  br label %389

359:                                              ; preds = %353
  %360 = load ptr, ptr %25, align 8, !tbaa !59
  %361 = ptrtoint ptr %354 to i64
  %362 = ptrtoint ptr %360 to i64
  %363 = sub i64 %361, %362
  %364 = icmp eq i64 %363, 9223372036854775804
  br i1 %364, label %365, label %366

365:                                              ; preds = %359
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

366:                                              ; preds = %359
  %367 = ashr exact i64 %363, 2
  %368 = call i64 @llvm.umax.i64(i64 %367, i64 1)
  %369 = add i64 %368, %367
  %370 = icmp ult i64 %369, %367
  %371 = icmp ugt i64 %369, 2305843009213693951
  %372 = or i1 %370, %371
  %373 = select i1 %372, i64 2305843009213693951, i64 %369
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %378, label %375

375:                                              ; preds = %366
  %376 = shl nuw nsw i64 %373, 2
  %377 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %376) #35
  br label %378

378:                                              ; preds = %375, %366
  %379 = phi ptr [ %377, %375 ], [ null, %366 ]
  %380 = getelementptr inbounds i32, ptr %379, i64 %367
  store i32 %304, ptr %380, align 4, !tbaa !67
  %381 = icmp sgt i64 %363, 0
  br i1 %381, label %382, label %383

382:                                              ; preds = %378
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %379, ptr align 4 %360, i64 %363, i1 false)
  br label %383

383:                                              ; preds = %382, %378
  %384 = getelementptr inbounds i32, ptr %380, i64 1
  %385 = icmp eq ptr %360, null
  br i1 %385, label %387, label %386

386:                                              ; preds = %383
  call void @_ZdlPv(ptr noundef nonnull %360) #33
  br label %387

387:                                              ; preds = %386, %383
  store ptr %379, ptr %25, align 8, !tbaa !59
  store ptr %384, ptr %27, align 8, !tbaa !58
  %388 = getelementptr inbounds i32, ptr %379, i64 %373
  store ptr %388, ptr %274, align 8, !tbaa !110
  br label %389

389:                                              ; preds = %357, %387
  %390 = load ptr, ptr %272, align 8, !tbaa !62
  %391 = getelementptr inbounds i32, ptr %390, i64 %300
  %392 = load i32, ptr %391, align 4, !tbaa !67
  %393 = getelementptr inbounds i32, ptr %390, i64 %309
  %394 = load i32, ptr %393, align 4, !tbaa !67
  %395 = icmp sgt i32 %392, %394
  %396 = call i32 @llvm.smax.i32(i32 %392, i32 %394)
  %397 = load ptr, ptr %137, align 8, !tbaa !58
  %398 = load ptr, ptr %275, align 8, !tbaa !110
  %399 = icmp eq ptr %397, %398
  br i1 %399, label %402, label %400

400:                                              ; preds = %389
  store i32 %396, ptr %397, align 4, !tbaa !67
  %401 = getelementptr inbounds i32, ptr %397, i64 1
  store ptr %401, ptr %137, align 8, !tbaa !58
  br label %436

402:                                              ; preds = %389
  %403 = load ptr, ptr %135, align 8, !tbaa !59
  %404 = ptrtoint ptr %397 to i64
  %405 = ptrtoint ptr %403 to i64
  %406 = sub i64 %404, %405
  %407 = icmp eq i64 %406, 9223372036854775804
  br i1 %407, label %408, label %409

408:                                              ; preds = %402
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

409:                                              ; preds = %402
  %410 = ashr exact i64 %406, 2
  %411 = call i64 @llvm.umax.i64(i64 %410, i64 1)
  %412 = add i64 %411, %410
  %413 = icmp ult i64 %412, %410
  %414 = icmp ugt i64 %412, 2305843009213693951
  %415 = or i1 %413, %414
  %416 = select i1 %415, i64 2305843009213693951, i64 %412
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %424, label %418

418:                                              ; preds = %409
  %419 = shl nuw nsw i64 %416, 2
  %420 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %419) #35
  %421 = load i32, ptr %391, align 4
  %422 = load i32, ptr %393, align 4
  %423 = select i1 %395, i32 %421, i32 %422
  br label %424

424:                                              ; preds = %418, %409
  %425 = phi i32 [ %423, %418 ], [ %396, %409 ]
  %426 = phi ptr [ %420, %418 ], [ null, %409 ]
  %427 = getelementptr inbounds i32, ptr %426, i64 %410
  store i32 %425, ptr %427, align 4, !tbaa !67
  %428 = icmp sgt i64 %406, 0
  br i1 %428, label %429, label %430

429:                                              ; preds = %424
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %426, ptr align 4 %403, i64 %406, i1 false)
  br label %430

430:                                              ; preds = %429, %424
  %431 = getelementptr inbounds i32, ptr %427, i64 1
  %432 = icmp eq ptr %403, null
  br i1 %432, label %434, label %433

433:                                              ; preds = %430
  call void @_ZdlPv(ptr noundef nonnull %403) #33
  br label %434

434:                                              ; preds = %433, %430
  store ptr %426, ptr %135, align 8, !tbaa !59
  store ptr %431, ptr %137, align 8, !tbaa !58
  %435 = getelementptr inbounds i32, ptr %426, i64 %416
  store ptr %435, ptr %275, align 8, !tbaa !110
  br label %436

436:                                              ; preds = %400, %434
  %437 = load ptr, ptr %276, align 8, !tbaa !60
  %438 = getelementptr inbounds i32, ptr %437, i64 %309
  %439 = load i32, ptr %438, align 4, !tbaa !67
  %440 = mul nsw i32 %439, %315
  %441 = load ptr, ptr %123, align 8, !tbaa !58
  %442 = load ptr, ptr %277, align 8, !tbaa !110
  %443 = icmp eq ptr %441, %442
  br i1 %443, label %446, label %444

444:                                              ; preds = %436
  store i32 %440, ptr %441, align 4, !tbaa !67
  %445 = getelementptr inbounds i32, ptr %441, i64 1
  store ptr %445, ptr %123, align 8, !tbaa !58
  br label %476

446:                                              ; preds = %436
  %447 = load ptr, ptr %121, align 8, !tbaa !59
  %448 = ptrtoint ptr %441 to i64
  %449 = ptrtoint ptr %447 to i64
  %450 = sub i64 %448, %449
  %451 = icmp eq i64 %450, 9223372036854775804
  br i1 %451, label %452, label %453

452:                                              ; preds = %446
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

453:                                              ; preds = %446
  %454 = ashr exact i64 %450, 2
  %455 = call i64 @llvm.umax.i64(i64 %454, i64 1)
  %456 = add i64 %455, %454
  %457 = icmp ult i64 %456, %454
  %458 = icmp ugt i64 %456, 2305843009213693951
  %459 = or i1 %457, %458
  %460 = select i1 %459, i64 2305843009213693951, i64 %456
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %465, label %462

462:                                              ; preds = %453
  %463 = shl nuw nsw i64 %460, 2
  %464 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %463) #35
  br label %465

465:                                              ; preds = %462, %453
  %466 = phi ptr [ %464, %462 ], [ null, %453 ]
  %467 = getelementptr inbounds i32, ptr %466, i64 %454
  store i32 %440, ptr %467, align 4, !tbaa !67
  %468 = icmp sgt i64 %450, 0
  br i1 %468, label %469, label %470

469:                                              ; preds = %465
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %466, ptr align 4 %447, i64 %450, i1 false)
  br label %470

470:                                              ; preds = %469, %465
  %471 = getelementptr inbounds i32, ptr %467, i64 1
  %472 = icmp eq ptr %447, null
  br i1 %472, label %474, label %473

473:                                              ; preds = %470
  call void @_ZdlPv(ptr noundef nonnull %447) #33
  br label %474

474:                                              ; preds = %473, %470
  store ptr %466, ptr %121, align 8, !tbaa !59
  store ptr %471, ptr %123, align 8, !tbaa !58
  %475 = getelementptr inbounds i32, ptr %466, i64 %460
  store ptr %475, ptr %277, align 8, !tbaa !110
  br label %476

476:                                              ; preds = %444, %474
  %477 = load ptr, ptr %272, align 8, !tbaa !62
  %478 = getelementptr inbounds i32, ptr %477, i64 %309
  %479 = load i32, ptr %478, align 4, !tbaa !67
  %480 = getelementptr inbounds i32, ptr %477, i64 %300
  %481 = load i32, ptr %480, align 4, !tbaa !67
  %482 = icmp slt i32 %479, %481
  %483 = load ptr, ptr %278, align 8, !tbaa !61
  br i1 %482, label %484, label %529

484:                                              ; preds = %476
  %485 = getelementptr inbounds i32, ptr %483, i64 %300
  %486 = load i32, ptr %485, align 4, !tbaa !67
  %487 = and i32 %486, -2147483647
  %488 = icmp eq i32 %487, 1
  br i1 %488, label %489, label %529

489:                                              ; preds = %484
  %490 = getelementptr inbounds i32, ptr %483, i64 %309
  %491 = load i32, ptr %490, align 4, !tbaa !67
  %492 = mul nsw i32 %491, %315
  %493 = add nsw i32 %492, 1
  %494 = load ptr, ptr %130, align 8, !tbaa !58
  %495 = load ptr, ptr %279, align 8, !tbaa !110
  %496 = icmp eq ptr %494, %495
  br i1 %496, label %499, label %497

497:                                              ; preds = %489
  store i32 %493, ptr %494, align 4, !tbaa !67
  %498 = getelementptr inbounds i32, ptr %494, i64 1
  store ptr %498, ptr %130, align 8, !tbaa !58
  br label %568

499:                                              ; preds = %489
  %500 = load ptr, ptr %128, align 8, !tbaa !59
  %501 = ptrtoint ptr %494 to i64
  %502 = ptrtoint ptr %500 to i64
  %503 = sub i64 %501, %502
  %504 = icmp eq i64 %503, 9223372036854775804
  br i1 %504, label %505, label %506

505:                                              ; preds = %499
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

506:                                              ; preds = %499
  %507 = ashr exact i64 %503, 2
  %508 = call i64 @llvm.umax.i64(i64 %507, i64 1)
  %509 = add i64 %508, %507
  %510 = icmp ult i64 %509, %507
  %511 = icmp ugt i64 %509, 2305843009213693951
  %512 = or i1 %510, %511
  %513 = select i1 %512, i64 2305843009213693951, i64 %509
  %514 = icmp eq i64 %513, 0
  br i1 %514, label %518, label %515

515:                                              ; preds = %506
  %516 = shl nuw nsw i64 %513, 2
  %517 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %516) #35
  br label %518

518:                                              ; preds = %515, %506
  %519 = phi ptr [ %517, %515 ], [ null, %506 ]
  %520 = getelementptr inbounds i32, ptr %519, i64 %507
  store i32 %493, ptr %520, align 4, !tbaa !67
  %521 = icmp sgt i64 %503, 0
  br i1 %521, label %522, label %523

522:                                              ; preds = %518
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %519, ptr align 4 %500, i64 %503, i1 false)
  br label %523

523:                                              ; preds = %522, %518
  %524 = getelementptr inbounds i32, ptr %520, i64 1
  %525 = icmp eq ptr %500, null
  br i1 %525, label %527, label %526

526:                                              ; preds = %523
  call void @_ZdlPv(ptr noundef nonnull %500) #33
  br label %527

527:                                              ; preds = %526, %523
  store ptr %519, ptr %128, align 8, !tbaa !59
  store ptr %524, ptr %130, align 8, !tbaa !58
  %528 = getelementptr inbounds i32, ptr %519, i64 %513
  store ptr %528, ptr %279, align 8, !tbaa !110
  br label %568

529:                                              ; preds = %476, %484
  %530 = getelementptr inbounds i32, ptr %483, i64 %309
  %531 = load i32, ptr %530, align 4, !tbaa !67
  %532 = mul nsw i32 %531, %315
  %533 = load ptr, ptr %130, align 8, !tbaa !58
  %534 = load ptr, ptr %279, align 8, !tbaa !110
  %535 = icmp eq ptr %533, %534
  br i1 %535, label %538, label %536

536:                                              ; preds = %529
  store i32 %532, ptr %533, align 4, !tbaa !67
  %537 = getelementptr inbounds i32, ptr %533, i64 1
  store ptr %537, ptr %130, align 8, !tbaa !58
  br label %568

538:                                              ; preds = %529
  %539 = load ptr, ptr %128, align 8, !tbaa !59
  %540 = ptrtoint ptr %533 to i64
  %541 = ptrtoint ptr %539 to i64
  %542 = sub i64 %540, %541
  %543 = icmp eq i64 %542, 9223372036854775804
  br i1 %543, label %544, label %545

544:                                              ; preds = %538
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

545:                                              ; preds = %538
  %546 = ashr exact i64 %542, 2
  %547 = call i64 @llvm.umax.i64(i64 %546, i64 1)
  %548 = add i64 %547, %546
  %549 = icmp ult i64 %548, %546
  %550 = icmp ugt i64 %548, 2305843009213693951
  %551 = or i1 %549, %550
  %552 = select i1 %551, i64 2305843009213693951, i64 %548
  %553 = icmp eq i64 %552, 0
  br i1 %553, label %557, label %554

554:                                              ; preds = %545
  %555 = shl nuw nsw i64 %552, 2
  %556 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %555) #35
  br label %557

557:                                              ; preds = %554, %545
  %558 = phi ptr [ %556, %554 ], [ null, %545 ]
  %559 = getelementptr inbounds i32, ptr %558, i64 %546
  store i32 %532, ptr %559, align 4, !tbaa !67
  %560 = icmp sgt i64 %542, 0
  br i1 %560, label %561, label %562

561:                                              ; preds = %557
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %558, ptr align 4 %539, i64 %542, i1 false)
  br label %562

562:                                              ; preds = %561, %557
  %563 = getelementptr inbounds i32, ptr %559, i64 1
  %564 = icmp eq ptr %539, null
  br i1 %564, label %566, label %565

565:                                              ; preds = %562
  call void @_ZdlPv(ptr noundef nonnull %539) #33
  br label %566

566:                                              ; preds = %565, %562
  store ptr %558, ptr %128, align 8, !tbaa !59
  store ptr %563, ptr %130, align 8, !tbaa !58
  %567 = getelementptr inbounds i32, ptr %558, i64 %552
  store ptr %567, ptr %279, align 8, !tbaa !110
  br label %568

568:                                              ; preds = %566, %536, %527, %497
  %569 = load ptr, ptr %46, align 8, !tbaa !59
  %570 = getelementptr inbounds i32, ptr %569, i64 %300
  store i32 %301, ptr %570, align 4, !tbaa !67
  %571 = add nsw i32 %301, 1
  %572 = load ptr, ptr %272, align 8, !tbaa !62
  %573 = getelementptr inbounds i32, ptr %572, i64 %309
  %574 = load i32, ptr %573, align 4, !tbaa !67
  %575 = getelementptr inbounds i32, ptr %572, i64 %300
  %576 = load i32, ptr %575, align 4, !tbaa !67
  %577 = icmp sgt i32 %574, %576
  br i1 %577, label %578, label %795

578:                                              ; preds = %568
  %579 = load ptr, ptr %278, align 8, !tbaa !61
  %580 = getelementptr inbounds i32, ptr %579, i64 %309
  %581 = load i32, ptr %580, align 4, !tbaa !67
  %582 = and i32 %581, 1
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %584, label %795

584:                                              ; preds = %578
  %585 = load ptr, ptr %280, align 8, !tbaa !76
  %586 = getelementptr inbounds i32, ptr %585, i64 %309
  %587 = load i32, ptr %586, align 4, !tbaa !67
  %588 = icmp eq i32 %587, %304
  br i1 %588, label %795, label %589

589:                                              ; preds = %584
  %590 = load ptr, ptr %20, align 8, !tbaa !58
  %591 = load ptr, ptr %273, align 8, !tbaa !110
  %592 = icmp eq ptr %590, %591
  br i1 %592, label %596, label %593

593:                                              ; preds = %589
  %594 = trunc i64 %300 to i32
  store i32 %594, ptr %590, align 4, !tbaa !67
  %595 = getelementptr inbounds i32, ptr %590, i64 1
  store ptr %595, ptr %20, align 8, !tbaa !58
  br label %627

596:                                              ; preds = %589
  %597 = load ptr, ptr %18, align 8, !tbaa !59
  %598 = ptrtoint ptr %590 to i64
  %599 = ptrtoint ptr %597 to i64
  %600 = sub i64 %598, %599
  %601 = icmp eq i64 %600, 9223372036854775804
  br i1 %601, label %602, label %603

602:                                              ; preds = %596
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

603:                                              ; preds = %596
  %604 = ashr exact i64 %600, 2
  %605 = call i64 @llvm.umax.i64(i64 %604, i64 1)
  %606 = add i64 %605, %604
  %607 = icmp ult i64 %606, %604
  %608 = icmp ugt i64 %606, 2305843009213693951
  %609 = or i1 %607, %608
  %610 = select i1 %609, i64 2305843009213693951, i64 %606
  %611 = icmp eq i64 %610, 0
  br i1 %611, label %615, label %612

612:                                              ; preds = %603
  %613 = shl nuw nsw i64 %610, 2
  %614 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %613) #35
  br label %615

615:                                              ; preds = %612, %603
  %616 = phi ptr [ %614, %612 ], [ null, %603 ]
  %617 = getelementptr inbounds i32, ptr %616, i64 %604
  %618 = trunc i64 %300 to i32
  store i32 %618, ptr %617, align 4, !tbaa !67
  %619 = icmp sgt i64 %600, 0
  br i1 %619, label %620, label %621

620:                                              ; preds = %615
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %616, ptr align 4 %597, i64 %600, i1 false)
  br label %621

621:                                              ; preds = %620, %615
  %622 = getelementptr inbounds i32, ptr %617, i64 1
  %623 = icmp eq ptr %597, null
  br i1 %623, label %625, label %624

624:                                              ; preds = %621
  call void @_ZdlPv(ptr noundef nonnull %597) #33
  br label %625

625:                                              ; preds = %624, %621
  store ptr %616, ptr %18, align 8, !tbaa !59
  store ptr %622, ptr %20, align 8, !tbaa !58
  %626 = getelementptr inbounds i32, ptr %616, i64 %610
  store ptr %626, ptr %273, align 8, !tbaa !110
  br label %627

627:                                              ; preds = %593, %625
  %628 = load ptr, ptr %27, align 8, !tbaa !58
  %629 = load ptr, ptr %274, align 8, !tbaa !110
  %630 = icmp eq ptr %628, %629
  br i1 %630, label %633, label %631

631:                                              ; preds = %627
  store i32 %587, ptr %628, align 4, !tbaa !67
  %632 = getelementptr inbounds i32, ptr %628, i64 1
  store ptr %632, ptr %27, align 8, !tbaa !58
  br label %663

633:                                              ; preds = %627
  %634 = load ptr, ptr %25, align 8, !tbaa !59
  %635 = ptrtoint ptr %628 to i64
  %636 = ptrtoint ptr %634 to i64
  %637 = sub i64 %635, %636
  %638 = icmp eq i64 %637, 9223372036854775804
  br i1 %638, label %639, label %640

639:                                              ; preds = %633
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

640:                                              ; preds = %633
  %641 = ashr exact i64 %637, 2
  %642 = call i64 @llvm.umax.i64(i64 %641, i64 1)
  %643 = add i64 %642, %641
  %644 = icmp ult i64 %643, %641
  %645 = icmp ugt i64 %643, 2305843009213693951
  %646 = or i1 %644, %645
  %647 = select i1 %646, i64 2305843009213693951, i64 %643
  %648 = icmp eq i64 %647, 0
  br i1 %648, label %652, label %649

649:                                              ; preds = %640
  %650 = shl nuw nsw i64 %647, 2
  %651 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %650) #35
  br label %652

652:                                              ; preds = %649, %640
  %653 = phi ptr [ %651, %649 ], [ null, %640 ]
  %654 = getelementptr inbounds i32, ptr %653, i64 %641
  store i32 %587, ptr %654, align 4, !tbaa !67
  %655 = icmp sgt i64 %637, 0
  br i1 %655, label %656, label %657

656:                                              ; preds = %652
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %653, ptr align 4 %634, i64 %637, i1 false)
  br label %657

657:                                              ; preds = %656, %652
  %658 = getelementptr inbounds i32, ptr %654, i64 1
  %659 = icmp eq ptr %634, null
  br i1 %659, label %661, label %660

660:                                              ; preds = %657
  call void @_ZdlPv(ptr noundef nonnull %634) #33
  br label %661

661:                                              ; preds = %660, %657
  store ptr %653, ptr %25, align 8, !tbaa !59
  store ptr %658, ptr %27, align 8, !tbaa !58
  %662 = getelementptr inbounds i32, ptr %653, i64 %647
  store ptr %662, ptr %274, align 8, !tbaa !110
  br label %663

663:                                              ; preds = %631, %661
  %664 = load ptr, ptr %272, align 8, !tbaa !62
  %665 = getelementptr inbounds i32, ptr %664, i64 %300
  %666 = load i32, ptr %665, align 4, !tbaa !67
  %667 = sext i32 %587 to i64
  %668 = getelementptr inbounds i32, ptr %664, i64 %667
  %669 = load i32, ptr %668, align 4, !tbaa !67
  %670 = icmp sgt i32 %666, %669
  %671 = call i32 @llvm.smax.i32(i32 %666, i32 %669)
  %672 = load ptr, ptr %137, align 8, !tbaa !58
  %673 = load ptr, ptr %275, align 8, !tbaa !110
  %674 = icmp eq ptr %672, %673
  br i1 %674, label %677, label %675

675:                                              ; preds = %663
  store i32 %671, ptr %672, align 4, !tbaa !67
  %676 = getelementptr inbounds i32, ptr %672, i64 1
  store ptr %676, ptr %137, align 8, !tbaa !58
  br label %711

677:                                              ; preds = %663
  %678 = load ptr, ptr %135, align 8, !tbaa !59
  %679 = ptrtoint ptr %672 to i64
  %680 = ptrtoint ptr %678 to i64
  %681 = sub i64 %679, %680
  %682 = icmp eq i64 %681, 9223372036854775804
  br i1 %682, label %683, label %684

683:                                              ; preds = %677
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

684:                                              ; preds = %677
  %685 = ashr exact i64 %681, 2
  %686 = call i64 @llvm.umax.i64(i64 %685, i64 1)
  %687 = add i64 %686, %685
  %688 = icmp ult i64 %687, %685
  %689 = icmp ugt i64 %687, 2305843009213693951
  %690 = or i1 %688, %689
  %691 = select i1 %690, i64 2305843009213693951, i64 %687
  %692 = icmp eq i64 %691, 0
  br i1 %692, label %699, label %693

693:                                              ; preds = %684
  %694 = shl nuw nsw i64 %691, 2
  %695 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %694) #35
  %696 = load i32, ptr %665, align 4
  %697 = load i32, ptr %668, align 4
  %698 = select i1 %670, i32 %696, i32 %697
  br label %699

699:                                              ; preds = %693, %684
  %700 = phi i32 [ %698, %693 ], [ %671, %684 ]
  %701 = phi ptr [ %695, %693 ], [ null, %684 ]
  %702 = getelementptr inbounds i32, ptr %701, i64 %685
  store i32 %700, ptr %702, align 4, !tbaa !67
  %703 = icmp sgt i64 %681, 0
  br i1 %703, label %704, label %705

704:                                              ; preds = %699
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %701, ptr align 4 %678, i64 %681, i1 false)
  br label %705

705:                                              ; preds = %704, %699
  %706 = getelementptr inbounds i32, ptr %702, i64 1
  %707 = icmp eq ptr %678, null
  br i1 %707, label %709, label %708

708:                                              ; preds = %705
  call void @_ZdlPv(ptr noundef nonnull %678) #33
  br label %709

709:                                              ; preds = %708, %705
  store ptr %701, ptr %135, align 8, !tbaa !59
  store ptr %706, ptr %137, align 8, !tbaa !58
  %710 = getelementptr inbounds i32, ptr %701, i64 %691
  store ptr %710, ptr %275, align 8, !tbaa !110
  br label %711

711:                                              ; preds = %675, %709
  %712 = load ptr, ptr %276, align 8, !tbaa !60
  %713 = getelementptr inbounds i32, ptr %712, i64 %667
  %714 = load i32, ptr %713, align 4, !tbaa !67
  %715 = mul nsw i32 %714, %315
  %716 = load ptr, ptr %123, align 8, !tbaa !58
  %717 = load ptr, ptr %277, align 8, !tbaa !110
  %718 = icmp eq ptr %716, %717
  br i1 %718, label %721, label %719

719:                                              ; preds = %711
  store i32 %715, ptr %716, align 4, !tbaa !67
  %720 = getelementptr inbounds i32, ptr %716, i64 1
  store ptr %720, ptr %123, align 8, !tbaa !58
  br label %751

721:                                              ; preds = %711
  %722 = load ptr, ptr %121, align 8, !tbaa !59
  %723 = ptrtoint ptr %716 to i64
  %724 = ptrtoint ptr %722 to i64
  %725 = sub i64 %723, %724
  %726 = icmp eq i64 %725, 9223372036854775804
  br i1 %726, label %727, label %728

727:                                              ; preds = %721
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

728:                                              ; preds = %721
  %729 = ashr exact i64 %725, 2
  %730 = call i64 @llvm.umax.i64(i64 %729, i64 1)
  %731 = add i64 %730, %729
  %732 = icmp ult i64 %731, %729
  %733 = icmp ugt i64 %731, 2305843009213693951
  %734 = or i1 %732, %733
  %735 = select i1 %734, i64 2305843009213693951, i64 %731
  %736 = icmp eq i64 %735, 0
  br i1 %736, label %740, label %737

737:                                              ; preds = %728
  %738 = shl nuw nsw i64 %735, 2
  %739 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %738) #35
  br label %740

740:                                              ; preds = %737, %728
  %741 = phi ptr [ %739, %737 ], [ null, %728 ]
  %742 = getelementptr inbounds i32, ptr %741, i64 %729
  store i32 %715, ptr %742, align 4, !tbaa !67
  %743 = icmp sgt i64 %725, 0
  br i1 %743, label %744, label %745

744:                                              ; preds = %740
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %741, ptr align 4 %722, i64 %725, i1 false)
  br label %745

745:                                              ; preds = %744, %740
  %746 = getelementptr inbounds i32, ptr %742, i64 1
  %747 = icmp eq ptr %722, null
  br i1 %747, label %749, label %748

748:                                              ; preds = %745
  call void @_ZdlPv(ptr noundef nonnull %722) #33
  br label %749

749:                                              ; preds = %748, %745
  store ptr %741, ptr %121, align 8, !tbaa !59
  store ptr %746, ptr %123, align 8, !tbaa !58
  %750 = getelementptr inbounds i32, ptr %741, i64 %735
  store ptr %750, ptr %277, align 8, !tbaa !110
  br label %751

751:                                              ; preds = %719, %749
  %752 = load ptr, ptr %278, align 8, !tbaa !61
  %753 = getelementptr inbounds i32, ptr %752, i64 %667
  %754 = load i32, ptr %753, align 4, !tbaa !67
  %755 = mul nsw i32 %754, %315
  %756 = load ptr, ptr %130, align 8, !tbaa !58
  %757 = load ptr, ptr %279, align 8, !tbaa !110
  %758 = icmp eq ptr %756, %757
  br i1 %758, label %761, label %759

759:                                              ; preds = %751
  store i32 %755, ptr %756, align 4, !tbaa !67
  %760 = getelementptr inbounds i32, ptr %756, i64 1
  store ptr %760, ptr %130, align 8, !tbaa !58
  br label %791

761:                                              ; preds = %751
  %762 = load ptr, ptr %128, align 8, !tbaa !59
  %763 = ptrtoint ptr %756 to i64
  %764 = ptrtoint ptr %762 to i64
  %765 = sub i64 %763, %764
  %766 = icmp eq i64 %765, 9223372036854775804
  br i1 %766, label %767, label %768

767:                                              ; preds = %761
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

768:                                              ; preds = %761
  %769 = ashr exact i64 %765, 2
  %770 = call i64 @llvm.umax.i64(i64 %769, i64 1)
  %771 = add i64 %770, %769
  %772 = icmp ult i64 %771, %769
  %773 = icmp ugt i64 %771, 2305843009213693951
  %774 = or i1 %772, %773
  %775 = select i1 %774, i64 2305843009213693951, i64 %771
  %776 = icmp eq i64 %775, 0
  br i1 %776, label %780, label %777

777:                                              ; preds = %768
  %778 = shl nuw nsw i64 %775, 2
  %779 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %778) #35
  br label %780

780:                                              ; preds = %777, %768
  %781 = phi ptr [ %779, %777 ], [ null, %768 ]
  %782 = getelementptr inbounds i32, ptr %781, i64 %769
  store i32 %755, ptr %782, align 4, !tbaa !67
  %783 = icmp sgt i64 %765, 0
  br i1 %783, label %784, label %785

784:                                              ; preds = %780
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %781, ptr align 4 %762, i64 %765, i1 false)
  br label %785

785:                                              ; preds = %784, %780
  %786 = getelementptr inbounds i32, ptr %782, i64 1
  %787 = icmp eq ptr %762, null
  br i1 %787, label %789, label %788

788:                                              ; preds = %785
  call void @_ZdlPv(ptr noundef nonnull %762) #33
  br label %789

789:                                              ; preds = %788, %785
  store ptr %781, ptr %128, align 8, !tbaa !59
  store ptr %786, ptr %130, align 8, !tbaa !58
  %790 = getelementptr inbounds i32, ptr %781, i64 %775
  store ptr %790, ptr %279, align 8, !tbaa !110
  br label %791

791:                                              ; preds = %759, %789
  %792 = load ptr, ptr %53, align 8, !tbaa !59
  %793 = getelementptr inbounds i32, ptr %792, i64 %300
  store i32 %571, ptr %793, align 4, !tbaa !67
  %794 = add nsw i32 %301, 2
  br label %795

795:                                              ; preds = %568, %578, %791, %584, %299
  %796 = phi i32 [ %301, %299 ], [ %571, %578 ], [ %571, %568 ], [ %794, %791 ], [ %571, %584 ]
  %797 = add nuw nsw i64 %300, 1
  %798 = load i64, ptr %60, align 8, !tbaa !43
  %799 = shl i64 %798, 32
  %800 = ashr exact i64 %799, 32
  %801 = icmp slt i64 %797, %800
  br i1 %801, label %299, label %281, !llvm.loop !211

802:                                              ; preds = %1102, %268, %281
  %803 = phi ptr [ %269, %268 ], [ %283, %281 ], [ %283, %1102 ]
  %804 = phi i64 [ %265, %268 ], [ %798, %281 ], [ %798, %1102 ]
  %805 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 101
  %806 = load ptr, ptr %805, align 8, !tbaa !59
  %807 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 101, i32 0, i32 0, i32 0, i32 1
  %808 = load ptr, ptr %807, align 8, !tbaa !58
  %809 = icmp eq ptr %808, %806
  br i1 %809, label %811, label %810

810:                                              ; preds = %802
  store ptr %806, ptr %807, align 8, !tbaa !58
  br label %811

811:                                              ; preds = %802, %810
  %812 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 102
  %813 = load ptr, ptr %812, align 8, !tbaa !59
  %814 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 102, i32 0, i32 0, i32 0, i32 1
  %815 = load ptr, ptr %814, align 8, !tbaa !58
  %816 = icmp eq ptr %815, %813
  br i1 %816, label %818, label %817

817:                                              ; preds = %811
  store ptr %813, ptr %814, align 8, !tbaa !58
  br label %818

818:                                              ; preds = %811, %817
  %819 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 103
  %820 = load ptr, ptr %819, align 8, !tbaa !59
  %821 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 103, i32 0, i32 0, i32 0, i32 1
  %822 = load ptr, ptr %821, align 8, !tbaa !58
  %823 = icmp eq ptr %822, %820
  br i1 %823, label %825, label %824

824:                                              ; preds = %818
  store ptr %820, ptr %821, align 8, !tbaa !58
  br label %825

825:                                              ; preds = %818, %824
  %826 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 104
  %827 = load ptr, ptr %826, align 8, !tbaa !59
  %828 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 104, i32 0, i32 0, i32 0, i32 1
  %829 = load ptr, ptr %828, align 8, !tbaa !58
  %830 = icmp eq ptr %829, %827
  br i1 %830, label %832, label %831

831:                                              ; preds = %825
  store ptr %827, ptr %828, align 8, !tbaa !58
  br label %832

832:                                              ; preds = %825, %831
  %833 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 105
  %834 = load ptr, ptr %833, align 8, !tbaa !59
  %835 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 105, i32 0, i32 0, i32 0, i32 1
  %836 = load ptr, ptr %835, align 8, !tbaa !58
  %837 = icmp eq ptr %836, %834
  br i1 %837, label %839, label %838

838:                                              ; preds = %832
  store ptr %834, ptr %835, align 8, !tbaa !58
  br label %839

839:                                              ; preds = %832, %838
  %840 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 106
  %841 = load ptr, ptr %840, align 8, !tbaa !59
  %842 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 106, i32 0, i32 0, i32 0, i32 1
  %843 = load ptr, ptr %842, align 8, !tbaa !58
  %844 = icmp eq ptr %843, %841
  br i1 %844, label %846, label %845

845:                                              ; preds = %839
  store ptr %841, ptr %842, align 8, !tbaa !58
  br label %846

846:                                              ; preds = %839, %845
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #31
  store i32 -1, ptr %10, align 4, !tbaa !67
  %847 = icmp eq i64 %804, 0
  br i1 %847, label %852, label %848

848:                                              ; preds = %846
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %819, ptr %820, i64 noundef %804, ptr noundef nonnull align 4 dereferenceable(4) %10)
  %849 = load i64, ptr %60, align 8, !tbaa !43
  %850 = load ptr, ptr %828, align 8, !tbaa !58
  %851 = load ptr, ptr %826, align 8, !tbaa !59
  br label %852

852:                                              ; preds = %846, %848
  %853 = phi ptr [ %851, %848 ], [ %827, %846 ]
  %854 = phi ptr [ %850, %848 ], [ %827, %846 ]
  %855 = phi i64 [ %849, %848 ], [ 0, %846 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #31
  store i32 -1, ptr %11, align 4, !tbaa !67
  %856 = ptrtoint ptr %854 to i64
  %857 = ptrtoint ptr %853 to i64
  %858 = sub i64 %856, %857
  %859 = ashr exact i64 %858, 2
  %860 = icmp ugt i64 %855, %859
  br i1 %860, label %861, label %864

861:                                              ; preds = %852
  %862 = sub i64 %855, %859
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %826, ptr %854, i64 noundef %862, ptr noundef nonnull align 4 dereferenceable(4) %11)
  %863 = load i64, ptr %60, align 8, !tbaa !43
  br label %870

864:                                              ; preds = %852
  %865 = icmp ult i64 %855, %859
  br i1 %865, label %866, label %870

866:                                              ; preds = %864
  %867 = getelementptr inbounds i32, ptr %853, i64 %855
  %868 = icmp eq ptr %854, %867
  br i1 %868, label %870, label %869

869:                                              ; preds = %866
  store ptr %867, ptr %828, align 8, !tbaa !58
  br label %870

870:                                              ; preds = %861, %864, %866, %869
  %871 = phi i64 [ %863, %861 ], [ %855, %864 ], [ %855, %866 ], [ %855, %869 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #31
  store i32 -1, ptr %12, align 4, !tbaa !67
  %872 = load ptr, ptr %835, align 8, !tbaa !58
  %873 = load ptr, ptr %833, align 8, !tbaa !59
  %874 = ptrtoint ptr %872 to i64
  %875 = ptrtoint ptr %873 to i64
  %876 = sub i64 %874, %875
  %877 = ashr exact i64 %876, 2
  %878 = icmp ugt i64 %871, %877
  br i1 %878, label %879, label %882

879:                                              ; preds = %870
  %880 = sub i64 %871, %877
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %833, ptr %872, i64 noundef %880, ptr noundef nonnull align 4 dereferenceable(4) %12)
  %881 = load i64, ptr %60, align 8, !tbaa !43
  br label %888

882:                                              ; preds = %870
  %883 = icmp ult i64 %871, %877
  br i1 %883, label %884, label %888

884:                                              ; preds = %882
  %885 = getelementptr inbounds i32, ptr %873, i64 %871
  %886 = icmp eq ptr %872, %885
  br i1 %886, label %888, label %887

887:                                              ; preds = %884
  store ptr %885, ptr %835, align 8, !tbaa !58
  br label %888

888:                                              ; preds = %879, %882, %884, %887
  %889 = phi i64 [ %881, %879 ], [ %871, %882 ], [ %871, %884 ], [ %871, %887 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #31
  store i32 -1, ptr %13, align 4, !tbaa !67
  %890 = load ptr, ptr %842, align 8, !tbaa !58
  %891 = load ptr, ptr %840, align 8, !tbaa !59
  %892 = ptrtoint ptr %890 to i64
  %893 = ptrtoint ptr %891 to i64
  %894 = sub i64 %892, %893
  %895 = ashr exact i64 %894, 2
  %896 = icmp ugt i64 %889, %895
  br i1 %896, label %897, label %899

897:                                              ; preds = %888
  %898 = sub i64 %889, %895
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %840, ptr %890, i64 noundef %898, ptr noundef nonnull align 4 dereferenceable(4) %13)
  br label %905

899:                                              ; preds = %888
  %900 = icmp ult i64 %889, %895
  br i1 %900, label %901, label %905

901:                                              ; preds = %899
  %902 = getelementptr inbounds i32, ptr %891, i64 %889
  %903 = icmp eq ptr %890, %902
  br i1 %903, label %905, label %904

904:                                              ; preds = %901
  store ptr %902, ptr %842, align 8, !tbaa !58
  br label %905

905:                                              ; preds = %897, %899, %901, %904
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #31
  %906 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98
  %907 = load ptr, ptr %906, align 8, !tbaa !59
  %908 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98, i32 0, i32 0, i32 0, i32 1
  %909 = load ptr, ptr %908, align 8, !tbaa !58
  %910 = icmp eq ptr %909, %907
  br i1 %910, label %912, label %911

911:                                              ; preds = %905
  store ptr %907, ptr %908, align 8, !tbaa !58
  br label %912

912:                                              ; preds = %905, %911
  %913 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99
  %914 = load ptr, ptr %913, align 8, !tbaa !59
  %915 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99, i32 0, i32 0, i32 0, i32 1
  %916 = load ptr, ptr %915, align 8, !tbaa !58
  %917 = icmp eq ptr %916, %914
  br i1 %917, label %919, label %918

918:                                              ; preds = %912
  store ptr %914, ptr %915, align 8, !tbaa !58
  br label %919

919:                                              ; preds = %912, %918
  %920 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100
  %921 = load ptr, ptr %920, align 8, !tbaa !59
  %922 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100, i32 0, i32 0, i32 0, i32 1
  %923 = load ptr, ptr %922, align 8, !tbaa !58
  %924 = icmp eq ptr %923, %921
  br i1 %924, label %926, label %925

925:                                              ; preds = %919
  store ptr %921, ptr %922, align 8, !tbaa !58
  br label %926

926:                                              ; preds = %919, %925
  %927 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 107
  %928 = load ptr, ptr %927, align 8, !tbaa !59
  %929 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 107, i32 0, i32 0, i32 0, i32 1
  %930 = load ptr, ptr %929, align 8, !tbaa !58
  %931 = icmp eq ptr %930, %928
  br i1 %931, label %933, label %932

932:                                              ; preds = %926
  store ptr %928, ptr %929, align 8, !tbaa !58
  br label %933

933:                                              ; preds = %926, %932
  %934 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 108
  %935 = load ptr, ptr %934, align 8, !tbaa !59
  %936 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 108, i32 0, i32 0, i32 0, i32 1
  %937 = load ptr, ptr %936, align 8, !tbaa !58
  %938 = icmp eq ptr %937, %935
  br i1 %938, label %940, label %939

939:                                              ; preds = %933
  store ptr %935, ptr %936, align 8, !tbaa !58
  br label %940

940:                                              ; preds = %933, %939
  %941 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 109
  %942 = load ptr, ptr %941, align 8, !tbaa !59
  %943 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 109, i32 0, i32 0, i32 0, i32 1
  %944 = load ptr, ptr %943, align 8, !tbaa !58
  %945 = icmp eq ptr %944, %942
  br i1 %945, label %947, label %946

946:                                              ; preds = %940
  store ptr %942, ptr %943, align 8, !tbaa !58
  br label %947

947:                                              ; preds = %940, %946
  %948 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 110
  %949 = load ptr, ptr %948, align 8, !tbaa !59
  %950 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 110, i32 0, i32 0, i32 0, i32 1
  %951 = load ptr, ptr %950, align 8, !tbaa !58
  %952 = icmp eq ptr %951, %949
  br i1 %952, label %954, label %953

953:                                              ; preds = %947
  store ptr %949, ptr %950, align 8, !tbaa !58
  br label %954

954:                                              ; preds = %947, %953
  %955 = load i32, ptr %170, align 8, !tbaa !91
  %956 = add nsw i32 %955, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #31
  store i32 9999999, ptr %14, align 4, !tbaa !67
  %957 = icmp eq i32 %956, 0
  br i1 %957, label %963, label %958

958:                                              ; preds = %954
  %959 = sext i32 %956 to i64
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %927, ptr %928, i64 noundef %959, ptr noundef nonnull align 4 dereferenceable(4) %14)
  %960 = load i32, ptr %170, align 8, !tbaa !91
  %961 = load ptr, ptr %936, align 8, !tbaa !58
  %962 = load ptr, ptr %934, align 8, !tbaa !59
  br label %963

963:                                              ; preds = %954, %958
  %964 = phi ptr [ %962, %958 ], [ %935, %954 ]
  %965 = phi ptr [ %961, %958 ], [ %935, %954 ]
  %966 = phi i32 [ %960, %958 ], [ -1, %954 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #31
  %967 = add nsw i32 %966, 1
  %968 = sext i32 %967 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #31
  store i32 -9999999, ptr %15, align 4, !tbaa !67
  %969 = ptrtoint ptr %965 to i64
  %970 = ptrtoint ptr %964 to i64
  %971 = sub i64 %969, %970
  %972 = ashr exact i64 %971, 2
  %973 = icmp ult i64 %972, %968
  br i1 %973, label %974, label %979

974:                                              ; preds = %963
  %975 = sub nsw i64 %968, %972
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %934, ptr %965, i64 noundef %975, ptr noundef nonnull align 4 dereferenceable(4) %15)
  %976 = load i32, ptr %170, align 8, !tbaa !91
  %977 = add nsw i32 %976, 1
  %978 = sext i32 %977 to i64
  br label %985

979:                                              ; preds = %963
  %980 = icmp ugt i64 %972, %968
  br i1 %980, label %981, label %985

981:                                              ; preds = %979
  %982 = getelementptr inbounds i32, ptr %964, i64 %968
  %983 = icmp eq ptr %965, %982
  br i1 %983, label %985, label %984

984:                                              ; preds = %981
  store ptr %982, ptr %936, align 8, !tbaa !58
  br label %985

985:                                              ; preds = %974, %979, %981, %984
  %986 = phi i64 [ %978, %974 ], [ %968, %979 ], [ %968, %981 ], [ %968, %984 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #31
  store i32 9999999, ptr %16, align 4, !tbaa !67
  %987 = load ptr, ptr %943, align 8, !tbaa !58
  %988 = load ptr, ptr %941, align 8, !tbaa !59
  %989 = ptrtoint ptr %987 to i64
  %990 = ptrtoint ptr %988 to i64
  %991 = sub i64 %989, %990
  %992 = ashr exact i64 %991, 2
  %993 = icmp ugt i64 %986, %992
  br i1 %993, label %994, label %999

994:                                              ; preds = %985
  %995 = sub nsw i64 %986, %992
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %941, ptr %987, i64 noundef %995, ptr noundef nonnull align 4 dereferenceable(4) %16)
  %996 = load i32, ptr %170, align 8, !tbaa !91
  %997 = add nsw i32 %996, 1
  %998 = sext i32 %997 to i64
  br label %1005

999:                                              ; preds = %985
  %1000 = icmp ult i64 %986, %992
  br i1 %1000, label %1001, label %1005

1001:                                             ; preds = %999
  %1002 = getelementptr inbounds i32, ptr %988, i64 %986
  %1003 = icmp eq ptr %987, %1002
  br i1 %1003, label %1005, label %1004

1004:                                             ; preds = %1001
  store ptr %1002, ptr %943, align 8, !tbaa !58
  br label %1005

1005:                                             ; preds = %994, %999, %1001, %1004
  %1006 = phi i64 [ %998, %994 ], [ %986, %999 ], [ %986, %1001 ], [ %986, %1004 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #31
  store i32 -9999999, ptr %17, align 4, !tbaa !67
  %1007 = load ptr, ptr %950, align 8, !tbaa !58
  %1008 = load ptr, ptr %948, align 8, !tbaa !59
  %1009 = ptrtoint ptr %1007 to i64
  %1010 = ptrtoint ptr %1008 to i64
  %1011 = sub i64 %1009, %1010
  %1012 = ashr exact i64 %1011, 2
  %1013 = icmp ugt i64 %1006, %1012
  br i1 %1013, label %1014, label %1016

1014:                                             ; preds = %1005
  %1015 = sub nsw i64 %1006, %1012
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %948, ptr %1007, i64 noundef %1015, ptr noundef nonnull align 4 dereferenceable(4) %17)
  br label %1022

1016:                                             ; preds = %1005
  %1017 = icmp ult i64 %1006, %1012
  br i1 %1017, label %1018, label %1022

1018:                                             ; preds = %1016
  %1019 = getelementptr inbounds i32, ptr %1008, i64 %1006
  %1020 = icmp eq ptr %1007, %1019
  br i1 %1020, label %1022, label %1021

1021:                                             ; preds = %1018
  store ptr %1019, ptr %950, align 8, !tbaa !58
  br label %1022

1022:                                             ; preds = %1014, %1016, %1018, %1021
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #31
  %1023 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 111
  %1024 = load ptr, ptr %1023, align 8, !tbaa !59
  %1025 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 111, i32 0, i32 0, i32 0, i32 1
  %1026 = load ptr, ptr %1025, align 8, !tbaa !58
  %1027 = icmp eq ptr %1026, %1024
  br i1 %1027, label %1029, label %1028

1028:                                             ; preds = %1022
  store ptr %1024, ptr %1025, align 8, !tbaa !58
  br label %1029

1029:                                             ; preds = %1022, %1028
  %1030 = load i32, ptr %170, align 8, !tbaa !91
  %1031 = add nsw i32 %1030, 1
  %1032 = icmp eq i32 %1031, 0
  br i1 %1032, label %1035, label %1033

1033:                                             ; preds = %1029
  %1034 = sext i32 %1031 to i64
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %1023, i64 noundef %1034)
  br label %1035

1035:                                             ; preds = %1029, %1033
  %1036 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 112
  %1037 = load ptr, ptr %1036, align 8, !tbaa !59
  %1038 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 112, i32 0, i32 0, i32 0, i32 1
  %1039 = load ptr, ptr %1038, align 8, !tbaa !58
  %1040 = icmp eq ptr %1039, %1037
  br i1 %1040, label %1042, label %1041

1041:                                             ; preds = %1035
  store ptr %1037, ptr %1038, align 8, !tbaa !58
  br label %1042

1042:                                             ; preds = %1035, %1041
  %1043 = load i32, ptr %170, align 8, !tbaa !91
  %1044 = add nsw i32 %1043, 1
  %1045 = icmp eq i32 %1044, 0
  br i1 %1045, label %1048, label %1046

1046:                                             ; preds = %1042
  %1047 = sext i32 %1044 to i64
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %1036, i64 noundef %1047)
  br label %1048

1048:                                             ; preds = %1042, %1046
  %1049 = load i64, ptr %60, align 8, !tbaa !43
  %1050 = trunc i64 %1049 to i32
  %1051 = icmp sgt i32 %1050, 0
  br i1 %1051, label %1054, label %1052

1052:                                             ; preds = %1048
  %1053 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 82
  store i32 0, ptr %1053, align 4, !tbaa !195
  br label %1626

1054:                                             ; preds = %1048
  %1055 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %1056 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %1057 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 101, i32 0, i32 0, i32 0, i32 2
  %1058 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 102, i32 0, i32 0, i32 0, i32 2
  %1059 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100, i32 0, i32 0, i32 0, i32 2
  %1060 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %1061 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99, i32 0, i32 0, i32 0, i32 2
  %1062 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %1063 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98, i32 0, i32 0, i32 0, i32 2
  %1064 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  br label %1123

1065:                                             ; preds = %285, %1102
  %1066 = phi i64 [ 0, %285 ], [ %1103, %1102 ]
  %1067 = getelementptr inbounds i32, ptr %287, i64 %1066
  %1068 = load i32, ptr %1067, align 4, !tbaa !67
  %1069 = zext i32 %1068 to i64
  %1070 = icmp eq i64 %1066, %1069
  br i1 %1070, label %1102, label %1071

1071:                                             ; preds = %1065
  %1072 = sext i32 %1068 to i64
  %1073 = getelementptr inbounds i32, ptr %289, i64 %1072
  %1074 = load i32, ptr %1073, align 4, !tbaa !67
  %1075 = getelementptr inbounds i32, ptr %289, i64 %1066
  %1076 = load i32, ptr %1075, align 4, !tbaa !67
  %1077 = icmp slt i32 %1074, %1076
  br i1 %1077, label %1078, label %1085

1078:                                             ; preds = %1071
  %1079 = getelementptr inbounds i32, ptr %291, i64 %1066
  %1080 = load i32, ptr %1079, align 4, !tbaa !67
  %1081 = and i32 %1080, -2147483647
  %1082 = icmp eq i32 %1081, 1
  br i1 %1082, label %1083, label %1085

1083:                                             ; preds = %1078
  %1084 = getelementptr inbounds i32, ptr %297, i64 %1072
  br label %1097

1085:                                             ; preds = %1078, %1071
  %1086 = getelementptr inbounds i32, ptr %292, i64 %1072
  %1087 = load i32, ptr %1086, align 4, !tbaa !67
  %1088 = getelementptr inbounds i32, ptr %293, i64 %1066
  store i32 %1087, ptr %1088, align 4, !tbaa !67
  %1089 = load i32, ptr %1073, align 4, !tbaa !67
  %1090 = load i32, ptr %1075, align 4, !tbaa !67
  %1091 = icmp sgt i32 %1089, %1090
  br i1 %1091, label %1092, label %1102

1092:                                             ; preds = %1085
  %1093 = getelementptr inbounds i32, ptr %295, i64 %1072
  %1094 = load i32, ptr %1093, align 4, !tbaa !67
  %1095 = sext i32 %1094 to i64
  %1096 = getelementptr inbounds i32, ptr %292, i64 %1095
  br label %1097

1097:                                             ; preds = %1092, %1083
  %1098 = phi ptr [ %1084, %1083 ], [ %1096, %1092 ]
  %1099 = phi ptr [ %293, %1083 ], [ %296, %1092 ]
  %1100 = load i32, ptr %1098, align 4, !tbaa !67
  %1101 = getelementptr inbounds i32, ptr %1099, i64 %1066
  store i32 %1100, ptr %1101, align 4, !tbaa !67
  br label %1102

1102:                                             ; preds = %1097, %1085, %1065
  %1103 = add nuw nsw i64 %1066, 1
  %1104 = icmp eq i64 %1103, %298
  br i1 %1104, label %802, label %1065, !llvm.loop !212

1105:                                             ; preds = %1619
  %1106 = trunc i64 %1622 to i32
  %1107 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 82
  store i32 %1620, ptr %1107, align 4, !tbaa !195
  %1108 = icmp sgt i32 %1106, 0
  br i1 %1108, label %1109, label %1626

1109:                                             ; preds = %1105
  %1110 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %1111 = load ptr, ptr %1110, align 8, !tbaa !75
  %1112 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %1113 = load ptr, ptr %1112, align 8
  %1114 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %1115 = load ptr, ptr %1114, align 8
  %1116 = load ptr, ptr %833, align 8
  %1117 = load ptr, ptr %819, align 8
  %1118 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %1119 = load ptr, ptr %1118, align 8
  %1120 = load ptr, ptr %826, align 8
  %1121 = load ptr, ptr %840, align 8
  %1122 = and i64 %1622, 4294967295
  br label %1638

1123:                                             ; preds = %1054, %1619
  %1124 = phi i64 [ 0, %1054 ], [ %1621, %1619 ]
  %1125 = phi i32 [ 0, %1054 ], [ %1620, %1619 ]
  %1126 = load ptr, ptr %1055, align 8, !tbaa !76
  %1127 = getelementptr inbounds i32, ptr %1126, i64 %1124
  %1128 = load i32, ptr %1127, align 4, !tbaa !67
  %1129 = zext i32 %1128 to i64
  %1130 = icmp eq i64 %1124, %1129
  br i1 %1130, label %1619, label %1131

1131:                                             ; preds = %1123
  %1132 = load ptr, ptr %1056, align 8, !tbaa !62
  %1133 = sext i32 %1128 to i64
  %1134 = getelementptr inbounds i32, ptr %1132, i64 %1133
  %1135 = load i32, ptr %1134, align 4, !tbaa !67
  %1136 = getelementptr inbounds i32, ptr %1132, i64 %1124
  %1137 = load i32, ptr %1136, align 4, !tbaa !67
  %1138 = icmp slt i32 %1135, %1137
  %1139 = select i1 %1138, i32 2, i32 1
  %1140 = load ptr, ptr %807, align 8, !tbaa !58
  %1141 = load ptr, ptr %1057, align 8, !tbaa !110
  %1142 = icmp eq ptr %1140, %1141
  br i1 %1142, label %1146, label %1143

1143:                                             ; preds = %1131
  %1144 = trunc i64 %1124 to i32
  store i32 %1144, ptr %1140, align 4, !tbaa !67
  %1145 = getelementptr inbounds i32, ptr %1140, i64 1
  store ptr %1145, ptr %807, align 8, !tbaa !58
  br label %1177

1146:                                             ; preds = %1131
  %1147 = load ptr, ptr %805, align 8, !tbaa !59
  %1148 = ptrtoint ptr %1140 to i64
  %1149 = ptrtoint ptr %1147 to i64
  %1150 = sub i64 %1148, %1149
  %1151 = icmp eq i64 %1150, 9223372036854775804
  br i1 %1151, label %1152, label %1153

1152:                                             ; preds = %1146
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1153:                                             ; preds = %1146
  %1154 = ashr exact i64 %1150, 2
  %1155 = call i64 @llvm.umax.i64(i64 %1154, i64 1)
  %1156 = add i64 %1155, %1154
  %1157 = icmp ult i64 %1156, %1154
  %1158 = icmp ugt i64 %1156, 2305843009213693951
  %1159 = or i1 %1157, %1158
  %1160 = select i1 %1159, i64 2305843009213693951, i64 %1156
  %1161 = icmp eq i64 %1160, 0
  br i1 %1161, label %1165, label %1162

1162:                                             ; preds = %1153
  %1163 = shl nuw nsw i64 %1160, 2
  %1164 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1163) #35
  br label %1165

1165:                                             ; preds = %1162, %1153
  %1166 = phi ptr [ %1164, %1162 ], [ null, %1153 ]
  %1167 = getelementptr inbounds i32, ptr %1166, i64 %1154
  %1168 = trunc i64 %1124 to i32
  store i32 %1168, ptr %1167, align 4, !tbaa !67
  %1169 = icmp sgt i64 %1150, 0
  br i1 %1169, label %1170, label %1171

1170:                                             ; preds = %1165
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1166, ptr align 4 %1147, i64 %1150, i1 false)
  br label %1171

1171:                                             ; preds = %1170, %1165
  %1172 = getelementptr inbounds i32, ptr %1167, i64 1
  %1173 = icmp eq ptr %1147, null
  br i1 %1173, label %1175, label %1174

1174:                                             ; preds = %1171
  call void @_ZdlPv(ptr noundef nonnull %1147) #33
  br label %1175

1175:                                             ; preds = %1174, %1171
  store ptr %1166, ptr %805, align 8, !tbaa !59
  store ptr %1172, ptr %807, align 8, !tbaa !58
  %1176 = getelementptr inbounds i32, ptr %1166, i64 %1160
  store ptr %1176, ptr %1057, align 8, !tbaa !110
  br label %1177

1177:                                             ; preds = %1143, %1175
  %1178 = load ptr, ptr %814, align 8, !tbaa !58
  %1179 = load ptr, ptr %1058, align 8, !tbaa !110
  %1180 = icmp eq ptr %1178, %1179
  br i1 %1180, label %1183, label %1181

1181:                                             ; preds = %1177
  store i32 %1128, ptr %1178, align 4, !tbaa !67
  %1182 = getelementptr inbounds i32, ptr %1178, i64 1
  store ptr %1182, ptr %814, align 8, !tbaa !58
  br label %1213

1183:                                             ; preds = %1177
  %1184 = load ptr, ptr %812, align 8, !tbaa !59
  %1185 = ptrtoint ptr %1178 to i64
  %1186 = ptrtoint ptr %1184 to i64
  %1187 = sub i64 %1185, %1186
  %1188 = icmp eq i64 %1187, 9223372036854775804
  br i1 %1188, label %1189, label %1190

1189:                                             ; preds = %1183
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1190:                                             ; preds = %1183
  %1191 = ashr exact i64 %1187, 2
  %1192 = call i64 @llvm.umax.i64(i64 %1191, i64 1)
  %1193 = add i64 %1192, %1191
  %1194 = icmp ult i64 %1193, %1191
  %1195 = icmp ugt i64 %1193, 2305843009213693951
  %1196 = or i1 %1194, %1195
  %1197 = select i1 %1196, i64 2305843009213693951, i64 %1193
  %1198 = icmp eq i64 %1197, 0
  br i1 %1198, label %1202, label %1199

1199:                                             ; preds = %1190
  %1200 = shl nuw nsw i64 %1197, 2
  %1201 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1200) #35
  br label %1202

1202:                                             ; preds = %1199, %1190
  %1203 = phi ptr [ %1201, %1199 ], [ null, %1190 ]
  %1204 = getelementptr inbounds i32, ptr %1203, i64 %1191
  store i32 %1128, ptr %1204, align 4, !tbaa !67
  %1205 = icmp sgt i64 %1187, 0
  br i1 %1205, label %1206, label %1207

1206:                                             ; preds = %1202
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1203, ptr align 4 %1184, i64 %1187, i1 false)
  br label %1207

1207:                                             ; preds = %1206, %1202
  %1208 = getelementptr inbounds i32, ptr %1204, i64 1
  %1209 = icmp eq ptr %1184, null
  br i1 %1209, label %1211, label %1210

1210:                                             ; preds = %1207
  call void @_ZdlPv(ptr noundef nonnull %1184) #33
  br label %1211

1211:                                             ; preds = %1210, %1207
  store ptr %1203, ptr %812, align 8, !tbaa !59
  store ptr %1208, ptr %814, align 8, !tbaa !58
  %1212 = getelementptr inbounds i32, ptr %1203, i64 %1197
  store ptr %1212, ptr %1058, align 8, !tbaa !110
  br label %1213

1213:                                             ; preds = %1181, %1211
  %1214 = load ptr, ptr %1056, align 8, !tbaa !62
  %1215 = getelementptr inbounds i32, ptr %1214, i64 %1124
  %1216 = load i32, ptr %1215, align 4, !tbaa !67
  %1217 = getelementptr inbounds i32, ptr %1214, i64 %1133
  %1218 = load i32, ptr %1217, align 4, !tbaa !67
  %1219 = icmp sgt i32 %1216, %1218
  %1220 = call i32 @llvm.smax.i32(i32 %1216, i32 %1218)
  %1221 = load ptr, ptr %922, align 8, !tbaa !58
  %1222 = load ptr, ptr %1059, align 8, !tbaa !110
  %1223 = icmp eq ptr %1221, %1222
  br i1 %1223, label %1226, label %1224

1224:                                             ; preds = %1213
  store i32 %1220, ptr %1221, align 4, !tbaa !67
  %1225 = getelementptr inbounds i32, ptr %1221, i64 1
  store ptr %1225, ptr %922, align 8, !tbaa !58
  br label %1260

1226:                                             ; preds = %1213
  %1227 = load ptr, ptr %920, align 8, !tbaa !59
  %1228 = ptrtoint ptr %1221 to i64
  %1229 = ptrtoint ptr %1227 to i64
  %1230 = sub i64 %1228, %1229
  %1231 = icmp eq i64 %1230, 9223372036854775804
  br i1 %1231, label %1232, label %1233

1232:                                             ; preds = %1226
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1233:                                             ; preds = %1226
  %1234 = ashr exact i64 %1230, 2
  %1235 = call i64 @llvm.umax.i64(i64 %1234, i64 1)
  %1236 = add i64 %1235, %1234
  %1237 = icmp ult i64 %1236, %1234
  %1238 = icmp ugt i64 %1236, 2305843009213693951
  %1239 = or i1 %1237, %1238
  %1240 = select i1 %1239, i64 2305843009213693951, i64 %1236
  %1241 = icmp eq i64 %1240, 0
  br i1 %1241, label %1248, label %1242

1242:                                             ; preds = %1233
  %1243 = shl nuw nsw i64 %1240, 2
  %1244 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1243) #35
  %1245 = load i32, ptr %1215, align 4
  %1246 = load i32, ptr %1217, align 4
  %1247 = select i1 %1219, i32 %1245, i32 %1246
  br label %1248

1248:                                             ; preds = %1242, %1233
  %1249 = phi i32 [ %1247, %1242 ], [ %1220, %1233 ]
  %1250 = phi ptr [ %1244, %1242 ], [ null, %1233 ]
  %1251 = getelementptr inbounds i32, ptr %1250, i64 %1234
  store i32 %1249, ptr %1251, align 4, !tbaa !67
  %1252 = icmp sgt i64 %1230, 0
  br i1 %1252, label %1253, label %1254

1253:                                             ; preds = %1248
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1250, ptr align 4 %1227, i64 %1230, i1 false)
  br label %1254

1254:                                             ; preds = %1253, %1248
  %1255 = getelementptr inbounds i32, ptr %1251, i64 1
  %1256 = icmp eq ptr %1227, null
  br i1 %1256, label %1258, label %1257

1257:                                             ; preds = %1254
  call void @_ZdlPv(ptr noundef nonnull %1227) #33
  br label %1258

1258:                                             ; preds = %1257, %1254
  store ptr %1250, ptr %920, align 8, !tbaa !59
  store ptr %1255, ptr %922, align 8, !tbaa !58
  %1259 = getelementptr inbounds i32, ptr %1250, i64 %1240
  store ptr %1259, ptr %1059, align 8, !tbaa !110
  br label %1260

1260:                                             ; preds = %1224, %1258
  %1261 = load ptr, ptr %1060, align 8, !tbaa !61
  %1262 = getelementptr inbounds i32, ptr %1261, i64 %1133
  %1263 = load i32, ptr %1262, align 4, !tbaa !67
  %1264 = mul nsw i32 %1263, %1139
  %1265 = load ptr, ptr %915, align 8, !tbaa !58
  %1266 = load ptr, ptr %1061, align 8, !tbaa !110
  %1267 = icmp eq ptr %1265, %1266
  br i1 %1267, label %1270, label %1268

1268:                                             ; preds = %1260
  store i32 %1264, ptr %1265, align 4, !tbaa !67
  %1269 = getelementptr inbounds i32, ptr %1265, i64 1
  store ptr %1269, ptr %915, align 8, !tbaa !58
  br label %1300

1270:                                             ; preds = %1260
  %1271 = load ptr, ptr %913, align 8, !tbaa !59
  %1272 = ptrtoint ptr %1265 to i64
  %1273 = ptrtoint ptr %1271 to i64
  %1274 = sub i64 %1272, %1273
  %1275 = icmp eq i64 %1274, 9223372036854775804
  br i1 %1275, label %1276, label %1277

1276:                                             ; preds = %1270
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1277:                                             ; preds = %1270
  %1278 = ashr exact i64 %1274, 2
  %1279 = call i64 @llvm.umax.i64(i64 %1278, i64 1)
  %1280 = add i64 %1279, %1278
  %1281 = icmp ult i64 %1280, %1278
  %1282 = icmp ugt i64 %1280, 2305843009213693951
  %1283 = or i1 %1281, %1282
  %1284 = select i1 %1283, i64 2305843009213693951, i64 %1280
  %1285 = icmp eq i64 %1284, 0
  br i1 %1285, label %1289, label %1286

1286:                                             ; preds = %1277
  %1287 = shl nuw nsw i64 %1284, 2
  %1288 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1287) #35
  br label %1289

1289:                                             ; preds = %1286, %1277
  %1290 = phi ptr [ %1288, %1286 ], [ null, %1277 ]
  %1291 = getelementptr inbounds i32, ptr %1290, i64 %1278
  store i32 %1264, ptr %1291, align 4, !tbaa !67
  %1292 = icmp sgt i64 %1274, 0
  br i1 %1292, label %1293, label %1294

1293:                                             ; preds = %1289
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1290, ptr align 4 %1271, i64 %1274, i1 false)
  br label %1294

1294:                                             ; preds = %1293, %1289
  %1295 = getelementptr inbounds i32, ptr %1291, i64 1
  %1296 = icmp eq ptr %1271, null
  br i1 %1296, label %1298, label %1297

1297:                                             ; preds = %1294
  call void @_ZdlPv(ptr noundef nonnull %1271) #33
  br label %1298

1298:                                             ; preds = %1297, %1294
  store ptr %1290, ptr %913, align 8, !tbaa !59
  store ptr %1295, ptr %915, align 8, !tbaa !58
  %1299 = getelementptr inbounds i32, ptr %1290, i64 %1284
  store ptr %1299, ptr %1061, align 8, !tbaa !110
  br label %1300

1300:                                             ; preds = %1268, %1298
  %1301 = load ptr, ptr %1056, align 8, !tbaa !62
  %1302 = getelementptr inbounds i32, ptr %1301, i64 %1133
  %1303 = load i32, ptr %1302, align 4, !tbaa !67
  %1304 = getelementptr inbounds i32, ptr %1301, i64 %1124
  %1305 = load i32, ptr %1304, align 4, !tbaa !67
  %1306 = icmp slt i32 %1303, %1305
  %1307 = load ptr, ptr %1062, align 8, !tbaa !60
  br i1 %1306, label %1308, label %1353

1308:                                             ; preds = %1300
  %1309 = getelementptr inbounds i32, ptr %1307, i64 %1124
  %1310 = load i32, ptr %1309, align 4, !tbaa !67
  %1311 = and i32 %1310, -2147483647
  %1312 = icmp eq i32 %1311, 1
  br i1 %1312, label %1313, label %1353

1313:                                             ; preds = %1308
  %1314 = getelementptr inbounds i32, ptr %1307, i64 %1133
  %1315 = load i32, ptr %1314, align 4, !tbaa !67
  %1316 = mul nsw i32 %1315, %1139
  %1317 = add nsw i32 %1316, 1
  %1318 = load ptr, ptr %908, align 8, !tbaa !58
  %1319 = load ptr, ptr %1063, align 8, !tbaa !110
  %1320 = icmp eq ptr %1318, %1319
  br i1 %1320, label %1323, label %1321

1321:                                             ; preds = %1313
  store i32 %1317, ptr %1318, align 4, !tbaa !67
  %1322 = getelementptr inbounds i32, ptr %1318, i64 1
  store ptr %1322, ptr %908, align 8, !tbaa !58
  br label %1392

1323:                                             ; preds = %1313
  %1324 = load ptr, ptr %906, align 8, !tbaa !59
  %1325 = ptrtoint ptr %1318 to i64
  %1326 = ptrtoint ptr %1324 to i64
  %1327 = sub i64 %1325, %1326
  %1328 = icmp eq i64 %1327, 9223372036854775804
  br i1 %1328, label %1329, label %1330

1329:                                             ; preds = %1323
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1330:                                             ; preds = %1323
  %1331 = ashr exact i64 %1327, 2
  %1332 = call i64 @llvm.umax.i64(i64 %1331, i64 1)
  %1333 = add i64 %1332, %1331
  %1334 = icmp ult i64 %1333, %1331
  %1335 = icmp ugt i64 %1333, 2305843009213693951
  %1336 = or i1 %1334, %1335
  %1337 = select i1 %1336, i64 2305843009213693951, i64 %1333
  %1338 = icmp eq i64 %1337, 0
  br i1 %1338, label %1342, label %1339

1339:                                             ; preds = %1330
  %1340 = shl nuw nsw i64 %1337, 2
  %1341 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1340) #35
  br label %1342

1342:                                             ; preds = %1339, %1330
  %1343 = phi ptr [ %1341, %1339 ], [ null, %1330 ]
  %1344 = getelementptr inbounds i32, ptr %1343, i64 %1331
  store i32 %1317, ptr %1344, align 4, !tbaa !67
  %1345 = icmp sgt i64 %1327, 0
  br i1 %1345, label %1346, label %1347

1346:                                             ; preds = %1342
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1343, ptr align 4 %1324, i64 %1327, i1 false)
  br label %1347

1347:                                             ; preds = %1346, %1342
  %1348 = getelementptr inbounds i32, ptr %1344, i64 1
  %1349 = icmp eq ptr %1324, null
  br i1 %1349, label %1351, label %1350

1350:                                             ; preds = %1347
  call void @_ZdlPv(ptr noundef nonnull %1324) #33
  br label %1351

1351:                                             ; preds = %1350, %1347
  store ptr %1343, ptr %906, align 8, !tbaa !59
  store ptr %1348, ptr %908, align 8, !tbaa !58
  %1352 = getelementptr inbounds i32, ptr %1343, i64 %1337
  store ptr %1352, ptr %1063, align 8, !tbaa !110
  br label %1392

1353:                                             ; preds = %1300, %1308
  %1354 = getelementptr inbounds i32, ptr %1307, i64 %1133
  %1355 = load i32, ptr %1354, align 4, !tbaa !67
  %1356 = mul nsw i32 %1355, %1139
  %1357 = load ptr, ptr %908, align 8, !tbaa !58
  %1358 = load ptr, ptr %1063, align 8, !tbaa !110
  %1359 = icmp eq ptr %1357, %1358
  br i1 %1359, label %1362, label %1360

1360:                                             ; preds = %1353
  store i32 %1356, ptr %1357, align 4, !tbaa !67
  %1361 = getelementptr inbounds i32, ptr %1357, i64 1
  store ptr %1361, ptr %908, align 8, !tbaa !58
  br label %1392

1362:                                             ; preds = %1353
  %1363 = load ptr, ptr %906, align 8, !tbaa !59
  %1364 = ptrtoint ptr %1357 to i64
  %1365 = ptrtoint ptr %1363 to i64
  %1366 = sub i64 %1364, %1365
  %1367 = icmp eq i64 %1366, 9223372036854775804
  br i1 %1367, label %1368, label %1369

1368:                                             ; preds = %1362
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1369:                                             ; preds = %1362
  %1370 = ashr exact i64 %1366, 2
  %1371 = call i64 @llvm.umax.i64(i64 %1370, i64 1)
  %1372 = add i64 %1371, %1370
  %1373 = icmp ult i64 %1372, %1370
  %1374 = icmp ugt i64 %1372, 2305843009213693951
  %1375 = or i1 %1373, %1374
  %1376 = select i1 %1375, i64 2305843009213693951, i64 %1372
  %1377 = icmp eq i64 %1376, 0
  br i1 %1377, label %1381, label %1378

1378:                                             ; preds = %1369
  %1379 = shl nuw nsw i64 %1376, 2
  %1380 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1379) #35
  br label %1381

1381:                                             ; preds = %1378, %1369
  %1382 = phi ptr [ %1380, %1378 ], [ null, %1369 ]
  %1383 = getelementptr inbounds i32, ptr %1382, i64 %1370
  store i32 %1356, ptr %1383, align 4, !tbaa !67
  %1384 = icmp sgt i64 %1366, 0
  br i1 %1384, label %1385, label %1386

1385:                                             ; preds = %1381
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1382, ptr align 4 %1363, i64 %1366, i1 false)
  br label %1386

1386:                                             ; preds = %1385, %1381
  %1387 = getelementptr inbounds i32, ptr %1383, i64 1
  %1388 = icmp eq ptr %1363, null
  br i1 %1388, label %1390, label %1389

1389:                                             ; preds = %1386
  call void @_ZdlPv(ptr noundef nonnull %1363) #33
  br label %1390

1390:                                             ; preds = %1389, %1386
  store ptr %1382, ptr %906, align 8, !tbaa !59
  store ptr %1387, ptr %908, align 8, !tbaa !58
  %1391 = getelementptr inbounds i32, ptr %1382, i64 %1376
  store ptr %1391, ptr %1063, align 8, !tbaa !110
  br label %1392

1392:                                             ; preds = %1390, %1360, %1351, %1321
  %1393 = load ptr, ptr %833, align 8, !tbaa !59
  %1394 = getelementptr inbounds i32, ptr %1393, i64 %1124
  store i32 %1125, ptr %1394, align 4, !tbaa !67
  %1395 = add nsw i32 %1125, 1
  %1396 = load ptr, ptr %1056, align 8, !tbaa !62
  %1397 = getelementptr inbounds i32, ptr %1396, i64 %1133
  %1398 = load i32, ptr %1397, align 4, !tbaa !67
  %1399 = getelementptr inbounds i32, ptr %1396, i64 %1124
  %1400 = load i32, ptr %1399, align 4, !tbaa !67
  %1401 = icmp sgt i32 %1398, %1400
  br i1 %1401, label %1402, label %1619

1402:                                             ; preds = %1392
  %1403 = load ptr, ptr %1062, align 8, !tbaa !60
  %1404 = getelementptr inbounds i32, ptr %1403, i64 %1133
  %1405 = load i32, ptr %1404, align 4, !tbaa !67
  %1406 = and i32 %1405, 1
  %1407 = icmp eq i32 %1406, 0
  br i1 %1407, label %1408, label %1619

1408:                                             ; preds = %1402
  %1409 = load ptr, ptr %1064, align 8, !tbaa !74
  %1410 = getelementptr inbounds i32, ptr %1409, i64 %1133
  %1411 = load i32, ptr %1410, align 4, !tbaa !67
  %1412 = icmp eq i32 %1411, %1128
  br i1 %1412, label %1619, label %1413

1413:                                             ; preds = %1408
  %1414 = load ptr, ptr %807, align 8, !tbaa !58
  %1415 = load ptr, ptr %1057, align 8, !tbaa !110
  %1416 = icmp eq ptr %1414, %1415
  br i1 %1416, label %1420, label %1417

1417:                                             ; preds = %1413
  %1418 = trunc i64 %1124 to i32
  store i32 %1418, ptr %1414, align 4, !tbaa !67
  %1419 = getelementptr inbounds i32, ptr %1414, i64 1
  store ptr %1419, ptr %807, align 8, !tbaa !58
  br label %1451

1420:                                             ; preds = %1413
  %1421 = load ptr, ptr %805, align 8, !tbaa !59
  %1422 = ptrtoint ptr %1414 to i64
  %1423 = ptrtoint ptr %1421 to i64
  %1424 = sub i64 %1422, %1423
  %1425 = icmp eq i64 %1424, 9223372036854775804
  br i1 %1425, label %1426, label %1427

1426:                                             ; preds = %1420
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1427:                                             ; preds = %1420
  %1428 = ashr exact i64 %1424, 2
  %1429 = call i64 @llvm.umax.i64(i64 %1428, i64 1)
  %1430 = add i64 %1429, %1428
  %1431 = icmp ult i64 %1430, %1428
  %1432 = icmp ugt i64 %1430, 2305843009213693951
  %1433 = or i1 %1431, %1432
  %1434 = select i1 %1433, i64 2305843009213693951, i64 %1430
  %1435 = icmp eq i64 %1434, 0
  br i1 %1435, label %1439, label %1436

1436:                                             ; preds = %1427
  %1437 = shl nuw nsw i64 %1434, 2
  %1438 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1437) #35
  br label %1439

1439:                                             ; preds = %1436, %1427
  %1440 = phi ptr [ %1438, %1436 ], [ null, %1427 ]
  %1441 = getelementptr inbounds i32, ptr %1440, i64 %1428
  %1442 = trunc i64 %1124 to i32
  store i32 %1442, ptr %1441, align 4, !tbaa !67
  %1443 = icmp sgt i64 %1424, 0
  br i1 %1443, label %1444, label %1445

1444:                                             ; preds = %1439
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1440, ptr align 4 %1421, i64 %1424, i1 false)
  br label %1445

1445:                                             ; preds = %1444, %1439
  %1446 = getelementptr inbounds i32, ptr %1441, i64 1
  %1447 = icmp eq ptr %1421, null
  br i1 %1447, label %1449, label %1448

1448:                                             ; preds = %1445
  call void @_ZdlPv(ptr noundef nonnull %1421) #33
  br label %1449

1449:                                             ; preds = %1448, %1445
  store ptr %1440, ptr %805, align 8, !tbaa !59
  store ptr %1446, ptr %807, align 8, !tbaa !58
  %1450 = getelementptr inbounds i32, ptr %1440, i64 %1434
  store ptr %1450, ptr %1057, align 8, !tbaa !110
  br label %1451

1451:                                             ; preds = %1417, %1449
  %1452 = load ptr, ptr %814, align 8, !tbaa !58
  %1453 = load ptr, ptr %1058, align 8, !tbaa !110
  %1454 = icmp eq ptr %1452, %1453
  br i1 %1454, label %1457, label %1455

1455:                                             ; preds = %1451
  store i32 %1411, ptr %1452, align 4, !tbaa !67
  %1456 = getelementptr inbounds i32, ptr %1452, i64 1
  store ptr %1456, ptr %814, align 8, !tbaa !58
  br label %1487

1457:                                             ; preds = %1451
  %1458 = load ptr, ptr %812, align 8, !tbaa !59
  %1459 = ptrtoint ptr %1452 to i64
  %1460 = ptrtoint ptr %1458 to i64
  %1461 = sub i64 %1459, %1460
  %1462 = icmp eq i64 %1461, 9223372036854775804
  br i1 %1462, label %1463, label %1464

1463:                                             ; preds = %1457
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1464:                                             ; preds = %1457
  %1465 = ashr exact i64 %1461, 2
  %1466 = call i64 @llvm.umax.i64(i64 %1465, i64 1)
  %1467 = add i64 %1466, %1465
  %1468 = icmp ult i64 %1467, %1465
  %1469 = icmp ugt i64 %1467, 2305843009213693951
  %1470 = or i1 %1468, %1469
  %1471 = select i1 %1470, i64 2305843009213693951, i64 %1467
  %1472 = icmp eq i64 %1471, 0
  br i1 %1472, label %1476, label %1473

1473:                                             ; preds = %1464
  %1474 = shl nuw nsw i64 %1471, 2
  %1475 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1474) #35
  br label %1476

1476:                                             ; preds = %1473, %1464
  %1477 = phi ptr [ %1475, %1473 ], [ null, %1464 ]
  %1478 = getelementptr inbounds i32, ptr %1477, i64 %1465
  store i32 %1411, ptr %1478, align 4, !tbaa !67
  %1479 = icmp sgt i64 %1461, 0
  br i1 %1479, label %1480, label %1481

1480:                                             ; preds = %1476
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1477, ptr align 4 %1458, i64 %1461, i1 false)
  br label %1481

1481:                                             ; preds = %1480, %1476
  %1482 = getelementptr inbounds i32, ptr %1478, i64 1
  %1483 = icmp eq ptr %1458, null
  br i1 %1483, label %1485, label %1484

1484:                                             ; preds = %1481
  call void @_ZdlPv(ptr noundef nonnull %1458) #33
  br label %1485

1485:                                             ; preds = %1484, %1481
  store ptr %1477, ptr %812, align 8, !tbaa !59
  store ptr %1482, ptr %814, align 8, !tbaa !58
  %1486 = getelementptr inbounds i32, ptr %1477, i64 %1471
  store ptr %1486, ptr %1058, align 8, !tbaa !110
  br label %1487

1487:                                             ; preds = %1455, %1485
  %1488 = load ptr, ptr %1056, align 8, !tbaa !62
  %1489 = getelementptr inbounds i32, ptr %1488, i64 %1124
  %1490 = load i32, ptr %1489, align 4, !tbaa !67
  %1491 = sext i32 %1411 to i64
  %1492 = getelementptr inbounds i32, ptr %1488, i64 %1491
  %1493 = load i32, ptr %1492, align 4, !tbaa !67
  %1494 = icmp sgt i32 %1490, %1493
  %1495 = call i32 @llvm.smax.i32(i32 %1490, i32 %1493)
  %1496 = load ptr, ptr %922, align 8, !tbaa !58
  %1497 = load ptr, ptr %1059, align 8, !tbaa !110
  %1498 = icmp eq ptr %1496, %1497
  br i1 %1498, label %1501, label %1499

1499:                                             ; preds = %1487
  store i32 %1495, ptr %1496, align 4, !tbaa !67
  %1500 = getelementptr inbounds i32, ptr %1496, i64 1
  store ptr %1500, ptr %922, align 8, !tbaa !58
  br label %1535

1501:                                             ; preds = %1487
  %1502 = load ptr, ptr %920, align 8, !tbaa !59
  %1503 = ptrtoint ptr %1496 to i64
  %1504 = ptrtoint ptr %1502 to i64
  %1505 = sub i64 %1503, %1504
  %1506 = icmp eq i64 %1505, 9223372036854775804
  br i1 %1506, label %1507, label %1508

1507:                                             ; preds = %1501
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1508:                                             ; preds = %1501
  %1509 = ashr exact i64 %1505, 2
  %1510 = call i64 @llvm.umax.i64(i64 %1509, i64 1)
  %1511 = add i64 %1510, %1509
  %1512 = icmp ult i64 %1511, %1509
  %1513 = icmp ugt i64 %1511, 2305843009213693951
  %1514 = or i1 %1512, %1513
  %1515 = select i1 %1514, i64 2305843009213693951, i64 %1511
  %1516 = icmp eq i64 %1515, 0
  br i1 %1516, label %1523, label %1517

1517:                                             ; preds = %1508
  %1518 = shl nuw nsw i64 %1515, 2
  %1519 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1518) #35
  %1520 = load i32, ptr %1489, align 4
  %1521 = load i32, ptr %1492, align 4
  %1522 = select i1 %1494, i32 %1520, i32 %1521
  br label %1523

1523:                                             ; preds = %1517, %1508
  %1524 = phi i32 [ %1522, %1517 ], [ %1495, %1508 ]
  %1525 = phi ptr [ %1519, %1517 ], [ null, %1508 ]
  %1526 = getelementptr inbounds i32, ptr %1525, i64 %1509
  store i32 %1524, ptr %1526, align 4, !tbaa !67
  %1527 = icmp sgt i64 %1505, 0
  br i1 %1527, label %1528, label %1529

1528:                                             ; preds = %1523
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1525, ptr align 4 %1502, i64 %1505, i1 false)
  br label %1529

1529:                                             ; preds = %1528, %1523
  %1530 = getelementptr inbounds i32, ptr %1526, i64 1
  %1531 = icmp eq ptr %1502, null
  br i1 %1531, label %1533, label %1532

1532:                                             ; preds = %1529
  call void @_ZdlPv(ptr noundef nonnull %1502) #33
  br label %1533

1533:                                             ; preds = %1532, %1529
  store ptr %1525, ptr %920, align 8, !tbaa !59
  store ptr %1530, ptr %922, align 8, !tbaa !58
  %1534 = getelementptr inbounds i32, ptr %1525, i64 %1515
  store ptr %1534, ptr %1059, align 8, !tbaa !110
  br label %1535

1535:                                             ; preds = %1499, %1533
  %1536 = load ptr, ptr %1060, align 8, !tbaa !61
  %1537 = getelementptr inbounds i32, ptr %1536, i64 %1491
  %1538 = load i32, ptr %1537, align 4, !tbaa !67
  %1539 = mul nsw i32 %1538, %1139
  %1540 = load ptr, ptr %915, align 8, !tbaa !58
  %1541 = load ptr, ptr %1061, align 8, !tbaa !110
  %1542 = icmp eq ptr %1540, %1541
  br i1 %1542, label %1545, label %1543

1543:                                             ; preds = %1535
  store i32 %1539, ptr %1540, align 4, !tbaa !67
  %1544 = getelementptr inbounds i32, ptr %1540, i64 1
  store ptr %1544, ptr %915, align 8, !tbaa !58
  br label %1575

1545:                                             ; preds = %1535
  %1546 = load ptr, ptr %913, align 8, !tbaa !59
  %1547 = ptrtoint ptr %1540 to i64
  %1548 = ptrtoint ptr %1546 to i64
  %1549 = sub i64 %1547, %1548
  %1550 = icmp eq i64 %1549, 9223372036854775804
  br i1 %1550, label %1551, label %1552

1551:                                             ; preds = %1545
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1552:                                             ; preds = %1545
  %1553 = ashr exact i64 %1549, 2
  %1554 = call i64 @llvm.umax.i64(i64 %1553, i64 1)
  %1555 = add i64 %1554, %1553
  %1556 = icmp ult i64 %1555, %1553
  %1557 = icmp ugt i64 %1555, 2305843009213693951
  %1558 = or i1 %1556, %1557
  %1559 = select i1 %1558, i64 2305843009213693951, i64 %1555
  %1560 = icmp eq i64 %1559, 0
  br i1 %1560, label %1564, label %1561

1561:                                             ; preds = %1552
  %1562 = shl nuw nsw i64 %1559, 2
  %1563 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1562) #35
  br label %1564

1564:                                             ; preds = %1561, %1552
  %1565 = phi ptr [ %1563, %1561 ], [ null, %1552 ]
  %1566 = getelementptr inbounds i32, ptr %1565, i64 %1553
  store i32 %1539, ptr %1566, align 4, !tbaa !67
  %1567 = icmp sgt i64 %1549, 0
  br i1 %1567, label %1568, label %1569

1568:                                             ; preds = %1564
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1565, ptr align 4 %1546, i64 %1549, i1 false)
  br label %1569

1569:                                             ; preds = %1568, %1564
  %1570 = getelementptr inbounds i32, ptr %1566, i64 1
  %1571 = icmp eq ptr %1546, null
  br i1 %1571, label %1573, label %1572

1572:                                             ; preds = %1569
  call void @_ZdlPv(ptr noundef nonnull %1546) #33
  br label %1573

1573:                                             ; preds = %1572, %1569
  store ptr %1565, ptr %913, align 8, !tbaa !59
  store ptr %1570, ptr %915, align 8, !tbaa !58
  %1574 = getelementptr inbounds i32, ptr %1565, i64 %1559
  store ptr %1574, ptr %1061, align 8, !tbaa !110
  br label %1575

1575:                                             ; preds = %1543, %1573
  %1576 = load ptr, ptr %1062, align 8, !tbaa !60
  %1577 = getelementptr inbounds i32, ptr %1576, i64 %1491
  %1578 = load i32, ptr %1577, align 4, !tbaa !67
  %1579 = mul nsw i32 %1578, %1139
  %1580 = load ptr, ptr %908, align 8, !tbaa !58
  %1581 = load ptr, ptr %1063, align 8, !tbaa !110
  %1582 = icmp eq ptr %1580, %1581
  br i1 %1582, label %1585, label %1583

1583:                                             ; preds = %1575
  store i32 %1579, ptr %1580, align 4, !tbaa !67
  %1584 = getelementptr inbounds i32, ptr %1580, i64 1
  store ptr %1584, ptr %908, align 8, !tbaa !58
  br label %1615

1585:                                             ; preds = %1575
  %1586 = load ptr, ptr %906, align 8, !tbaa !59
  %1587 = ptrtoint ptr %1580 to i64
  %1588 = ptrtoint ptr %1586 to i64
  %1589 = sub i64 %1587, %1588
  %1590 = icmp eq i64 %1589, 9223372036854775804
  br i1 %1590, label %1591, label %1592

1591:                                             ; preds = %1585
  call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.143) #36
  unreachable

1592:                                             ; preds = %1585
  %1593 = ashr exact i64 %1589, 2
  %1594 = call i64 @llvm.umax.i64(i64 %1593, i64 1)
  %1595 = add i64 %1594, %1593
  %1596 = icmp ult i64 %1595, %1593
  %1597 = icmp ugt i64 %1595, 2305843009213693951
  %1598 = or i1 %1596, %1597
  %1599 = select i1 %1598, i64 2305843009213693951, i64 %1595
  %1600 = icmp eq i64 %1599, 0
  br i1 %1600, label %1604, label %1601

1601:                                             ; preds = %1592
  %1602 = shl nuw nsw i64 %1599, 2
  %1603 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %1602) #35
  br label %1604

1604:                                             ; preds = %1601, %1592
  %1605 = phi ptr [ %1603, %1601 ], [ null, %1592 ]
  %1606 = getelementptr inbounds i32, ptr %1605, i64 %1593
  store i32 %1579, ptr %1606, align 4, !tbaa !67
  %1607 = icmp sgt i64 %1589, 0
  br i1 %1607, label %1608, label %1609

1608:                                             ; preds = %1604
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1605, ptr align 4 %1586, i64 %1589, i1 false)
  br label %1609

1609:                                             ; preds = %1608, %1604
  %1610 = getelementptr inbounds i32, ptr %1606, i64 1
  %1611 = icmp eq ptr %1586, null
  br i1 %1611, label %1613, label %1612

1612:                                             ; preds = %1609
  call void @_ZdlPv(ptr noundef nonnull %1586) #33
  br label %1613

1613:                                             ; preds = %1612, %1609
  store ptr %1605, ptr %906, align 8, !tbaa !59
  store ptr %1610, ptr %908, align 8, !tbaa !58
  %1614 = getelementptr inbounds i32, ptr %1605, i64 %1599
  store ptr %1614, ptr %1063, align 8, !tbaa !110
  br label %1615

1615:                                             ; preds = %1583, %1613
  %1616 = load ptr, ptr %840, align 8, !tbaa !59
  %1617 = getelementptr inbounds i32, ptr %1616, i64 %1124
  store i32 %1395, ptr %1617, align 4, !tbaa !67
  %1618 = add nsw i32 %1125, 2
  br label %1619

1619:                                             ; preds = %1392, %1402, %1615, %1408, %1123
  %1620 = phi i32 [ %1125, %1123 ], [ %1395, %1402 ], [ %1395, %1392 ], [ %1618, %1615 ], [ %1395, %1408 ]
  %1621 = add nuw nsw i64 %1124, 1
  %1622 = load i64, ptr %60, align 8, !tbaa !43
  %1623 = shl i64 %1622, 32
  %1624 = ashr exact i64 %1623, 32
  %1625 = icmp slt i64 %1621, %1624
  br i1 %1625, label %1123, label %1105, !llvm.loop !213

1626:                                             ; preds = %1675, %1052, %1105
  %1627 = phi ptr [ %1053, %1052 ], [ %1107, %1105 ], [ %1107, %1675 ]
  %1628 = load i32, ptr %803, align 8, !tbaa !193
  %1629 = icmp sgt i32 %1628, 0
  br i1 %1629, label %1630, label %1720

1630:                                             ; preds = %1626
  %1631 = load ptr, ptr %135, align 8, !tbaa !59
  %1632 = load ptr, ptr %121, align 8, !tbaa !59
  %1633 = load ptr, ptr %142, align 8, !tbaa !59
  %1634 = load ptr, ptr %149, align 8, !tbaa !59
  %1635 = load ptr, ptr %128, align 8, !tbaa !59
  %1636 = load ptr, ptr %156, align 8, !tbaa !59
  %1637 = load ptr, ptr %163, align 8, !tbaa !59
  br label %1687

1638:                                             ; preds = %1109, %1675
  %1639 = phi i64 [ 0, %1109 ], [ %1676, %1675 ]
  %1640 = getelementptr inbounds i32, ptr %1111, i64 %1639
  %1641 = load i32, ptr %1640, align 4, !tbaa !67
  %1642 = zext i32 %1641 to i64
  %1643 = icmp eq i64 %1639, %1642
  br i1 %1643, label %1675, label %1644

1644:                                             ; preds = %1638
  %1645 = sext i32 %1641 to i64
  %1646 = getelementptr inbounds i32, ptr %1113, i64 %1645
  %1647 = load i32, ptr %1646, align 4, !tbaa !67
  %1648 = getelementptr inbounds i32, ptr %1113, i64 %1639
  %1649 = load i32, ptr %1648, align 4, !tbaa !67
  %1650 = icmp slt i32 %1647, %1649
  br i1 %1650, label %1651, label %1658

1651:                                             ; preds = %1644
  %1652 = getelementptr inbounds i32, ptr %1115, i64 %1639
  %1653 = load i32, ptr %1652, align 4, !tbaa !67
  %1654 = and i32 %1653, -2147483647
  %1655 = icmp eq i32 %1654, 1
  br i1 %1655, label %1656, label %1658

1656:                                             ; preds = %1651
  %1657 = getelementptr inbounds i32, ptr %1121, i64 %1645
  br label %1670

1658:                                             ; preds = %1651, %1644
  %1659 = getelementptr inbounds i32, ptr %1116, i64 %1645
  %1660 = load i32, ptr %1659, align 4, !tbaa !67
  %1661 = getelementptr inbounds i32, ptr %1117, i64 %1639
  store i32 %1660, ptr %1661, align 4, !tbaa !67
  %1662 = load i32, ptr %1646, align 4, !tbaa !67
  %1663 = load i32, ptr %1648, align 4, !tbaa !67
  %1664 = icmp sgt i32 %1662, %1663
  br i1 %1664, label %1665, label %1675

1665:                                             ; preds = %1658
  %1666 = getelementptr inbounds i32, ptr %1119, i64 %1645
  %1667 = load i32, ptr %1666, align 4, !tbaa !67
  %1668 = sext i32 %1667 to i64
  %1669 = getelementptr inbounds i32, ptr %1116, i64 %1668
  br label %1670

1670:                                             ; preds = %1665, %1656
  %1671 = phi ptr [ %1657, %1656 ], [ %1669, %1665 ]
  %1672 = phi ptr [ %1117, %1656 ], [ %1120, %1665 ]
  %1673 = load i32, ptr %1671, align 4, !tbaa !67
  %1674 = getelementptr inbounds i32, ptr %1672, i64 %1639
  store i32 %1673, ptr %1674, align 4, !tbaa !67
  br label %1675

1675:                                             ; preds = %1670, %1658, %1638
  %1676 = add nuw nsw i64 %1639, 1
  %1677 = icmp eq i64 %1676, %1122
  br i1 %1677, label %1626, label %1638, !llvm.loop !214

1678:                                             ; preds = %1715
  %1679 = icmp sgt i32 %1717, 0
  br i1 %1679, label %1680, label %1720

1680:                                             ; preds = %1678
  %1681 = load ptr, ptr %135, align 8, !tbaa !59
  %1682 = load ptr, ptr %149, align 8, !tbaa !59
  %1683 = load ptr, ptr %142, align 8, !tbaa !59
  %1684 = load ptr, ptr %121, align 8
  %1685 = load ptr, ptr %156, align 8
  %1686 = load ptr, ptr %128, align 8
  br label %1730

1687:                                             ; preds = %1630, %1715
  %1688 = phi i64 [ 0, %1630 ], [ %1716, %1715 ]
  %1689 = getelementptr inbounds i32, ptr %1631, i64 %1688
  %1690 = load i32, ptr %1689, align 4, !tbaa !67
  %1691 = getelementptr inbounds i32, ptr %1632, i64 %1688
  %1692 = load i32, ptr %1691, align 4, !tbaa !67
  %1693 = sext i32 %1690 to i64
  %1694 = getelementptr inbounds i32, ptr %1633, i64 %1693
  %1695 = load i32, ptr %1694, align 4, !tbaa !67
  %1696 = icmp slt i32 %1692, %1695
  br i1 %1696, label %1697, label %1698

1697:                                             ; preds = %1687
  store i32 %1692, ptr %1694, align 4, !tbaa !67
  br label %1698

1698:                                             ; preds = %1697, %1687
  %1699 = getelementptr inbounds i32, ptr %1634, i64 %1693
  %1700 = load i32, ptr %1699, align 4, !tbaa !67
  %1701 = icmp sgt i32 %1692, %1700
  br i1 %1701, label %1702, label %1703

1702:                                             ; preds = %1698
  store i32 %1692, ptr %1699, align 4, !tbaa !67
  br label %1703

1703:                                             ; preds = %1702, %1698
  %1704 = getelementptr inbounds i32, ptr %1635, i64 %1688
  %1705 = load i32, ptr %1704, align 4, !tbaa !67
  %1706 = getelementptr inbounds i32, ptr %1636, i64 %1693
  %1707 = load i32, ptr %1706, align 4, !tbaa !67
  %1708 = icmp slt i32 %1705, %1707
  br i1 %1708, label %1709, label %1710

1709:                                             ; preds = %1703
  store i32 %1705, ptr %1706, align 4, !tbaa !67
  br label %1710

1710:                                             ; preds = %1709, %1703
  %1711 = getelementptr inbounds i32, ptr %1637, i64 %1693
  %1712 = load i32, ptr %1711, align 4, !tbaa !67
  %1713 = icmp sgt i32 %1705, %1712
  br i1 %1713, label %1714, label %1715

1714:                                             ; preds = %1710
  store i32 %1705, ptr %1711, align 4, !tbaa !67
  br label %1715

1715:                                             ; preds = %1714, %1710
  %1716 = add nuw nsw i64 %1688, 1
  %1717 = load i32, ptr %803, align 8, !tbaa !193
  %1718 = sext i32 %1717 to i64
  %1719 = icmp slt i64 %1716, %1718
  br i1 %1719, label %1687, label %1678, !llvm.loop !215

1720:                                             ; preds = %1751, %1626, %1678
  %1721 = load i32, ptr %170, align 8, !tbaa !91
  %1722 = icmp slt i32 %1721, 0
  br i1 %1722, label %1756, label %1723

1723:                                             ; preds = %1720
  %1724 = load ptr, ptr %142, align 8, !tbaa !59
  %1725 = load ptr, ptr %239, align 8, !tbaa !59
  %1726 = load ptr, ptr %156, align 8, !tbaa !59
  %1727 = load ptr, ptr %252, align 8, !tbaa !59
  %1728 = load ptr, ptr %149, align 8, !tbaa !59
  %1729 = load ptr, ptr %163, align 8, !tbaa !59
  br label %1767

1730:                                             ; preds = %1680, %1751
  %1731 = phi i32 [ %1717, %1680 ], [ %1752, %1751 ]
  %1732 = phi i64 [ 0, %1680 ], [ %1753, %1751 ]
  %1733 = getelementptr inbounds i32, ptr %1681, i64 %1732
  %1734 = load i32, ptr %1733, align 4, !tbaa !67
  %1735 = sext i32 %1734 to i64
  %1736 = getelementptr inbounds i32, ptr %1682, i64 %1735
  %1737 = load i32, ptr %1736, align 4, !tbaa !67
  %1738 = getelementptr inbounds i32, ptr %1683, i64 %1735
  %1739 = load i32, ptr %1738, align 4, !tbaa !67
  %1740 = icmp slt i32 %1737, %1739
  br i1 %1740, label %1751, label %1741

1741:                                             ; preds = %1730
  %1742 = getelementptr inbounds i32, ptr %1684, i64 %1732
  %1743 = load i32, ptr %1742, align 4, !tbaa !67
  %1744 = sub nsw i32 %1743, %1739
  store i32 %1744, ptr %1742, align 4, !tbaa !67
  %1745 = getelementptr inbounds i32, ptr %1685, i64 %1735
  %1746 = load i32, ptr %1745, align 4, !tbaa !67
  %1747 = getelementptr inbounds i32, ptr %1686, i64 %1732
  %1748 = load i32, ptr %1747, align 4, !tbaa !67
  %1749 = sub nsw i32 %1748, %1746
  store i32 %1749, ptr %1747, align 4, !tbaa !67
  %1750 = load i32, ptr %803, align 8, !tbaa !193
  br label %1751

1751:                                             ; preds = %1730, %1741
  %1752 = phi i32 [ %1731, %1730 ], [ %1750, %1741 ]
  %1753 = add nuw nsw i64 %1732, 1
  %1754 = sext i32 %1752 to i64
  %1755 = icmp slt i64 %1753, %1754
  br i1 %1755, label %1730, label %1720, !llvm.loop !216

1756:                                             ; preds = %1767, %1720
  %1757 = load i32, ptr %1627, align 4, !tbaa !195
  %1758 = icmp sgt i32 %1757, 0
  br i1 %1758, label %1759, label %1829

1759:                                             ; preds = %1756
  %1760 = load ptr, ptr %920, align 8, !tbaa !59
  %1761 = load ptr, ptr %906, align 8, !tbaa !59
  %1762 = load ptr, ptr %927, align 8, !tbaa !59
  %1763 = load ptr, ptr %934, align 8, !tbaa !59
  %1764 = load ptr, ptr %913, align 8, !tbaa !59
  %1765 = load ptr, ptr %941, align 8, !tbaa !59
  %1766 = load ptr, ptr %948, align 8, !tbaa !59
  br label %1796

1767:                                             ; preds = %1723, %1767
  %1768 = phi i64 [ 0, %1723 ], [ %1783, %1767 ]
  %1769 = getelementptr inbounds i32, ptr %1724, i64 %1768
  %1770 = load i32, ptr %1769, align 4, !tbaa !67
  %1771 = getelementptr inbounds i32, ptr %1725, i64 %1768
  store i32 %1770, ptr %1771, align 4, !tbaa !67
  %1772 = getelementptr inbounds i32, ptr %1726, i64 %1768
  %1773 = load i32, ptr %1772, align 4, !tbaa !67
  %1774 = getelementptr inbounds i32, ptr %1727, i64 %1768
  store i32 %1773, ptr %1774, align 4, !tbaa !67
  %1775 = load i32, ptr %1769, align 4, !tbaa !67
  %1776 = getelementptr inbounds i32, ptr %1728, i64 %1768
  %1777 = load i32, ptr %1776, align 4, !tbaa !67
  %1778 = sub nsw i32 %1777, %1775
  store i32 %1778, ptr %1776, align 4, !tbaa !67
  %1779 = load i32, ptr %1772, align 4, !tbaa !67
  %1780 = getelementptr inbounds i32, ptr %1729, i64 %1768
  %1781 = load i32, ptr %1780, align 4, !tbaa !67
  %1782 = sub nsw i32 %1781, %1779
  store i32 %1782, ptr %1780, align 4, !tbaa !67
  store i32 0, ptr %1769, align 4, !tbaa !67
  store i32 0, ptr %1772, align 4, !tbaa !67
  %1783 = add nuw nsw i64 %1768, 1
  %1784 = load i32, ptr %170, align 8, !tbaa !91
  %1785 = sext i32 %1784 to i64
  %1786 = icmp slt i64 %1768, %1785
  br i1 %1786, label %1767, label %1756, !llvm.loop !217

1787:                                             ; preds = %1824
  %1788 = icmp sgt i32 %1826, 0
  br i1 %1788, label %1789, label %1829

1789:                                             ; preds = %1787
  %1790 = load ptr, ptr %920, align 8, !tbaa !59
  %1791 = load ptr, ptr %934, align 8, !tbaa !59
  %1792 = load ptr, ptr %927, align 8, !tbaa !59
  %1793 = load ptr, ptr %906, align 8
  %1794 = load ptr, ptr %941, align 8
  %1795 = load ptr, ptr %913, align 8
  br label %1839

1796:                                             ; preds = %1759, %1824
  %1797 = phi i64 [ 0, %1759 ], [ %1825, %1824 ]
  %1798 = getelementptr inbounds i32, ptr %1760, i64 %1797
  %1799 = load i32, ptr %1798, align 4, !tbaa !67
  %1800 = getelementptr inbounds i32, ptr %1761, i64 %1797
  %1801 = load i32, ptr %1800, align 4, !tbaa !67
  %1802 = sext i32 %1799 to i64
  %1803 = getelementptr inbounds i32, ptr %1762, i64 %1802
  %1804 = load i32, ptr %1803, align 4, !tbaa !67
  %1805 = icmp slt i32 %1801, %1804
  br i1 %1805, label %1806, label %1807

1806:                                             ; preds = %1796
  store i32 %1801, ptr %1803, align 4, !tbaa !67
  br label %1807

1807:                                             ; preds = %1806, %1796
  %1808 = getelementptr inbounds i32, ptr %1763, i64 %1802
  %1809 = load i32, ptr %1808, align 4, !tbaa !67
  %1810 = icmp sgt i32 %1801, %1809
  br i1 %1810, label %1811, label %1812

1811:                                             ; preds = %1807
  store i32 %1801, ptr %1808, align 4, !tbaa !67
  br label %1812

1812:                                             ; preds = %1811, %1807
  %1813 = getelementptr inbounds i32, ptr %1764, i64 %1797
  %1814 = load i32, ptr %1813, align 4, !tbaa !67
  %1815 = getelementptr inbounds i32, ptr %1765, i64 %1802
  %1816 = load i32, ptr %1815, align 4, !tbaa !67
  %1817 = icmp slt i32 %1814, %1816
  br i1 %1817, label %1818, label %1819

1818:                                             ; preds = %1812
  store i32 %1814, ptr %1815, align 4, !tbaa !67
  br label %1819

1819:                                             ; preds = %1818, %1812
  %1820 = getelementptr inbounds i32, ptr %1766, i64 %1802
  %1821 = load i32, ptr %1820, align 4, !tbaa !67
  %1822 = icmp sgt i32 %1814, %1821
  br i1 %1822, label %1823, label %1824

1823:                                             ; preds = %1819
  store i32 %1814, ptr %1820, align 4, !tbaa !67
  br label %1824

1824:                                             ; preds = %1823, %1819
  %1825 = add nuw nsw i64 %1797, 1
  %1826 = load i32, ptr %1627, align 4, !tbaa !195
  %1827 = sext i32 %1826 to i64
  %1828 = icmp slt i64 %1825, %1827
  br i1 %1828, label %1796, label %1787, !llvm.loop !218

1829:                                             ; preds = %1860, %1756, %1787
  %1830 = load i32, ptr %170, align 8, !tbaa !91
  %1831 = icmp slt i32 %1830, 0
  br i1 %1831, label %1865, label %1832

1832:                                             ; preds = %1829
  %1833 = load ptr, ptr %927, align 8, !tbaa !59
  %1834 = load ptr, ptr %1023, align 8, !tbaa !59
  %1835 = load ptr, ptr %941, align 8, !tbaa !59
  %1836 = load ptr, ptr %1036, align 8, !tbaa !59
  %1837 = load ptr, ptr %934, align 8, !tbaa !59
  %1838 = load ptr, ptr %948, align 8, !tbaa !59
  br label %1866

1839:                                             ; preds = %1789, %1860
  %1840 = phi i32 [ %1826, %1789 ], [ %1861, %1860 ]
  %1841 = phi i64 [ 0, %1789 ], [ %1862, %1860 ]
  %1842 = getelementptr inbounds i32, ptr %1790, i64 %1841
  %1843 = load i32, ptr %1842, align 4, !tbaa !67
  %1844 = sext i32 %1843 to i64
  %1845 = getelementptr inbounds i32, ptr %1791, i64 %1844
  %1846 = load i32, ptr %1845, align 4, !tbaa !67
  %1847 = getelementptr inbounds i32, ptr %1792, i64 %1844
  %1848 = load i32, ptr %1847, align 4, !tbaa !67
  %1849 = icmp slt i32 %1846, %1848
  br i1 %1849, label %1860, label %1850

1850:                                             ; preds = %1839
  %1851 = getelementptr inbounds i32, ptr %1793, i64 %1841
  %1852 = load i32, ptr %1851, align 4, !tbaa !67
  %1853 = sub nsw i32 %1852, %1848
  store i32 %1853, ptr %1851, align 4, !tbaa !67
  %1854 = getelementptr inbounds i32, ptr %1794, i64 %1844
  %1855 = load i32, ptr %1854, align 4, !tbaa !67
  %1856 = getelementptr inbounds i32, ptr %1795, i64 %1841
  %1857 = load i32, ptr %1856, align 4, !tbaa !67
  %1858 = sub nsw i32 %1857, %1855
  store i32 %1858, ptr %1856, align 4, !tbaa !67
  %1859 = load i32, ptr %1627, align 4, !tbaa !195
  br label %1860

1860:                                             ; preds = %1839, %1850
  %1861 = phi i32 [ %1840, %1839 ], [ %1859, %1850 ]
  %1862 = add nuw nsw i64 %1841, 1
  %1863 = sext i32 %1861 to i64
  %1864 = icmp slt i64 %1862, %1863
  br i1 %1864, label %1839, label %1829, !llvm.loop !219

1865:                                             ; preds = %1866, %1829
  ret void

1866:                                             ; preds = %1832, %1866
  %1867 = phi i64 [ 0, %1832 ], [ %1882, %1866 ]
  %1868 = getelementptr inbounds i32, ptr %1833, i64 %1867
  %1869 = load i32, ptr %1868, align 4, !tbaa !67
  %1870 = getelementptr inbounds i32, ptr %1834, i64 %1867
  store i32 %1869, ptr %1870, align 4, !tbaa !67
  %1871 = getelementptr inbounds i32, ptr %1835, i64 %1867
  %1872 = load i32, ptr %1871, align 4, !tbaa !67
  %1873 = getelementptr inbounds i32, ptr %1836, i64 %1867
  store i32 %1872, ptr %1873, align 4, !tbaa !67
  %1874 = load i32, ptr %1868, align 4, !tbaa !67
  %1875 = getelementptr inbounds i32, ptr %1837, i64 %1867
  %1876 = load i32, ptr %1875, align 4, !tbaa !67
  %1877 = sub nsw i32 %1876, %1874
  store i32 %1877, ptr %1875, align 4, !tbaa !67
  %1878 = load i32, ptr %1871, align 4, !tbaa !67
  %1879 = getelementptr inbounds i32, ptr %1838, i64 %1867
  %1880 = load i32, ptr %1879, align 4, !tbaa !67
  %1881 = sub nsw i32 %1880, %1878
  store i32 %1881, ptr %1879, align 4, !tbaa !67
  store i32 0, ptr %1868, align 4, !tbaa !67
  store i32 0, ptr %1871, align 4, !tbaa !67
  %1882 = add nuw nsw i64 %1867, 1
  %1883 = load i32, ptr %170, align 8, !tbaa !91
  %1884 = sext i32 %1883 to i64
  %1885 = icmp slt i64 %1867, %1884
  br i1 %1885, label %1866, label %1865, !llvm.loop !220
}

; Function Attrs: mustprogress uwtable
define dso_local noundef ptr @_ZN4Mesh14get_xface_flagEib(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 95
  %5 = sext i32 %1 to i64
  %6 = load ptr, ptr %4, align 8, !tbaa !59
  %7 = getelementptr inbounds i32, ptr %6, i64 %5
  %8 = load i32, ptr %7, align 4, !tbaa !67
  %9 = add nsw i32 %8, 1
  %10 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 93
  %11 = load ptr, ptr %10, align 8, !tbaa !59
  %12 = getelementptr inbounds i32, ptr %11, i64 %5
  %13 = load i32, ptr %12, align 4, !tbaa !67
  %14 = add nsw i32 %13, 1
  %15 = tail call ptr @genmatrix_p(i32 noundef %9, i32 noundef %14, i64 noundef 4, ptr noundef nonnull @.str.66, i32 noundef 9708)
  %16 = load ptr, ptr %4, align 8, !tbaa !59
  %17 = getelementptr inbounds i32, ptr %16, i64 %5
  %18 = load i32, ptr %17, align 4, !tbaa !67
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %3
  %21 = load ptr, ptr %10, align 8, !tbaa !59
  %22 = getelementptr inbounds i32, ptr %21, i64 %5
  %23 = load i32, ptr %22, align 4, !tbaa !67
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %20, %46
  %26 = phi i32 [ %47, %46 ], [ %18, %20 ]
  %27 = phi i32 [ %48, %46 ], [ %23, %20 ]
  %28 = phi i64 [ %49, %46 ], [ 0, %20 ]
  %29 = icmp slt i32 %27, 0
  br i1 %29, label %46, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds ptr, ptr %15, i64 %28
  %32 = load ptr, ptr %31, align 8, !tbaa !137
  br label %52

33:                                               ; preds = %46, %20, %3
  %34 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 81
  %35 = load i32, ptr %34, align 8, !tbaa !193
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %59

37:                                               ; preds = %33
  %38 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85
  %39 = load ptr, ptr %38, align 8, !tbaa !59
  %40 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84
  %43 = load ptr, ptr %42, align 8
  br label %60

44:                                               ; preds = %52
  %45 = load i32, ptr %17, align 4, !tbaa !67
  br label %46

46:                                               ; preds = %44, %25
  %47 = phi i32 [ %45, %44 ], [ %26, %25 ]
  %48 = phi i32 [ %56, %44 ], [ %27, %25 ]
  %49 = add nuw nsw i64 %28, 1
  %50 = sext i32 %47 to i64
  %51 = icmp slt i64 %28, %50
  br i1 %51, label %25, label %33, !llvm.loop !221

52:                                               ; preds = %30, %52
  %53 = phi i64 [ 0, %30 ], [ %55, %52 ]
  %54 = getelementptr inbounds i32, ptr %32, i64 %53
  store i32 -1, ptr %54, align 4, !tbaa !67
  %55 = add nuw nsw i64 %53, 1
  %56 = load i32, ptr %22, align 4, !tbaa !67
  %57 = sext i32 %56 to i64
  %58 = icmp slt i64 %53, %57
  br i1 %58, label %52, label %44, !llvm.loop !223

59:                                               ; preds = %77, %33
  br i1 %2, label %82, label %145

60:                                               ; preds = %37, %77
  %61 = phi i32 [ %35, %37 ], [ %78, %77 ]
  %62 = phi i64 [ 0, %37 ], [ %79, %77 ]
  %63 = getelementptr inbounds i32, ptr %39, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !67
  %65 = icmp eq i32 %64, %1
  br i1 %65, label %66, label %77

66:                                               ; preds = %60
  %67 = getelementptr inbounds i32, ptr %41, i64 %62
  %68 = load i32, ptr %67, align 4, !tbaa !67
  %69 = getelementptr inbounds i32, ptr %43, i64 %62
  %70 = load i32, ptr %69, align 4, !tbaa !67
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds ptr, ptr %15, i64 %71
  %73 = load ptr, ptr %72, align 8, !tbaa !137
  %74 = sext i32 %68 to i64
  %75 = getelementptr inbounds i32, ptr %73, i64 %74
  store i32 1, ptr %75, align 4, !tbaa !67
  %76 = load i32, ptr %34, align 8, !tbaa !193
  br label %77

77:                                               ; preds = %60, %66
  %78 = phi i32 [ %61, %60 ], [ %76, %66 ]
  %79 = add nuw nsw i64 %62, 1
  %80 = sext i32 %78 to i64
  %81 = icmp slt i64 %79, %80
  br i1 %81, label %60, label %59, !llvm.loop !224

82:                                               ; preds = %59
  %83 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.67, i32 noundef %1)
  %84 = load ptr, ptr %10, align 8, !tbaa !59
  %85 = getelementptr inbounds i32, ptr %84, i64 %5
  %86 = load i32, ptr %85, align 4, !tbaa !67
  %87 = add nsw i32 %86, 1
  %88 = load ptr, ptr %4, align 8, !tbaa !59
  %89 = getelementptr inbounds i32, ptr %88, i64 %5
  %90 = load i32, ptr %89, align 4, !tbaa !67
  %91 = add nsw i32 %90, 1
  %92 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.68, i32 noundef %87, i32 noundef %91)
  %93 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.69)
  %94 = load ptr, ptr %10, align 8, !tbaa !59
  %95 = getelementptr inbounds i32, ptr %94, i64 %5
  %96 = load i32, ptr %95, align 4, !tbaa !67
  %97 = icmp slt i32 %96, 0
  br i1 %97, label %98, label %106

98:                                               ; preds = %106, %82
  %99 = tail call i32 @putchar(i32 10)
  %100 = load ptr, ptr %4, align 8, !tbaa !59
  %101 = getelementptr inbounds i32, ptr %100, i64 %5
  %102 = load i32, ptr %101, align 4, !tbaa !67
  %103 = icmp sgt i32 %102, -1
  br i1 %103, label %104, label %145

104:                                              ; preds = %98
  %105 = zext i32 %102 to i64
  br label %114

106:                                              ; preds = %82, %106
  %107 = phi i32 [ %109, %106 ], [ 0, %82 ]
  %108 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.70, i32 noundef %107)
  %109 = add nuw nsw i32 %107, 1
  %110 = load ptr, ptr %10, align 8, !tbaa !59
  %111 = getelementptr inbounds i32, ptr %110, i64 %5
  %112 = load i32, ptr %111, align 4, !tbaa !67
  %113 = icmp slt i32 %107, %112
  br i1 %113, label %106, label %98, !llvm.loop !225

114:                                              ; preds = %104, %124
  %115 = phi i64 [ %105, %104 ], [ %126, %124 ]
  %116 = trunc i64 %115 to i32
  %117 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.72, i32 noundef %116)
  %118 = load ptr, ptr %10, align 8, !tbaa !59
  %119 = getelementptr inbounds i32, ptr %118, i64 %5
  %120 = load i32, ptr %119, align 4, !tbaa !67
  %121 = icmp slt i32 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %114
  %123 = getelementptr inbounds ptr, ptr %15, i64 %115
  br label %128

124:                                              ; preds = %138, %114
  %125 = tail call i32 @putchar(i32 10)
  %126 = add nsw i64 %115, -1
  %127 = icmp sgt i64 %115, 0
  br i1 %127, label %114, label %145, !llvm.loop !226

128:                                              ; preds = %122, %138
  %129 = phi i64 [ 0, %122 ], [ %139, %138 ]
  %130 = load ptr, ptr %123, align 8, !tbaa !137
  %131 = getelementptr inbounds i32, ptr %130, i64 %129
  %132 = load i32, ptr %131, align 4, !tbaa !67
  %133 = icmp sgt i32 %132, -1
  br i1 %133, label %134, label %136

134:                                              ; preds = %128
  %135 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.70, i32 noundef %132)
  br label %138

136:                                              ; preds = %128
  %137 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.73)
  br label %138

138:                                              ; preds = %134, %136
  %139 = add nuw nsw i64 %129, 1
  %140 = load ptr, ptr %10, align 8, !tbaa !59
  %141 = getelementptr inbounds i32, ptr %140, i64 %5
  %142 = load i32, ptr %141, align 4, !tbaa !67
  %143 = sext i32 %142 to i64
  %144 = icmp slt i64 %129, %143
  br i1 %144, label %128, label %124, !llvm.loop !227

145:                                              ; preds = %124, %98, %59
  ret ptr %15
}

declare ptr @genmatrix_p(i32 noundef, i32 noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress uwtable
define dso_local noundef ptr @_ZN4Mesh14get_yface_flagEib(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 110
  %5 = sext i32 %1 to i64
  %6 = load ptr, ptr %4, align 8, !tbaa !59
  %7 = getelementptr inbounds i32, ptr %6, i64 %5
  %8 = load i32, ptr %7, align 4, !tbaa !67
  %9 = add nsw i32 %8, 1
  %10 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 108
  %11 = load ptr, ptr %10, align 8, !tbaa !59
  %12 = getelementptr inbounds i32, ptr %11, i64 %5
  %13 = load i32, ptr %12, align 4, !tbaa !67
  %14 = add nsw i32 %13, 1
  %15 = tail call ptr @genmatrix_p(i32 noundef %9, i32 noundef %14, i64 noundef 4, ptr noundef nonnull @.str.66, i32 noundef 9755)
  %16 = load ptr, ptr %4, align 8, !tbaa !59
  %17 = getelementptr inbounds i32, ptr %16, i64 %5
  %18 = load i32, ptr %17, align 4, !tbaa !67
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %3
  %21 = load ptr, ptr %10, align 8, !tbaa !59
  %22 = getelementptr inbounds i32, ptr %21, i64 %5
  %23 = load i32, ptr %22, align 4, !tbaa !67
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %20, %46
  %26 = phi i32 [ %47, %46 ], [ %18, %20 ]
  %27 = phi i32 [ %48, %46 ], [ %23, %20 ]
  %28 = phi i64 [ %49, %46 ], [ 0, %20 ]
  %29 = icmp slt i32 %27, 0
  br i1 %29, label %46, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds ptr, ptr %15, i64 %28
  %32 = load ptr, ptr %31, align 8, !tbaa !137
  br label %52

33:                                               ; preds = %46, %20, %3
  %34 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 82
  %35 = load i32, ptr %34, align 4, !tbaa !195
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %59

37:                                               ; preds = %33
  %38 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100
  %39 = load ptr, ptr %38, align 8, !tbaa !59
  %40 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99
  %43 = load ptr, ptr %42, align 8
  br label %60

44:                                               ; preds = %52
  %45 = load i32, ptr %17, align 4, !tbaa !67
  br label %46

46:                                               ; preds = %44, %25
  %47 = phi i32 [ %45, %44 ], [ %26, %25 ]
  %48 = phi i32 [ %56, %44 ], [ %27, %25 ]
  %49 = add nuw nsw i64 %28, 1
  %50 = sext i32 %47 to i64
  %51 = icmp slt i64 %28, %50
  br i1 %51, label %25, label %33, !llvm.loop !228

52:                                               ; preds = %30, %52
  %53 = phi i64 [ 0, %30 ], [ %55, %52 ]
  %54 = getelementptr inbounds i32, ptr %32, i64 %53
  store i32 -1, ptr %54, align 4, !tbaa !67
  %55 = add nuw nsw i64 %53, 1
  %56 = load i32, ptr %22, align 4, !tbaa !67
  %57 = sext i32 %56 to i64
  %58 = icmp slt i64 %53, %57
  br i1 %58, label %52, label %44, !llvm.loop !229

59:                                               ; preds = %77, %33
  br i1 %2, label %82, label %145

60:                                               ; preds = %37, %77
  %61 = phi i32 [ %35, %37 ], [ %78, %77 ]
  %62 = phi i64 [ 0, %37 ], [ %79, %77 ]
  %63 = getelementptr inbounds i32, ptr %39, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !67
  %65 = icmp eq i32 %64, %1
  br i1 %65, label %66, label %77

66:                                               ; preds = %60
  %67 = getelementptr inbounds i32, ptr %41, i64 %62
  %68 = load i32, ptr %67, align 4, !tbaa !67
  %69 = getelementptr inbounds i32, ptr %43, i64 %62
  %70 = load i32, ptr %69, align 4, !tbaa !67
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds ptr, ptr %15, i64 %71
  %73 = load ptr, ptr %72, align 8, !tbaa !137
  %74 = sext i32 %68 to i64
  %75 = getelementptr inbounds i32, ptr %73, i64 %74
  store i32 1, ptr %75, align 4, !tbaa !67
  %76 = load i32, ptr %34, align 4, !tbaa !195
  br label %77

77:                                               ; preds = %60, %66
  %78 = phi i32 [ %61, %60 ], [ %76, %66 ]
  %79 = add nuw nsw i64 %62, 1
  %80 = sext i32 %78 to i64
  %81 = icmp slt i64 %79, %80
  br i1 %81, label %60, label %59, !llvm.loop !230

82:                                               ; preds = %59
  %83 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.74, i32 noundef %1)
  %84 = load ptr, ptr %10, align 8, !tbaa !59
  %85 = getelementptr inbounds i32, ptr %84, i64 %5
  %86 = load i32, ptr %85, align 4, !tbaa !67
  %87 = add nsw i32 %86, 1
  %88 = load ptr, ptr %4, align 8, !tbaa !59
  %89 = getelementptr inbounds i32, ptr %88, i64 %5
  %90 = load i32, ptr %89, align 4, !tbaa !67
  %91 = add nsw i32 %90, 1
  %92 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.68, i32 noundef %87, i32 noundef %91)
  %93 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.69)
  %94 = load ptr, ptr %10, align 8, !tbaa !59
  %95 = getelementptr inbounds i32, ptr %94, i64 %5
  %96 = load i32, ptr %95, align 4, !tbaa !67
  %97 = icmp slt i32 %96, 0
  br i1 %97, label %98, label %106

98:                                               ; preds = %106, %82
  %99 = tail call i32 @putchar(i32 10)
  %100 = load ptr, ptr %4, align 8, !tbaa !59
  %101 = getelementptr inbounds i32, ptr %100, i64 %5
  %102 = load i32, ptr %101, align 4, !tbaa !67
  %103 = icmp sgt i32 %102, -1
  br i1 %103, label %104, label %145

104:                                              ; preds = %98
  %105 = zext i32 %102 to i64
  br label %114

106:                                              ; preds = %82, %106
  %107 = phi i32 [ %109, %106 ], [ 0, %82 ]
  %108 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.70, i32 noundef %107)
  %109 = add nuw nsw i32 %107, 1
  %110 = load ptr, ptr %10, align 8, !tbaa !59
  %111 = getelementptr inbounds i32, ptr %110, i64 %5
  %112 = load i32, ptr %111, align 4, !tbaa !67
  %113 = icmp slt i32 %107, %112
  br i1 %113, label %106, label %98, !llvm.loop !231

114:                                              ; preds = %104, %124
  %115 = phi i64 [ %105, %104 ], [ %126, %124 ]
  %116 = trunc i64 %115 to i32
  %117 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.72, i32 noundef %116)
  %118 = load ptr, ptr %10, align 8, !tbaa !59
  %119 = getelementptr inbounds i32, ptr %118, i64 %5
  %120 = load i32, ptr %119, align 4, !tbaa !67
  %121 = icmp slt i32 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %114
  %123 = getelementptr inbounds ptr, ptr %15, i64 %115
  br label %128

124:                                              ; preds = %138, %114
  %125 = tail call i32 @putchar(i32 10)
  %126 = add nsw i64 %115, -1
  %127 = icmp sgt i64 %115, 0
  br i1 %127, label %114, label %145, !llvm.loop !232

128:                                              ; preds = %122, %138
  %129 = phi i64 [ 0, %122 ], [ %139, %138 ]
  %130 = load ptr, ptr %123, align 8, !tbaa !137
  %131 = getelementptr inbounds i32, ptr %130, i64 %129
  %132 = load i32, ptr %131, align 4, !tbaa !67
  %133 = icmp sgt i32 %132, -1
  br i1 %133, label %134, label %136

134:                                              ; preds = %128
  %135 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.70, i32 noundef %132)
  br label %138

136:                                              ; preds = %128
  %137 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.73)
  br label %138

138:                                              ; preds = %134, %136
  %139 = add nuw nsw i64 %129, 1
  %140 = load ptr, ptr %10, align 8, !tbaa !59
  %141 = getelementptr inbounds i32, ptr %140, i64 %5
  %142 = load i32, ptr %141, align 4, !tbaa !67
  %143 = sext i32 %142 to i64
  %144 = icmp slt i64 %129, %143
  br i1 %144, label %128, label %124, !llvm.loop !233

145:                                              ; preds = %124, %98, %59
  ret ptr %15
}

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN4Mesh13get_flat_gridEiPPPiS2_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, i32 noundef %1, ptr nocapture noundef writeonly %2, ptr nocapture noundef writeonly %3) local_unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 93
  %6 = sext i32 %1 to i64
  %7 = load ptr, ptr %5, align 8, !tbaa !59
  %8 = getelementptr inbounds i32, ptr %7, i64 %6
  %9 = load i32, ptr %8, align 4, !tbaa !67
  %10 = add nsw i32 %9, 4
  %11 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 110
  %12 = load ptr, ptr %11, align 8, !tbaa !59
  %13 = getelementptr inbounds i32, ptr %12, i64 %6
  %14 = load i32, ptr %13, align 4, !tbaa !67
  %15 = add nsw i32 %14, 4
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 96
  %17 = load ptr, ptr %16, align 8, !tbaa !59
  %18 = getelementptr inbounds i32, ptr %17, i64 %6
  %19 = load i32, ptr %18, align 4, !tbaa !67
  %20 = add nsw i32 %19, -2
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 112
  %22 = load ptr, ptr %21, align 8, !tbaa !59
  %23 = getelementptr inbounds i32, ptr %22, i64 %6
  %24 = load i32, ptr %23, align 4, !tbaa !67
  %25 = add nsw i32 %24, -2
  %26 = tail call ptr @genmatrix_p(i32 noundef %15, i32 noundef %10, i64 noundef 4, ptr noundef nonnull @.str.66, i32 noundef 9810)
  store ptr %26, ptr %2, align 8, !tbaa !137
  %27 = icmp sgt i32 %14, -4
  %28 = icmp sgt i32 %9, -4
  %29 = select i1 %27, i1 %28, i1 false
  br i1 %29, label %30, label %123

30:                                               ; preds = %4
  %31 = zext i32 %10 to i64
  %32 = shl nuw nsw i64 %31, 2
  %33 = zext i32 %15 to i64
  %34 = add nsw i64 %33, -1
  %35 = and i64 %33, 7
  %36 = icmp ult i64 %34, 7
  br i1 %36, label %68, label %37

37:                                               ; preds = %30
  %38 = and i64 %33, 4294967288
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi i64 [ 0, %37 ], [ %65, %39 ]
  %41 = phi i64 [ 0, %37 ], [ %66, %39 ]
  %42 = getelementptr inbounds ptr, ptr %26, i64 %40
  %43 = load ptr, ptr %42, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %43, i8 -1, i64 %32, i1 false), !tbaa !67
  %44 = or i64 %40, 1
  %45 = getelementptr inbounds ptr, ptr %26, i64 %44
  %46 = load ptr, ptr %45, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %46, i8 -1, i64 %32, i1 false), !tbaa !67
  %47 = or i64 %40, 2
  %48 = getelementptr inbounds ptr, ptr %26, i64 %47
  %49 = load ptr, ptr %48, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 -1, i64 %32, i1 false), !tbaa !67
  %50 = or i64 %40, 3
  %51 = getelementptr inbounds ptr, ptr %26, i64 %50
  %52 = load ptr, ptr %51, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %52, i8 -1, i64 %32, i1 false), !tbaa !67
  %53 = or i64 %40, 4
  %54 = getelementptr inbounds ptr, ptr %26, i64 %53
  %55 = load ptr, ptr %54, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %55, i8 -1, i64 %32, i1 false), !tbaa !67
  %56 = or i64 %40, 5
  %57 = getelementptr inbounds ptr, ptr %26, i64 %56
  %58 = load ptr, ptr %57, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %58, i8 -1, i64 %32, i1 false), !tbaa !67
  %59 = or i64 %40, 6
  %60 = getelementptr inbounds ptr, ptr %26, i64 %59
  %61 = load ptr, ptr %60, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %61, i8 -1, i64 %32, i1 false), !tbaa !67
  %62 = or i64 %40, 7
  %63 = getelementptr inbounds ptr, ptr %26, i64 %62
  %64 = load ptr, ptr %63, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %64, i8 -1, i64 %32, i1 false), !tbaa !67
  %65 = add nuw nsw i64 %40, 8
  %66 = add i64 %41, 8
  %67 = icmp eq i64 %66, %38
  br i1 %67, label %68, label %39, !llvm.loop !234

68:                                               ; preds = %39, %30
  %69 = phi i64 [ 0, %30 ], [ %65, %39 ]
  %70 = icmp eq i64 %35, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %68, %71
  %72 = phi i64 [ %76, %71 ], [ %69, %68 ]
  %73 = phi i64 [ %77, %71 ], [ 0, %68 ]
  %74 = getelementptr inbounds ptr, ptr %26, i64 %72
  %75 = load ptr, ptr %74, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %75, i8 -1, i64 %32, i1 false), !tbaa !67
  %76 = add nuw nsw i64 %72, 1
  %77 = add i64 %73, 1
  %78 = icmp eq i64 %77, %35
  br i1 %78, label %79, label %71, !llvm.loop !235

79:                                               ; preds = %71, %68
  %80 = tail call ptr @genmatrix_p(i32 noundef %15, i32 noundef %10, i64 noundef 4, ptr noundef nonnull @.str.66, i32 noundef 9819)
  store ptr %80, ptr %3, align 8, !tbaa !137
  %81 = icmp sgt i32 %9, -4
  %82 = select i1 %27, i1 %81, i1 false
  br i1 %82, label %83, label %136

83:                                               ; preds = %79
  %84 = tail call i32 @llvm.smax.i32(i32 %10, i32 1)
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  %87 = tail call i32 @llvm.smax.i32(i32 %15, i32 1)
  %88 = zext i32 %87 to i64
  %89 = add nsw i64 %88, -1
  %90 = and i64 %88, 7
  %91 = icmp ult i64 %89, 7
  br i1 %91, label %125, label %92

92:                                               ; preds = %83
  %93 = and i64 %88, 2147483640
  br label %94

94:                                               ; preds = %94, %92
  %95 = phi i64 [ 0, %92 ], [ %120, %94 ]
  %96 = phi i64 [ 0, %92 ], [ %121, %94 ]
  %97 = getelementptr inbounds ptr, ptr %80, i64 %95
  %98 = load ptr, ptr %97, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %98, i8 -1, i64 %86, i1 false), !tbaa !67
  %99 = or i64 %95, 1
  %100 = getelementptr inbounds ptr, ptr %80, i64 %99
  %101 = load ptr, ptr %100, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %101, i8 -1, i64 %86, i1 false), !tbaa !67
  %102 = or i64 %95, 2
  %103 = getelementptr inbounds ptr, ptr %80, i64 %102
  %104 = load ptr, ptr %103, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %104, i8 -1, i64 %86, i1 false), !tbaa !67
  %105 = or i64 %95, 3
  %106 = getelementptr inbounds ptr, ptr %80, i64 %105
  %107 = load ptr, ptr %106, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %107, i8 -1, i64 %86, i1 false), !tbaa !67
  %108 = or i64 %95, 4
  %109 = getelementptr inbounds ptr, ptr %80, i64 %108
  %110 = load ptr, ptr %109, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %110, i8 -1, i64 %86, i1 false), !tbaa !67
  %111 = or i64 %95, 5
  %112 = getelementptr inbounds ptr, ptr %80, i64 %111
  %113 = load ptr, ptr %112, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %113, i8 -1, i64 %86, i1 false), !tbaa !67
  %114 = or i64 %95, 6
  %115 = getelementptr inbounds ptr, ptr %80, i64 %114
  %116 = load ptr, ptr %115, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %116, i8 -1, i64 %86, i1 false), !tbaa !67
  %117 = or i64 %95, 7
  %118 = getelementptr inbounds ptr, ptr %80, i64 %117
  %119 = load ptr, ptr %118, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %119, i8 -1, i64 %86, i1 false), !tbaa !67
  %120 = add nuw nsw i64 %95, 8
  %121 = add i64 %96, 8
  %122 = icmp eq i64 %121, %93
  br i1 %122, label %125, label %94, !llvm.loop !236

123:                                              ; preds = %4
  %124 = tail call ptr @genmatrix_p(i32 noundef %15, i32 noundef %10, i64 noundef 4, ptr noundef nonnull @.str.66, i32 noundef 9819)
  store ptr %124, ptr %3, align 8, !tbaa !137
  br label %136

125:                                              ; preds = %94, %83
  %126 = phi i64 [ 0, %83 ], [ %120, %94 ]
  %127 = icmp eq i64 %90, 0
  br i1 %127, label %136, label %128

128:                                              ; preds = %125, %128
  %129 = phi i64 [ %133, %128 ], [ %126, %125 ]
  %130 = phi i64 [ %134, %128 ], [ 0, %125 ]
  %131 = getelementptr inbounds ptr, ptr %80, i64 %129
  %132 = load ptr, ptr %131, align 8, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr align 4 %132, i8 -1, i64 %86, i1 false), !tbaa !67
  %133 = add nuw nsw i64 %129, 1
  %134 = add i64 %130, 1
  %135 = icmp eq i64 %134, %90
  br i1 %135, label %136, label %128, !llvm.loop !237

136:                                              ; preds = %125, %128, %123, %79
  %137 = phi ptr [ %80, %79 ], [ %124, %123 ], [ %80, %128 ], [ %80, %125 ]
  %138 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 81
  %139 = load i32, ptr %138, align 8, !tbaa !193
  %140 = icmp sgt i32 %139, 0
  br i1 %140, label %141, label %158

141:                                              ; preds = %136
  %142 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85
  %143 = load ptr, ptr %142, align 8, !tbaa !59
  %144 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 86
  %145 = load ptr, ptr %144, align 8
  %146 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 87
  %147 = load ptr, ptr %146, align 8
  %148 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %149 = load ptr, ptr %148, align 8
  %150 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %151 = load ptr, ptr %150, align 8
  %152 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %153 = load ptr, ptr %152, align 8
  %154 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %155 = load ptr, ptr %154, align 8
  %156 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %157 = load ptr, ptr %156, align 8
  br label %179

158:                                              ; preds = %293, %136
  %159 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 82
  %160 = load i32, ptr %159, align 4, !tbaa !195
  %161 = icmp sgt i32 %160, 0
  br i1 %161, label %162, label %298

162:                                              ; preds = %158
  %163 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100
  %164 = load ptr, ptr %163, align 8, !tbaa !59
  %165 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 101
  %166 = load ptr, ptr %165, align 8
  %167 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 102
  %168 = load ptr, ptr %167, align 8
  %169 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %170 = load ptr, ptr %169, align 8
  %171 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %172 = load ptr, ptr %171, align 8
  %173 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %174 = load ptr, ptr %173, align 8
  %175 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %176 = load ptr, ptr %175, align 8
  %177 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %178 = load ptr, ptr %177, align 8
  br label %299

179:                                              ; preds = %141, %293
  %180 = phi i64 [ 0, %141 ], [ %294, %293 ]
  %181 = getelementptr inbounds i32, ptr %143, i64 %180
  %182 = load i32, ptr %181, align 4, !tbaa !67
  %183 = icmp eq i32 %182, %1
  br i1 %183, label %184, label %293

184:                                              ; preds = %179
  %185 = getelementptr inbounds i32, ptr %145, i64 %180
  %186 = load i32, ptr %185, align 4, !tbaa !67
  %187 = getelementptr inbounds i32, ptr %147, i64 %180
  %188 = load i32, ptr %187, align 4, !tbaa !67
  %189 = sext i32 %186 to i64
  %190 = getelementptr inbounds i32, ptr %149, i64 %189
  %191 = load i32, ptr %190, align 4, !tbaa !67
  %192 = icmp eq i32 %191, %1
  %193 = getelementptr inbounds i32, ptr %151, i64 %189
  %194 = load i32, ptr %193, align 4, !tbaa !67
  br i1 %192, label %195, label %213

195:                                              ; preds = %184
  %196 = sub nsw i32 %194, %20
  %197 = getelementptr inbounds i32, ptr %153, i64 %189
  %198 = load i32, ptr %197, align 4, !tbaa !67
  %199 = sub nsw i32 %198, %25
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds ptr, ptr %26, i64 %200
  %202 = load ptr, ptr %201, align 8, !tbaa !137
  %203 = sext i32 %196 to i64
  %204 = getelementptr inbounds i32, ptr %202, i64 %203
  store i32 1, ptr %204, align 4, !tbaa !67
  %205 = getelementptr inbounds ptr, ptr %137, i64 %200
  %206 = load ptr, ptr %205, align 8, !tbaa !137
  %207 = getelementptr inbounds i32, ptr %206, i64 %203
  store i32 %186, ptr %207, align 4, !tbaa !67
  %208 = getelementptr inbounds i32, ptr %155, i64 %189
  %209 = load i32, ptr %208, align 4, !tbaa !67
  %210 = icmp eq i32 %209, 1
  br i1 %210, label %242, label %211

211:                                              ; preds = %195
  %212 = add nsw i32 %196, -1
  br label %236

213:                                              ; preds = %184
  %214 = shl nsw i32 %194, 1
  %215 = sub nsw i32 %214, %20
  %216 = add nsw i32 %215, 1
  %217 = getelementptr inbounds i32, ptr %153, i64 %189
  %218 = load i32, ptr %217, align 4, !tbaa !67
  %219 = shl nsw i32 %218, 1
  %220 = sub nsw i32 %219, %25
  %221 = sext i32 %188 to i64
  %222 = getelementptr inbounds i32, ptr %153, i64 %221
  %223 = load i32, ptr %222, align 4, !tbaa !67
  %224 = and i32 %223, -2147483647
  %225 = icmp eq i32 %224, 1
  %226 = zext i1 %225 to i32
  %227 = add nsw i32 %220, %226
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds ptr, ptr %26, i64 %228
  %230 = load ptr, ptr %229, align 8, !tbaa !137
  %231 = sext i32 %216 to i64
  %232 = getelementptr inbounds i32, ptr %230, i64 %231
  store i32 1, ptr %232, align 4, !tbaa !67
  %233 = getelementptr inbounds ptr, ptr %137, i64 %228
  %234 = load ptr, ptr %233, align 8, !tbaa !137
  %235 = getelementptr inbounds i32, ptr %234, i64 %231
  store i32 %186, ptr %235, align 4, !tbaa !67
  br label %236

236:                                              ; preds = %213, %211
  %237 = phi i32 [ %212, %211 ], [ %215, %213 ]
  %238 = phi ptr [ %206, %211 ], [ %234, %213 ]
  %239 = phi i32 [ %209, %211 ], [ %186, %213 ]
  %240 = sext i32 %237 to i64
  %241 = getelementptr inbounds i32, ptr %238, i64 %240
  store i32 %239, ptr %241, align 4, !tbaa !67
  br label %242

242:                                              ; preds = %236, %195
  %243 = sext i32 %188 to i64
  %244 = getelementptr inbounds i32, ptr %149, i64 %243
  %245 = load i32, ptr %244, align 4, !tbaa !67
  %246 = icmp eq i32 %245, %1
  %247 = getelementptr inbounds i32, ptr %151, i64 %243
  %248 = load i32, ptr %247, align 4, !tbaa !67
  br i1 %246, label %249, label %265

249:                                              ; preds = %242
  %250 = sub nsw i32 %248, %20
  %251 = getelementptr inbounds i32, ptr %153, i64 %243
  %252 = load i32, ptr %251, align 4, !tbaa !67
  %253 = sub nsw i32 %252, %25
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds ptr, ptr %26, i64 %254
  %256 = load ptr, ptr %255, align 8, !tbaa !137
  %257 = sext i32 %250 to i64
  %258 = getelementptr inbounds i32, ptr %256, i64 %257
  store i32 1, ptr %258, align 4, !tbaa !67
  %259 = getelementptr inbounds ptr, ptr %137, i64 %254
  %260 = load ptr, ptr %259, align 8, !tbaa !137
  %261 = getelementptr inbounds i32, ptr %260, i64 %257
  store i32 %188, ptr %261, align 4, !tbaa !67
  %262 = getelementptr inbounds i32, ptr %157, i64 %243
  %263 = load i32, ptr %262, align 4, !tbaa !67
  %264 = icmp eq i32 %263, 1
  br i1 %264, label %293, label %286

265:                                              ; preds = %242
  %266 = shl nsw i32 %248, 1
  %267 = sub nsw i32 %266, %20
  %268 = getelementptr inbounds i32, ptr %153, i64 %243
  %269 = load i32, ptr %268, align 4, !tbaa !67
  %270 = shl nsw i32 %269, 1
  %271 = sub nsw i32 %270, %25
  %272 = getelementptr inbounds i32, ptr %153, i64 %189
  %273 = load i32, ptr %272, align 4, !tbaa !67
  %274 = and i32 %273, -2147483647
  %275 = icmp eq i32 %274, 1
  %276 = zext i1 %275 to i32
  %277 = add nsw i32 %271, %276
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds ptr, ptr %26, i64 %278
  %280 = load ptr, ptr %279, align 8, !tbaa !137
  %281 = sext i32 %267 to i64
  %282 = getelementptr inbounds i32, ptr %280, i64 %281
  store i32 1, ptr %282, align 4, !tbaa !67
  %283 = getelementptr inbounds ptr, ptr %137, i64 %278
  %284 = load ptr, ptr %283, align 8, !tbaa !137
  %285 = getelementptr inbounds i32, ptr %284, i64 %281
  store i32 %188, ptr %285, align 4, !tbaa !67
  br label %286

286:                                              ; preds = %249, %265
  %287 = phi i32 [ %267, %265 ], [ %250, %249 ]
  %288 = phi ptr [ %284, %265 ], [ %260, %249 ]
  %289 = phi i32 [ %188, %265 ], [ %263, %249 ]
  %290 = add nsw i32 %287, 1
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds i32, ptr %288, i64 %291
  store i32 %289, ptr %292, align 4, !tbaa !67
  br label %293

293:                                              ; preds = %286, %249, %179
  %294 = add nuw nsw i64 %180, 1
  %295 = load i32, ptr %138, align 8, !tbaa !193
  %296 = sext i32 %295 to i64
  %297 = icmp slt i64 %294, %296
  br i1 %297, label %179, label %158, !llvm.loop !238

298:                                              ; preds = %417, %158
  ret void

299:                                              ; preds = %162, %417
  %300 = phi i64 [ 0, %162 ], [ %418, %417 ]
  %301 = getelementptr inbounds i32, ptr %164, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !67
  %303 = icmp eq i32 %302, %1
  br i1 %303, label %304, label %417

304:                                              ; preds = %299
  %305 = getelementptr inbounds i32, ptr %166, i64 %300
  %306 = load i32, ptr %305, align 4, !tbaa !67
  %307 = getelementptr inbounds i32, ptr %168, i64 %300
  %308 = load i32, ptr %307, align 4, !tbaa !67
  %309 = sext i32 %306 to i64
  %310 = getelementptr inbounds i32, ptr %170, i64 %309
  %311 = load i32, ptr %310, align 4, !tbaa !67
  %312 = icmp eq i32 %311, %1
  %313 = getelementptr inbounds i32, ptr %172, i64 %309
  %314 = load i32, ptr %313, align 4, !tbaa !67
  br i1 %312, label %315, label %333

315:                                              ; preds = %304
  %316 = sub nsw i32 %314, %20
  %317 = getelementptr inbounds i32, ptr %174, i64 %309
  %318 = load i32, ptr %317, align 4, !tbaa !67
  %319 = sub nsw i32 %318, %25
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds ptr, ptr %26, i64 %320
  %322 = load ptr, ptr %321, align 8, !tbaa !137
  %323 = sext i32 %316 to i64
  %324 = getelementptr inbounds i32, ptr %322, i64 %323
  store i32 1, ptr %324, align 4, !tbaa !67
  %325 = getelementptr inbounds ptr, ptr %137, i64 %320
  %326 = load ptr, ptr %325, align 8, !tbaa !137
  %327 = getelementptr inbounds i32, ptr %326, i64 %323
  store i32 %306, ptr %327, align 4, !tbaa !67
  %328 = getelementptr inbounds i32, ptr %176, i64 %309
  %329 = load i32, ptr %328, align 4, !tbaa !67
  %330 = icmp eq i32 %329, 1
  br i1 %330, label %364, label %331

331:                                              ; preds = %315
  %332 = add nsw i32 %319, -1
  br label %356

333:                                              ; preds = %304
  %334 = shl nsw i32 %314, 1
  %335 = sub nsw i32 %334, %20
  %336 = getelementptr inbounds i32, ptr %174, i64 %309
  %337 = load i32, ptr %336, align 4, !tbaa !67
  %338 = shl nsw i32 %337, 1
  %339 = sub nsw i32 %338, %25
  %340 = add nsw i32 %339, 1
  %341 = sext i32 %308 to i64
  %342 = getelementptr inbounds i32, ptr %172, i64 %341
  %343 = load i32, ptr %342, align 4, !tbaa !67
  %344 = and i32 %343, -2147483647
  %345 = icmp eq i32 %344, 1
  %346 = zext i1 %345 to i32
  %347 = add nsw i32 %335, %346
  %348 = sext i32 %340 to i64
  %349 = getelementptr inbounds ptr, ptr %26, i64 %348
  %350 = load ptr, ptr %349, align 8, !tbaa !137
  %351 = sext i32 %347 to i64
  %352 = getelementptr inbounds i32, ptr %350, i64 %351
  store i32 1, ptr %352, align 4, !tbaa !67
  %353 = getelementptr inbounds ptr, ptr %137, i64 %348
  %354 = load ptr, ptr %353, align 8, !tbaa !137
  %355 = getelementptr inbounds i32, ptr %354, i64 %351
  store i32 %306, ptr %355, align 4, !tbaa !67
  br label %356

356:                                              ; preds = %333, %331
  %357 = phi i32 [ %332, %331 ], [ %339, %333 ]
  %358 = phi i64 [ %323, %331 ], [ %351, %333 ]
  %359 = phi i32 [ %329, %331 ], [ %306, %333 ]
  %360 = sext i32 %357 to i64
  %361 = getelementptr inbounds ptr, ptr %137, i64 %360
  %362 = load ptr, ptr %361, align 8, !tbaa !137
  %363 = getelementptr inbounds i32, ptr %362, i64 %358
  store i32 %359, ptr %363, align 4, !tbaa !67
  br label %364

364:                                              ; preds = %356, %315
  %365 = sext i32 %308 to i64
  %366 = getelementptr inbounds i32, ptr %170, i64 %365
  %367 = load i32, ptr %366, align 4, !tbaa !67
  %368 = icmp eq i32 %367, %1
  %369 = getelementptr inbounds i32, ptr %172, i64 %365
  %370 = load i32, ptr %369, align 4, !tbaa !67
  br i1 %368, label %371, label %387

371:                                              ; preds = %364
  %372 = sub nsw i32 %370, %20
  %373 = getelementptr inbounds i32, ptr %174, i64 %365
  %374 = load i32, ptr %373, align 4, !tbaa !67
  %375 = sub nsw i32 %374, %25
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds ptr, ptr %26, i64 %376
  %378 = load ptr, ptr %377, align 8, !tbaa !137
  %379 = sext i32 %372 to i64
  %380 = getelementptr inbounds i32, ptr %378, i64 %379
  store i32 1, ptr %380, align 4, !tbaa !67
  %381 = getelementptr inbounds ptr, ptr %137, i64 %376
  %382 = load ptr, ptr %381, align 8, !tbaa !137
  %383 = getelementptr inbounds i32, ptr %382, i64 %379
  store i32 %308, ptr %383, align 4, !tbaa !67
  %384 = getelementptr inbounds i32, ptr %178, i64 %365
  %385 = load i32, ptr %384, align 4, !tbaa !67
  %386 = icmp eq i32 %385, 1
  br i1 %386, label %417, label %408

387:                                              ; preds = %364
  %388 = shl nsw i32 %370, 1
  %389 = sub nsw i32 %388, %20
  %390 = getelementptr inbounds i32, ptr %174, i64 %365
  %391 = load i32, ptr %390, align 4, !tbaa !67
  %392 = shl nsw i32 %391, 1
  %393 = sub nsw i32 %392, %25
  %394 = getelementptr inbounds i32, ptr %172, i64 %309
  %395 = load i32, ptr %394, align 4, !tbaa !67
  %396 = and i32 %395, -2147483647
  %397 = icmp eq i32 %396, 1
  %398 = zext i1 %397 to i32
  %399 = add nsw i32 %389, %398
  %400 = sext i32 %393 to i64
  %401 = getelementptr inbounds ptr, ptr %26, i64 %400
  %402 = load ptr, ptr %401, align 8, !tbaa !137
  %403 = sext i32 %399 to i64
  %404 = getelementptr inbounds i32, ptr %402, i64 %403
  store i32 1, ptr %404, align 4, !tbaa !67
  %405 = getelementptr inbounds ptr, ptr %137, i64 %400
  %406 = load ptr, ptr %405, align 8, !tbaa !137
  %407 = getelementptr inbounds i32, ptr %406, i64 %403
  store i32 %308, ptr %407, align 4, !tbaa !67
  br label %408

408:                                              ; preds = %371, %387
  %409 = phi i32 [ %393, %387 ], [ %375, %371 ]
  %410 = phi i64 [ %403, %387 ], [ %379, %371 ]
  %411 = phi i32 [ %308, %387 ], [ %385, %371 ]
  %412 = add nsw i32 %409, 1
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds ptr, ptr %137, i64 %413
  %415 = load ptr, ptr %414, align 8, !tbaa !137
  %416 = getelementptr inbounds i32, ptr %415, i64 %410
  store i32 %411, ptr %416, align 4, !tbaa !67
  br label %417

417:                                              ; preds = %408, %371, %299
  %418 = add nuw nsw i64 %300, 1
  %419 = load i32, ptr %159, align 4, !tbaa !195
  %420 = sext i32 %419 to i64
  %421 = icmp slt i64 %418, %420
  br i1 %421, label %299, label %298, !llvm.loop !239
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN4Mesh24calc_face_list_clearmapsEv(ptr nocapture noundef nonnull align 8 dereferenceable(2288) %0) local_unnamed_addr #13 align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 86
  %3 = load ptr, ptr %2, align 8, !tbaa !59
  %4 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 86, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !58
  %6 = icmp eq ptr %5, %3
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  store ptr %3, ptr %4, align 8, !tbaa !58
  br label %8

8:                                                ; preds = %1, %7
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 87
  %10 = load ptr, ptr %9, align 8, !tbaa !59
  %11 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 87, i32 0, i32 0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !58
  %13 = icmp eq ptr %12, %10
  br i1 %13, label %15, label %14

14:                                               ; preds = %8
  store ptr %10, ptr %11, align 8, !tbaa !58
  br label %15

15:                                               ; preds = %8, %14
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 88
  %17 = load ptr, ptr %16, align 8, !tbaa !59
  %18 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 88, i32 0, i32 0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !58
  %20 = icmp eq ptr %19, %17
  br i1 %20, label %22, label %21

21:                                               ; preds = %15
  store ptr %17, ptr %18, align 8, !tbaa !58
  br label %22

22:                                               ; preds = %15, %21
  %23 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 89
  %24 = load ptr, ptr %23, align 8, !tbaa !59
  %25 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 89, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !58
  %27 = icmp eq ptr %26, %24
  br i1 %27, label %29, label %28

28:                                               ; preds = %22
  store ptr %24, ptr %25, align 8, !tbaa !58
  br label %29

29:                                               ; preds = %22, %28
  %30 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 90
  %31 = load ptr, ptr %30, align 8, !tbaa !59
  %32 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 90, i32 0, i32 0, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !58
  %34 = icmp eq ptr %33, %31
  br i1 %34, label %36, label %35

35:                                               ; preds = %29
  store ptr %31, ptr %32, align 8, !tbaa !58
  br label %36

36:                                               ; preds = %29, %35
  %37 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 91
  %38 = load ptr, ptr %37, align 8, !tbaa !59
  %39 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 91, i32 0, i32 0, i32 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !58
  %41 = icmp eq ptr %40, %38
  br i1 %41, label %43, label %42

42:                                               ; preds = %36
  store ptr %38, ptr %39, align 8, !tbaa !58
  br label %43

43:                                               ; preds = %36, %42
  %44 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 101
  %45 = load ptr, ptr %44, align 8, !tbaa !59
  %46 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 101, i32 0, i32 0, i32 0, i32 1
  %47 = load ptr, ptr %46, align 8, !tbaa !58
  %48 = icmp eq ptr %47, %45
  br i1 %48, label %50, label %49

49:                                               ; preds = %43
  store ptr %45, ptr %46, align 8, !tbaa !58
  br label %50

50:                                               ; preds = %43, %49
  %51 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 102
  %52 = load ptr, ptr %51, align 8, !tbaa !59
  %53 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 102, i32 0, i32 0, i32 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !58
  %55 = icmp eq ptr %54, %52
  br i1 %55, label %57, label %56

56:                                               ; preds = %50
  store ptr %52, ptr %53, align 8, !tbaa !58
  br label %57

57:                                               ; preds = %50, %56
  %58 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 103
  %59 = load ptr, ptr %58, align 8, !tbaa !59
  %60 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 103, i32 0, i32 0, i32 0, i32 1
  %61 = load ptr, ptr %60, align 8, !tbaa !58
  %62 = icmp eq ptr %61, %59
  br i1 %62, label %64, label %63

63:                                               ; preds = %57
  store ptr %59, ptr %60, align 8, !tbaa !58
  br label %64

64:                                               ; preds = %57, %63
  %65 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 104
  %66 = load ptr, ptr %65, align 8, !tbaa !59
  %67 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 104, i32 0, i32 0, i32 0, i32 1
  %68 = load ptr, ptr %67, align 8, !tbaa !58
  %69 = icmp eq ptr %68, %66
  br i1 %69, label %71, label %70

70:                                               ; preds = %64
  store ptr %66, ptr %67, align 8, !tbaa !58
  br label %71

71:                                               ; preds = %64, %70
  %72 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 105
  %73 = load ptr, ptr %72, align 8, !tbaa !59
  %74 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 105, i32 0, i32 0, i32 0, i32 1
  %75 = load ptr, ptr %74, align 8, !tbaa !58
  %76 = icmp eq ptr %75, %73
  br i1 %76, label %78, label %77

77:                                               ; preds = %71
  store ptr %73, ptr %74, align 8, !tbaa !58
  br label %78

78:                                               ; preds = %71, %77
  %79 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 106
  %80 = load ptr, ptr %79, align 8, !tbaa !59
  %81 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 106, i32 0, i32 0, i32 0, i32 1
  %82 = load ptr, ptr %81, align 8, !tbaa !58
  %83 = icmp eq ptr %82, %80
  br i1 %83, label %85, label %84

84:                                               ; preds = %78
  store ptr %80, ptr %81, align 8, !tbaa !58
  br label %85

85:                                               ; preds = %78, %84
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #6 align 2 {
  %5 = alloca [80 x i8], align 16
  %6 = icmp eq i32 %2, 0
  %7 = zext i32 %1 to i64
  br i1 %6, label %8, label %15

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 %7
  %10 = load double, ptr %9, align 8, !tbaa !45
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %5) #31
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(80) %5, i8 0, i64 80, i1 false)
  store i8 47, ptr %5, align 16
  %11 = getelementptr inbounds <{ i8, i8, [78 x i8] }>, ptr %5, i64 0, i32 1
  store i8 48, ptr %11, align 1
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %13 = load i32, ptr %12, align 4, !tbaa !80
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %24, label %31

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 %7
  %17 = load i64, ptr %16, align 8, !tbaa !240
  %18 = sitofp i64 %17 to double
  %19 = fmul double %18, 1.000000e-09
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %5) #31
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(80) %5, i8 0, i64 80, i1 false)
  store i8 47, ptr %5, align 16
  %20 = getelementptr inbounds <{ i8, i8, [78 x i8] }>, ptr %5, i64 0, i32 1
  store i8 48, ptr %20, align 1
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %22 = load i32, ptr %21, align 4, !tbaa !80
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %15, %8
  %25 = phi ptr [ @.str.76, %8 ], [ @.str.77, %15 ]
  %26 = phi double [ %10, %8 ], [ %19, %15 ]
  %27 = shl nsw i32 %3, 1
  %28 = shl i64 %7, 2
  %29 = call ptr @llvm.load.relative.i64(ptr @reltable._ZN4Mesh12timer_outputE11mesh_timers17mesh_device_typesi, i64 %28)
  %30 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %5, ptr noundef nonnull dereferenceable(1) %25, i32 noundef %27, ptr noundef nonnull @.str.75, ptr noundef %29) #31
  br label %31

31:                                               ; preds = %24, %15, %8
  %32 = phi double [ %19, %15 ], [ %10, %8 ], [ %26, %24 ]
  call void @_ZN4Mesh15parallel_outputEPKcdiS1_(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef nonnull %5, double noundef %32, i32 noundef %3, ptr noundef nonnull @.str.78)
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %5) #31
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #19

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh15parallel_outputEPKcdiS1_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, ptr noundef %1, double noundef %2, i32 noundef %3, ptr noundef %4) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %6 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 10
  %7 = load i32, ptr %6, align 8, !tbaa !94
  %8 = sext i32 %7 to i64
  %9 = icmp slt i32 %7, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %5
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.142) #36
  unreachable

11:                                               ; preds = %5
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %11
  %14 = shl nuw nsw i64 %8, 3
  %15 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %14) #35
  store double 0.000000e+00, ptr %15, align 8, !tbaa !45
  %16 = getelementptr double, ptr %15, i64 1
  %17 = icmp eq i32 %7, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds double, ptr %15, i64 %8
  %20 = add nsw i64 %14, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %16, i8 0, i64 %20, i1 false), !tbaa !45
  br label %21

21:                                               ; preds = %18, %13, %11
  %22 = phi ptr [ %15, %13 ], [ %15, %18 ], [ null, %11 ]
  %23 = phi ptr [ %16, %13 ], [ %19, %18 ], [ null, %11 ]
  store double %2, ptr %22, align 8, !tbaa !45
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %25 = load i32, ptr %24, align 4, !tbaa !80
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %90

27:                                               ; preds = %21
  %28 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.79, ptr noundef %1)
  %29 = load i32, ptr %6, align 8, !tbaa !94
  %30 = icmp slt i32 %29, 5
  br i1 %30, label %31, label %48

31:                                               ; preds = %27
  %32 = icmp sgt i32 %29, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = shl nsw i32 %3, 1
  br label %39

35:                                               ; preds = %39, %31
  %36 = tail call i32 @puts(ptr nonnull dereferenceable(1) %4)
  br label %90

37:                                               ; preds = %58, %50
  %38 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %22) #33
  resume { ptr, i32 } %38

39:                                               ; preds = %33, %39
  %40 = phi i64 [ 0, %33 ], [ %44, %39 ]
  %41 = getelementptr inbounds double, ptr %22, i64 %40
  %42 = load double, ptr %41, align 8, !tbaa !45
  %43 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.80, i32 noundef %34, ptr noundef nonnull @.str.75, double noundef %42)
  %44 = add nuw nsw i64 %40, 1
  %45 = load i32, ptr %6, align 8, !tbaa !94
  %46 = sext i32 %45 to i64
  %47 = icmp slt i64 %44, %46
  br i1 %47, label %39, label %35, !llvm.loop !242

48:                                               ; preds = %27
  %49 = icmp eq ptr %22, %23
  br i1 %49, label %61, label %50

50:                                               ; preds = %48
  %51 = ptrtoint ptr %23 to i64
  %52 = ptrtoint ptr %22 to i64
  %53 = sub i64 %51, %52
  %54 = ashr exact i64 %53, 3
  %55 = tail call i64 @llvm.ctlz.i64(i64 %54, i1 true), !range !243
  %56 = shl nuw nsw i64 %55, 1
  %57 = xor i64 %56, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr nonnull %22, ptr %23, i64 noundef %57)
          to label %58 unwind label %37

58:                                               ; preds = %50
  invoke void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr nonnull %22, ptr %23)
          to label %59 unwind label %37

59:                                               ; preds = %58
  %60 = load i32, ptr %6, align 8, !tbaa !94
  br label %61

61:                                               ; preds = %59, %48
  %62 = phi i32 [ %60, %59 ], [ %29, %48 ]
  %63 = sdiv i32 %62, 2
  %64 = and i32 %62, 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %76

66:                                               ; preds = %61
  %67 = add nsw i32 %63, -1
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds double, ptr %22, i64 %68
  %70 = load double, ptr %69, align 8, !tbaa !45
  %71 = sext i32 %63 to i64
  %72 = getelementptr inbounds double, ptr %22, i64 %71
  %73 = load double, ptr %72, align 8, !tbaa !45
  %74 = fadd double %70, %73
  %75 = fmul double %74, 5.000000e-01
  br label %81

76:                                               ; preds = %61
  %77 = add nsw i32 %63, 1
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds double, ptr %22, i64 %78
  %80 = load double, ptr %79, align 8, !tbaa !45
  br label %81

81:                                               ; preds = %76, %66
  %82 = phi double [ %75, %66 ], [ %80, %76 ]
  %83 = shl nsw i32 %3, 1
  %84 = load double, ptr %22, align 8, !tbaa !45
  %85 = add nsw i32 %62, -1
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds double, ptr %22, i64 %86
  %88 = load double, ptr %87, align 8, !tbaa !45
  %89 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.82, i32 noundef %83, ptr noundef nonnull @.str.75, double noundef %84, i32 noundef %83, ptr noundef nonnull @.str.75, double noundef %82, i32 noundef %83, ptr noundef nonnull @.str.75, double noundef %88, ptr noundef %4)
  br label %90

90:                                               ; preds = %21, %81, %35
  tail call void @_ZdlPv(ptr noundef nonnull %22) #33
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh15parallel_outputEPKcxiS1_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, ptr noundef %1, i64 noundef %2, i32 noundef %3, ptr noundef %4) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %6 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 10
  %7 = load i32, ptr %6, align 8, !tbaa !94
  %8 = sext i32 %7 to i64
  %9 = icmp slt i32 %7, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %5
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.142) #36
  unreachable

11:                                               ; preds = %5
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %11
  %14 = shl nuw nsw i64 %8, 3
  %15 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %14) #35
  store i64 0, ptr %15, align 8, !tbaa !240
  %16 = getelementptr i64, ptr %15, i64 1
  %17 = icmp eq i32 %7, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds i64, ptr %15, i64 %8
  %20 = add nsw i64 %14, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %16, i8 0, i64 %20, i1 false), !tbaa !240
  br label %21

21:                                               ; preds = %18, %13, %11
  %22 = phi ptr [ %15, %13 ], [ %15, %18 ], [ null, %11 ]
  %23 = phi ptr [ %16, %13 ], [ %19, %18 ], [ null, %11 ]
  store i64 %2, ptr %22, align 8, !tbaa !240
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %25 = load i32, ptr %24, align 4, !tbaa !80
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %90

27:                                               ; preds = %21
  %28 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.79, ptr noundef %1)
  %29 = load i32, ptr %6, align 8, !tbaa !94
  %30 = icmp slt i32 %29, 5
  br i1 %30, label %31, label %48

31:                                               ; preds = %27
  %32 = icmp sgt i32 %29, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = shl nsw i32 %3, 1
  br label %39

35:                                               ; preds = %39, %31
  %36 = tail call i32 @puts(ptr nonnull dereferenceable(1) %4)
  br label %90

37:                                               ; preds = %58, %50
  %38 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %22) #33
  resume { ptr, i32 } %38

39:                                               ; preds = %33, %39
  %40 = phi i64 [ 0, %33 ], [ %44, %39 ]
  %41 = getelementptr inbounds i64, ptr %22, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !240
  %43 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.83, i32 noundef %34, ptr noundef nonnull @.str.75, i64 noundef %42)
  %44 = add nuw nsw i64 %40, 1
  %45 = load i32, ptr %6, align 8, !tbaa !94
  %46 = sext i32 %45 to i64
  %47 = icmp slt i64 %44, %46
  br i1 %47, label %39, label %35, !llvm.loop !244

48:                                               ; preds = %27
  %49 = icmp eq ptr %22, %23
  br i1 %49, label %61, label %50

50:                                               ; preds = %48
  %51 = ptrtoint ptr %23 to i64
  %52 = ptrtoint ptr %22 to i64
  %53 = sub i64 %51, %52
  %54 = ashr exact i64 %53, 3
  %55 = tail call i64 @llvm.ctlz.i64(i64 %54, i1 true), !range !243
  %56 = shl nuw nsw i64 %55, 1
  %57 = xor i64 %56, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr nonnull %22, ptr %23, i64 noundef %57)
          to label %58 unwind label %37

58:                                               ; preds = %50
  invoke void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr nonnull %22, ptr %23)
          to label %59 unwind label %37

59:                                               ; preds = %58
  %60 = load i32, ptr %6, align 8, !tbaa !94
  br label %61

61:                                               ; preds = %59, %48
  %62 = phi i32 [ %60, %59 ], [ %29, %48 ]
  %63 = sdiv i32 %62, 2
  %64 = and i32 %62, 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %76

66:                                               ; preds = %61
  %67 = add nsw i32 %63, -1
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i64, ptr %22, i64 %68
  %70 = load i64, ptr %69, align 8, !tbaa !240
  %71 = sext i32 %63 to i64
  %72 = getelementptr inbounds i64, ptr %22, i64 %71
  %73 = load i64, ptr %72, align 8, !tbaa !240
  %74 = add nsw i64 %73, %70
  %75 = sdiv i64 %74, 2
  br label %81

76:                                               ; preds = %61
  %77 = add nsw i32 %63, 1
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i64, ptr %22, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !240
  br label %81

81:                                               ; preds = %76, %66
  %82 = phi i64 [ %75, %66 ], [ %80, %76 ]
  %83 = shl nsw i32 %3, 1
  %84 = load i64, ptr %22, align 8, !tbaa !240
  %85 = add nsw i32 %62, -1
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i64, ptr %22, i64 %86
  %88 = load i64, ptr %87, align 8, !tbaa !240
  %89 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.84, i32 noundef %83, ptr noundef nonnull @.str.75, i64 noundef %84, i32 noundef %83, ptr noundef nonnull @.str.75, i64 noundef %82, i32 noundef %83, ptr noundef nonnull @.str.75, i64 noundef %88, ptr noundef %4)
  br label %90

90:                                               ; preds = %21, %81, %35
  tail call void @_ZdlPv(ptr noundef nonnull %22) #33
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh15parallel_outputEPKciiS1_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %6 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 10
  %7 = load i32, ptr %6, align 8, !tbaa !94
  %8 = sext i32 %7 to i64
  %9 = icmp slt i32 %7, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %5
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.142) #36
  unreachable

11:                                               ; preds = %5
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %11
  %14 = shl nuw nsw i64 %8, 2
  %15 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %14) #35
  store i32 0, ptr %15, align 4, !tbaa !67
  %16 = getelementptr i32, ptr %15, i64 1
  %17 = icmp eq i32 %7, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds i32, ptr %15, i64 %8
  %20 = add nsw i64 %14, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %16, i8 0, i64 %20, i1 false), !tbaa !67
  br label %21

21:                                               ; preds = %18, %13, %11
  %22 = phi ptr [ %15, %13 ], [ %15, %18 ], [ null, %11 ]
  %23 = phi ptr [ %16, %13 ], [ %19, %18 ], [ null, %11 ]
  store i32 %2, ptr %22, align 4, !tbaa !67
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %25 = load i32, ptr %24, align 4, !tbaa !80
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %90

27:                                               ; preds = %21
  %28 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.79, ptr noundef %1)
  %29 = load i32, ptr %6, align 8, !tbaa !94
  %30 = icmp slt i32 %29, 5
  br i1 %30, label %31, label %48

31:                                               ; preds = %27
  %32 = icmp sgt i32 %29, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = shl nsw i32 %3, 1
  br label %39

35:                                               ; preds = %39, %31
  %36 = tail call i32 @puts(ptr nonnull dereferenceable(1) %4)
  br label %90

37:                                               ; preds = %58, %50
  %38 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %22) #33
  resume { ptr, i32 } %38

39:                                               ; preds = %33, %39
  %40 = phi i64 [ 0, %33 ], [ %44, %39 ]
  %41 = getelementptr inbounds i32, ptr %22, i64 %40
  %42 = load i32, ptr %41, align 4, !tbaa !67
  %43 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.85, i32 noundef %34, ptr noundef nonnull @.str.75, i32 noundef %42)
  %44 = add nuw nsw i64 %40, 1
  %45 = load i32, ptr %6, align 8, !tbaa !94
  %46 = sext i32 %45 to i64
  %47 = icmp slt i64 %44, %46
  br i1 %47, label %39, label %35, !llvm.loop !245

48:                                               ; preds = %27
  %49 = icmp eq ptr %22, %23
  br i1 %49, label %61, label %50

50:                                               ; preds = %48
  %51 = ptrtoint ptr %23 to i64
  %52 = ptrtoint ptr %22 to i64
  %53 = sub i64 %51, %52
  %54 = ashr exact i64 %53, 2
  %55 = tail call i64 @llvm.ctlz.i64(i64 %54, i1 true), !range !243
  %56 = shl nuw nsw i64 %55, 1
  %57 = xor i64 %56, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr nonnull %22, ptr %23, i64 noundef %57)
          to label %58 unwind label %37

58:                                               ; preds = %50
  invoke void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr nonnull %22, ptr %23)
          to label %59 unwind label %37

59:                                               ; preds = %58
  %60 = load i32, ptr %6, align 8, !tbaa !94
  br label %61

61:                                               ; preds = %59, %48
  %62 = phi i32 [ %60, %59 ], [ %29, %48 ]
  %63 = sdiv i32 %62, 2
  %64 = and i32 %62, 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %76

66:                                               ; preds = %61
  %67 = add nsw i32 %63, -1
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i32, ptr %22, i64 %68
  %70 = load i32, ptr %69, align 4, !tbaa !67
  %71 = sext i32 %63 to i64
  %72 = getelementptr inbounds i32, ptr %22, i64 %71
  %73 = load i32, ptr %72, align 4, !tbaa !67
  %74 = add nsw i32 %73, %70
  %75 = sdiv i32 %74, 2
  br label %81

76:                                               ; preds = %61
  %77 = add nsw i32 %63, 1
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i32, ptr %22, i64 %78
  %80 = load i32, ptr %79, align 4, !tbaa !67
  br label %81

81:                                               ; preds = %76, %66
  %82 = phi i32 [ %75, %66 ], [ %80, %76 ]
  %83 = shl nsw i32 %3, 1
  %84 = load i32, ptr %22, align 4, !tbaa !67
  %85 = add nsw i32 %62, -1
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i32, ptr %22, i64 %86
  %88 = load i32, ptr %87, align 4, !tbaa !67
  %89 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.86, i32 noundef %83, ptr noundef nonnull @.str.75, i32 noundef %84, i32 noundef %83, ptr noundef nonnull @.str.75, i32 noundef %82, i32 noundef %83, ptr noundef nonnull @.str.75, i32 noundef %88, ptr noundef %4)
  br label %90

90:                                               ; preds = %21, %81, %35
  tail call void @_ZdlPv(ptr noundef nonnull %22) #33
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local noundef i64 @_ZN4Mesh19get_checkpoint_sizeEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0) local_unnamed_addr #20 align 2 {
  %2 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %3 = load i64, ptr %2, align 8, !tbaa !43
  %4 = mul i64 %3, 12
  %5 = add i64 %4, 448
  ret i64 %5
}

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh16store_checkpointEP4Crux(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef %1) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"struct.std::_Rb_tree<void *, std::pair<void *const, malloc_plus_memory_entry *>, std::_Select1st<std::pair<void *const, malloc_plus_memory_entry *>>, std::less<void *>>::_Alloc_node", align 8
  %4 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, malloc_plus_memory_entry *>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, malloc_plus_memory_entry *>>, std::less<std::__cxx11::basic_string<char>>>::_Alloc_node", align 8
  %5 = alloca i32, align 4
  %6 = alloca [3 x i32], align 4
  %7 = alloca [3 x i32], align 4
  %8 = alloca [1 x double], align 8
  %9 = alloca %class.MallocPlus, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #31
  %10 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %11 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %12 = load ptr, ptr %11, align 8, !tbaa !62
  %13 = tail call noundef i64 @_ZN10MallocPlus19get_memory_capacityEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef %12)
  %14 = trunc i64 %13 to i32
  store i32 %14, ptr %5, align 4, !tbaa !67
  call void @_ZN4Crux16store_named_intsEPKciPim(ptr noundef nonnull align 4 dereferenceable(12) %1, ptr noundef nonnull @.str.87, i32 noundef 7, ptr noundef nonnull %5, i64 noundef 1)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #31
  store i32 103, ptr %6, align 4, !tbaa !67
  %15 = load i32, ptr %0, align 8, !tbaa !57
  %16 = getelementptr inbounds [3 x i32], ptr %6, i64 0, i64 1
  store i32 %15, ptr %16, align 4, !tbaa !67
  %17 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %18 = load i32, ptr %17, align 8, !tbaa !91
  %19 = getelementptr inbounds [3 x i32], ptr %6, i64 0, i64 2
  store i32 %18, ptr %19, align 4, !tbaa !67
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #31
  %20 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %21 = load i64, ptr %20, align 8, !tbaa !43
  %22 = trunc i64 %21 to i32
  store i32 %22, ptr %7, align 4, !tbaa !67
  %23 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  %24 = load i64, ptr %23, align 8, !tbaa !78
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds [3 x i32], ptr %7, i64 0, i64 1
  store i32 %25, ptr %26, align 4, !tbaa !67
  %27 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 18
  %28 = load i32, ptr %27, align 8, !tbaa !93
  %29 = getelementptr inbounds [3 x i32], ptr %7, i64 0, i64 2
  store i32 %28, ptr %29, align 4, !tbaa !67
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #31
  %30 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 17
  %31 = load double, ptr %30, align 8, !tbaa !92
  store double %31, ptr %8, align 8, !tbaa !45
  %32 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %7, i64 noundef 3, i64 noundef 4, ptr noundef nonnull @.str.88, i32 noundef 16)
  %33 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %6, i64 noundef 3, i64 noundef 4, ptr noundef nonnull @.str.89, i32 noundef 48)
  %34 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %8, i64 noundef 1, i64 noundef 8, ptr noundef nonnull @.str.90, i32 noundef 16)
  %35 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 5
  %36 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %35, i64 noundef 4, i64 noundef 4, ptr noundef nonnull @.str.91, i32 noundef 16)
  %37 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 6
  %38 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %37, i64 noundef 4, i64 noundef 4, ptr noundef nonnull @.str.92, i32 noundef 16)
  %39 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3
  %40 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %39, i64 noundef 24, i64 noundef 8, ptr noundef nonnull @.str.93, i32 noundef 16)
  %41 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4
  %42 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %41, i64 noundef 24, i64 noundef 8, ptr noundef nonnull @.str.94, i32 noundef 16)
  %43 = getelementptr inbounds i8, ptr %9, i64 8
  store i32 0, ptr %43, align 8, !tbaa !50
  %44 = getelementptr inbounds i8, ptr %9, i64 16
  store ptr null, ptr %44, align 8, !tbaa !51
  %45 = getelementptr inbounds i8, ptr %9, i64 24
  store ptr %43, ptr %45, align 8, !tbaa !52
  %46 = getelementptr inbounds i8, ptr %9, i64 32
  store ptr %43, ptr %46, align 8, !tbaa !53
  %47 = getelementptr inbounds i8, ptr %9, i64 40
  store i64 0, ptr %47, align 8, !tbaa !54
  %48 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !51
  %50 = icmp eq ptr %49, null
  br i1 %50, label %67, label %51

51:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #31
  store ptr %9, ptr %4, align 8, !tbaa !137
  %52 = call noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE7_M_copyILb0ENSG_11_Alloc_nodeEEEPSt13_Rb_tree_nodeISA_ESL_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %9, ptr noundef nonnull %49, ptr noundef nonnull %43, ptr noundef nonnull align 8 dereferenceable(8) %4)
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi ptr [ %56, %53 ], [ %52, %51 ]
  %55 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %54, i64 0, i32 2
  %56 = load ptr, ptr %55, align 8, !tbaa !155
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %53, !llvm.loop !156

58:                                               ; preds = %53
  store ptr %54, ptr %45, align 8, !tbaa !137
  br label %59

59:                                               ; preds = %59, %58
  %60 = phi ptr [ %52, %58 ], [ %62, %59 ]
  %61 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %60, i64 0, i32 3
  %62 = load ptr, ptr %61, align 8, !tbaa !157
  %63 = icmp eq ptr %62, null
  br i1 %63, label %64, label %59, !llvm.loop !158

64:                                               ; preds = %59
  store ptr %60, ptr %46, align 8, !tbaa !137
  %65 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1
  %66 = load i64, ptr %65, align 8, !tbaa !54
  store i64 %66, ptr %47, align 8, !tbaa !54
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #31
  store ptr %52, ptr %44, align 8, !tbaa !137
  br label %67

67:                                               ; preds = %64, %2
  %68 = getelementptr inbounds %class.MallocPlus, ptr %9, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, ptr %68, align 8, !tbaa !50
  %69 = getelementptr inbounds %class.MallocPlus, ptr %9, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %69, align 8, !tbaa !51
  %70 = getelementptr inbounds %class.MallocPlus, ptr %9, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %68, ptr %70, align 8, !tbaa !52
  %71 = getelementptr inbounds %class.MallocPlus, ptr %9, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %68, ptr %71, align 8, !tbaa !53
  %72 = getelementptr inbounds %class.MallocPlus, ptr %9, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %72, align 8, !tbaa !54
  %73 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %74 = load ptr, ptr %73, align 8, !tbaa !51
  %75 = icmp eq ptr %74, null
  br i1 %75, label %97, label %76

76:                                               ; preds = %67
  %77 = getelementptr inbounds %class.MallocPlus, ptr %9, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #31
  store ptr %77, ptr %3, align 8, !tbaa !137
  %78 = invoke noundef ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_M_copyILb0ENSB_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS5_ESG_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %77, ptr noundef nonnull %74, ptr noundef nonnull %68, ptr noundef nonnull align 8 dereferenceable(8) %3)
          to label %79 unwind label %95

79:                                               ; preds = %76, %79
  %80 = phi ptr [ %82, %79 ], [ %78, %76 ]
  %81 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %80, i64 0, i32 2
  %82 = load ptr, ptr %81, align 8, !tbaa !155
  %83 = icmp eq ptr %82, null
  br i1 %83, label %84, label %79, !llvm.loop !156

84:                                               ; preds = %79
  store ptr %80, ptr %70, align 8, !tbaa !137
  br label %85

85:                                               ; preds = %85, %84
  %86 = phi ptr [ %78, %84 ], [ %88, %85 ]
  %87 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %86, i64 0, i32 3
  %88 = load ptr, ptr %87, align 8, !tbaa !157
  %89 = icmp eq ptr %88, null
  br i1 %89, label %90, label %85, !llvm.loop !158

90:                                               ; preds = %85
  store ptr %86, ptr %71, align 8, !tbaa !137
  %91 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 1
  %92 = load i64, ptr %91, align 8, !tbaa !54
  store i64 %92, ptr %72, align 8, !tbaa !54
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #31
  store ptr %78, ptr %69, align 8, !tbaa !137
  br label %97

93:                                               ; preds = %110, %95
  %94 = phi { ptr, i32 } [ %96, %95 ], [ %111, %110 ]
  resume { ptr, i32 } %94

95:                                               ; preds = %76
  %96 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entrySt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %9) #31
  br label %93

97:                                               ; preds = %67, %90
  invoke void @_ZN4Crux16store_MallocPlusE10MallocPlus(ptr noundef nonnull align 4 dereferenceable(12) %1, ptr noundef nonnull %9)
          to label %98 unwind label %110

98:                                               ; preds = %97
  %99 = getelementptr inbounds %class.MallocPlus, ptr %9, i64 0, i32 1
  %100 = load ptr, ptr %69, align 8, !tbaa !51
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %99, ptr noundef %100)
          to label %104 unwind label %101

101:                                              ; preds = %98
  %102 = landingpad { ptr, i32 }
          catch ptr null
  %103 = extractvalue { ptr, i32 } %102, 0
  call void @__clang_call_terminate(ptr %103) #32
  unreachable

104:                                              ; preds = %98
  %105 = load ptr, ptr %44, align 8, !tbaa !51
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %9, ptr noundef %105)
          to label %109 unwind label %106

106:                                              ; preds = %104
  %107 = landingpad { ptr, i32 }
          catch ptr null
  %108 = extractvalue { ptr, i32 } %107, 0
  call void @__clang_call_terminate(ptr %108) #32
  unreachable

109:                                              ; preds = %104
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %7)
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %6)
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %8)
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %35)
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %37)
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %39)
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %41)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #31
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #31
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #31
  ret void

110:                                              ; preds = %97
  %111 = landingpad { ptr, i32 }
          cleanup
  call void @_ZN10MallocPlusD2Ev(ptr noundef nonnull align 8 dereferenceable(96) %9) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #31
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #31
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #31
  br label %93
}

declare noundef i64 @_ZN10MallocPlus19get_memory_capacityEPv(ptr noundef nonnull align 8 dereferenceable(96), ptr noundef) local_unnamed_addr #7

declare void @_ZN4Crux16store_named_intsEPKciPim(ptr noundef nonnull align 4 dereferenceable(12), ptr noundef, i32 noundef, ptr noundef, i64 noundef) local_unnamed_addr #7

declare noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96), ptr noundef, i64 noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #7

declare void @_ZN4Crux16store_MallocPlusE10MallocPlus(ptr noundef nonnull align 4 dereferenceable(12), ptr noundef) local_unnamed_addr #7

declare void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96), ptr noundef) local_unnamed_addr #7

; Function Attrs: uwtable
define dso_local void @_ZN4Mesh18restore_checkpointEP4Crux(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef nonnull %1) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"struct.std::_Rb_tree<void *, std::pair<void *const, malloc_plus_memory_entry *>, std::_Select1st<std::pair<void *const, malloc_plus_memory_entry *>>, std::less<void *>>::_Alloc_node", align 8
  %4 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, malloc_plus_memory_entry *>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, malloc_plus_memory_entry *>>, std::less<std::__cxx11::basic_string<char>>>::_Alloc_node", align 8
  %5 = alloca i32, align 4
  %6 = alloca [3 x i32], align 4
  %7 = alloca [3 x i32], align 4
  %8 = alloca [1 x double], align 8
  %9 = alloca %class.MallocPlus, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #31
  call void @_ZN4Crux18restore_named_intsEPKciPim(ptr noundef nonnull align 4 dereferenceable(12) %1, ptr noundef nonnull @.str.87, i32 noundef 7, ptr noundef nonnull %5, i64 noundef 1)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #31
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #31
  %10 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %11 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %12 = load ptr, ptr %11, align 8, !tbaa !73
  %13 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef %12)
  %14 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %15 = load ptr, ptr %14, align 8, !tbaa !74
  %16 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef %15)
  %17 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %18 = load ptr, ptr %17, align 8, !tbaa !75
  %19 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef %18)
  %20 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %21 = load ptr, ptr %20, align 8, !tbaa !76
  %22 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef %21)
  %23 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %24 = load ptr, ptr %23, align 8, !tbaa !85
  %25 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef %24)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %23, i8 0, i64 40, i1 false)
  %26 = load i32, ptr %5, align 4, !tbaa !67
  %27 = sext i32 %26 to i64
  %28 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, i64 noundef %27, i64 noundef 4, ptr noundef nonnull @.str.50, i32 noundef 16)
  %29 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  store ptr %28, ptr %29, align 8, !tbaa !60
  %30 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, i64 noundef %27, i64 noundef 4, ptr noundef nonnull @.str.51, i32 noundef 16)
  %31 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  store ptr %30, ptr %31, align 8, !tbaa !61
  %32 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, i64 noundef %27, i64 noundef 4, ptr noundef nonnull @.str.52, i32 noundef 16)
  %33 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  store ptr %32, ptr %33, align 8, !tbaa !62
  %34 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %6, i64 noundef 3, i64 noundef 4, ptr noundef nonnull @.str.88, i32 noundef 16)
  %35 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %7, i64 noundef 3, i64 noundef 4, ptr noundef nonnull @.str.89, i32 noundef 48)
  %36 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %8, i64 noundef 1, i64 noundef 8, ptr noundef nonnull @.str.90, i32 noundef 48)
  %37 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 5
  %38 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %37, i64 noundef 4, i64 noundef 4, ptr noundef nonnull @.str.91, i32 noundef 16)
  %39 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 6
  %40 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %39, i64 noundef 4, i64 noundef 4, ptr noundef nonnull @.str.92, i32 noundef 16)
  %41 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3
  %42 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %41, i64 noundef 24, i64 noundef 8, ptr noundef nonnull @.str.93, i32 noundef 16)
  %43 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4
  %44 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %43, i64 noundef 24, i64 noundef 8, ptr noundef nonnull @.str.94, i32 noundef 16)
  %45 = getelementptr inbounds i8, ptr %9, i64 8
  store i32 0, ptr %45, align 8, !tbaa !50
  %46 = getelementptr inbounds i8, ptr %9, i64 16
  store ptr null, ptr %46, align 8, !tbaa !51
  %47 = getelementptr inbounds i8, ptr %9, i64 24
  store ptr %45, ptr %47, align 8, !tbaa !52
  %48 = getelementptr inbounds i8, ptr %9, i64 32
  store ptr %45, ptr %48, align 8, !tbaa !53
  %49 = getelementptr inbounds i8, ptr %9, i64 40
  store i64 0, ptr %49, align 8, !tbaa !54
  %50 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !51
  %52 = icmp eq ptr %51, null
  br i1 %52, label %69, label %53

53:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #31
  store ptr %9, ptr %4, align 8, !tbaa !137
  %54 = call noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE7_M_copyILb0ENSG_11_Alloc_nodeEEEPSt13_Rb_tree_nodeISA_ESL_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %9, ptr noundef nonnull %51, ptr noundef nonnull %45, ptr noundef nonnull align 8 dereferenceable(8) %4)
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi ptr [ %58, %55 ], [ %54, %53 ]
  %57 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %56, i64 0, i32 2
  %58 = load ptr, ptr %57, align 8, !tbaa !155
  %59 = icmp eq ptr %58, null
  br i1 %59, label %60, label %55, !llvm.loop !156

60:                                               ; preds = %55
  store ptr %56, ptr %47, align 8, !tbaa !137
  br label %61

61:                                               ; preds = %61, %60
  %62 = phi ptr [ %54, %60 ], [ %64, %61 ]
  %63 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %62, i64 0, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !157
  %65 = icmp eq ptr %64, null
  br i1 %65, label %66, label %61, !llvm.loop !158

66:                                               ; preds = %61
  store ptr %62, ptr %48, align 8, !tbaa !137
  %67 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1
  %68 = load i64, ptr %67, align 8, !tbaa !54
  store i64 %68, ptr %49, align 8, !tbaa !54
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #31
  store ptr %54, ptr %46, align 8, !tbaa !137
  br label %69

69:                                               ; preds = %66, %2
  %70 = getelementptr inbounds %class.MallocPlus, ptr %9, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, ptr %70, align 8, !tbaa !50
  %71 = getelementptr inbounds %class.MallocPlus, ptr %9, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %71, align 8, !tbaa !51
  %72 = getelementptr inbounds %class.MallocPlus, ptr %9, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %70, ptr %72, align 8, !tbaa !52
  %73 = getelementptr inbounds %class.MallocPlus, ptr %9, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %70, ptr %73, align 8, !tbaa !53
  %74 = getelementptr inbounds %class.MallocPlus, ptr %9, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %74, align 8, !tbaa !54
  %75 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %76 = load ptr, ptr %75, align 8, !tbaa !51
  %77 = icmp eq ptr %76, null
  br i1 %77, label %99, label %78

78:                                               ; preds = %69
  %79 = getelementptr inbounds %class.MallocPlus, ptr %9, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #31
  store ptr %79, ptr %3, align 8, !tbaa !137
  %80 = invoke noundef ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_M_copyILb0ENSB_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS5_ESG_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %79, ptr noundef nonnull %76, ptr noundef nonnull %70, ptr noundef nonnull align 8 dereferenceable(8) %3)
          to label %81 unwind label %97

81:                                               ; preds = %78, %81
  %82 = phi ptr [ %84, %81 ], [ %80, %78 ]
  %83 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %82, i64 0, i32 2
  %84 = load ptr, ptr %83, align 8, !tbaa !155
  %85 = icmp eq ptr %84, null
  br i1 %85, label %86, label %81, !llvm.loop !156

86:                                               ; preds = %81
  store ptr %82, ptr %72, align 8, !tbaa !137
  br label %87

87:                                               ; preds = %87, %86
  %88 = phi ptr [ %80, %86 ], [ %90, %87 ]
  %89 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %88, i64 0, i32 3
  %90 = load ptr, ptr %89, align 8, !tbaa !157
  %91 = icmp eq ptr %90, null
  br i1 %91, label %92, label %87, !llvm.loop !158

92:                                               ; preds = %87
  store ptr %88, ptr %73, align 8, !tbaa !137
  %93 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 1
  %94 = load i64, ptr %93, align 8, !tbaa !54
  store i64 %94, ptr %74, align 8, !tbaa !54
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #31
  store ptr %80, ptr %71, align 8, !tbaa !137
  br label %99

95:                                               ; preds = %116, %97
  %96 = phi { ptr, i32 } [ %98, %97 ], [ %117, %116 ]
  resume { ptr, i32 } %96

97:                                               ; preds = %78
  %98 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entrySt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %9) #31
  br label %95

99:                                               ; preds = %69, %92
  invoke void @_ZN4Crux18restore_MallocPlusE10MallocPlus(ptr noundef nonnull align 4 dereferenceable(12) %1, ptr noundef nonnull %9)
          to label %100 unwind label %116

100:                                              ; preds = %99
  %101 = getelementptr inbounds %class.MallocPlus, ptr %9, i64 0, i32 1
  %102 = load ptr, ptr %71, align 8, !tbaa !51
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %101, ptr noundef %102)
          to label %106 unwind label %103

103:                                              ; preds = %100
  %104 = landingpad { ptr, i32 }
          catch ptr null
  %105 = extractvalue { ptr, i32 } %104, 0
  call void @__clang_call_terminate(ptr %105) #32
  unreachable

106:                                              ; preds = %100
  %107 = load ptr, ptr %46, align 8, !tbaa !51
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %9, ptr noundef %107)
          to label %111 unwind label %108

108:                                              ; preds = %106
  %109 = landingpad { ptr, i32 }
          catch ptr null
  %110 = extractvalue { ptr, i32 } %109, 0
  call void @__clang_call_terminate(ptr %110) #32
  unreachable

111:                                              ; preds = %106
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %6)
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %7)
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %8)
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %37)
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %39)
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %41)
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %10, ptr noundef nonnull %43)
  %112 = load i32, ptr %7, align 4, !tbaa !67
  %113 = icmp eq i32 %112, 103
  br i1 %113, label %118, label %114

114:                                              ; preds = %111
  %115 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.95, i32 noundef %112, i32 noundef 103)
  call void @exit(i32 noundef 0) #32
  unreachable

116:                                              ; preds = %99
  %117 = landingpad { ptr, i32 }
          cleanup
  call void @_ZN10MallocPlusD2Ev(ptr noundef nonnull align 8 dereferenceable(96) %9) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #31
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #31
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #31
  br label %95

118:                                              ; preds = %111
  %119 = load i32, ptr %6, align 4, !tbaa !67
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  store i64 %120, ptr %121, align 8, !tbaa !43
  %122 = getelementptr inbounds [3 x i32], ptr %6, i64 0, i64 1
  %123 = load i32, ptr %122, align 4, !tbaa !67
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  store i64 %124, ptr %125, align 8, !tbaa !78
  %126 = getelementptr inbounds [3 x i32], ptr %6, i64 0, i64 2
  %127 = load i32, ptr %126, align 4, !tbaa !67
  %128 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 18
  store i32 %127, ptr %128, align 8, !tbaa !93
  %129 = getelementptr inbounds [3 x i32], ptr %7, i64 0, i64 1
  %130 = load i32, ptr %129, align 4, !tbaa !67
  store i32 %130, ptr %0, align 8, !tbaa !57
  %131 = getelementptr inbounds [3 x i32], ptr %7, i64 0, i64 2
  %132 = load i32, ptr %131, align 4, !tbaa !67
  %133 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  store i32 %132, ptr %133, align 8, !tbaa !91
  %134 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %135 = load i32, ptr %134, align 4, !tbaa !80
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %140, label %137

137:                                              ; preds = %118
  %138 = load double, ptr %8, align 8, !tbaa !45
  %139 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 17
  store double %138, ptr %139, align 8, !tbaa !92
  br label %354

140:                                              ; preds = %118
  %141 = call i32 @putchar(i32 10)
  %142 = call i32 @puts(ptr nonnull dereferenceable(1) @str.160)
  %143 = load i32, ptr %6, align 4, !tbaa !67
  %144 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef nonnull @.str.96, i32 noundef %143)
  %145 = load i32, ptr %122, align 4, !tbaa !67
  %146 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef nonnull @.str.97, i32 noundef %145)
  %147 = load i32, ptr %126, align 4, !tbaa !67
  %148 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef nonnull @.str.98, i32 noundef %147)
  %149 = call i32 @puts(ptr nonnull dereferenceable(1) @str.162)
  %150 = load i32, ptr %7, align 4, !tbaa !67
  %151 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef nonnull @.str.99, i32 noundef %150)
  %152 = load i32, ptr %129, align 4, !tbaa !67
  %153 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef nonnull @.str.100, i32 noundef %152)
  %154 = load i32, ptr %131, align 4, !tbaa !67
  %155 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef nonnull @.str.101, i32 noundef %154)
  %156 = call i32 @puts(ptr nonnull dereferenceable(1) @str.162)
  %157 = call i32 @putchar(i32 10)
  %158 = load i32, ptr %134, align 4, !tbaa !80
  %159 = load double, ptr %8, align 8, !tbaa !45
  %160 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 17
  store double %159, ptr %160, align 8, !tbaa !92
  %161 = icmp eq i32 %158, 0
  br i1 %161, label %162, label %354

162:                                              ; preds = %140
  %163 = call i32 @putchar(i32 10)
  %164 = call i32 @puts(ptr nonnull dereferenceable(1) @str.159)
  %165 = load double, ptr %8, align 8, !tbaa !45
  %166 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.105, double noundef %165)
  %167 = call i32 @puts(ptr nonnull dereferenceable(1) @str.159)
  %168 = call i32 @putchar(i32 10)
  %169 = load i32, ptr %134, align 4, !tbaa !80
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %354

171:                                              ; preds = %162
  %172 = call i32 @puts(ptr nonnull dereferenceable(1) @str.155)
  %173 = load i32, ptr %37, align 8, !tbaa !67
  %174 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef nonnull @.str.137, i32 noundef %173)
  %175 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 5, i64 1
  %176 = load i32, ptr %175, align 4, !tbaa !67
  %177 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef nonnull @.str.138, i32 noundef %176)
  %178 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 5, i64 2
  %179 = load i32, ptr %178, align 8, !tbaa !67
  %180 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef nonnull @.str.139, i32 noundef %179)
  %181 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 5, i64 3
  %182 = load i32, ptr %181, align 4, !tbaa !67
  %183 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef nonnull @.str.140, i32 noundef %182)
  %184 = call i32 @puts(ptr nonnull dereferenceable(1) @str.155)
  %185 = call i32 @puts(ptr nonnull dereferenceable(1) @str.157)
  %186 = load i32, ptr %39, align 8, !tbaa !67
  %187 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef nonnull @.str.137, i32 noundef %186)
  %188 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 6, i64 1
  %189 = load i32, ptr %188, align 4, !tbaa !67
  %190 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef nonnull @.str.138, i32 noundef %189)
  %191 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 6, i64 2
  %192 = load i32, ptr %191, align 8, !tbaa !67
  %193 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef nonnull @.str.139, i32 noundef %192)
  %194 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 6, i64 3
  %195 = load i32, ptr %194, align 4, !tbaa !67
  %196 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef nonnull @.str.140, i32 noundef %195)
  %197 = call i32 @puts(ptr nonnull dereferenceable(1) @str.157)
  %198 = call i32 @putchar(i32 10)
  %199 = load i32, ptr %134, align 4, !tbaa !80
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %354

201:                                              ; preds = %171
  %202 = call i32 @puts(ptr nonnull dereferenceable(1) @str.153)
  %203 = load double, ptr %41, align 8, !tbaa !45
  %204 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.113, double noundef %203)
  %205 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 1
  %206 = load double, ptr %205, align 8, !tbaa !45
  %207 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.114, double noundef %206)
  %208 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 2
  %209 = load double, ptr %208, align 8, !tbaa !45
  %210 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.115, double noundef %209)
  %211 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 3
  %212 = load double, ptr %211, align 8, !tbaa !45
  %213 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.116, double noundef %212)
  %214 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 4
  %215 = load double, ptr %214, align 8, !tbaa !45
  %216 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.117, double noundef %215)
  %217 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 5
  %218 = load double, ptr %217, align 8, !tbaa !45
  %219 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.118, double noundef %218)
  %220 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 6
  %221 = load double, ptr %220, align 8, !tbaa !45
  %222 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.119, double noundef %221)
  %223 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 7
  %224 = load double, ptr %223, align 8, !tbaa !45
  %225 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.120, double noundef %224)
  %226 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 8
  %227 = load double, ptr %226, align 8, !tbaa !45
  %228 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.121, double noundef %227)
  %229 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 9
  %230 = load double, ptr %229, align 8, !tbaa !45
  %231 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.122, double noundef %230)
  %232 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 10
  %233 = load double, ptr %232, align 8, !tbaa !45
  %234 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.123, double noundef %233)
  %235 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 11
  %236 = load double, ptr %235, align 8, !tbaa !45
  %237 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.124, double noundef %236)
  %238 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 12
  %239 = load double, ptr %238, align 8, !tbaa !45
  %240 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.125, double noundef %239)
  %241 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 13
  %242 = load double, ptr %241, align 8, !tbaa !45
  %243 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.126, double noundef %242)
  %244 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 14
  %245 = load double, ptr %244, align 8, !tbaa !45
  %246 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.127, double noundef %245)
  %247 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 15
  %248 = load double, ptr %247, align 8, !tbaa !45
  %249 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.128, double noundef %248)
  %250 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 16
  %251 = load double, ptr %250, align 8, !tbaa !45
  %252 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.129, double noundef %251)
  %253 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 17
  %254 = load double, ptr %253, align 8, !tbaa !45
  %255 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.130, double noundef %254)
  %256 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 18
  %257 = load double, ptr %256, align 8, !tbaa !45
  %258 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.131, double noundef %257)
  %259 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 19
  %260 = load double, ptr %259, align 8, !tbaa !45
  %261 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.132, double noundef %260)
  %262 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 20
  %263 = load double, ptr %262, align 8, !tbaa !45
  %264 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.133, double noundef %263)
  %265 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 21
  %266 = load double, ptr %265, align 8, !tbaa !45
  %267 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.134, double noundef %266)
  %268 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 22
  %269 = load double, ptr %268, align 8, !tbaa !45
  %270 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.135, double noundef %269)
  %271 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 23
  %272 = load double, ptr %271, align 8, !tbaa !45
  %273 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.136, double noundef %272)
  %274 = call i32 @puts(ptr nonnull dereferenceable(1) @str.153)
  %275 = call i32 @putchar(i32 10)
  %276 = load i32, ptr %134, align 4, !tbaa !80
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %354

278:                                              ; preds = %201
  %279 = call i32 @putchar(i32 10)
  %280 = call i32 @puts(ptr nonnull dereferenceable(1) @str.151)
  %281 = load i64, ptr %43, align 8, !tbaa !240
  %282 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.113, i64 noundef %281)
  %283 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 1
  %284 = load i64, ptr %283, align 8, !tbaa !240
  %285 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.114, i64 noundef %284)
  %286 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 2
  %287 = load i64, ptr %286, align 8, !tbaa !240
  %288 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.115, i64 noundef %287)
  %289 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 3
  %290 = load i64, ptr %289, align 8, !tbaa !240
  %291 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.116, i64 noundef %290)
  %292 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 4
  %293 = load i64, ptr %292, align 8, !tbaa !240
  %294 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.117, i64 noundef %293)
  %295 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 5
  %296 = load i64, ptr %295, align 8, !tbaa !240
  %297 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.118, i64 noundef %296)
  %298 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 6
  %299 = load i64, ptr %298, align 8, !tbaa !240
  %300 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.119, i64 noundef %299)
  %301 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 7
  %302 = load i64, ptr %301, align 8, !tbaa !240
  %303 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.120, i64 noundef %302)
  %304 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 8
  %305 = load i64, ptr %304, align 8, !tbaa !240
  %306 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.121, i64 noundef %305)
  %307 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 9
  %308 = load i64, ptr %307, align 8, !tbaa !240
  %309 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.122, i64 noundef %308)
  %310 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 10
  %311 = load i64, ptr %310, align 8, !tbaa !240
  %312 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.123, i64 noundef %311)
  %313 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 11
  %314 = load i64, ptr %313, align 8, !tbaa !240
  %315 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.124, i64 noundef %314)
  %316 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 12
  %317 = load i64, ptr %316, align 8, !tbaa !240
  %318 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.125, i64 noundef %317)
  %319 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 13
  %320 = load i64, ptr %319, align 8, !tbaa !240
  %321 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.126, i64 noundef %320)
  %322 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 14
  %323 = load i64, ptr %322, align 8, !tbaa !240
  %324 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.127, i64 noundef %323)
  %325 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 15
  %326 = load i64, ptr %325, align 8, !tbaa !240
  %327 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.128, i64 noundef %326)
  %328 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 16
  %329 = load i64, ptr %328, align 8, !tbaa !240
  %330 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.129, i64 noundef %329)
  %331 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 17
  %332 = load i64, ptr %331, align 8, !tbaa !240
  %333 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.130, i64 noundef %332)
  %334 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 18
  %335 = load i64, ptr %334, align 8, !tbaa !240
  %336 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.131, i64 noundef %335)
  %337 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 19
  %338 = load i64, ptr %337, align 8, !tbaa !240
  %339 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.132, i64 noundef %338)
  %340 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 20
  %341 = load i64, ptr %340, align 8, !tbaa !240
  %342 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.133, i64 noundef %341)
  %343 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 21
  %344 = load i64, ptr %343, align 8, !tbaa !240
  %345 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.134, i64 noundef %344)
  %346 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 22
  %347 = load i64, ptr %346, align 8, !tbaa !240
  %348 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.135, i64 noundef %347)
  %349 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 23
  %350 = load i64, ptr %349, align 8, !tbaa !240
  %351 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef nonnull @.str.136, i64 noundef %350)
  %352 = call i32 @puts(ptr nonnull dereferenceable(1) @str.151)
  %353 = call i32 @putchar(i32 10)
  br label %354

354:                                              ; preds = %137, %140, %162, %171, %278, %201
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #31
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #31
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #31
  ret void
}

declare void @_ZN4Crux18restore_named_intsEPKciPim(ptr noundef nonnull align 4 dereferenceable(12), ptr noundef, i32 noundef, ptr noundef, i64 noundef) local_unnamed_addr #7

declare void @_ZN4Crux18restore_MallocPlusE10MallocPlus(ptr noundef nonnull align 4 dereferenceable(12), ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable
define dso_local void @_Z4scanPiS_i(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #21 {
  store i32 0, ptr %1, align 4, !tbaa !67
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %26

5:                                                ; preds = %3
  %6 = zext i32 %2 to i64
  %7 = and i64 %6, 3
  %8 = icmp ult i32 %2, 4
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = and i64 %6, 4294967292
  br label %27

11:                                               ; preds = %27, %5
  %12 = phi i32 [ 0, %5 ], [ %48, %27 ]
  %13 = phi i64 [ 0, %5 ], [ %49, %27 ]
  %14 = icmp eq i64 %7, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %11, %15
  %16 = phi i32 [ %21, %15 ], [ %12, %11 ]
  %17 = phi i64 [ %22, %15 ], [ %13, %11 ]
  %18 = phi i64 [ %24, %15 ], [ 0, %11 ]
  %19 = getelementptr inbounds i32, ptr %0, i64 %17
  %20 = load i32, ptr %19, align 4, !tbaa !67
  %21 = add nsw i32 %20, %16
  %22 = add nuw nsw i64 %17, 1
  %23 = getelementptr inbounds i32, ptr %1, i64 %22
  store i32 %21, ptr %23, align 4, !tbaa !67
  %24 = add i64 %18, 1
  %25 = icmp eq i64 %24, %7
  br i1 %25, label %26, label %15, !llvm.loop !246

26:                                               ; preds = %11, %15, %3
  ret void

27:                                               ; preds = %27, %9
  %28 = phi i32 [ 0, %9 ], [ %48, %27 ]
  %29 = phi i64 [ 0, %9 ], [ %49, %27 ]
  %30 = phi i64 [ 0, %9 ], [ %51, %27 ]
  %31 = getelementptr inbounds i32, ptr %0, i64 %29
  %32 = load i32, ptr %31, align 4, !tbaa !67
  %33 = add nsw i32 %32, %28
  %34 = or i64 %29, 1
  %35 = getelementptr inbounds i32, ptr %1, i64 %34
  store i32 %33, ptr %35, align 4, !tbaa !67
  %36 = getelementptr inbounds i32, ptr %0, i64 %34
  %37 = load i32, ptr %36, align 4, !tbaa !67
  %38 = add nsw i32 %37, %33
  %39 = or i64 %29, 2
  %40 = getelementptr inbounds i32, ptr %1, i64 %39
  store i32 %38, ptr %40, align 4, !tbaa !67
  %41 = getelementptr inbounds i32, ptr %0, i64 %39
  %42 = load i32, ptr %41, align 4, !tbaa !67
  %43 = add nsw i32 %42, %38
  %44 = or i64 %29, 3
  %45 = getelementptr inbounds i32, ptr %1, i64 %44
  store i32 %43, ptr %45, align 4, !tbaa !67
  %46 = getelementptr inbounds i32, ptr %0, i64 %44
  %47 = load i32, ptr %46, align 4, !tbaa !67
  %48 = add nsw i32 %47, %43
  %49 = add nuw nsw i64 %29, 4
  %50 = getelementptr inbounds i32, ptr %1, i64 %49
  store i32 %48, ptr %50, align 4, !tbaa !67
  %51 = add i64 %30, 4
  %52 = icmp eq i64 %51, %10
  br i1 %52, label %11, label %27, !llvm.loop !247
}

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #22

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(ptr noundef %0) local_unnamed_addr #23 comdat {
  %2 = tail call ptr @__cxa_begin_catch(ptr %0) #31
  tail call void @_ZSt9terminatev() #32
  unreachable
}

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entrySt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !51
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %3)
          to label %7 unwind label %4

4:                                                ; preds = %1
  %5 = landingpad { ptr, i32 }
          catch ptr null
  %6 = extractvalue { ptr, i32 } %5, 0
  tail call void @__clang_call_terminate(ptr %6) #32
  unreachable

7:                                                ; preds = %1
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2, %4
  %5 = phi ptr [ %9, %4 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !157
  tail call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %7)
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !155
  tail call void @_ZdlPv(ptr noundef nonnull %5) #33
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %4, !llvm.loop !248

11:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #24

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2, %15
  %5 = phi ptr [ %9, %15 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !157
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %7)
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !155
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %5, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !249
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %5, i64 0, i32 1, i32 0, i64 16
  %13 = icmp eq ptr %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %4
  tail call void @_ZdlPv(ptr noundef %11) #33
  br label %15

15:                                               ; preds = %4, %14
  tail call void @_ZdlPv(ptr noundef nonnull %5) #33
  %16 = icmp eq ptr %9, null
  br i1 %16, label %17, label %4, !llvm.loop !252

17:                                               ; preds = %15, %2
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #11

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE7_M_copyILb0ENSG_11_Alloc_nodeEEEPSt13_Rb_tree_nodeISA_ESL_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(8) %3) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %1, i64 0, i32 1
  %6 = load ptr, ptr %3, align 8, !tbaa !253
  %7 = tail call noalias noundef nonnull dereferenceable(72) ptr @_Znwm(i64 noundef 72) #35
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeIJRKSA_EEEvPSt13_Rb_tree_nodeISA_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %6, ptr noundef nonnull %7, ptr noundef nonnull align 8 dereferenceable(40) %5)
  %8 = load i32, ptr %1, align 8, !tbaa !255
  store i32 %8, ptr %7, align 8, !tbaa !255
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %7, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, i8 0, i64 16, i1 false)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %7, i64 0, i32 1
  store ptr %2, ptr %10, align 8, !tbaa !256
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !157
  %13 = icmp eq ptr %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %4
  %15 = invoke noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE7_M_copyILb0ENSG_11_Alloc_nodeEEEPSt13_Rb_tree_nodeISA_ESL_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %12, ptr noundef nonnull %7, ptr noundef nonnull align 8 dereferenceable(8) %3)
          to label %16 unwind label %18

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %7, i64 0, i32 3
  store ptr %15, ptr %17, align 8, !tbaa !157
  br label %20

18:                                               ; preds = %14
  %19 = landingpad { ptr, i32 }
          catch ptr null
  br label %45

20:                                               ; preds = %16, %4
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !155
  %23 = icmp eq ptr %22, null
  br i1 %23, label %57, label %24

24:                                               ; preds = %20, %50
  %25 = phi ptr [ %52, %50 ], [ %22, %20 ]
  %26 = phi ptr [ %28, %50 ], [ %7, %20 ]
  %27 = load ptr, ptr %3, align 8, !tbaa !253
  %28 = invoke noalias noundef nonnull dereferenceable(72) ptr @_Znwm(i64 noundef 72) #35
          to label %29 unwind label %43

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %25, i64 0, i32 1
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeIJRKSA_EEEvPSt13_Rb_tree_nodeISA_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %27, ptr noundef nonnull %28, ptr noundef nonnull align 8 dereferenceable(40) %30)
          to label %31 unwind label %43

31:                                               ; preds = %29
  %32 = load i32, ptr %25, align 8, !tbaa !255
  store i32 %32, ptr %28, align 8, !tbaa !255
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %28, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %33, i8 0, i64 16, i1 false)
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %26, i64 0, i32 2
  store ptr %28, ptr %34, align 8, !tbaa !155
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %28, i64 0, i32 1
  store ptr %26, ptr %35, align 8, !tbaa !256
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %25, i64 0, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !157
  %38 = icmp eq ptr %37, null
  br i1 %38, label %50, label %39

39:                                               ; preds = %31
  %40 = invoke noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE7_M_copyILb0ENSG_11_Alloc_nodeEEEPSt13_Rb_tree_nodeISA_ESL_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %37, ptr noundef nonnull %28, ptr noundef nonnull align 8 dereferenceable(8) %3)
          to label %41 unwind label %43

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %28, i64 0, i32 3
  store ptr %40, ptr %42, align 8, !tbaa !157
  br label %50

43:                                               ; preds = %29, %24, %39
  %44 = landingpad { ptr, i32 }
          catch ptr null
  br label %45

45:                                               ; preds = %43, %18
  %46 = phi { ptr, i32 } [ %44, %43 ], [ %19, %18 ]
  %47 = extractvalue { ptr, i32 } %46, 0
  %48 = tail call ptr @__cxa_begin_catch(ptr %47) #31
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %7)
          to label %49 unwind label %54

49:                                               ; preds = %45
  invoke void @__cxa_rethrow() #36
          to label %61 unwind label %54

50:                                               ; preds = %41, %31
  %51 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %25, i64 0, i32 2
  %52 = load ptr, ptr %51, align 8, !tbaa !155
  %53 = icmp eq ptr %52, null
  br i1 %53, label %57, label %24, !llvm.loop !257

54:                                               ; preds = %49, %45
  %55 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %56 unwind label %58

56:                                               ; preds = %54
  resume { ptr, i32 } %55

57:                                               ; preds = %50, %20
  ret ptr %7

58:                                               ; preds = %54
  %59 = landingpad { ptr, i32 }
          catch ptr null
  %60 = extractvalue { ptr, i32 } %59, 0
  tail call void @__clang_call_terminate(ptr %60) #32
  unreachable

61:                                               ; preds = %49
  unreachable
}

declare void @__cxa_rethrow() local_unnamed_addr

declare void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeIJRKSA_EEEvPSt13_Rb_tree_nodeISA_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(40) %2) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %1, i64 0, i32 1, i32 0, i64 16
  store ptr %6, ptr %5, align 8, !tbaa !258
  %7 = load ptr, ptr %2, align 8, !tbaa !249
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %9 = load i64, ptr %8, align 8, !tbaa !259
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #31
  store i64 %9, ptr %4, align 8, !tbaa !56
  %10 = icmp ugt i64 %9, 15
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %13 unwind label %28

13:                                               ; preds = %11
  store ptr %12, ptr %5, align 8, !tbaa !249
  %14 = load i64, ptr %4, align 8, !tbaa !56
  store i64 %14, ptr %6, align 8, !tbaa !260
  br label %15

15:                                               ; preds = %13, %3
  %16 = phi ptr [ %12, %13 ], [ %6, %3 ]
  switch i64 %9, label %19 [
    i64 1, label %17
    i64 0, label %20
  ]

17:                                               ; preds = %15
  %18 = load i8, ptr %7, align 1, !tbaa !260
  store i8 %18, ptr %16, align 1, !tbaa !260
  br label %20

19:                                               ; preds = %15
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %16, ptr align 1 %7, i64 %9, i1 false)
  br label %20

20:                                               ; preds = %15, %17, %19
  %21 = load i64, ptr %4, align 8, !tbaa !56
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %1, i64 0, i32 1, i32 0, i64 8
  store i64 %21, ptr %22, align 8, !tbaa !259
  %23 = load ptr, ptr %5, align 8, !tbaa !249
  %24 = getelementptr inbounds i8, ptr %23, i64 %21
  store i8 0, ptr %24, align 1, !tbaa !260
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #31
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %1, i64 0, i32 1, i32 0, i64 32
  %26 = getelementptr inbounds %"struct.std::pair.30", ptr %2, i64 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !261
  store ptr %27, ptr %25, align 8, !tbaa !261
  ret void

28:                                               ; preds = %11
  %29 = landingpad { ptr, i32 }
          catch ptr null
  %30 = extractvalue { ptr, i32 } %29, 0
  %31 = call ptr @__cxa_begin_catch(ptr %30) #31
  call void @_ZdlPv(ptr noundef nonnull %1) #33
  invoke void @__cxa_rethrow() #36
          to label %38 unwind label %32

32:                                               ; preds = %28
  %33 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %34 unwind label %35

34:                                               ; preds = %32
  resume { ptr, i32 } %33

35:                                               ; preds = %32
  %36 = landingpad { ptr, i32 }
          catch ptr null
  %37 = extractvalue { ptr, i32 } %36, 0
  call void @__clang_call_terminate(ptr %37) #32
  unreachable

38:                                               ; preds = %28
  unreachable
}

; Function Attrs: noreturn
declare void @_ZSt28__throw_bad_array_new_lengthv() local_unnamed_addr #25

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() local_unnamed_addr #25

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #26

declare noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef nonnull align 8 dereferenceable(8), i64 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_M_copyILb0ENSB_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS5_ESG_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(8) %3) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1, i64 0, i32 1
  %6 = tail call noalias noundef nonnull dereferenceable(48) ptr @_Znwm(i64 noundef 48) #35
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %6, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false)
  %8 = load i32, ptr %1, align 8, !tbaa !255
  store i32 %8, ptr %6, align 8, !tbaa !255
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %6, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, i8 0, i64 16, i1 false)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %6, i64 0, i32 1
  store ptr %2, ptr %10, align 8, !tbaa !256
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !157
  %13 = icmp eq ptr %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %4
  %15 = invoke noundef ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_M_copyILb0ENSB_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS5_ESG_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %12, ptr noundef nonnull %6, ptr noundef nonnull align 8 dereferenceable(8) %3)
          to label %16 unwind label %18

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %6, i64 0, i32 3
  store ptr %15, ptr %17, align 8, !tbaa !157
  br label %20

18:                                               ; preds = %14
  %19 = landingpad { ptr, i32 }
          catch ptr null
  br label %44

20:                                               ; preds = %16, %4
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !155
  %23 = icmp eq ptr %22, null
  br i1 %23, label %56, label %24

24:                                               ; preds = %20, %49
  %25 = phi ptr [ %51, %49 ], [ %22, %20 ]
  %26 = phi ptr [ %27, %49 ], [ %6, %20 ]
  %27 = invoke noalias noundef nonnull dereferenceable(48) ptr @_Znwm(i64 noundef 48) #35
          to label %28 unwind label %42

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %25, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %27, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %30, ptr noundef nonnull align 8 dereferenceable(16) %29, i64 16, i1 false)
  %31 = load i32, ptr %25, align 8, !tbaa !255
  store i32 %31, ptr %27, align 8, !tbaa !255
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %27, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %32, i8 0, i64 16, i1 false)
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %26, i64 0, i32 2
  store ptr %27, ptr %33, align 8, !tbaa !155
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %27, i64 0, i32 1
  store ptr %26, ptr %34, align 8, !tbaa !256
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %25, i64 0, i32 3
  %36 = load ptr, ptr %35, align 8, !tbaa !157
  %37 = icmp eq ptr %36, null
  br i1 %37, label %49, label %38

38:                                               ; preds = %28
  %39 = invoke noundef ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_M_copyILb0ENSB_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS5_ESG_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %36, ptr noundef nonnull %27, ptr noundef nonnull align 8 dereferenceable(8) %3)
          to label %40 unwind label %42

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %27, i64 0, i32 3
  store ptr %39, ptr %41, align 8, !tbaa !157
  br label %49

42:                                               ; preds = %24, %38
  %43 = landingpad { ptr, i32 }
          catch ptr null
  br label %44

44:                                               ; preds = %42, %18
  %45 = phi { ptr, i32 } [ %43, %42 ], [ %19, %18 ]
  %46 = extractvalue { ptr, i32 } %45, 0
  %47 = tail call ptr @__cxa_begin_catch(ptr %46) #31
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %6)
          to label %48 unwind label %53

48:                                               ; preds = %44
  invoke void @__cxa_rethrow() #36
          to label %60 unwind label %53

49:                                               ; preds = %40, %28
  %50 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %25, i64 0, i32 2
  %51 = load ptr, ptr %50, align 8, !tbaa !155
  %52 = icmp eq ptr %51, null
  br i1 %52, label %56, label %24, !llvm.loop !263

53:                                               ; preds = %48, %44
  %54 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %55 unwind label %57

55:                                               ; preds = %53
  resume { ptr, i32 } %54

56:                                               ; preds = %49, %20
  ret ptr %6

57:                                               ; preds = %53
  %58 = landingpad { ptr, i32 }
          catch ptr null
  %59 = extractvalue { ptr, i32 } %58, 0
  tail call void @__clang_call_terminate(ptr %59) #32
  unreachable

60:                                               ; preds = %48
  unreachable
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare double @log(double noundef) local_unnamed_addr #27

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %61, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !58
  %7 = load ptr, ptr %0, align 8, !tbaa !59
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = lshr exact i64 %10, 2
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !110
  %14 = ptrtoint ptr %13 to i64
  %15 = sub i64 %14, %8
  %16 = ashr exact i64 %15, 2
  %17 = icmp ult i64 %10, 9223372036854775805
  tail call void @llvm.assume(i1 %17)
  %18 = xor i64 %11, 2305843009213693951
  %19 = icmp ule i64 %16, %18
  tail call void @llvm.assume(i1 %19)
  %20 = icmp ult i64 %16, %1
  br i1 %20, label %30, label %21

21:                                               ; preds = %4
  store i32 0, ptr %6, align 4, !tbaa !67
  %22 = getelementptr i32, ptr %6, i64 1
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = shl i64 %1, 2
  %26 = add i64 %25, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %22, i8 0, i64 %26, i1 false), !tbaa !67
  %27 = getelementptr inbounds i32, ptr %6, i64 %1
  br label %28

28:                                               ; preds = %21, %24
  %29 = phi ptr [ %22, %21 ], [ %27, %24 ]
  store ptr %29, ptr %5, align 8, !tbaa !58
  br label %61

30:                                               ; preds = %4
  %31 = icmp ult i64 %18, %1
  br i1 %31, label %32, label %33

32:                                               ; preds = %30
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.141) #36
  unreachable

33:                                               ; preds = %30
  %34 = tail call i64 @llvm.umax.i64(i64 %11, i64 %1)
  %35 = add i64 %34, %11
  %36 = icmp ult i64 %35, %11
  %37 = icmp ugt i64 %35, 2305843009213693951
  %38 = or i1 %36, %37
  %39 = select i1 %38, i64 2305843009213693951, i64 %35
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %33
  %42 = shl nuw nsw i64 %39, 2
  %43 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %42) #35
  br label %44

44:                                               ; preds = %33, %41
  %45 = phi ptr [ %43, %41 ], [ null, %33 ]
  %46 = getelementptr inbounds i32, ptr %45, i64 %11
  store i32 0, ptr %46, align 4, !tbaa !67
  %47 = icmp eq i64 %1, 1
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = getelementptr i32, ptr %46, i64 1
  %50 = shl i64 %1, 2
  %51 = add i64 %50, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !67
  br label %52

52:                                               ; preds = %48, %44
  %53 = icmp eq ptr %6, %7
  br i1 %53, label %55, label %54

54:                                               ; preds = %52
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %45, ptr align 4 %7, i64 %10, i1 false)
  br label %55

55:                                               ; preds = %52, %54
  %56 = icmp eq ptr %7, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %55
  tail call void @_ZdlPv(ptr noundef nonnull %7) #33
  br label %58

58:                                               ; preds = %55, %57
  store ptr %45, ptr %0, align 8, !tbaa !59
  %59 = getelementptr inbounds i32, ptr %46, i64 %1
  store ptr %59, ptr %5, align 8, !tbaa !58
  %60 = getelementptr inbounds i32, ptr %45, i64 %39
  store ptr %60, ptr %12, align 8, !tbaa !110
  br label %61

61:                                               ; preds = %28, %58, %2
  ret void
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(ptr noundef) local_unnamed_addr #25

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #14

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %61, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !64
  %7 = load ptr, ptr %0, align 8, !tbaa !44
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = lshr exact i64 %10, 3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !264
  %14 = ptrtoint ptr %13 to i64
  %15 = sub i64 %14, %8
  %16 = ashr exact i64 %15, 3
  %17 = icmp ult i64 %10, 9223372036854775801
  tail call void @llvm.assume(i1 %17)
  %18 = xor i64 %11, 1152921504606846975
  %19 = icmp ule i64 %16, %18
  tail call void @llvm.assume(i1 %19)
  %20 = icmp ult i64 %16, %1
  br i1 %20, label %30, label %21

21:                                               ; preds = %4
  store double 0.000000e+00, ptr %6, align 8, !tbaa !45
  %22 = getelementptr double, ptr %6, i64 1
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = shl i64 %1, 3
  %26 = add i64 %25, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %22, i8 0, i64 %26, i1 false), !tbaa !45
  %27 = getelementptr inbounds double, ptr %6, i64 %1
  br label %28

28:                                               ; preds = %21, %24
  %29 = phi ptr [ %22, %21 ], [ %27, %24 ]
  store ptr %29, ptr %5, align 8, !tbaa !64
  br label %61

30:                                               ; preds = %4
  %31 = icmp ult i64 %18, %1
  br i1 %31, label %32, label %33

32:                                               ; preds = %30
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.141) #36
  unreachable

33:                                               ; preds = %30
  %34 = tail call i64 @llvm.umax.i64(i64 %11, i64 %1)
  %35 = add i64 %34, %11
  %36 = icmp ult i64 %35, %11
  %37 = icmp ugt i64 %35, 1152921504606846975
  %38 = or i1 %36, %37
  %39 = select i1 %38, i64 1152921504606846975, i64 %35
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %33
  %42 = shl nuw nsw i64 %39, 3
  %43 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %42) #35
  br label %44

44:                                               ; preds = %33, %41
  %45 = phi ptr [ %43, %41 ], [ null, %33 ]
  %46 = getelementptr inbounds double, ptr %45, i64 %11
  store double 0.000000e+00, ptr %46, align 8, !tbaa !45
  %47 = icmp eq i64 %1, 1
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = getelementptr double, ptr %46, i64 1
  %50 = shl i64 %1, 3
  %51 = add i64 %50, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !45
  br label %52

52:                                               ; preds = %48, %44
  %53 = icmp eq ptr %6, %7
  br i1 %53, label %55, label %54

54:                                               ; preds = %52
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %45, ptr align 8 %7, i64 %10, i1 false)
  br label %55

55:                                               ; preds = %52, %54
  %56 = icmp eq ptr %7, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %55
  tail call void @_ZdlPv(ptr noundef nonnull %7) #33
  br label %58

58:                                               ; preds = %55, %57
  store ptr %45, ptr %0, align 8, !tbaa !44
  %59 = getelementptr inbounds double, ptr %46, i64 %1
  store ptr %59, ptr %5, align 8, !tbaa !64
  %60 = getelementptr inbounds double, ptr %45, i64 %39
  store ptr %60, ptr %12, align 8, !tbaa !264
  br label %61

61:                                               ; preds = %28, %58, %2
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, i64 noundef %2, ptr noundef nonnull align 4 dereferenceable(4) %3) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %202, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !110
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !58
  %11 = ptrtoint ptr %8 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ult i64 %14, %2
  br i1 %15, label %134, label %16

16:                                               ; preds = %6
  %17 = load i32, ptr %3, align 4, !tbaa !67
  %18 = ptrtoint ptr %1 to i64
  %19 = sub i64 %12, %18
  %20 = ashr exact i64 %19, 2
  %21 = icmp ugt i64 %20, %2
  br i1 %21, label %22, label %64

22:                                               ; preds = %16
  %23 = sub i64 0, %2
  %24 = getelementptr inbounds i32, ptr %10, i64 %23
  %25 = shl i64 %2, 2
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %10, ptr nonnull align 4 %24, i64 %25, i1 false)
  %26 = load ptr, ptr %9, align 8, !tbaa !58
  %27 = getelementptr inbounds i32, ptr %26, i64 %2
  store ptr %27, ptr %9, align 8, !tbaa !58
  %28 = icmp eq ptr %24, %1
  br i1 %28, label %35, label %29

29:                                               ; preds = %22
  %30 = ptrtoint ptr %24 to i64
  %31 = sub i64 %30, %18
  %32 = ashr exact i64 %31, 2
  %33 = sub nsw i64 0, %32
  %34 = getelementptr inbounds i32, ptr %10, i64 %33
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %34, ptr align 4 %1, i64 %31, i1 false)
  br label %35

35:                                               ; preds = %29, %22
  %36 = getelementptr inbounds i32, ptr %1, i64 %2
  %37 = add i64 %2, 4611686018427387903
  %38 = and i64 %37, 4611686018427387903
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %38, 7
  br i1 %40, label %58, label %41

41:                                               ; preds = %35
  %42 = and i64 %39, -8
  %43 = shl i64 %42, 2
  %44 = getelementptr i8, ptr %1, i64 %43
  %45 = insertelement <4 x i32> poison, i32 %17, i64 0
  %46 = shufflevector <4 x i32> %45, <4 x i32> poison, <4 x i32> zeroinitializer
  %47 = insertelement <4 x i32> poison, i32 %17, i64 0
  %48 = shufflevector <4 x i32> %47, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %49

49:                                               ; preds = %49, %41
  %50 = phi i64 [ 0, %41 ], [ %54, %49 ]
  %51 = shl i64 %50, 2
  %52 = getelementptr i8, ptr %1, i64 %51
  store <4 x i32> %46, ptr %52, align 4, !tbaa !67
  %53 = getelementptr i32, ptr %52, i64 4
  store <4 x i32> %48, ptr %53, align 4, !tbaa !67
  %54 = add nuw i64 %50, 8
  %55 = icmp eq i64 %54, %42
  br i1 %55, label %56, label %49, !llvm.loop !265

56:                                               ; preds = %49
  %57 = icmp eq i64 %39, %42
  br i1 %57, label %202, label %58

58:                                               ; preds = %35, %56
  %59 = phi ptr [ %1, %35 ], [ %44, %56 ]
  br label %60

60:                                               ; preds = %58, %60
  %61 = phi ptr [ %62, %60 ], [ %59, %58 ]
  store i32 %17, ptr %61, align 4, !tbaa !67
  %62 = getelementptr inbounds i32, ptr %61, i64 1
  %63 = icmp eq ptr %62, %36
  br i1 %63, label %202, label %60, !llvm.loop !266

64:                                               ; preds = %16
  %65 = icmp eq i64 %20, %2
  br i1 %65, label %98, label %66

66:                                               ; preds = %64
  %67 = sub i64 %2, %20
  %68 = getelementptr inbounds i32, ptr %10, i64 %67
  %69 = shl nsw i64 %2, 2
  %70 = add i64 %69, -4
  %71 = sub i64 %70, %19
  %72 = lshr i64 %71, 2
  %73 = add nuw nsw i64 %72, 1
  %74 = icmp ult i64 %71, 28
  br i1 %74, label %92, label %75

75:                                               ; preds = %66
  %76 = and i64 %73, -8
  %77 = shl i64 %76, 2
  %78 = getelementptr i8, ptr %10, i64 %77
  %79 = insertelement <4 x i32> poison, i32 %17, i64 0
  %80 = shufflevector <4 x i32> %79, <4 x i32> poison, <4 x i32> zeroinitializer
  %81 = insertelement <4 x i32> poison, i32 %17, i64 0
  %82 = shufflevector <4 x i32> %81, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %83

83:                                               ; preds = %83, %75
  %84 = phi i64 [ 0, %75 ], [ %88, %83 ]
  %85 = shl i64 %84, 2
  %86 = getelementptr i8, ptr %10, i64 %85
  store <4 x i32> %80, ptr %86, align 4, !tbaa !67
  %87 = getelementptr i32, ptr %86, i64 4
  store <4 x i32> %82, ptr %87, align 4, !tbaa !67
  %88 = add nuw i64 %84, 8
  %89 = icmp eq i64 %88, %76
  br i1 %89, label %90, label %83, !llvm.loop !267

90:                                               ; preds = %83
  %91 = icmp eq i64 %73, %76
  br i1 %91, label %98, label %92

92:                                               ; preds = %66, %90
  %93 = phi ptr [ %10, %66 ], [ %78, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi ptr [ %96, %94 ], [ %93, %92 ]
  store i32 %17, ptr %95, align 4, !tbaa !67
  %96 = getelementptr inbounds i32, ptr %95, i64 1
  %97 = icmp eq ptr %96, %68
  br i1 %97, label %98, label %94, !llvm.loop !268

98:                                               ; preds = %94, %90, %64
  %99 = phi ptr [ %10, %64 ], [ %68, %90 ], [ %68, %94 ]
  store ptr %99, ptr %9, align 8, !tbaa !58
  %100 = icmp eq ptr %10, %1
  br i1 %100, label %101, label %103

101:                                              ; preds = %98
  %102 = getelementptr inbounds i32, ptr %99, i64 %20
  store ptr %102, ptr %9, align 8, !tbaa !58
  br label %202

103:                                              ; preds = %98
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %99, ptr align 4 %1, i64 %19, i1 false)
  %104 = load ptr, ptr %9, align 8, !tbaa !58
  %105 = getelementptr inbounds i32, ptr %104, i64 %20
  store ptr %105, ptr %9, align 8, !tbaa !58
  %106 = add i64 %12, -4
  %107 = sub i64 %106, %18
  %108 = lshr i64 %107, 2
  %109 = add nuw nsw i64 %108, 1
  %110 = icmp ult i64 %107, 28
  br i1 %110, label %128, label %111

111:                                              ; preds = %103
  %112 = and i64 %109, -8
  %113 = shl i64 %112, 2
  %114 = getelementptr i8, ptr %1, i64 %113
  %115 = insertelement <4 x i32> poison, i32 %17, i64 0
  %116 = shufflevector <4 x i32> %115, <4 x i32> poison, <4 x i32> zeroinitializer
  %117 = insertelement <4 x i32> poison, i32 %17, i64 0
  %118 = shufflevector <4 x i32> %117, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %119

119:                                              ; preds = %119, %111
  %120 = phi i64 [ 0, %111 ], [ %124, %119 ]
  %121 = shl i64 %120, 2
  %122 = getelementptr i8, ptr %1, i64 %121
  store <4 x i32> %116, ptr %122, align 4, !tbaa !67
  %123 = getelementptr i32, ptr %122, i64 4
  store <4 x i32> %118, ptr %123, align 4, !tbaa !67
  %124 = add nuw i64 %120, 8
  %125 = icmp eq i64 %124, %112
  br i1 %125, label %126, label %119, !llvm.loop !269

126:                                              ; preds = %119
  %127 = icmp eq i64 %109, %112
  br i1 %127, label %202, label %128

128:                                              ; preds = %103, %126
  %129 = phi ptr [ %1, %103 ], [ %114, %126 ]
  br label %130

130:                                              ; preds = %128, %130
  %131 = phi ptr [ %132, %130 ], [ %129, %128 ]
  store i32 %17, ptr %131, align 4, !tbaa !67
  %132 = getelementptr inbounds i32, ptr %131, i64 1
  %133 = icmp eq ptr %132, %10
  br i1 %133, label %202, label %130, !llvm.loop !270

134:                                              ; preds = %6
  %135 = load ptr, ptr %0, align 8, !tbaa !59
  %136 = ptrtoint ptr %135 to i64
  %137 = sub i64 %12, %136
  %138 = ashr exact i64 %137, 2
  %139 = sub nsw i64 2305843009213693951, %138
  %140 = icmp ult i64 %139, %2
  br i1 %140, label %141, label %142

141:                                              ; preds = %134
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.144) #36
  unreachable

142:                                              ; preds = %134
  %143 = tail call i64 @llvm.umax.i64(i64 %138, i64 %2)
  %144 = add i64 %143, %138
  %145 = icmp ult i64 %144, %138
  %146 = icmp ugt i64 %144, 2305843009213693951
  %147 = or i1 %145, %146
  %148 = select i1 %147, i64 2305843009213693951, i64 %144
  %149 = ptrtoint ptr %1 to i64
  %150 = sub i64 %149, %136
  %151 = ashr exact i64 %150, 2
  %152 = icmp eq i64 %148, 0
  br i1 %152, label %156, label %153

153:                                              ; preds = %142
  %154 = shl nuw nsw i64 %148, 2
  %155 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %154) #35
  br label %156

156:                                              ; preds = %153, %142
  %157 = phi ptr [ %155, %153 ], [ null, %142 ]
  %158 = getelementptr inbounds i32, ptr %157, i64 %151
  %159 = getelementptr inbounds i32, ptr %158, i64 %2
  %160 = load i32, ptr %3, align 4, !tbaa !67
  %161 = add i64 %2, 4611686018427387903
  %162 = and i64 %161, 4611686018427387903
  %163 = add nuw nsw i64 %162, 1
  %164 = icmp ult i64 %162, 7
  br i1 %164, label %182, label %165

165:                                              ; preds = %156
  %166 = and i64 %163, -8
  %167 = shl i64 %166, 2
  %168 = getelementptr i8, ptr %158, i64 %167
  %169 = insertelement <4 x i32> poison, i32 %160, i64 0
  %170 = shufflevector <4 x i32> %169, <4 x i32> poison, <4 x i32> zeroinitializer
  %171 = insertelement <4 x i32> poison, i32 %160, i64 0
  %172 = shufflevector <4 x i32> %171, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %173

173:                                              ; preds = %173, %165
  %174 = phi i64 [ 0, %165 ], [ %178, %173 ]
  %175 = shl i64 %174, 2
  %176 = getelementptr i8, ptr %158, i64 %175
  store <4 x i32> %170, ptr %176, align 4, !tbaa !67
  %177 = getelementptr i32, ptr %176, i64 4
  store <4 x i32> %172, ptr %177, align 4, !tbaa !67
  %178 = add nuw i64 %174, 8
  %179 = icmp eq i64 %178, %166
  br i1 %179, label %180, label %173, !llvm.loop !271

180:                                              ; preds = %173
  %181 = icmp eq i64 %163, %166
  br i1 %181, label %188, label %182

182:                                              ; preds = %156, %180
  %183 = phi ptr [ %158, %156 ], [ %168, %180 ]
  br label %184

184:                                              ; preds = %182, %184
  %185 = phi ptr [ %186, %184 ], [ %183, %182 ]
  store i32 %160, ptr %185, align 4, !tbaa !67
  %186 = getelementptr inbounds i32, ptr %185, i64 1
  %187 = icmp eq ptr %186, %159
  br i1 %187, label %188, label %184, !llvm.loop !272

188:                                              ; preds = %184, %180
  %189 = icmp eq ptr %135, %1
  br i1 %189, label %191, label %190

190:                                              ; preds = %188
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %157, ptr align 4 %135, i64 %150, i1 false)
  br label %191

191:                                              ; preds = %190, %188
  %192 = sub i64 %12, %149
  %193 = icmp eq ptr %10, %1
  br i1 %193, label %195, label %194

194:                                              ; preds = %191
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %159, ptr align 4 %1, i64 %192, i1 false)
  br label %195

195:                                              ; preds = %191, %194
  %196 = ashr exact i64 %192, 2
  %197 = getelementptr inbounds i32, ptr %159, i64 %196
  %198 = icmp eq ptr %135, null
  br i1 %198, label %200, label %199

199:                                              ; preds = %195
  tail call void @_ZdlPv(ptr noundef nonnull %135) #33
  br label %200

200:                                              ; preds = %195, %199
  store ptr %157, ptr %0, align 8, !tbaa !59
  store ptr %197, ptr %9, align 8, !tbaa !58
  %201 = getelementptr inbounds i32, ptr %157, i64 %148
  store ptr %201, ptr %7, align 8, !tbaa !110
  br label %202

202:                                              ; preds = %130, %60, %126, %56, %101, %200, %4
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr %0, ptr %1, i64 noundef %2) local_unnamed_addr #3 comdat {
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %5 = ptrtoint ptr %0 to i64
  %6 = ptrtoint ptr %1 to i64
  %7 = sub i64 %6, %5
  %8 = icmp sgt i64 %7, 128
  br i1 %8, label %9, label %123

9:                                                ; preds = %3
  %10 = getelementptr inbounds double, ptr %0, i64 1
  br label %11

11:                                               ; preds = %9, %119
  %12 = phi i64 [ %7, %9 ], [ %121, %119 ]
  %13 = phi i64 [ %2, %9 ], [ %75, %119 ]
  %14 = phi ptr [ %1, %9 ], [ %107, %119 ]
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %16, label %74

16:                                               ; preds = %11
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4)
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_(ptr %0, ptr %14, ptr noundef nonnull align 1 dereferenceable(1) %4)
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  br label %17

17:                                               ; preds = %16, %70
  %18 = phi ptr [ %19, %70 ], [ %14, %16 ]
  %19 = getelementptr inbounds double, ptr %18, i64 -1
  %20 = load double, ptr %19, align 8, !tbaa !45
  %21 = load double, ptr %0, align 8, !tbaa !45
  store double %21, ptr %19, align 8, !tbaa !45
  %22 = ptrtoint ptr %19 to i64
  %23 = sub i64 %22, %5
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, -1
  %26 = sdiv i64 %25, 2
  %27 = icmp sgt i64 %23, 16
  br i1 %27, label %28, label %43

28:                                               ; preds = %17, %28
  %29 = phi i64 [ %38, %28 ], [ 0, %17 ]
  %30 = shl i64 %29, 1
  %31 = add i64 %30, 2
  %32 = getelementptr inbounds double, ptr %0, i64 %31
  %33 = or i64 %30, 1
  %34 = getelementptr inbounds double, ptr %0, i64 %33
  %35 = load double, ptr %32, align 8, !tbaa !45
  %36 = load double, ptr %34, align 8, !tbaa !45
  %37 = fcmp olt double %35, %36
  %38 = select i1 %37, i64 %33, i64 %31
  %39 = getelementptr inbounds double, ptr %0, i64 %38
  %40 = load double, ptr %39, align 8, !tbaa !45
  %41 = getelementptr inbounds double, ptr %0, i64 %29
  store double %40, ptr %41, align 8, !tbaa !45
  %42 = icmp slt i64 %38, %26
  br i1 %42, label %28, label %43, !llvm.loop !273

43:                                               ; preds = %28, %17
  %44 = phi i64 [ 0, %17 ], [ %38, %28 ]
  %45 = and i64 %23, 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %43
  %48 = add nsw i64 %24, -2
  %49 = sdiv i64 %48, 2
  %50 = icmp eq i64 %44, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = shl i64 %44, 1
  %53 = or i64 %52, 1
  %54 = getelementptr inbounds double, ptr %0, i64 %53
  %55 = load double, ptr %54, align 8, !tbaa !45
  %56 = getelementptr inbounds double, ptr %0, i64 %44
  store double %55, ptr %56, align 8, !tbaa !45
  br label %57

57:                                               ; preds = %51, %47, %43
  %58 = phi i64 [ %53, %51 ], [ %44, %47 ], [ %44, %43 ]
  %59 = icmp sgt i64 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %57, %67
  %61 = phi i64 [ %63, %67 ], [ %58, %57 ]
  %62 = add nsw i64 %61, -1
  %63 = sdiv i64 %62, 2
  %64 = getelementptr inbounds double, ptr %0, i64 %63
  %65 = load double, ptr %64, align 8, !tbaa !45
  %66 = fcmp olt double %65, %20
  br i1 %66, label %67, label %70

67:                                               ; preds = %60
  %68 = getelementptr inbounds double, ptr %0, i64 %61
  store double %65, ptr %68, align 8, !tbaa !45
  %69 = icmp sgt i64 %61, 2
  br i1 %69, label %60, label %70, !llvm.loop !274

70:                                               ; preds = %67, %60, %57
  %71 = phi i64 [ %58, %57 ], [ %61, %60 ], [ %63, %67 ]
  %72 = getelementptr inbounds double, ptr %0, i64 %71
  store double %20, ptr %72, align 8, !tbaa !45
  %73 = icmp sgt i64 %23, 8
  br i1 %73, label %17, label %123, !llvm.loop !275

74:                                               ; preds = %11
  %75 = add nsw i64 %13, -1
  %76 = lshr i64 %12, 4
  %77 = getelementptr inbounds double, ptr %0, i64 %76
  %78 = getelementptr inbounds double, ptr %14, i64 -1
  %79 = load double, ptr %10, align 8, !tbaa !45
  %80 = load double, ptr %77, align 8, !tbaa !45
  %81 = fcmp olt double %79, %80
  %82 = load double, ptr %78, align 8, !tbaa !45
  br i1 %81, label %83, label %92

83:                                               ; preds = %74
  %84 = fcmp olt double %80, %82
  br i1 %84, label %85, label %87

85:                                               ; preds = %83
  %86 = load double, ptr %0, align 8, !tbaa !45
  store double %80, ptr %0, align 8, !tbaa !45
  store double %86, ptr %77, align 8, !tbaa !45
  br label %101

87:                                               ; preds = %83
  %88 = fcmp olt double %79, %82
  %89 = load double, ptr %0, align 8, !tbaa !45
  br i1 %88, label %90, label %91

90:                                               ; preds = %87
  store double %82, ptr %0, align 8, !tbaa !45
  store double %89, ptr %78, align 8, !tbaa !45
  br label %101

91:                                               ; preds = %87
  store double %79, ptr %0, align 8, !tbaa !45
  store double %89, ptr %10, align 8, !tbaa !45
  br label %101

92:                                               ; preds = %74
  %93 = fcmp olt double %79, %82
  br i1 %93, label %94, label %96

94:                                               ; preds = %92
  %95 = load double, ptr %0, align 8, !tbaa !45
  store double %79, ptr %0, align 8, !tbaa !45
  store double %95, ptr %10, align 8, !tbaa !45
  br label %101

96:                                               ; preds = %92
  %97 = fcmp olt double %80, %82
  %98 = load double, ptr %0, align 8, !tbaa !45
  br i1 %97, label %99, label %100

99:                                               ; preds = %96
  store double %82, ptr %0, align 8, !tbaa !45
  store double %98, ptr %78, align 8, !tbaa !45
  br label %101

100:                                              ; preds = %96
  store double %80, ptr %0, align 8, !tbaa !45
  store double %98, ptr %77, align 8, !tbaa !45
  br label %101

101:                                              ; preds = %100, %99, %94, %91, %90, %85
  br label %102

102:                                              ; preds = %101, %118
  %103 = phi ptr [ %110, %118 ], [ %10, %101 ]
  %104 = phi ptr [ %113, %118 ], [ %14, %101 ]
  %105 = load double, ptr %0, align 8, !tbaa !45
  br label %106

106:                                              ; preds = %106, %102
  %107 = phi ptr [ %103, %102 ], [ %110, %106 ]
  %108 = load double, ptr %107, align 8, !tbaa !45
  %109 = fcmp olt double %108, %105
  %110 = getelementptr inbounds double, ptr %107, i64 1
  br i1 %109, label %106, label %111, !llvm.loop !276

111:                                              ; preds = %106, %111
  %112 = phi ptr [ %113, %111 ], [ %104, %106 ]
  %113 = getelementptr inbounds double, ptr %112, i64 -1
  %114 = load double, ptr %113, align 8, !tbaa !45
  %115 = fcmp olt double %105, %114
  br i1 %115, label %111, label %116, !llvm.loop !277

116:                                              ; preds = %111
  %117 = icmp ult ptr %107, %113
  br i1 %117, label %118, label %119

118:                                              ; preds = %116
  store double %114, ptr %107, align 8, !tbaa !45
  store double %108, ptr %113, align 8, !tbaa !45
  br label %102, !llvm.loop !278

119:                                              ; preds = %116
  tail call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr nonnull %107, ptr %14, i64 noundef %75)
  %120 = ptrtoint ptr %107 to i64
  %121 = sub i64 %120, %5
  %122 = icmp sgt i64 %121, 128
  br i1 %122, label %11, label %123, !llvm.loop !279

123:                                              ; preds = %119, %70, %3
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %0, ptr %1) local_unnamed_addr #3 comdat {
  %3 = ptrtoint ptr %1 to i64
  %4 = ptrtoint ptr %0 to i64
  %5 = sub i64 %3, %4
  %6 = icmp sgt i64 %5, 128
  br i1 %6, label %7, label %273

7:                                                ; preds = %2
  %8 = getelementptr i8, ptr %0, i64 8
  %9 = load double, ptr %8, align 8, !tbaa !45
  %10 = load double, ptr %0, align 8, !tbaa !45
  %11 = fcmp olt double %9, %10
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = load i64, ptr %0, align 8
  store i64 %13, ptr %8, align 8
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi ptr [ %0, %12 ], [ %8, %7 ]
  store double %9, ptr %15, align 8, !tbaa !45
  %16 = getelementptr inbounds double, ptr %0, i64 2
  %17 = load double, ptr %16, align 8, !tbaa !45
  %18 = load double, ptr %0, align 8, !tbaa !45
  %19 = fcmp olt double %17, %18
  br i1 %19, label %30, label %20

20:                                               ; preds = %14
  %21 = load double, ptr %8, align 8, !tbaa !45
  %22 = fcmp olt double %17, %21
  br i1 %22, label %23, label %31

23:                                               ; preds = %20, %23
  %24 = phi double [ %28, %23 ], [ %21, %20 ]
  %25 = phi ptr [ %27, %23 ], [ %8, %20 ]
  %26 = phi ptr [ %25, %23 ], [ %16, %20 ]
  store double %24, ptr %26, align 8, !tbaa !45
  %27 = getelementptr inbounds double, ptr %25, i64 -1
  %28 = load double, ptr %27, align 8, !tbaa !45
  %29 = fcmp olt double %17, %28
  br i1 %29, label %23, label %31, !llvm.loop !280

30:                                               ; preds = %14
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %8, ptr noundef nonnull align 8 dereferenceable(16) %0, i64 16, i1 false)
  br label %31

31:                                               ; preds = %23, %30, %20
  %32 = phi ptr [ %0, %30 ], [ %16, %20 ], [ %25, %23 ]
  store double %17, ptr %32, align 8, !tbaa !45
  %33 = getelementptr inbounds double, ptr %0, i64 3
  %34 = load double, ptr %33, align 8, !tbaa !45
  %35 = load double, ptr %0, align 8, !tbaa !45
  %36 = fcmp olt double %34, %35
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  %38 = load double, ptr %16, align 8, !tbaa !45
  %39 = fcmp olt double %34, %38
  br i1 %39, label %40, label %48

40:                                               ; preds = %37, %40
  %41 = phi double [ %45, %40 ], [ %38, %37 ]
  %42 = phi ptr [ %44, %40 ], [ %16, %37 ]
  %43 = phi ptr [ %42, %40 ], [ %33, %37 ]
  store double %41, ptr %43, align 8, !tbaa !45
  %44 = getelementptr inbounds double, ptr %42, i64 -1
  %45 = load double, ptr %44, align 8, !tbaa !45
  %46 = fcmp olt double %34, %45
  br i1 %46, label %40, label %48, !llvm.loop !280

47:                                               ; preds = %31
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %0, i64 24, i1 false)
  br label %48

48:                                               ; preds = %40, %47, %37
  %49 = phi ptr [ %0, %47 ], [ %33, %37 ], [ %42, %40 ]
  store double %34, ptr %49, align 8, !tbaa !45
  %50 = getelementptr inbounds double, ptr %0, i64 4
  %51 = load double, ptr %50, align 8, !tbaa !45
  %52 = load double, ptr %0, align 8, !tbaa !45
  %53 = fcmp olt double %51, %52
  br i1 %53, label %64, label %54

54:                                               ; preds = %48
  %55 = load double, ptr %33, align 8, !tbaa !45
  %56 = fcmp olt double %51, %55
  br i1 %56, label %57, label %65

57:                                               ; preds = %54, %57
  %58 = phi double [ %62, %57 ], [ %55, %54 ]
  %59 = phi ptr [ %61, %57 ], [ %33, %54 ]
  %60 = phi ptr [ %59, %57 ], [ %50, %54 ]
  store double %58, ptr %60, align 8, !tbaa !45
  %61 = getelementptr inbounds double, ptr %59, i64 -1
  %62 = load double, ptr %61, align 8, !tbaa !45
  %63 = fcmp olt double %51, %62
  br i1 %63, label %57, label %65, !llvm.loop !280

64:                                               ; preds = %48
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %8, ptr noundef nonnull align 8 dereferenceable(32) %0, i64 32, i1 false)
  br label %65

65:                                               ; preds = %57, %64, %54
  %66 = phi ptr [ %0, %64 ], [ %50, %54 ], [ %59, %57 ]
  store double %51, ptr %66, align 8, !tbaa !45
  %67 = getelementptr inbounds double, ptr %0, i64 5
  %68 = load double, ptr %67, align 8, !tbaa !45
  %69 = load double, ptr %0, align 8, !tbaa !45
  %70 = fcmp olt double %68, %69
  br i1 %70, label %81, label %71

71:                                               ; preds = %65
  %72 = load double, ptr %50, align 8, !tbaa !45
  %73 = fcmp olt double %68, %72
  br i1 %73, label %74, label %82

74:                                               ; preds = %71, %74
  %75 = phi double [ %79, %74 ], [ %72, %71 ]
  %76 = phi ptr [ %78, %74 ], [ %50, %71 ]
  %77 = phi ptr [ %76, %74 ], [ %67, %71 ]
  store double %75, ptr %77, align 8, !tbaa !45
  %78 = getelementptr inbounds double, ptr %76, i64 -1
  %79 = load double, ptr %78, align 8, !tbaa !45
  %80 = fcmp olt double %68, %79
  br i1 %80, label %74, label %82, !llvm.loop !280

81:                                               ; preds = %65
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %8, ptr noundef nonnull align 8 dereferenceable(40) %0, i64 40, i1 false)
  br label %82

82:                                               ; preds = %74, %81, %71
  %83 = phi ptr [ %0, %81 ], [ %67, %71 ], [ %76, %74 ]
  store double %68, ptr %83, align 8, !tbaa !45
  %84 = getelementptr inbounds double, ptr %0, i64 6
  %85 = load double, ptr %84, align 8, !tbaa !45
  %86 = load double, ptr %0, align 8, !tbaa !45
  %87 = fcmp olt double %85, %86
  br i1 %87, label %98, label %88

88:                                               ; preds = %82
  %89 = load double, ptr %67, align 8, !tbaa !45
  %90 = fcmp olt double %85, %89
  br i1 %90, label %91, label %99

91:                                               ; preds = %88, %91
  %92 = phi double [ %96, %91 ], [ %89, %88 ]
  %93 = phi ptr [ %95, %91 ], [ %67, %88 ]
  %94 = phi ptr [ %93, %91 ], [ %84, %88 ]
  store double %92, ptr %94, align 8, !tbaa !45
  %95 = getelementptr inbounds double, ptr %93, i64 -1
  %96 = load double, ptr %95, align 8, !tbaa !45
  %97 = fcmp olt double %85, %96
  br i1 %97, label %91, label %99, !llvm.loop !280

98:                                               ; preds = %82
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %8, ptr noundef nonnull align 8 dereferenceable(48) %0, i64 48, i1 false)
  br label %99

99:                                               ; preds = %91, %98, %88
  %100 = phi ptr [ %0, %98 ], [ %84, %88 ], [ %93, %91 ]
  store double %85, ptr %100, align 8, !tbaa !45
  %101 = getelementptr inbounds double, ptr %0, i64 7
  %102 = load double, ptr %101, align 8, !tbaa !45
  %103 = load double, ptr %0, align 8, !tbaa !45
  %104 = fcmp olt double %102, %103
  br i1 %104, label %115, label %105

105:                                              ; preds = %99
  %106 = load double, ptr %84, align 8, !tbaa !45
  %107 = fcmp olt double %102, %106
  br i1 %107, label %108, label %116

108:                                              ; preds = %105, %108
  %109 = phi double [ %113, %108 ], [ %106, %105 ]
  %110 = phi ptr [ %112, %108 ], [ %84, %105 ]
  %111 = phi ptr [ %110, %108 ], [ %101, %105 ]
  store double %109, ptr %111, align 8, !tbaa !45
  %112 = getelementptr inbounds double, ptr %110, i64 -1
  %113 = load double, ptr %112, align 8, !tbaa !45
  %114 = fcmp olt double %102, %113
  br i1 %114, label %108, label %116, !llvm.loop !280

115:                                              ; preds = %99
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %8, ptr noundef nonnull align 8 dereferenceable(56) %0, i64 56, i1 false)
  br label %116

116:                                              ; preds = %108, %115, %105
  %117 = phi ptr [ %0, %115 ], [ %101, %105 ], [ %110, %108 ]
  store double %102, ptr %117, align 8, !tbaa !45
  %118 = getelementptr inbounds double, ptr %0, i64 8
  %119 = load double, ptr %118, align 8, !tbaa !45
  %120 = load double, ptr %0, align 8, !tbaa !45
  %121 = fcmp olt double %119, %120
  br i1 %121, label %132, label %122

122:                                              ; preds = %116
  %123 = load double, ptr %101, align 8, !tbaa !45
  %124 = fcmp olt double %119, %123
  br i1 %124, label %125, label %133

125:                                              ; preds = %122, %125
  %126 = phi double [ %130, %125 ], [ %123, %122 ]
  %127 = phi ptr [ %129, %125 ], [ %101, %122 ]
  %128 = phi ptr [ %127, %125 ], [ %118, %122 ]
  store double %126, ptr %128, align 8, !tbaa !45
  %129 = getelementptr inbounds double, ptr %127, i64 -1
  %130 = load double, ptr %129, align 8, !tbaa !45
  %131 = fcmp olt double %119, %130
  br i1 %131, label %125, label %133, !llvm.loop !280

132:                                              ; preds = %116
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %8, ptr noundef nonnull align 8 dereferenceable(64) %0, i64 64, i1 false)
  br label %133

133:                                              ; preds = %125, %132, %122
  %134 = phi ptr [ %0, %132 ], [ %118, %122 ], [ %127, %125 ]
  store double %119, ptr %134, align 8, !tbaa !45
  %135 = getelementptr inbounds double, ptr %0, i64 9
  %136 = load double, ptr %135, align 8, !tbaa !45
  %137 = load double, ptr %0, align 8, !tbaa !45
  %138 = fcmp olt double %136, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %133
  %140 = load double, ptr %118, align 8, !tbaa !45
  %141 = fcmp olt double %136, %140
  br i1 %141, label %142, label %150

142:                                              ; preds = %139, %142
  %143 = phi double [ %147, %142 ], [ %140, %139 ]
  %144 = phi ptr [ %146, %142 ], [ %118, %139 ]
  %145 = phi ptr [ %144, %142 ], [ %135, %139 ]
  store double %143, ptr %145, align 8, !tbaa !45
  %146 = getelementptr inbounds double, ptr %144, i64 -1
  %147 = load double, ptr %146, align 8, !tbaa !45
  %148 = fcmp olt double %136, %147
  br i1 %148, label %142, label %150, !llvm.loop !280

149:                                              ; preds = %133
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %8, ptr noundef nonnull align 8 dereferenceable(72) %0, i64 72, i1 false)
  br label %150

150:                                              ; preds = %142, %149, %139
  %151 = phi ptr [ %0, %149 ], [ %135, %139 ], [ %144, %142 ]
  store double %136, ptr %151, align 8, !tbaa !45
  %152 = getelementptr inbounds double, ptr %0, i64 10
  %153 = load double, ptr %152, align 8, !tbaa !45
  %154 = load double, ptr %0, align 8, !tbaa !45
  %155 = fcmp olt double %153, %154
  br i1 %155, label %166, label %156

156:                                              ; preds = %150
  %157 = load double, ptr %135, align 8, !tbaa !45
  %158 = fcmp olt double %153, %157
  br i1 %158, label %159, label %167

159:                                              ; preds = %156, %159
  %160 = phi double [ %164, %159 ], [ %157, %156 ]
  %161 = phi ptr [ %163, %159 ], [ %135, %156 ]
  %162 = phi ptr [ %161, %159 ], [ %152, %156 ]
  store double %160, ptr %162, align 8, !tbaa !45
  %163 = getelementptr inbounds double, ptr %161, i64 -1
  %164 = load double, ptr %163, align 8, !tbaa !45
  %165 = fcmp olt double %153, %164
  br i1 %165, label %159, label %167, !llvm.loop !280

166:                                              ; preds = %150
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %8, ptr noundef nonnull align 8 dereferenceable(80) %0, i64 80, i1 false)
  br label %167

167:                                              ; preds = %159, %166, %156
  %168 = phi ptr [ %0, %166 ], [ %152, %156 ], [ %161, %159 ]
  store double %153, ptr %168, align 8, !tbaa !45
  %169 = getelementptr inbounds double, ptr %0, i64 11
  %170 = load double, ptr %169, align 8, !tbaa !45
  %171 = load double, ptr %0, align 8, !tbaa !45
  %172 = fcmp olt double %170, %171
  br i1 %172, label %183, label %173

173:                                              ; preds = %167
  %174 = load double, ptr %152, align 8, !tbaa !45
  %175 = fcmp olt double %170, %174
  br i1 %175, label %176, label %184

176:                                              ; preds = %173, %176
  %177 = phi double [ %181, %176 ], [ %174, %173 ]
  %178 = phi ptr [ %180, %176 ], [ %152, %173 ]
  %179 = phi ptr [ %178, %176 ], [ %169, %173 ]
  store double %177, ptr %179, align 8, !tbaa !45
  %180 = getelementptr inbounds double, ptr %178, i64 -1
  %181 = load double, ptr %180, align 8, !tbaa !45
  %182 = fcmp olt double %170, %181
  br i1 %182, label %176, label %184, !llvm.loop !280

183:                                              ; preds = %167
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %8, ptr noundef nonnull align 8 dereferenceable(88) %0, i64 88, i1 false)
  br label %184

184:                                              ; preds = %176, %183, %173
  %185 = phi ptr [ %0, %183 ], [ %169, %173 ], [ %178, %176 ]
  store double %170, ptr %185, align 8, !tbaa !45
  %186 = getelementptr inbounds double, ptr %0, i64 12
  %187 = load double, ptr %186, align 8, !tbaa !45
  %188 = load double, ptr %0, align 8, !tbaa !45
  %189 = fcmp olt double %187, %188
  br i1 %189, label %200, label %190

190:                                              ; preds = %184
  %191 = load double, ptr %169, align 8, !tbaa !45
  %192 = fcmp olt double %187, %191
  br i1 %192, label %193, label %201

193:                                              ; preds = %190, %193
  %194 = phi double [ %198, %193 ], [ %191, %190 ]
  %195 = phi ptr [ %197, %193 ], [ %169, %190 ]
  %196 = phi ptr [ %195, %193 ], [ %186, %190 ]
  store double %194, ptr %196, align 8, !tbaa !45
  %197 = getelementptr inbounds double, ptr %195, i64 -1
  %198 = load double, ptr %197, align 8, !tbaa !45
  %199 = fcmp olt double %187, %198
  br i1 %199, label %193, label %201, !llvm.loop !280

200:                                              ; preds = %184
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull align 8 dereferenceable(96) %0, i64 96, i1 false)
  br label %201

201:                                              ; preds = %193, %200, %190
  %202 = phi ptr [ %0, %200 ], [ %186, %190 ], [ %195, %193 ]
  store double %187, ptr %202, align 8, !tbaa !45
  %203 = getelementptr inbounds double, ptr %0, i64 13
  %204 = load double, ptr %203, align 8, !tbaa !45
  %205 = load double, ptr %0, align 8, !tbaa !45
  %206 = fcmp olt double %204, %205
  br i1 %206, label %217, label %207

207:                                              ; preds = %201
  %208 = load double, ptr %186, align 8, !tbaa !45
  %209 = fcmp olt double %204, %208
  br i1 %209, label %210, label %218

210:                                              ; preds = %207, %210
  %211 = phi double [ %215, %210 ], [ %208, %207 ]
  %212 = phi ptr [ %214, %210 ], [ %186, %207 ]
  %213 = phi ptr [ %212, %210 ], [ %203, %207 ]
  store double %211, ptr %213, align 8, !tbaa !45
  %214 = getelementptr inbounds double, ptr %212, i64 -1
  %215 = load double, ptr %214, align 8, !tbaa !45
  %216 = fcmp olt double %204, %215
  br i1 %216, label %210, label %218, !llvm.loop !280

217:                                              ; preds = %201
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(104) %8, ptr noundef nonnull align 8 dereferenceable(104) %0, i64 104, i1 false)
  br label %218

218:                                              ; preds = %210, %217, %207
  %219 = phi ptr [ %0, %217 ], [ %203, %207 ], [ %212, %210 ]
  store double %204, ptr %219, align 8, !tbaa !45
  %220 = getelementptr inbounds double, ptr %0, i64 14
  %221 = load double, ptr %220, align 8, !tbaa !45
  %222 = load double, ptr %0, align 8, !tbaa !45
  %223 = fcmp olt double %221, %222
  br i1 %223, label %234, label %224

224:                                              ; preds = %218
  %225 = load double, ptr %203, align 8, !tbaa !45
  %226 = fcmp olt double %221, %225
  br i1 %226, label %227, label %235

227:                                              ; preds = %224, %227
  %228 = phi double [ %232, %227 ], [ %225, %224 ]
  %229 = phi ptr [ %231, %227 ], [ %203, %224 ]
  %230 = phi ptr [ %229, %227 ], [ %220, %224 ]
  store double %228, ptr %230, align 8, !tbaa !45
  %231 = getelementptr inbounds double, ptr %229, i64 -1
  %232 = load double, ptr %231, align 8, !tbaa !45
  %233 = fcmp olt double %221, %232
  br i1 %233, label %227, label %235, !llvm.loop !280

234:                                              ; preds = %218
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(112) %8, ptr noundef nonnull align 8 dereferenceable(112) %0, i64 112, i1 false)
  br label %235

235:                                              ; preds = %227, %234, %224
  %236 = phi ptr [ %0, %234 ], [ %220, %224 ], [ %229, %227 ]
  store double %221, ptr %236, align 8, !tbaa !45
  %237 = getelementptr inbounds double, ptr %0, i64 15
  %238 = load double, ptr %237, align 8, !tbaa !45
  %239 = load double, ptr %0, align 8, !tbaa !45
  %240 = fcmp olt double %238, %239
  br i1 %240, label %251, label %241

241:                                              ; preds = %235
  %242 = load double, ptr %220, align 8, !tbaa !45
  %243 = fcmp olt double %238, %242
  br i1 %243, label %244, label %252

244:                                              ; preds = %241, %244
  %245 = phi double [ %249, %244 ], [ %242, %241 ]
  %246 = phi ptr [ %248, %244 ], [ %220, %241 ]
  %247 = phi ptr [ %246, %244 ], [ %237, %241 ]
  store double %245, ptr %247, align 8, !tbaa !45
  %248 = getelementptr inbounds double, ptr %246, i64 -1
  %249 = load double, ptr %248, align 8, !tbaa !45
  %250 = fcmp olt double %238, %249
  br i1 %250, label %244, label %252, !llvm.loop !280

251:                                              ; preds = %235
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %8, ptr noundef nonnull align 8 dereferenceable(120) %0, i64 120, i1 false)
  br label %252

252:                                              ; preds = %244, %251, %241
  %253 = phi ptr [ %0, %251 ], [ %237, %241 ], [ %246, %244 ]
  store double %238, ptr %253, align 8, !tbaa !45
  %254 = getelementptr inbounds double, ptr %0, i64 16
  %255 = icmp eq ptr %254, %1
  br i1 %255, label %307, label %256

256:                                              ; preds = %252, %269
  %257 = phi ptr [ %271, %269 ], [ %254, %252 ]
  %258 = load double, ptr %257, align 8, !tbaa !45
  %259 = getelementptr inbounds double, ptr %257, i64 -1
  %260 = load double, ptr %259, align 8, !tbaa !45
  %261 = fcmp olt double %258, %260
  br i1 %261, label %262, label %269

262:                                              ; preds = %256, %262
  %263 = phi double [ %267, %262 ], [ %260, %256 ]
  %264 = phi ptr [ %266, %262 ], [ %259, %256 ]
  %265 = phi ptr [ %264, %262 ], [ %257, %256 ]
  store double %263, ptr %265, align 8, !tbaa !45
  %266 = getelementptr inbounds double, ptr %264, i64 -1
  %267 = load double, ptr %266, align 8, !tbaa !45
  %268 = fcmp olt double %258, %267
  br i1 %268, label %262, label %269, !llvm.loop !280

269:                                              ; preds = %262, %256
  %270 = phi ptr [ %257, %256 ], [ %264, %262 ]
  store double %258, ptr %270, align 8, !tbaa !45
  %271 = getelementptr inbounds double, ptr %257, i64 1
  %272 = icmp eq ptr %271, %1
  br i1 %272, label %307, label %256, !llvm.loop !281

273:                                              ; preds = %2
  %274 = icmp eq ptr %0, %1
  %275 = getelementptr inbounds double, ptr %0, i64 1
  %276 = icmp eq ptr %275, %1
  %277 = select i1 %274, i1 true, i1 %276
  br i1 %277, label %307, label %278

278:                                              ; preds = %273, %303
  %279 = phi ptr [ %305, %303 ], [ %275, %273 ]
  %280 = phi ptr [ %279, %303 ], [ %0, %273 ]
  %281 = load double, ptr %279, align 8, !tbaa !45
  %282 = load double, ptr %0, align 8, !tbaa !45
  %283 = fcmp olt double %281, %282
  br i1 %283, label %284, label %293

284:                                              ; preds = %278
  %285 = icmp eq ptr %279, %0
  br i1 %285, label %303, label %286

286:                                              ; preds = %284
  %287 = ptrtoint ptr %279 to i64
  %288 = sub i64 %287, %4
  %289 = ashr exact i64 %288, 3
  %290 = sub nsw i64 0, %289
  %291 = getelementptr inbounds double, ptr %280, i64 2
  %292 = getelementptr inbounds double, ptr %291, i64 %290
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %292, ptr nonnull align 8 %0, i64 %288, i1 false)
  br label %303

293:                                              ; preds = %278
  %294 = load double, ptr %280, align 8, !tbaa !45
  %295 = fcmp olt double %281, %294
  br i1 %295, label %296, label %303

296:                                              ; preds = %293, %296
  %297 = phi double [ %301, %296 ], [ %294, %293 ]
  %298 = phi ptr [ %300, %296 ], [ %280, %293 ]
  %299 = phi ptr [ %298, %296 ], [ %279, %293 ]
  store double %297, ptr %299, align 8, !tbaa !45
  %300 = getelementptr inbounds double, ptr %298, i64 -1
  %301 = load double, ptr %300, align 8, !tbaa !45
  %302 = fcmp olt double %281, %301
  br i1 %302, label %296, label %303, !llvm.loop !280

303:                                              ; preds = %296, %293, %286, %284
  %304 = phi ptr [ %0, %284 ], [ %0, %286 ], [ %279, %293 ], [ %298, %296 ]
  store double %281, ptr %304, align 8, !tbaa !45
  %305 = getelementptr inbounds double, ptr %279, i64 1
  %306 = icmp eq ptr %305, %1
  br i1 %306, label %307, label %278, !llvm.loop !282

307:                                              ; preds = %303, %269, %273, %252
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_(ptr %0, ptr %1, ptr noundef nonnull align 1 dereferenceable(1) %2) local_unnamed_addr #3 comdat {
  %4 = ptrtoint ptr %1 to i64
  %5 = ptrtoint ptr %0 to i64
  %6 = sub i64 %4, %5
  %7 = freeze i64 %6
  %8 = icmp slt i64 %7, 16
  br i1 %8, label %101, label %9

9:                                                ; preds = %3
  %10 = lshr exact i64 %7, 3
  %11 = add nsw i64 %10, -2
  %12 = lshr i64 %11, 1
  %13 = add nsw i64 %10, -1
  %14 = lshr i64 %13, 1
  %15 = and i64 %7, 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %9
  %18 = or i64 %11, 1
  %19 = getelementptr inbounds double, ptr %0, i64 %18
  %20 = getelementptr inbounds double, ptr %0, i64 %12
  br label %58

21:                                               ; preds = %9, %53
  %22 = phi i64 [ %57, %53 ], [ %12, %9 ]
  %23 = getelementptr inbounds double, ptr %0, i64 %22
  %24 = load double, ptr %23, align 8, !tbaa !45
  %25 = icmp sgt i64 %14, %22
  br i1 %25, label %26, label %53

26:                                               ; preds = %21, %26
  %27 = phi i64 [ %36, %26 ], [ %22, %21 ]
  %28 = shl i64 %27, 1
  %29 = add i64 %28, 2
  %30 = getelementptr inbounds double, ptr %0, i64 %29
  %31 = or i64 %28, 1
  %32 = getelementptr inbounds double, ptr %0, i64 %31
  %33 = load double, ptr %30, align 8, !tbaa !45
  %34 = load double, ptr %32, align 8, !tbaa !45
  %35 = fcmp olt double %33, %34
  %36 = select i1 %35, i64 %31, i64 %29
  %37 = getelementptr inbounds double, ptr %0, i64 %36
  %38 = load double, ptr %37, align 8, !tbaa !45
  %39 = getelementptr inbounds double, ptr %0, i64 %27
  store double %38, ptr %39, align 8, !tbaa !45
  %40 = icmp slt i64 %36, %14
  br i1 %40, label %26, label %41, !llvm.loop !273

41:                                               ; preds = %26
  %42 = icmp sgt i64 %36, %22
  br i1 %42, label %43, label %53

43:                                               ; preds = %41, %50
  %44 = phi i64 [ %46, %50 ], [ %36, %41 ]
  %45 = add nsw i64 %44, -1
  %46 = sdiv i64 %45, 2
  %47 = getelementptr inbounds double, ptr %0, i64 %46
  %48 = load double, ptr %47, align 8, !tbaa !45
  %49 = fcmp olt double %48, %24
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = getelementptr inbounds double, ptr %0, i64 %44
  store double %48, ptr %51, align 8, !tbaa !45
  %52 = icmp sgt i64 %46, %22
  br i1 %52, label %43, label %53, !llvm.loop !274

53:                                               ; preds = %43, %50, %21, %41
  %54 = phi i64 [ %36, %41 ], [ %22, %21 ], [ %46, %50 ], [ %44, %43 ]
  %55 = getelementptr inbounds double, ptr %0, i64 %54
  store double %24, ptr %55, align 8, !tbaa !45
  %56 = icmp eq i64 %22, 0
  %57 = add nsw i64 %22, -1
  br i1 %56, label %101, label %21, !llvm.loop !283

58:                                               ; preds = %17, %96
  %59 = phi i64 [ %100, %96 ], [ %12, %17 ]
  %60 = getelementptr inbounds double, ptr %0, i64 %59
  %61 = load double, ptr %60, align 8, !tbaa !45
  %62 = icmp sgt i64 %14, %59
  br i1 %62, label %63, label %78

63:                                               ; preds = %58, %63
  %64 = phi i64 [ %73, %63 ], [ %59, %58 ]
  %65 = shl i64 %64, 1
  %66 = add i64 %65, 2
  %67 = getelementptr inbounds double, ptr %0, i64 %66
  %68 = or i64 %65, 1
  %69 = getelementptr inbounds double, ptr %0, i64 %68
  %70 = load double, ptr %67, align 8, !tbaa !45
  %71 = load double, ptr %69, align 8, !tbaa !45
  %72 = fcmp olt double %70, %71
  %73 = select i1 %72, i64 %68, i64 %66
  %74 = getelementptr inbounds double, ptr %0, i64 %73
  %75 = load double, ptr %74, align 8, !tbaa !45
  %76 = getelementptr inbounds double, ptr %0, i64 %64
  store double %75, ptr %76, align 8, !tbaa !45
  %77 = icmp slt i64 %73, %14
  br i1 %77, label %63, label %78, !llvm.loop !273

78:                                               ; preds = %63, %58
  %79 = phi i64 [ %59, %58 ], [ %73, %63 ]
  %80 = icmp eq i64 %79, %12
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  %82 = load double, ptr %19, align 8, !tbaa !45
  store double %82, ptr %20, align 8, !tbaa !45
  br label %83

83:                                               ; preds = %81, %78
  %84 = phi i64 [ %18, %81 ], [ %79, %78 ]
  %85 = icmp sgt i64 %84, %59
  br i1 %85, label %86, label %96

86:                                               ; preds = %83, %93
  %87 = phi i64 [ %89, %93 ], [ %84, %83 ]
  %88 = add nsw i64 %87, -1
  %89 = sdiv i64 %88, 2
  %90 = getelementptr inbounds double, ptr %0, i64 %89
  %91 = load double, ptr %90, align 8, !tbaa !45
  %92 = fcmp olt double %91, %61
  br i1 %92, label %93, label %96

93:                                               ; preds = %86
  %94 = getelementptr inbounds double, ptr %0, i64 %87
  store double %91, ptr %94, align 8, !tbaa !45
  %95 = icmp sgt i64 %89, %59
  br i1 %95, label %86, label %96, !llvm.loop !274

96:                                               ; preds = %86, %93, %83
  %97 = phi i64 [ %84, %83 ], [ %89, %93 ], [ %87, %86 ]
  %98 = getelementptr inbounds double, ptr %0, i64 %97
  store double %61, ptr %98, align 8, !tbaa !45
  %99 = icmp eq i64 %59, 0
  %100 = add nsw i64 %59, -1
  br i1 %99, label %101, label %58, !llvm.loop !283

101:                                              ; preds = %53, %96, %3
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #11

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr %0, ptr %1, i64 noundef %2) local_unnamed_addr #3 comdat {
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %5 = ptrtoint ptr %0 to i64
  %6 = ptrtoint ptr %1 to i64
  %7 = sub i64 %6, %5
  %8 = icmp sgt i64 %7, 128
  br i1 %8, label %9, label %123

9:                                                ; preds = %3
  %10 = getelementptr inbounds i64, ptr %0, i64 1
  br label %11

11:                                               ; preds = %9, %119
  %12 = phi i64 [ %7, %9 ], [ %121, %119 ]
  %13 = phi i64 [ %2, %9 ], [ %75, %119 ]
  %14 = phi ptr [ %1, %9 ], [ %107, %119 ]
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %16, label %74

16:                                               ; preds = %11
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4)
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_(ptr %0, ptr %14, ptr noundef nonnull align 1 dereferenceable(1) %4)
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  br label %17

17:                                               ; preds = %16, %70
  %18 = phi ptr [ %19, %70 ], [ %14, %16 ]
  %19 = getelementptr inbounds i64, ptr %18, i64 -1
  %20 = load i64, ptr %19, align 8, !tbaa !240
  %21 = load i64, ptr %0, align 8, !tbaa !240
  store i64 %21, ptr %19, align 8, !tbaa !240
  %22 = ptrtoint ptr %19 to i64
  %23 = sub i64 %22, %5
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, -1
  %26 = sdiv i64 %25, 2
  %27 = icmp sgt i64 %23, 16
  br i1 %27, label %28, label %43

28:                                               ; preds = %17, %28
  %29 = phi i64 [ %38, %28 ], [ 0, %17 ]
  %30 = shl i64 %29, 1
  %31 = add i64 %30, 2
  %32 = getelementptr inbounds i64, ptr %0, i64 %31
  %33 = or i64 %30, 1
  %34 = getelementptr inbounds i64, ptr %0, i64 %33
  %35 = load i64, ptr %32, align 8, !tbaa !240
  %36 = load i64, ptr %34, align 8, !tbaa !240
  %37 = icmp slt i64 %35, %36
  %38 = select i1 %37, i64 %33, i64 %31
  %39 = getelementptr inbounds i64, ptr %0, i64 %38
  %40 = load i64, ptr %39, align 8, !tbaa !240
  %41 = getelementptr inbounds i64, ptr %0, i64 %29
  store i64 %40, ptr %41, align 8, !tbaa !240
  %42 = icmp slt i64 %38, %26
  br i1 %42, label %28, label %43, !llvm.loop !284

43:                                               ; preds = %28, %17
  %44 = phi i64 [ 0, %17 ], [ %38, %28 ]
  %45 = and i64 %23, 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %43
  %48 = add nsw i64 %24, -2
  %49 = sdiv i64 %48, 2
  %50 = icmp eq i64 %44, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = shl i64 %44, 1
  %53 = or i64 %52, 1
  %54 = getelementptr inbounds i64, ptr %0, i64 %53
  %55 = load i64, ptr %54, align 8, !tbaa !240
  %56 = getelementptr inbounds i64, ptr %0, i64 %44
  store i64 %55, ptr %56, align 8, !tbaa !240
  br label %57

57:                                               ; preds = %51, %47, %43
  %58 = phi i64 [ %53, %51 ], [ %44, %47 ], [ %44, %43 ]
  %59 = icmp sgt i64 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %57, %67
  %61 = phi i64 [ %63, %67 ], [ %58, %57 ]
  %62 = add nsw i64 %61, -1
  %63 = sdiv i64 %62, 2
  %64 = getelementptr inbounds i64, ptr %0, i64 %63
  %65 = load i64, ptr %64, align 8, !tbaa !240
  %66 = icmp slt i64 %65, %20
  br i1 %66, label %67, label %70

67:                                               ; preds = %60
  %68 = getelementptr inbounds i64, ptr %0, i64 %61
  store i64 %65, ptr %68, align 8, !tbaa !240
  %69 = icmp sgt i64 %61, 2
  br i1 %69, label %60, label %70, !llvm.loop !285

70:                                               ; preds = %67, %60, %57
  %71 = phi i64 [ %58, %57 ], [ %61, %60 ], [ %63, %67 ]
  %72 = getelementptr inbounds i64, ptr %0, i64 %71
  store i64 %20, ptr %72, align 8, !tbaa !240
  %73 = icmp sgt i64 %23, 8
  br i1 %73, label %17, label %123, !llvm.loop !286

74:                                               ; preds = %11
  %75 = add nsw i64 %13, -1
  %76 = lshr i64 %12, 4
  %77 = getelementptr inbounds i64, ptr %0, i64 %76
  %78 = getelementptr inbounds i64, ptr %14, i64 -1
  %79 = load i64, ptr %10, align 8, !tbaa !240
  %80 = load i64, ptr %77, align 8, !tbaa !240
  %81 = icmp slt i64 %79, %80
  %82 = load i64, ptr %78, align 8, !tbaa !240
  br i1 %81, label %83, label %92

83:                                               ; preds = %74
  %84 = icmp slt i64 %80, %82
  br i1 %84, label %85, label %87

85:                                               ; preds = %83
  %86 = load i64, ptr %0, align 8, !tbaa !240
  store i64 %80, ptr %0, align 8, !tbaa !240
  store i64 %86, ptr %77, align 8, !tbaa !240
  br label %101

87:                                               ; preds = %83
  %88 = icmp slt i64 %79, %82
  %89 = load i64, ptr %0, align 8, !tbaa !240
  br i1 %88, label %90, label %91

90:                                               ; preds = %87
  store i64 %82, ptr %0, align 8, !tbaa !240
  store i64 %89, ptr %78, align 8, !tbaa !240
  br label %101

91:                                               ; preds = %87
  store i64 %79, ptr %0, align 8, !tbaa !240
  store i64 %89, ptr %10, align 8, !tbaa !240
  br label %101

92:                                               ; preds = %74
  %93 = icmp slt i64 %79, %82
  br i1 %93, label %94, label %96

94:                                               ; preds = %92
  %95 = load i64, ptr %0, align 8, !tbaa !240
  store i64 %79, ptr %0, align 8, !tbaa !240
  store i64 %95, ptr %10, align 8, !tbaa !240
  br label %101

96:                                               ; preds = %92
  %97 = icmp slt i64 %80, %82
  %98 = load i64, ptr %0, align 8, !tbaa !240
  br i1 %97, label %99, label %100

99:                                               ; preds = %96
  store i64 %82, ptr %0, align 8, !tbaa !240
  store i64 %98, ptr %78, align 8, !tbaa !240
  br label %101

100:                                              ; preds = %96
  store i64 %80, ptr %0, align 8, !tbaa !240
  store i64 %98, ptr %77, align 8, !tbaa !240
  br label %101

101:                                              ; preds = %100, %99, %94, %91, %90, %85
  br label %102

102:                                              ; preds = %101, %118
  %103 = phi ptr [ %110, %118 ], [ %10, %101 ]
  %104 = phi ptr [ %113, %118 ], [ %14, %101 ]
  %105 = load i64, ptr %0, align 8, !tbaa !240
  br label %106

106:                                              ; preds = %106, %102
  %107 = phi ptr [ %103, %102 ], [ %110, %106 ]
  %108 = load i64, ptr %107, align 8, !tbaa !240
  %109 = icmp slt i64 %108, %105
  %110 = getelementptr inbounds i64, ptr %107, i64 1
  br i1 %109, label %106, label %111, !llvm.loop !287

111:                                              ; preds = %106, %111
  %112 = phi ptr [ %113, %111 ], [ %104, %106 ]
  %113 = getelementptr inbounds i64, ptr %112, i64 -1
  %114 = load i64, ptr %113, align 8, !tbaa !240
  %115 = icmp slt i64 %105, %114
  br i1 %115, label %111, label %116, !llvm.loop !288

116:                                              ; preds = %111
  %117 = icmp ult ptr %107, %113
  br i1 %117, label %118, label %119

118:                                              ; preds = %116
  store i64 %114, ptr %107, align 8, !tbaa !240
  store i64 %108, ptr %113, align 8, !tbaa !240
  br label %102, !llvm.loop !289

119:                                              ; preds = %116
  tail call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr nonnull %107, ptr %14, i64 noundef %75)
  %120 = ptrtoint ptr %107 to i64
  %121 = sub i64 %120, %5
  %122 = icmp sgt i64 %121, 128
  br i1 %122, label %11, label %123, !llvm.loop !290

123:                                              ; preds = %119, %70, %3
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %0, ptr %1) local_unnamed_addr #3 comdat {
  %3 = ptrtoint ptr %1 to i64
  %4 = ptrtoint ptr %0 to i64
  %5 = sub i64 %3, %4
  %6 = icmp sgt i64 %5, 128
  br i1 %6, label %7, label %273

7:                                                ; preds = %2
  %8 = getelementptr i8, ptr %0, i64 8
  %9 = load i64, ptr %8, align 8, !tbaa !240
  %10 = load i64, ptr %0, align 8, !tbaa !240
  %11 = icmp slt i64 %9, %10
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = load i64, ptr %0, align 8
  store i64 %13, ptr %8, align 8
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi ptr [ %0, %12 ], [ %8, %7 ]
  store i64 %9, ptr %15, align 8, !tbaa !240
  %16 = getelementptr inbounds i64, ptr %0, i64 2
  %17 = load i64, ptr %16, align 8, !tbaa !240
  %18 = load i64, ptr %0, align 8, !tbaa !240
  %19 = icmp slt i64 %17, %18
  br i1 %19, label %30, label %20

20:                                               ; preds = %14
  %21 = load i64, ptr %8, align 8, !tbaa !240
  %22 = icmp slt i64 %17, %21
  br i1 %22, label %23, label %31

23:                                               ; preds = %20, %23
  %24 = phi i64 [ %28, %23 ], [ %21, %20 ]
  %25 = phi ptr [ %27, %23 ], [ %8, %20 ]
  %26 = phi ptr [ %25, %23 ], [ %16, %20 ]
  store i64 %24, ptr %26, align 8, !tbaa !240
  %27 = getelementptr inbounds i64, ptr %25, i64 -1
  %28 = load i64, ptr %27, align 8, !tbaa !240
  %29 = icmp slt i64 %17, %28
  br i1 %29, label %23, label %31, !llvm.loop !291

30:                                               ; preds = %14
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %8, ptr noundef nonnull align 8 dereferenceable(16) %0, i64 16, i1 false)
  br label %31

31:                                               ; preds = %23, %30, %20
  %32 = phi ptr [ %0, %30 ], [ %16, %20 ], [ %25, %23 ]
  store i64 %17, ptr %32, align 8, !tbaa !240
  %33 = getelementptr inbounds i64, ptr %0, i64 3
  %34 = load i64, ptr %33, align 8, !tbaa !240
  %35 = load i64, ptr %0, align 8, !tbaa !240
  %36 = icmp slt i64 %34, %35
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  %38 = load i64, ptr %16, align 8, !tbaa !240
  %39 = icmp slt i64 %34, %38
  br i1 %39, label %40, label %48

40:                                               ; preds = %37, %40
  %41 = phi i64 [ %45, %40 ], [ %38, %37 ]
  %42 = phi ptr [ %44, %40 ], [ %16, %37 ]
  %43 = phi ptr [ %42, %40 ], [ %33, %37 ]
  store i64 %41, ptr %43, align 8, !tbaa !240
  %44 = getelementptr inbounds i64, ptr %42, i64 -1
  %45 = load i64, ptr %44, align 8, !tbaa !240
  %46 = icmp slt i64 %34, %45
  br i1 %46, label %40, label %48, !llvm.loop !291

47:                                               ; preds = %31
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %0, i64 24, i1 false)
  br label %48

48:                                               ; preds = %40, %47, %37
  %49 = phi ptr [ %0, %47 ], [ %33, %37 ], [ %42, %40 ]
  store i64 %34, ptr %49, align 8, !tbaa !240
  %50 = getelementptr inbounds i64, ptr %0, i64 4
  %51 = load i64, ptr %50, align 8, !tbaa !240
  %52 = load i64, ptr %0, align 8, !tbaa !240
  %53 = icmp slt i64 %51, %52
  br i1 %53, label %64, label %54

54:                                               ; preds = %48
  %55 = load i64, ptr %33, align 8, !tbaa !240
  %56 = icmp slt i64 %51, %55
  br i1 %56, label %57, label %65

57:                                               ; preds = %54, %57
  %58 = phi i64 [ %62, %57 ], [ %55, %54 ]
  %59 = phi ptr [ %61, %57 ], [ %33, %54 ]
  %60 = phi ptr [ %59, %57 ], [ %50, %54 ]
  store i64 %58, ptr %60, align 8, !tbaa !240
  %61 = getelementptr inbounds i64, ptr %59, i64 -1
  %62 = load i64, ptr %61, align 8, !tbaa !240
  %63 = icmp slt i64 %51, %62
  br i1 %63, label %57, label %65, !llvm.loop !291

64:                                               ; preds = %48
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %8, ptr noundef nonnull align 8 dereferenceable(32) %0, i64 32, i1 false)
  br label %65

65:                                               ; preds = %57, %64, %54
  %66 = phi ptr [ %0, %64 ], [ %50, %54 ], [ %59, %57 ]
  store i64 %51, ptr %66, align 8, !tbaa !240
  %67 = getelementptr inbounds i64, ptr %0, i64 5
  %68 = load i64, ptr %67, align 8, !tbaa !240
  %69 = load i64, ptr %0, align 8, !tbaa !240
  %70 = icmp slt i64 %68, %69
  br i1 %70, label %81, label %71

71:                                               ; preds = %65
  %72 = load i64, ptr %50, align 8, !tbaa !240
  %73 = icmp slt i64 %68, %72
  br i1 %73, label %74, label %82

74:                                               ; preds = %71, %74
  %75 = phi i64 [ %79, %74 ], [ %72, %71 ]
  %76 = phi ptr [ %78, %74 ], [ %50, %71 ]
  %77 = phi ptr [ %76, %74 ], [ %67, %71 ]
  store i64 %75, ptr %77, align 8, !tbaa !240
  %78 = getelementptr inbounds i64, ptr %76, i64 -1
  %79 = load i64, ptr %78, align 8, !tbaa !240
  %80 = icmp slt i64 %68, %79
  br i1 %80, label %74, label %82, !llvm.loop !291

81:                                               ; preds = %65
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %8, ptr noundef nonnull align 8 dereferenceable(40) %0, i64 40, i1 false)
  br label %82

82:                                               ; preds = %74, %81, %71
  %83 = phi ptr [ %0, %81 ], [ %67, %71 ], [ %76, %74 ]
  store i64 %68, ptr %83, align 8, !tbaa !240
  %84 = getelementptr inbounds i64, ptr %0, i64 6
  %85 = load i64, ptr %84, align 8, !tbaa !240
  %86 = load i64, ptr %0, align 8, !tbaa !240
  %87 = icmp slt i64 %85, %86
  br i1 %87, label %98, label %88

88:                                               ; preds = %82
  %89 = load i64, ptr %67, align 8, !tbaa !240
  %90 = icmp slt i64 %85, %89
  br i1 %90, label %91, label %99

91:                                               ; preds = %88, %91
  %92 = phi i64 [ %96, %91 ], [ %89, %88 ]
  %93 = phi ptr [ %95, %91 ], [ %67, %88 ]
  %94 = phi ptr [ %93, %91 ], [ %84, %88 ]
  store i64 %92, ptr %94, align 8, !tbaa !240
  %95 = getelementptr inbounds i64, ptr %93, i64 -1
  %96 = load i64, ptr %95, align 8, !tbaa !240
  %97 = icmp slt i64 %85, %96
  br i1 %97, label %91, label %99, !llvm.loop !291

98:                                               ; preds = %82
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %8, ptr noundef nonnull align 8 dereferenceable(48) %0, i64 48, i1 false)
  br label %99

99:                                               ; preds = %91, %98, %88
  %100 = phi ptr [ %0, %98 ], [ %84, %88 ], [ %93, %91 ]
  store i64 %85, ptr %100, align 8, !tbaa !240
  %101 = getelementptr inbounds i64, ptr %0, i64 7
  %102 = load i64, ptr %101, align 8, !tbaa !240
  %103 = load i64, ptr %0, align 8, !tbaa !240
  %104 = icmp slt i64 %102, %103
  br i1 %104, label %115, label %105

105:                                              ; preds = %99
  %106 = load i64, ptr %84, align 8, !tbaa !240
  %107 = icmp slt i64 %102, %106
  br i1 %107, label %108, label %116

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %113, %108 ], [ %106, %105 ]
  %110 = phi ptr [ %112, %108 ], [ %84, %105 ]
  %111 = phi ptr [ %110, %108 ], [ %101, %105 ]
  store i64 %109, ptr %111, align 8, !tbaa !240
  %112 = getelementptr inbounds i64, ptr %110, i64 -1
  %113 = load i64, ptr %112, align 8, !tbaa !240
  %114 = icmp slt i64 %102, %113
  br i1 %114, label %108, label %116, !llvm.loop !291

115:                                              ; preds = %99
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %8, ptr noundef nonnull align 8 dereferenceable(56) %0, i64 56, i1 false)
  br label %116

116:                                              ; preds = %108, %115, %105
  %117 = phi ptr [ %0, %115 ], [ %101, %105 ], [ %110, %108 ]
  store i64 %102, ptr %117, align 8, !tbaa !240
  %118 = getelementptr inbounds i64, ptr %0, i64 8
  %119 = load i64, ptr %118, align 8, !tbaa !240
  %120 = load i64, ptr %0, align 8, !tbaa !240
  %121 = icmp slt i64 %119, %120
  br i1 %121, label %132, label %122

122:                                              ; preds = %116
  %123 = load i64, ptr %101, align 8, !tbaa !240
  %124 = icmp slt i64 %119, %123
  br i1 %124, label %125, label %133

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %130, %125 ], [ %123, %122 ]
  %127 = phi ptr [ %129, %125 ], [ %101, %122 ]
  %128 = phi ptr [ %127, %125 ], [ %118, %122 ]
  store i64 %126, ptr %128, align 8, !tbaa !240
  %129 = getelementptr inbounds i64, ptr %127, i64 -1
  %130 = load i64, ptr %129, align 8, !tbaa !240
  %131 = icmp slt i64 %119, %130
  br i1 %131, label %125, label %133, !llvm.loop !291

132:                                              ; preds = %116
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %8, ptr noundef nonnull align 8 dereferenceable(64) %0, i64 64, i1 false)
  br label %133

133:                                              ; preds = %125, %132, %122
  %134 = phi ptr [ %0, %132 ], [ %118, %122 ], [ %127, %125 ]
  store i64 %119, ptr %134, align 8, !tbaa !240
  %135 = getelementptr inbounds i64, ptr %0, i64 9
  %136 = load i64, ptr %135, align 8, !tbaa !240
  %137 = load i64, ptr %0, align 8, !tbaa !240
  %138 = icmp slt i64 %136, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %133
  %140 = load i64, ptr %118, align 8, !tbaa !240
  %141 = icmp slt i64 %136, %140
  br i1 %141, label %142, label %150

142:                                              ; preds = %139, %142
  %143 = phi i64 [ %147, %142 ], [ %140, %139 ]
  %144 = phi ptr [ %146, %142 ], [ %118, %139 ]
  %145 = phi ptr [ %144, %142 ], [ %135, %139 ]
  store i64 %143, ptr %145, align 8, !tbaa !240
  %146 = getelementptr inbounds i64, ptr %144, i64 -1
  %147 = load i64, ptr %146, align 8, !tbaa !240
  %148 = icmp slt i64 %136, %147
  br i1 %148, label %142, label %150, !llvm.loop !291

149:                                              ; preds = %133
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %8, ptr noundef nonnull align 8 dereferenceable(72) %0, i64 72, i1 false)
  br label %150

150:                                              ; preds = %142, %149, %139
  %151 = phi ptr [ %0, %149 ], [ %135, %139 ], [ %144, %142 ]
  store i64 %136, ptr %151, align 8, !tbaa !240
  %152 = getelementptr inbounds i64, ptr %0, i64 10
  %153 = load i64, ptr %152, align 8, !tbaa !240
  %154 = load i64, ptr %0, align 8, !tbaa !240
  %155 = icmp slt i64 %153, %154
  br i1 %155, label %166, label %156

156:                                              ; preds = %150
  %157 = load i64, ptr %135, align 8, !tbaa !240
  %158 = icmp slt i64 %153, %157
  br i1 %158, label %159, label %167

159:                                              ; preds = %156, %159
  %160 = phi i64 [ %164, %159 ], [ %157, %156 ]
  %161 = phi ptr [ %163, %159 ], [ %135, %156 ]
  %162 = phi ptr [ %161, %159 ], [ %152, %156 ]
  store i64 %160, ptr %162, align 8, !tbaa !240
  %163 = getelementptr inbounds i64, ptr %161, i64 -1
  %164 = load i64, ptr %163, align 8, !tbaa !240
  %165 = icmp slt i64 %153, %164
  br i1 %165, label %159, label %167, !llvm.loop !291

166:                                              ; preds = %150
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %8, ptr noundef nonnull align 8 dereferenceable(80) %0, i64 80, i1 false)
  br label %167

167:                                              ; preds = %159, %166, %156
  %168 = phi ptr [ %0, %166 ], [ %152, %156 ], [ %161, %159 ]
  store i64 %153, ptr %168, align 8, !tbaa !240
  %169 = getelementptr inbounds i64, ptr %0, i64 11
  %170 = load i64, ptr %169, align 8, !tbaa !240
  %171 = load i64, ptr %0, align 8, !tbaa !240
  %172 = icmp slt i64 %170, %171
  br i1 %172, label %183, label %173

173:                                              ; preds = %167
  %174 = load i64, ptr %152, align 8, !tbaa !240
  %175 = icmp slt i64 %170, %174
  br i1 %175, label %176, label %184

176:                                              ; preds = %173, %176
  %177 = phi i64 [ %181, %176 ], [ %174, %173 ]
  %178 = phi ptr [ %180, %176 ], [ %152, %173 ]
  %179 = phi ptr [ %178, %176 ], [ %169, %173 ]
  store i64 %177, ptr %179, align 8, !tbaa !240
  %180 = getelementptr inbounds i64, ptr %178, i64 -1
  %181 = load i64, ptr %180, align 8, !tbaa !240
  %182 = icmp slt i64 %170, %181
  br i1 %182, label %176, label %184, !llvm.loop !291

183:                                              ; preds = %167
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %8, ptr noundef nonnull align 8 dereferenceable(88) %0, i64 88, i1 false)
  br label %184

184:                                              ; preds = %176, %183, %173
  %185 = phi ptr [ %0, %183 ], [ %169, %173 ], [ %178, %176 ]
  store i64 %170, ptr %185, align 8, !tbaa !240
  %186 = getelementptr inbounds i64, ptr %0, i64 12
  %187 = load i64, ptr %186, align 8, !tbaa !240
  %188 = load i64, ptr %0, align 8, !tbaa !240
  %189 = icmp slt i64 %187, %188
  br i1 %189, label %200, label %190

190:                                              ; preds = %184
  %191 = load i64, ptr %169, align 8, !tbaa !240
  %192 = icmp slt i64 %187, %191
  br i1 %192, label %193, label %201

193:                                              ; preds = %190, %193
  %194 = phi i64 [ %198, %193 ], [ %191, %190 ]
  %195 = phi ptr [ %197, %193 ], [ %169, %190 ]
  %196 = phi ptr [ %195, %193 ], [ %186, %190 ]
  store i64 %194, ptr %196, align 8, !tbaa !240
  %197 = getelementptr inbounds i64, ptr %195, i64 -1
  %198 = load i64, ptr %197, align 8, !tbaa !240
  %199 = icmp slt i64 %187, %198
  br i1 %199, label %193, label %201, !llvm.loop !291

200:                                              ; preds = %184
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull align 8 dereferenceable(96) %0, i64 96, i1 false)
  br label %201

201:                                              ; preds = %193, %200, %190
  %202 = phi ptr [ %0, %200 ], [ %186, %190 ], [ %195, %193 ]
  store i64 %187, ptr %202, align 8, !tbaa !240
  %203 = getelementptr inbounds i64, ptr %0, i64 13
  %204 = load i64, ptr %203, align 8, !tbaa !240
  %205 = load i64, ptr %0, align 8, !tbaa !240
  %206 = icmp slt i64 %204, %205
  br i1 %206, label %217, label %207

207:                                              ; preds = %201
  %208 = load i64, ptr %186, align 8, !tbaa !240
  %209 = icmp slt i64 %204, %208
  br i1 %209, label %210, label %218

210:                                              ; preds = %207, %210
  %211 = phi i64 [ %215, %210 ], [ %208, %207 ]
  %212 = phi ptr [ %214, %210 ], [ %186, %207 ]
  %213 = phi ptr [ %212, %210 ], [ %203, %207 ]
  store i64 %211, ptr %213, align 8, !tbaa !240
  %214 = getelementptr inbounds i64, ptr %212, i64 -1
  %215 = load i64, ptr %214, align 8, !tbaa !240
  %216 = icmp slt i64 %204, %215
  br i1 %216, label %210, label %218, !llvm.loop !291

217:                                              ; preds = %201
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(104) %8, ptr noundef nonnull align 8 dereferenceable(104) %0, i64 104, i1 false)
  br label %218

218:                                              ; preds = %210, %217, %207
  %219 = phi ptr [ %0, %217 ], [ %203, %207 ], [ %212, %210 ]
  store i64 %204, ptr %219, align 8, !tbaa !240
  %220 = getelementptr inbounds i64, ptr %0, i64 14
  %221 = load i64, ptr %220, align 8, !tbaa !240
  %222 = load i64, ptr %0, align 8, !tbaa !240
  %223 = icmp slt i64 %221, %222
  br i1 %223, label %234, label %224

224:                                              ; preds = %218
  %225 = load i64, ptr %203, align 8, !tbaa !240
  %226 = icmp slt i64 %221, %225
  br i1 %226, label %227, label %235

227:                                              ; preds = %224, %227
  %228 = phi i64 [ %232, %227 ], [ %225, %224 ]
  %229 = phi ptr [ %231, %227 ], [ %203, %224 ]
  %230 = phi ptr [ %229, %227 ], [ %220, %224 ]
  store i64 %228, ptr %230, align 8, !tbaa !240
  %231 = getelementptr inbounds i64, ptr %229, i64 -1
  %232 = load i64, ptr %231, align 8, !tbaa !240
  %233 = icmp slt i64 %221, %232
  br i1 %233, label %227, label %235, !llvm.loop !291

234:                                              ; preds = %218
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(112) %8, ptr noundef nonnull align 8 dereferenceable(112) %0, i64 112, i1 false)
  br label %235

235:                                              ; preds = %227, %234, %224
  %236 = phi ptr [ %0, %234 ], [ %220, %224 ], [ %229, %227 ]
  store i64 %221, ptr %236, align 8, !tbaa !240
  %237 = getelementptr inbounds i64, ptr %0, i64 15
  %238 = load i64, ptr %237, align 8, !tbaa !240
  %239 = load i64, ptr %0, align 8, !tbaa !240
  %240 = icmp slt i64 %238, %239
  br i1 %240, label %251, label %241

241:                                              ; preds = %235
  %242 = load i64, ptr %220, align 8, !tbaa !240
  %243 = icmp slt i64 %238, %242
  br i1 %243, label %244, label %252

244:                                              ; preds = %241, %244
  %245 = phi i64 [ %249, %244 ], [ %242, %241 ]
  %246 = phi ptr [ %248, %244 ], [ %220, %241 ]
  %247 = phi ptr [ %246, %244 ], [ %237, %241 ]
  store i64 %245, ptr %247, align 8, !tbaa !240
  %248 = getelementptr inbounds i64, ptr %246, i64 -1
  %249 = load i64, ptr %248, align 8, !tbaa !240
  %250 = icmp slt i64 %238, %249
  br i1 %250, label %244, label %252, !llvm.loop !291

251:                                              ; preds = %235
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %8, ptr noundef nonnull align 8 dereferenceable(120) %0, i64 120, i1 false)
  br label %252

252:                                              ; preds = %244, %251, %241
  %253 = phi ptr [ %0, %251 ], [ %237, %241 ], [ %246, %244 ]
  store i64 %238, ptr %253, align 8, !tbaa !240
  %254 = getelementptr inbounds i64, ptr %0, i64 16
  %255 = icmp eq ptr %254, %1
  br i1 %255, label %307, label %256

256:                                              ; preds = %252, %269
  %257 = phi ptr [ %271, %269 ], [ %254, %252 ]
  %258 = load i64, ptr %257, align 8, !tbaa !240
  %259 = getelementptr inbounds i64, ptr %257, i64 -1
  %260 = load i64, ptr %259, align 8, !tbaa !240
  %261 = icmp slt i64 %258, %260
  br i1 %261, label %262, label %269

262:                                              ; preds = %256, %262
  %263 = phi i64 [ %267, %262 ], [ %260, %256 ]
  %264 = phi ptr [ %266, %262 ], [ %259, %256 ]
  %265 = phi ptr [ %264, %262 ], [ %257, %256 ]
  store i64 %263, ptr %265, align 8, !tbaa !240
  %266 = getelementptr inbounds i64, ptr %264, i64 -1
  %267 = load i64, ptr %266, align 8, !tbaa !240
  %268 = icmp slt i64 %258, %267
  br i1 %268, label %262, label %269, !llvm.loop !291

269:                                              ; preds = %262, %256
  %270 = phi ptr [ %257, %256 ], [ %264, %262 ]
  store i64 %258, ptr %270, align 8, !tbaa !240
  %271 = getelementptr inbounds i64, ptr %257, i64 1
  %272 = icmp eq ptr %271, %1
  br i1 %272, label %307, label %256, !llvm.loop !292

273:                                              ; preds = %2
  %274 = icmp eq ptr %0, %1
  %275 = getelementptr inbounds i64, ptr %0, i64 1
  %276 = icmp eq ptr %275, %1
  %277 = select i1 %274, i1 true, i1 %276
  br i1 %277, label %307, label %278

278:                                              ; preds = %273, %303
  %279 = phi ptr [ %305, %303 ], [ %275, %273 ]
  %280 = phi ptr [ %279, %303 ], [ %0, %273 ]
  %281 = load i64, ptr %279, align 8, !tbaa !240
  %282 = load i64, ptr %0, align 8, !tbaa !240
  %283 = icmp slt i64 %281, %282
  br i1 %283, label %284, label %293

284:                                              ; preds = %278
  %285 = icmp eq ptr %279, %0
  br i1 %285, label %303, label %286

286:                                              ; preds = %284
  %287 = ptrtoint ptr %279 to i64
  %288 = sub i64 %287, %4
  %289 = ashr exact i64 %288, 3
  %290 = sub nsw i64 0, %289
  %291 = getelementptr inbounds i64, ptr %280, i64 2
  %292 = getelementptr inbounds i64, ptr %291, i64 %290
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %292, ptr nonnull align 8 %0, i64 %288, i1 false)
  br label %303

293:                                              ; preds = %278
  %294 = load i64, ptr %280, align 8, !tbaa !240
  %295 = icmp slt i64 %281, %294
  br i1 %295, label %296, label %303

296:                                              ; preds = %293, %296
  %297 = phi i64 [ %301, %296 ], [ %294, %293 ]
  %298 = phi ptr [ %300, %296 ], [ %280, %293 ]
  %299 = phi ptr [ %298, %296 ], [ %279, %293 ]
  store i64 %297, ptr %299, align 8, !tbaa !240
  %300 = getelementptr inbounds i64, ptr %298, i64 -1
  %301 = load i64, ptr %300, align 8, !tbaa !240
  %302 = icmp slt i64 %281, %301
  br i1 %302, label %296, label %303, !llvm.loop !291

303:                                              ; preds = %296, %293, %286, %284
  %304 = phi ptr [ %0, %284 ], [ %0, %286 ], [ %279, %293 ], [ %298, %296 ]
  store i64 %281, ptr %304, align 8, !tbaa !240
  %305 = getelementptr inbounds i64, ptr %279, i64 1
  %306 = icmp eq ptr %305, %1
  br i1 %306, label %307, label %278, !llvm.loop !293

307:                                              ; preds = %303, %269, %273, %252
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_(ptr %0, ptr %1, ptr noundef nonnull align 1 dereferenceable(1) %2) local_unnamed_addr #3 comdat {
  %4 = ptrtoint ptr %1 to i64
  %5 = ptrtoint ptr %0 to i64
  %6 = sub i64 %4, %5
  %7 = freeze i64 %6
  %8 = icmp slt i64 %7, 16
  br i1 %8, label %101, label %9

9:                                                ; preds = %3
  %10 = lshr exact i64 %7, 3
  %11 = add nsw i64 %10, -2
  %12 = lshr i64 %11, 1
  %13 = add nsw i64 %10, -1
  %14 = lshr i64 %13, 1
  %15 = and i64 %7, 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %9
  %18 = or i64 %11, 1
  %19 = getelementptr inbounds i64, ptr %0, i64 %18
  %20 = getelementptr inbounds i64, ptr %0, i64 %12
  br label %58

21:                                               ; preds = %9, %53
  %22 = phi i64 [ %57, %53 ], [ %12, %9 ]
  %23 = getelementptr inbounds i64, ptr %0, i64 %22
  %24 = load i64, ptr %23, align 8, !tbaa !240
  %25 = icmp sgt i64 %14, %22
  br i1 %25, label %26, label %53

26:                                               ; preds = %21, %26
  %27 = phi i64 [ %36, %26 ], [ %22, %21 ]
  %28 = shl i64 %27, 1
  %29 = add i64 %28, 2
  %30 = getelementptr inbounds i64, ptr %0, i64 %29
  %31 = or i64 %28, 1
  %32 = getelementptr inbounds i64, ptr %0, i64 %31
  %33 = load i64, ptr %30, align 8, !tbaa !240
  %34 = load i64, ptr %32, align 8, !tbaa !240
  %35 = icmp slt i64 %33, %34
  %36 = select i1 %35, i64 %31, i64 %29
  %37 = getelementptr inbounds i64, ptr %0, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !240
  %39 = getelementptr inbounds i64, ptr %0, i64 %27
  store i64 %38, ptr %39, align 8, !tbaa !240
  %40 = icmp slt i64 %36, %14
  br i1 %40, label %26, label %41, !llvm.loop !284

41:                                               ; preds = %26
  %42 = icmp sgt i64 %36, %22
  br i1 %42, label %43, label %53

43:                                               ; preds = %41, %50
  %44 = phi i64 [ %46, %50 ], [ %36, %41 ]
  %45 = add nsw i64 %44, -1
  %46 = sdiv i64 %45, 2
  %47 = getelementptr inbounds i64, ptr %0, i64 %46
  %48 = load i64, ptr %47, align 8, !tbaa !240
  %49 = icmp slt i64 %48, %24
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = getelementptr inbounds i64, ptr %0, i64 %44
  store i64 %48, ptr %51, align 8, !tbaa !240
  %52 = icmp sgt i64 %46, %22
  br i1 %52, label %43, label %53, !llvm.loop !285

53:                                               ; preds = %43, %50, %21, %41
  %54 = phi i64 [ %36, %41 ], [ %22, %21 ], [ %46, %50 ], [ %44, %43 ]
  %55 = getelementptr inbounds i64, ptr %0, i64 %54
  store i64 %24, ptr %55, align 8, !tbaa !240
  %56 = icmp eq i64 %22, 0
  %57 = add nsw i64 %22, -1
  br i1 %56, label %101, label %21, !llvm.loop !294

58:                                               ; preds = %17, %96
  %59 = phi i64 [ %100, %96 ], [ %12, %17 ]
  %60 = getelementptr inbounds i64, ptr %0, i64 %59
  %61 = load i64, ptr %60, align 8, !tbaa !240
  %62 = icmp sgt i64 %14, %59
  br i1 %62, label %63, label %78

63:                                               ; preds = %58, %63
  %64 = phi i64 [ %73, %63 ], [ %59, %58 ]
  %65 = shl i64 %64, 1
  %66 = add i64 %65, 2
  %67 = getelementptr inbounds i64, ptr %0, i64 %66
  %68 = or i64 %65, 1
  %69 = getelementptr inbounds i64, ptr %0, i64 %68
  %70 = load i64, ptr %67, align 8, !tbaa !240
  %71 = load i64, ptr %69, align 8, !tbaa !240
  %72 = icmp slt i64 %70, %71
  %73 = select i1 %72, i64 %68, i64 %66
  %74 = getelementptr inbounds i64, ptr %0, i64 %73
  %75 = load i64, ptr %74, align 8, !tbaa !240
  %76 = getelementptr inbounds i64, ptr %0, i64 %64
  store i64 %75, ptr %76, align 8, !tbaa !240
  %77 = icmp slt i64 %73, %14
  br i1 %77, label %63, label %78, !llvm.loop !284

78:                                               ; preds = %63, %58
  %79 = phi i64 [ %59, %58 ], [ %73, %63 ]
  %80 = icmp eq i64 %79, %12
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  %82 = load i64, ptr %19, align 8, !tbaa !240
  store i64 %82, ptr %20, align 8, !tbaa !240
  br label %83

83:                                               ; preds = %81, %78
  %84 = phi i64 [ %18, %81 ], [ %79, %78 ]
  %85 = icmp sgt i64 %84, %59
  br i1 %85, label %86, label %96

86:                                               ; preds = %83, %93
  %87 = phi i64 [ %89, %93 ], [ %84, %83 ]
  %88 = add nsw i64 %87, -1
  %89 = sdiv i64 %88, 2
  %90 = getelementptr inbounds i64, ptr %0, i64 %89
  %91 = load i64, ptr %90, align 8, !tbaa !240
  %92 = icmp slt i64 %91, %61
  br i1 %92, label %93, label %96

93:                                               ; preds = %86
  %94 = getelementptr inbounds i64, ptr %0, i64 %87
  store i64 %91, ptr %94, align 8, !tbaa !240
  %95 = icmp sgt i64 %89, %59
  br i1 %95, label %86, label %96, !llvm.loop !285

96:                                               ; preds = %86, %93, %83
  %97 = phi i64 [ %84, %83 ], [ %89, %93 ], [ %87, %86 ]
  %98 = getelementptr inbounds i64, ptr %0, i64 %97
  store i64 %61, ptr %98, align 8, !tbaa !240
  %99 = icmp eq i64 %59, 0
  %100 = add nsw i64 %59, -1
  br i1 %99, label %101, label %58, !llvm.loop !294

101:                                              ; preds = %53, %96, %3
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr %0, ptr %1, i64 noundef %2) local_unnamed_addr #3 comdat {
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %5 = ptrtoint ptr %0 to i64
  %6 = ptrtoint ptr %1 to i64
  %7 = sub i64 %6, %5
  %8 = icmp sgt i64 %7, 64
  br i1 %8, label %9, label %123

9:                                                ; preds = %3
  %10 = getelementptr inbounds i32, ptr %0, i64 1
  br label %11

11:                                               ; preds = %9, %119
  %12 = phi i64 [ %7, %9 ], [ %121, %119 ]
  %13 = phi i64 [ %2, %9 ], [ %75, %119 ]
  %14 = phi ptr [ %1, %9 ], [ %107, %119 ]
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %16, label %74

16:                                               ; preds = %11
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4)
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_(ptr %0, ptr %14, ptr noundef nonnull align 1 dereferenceable(1) %4)
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  br label %17

17:                                               ; preds = %16, %70
  %18 = phi ptr [ %19, %70 ], [ %14, %16 ]
  %19 = getelementptr inbounds i32, ptr %18, i64 -1
  %20 = load i32, ptr %19, align 4, !tbaa !67
  %21 = load i32, ptr %0, align 4, !tbaa !67
  store i32 %21, ptr %19, align 4, !tbaa !67
  %22 = ptrtoint ptr %19 to i64
  %23 = sub i64 %22, %5
  %24 = ashr exact i64 %23, 2
  %25 = add nsw i64 %24, -1
  %26 = sdiv i64 %25, 2
  %27 = icmp sgt i64 %23, 8
  br i1 %27, label %28, label %43

28:                                               ; preds = %17, %28
  %29 = phi i64 [ %38, %28 ], [ 0, %17 ]
  %30 = shl i64 %29, 1
  %31 = add i64 %30, 2
  %32 = getelementptr inbounds i32, ptr %0, i64 %31
  %33 = or i64 %30, 1
  %34 = getelementptr inbounds i32, ptr %0, i64 %33
  %35 = load i32, ptr %32, align 4, !tbaa !67
  %36 = load i32, ptr %34, align 4, !tbaa !67
  %37 = icmp slt i32 %35, %36
  %38 = select i1 %37, i64 %33, i64 %31
  %39 = getelementptr inbounds i32, ptr %0, i64 %38
  %40 = load i32, ptr %39, align 4, !tbaa !67
  %41 = getelementptr inbounds i32, ptr %0, i64 %29
  store i32 %40, ptr %41, align 4, !tbaa !67
  %42 = icmp slt i64 %38, %26
  br i1 %42, label %28, label %43, !llvm.loop !295

43:                                               ; preds = %28, %17
  %44 = phi i64 [ 0, %17 ], [ %38, %28 ]
  %45 = and i64 %23, 4
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %43
  %48 = add nsw i64 %24, -2
  %49 = sdiv i64 %48, 2
  %50 = icmp eq i64 %44, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = shl i64 %44, 1
  %53 = or i64 %52, 1
  %54 = getelementptr inbounds i32, ptr %0, i64 %53
  %55 = load i32, ptr %54, align 4, !tbaa !67
  %56 = getelementptr inbounds i32, ptr %0, i64 %44
  store i32 %55, ptr %56, align 4, !tbaa !67
  br label %57

57:                                               ; preds = %51, %47, %43
  %58 = phi i64 [ %53, %51 ], [ %44, %47 ], [ %44, %43 ]
  %59 = icmp sgt i64 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %57, %67
  %61 = phi i64 [ %63, %67 ], [ %58, %57 ]
  %62 = add nsw i64 %61, -1
  %63 = sdiv i64 %62, 2
  %64 = getelementptr inbounds i32, ptr %0, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !67
  %66 = icmp slt i32 %65, %20
  br i1 %66, label %67, label %70

67:                                               ; preds = %60
  %68 = getelementptr inbounds i32, ptr %0, i64 %61
  store i32 %65, ptr %68, align 4, !tbaa !67
  %69 = icmp sgt i64 %61, 2
  br i1 %69, label %60, label %70, !llvm.loop !296

70:                                               ; preds = %67, %60, %57
  %71 = phi i64 [ %58, %57 ], [ %61, %60 ], [ %63, %67 ]
  %72 = getelementptr inbounds i32, ptr %0, i64 %71
  store i32 %20, ptr %72, align 4, !tbaa !67
  %73 = icmp sgt i64 %23, 4
  br i1 %73, label %17, label %123, !llvm.loop !297

74:                                               ; preds = %11
  %75 = add nsw i64 %13, -1
  %76 = lshr i64 %12, 3
  %77 = getelementptr inbounds i32, ptr %0, i64 %76
  %78 = getelementptr inbounds i32, ptr %14, i64 -1
  %79 = load i32, ptr %10, align 4, !tbaa !67
  %80 = load i32, ptr %77, align 4, !tbaa !67
  %81 = icmp slt i32 %79, %80
  %82 = load i32, ptr %78, align 4, !tbaa !67
  br i1 %81, label %83, label %92

83:                                               ; preds = %74
  %84 = icmp slt i32 %80, %82
  br i1 %84, label %85, label %87

85:                                               ; preds = %83
  %86 = load i32, ptr %0, align 4, !tbaa !67
  store i32 %80, ptr %0, align 4, !tbaa !67
  store i32 %86, ptr %77, align 4, !tbaa !67
  br label %101

87:                                               ; preds = %83
  %88 = icmp slt i32 %79, %82
  %89 = load i32, ptr %0, align 4, !tbaa !67
  br i1 %88, label %90, label %91

90:                                               ; preds = %87
  store i32 %82, ptr %0, align 4, !tbaa !67
  store i32 %89, ptr %78, align 4, !tbaa !67
  br label %101

91:                                               ; preds = %87
  store i32 %79, ptr %0, align 4, !tbaa !67
  store i32 %89, ptr %10, align 4, !tbaa !67
  br label %101

92:                                               ; preds = %74
  %93 = icmp slt i32 %79, %82
  br i1 %93, label %94, label %96

94:                                               ; preds = %92
  %95 = load i32, ptr %0, align 4, !tbaa !67
  store i32 %79, ptr %0, align 4, !tbaa !67
  store i32 %95, ptr %10, align 4, !tbaa !67
  br label %101

96:                                               ; preds = %92
  %97 = icmp slt i32 %80, %82
  %98 = load i32, ptr %0, align 4, !tbaa !67
  br i1 %97, label %99, label %100

99:                                               ; preds = %96
  store i32 %82, ptr %0, align 4, !tbaa !67
  store i32 %98, ptr %78, align 4, !tbaa !67
  br label %101

100:                                              ; preds = %96
  store i32 %80, ptr %0, align 4, !tbaa !67
  store i32 %98, ptr %77, align 4, !tbaa !67
  br label %101

101:                                              ; preds = %100, %99, %94, %91, %90, %85
  br label %102

102:                                              ; preds = %101, %118
  %103 = phi ptr [ %110, %118 ], [ %10, %101 ]
  %104 = phi ptr [ %113, %118 ], [ %14, %101 ]
  %105 = load i32, ptr %0, align 4, !tbaa !67
  br label %106

106:                                              ; preds = %106, %102
  %107 = phi ptr [ %103, %102 ], [ %110, %106 ]
  %108 = load i32, ptr %107, align 4, !tbaa !67
  %109 = icmp slt i32 %108, %105
  %110 = getelementptr inbounds i32, ptr %107, i64 1
  br i1 %109, label %106, label %111, !llvm.loop !298

111:                                              ; preds = %106, %111
  %112 = phi ptr [ %113, %111 ], [ %104, %106 ]
  %113 = getelementptr inbounds i32, ptr %112, i64 -1
  %114 = load i32, ptr %113, align 4, !tbaa !67
  %115 = icmp slt i32 %105, %114
  br i1 %115, label %111, label %116, !llvm.loop !299

116:                                              ; preds = %111
  %117 = icmp ult ptr %107, %113
  br i1 %117, label %118, label %119

118:                                              ; preds = %116
  store i32 %114, ptr %107, align 4, !tbaa !67
  store i32 %108, ptr %113, align 4, !tbaa !67
  br label %102, !llvm.loop !300

119:                                              ; preds = %116
  tail call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr nonnull %107, ptr %14, i64 noundef %75)
  %120 = ptrtoint ptr %107 to i64
  %121 = sub i64 %120, %5
  %122 = icmp sgt i64 %121, 64
  br i1 %122, label %11, label %123, !llvm.loop !301

123:                                              ; preds = %119, %70, %3
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %0, ptr %1) local_unnamed_addr #3 comdat {
  %3 = ptrtoint ptr %1 to i64
  %4 = ptrtoint ptr %0 to i64
  %5 = sub i64 %3, %4
  %6 = icmp sgt i64 %5, 64
  br i1 %6, label %7, label %274

7:                                                ; preds = %2
  %8 = getelementptr i8, ptr %0, i64 4
  %9 = load i32, ptr %8, align 4, !tbaa !67
  %10 = load i32, ptr %0, align 4, !tbaa !67
  %11 = icmp slt i32 %9, %10
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = load i32, ptr %0, align 4
  store i32 %13, ptr %8, align 4
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi ptr [ %0, %12 ], [ %8, %7 ]
  store i32 %9, ptr %15, align 4, !tbaa !67
  %16 = getelementptr inbounds i32, ptr %0, i64 2
  %17 = load i32, ptr %16, align 4, !tbaa !67
  %18 = load i32, ptr %0, align 4, !tbaa !67
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %30, label %20

20:                                               ; preds = %14
  %21 = load i32, ptr %8, align 4, !tbaa !67
  %22 = icmp slt i32 %17, %21
  br i1 %22, label %23, label %32

23:                                               ; preds = %20, %23
  %24 = phi i32 [ %28, %23 ], [ %21, %20 ]
  %25 = phi ptr [ %27, %23 ], [ %8, %20 ]
  %26 = phi ptr [ %25, %23 ], [ %16, %20 ]
  store i32 %24, ptr %26, align 4, !tbaa !67
  %27 = getelementptr inbounds i32, ptr %25, i64 -1
  %28 = load i32, ptr %27, align 4, !tbaa !67
  %29 = icmp slt i32 %17, %28
  br i1 %29, label %23, label %32, !llvm.loop !302

30:                                               ; preds = %14
  %31 = load i64, ptr %0, align 4
  store i64 %31, ptr %8, align 4
  br label %32

32:                                               ; preds = %23, %30, %20
  %33 = phi ptr [ %0, %30 ], [ %16, %20 ], [ %25, %23 ]
  store i32 %17, ptr %33, align 4, !tbaa !67
  %34 = getelementptr inbounds i32, ptr %0, i64 3
  %35 = load i32, ptr %34, align 4, !tbaa !67
  %36 = load i32, ptr %0, align 4, !tbaa !67
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  %39 = load i32, ptr %16, align 4, !tbaa !67
  %40 = icmp slt i32 %35, %39
  br i1 %40, label %41, label %49

41:                                               ; preds = %38, %41
  %42 = phi i32 [ %46, %41 ], [ %39, %38 ]
  %43 = phi ptr [ %45, %41 ], [ %16, %38 ]
  %44 = phi ptr [ %43, %41 ], [ %34, %38 ]
  store i32 %42, ptr %44, align 4, !tbaa !67
  %45 = getelementptr inbounds i32, ptr %43, i64 -1
  %46 = load i32, ptr %45, align 4, !tbaa !67
  %47 = icmp slt i32 %35, %46
  br i1 %47, label %41, label %49, !llvm.loop !302

48:                                               ; preds = %32
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(12) %8, ptr noundef nonnull align 4 dereferenceable(12) %0, i64 12, i1 false)
  br label %49

49:                                               ; preds = %41, %48, %38
  %50 = phi ptr [ %0, %48 ], [ %34, %38 ], [ %43, %41 ]
  store i32 %35, ptr %50, align 4, !tbaa !67
  %51 = getelementptr inbounds i32, ptr %0, i64 4
  %52 = load i32, ptr %51, align 4, !tbaa !67
  %53 = load i32, ptr %0, align 4, !tbaa !67
  %54 = icmp slt i32 %52, %53
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  %56 = load i32, ptr %34, align 4, !tbaa !67
  %57 = icmp slt i32 %52, %56
  br i1 %57, label %58, label %66

58:                                               ; preds = %55, %58
  %59 = phi i32 [ %63, %58 ], [ %56, %55 ]
  %60 = phi ptr [ %62, %58 ], [ %34, %55 ]
  %61 = phi ptr [ %60, %58 ], [ %51, %55 ]
  store i32 %59, ptr %61, align 4, !tbaa !67
  %62 = getelementptr inbounds i32, ptr %60, i64 -1
  %63 = load i32, ptr %62, align 4, !tbaa !67
  %64 = icmp slt i32 %52, %63
  br i1 %64, label %58, label %66, !llvm.loop !302

65:                                               ; preds = %49
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %8, ptr noundef nonnull align 4 dereferenceable(16) %0, i64 16, i1 false)
  br label %66

66:                                               ; preds = %58, %65, %55
  %67 = phi ptr [ %0, %65 ], [ %51, %55 ], [ %60, %58 ]
  store i32 %52, ptr %67, align 4, !tbaa !67
  %68 = getelementptr inbounds i32, ptr %0, i64 5
  %69 = load i32, ptr %68, align 4, !tbaa !67
  %70 = load i32, ptr %0, align 4, !tbaa !67
  %71 = icmp slt i32 %69, %70
  br i1 %71, label %82, label %72

72:                                               ; preds = %66
  %73 = load i32, ptr %51, align 4, !tbaa !67
  %74 = icmp slt i32 %69, %73
  br i1 %74, label %75, label %83

75:                                               ; preds = %72, %75
  %76 = phi i32 [ %80, %75 ], [ %73, %72 ]
  %77 = phi ptr [ %79, %75 ], [ %51, %72 ]
  %78 = phi ptr [ %77, %75 ], [ %68, %72 ]
  store i32 %76, ptr %78, align 4, !tbaa !67
  %79 = getelementptr inbounds i32, ptr %77, i64 -1
  %80 = load i32, ptr %79, align 4, !tbaa !67
  %81 = icmp slt i32 %69, %80
  br i1 %81, label %75, label %83, !llvm.loop !302

82:                                               ; preds = %66
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %8, ptr noundef nonnull align 4 dereferenceable(20) %0, i64 20, i1 false)
  br label %83

83:                                               ; preds = %75, %82, %72
  %84 = phi ptr [ %0, %82 ], [ %68, %72 ], [ %77, %75 ]
  store i32 %69, ptr %84, align 4, !tbaa !67
  %85 = getelementptr inbounds i32, ptr %0, i64 6
  %86 = load i32, ptr %85, align 4, !tbaa !67
  %87 = load i32, ptr %0, align 4, !tbaa !67
  %88 = icmp slt i32 %86, %87
  br i1 %88, label %99, label %89

89:                                               ; preds = %83
  %90 = load i32, ptr %68, align 4, !tbaa !67
  %91 = icmp slt i32 %86, %90
  br i1 %91, label %92, label %100

92:                                               ; preds = %89, %92
  %93 = phi i32 [ %97, %92 ], [ %90, %89 ]
  %94 = phi ptr [ %96, %92 ], [ %68, %89 ]
  %95 = phi ptr [ %94, %92 ], [ %85, %89 ]
  store i32 %93, ptr %95, align 4, !tbaa !67
  %96 = getelementptr inbounds i32, ptr %94, i64 -1
  %97 = load i32, ptr %96, align 4, !tbaa !67
  %98 = icmp slt i32 %86, %97
  br i1 %98, label %92, label %100, !llvm.loop !302

99:                                               ; preds = %83
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(24) %8, ptr noundef nonnull align 4 dereferenceable(24) %0, i64 24, i1 false)
  br label %100

100:                                              ; preds = %92, %99, %89
  %101 = phi ptr [ %0, %99 ], [ %85, %89 ], [ %94, %92 ]
  store i32 %86, ptr %101, align 4, !tbaa !67
  %102 = getelementptr inbounds i32, ptr %0, i64 7
  %103 = load i32, ptr %102, align 4, !tbaa !67
  %104 = load i32, ptr %0, align 4, !tbaa !67
  %105 = icmp slt i32 %103, %104
  br i1 %105, label %116, label %106

106:                                              ; preds = %100
  %107 = load i32, ptr %85, align 4, !tbaa !67
  %108 = icmp slt i32 %103, %107
  br i1 %108, label %109, label %117

109:                                              ; preds = %106, %109
  %110 = phi i32 [ %114, %109 ], [ %107, %106 ]
  %111 = phi ptr [ %113, %109 ], [ %85, %106 ]
  %112 = phi ptr [ %111, %109 ], [ %102, %106 ]
  store i32 %110, ptr %112, align 4, !tbaa !67
  %113 = getelementptr inbounds i32, ptr %111, i64 -1
  %114 = load i32, ptr %113, align 4, !tbaa !67
  %115 = icmp slt i32 %103, %114
  br i1 %115, label %109, label %117, !llvm.loop !302

116:                                              ; preds = %100
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(28) %8, ptr noundef nonnull align 4 dereferenceable(28) %0, i64 28, i1 false)
  br label %117

117:                                              ; preds = %109, %116, %106
  %118 = phi ptr [ %0, %116 ], [ %102, %106 ], [ %111, %109 ]
  store i32 %103, ptr %118, align 4, !tbaa !67
  %119 = getelementptr inbounds i32, ptr %0, i64 8
  %120 = load i32, ptr %119, align 4, !tbaa !67
  %121 = load i32, ptr %0, align 4, !tbaa !67
  %122 = icmp slt i32 %120, %121
  br i1 %122, label %133, label %123

123:                                              ; preds = %117
  %124 = load i32, ptr %102, align 4, !tbaa !67
  %125 = icmp slt i32 %120, %124
  br i1 %125, label %126, label %134

126:                                              ; preds = %123, %126
  %127 = phi i32 [ %131, %126 ], [ %124, %123 ]
  %128 = phi ptr [ %130, %126 ], [ %102, %123 ]
  %129 = phi ptr [ %128, %126 ], [ %119, %123 ]
  store i32 %127, ptr %129, align 4, !tbaa !67
  %130 = getelementptr inbounds i32, ptr %128, i64 -1
  %131 = load i32, ptr %130, align 4, !tbaa !67
  %132 = icmp slt i32 %120, %131
  br i1 %132, label %126, label %134, !llvm.loop !302

133:                                              ; preds = %117
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %8, ptr noundef nonnull align 4 dereferenceable(32) %0, i64 32, i1 false)
  br label %134

134:                                              ; preds = %126, %133, %123
  %135 = phi ptr [ %0, %133 ], [ %119, %123 ], [ %128, %126 ]
  store i32 %120, ptr %135, align 4, !tbaa !67
  %136 = getelementptr inbounds i32, ptr %0, i64 9
  %137 = load i32, ptr %136, align 4, !tbaa !67
  %138 = load i32, ptr %0, align 4, !tbaa !67
  %139 = icmp slt i32 %137, %138
  br i1 %139, label %150, label %140

140:                                              ; preds = %134
  %141 = load i32, ptr %119, align 4, !tbaa !67
  %142 = icmp slt i32 %137, %141
  br i1 %142, label %143, label %151

143:                                              ; preds = %140, %143
  %144 = phi i32 [ %148, %143 ], [ %141, %140 ]
  %145 = phi ptr [ %147, %143 ], [ %119, %140 ]
  %146 = phi ptr [ %145, %143 ], [ %136, %140 ]
  store i32 %144, ptr %146, align 4, !tbaa !67
  %147 = getelementptr inbounds i32, ptr %145, i64 -1
  %148 = load i32, ptr %147, align 4, !tbaa !67
  %149 = icmp slt i32 %137, %148
  br i1 %149, label %143, label %151, !llvm.loop !302

150:                                              ; preds = %134
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(36) %8, ptr noundef nonnull align 4 dereferenceable(36) %0, i64 36, i1 false)
  br label %151

151:                                              ; preds = %143, %150, %140
  %152 = phi ptr [ %0, %150 ], [ %136, %140 ], [ %145, %143 ]
  store i32 %137, ptr %152, align 4, !tbaa !67
  %153 = getelementptr inbounds i32, ptr %0, i64 10
  %154 = load i32, ptr %153, align 4, !tbaa !67
  %155 = load i32, ptr %0, align 4, !tbaa !67
  %156 = icmp slt i32 %154, %155
  br i1 %156, label %167, label %157

157:                                              ; preds = %151
  %158 = load i32, ptr %136, align 4, !tbaa !67
  %159 = icmp slt i32 %154, %158
  br i1 %159, label %160, label %168

160:                                              ; preds = %157, %160
  %161 = phi i32 [ %165, %160 ], [ %158, %157 ]
  %162 = phi ptr [ %164, %160 ], [ %136, %157 ]
  %163 = phi ptr [ %162, %160 ], [ %153, %157 ]
  store i32 %161, ptr %163, align 4, !tbaa !67
  %164 = getelementptr inbounds i32, ptr %162, i64 -1
  %165 = load i32, ptr %164, align 4, !tbaa !67
  %166 = icmp slt i32 %154, %165
  br i1 %166, label %160, label %168, !llvm.loop !302

167:                                              ; preds = %151
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(40) %8, ptr noundef nonnull align 4 dereferenceable(40) %0, i64 40, i1 false)
  br label %168

168:                                              ; preds = %160, %167, %157
  %169 = phi ptr [ %0, %167 ], [ %153, %157 ], [ %162, %160 ]
  store i32 %154, ptr %169, align 4, !tbaa !67
  %170 = getelementptr inbounds i32, ptr %0, i64 11
  %171 = load i32, ptr %170, align 4, !tbaa !67
  %172 = load i32, ptr %0, align 4, !tbaa !67
  %173 = icmp slt i32 %171, %172
  br i1 %173, label %184, label %174

174:                                              ; preds = %168
  %175 = load i32, ptr %153, align 4, !tbaa !67
  %176 = icmp slt i32 %171, %175
  br i1 %176, label %177, label %185

177:                                              ; preds = %174, %177
  %178 = phi i32 [ %182, %177 ], [ %175, %174 ]
  %179 = phi ptr [ %181, %177 ], [ %153, %174 ]
  %180 = phi ptr [ %179, %177 ], [ %170, %174 ]
  store i32 %178, ptr %180, align 4, !tbaa !67
  %181 = getelementptr inbounds i32, ptr %179, i64 -1
  %182 = load i32, ptr %181, align 4, !tbaa !67
  %183 = icmp slt i32 %171, %182
  br i1 %183, label %177, label %185, !llvm.loop !302

184:                                              ; preds = %168
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(44) %8, ptr noundef nonnull align 4 dereferenceable(44) %0, i64 44, i1 false)
  br label %185

185:                                              ; preds = %177, %184, %174
  %186 = phi ptr [ %0, %184 ], [ %170, %174 ], [ %179, %177 ]
  store i32 %171, ptr %186, align 4, !tbaa !67
  %187 = getelementptr inbounds i32, ptr %0, i64 12
  %188 = load i32, ptr %187, align 4, !tbaa !67
  %189 = load i32, ptr %0, align 4, !tbaa !67
  %190 = icmp slt i32 %188, %189
  br i1 %190, label %201, label %191

191:                                              ; preds = %185
  %192 = load i32, ptr %170, align 4, !tbaa !67
  %193 = icmp slt i32 %188, %192
  br i1 %193, label %194, label %202

194:                                              ; preds = %191, %194
  %195 = phi i32 [ %199, %194 ], [ %192, %191 ]
  %196 = phi ptr [ %198, %194 ], [ %170, %191 ]
  %197 = phi ptr [ %196, %194 ], [ %187, %191 ]
  store i32 %195, ptr %197, align 4, !tbaa !67
  %198 = getelementptr inbounds i32, ptr %196, i64 -1
  %199 = load i32, ptr %198, align 4, !tbaa !67
  %200 = icmp slt i32 %188, %199
  br i1 %200, label %194, label %202, !llvm.loop !302

201:                                              ; preds = %185
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) %8, ptr noundef nonnull align 4 dereferenceable(48) %0, i64 48, i1 false)
  br label %202

202:                                              ; preds = %194, %201, %191
  %203 = phi ptr [ %0, %201 ], [ %187, %191 ], [ %196, %194 ]
  store i32 %188, ptr %203, align 4, !tbaa !67
  %204 = getelementptr inbounds i32, ptr %0, i64 13
  %205 = load i32, ptr %204, align 4, !tbaa !67
  %206 = load i32, ptr %0, align 4, !tbaa !67
  %207 = icmp slt i32 %205, %206
  br i1 %207, label %218, label %208

208:                                              ; preds = %202
  %209 = load i32, ptr %187, align 4, !tbaa !67
  %210 = icmp slt i32 %205, %209
  br i1 %210, label %211, label %219

211:                                              ; preds = %208, %211
  %212 = phi i32 [ %216, %211 ], [ %209, %208 ]
  %213 = phi ptr [ %215, %211 ], [ %187, %208 ]
  %214 = phi ptr [ %213, %211 ], [ %204, %208 ]
  store i32 %212, ptr %214, align 4, !tbaa !67
  %215 = getelementptr inbounds i32, ptr %213, i64 -1
  %216 = load i32, ptr %215, align 4, !tbaa !67
  %217 = icmp slt i32 %205, %216
  br i1 %217, label %211, label %219, !llvm.loop !302

218:                                              ; preds = %202
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(52) %8, ptr noundef nonnull align 4 dereferenceable(52) %0, i64 52, i1 false)
  br label %219

219:                                              ; preds = %211, %218, %208
  %220 = phi ptr [ %0, %218 ], [ %204, %208 ], [ %213, %211 ]
  store i32 %205, ptr %220, align 4, !tbaa !67
  %221 = getelementptr inbounds i32, ptr %0, i64 14
  %222 = load i32, ptr %221, align 4, !tbaa !67
  %223 = load i32, ptr %0, align 4, !tbaa !67
  %224 = icmp slt i32 %222, %223
  br i1 %224, label %235, label %225

225:                                              ; preds = %219
  %226 = load i32, ptr %204, align 4, !tbaa !67
  %227 = icmp slt i32 %222, %226
  br i1 %227, label %228, label %236

228:                                              ; preds = %225, %228
  %229 = phi i32 [ %233, %228 ], [ %226, %225 ]
  %230 = phi ptr [ %232, %228 ], [ %204, %225 ]
  %231 = phi ptr [ %230, %228 ], [ %221, %225 ]
  store i32 %229, ptr %231, align 4, !tbaa !67
  %232 = getelementptr inbounds i32, ptr %230, i64 -1
  %233 = load i32, ptr %232, align 4, !tbaa !67
  %234 = icmp slt i32 %222, %233
  br i1 %234, label %228, label %236, !llvm.loop !302

235:                                              ; preds = %219
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(56) %8, ptr noundef nonnull align 4 dereferenceable(56) %0, i64 56, i1 false)
  br label %236

236:                                              ; preds = %228, %235, %225
  %237 = phi ptr [ %0, %235 ], [ %221, %225 ], [ %230, %228 ]
  store i32 %222, ptr %237, align 4, !tbaa !67
  %238 = getelementptr inbounds i32, ptr %0, i64 15
  %239 = load i32, ptr %238, align 4, !tbaa !67
  %240 = load i32, ptr %0, align 4, !tbaa !67
  %241 = icmp slt i32 %239, %240
  br i1 %241, label %252, label %242

242:                                              ; preds = %236
  %243 = load i32, ptr %221, align 4, !tbaa !67
  %244 = icmp slt i32 %239, %243
  br i1 %244, label %245, label %253

245:                                              ; preds = %242, %245
  %246 = phi i32 [ %250, %245 ], [ %243, %242 ]
  %247 = phi ptr [ %249, %245 ], [ %221, %242 ]
  %248 = phi ptr [ %247, %245 ], [ %238, %242 ]
  store i32 %246, ptr %248, align 4, !tbaa !67
  %249 = getelementptr inbounds i32, ptr %247, i64 -1
  %250 = load i32, ptr %249, align 4, !tbaa !67
  %251 = icmp slt i32 %239, %250
  br i1 %251, label %245, label %253, !llvm.loop !302

252:                                              ; preds = %236
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(60) %8, ptr noundef nonnull align 4 dereferenceable(60) %0, i64 60, i1 false)
  br label %253

253:                                              ; preds = %245, %252, %242
  %254 = phi ptr [ %0, %252 ], [ %238, %242 ], [ %247, %245 ]
  store i32 %239, ptr %254, align 4, !tbaa !67
  %255 = getelementptr inbounds i32, ptr %0, i64 16
  %256 = icmp eq ptr %255, %1
  br i1 %256, label %308, label %257

257:                                              ; preds = %253, %270
  %258 = phi ptr [ %272, %270 ], [ %255, %253 ]
  %259 = load i32, ptr %258, align 4, !tbaa !67
  %260 = getelementptr inbounds i32, ptr %258, i64 -1
  %261 = load i32, ptr %260, align 4, !tbaa !67
  %262 = icmp slt i32 %259, %261
  br i1 %262, label %263, label %270

263:                                              ; preds = %257, %263
  %264 = phi i32 [ %268, %263 ], [ %261, %257 ]
  %265 = phi ptr [ %267, %263 ], [ %260, %257 ]
  %266 = phi ptr [ %265, %263 ], [ %258, %257 ]
  store i32 %264, ptr %266, align 4, !tbaa !67
  %267 = getelementptr inbounds i32, ptr %265, i64 -1
  %268 = load i32, ptr %267, align 4, !tbaa !67
  %269 = icmp slt i32 %259, %268
  br i1 %269, label %263, label %270, !llvm.loop !302

270:                                              ; preds = %263, %257
  %271 = phi ptr [ %258, %257 ], [ %265, %263 ]
  store i32 %259, ptr %271, align 4, !tbaa !67
  %272 = getelementptr inbounds i32, ptr %258, i64 1
  %273 = icmp eq ptr %272, %1
  br i1 %273, label %308, label %257, !llvm.loop !303

274:                                              ; preds = %2
  %275 = icmp eq ptr %0, %1
  %276 = getelementptr inbounds i32, ptr %0, i64 1
  %277 = icmp eq ptr %276, %1
  %278 = select i1 %275, i1 true, i1 %277
  br i1 %278, label %308, label %279

279:                                              ; preds = %274, %304
  %280 = phi ptr [ %306, %304 ], [ %276, %274 ]
  %281 = phi ptr [ %280, %304 ], [ %0, %274 ]
  %282 = load i32, ptr %280, align 4, !tbaa !67
  %283 = load i32, ptr %0, align 4, !tbaa !67
  %284 = icmp slt i32 %282, %283
  br i1 %284, label %285, label %294

285:                                              ; preds = %279
  %286 = icmp eq ptr %280, %0
  br i1 %286, label %304, label %287

287:                                              ; preds = %285
  %288 = ptrtoint ptr %280 to i64
  %289 = sub i64 %288, %4
  %290 = ashr exact i64 %289, 2
  %291 = sub nsw i64 0, %290
  %292 = getelementptr inbounds i32, ptr %281, i64 2
  %293 = getelementptr inbounds i32, ptr %292, i64 %291
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %293, ptr nonnull align 4 %0, i64 %289, i1 false)
  br label %304

294:                                              ; preds = %279
  %295 = load i32, ptr %281, align 4, !tbaa !67
  %296 = icmp slt i32 %282, %295
  br i1 %296, label %297, label %304

297:                                              ; preds = %294, %297
  %298 = phi i32 [ %302, %297 ], [ %295, %294 ]
  %299 = phi ptr [ %301, %297 ], [ %281, %294 ]
  %300 = phi ptr [ %299, %297 ], [ %280, %294 ]
  store i32 %298, ptr %300, align 4, !tbaa !67
  %301 = getelementptr inbounds i32, ptr %299, i64 -1
  %302 = load i32, ptr %301, align 4, !tbaa !67
  %303 = icmp slt i32 %282, %302
  br i1 %303, label %297, label %304, !llvm.loop !302

304:                                              ; preds = %297, %294, %287, %285
  %305 = phi ptr [ %0, %285 ], [ %0, %287 ], [ %280, %294 ], [ %299, %297 ]
  store i32 %282, ptr %305, align 4, !tbaa !67
  %306 = getelementptr inbounds i32, ptr %280, i64 1
  %307 = icmp eq ptr %306, %1
  br i1 %307, label %308, label %279, !llvm.loop !304

308:                                              ; preds = %304, %270, %274, %253
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_(ptr %0, ptr %1, ptr noundef nonnull align 1 dereferenceable(1) %2) local_unnamed_addr #3 comdat {
  %4 = ptrtoint ptr %1 to i64
  %5 = ptrtoint ptr %0 to i64
  %6 = sub i64 %4, %5
  %7 = freeze i64 %6
  %8 = icmp slt i64 %7, 8
  br i1 %8, label %101, label %9

9:                                                ; preds = %3
  %10 = lshr exact i64 %7, 2
  %11 = add nsw i64 %10, -2
  %12 = lshr i64 %11, 1
  %13 = add nsw i64 %10, -1
  %14 = lshr i64 %13, 1
  %15 = and i64 %7, 4
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %9
  %18 = or i64 %11, 1
  %19 = getelementptr inbounds i32, ptr %0, i64 %18
  %20 = getelementptr inbounds i32, ptr %0, i64 %12
  br label %58

21:                                               ; preds = %9, %53
  %22 = phi i64 [ %57, %53 ], [ %12, %9 ]
  %23 = getelementptr inbounds i32, ptr %0, i64 %22
  %24 = load i32, ptr %23, align 4, !tbaa !67
  %25 = icmp sgt i64 %14, %22
  br i1 %25, label %26, label %53

26:                                               ; preds = %21, %26
  %27 = phi i64 [ %36, %26 ], [ %22, %21 ]
  %28 = shl i64 %27, 1
  %29 = add i64 %28, 2
  %30 = getelementptr inbounds i32, ptr %0, i64 %29
  %31 = or i64 %28, 1
  %32 = getelementptr inbounds i32, ptr %0, i64 %31
  %33 = load i32, ptr %30, align 4, !tbaa !67
  %34 = load i32, ptr %32, align 4, !tbaa !67
  %35 = icmp slt i32 %33, %34
  %36 = select i1 %35, i64 %31, i64 %29
  %37 = getelementptr inbounds i32, ptr %0, i64 %36
  %38 = load i32, ptr %37, align 4, !tbaa !67
  %39 = getelementptr inbounds i32, ptr %0, i64 %27
  store i32 %38, ptr %39, align 4, !tbaa !67
  %40 = icmp slt i64 %36, %14
  br i1 %40, label %26, label %41, !llvm.loop !295

41:                                               ; preds = %26
  %42 = icmp sgt i64 %36, %22
  br i1 %42, label %43, label %53

43:                                               ; preds = %41, %50
  %44 = phi i64 [ %46, %50 ], [ %36, %41 ]
  %45 = add nsw i64 %44, -1
  %46 = sdiv i64 %45, 2
  %47 = getelementptr inbounds i32, ptr %0, i64 %46
  %48 = load i32, ptr %47, align 4, !tbaa !67
  %49 = icmp slt i32 %48, %24
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = getelementptr inbounds i32, ptr %0, i64 %44
  store i32 %48, ptr %51, align 4, !tbaa !67
  %52 = icmp sgt i64 %46, %22
  br i1 %52, label %43, label %53, !llvm.loop !296

53:                                               ; preds = %43, %50, %21, %41
  %54 = phi i64 [ %36, %41 ], [ %22, %21 ], [ %46, %50 ], [ %44, %43 ]
  %55 = getelementptr inbounds i32, ptr %0, i64 %54
  store i32 %24, ptr %55, align 4, !tbaa !67
  %56 = icmp eq i64 %22, 0
  %57 = add nsw i64 %22, -1
  br i1 %56, label %101, label %21, !llvm.loop !305

58:                                               ; preds = %17, %96
  %59 = phi i64 [ %100, %96 ], [ %12, %17 ]
  %60 = getelementptr inbounds i32, ptr %0, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !67
  %62 = icmp sgt i64 %14, %59
  br i1 %62, label %63, label %78

63:                                               ; preds = %58, %63
  %64 = phi i64 [ %73, %63 ], [ %59, %58 ]
  %65 = shl i64 %64, 1
  %66 = add i64 %65, 2
  %67 = getelementptr inbounds i32, ptr %0, i64 %66
  %68 = or i64 %65, 1
  %69 = getelementptr inbounds i32, ptr %0, i64 %68
  %70 = load i32, ptr %67, align 4, !tbaa !67
  %71 = load i32, ptr %69, align 4, !tbaa !67
  %72 = icmp slt i32 %70, %71
  %73 = select i1 %72, i64 %68, i64 %66
  %74 = getelementptr inbounds i32, ptr %0, i64 %73
  %75 = load i32, ptr %74, align 4, !tbaa !67
  %76 = getelementptr inbounds i32, ptr %0, i64 %64
  store i32 %75, ptr %76, align 4, !tbaa !67
  %77 = icmp slt i64 %73, %14
  br i1 %77, label %63, label %78, !llvm.loop !295

78:                                               ; preds = %63, %58
  %79 = phi i64 [ %59, %58 ], [ %73, %63 ]
  %80 = icmp eq i64 %79, %12
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  %82 = load i32, ptr %19, align 4, !tbaa !67
  store i32 %82, ptr %20, align 4, !tbaa !67
  br label %83

83:                                               ; preds = %81, %78
  %84 = phi i64 [ %18, %81 ], [ %79, %78 ]
  %85 = icmp sgt i64 %84, %59
  br i1 %85, label %86, label %96

86:                                               ; preds = %83, %93
  %87 = phi i64 [ %89, %93 ], [ %84, %83 ]
  %88 = add nsw i64 %87, -1
  %89 = sdiv i64 %88, 2
  %90 = getelementptr inbounds i32, ptr %0, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !67
  %92 = icmp slt i32 %91, %61
  br i1 %92, label %93, label %96

93:                                               ; preds = %86
  %94 = getelementptr inbounds i32, ptr %0, i64 %87
  store i32 %91, ptr %94, align 4, !tbaa !67
  %95 = icmp sgt i64 %89, %59
  br i1 %95, label %86, label %96, !llvm.loop !296

96:                                               ; preds = %86, %93, %83
  %97 = phi i64 [ %84, %83 ], [ %89, %93 ], [ %87, %86 ]
  %98 = getelementptr inbounds i32, ptr %0, i64 %97
  store i32 %61, ptr %98, align 4, !tbaa !67
  %99 = icmp eq i64 %59, 0
  %100 = add nsw i64 %59, -1
  br i1 %99, label %101, label %58, !llvm.loop !305

101:                                              ; preds = %53, %96, %3
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #29

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #29

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #17

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #29

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #29

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #17

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare ptr @llvm.load.relative.i64(ptr, i64) #30

attributes #0 = { mustprogress nofree nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { inlinehint nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #12 = { mustprogress nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #15 = { mustprogress nofree nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { mustprogress nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { nofree nounwind }
attributes #18 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #20 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { mustprogress nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { noinline noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { noreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { mustprogress nofree nounwind willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #29 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #30 = { nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #31 = { nounwind }
attributes #32 = { noreturn nounwind }
attributes #33 = { builtin nounwind }
attributes #34 = { nounwind allocsize(0) }
attributes #35 = { builtin allocsize(0) }
attributes #36 = { noreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !28, i64 1184}
!6 = !{!"_ZTS4Mesh", !7, i64 0, !10, i64 8, !10, i64 104, !8, i64 200, !8, i64 392, !8, i64 584, !8, i64 600, !26, i64 616, !26, i64 617, !7, i64 620, !7, i64 624, !7, i64 628, !7, i64 632, !7, i64 636, !19, i64 640, !19, i64 648, !27, i64 656, !28, i64 664, !7, i64 672, !29, i64 680, !29, i64 704, !29, i64 728, !29, i64 752, !19, i64 776, !33, i64 784, !29, i64 856, !29, i64 880, !29, i64 904, !29, i64 928, !29, i64 952, !29, i64 976, !29, i64 1000, !29, i64 1024, !36, i64 1048, !36, i64 1072, !36, i64 1096, !7, i64 1120, !7, i64 1124, !7, i64 1128, !7, i64 1132, !7, i64 1136, !7, i64 1140, !7, i64 1144, !7, i64 1148, !7, i64 1152, !20, i64 1160, !20, i64 1168, !20, i64 1176, !28, i64 1184, !28, i64 1192, !28, i64 1200, !28, i64 1208, !28, i64 1216, !28, i64 1224, !28, i64 1232, !28, i64 1240, !28, i64 1248, !28, i64 1256, !28, i64 1264, !28, i64 1272, !28, i64 1280, !28, i64 1288, !28, i64 1296, !29, i64 1304, !19, i64 1328, !19, i64 1336, !19, i64 1344, !19, i64 1352, !19, i64 1360, !19, i64 1368, !19, i64 1376, !19, i64 1384, !19, i64 1392, !19, i64 1400, !19, i64 1408, !36, i64 1416, !36, i64 1440, !36, i64 1464, !36, i64 1488, !36, i64 1512, !36, i64 1536, !7, i64 1560, !7, i64 1564, !29, i64 1568, !29, i64 1592, !29, i64 1616, !29, i64 1640, !29, i64 1664, !29, i64 1688, !29, i64 1712, !29, i64 1736, !29, i64 1760, !29, i64 1784, !29, i64 1808, !29, i64 1832, !29, i64 1856, !29, i64 1880, !29, i64 1904, !29, i64 1928, !29, i64 1952, !29, i64 1976, !29, i64 2000, !29, i64 2024, !29, i64 2048, !29, i64 2072, !29, i64 2096, !29, i64 2120, !29, i64 2144, !29, i64 2168, !29, i64 2192, !29, i64 2216, !29, i64 2240, !29, i64 2264}
!7 = !{!"int", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C++ TBAA"}
!10 = !{!"_ZTS10MallocPlus", !11, i64 0, !21, i64 48}
!11 = !{!"_ZTSSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entrySt4lessIS5_ESaISt4pairIKS5_S7_EEE", !12, i64 0}
!12 = !{!"_ZTSSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE", !13, i64 0}
!13 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE13_Rb_tree_implISE_Lb1EEE", !14, i64 0, !16, i64 8}
!14 = !{!"_ZTSSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE", !15, i64 0}
!15 = !{!"_ZTSSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE"}
!16 = !{!"_ZTSSt15_Rb_tree_header", !17, i64 0, !20, i64 32}
!17 = !{!"_ZTSSt18_Rb_tree_node_base", !18, i64 0, !19, i64 8, !19, i64 16, !19, i64 24}
!18 = !{!"_ZTSSt14_Rb_tree_color", !8, i64 0}
!19 = !{!"any pointer", !8, i64 0}
!20 = !{!"long", !8, i64 0}
!21 = !{!"_ZTSSt3mapIPvP24malloc_plus_memory_entrySt4lessIS0_ESaISt4pairIKS0_S2_EEE", !22, i64 0}
!22 = !{!"_ZTSSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE", !23, i64 0}
!23 = !{!"_ZTSNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE13_Rb_tree_implIS9_Lb1EEE", !24, i64 0, !16, i64 8}
!24 = !{!"_ZTSSt20_Rb_tree_key_compareISt4lessIPvEE", !25, i64 0}
!25 = !{!"_ZTSSt4lessIPvE"}
!26 = !{!"bool", !8, i64 0}
!27 = !{!"float", !8, i64 0}
!28 = !{!"double", !8, i64 0}
!29 = !{!"_ZTSSt6vectorIiSaIiEE", !30, i64 0}
!30 = !{!"_ZTSSt12_Vector_baseIiSaIiEE", !31, i64 0}
!31 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE12_Vector_implE", !32, i64 0}
!32 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!33 = !{!"_ZTS7TKDTree", !34, i64 0, !7, i64 32, !7, i64 36, !19, i64 40, !26, i64 48, !7, i64 52, !19, i64 56, !19, i64 64}
!34 = !{!"_ZTS7TBounds", !35, i64 0, !35, i64 16}
!35 = !{!"_ZTS7TVector", !28, i64 0, !28, i64 8}
!36 = !{!"_ZTSSt6vectorIdSaIdEE", !37, i64 0}
!37 = !{!"_ZTSSt12_Vector_baseIdSaIdEE", !38, i64 0}
!38 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE12_Vector_implE", !39, i64 0}
!39 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!40 = !{!6, !28, i64 1200}
!41 = !{!6, !28, i64 1192}
!42 = !{!6, !28, i64 1208}
!43 = !{!6, !20, i64 1160}
!44 = !{!39, !19, i64 0}
!45 = !{!28, !28, i64 0}
!46 = distinct !{!46, !47}
!47 = !{!"llvm.loop.mustprogress"}
!48 = distinct !{!48, !47}
!49 = distinct !{!49, !47}
!50 = !{!16, !18, i64 0}
!51 = !{!16, !19, i64 8}
!52 = !{!16, !19, i64 16}
!53 = !{!16, !19, i64 24}
!54 = !{!16, !20, i64 32}
!55 = !{!6, !7, i64 1128}
!56 = !{!20, !20, i64 0}
!57 = !{!6, !7, i64 0}
!58 = !{!32, !19, i64 8}
!59 = !{!32, !19, i64 0}
!60 = !{!6, !19, i64 1328}
!61 = !{!6, !19, i64 1336}
!62 = !{!6, !19, i64 1352}
!63 = distinct !{!63, !47}
!64 = !{!39, !19, i64 8}
!65 = !{!6, !19, i64 640}
!66 = !{!6, !19, i64 648}
!67 = !{!7, !7, i64 0}
!68 = !{!6, !7, i64 1124}
!69 = distinct !{!69, !47}
!70 = distinct !{!70, !47}
!71 = !{i64 0, i64 8, !56, i64 8, i64 8, !56}
!72 = !{i64 0, i64 8, !56}
!73 = !{!6, !19, i64 1368}
!74 = !{!6, !19, i64 1376}
!75 = !{!6, !19, i64 1384}
!76 = !{!6, !19, i64 1392}
!77 = distinct !{!77, !47}
!78 = !{!6, !20, i64 1176}
!79 = !{!6, !19, i64 776}
!80 = !{!6, !7, i64 620}
!81 = !{!6, !7, i64 636}
!82 = distinct !{!82, !47}
!83 = distinct !{!83, !47}
!84 = distinct !{!84, !47}
!85 = !{!6, !19, i64 1360}
!86 = distinct !{!86, !47}
!87 = distinct !{!87, !47}
!88 = !{!27, !27, i64 0}
!89 = distinct !{!89, !47}
!90 = distinct !{!90, !47}
!91 = !{!6, !7, i64 1120}
!92 = !{!6, !28, i64 664}
!93 = !{!6, !7, i64 672}
!94 = !{!6, !7, i64 624}
!95 = !{!6, !7, i64 628}
!96 = !{!6, !7, i64 632}
!97 = !{!6, !27, i64 656}
!98 = !{!6, !28, i64 1280}
!99 = !{!6, !28, i64 1288}
!100 = !{!6, !7, i64 1132}
!101 = !{!6, !7, i64 1140}
!102 = !{!6, !7, i64 1136}
!103 = !{!6, !7, i64 1144}
!104 = distinct !{!104, !47}
!105 = distinct !{!105, !47}
!106 = !{!6, !26, i64 616}
!107 = !{!6, !26, i64 617}
!108 = distinct !{!108, !47}
!109 = distinct !{!109, !47}
!110 = !{!32, !19, i64 16}
!111 = distinct !{!111, !47}
!112 = !{!6, !20, i64 1168}
!113 = distinct !{!113, !47}
!114 = distinct !{!114, !47}
!115 = distinct !{!115, !47}
!116 = distinct !{!116, !47}
!117 = !{!34, !28, i64 0}
!118 = !{!34, !28, i64 16}
!119 = !{!34, !28, i64 8}
!120 = !{!34, !28, i64 24}
!121 = distinct !{!121, !47}
!122 = distinct !{!122, !47}
!123 = !{i64 -2147483648, i64 2147483648}
!124 = !{!"branch_weights", i32 1, i32 2000}
!125 = distinct !{!125, !47}
!126 = distinct !{!126, !47}
!127 = distinct !{!127, !47}
!128 = distinct !{!128, !47}
!129 = distinct !{!129, !47}
!130 = !{i8 0, i8 2}
!131 = !{}
!132 = distinct !{!132, !47, !133, !134}
!133 = !{!"llvm.loop.isvectorized", i32 1}
!134 = !{!"llvm.loop.unroll.runtime.disable"}
!135 = distinct !{!135, !47, !133}
!136 = distinct !{!136, !47}
!137 = !{!19, !19, i64 0}
!138 = distinct !{!138, !47}
!139 = distinct !{!139, !47}
!140 = distinct !{!140, !47}
!141 = distinct !{!141, !47}
!142 = distinct !{!142, !47}
!143 = distinct !{!143, !47}
!144 = distinct !{!144, !47}
!145 = distinct !{!145, !47}
!146 = distinct !{!146, !47}
!147 = distinct !{!147, !47}
!148 = !{!"branch_weights", i32 1, i32 1048575}
!149 = distinct !{!149, !47, !133, !134}
!150 = distinct !{!150, !151}
!151 = !{!"llvm.loop.unroll.disable"}
!152 = distinct !{!152, !47, !133}
!153 = distinct !{!153, !47}
!154 = distinct !{!154, !47}
!155 = !{!17, !19, i64 16}
!156 = distinct !{!156, !47}
!157 = !{!17, !19, i64 24}
!158 = distinct !{!158, !47}
!159 = !{!160, !20, i64 32}
!160 = !{!"_ZTS24malloc_plus_memory_entry", !19, i64 0, !20, i64 8, !19, i64 16, !20, i64 24, !20, i64 32, !7, i64 40, !19, i64 48}
!161 = !{!160, !19, i64 0}
!162 = distinct !{!162, !47}
!163 = distinct !{!163, !47}
!164 = distinct !{!164, !47}
!165 = !{!26, !26, i64 0}
!166 = distinct !{!166, !47, !133, !134}
!167 = distinct !{!167, !47, !133}
!168 = distinct !{!168, !47}
!169 = !{!6, !28, i64 1216}
!170 = distinct !{!170, !47}
!171 = distinct !{!171, !47}
!172 = distinct !{!172, !47}
!173 = !{!6, !28, i64 1224}
!174 = distinct !{!174, !47}
!175 = distinct !{!175, !47}
!176 = distinct !{!176, !47}
!177 = !{!6, !28, i64 1232}
!178 = !{!6, !28, i64 1240}
!179 = distinct !{!179, !47}
!180 = !{!6, !28, i64 1248}
!181 = !{!6, !28, i64 1256}
!182 = distinct !{!182, !47}
!183 = !{!6, !28, i64 1264}
!184 = !{!6, !28, i64 1272}
!185 = distinct !{!185, !47}
!186 = distinct !{!186, !47, !133, !134}
!187 = distinct !{!187, !47, !133}
!188 = distinct !{!188, !47}
!189 = distinct !{!189, !47}
!190 = distinct !{!190, !47}
!191 = distinct !{!191, !47}
!192 = distinct !{!192, !47}
!193 = !{!6, !7, i64 1560}
!194 = distinct !{!194, !47}
!195 = !{!6, !7, i64 1564}
!196 = distinct !{!196, !47}
!197 = distinct !{!197, !47}
!198 = distinct !{!198, !47}
!199 = distinct !{!199, !47}
!200 = distinct !{!200, !47}
!201 = distinct !{!201, !47}
!202 = distinct !{!202, !47}
!203 = distinct !{!203, !47}
!204 = distinct !{!204, !47}
!205 = distinct !{!205, !47}
!206 = distinct !{!206, !47}
!207 = distinct !{!207, !47}
!208 = distinct !{!208, !47}
!209 = distinct !{!209, !47}
!210 = distinct !{!210, !47}
!211 = distinct !{!211, !47}
!212 = distinct !{!212, !47}
!213 = distinct !{!213, !47}
!214 = distinct !{!214, !47}
!215 = distinct !{!215, !47}
!216 = distinct !{!216, !47}
!217 = distinct !{!217, !47}
!218 = distinct !{!218, !47}
!219 = distinct !{!219, !47}
!220 = distinct !{!220, !47}
!221 = distinct !{!221, !47, !222}
!222 = !{!"llvm.loop.unswitch.partial.disable"}
!223 = distinct !{!223, !47}
!224 = distinct !{!224, !47}
!225 = distinct !{!225, !47}
!226 = distinct !{!226, !47}
!227 = distinct !{!227, !47}
!228 = distinct !{!228, !47, !222}
!229 = distinct !{!229, !47}
!230 = distinct !{!230, !47}
!231 = distinct !{!231, !47}
!232 = distinct !{!232, !47}
!233 = distinct !{!233, !47}
!234 = distinct !{!234, !47}
!235 = distinct !{!235, !151}
!236 = distinct !{!236, !47}
!237 = distinct !{!237, !151}
!238 = distinct !{!238, !47}
!239 = distinct !{!239, !47}
!240 = !{!241, !241, i64 0}
!241 = !{!"long long", !8, i64 0}
!242 = distinct !{!242, !47}
!243 = !{i64 0, i64 65}
!244 = distinct !{!244, !47}
!245 = distinct !{!245, !47}
!246 = distinct !{!246, !151}
!247 = distinct !{!247, !47}
!248 = distinct !{!248, !47}
!249 = !{!250, !19, i64 0}
!250 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !251, i64 0, !20, i64 8, !8, i64 16}
!251 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !19, i64 0}
!252 = distinct !{!252, !47}
!253 = !{!254, !19, i64 0}
!254 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE11_Alloc_nodeE", !19, i64 0}
!255 = !{!17, !18, i64 0}
!256 = !{!17, !19, i64 8}
!257 = distinct !{!257, !47}
!258 = !{!251, !19, i64 0}
!259 = !{!250, !20, i64 8}
!260 = !{!8, !8, i64 0}
!261 = !{!262, !19, i64 32}
!262 = !{!"_ZTSSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entryE", !250, i64 0, !19, i64 32}
!263 = distinct !{!263, !47}
!264 = !{!39, !19, i64 16}
!265 = distinct !{!265, !47, !133, !134}
!266 = distinct !{!266, !47, !134, !133}
!267 = distinct !{!267, !47, !133, !134}
!268 = distinct !{!268, !47, !134, !133}
!269 = distinct !{!269, !47, !133, !134}
!270 = distinct !{!270, !47, !134, !133}
!271 = distinct !{!271, !47, !133, !134}
!272 = distinct !{!272, !47, !134, !133}
!273 = distinct !{!273, !47}
!274 = distinct !{!274, !47}
!275 = distinct !{!275, !47}
!276 = distinct !{!276, !47}
!277 = distinct !{!277, !47}
!278 = distinct !{!278, !47}
!279 = distinct !{!279, !47}
!280 = distinct !{!280, !47}
!281 = distinct !{!281, !47}
!282 = distinct !{!282, !47}
!283 = distinct !{!283, !47}
!284 = distinct !{!284, !47}
!285 = distinct !{!285, !47}
!286 = distinct !{!286, !47}
!287 = distinct !{!287, !47}
!288 = distinct !{!288, !47}
!289 = distinct !{!289, !47}
!290 = distinct !{!290, !47}
!291 = distinct !{!291, !47}
!292 = distinct !{!292, !47}
!293 = distinct !{!293, !47}
!294 = distinct !{!294, !47}
!295 = distinct !{!295, !47}
!296 = distinct !{!296, !47}
!297 = distinct !{!297, !47}
!298 = distinct !{!298, !47}
!299 = distinct !{!299, !47}
!300 = distinct !{!300, !47}
!301 = distinct !{!301, !47}
!302 = distinct !{!302, !47}
!303 = distinct !{!303, !47}
!304 = distinct !{!304, !47}
!305 = distinct !{!305, !47}
